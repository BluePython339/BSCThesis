sub_40115c
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esi eax
inc esp
add [ eax ] al
add [ eax ] al
add eax 0xb4000800
dec edi
inc eax
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 2 + 0x10040 ] bh
or [ eax ] al
pop ebx
push eax
inc eax
add [ 0x1d000800 ] al
push ecx
inc eax
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 2 ] ah
inc eax
add [ 0xffffffffd1000800 ] al
push edx
inc eax
add [ eax ] al
add [ eax ] al
add cl bl
push edx
inc eax
add [ 0xffffffffbd000800 ] al
push ebx
inc eax
add [ eax ] al
add [ eax ] al
add ah al
push ebx
inc eax
add [ eax ] al
add [ eax + 0x42 ] dh
add [ eax + 0x543e8 ] al
or [ eax ] al
pop esp
push edi
inc eax
add [ eax ] al
add [ eax ] al
add [ edi + edx * 2 + 0x40 ] ah
add [ edi ] ah
add [ eax + eax ] dl
pop edx
inc eax
add [ ecx ] ch
pop ebx
inc eax
add cl bh
pop edx
inc eax
add [ eax ] al
add [ eax ] al
add al ah
adc [ eax ] eax
or eax [ eax ]
add [ eax ] al
add eax 0xc004058
pop eax
inc eax
add [ edx ] bl
pop eax
inc eax
add [ ecx ] ch
pop eax
inc eax
add bl cl
pop ecx
inc eax
add [ eax + 0x5a ] cl
inc eax
add [ ecx - 0x6cffbfa6 ] dl
pop edx
inc eax
add ah cl
pop edx
inc eax
add ah cl
pop edx
inc eax
add bl ch
pop edx
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] ah
add [ eax + eax ] dl
mov [ 0xffffffffd900405e ] al
pop esi
inc eax
add [ ecx + 0x405e ] ch
add [ eax ] al
add [ eax ] dh
adc al [ eax ]
or eax [ eax ]
add [ eax ] al
mov ch 0x5b
inc eax
add [ ebx + ebx * 2 + 0x5bca0040 ] bh
inc eax
add cl bl
pop ebx
inc eax
add [ ebx + 0x5d ] bh
inc eax
add al bh
pop ebp
inc eax
add [ ecx + 0x5e ] al
inc eax
add [ ebx + 0x5e ] al
inc eax
add [ esi + ebx * 2 + 0x40 ] bh
add [ esi + ebx * 2 + 0x40 ] bh
add [ ebx + 0x405e ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] ah
add [ eax + eax ] dl
and [ edx + 0x40 ] 0x4062b800
add [ eax + 0x4062 ] cl
add [ eax ] al
add [ eax + 0xf004012 ] al
add [ eax ] al
add [ ebp + 0x5f ] ah
inc eax
add [ edi + ebx * 2 + 0x40 ] ch
add [ edi + ebx * 2 + 0x40 ] bh
add [ edx - 0x63ffbfa1 ] cl
pop edi
inc eax
add [ edx - 0x55ffbfa1 ] ch
pop edi
inc eax
add [ ecx + 0x5a00405f ] bh
popad
inc eax
add bh dl
popad
inc eax
add [ eax ] ah
bound eax [ eax ]
and ah [ edx + 0x40 ]
add [ ebx + 0x62 ] bl
inc eax
add [ ebx + 0x62 ] bl
inc eax
add [ edx + 0x62 ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] ah
add [ eax + eax ] dl
popad
inc ax
add [ eax + 0x68004066 ] bl
inc ax
add [ eax ] al
add [ eax ] al
add al ah
adc al [ eax ]
sldt [ eax ]
add [ ebp + 0x63 ] al
inc eax
add [ ebx + 0x40 ] cl
add [ ebx + 0x40 ] bl
add [ edx + 0x63 ] ch
inc eax
add [ ebx + 0x40 ] bh
add [ edx - 0x75ffbf9d ] cl
arpl [ eax ] ax
cdq
arpl [ eax ] ax
cmp ah [ ebp + 0x40 ]
add [ edi + 0x4065 ] dh
inc ax
add [ edx ] al
inc ax
add [ ebx ] bh
inc ax
add [ ebx ] bh
inc ax
add [ edx + 0x66 ] bl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] al
add [ eax ] cl
add ah cl
imul eax [ eax ] r-xdata
shr [ ecx + 0x40 ] cl
add [ esi ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
insd
inc eax
add [ eax + 0x400406d ] dl
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
0x2600406e 0x1400
sub_40135b
add [ eax ] al
add [ eax ] al
add [ ebp + 0x7000408f ] bh
pop [ eax ]
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
inc eax
add cl bh
outsd
inc eax
add [ eax ] cl
jo r-xdata
inc eax
add [ ebx ] dh
add [ eax ] al
add [ esi + 0x6f ] cl
inc eax
add [ ebp + 0x6f ] dl
inc eax
add [ ebp + 0x6f ] bh
inc eax
add cl dl
add [ ebp - 0x16ffbf80 ] ah
add [ eax ] r-xdata
lodsb [ esi ]
add [ eax ] 0xffffffc2
add [ edi + 0x70 ] cl
inc eax
add [ eax + esi * 2 + 0x40 ] dl
add [ eax ] 0xffffffc7
add dl al
add dh ah
jno r-xdata
add [ eax ] 0x6b
test [ eax ] al
add [ eax + eax * 2 + 0x4084e700 ] 0x0
add bh al
add dh bh
jno r-xdata
pop es
add [ ebx - 0x7c ] ch
inc eax
add [ ebx - 0x18ffbf7c ] al
test [ eax ] al
add [ edx + esi * 2 ] dl
inc eax
add [ ecx - 0x46ffbf8c ] bh
je r-xdata
xchg [ eax ] al
lea eax [ edi - 0x76adffc0 ]
inc eax
add [ ecx + ecx * 4 + 0x40 ] dl
add [ ecx + ecx * 4 + 0x40 ] dl
add [ eax - 0x77 ] ah
inc eax
add [ edi ] al
add cl cl
je r-xdata
add [ ebp + 0x52004087 ] cl
mov [ eax ] eax
push esp
mov [ eax ] eax
push esp
mov [ eax ] eax
pushad
mov [ eax ] eax
jbe r-xdata
add [ esi + esi * 2 + 0x40 ] bl
add [ eax + edi * 2 ] bl
inc eax
add [ edi + 0x79 ] dl
inc eax
add [ ecx + 0x400407a ] ah
jge r-xdata
add [ ecx + 0x70 ] dh
inc eax
add ah cl
jo r-xdata
inc eax
add [ ebx - 0x77 ] bh
inc eax
add ch ch
mov [ eax ] eax
or eax 0x9300408b
mov [ eax ] es
fimul [ ebp - 0x70e1ffc0 ]
inc eax
add [ edx ] ch
pop [ eax ]
sub al 0x8f
inc eax
add [ edi + ecx * 4 ] ch
inc eax
add [ eax ] bh
pop [ eax ]
cmp [ edi - 0x70a8ffc0 ] cl
inc eax
add [ eax - 0x71 ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
inc eax
add al 0x0
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
scasb [ edi ]
xchg ebp eax
inc eax
add [ eax + eax ] cl
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
iretd
add [ esi - 0x77 ] dh
add [ edi + 0x7f ] ah
inc eax
sub_4017ce
xor [ eax ] eax
pop es
inc eax
xchg ebx eax
and ch dl
lahf
dec ebp
mov bh 0xfe
xor ah [ esi + esi + 0x60 ]
cmc
and ebp edi
xor al 0x9d
inc ecx
xchg ebp eax
outsb
dec ebx
mov ch 0xb2
inc ebx
and eax 0xda32b4bb
cmp cl [ edi - 0x53 ]
xor ebx [ ecx - 0x48ee309a ]
or al 0x0
stosb [ edi ]
add [ eax - 0x2d ] ah
xchg ebx eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
iretd
sub_401bf0
cmpsd [ esi ] [ edi ]
aam 0xfd
add [ edi + ebx * 8 - 0x1d78ff07 ] bh
inc [ eax ]
mov esp 0xd700ffe9
into
lds eax [ eax ]
fcmove st7
rol [ eax ] 0xd4
into
leave
add bl dl
rol dl 0x1
add dl bl
rol esi cl
add ch bl
aad 0xc9
add bh bl
fmul st1
add al ah
rol ebp cl
add al ah
xlat
0xe500
sub_404a10
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4c
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x1
mov [ ebp - 0x4 ] eax
and esi 0xfffffffe
push esi
mov [ ebp + 0x8 ] esi
mov ecx [ esi ]
call [ ecx + 0x4 ]
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x40 ] ebx
call sub_406aa0
mov edx [ esi ]
push esi
call [ edx + 0x714 ]
cmp eax ebx
jge r-xdata
mov edi [ __vbaHresultCheckObj@IAT ]
mov edi [ __vbaHresultCheckObj@IAT ]
push 0x714
push r-xdata
push esi
push eax
call edi
jmp r-xdata
mov ebx [ rw-data ]
lea ecx [ ebp - 0x24 ]
push ecx
push ebx
mov eax [ ebx ]
call [ eax + 0x14 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
mov edx [ eax ]
mov ebx eax
call [ edx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push 0x14
push r-xdata
push ebx
push eax
call edi
mov edx [ ebp - 0x18 ]
lea ecx [ esi + 0x34 ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
mov edx [ esi ]
push esi
call [ edx + 0x2fc ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call [ __vbaObjSet@IAT ]
mov ebx eax
push 0x0
push ebx
mov ecx [ ebx ]
call [ ecx + 0x5c ]
test eax eax
fnclex
jge r-xdata
push 0x50
push r-xdata
push ebx
push eax
call edi
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
push 0x78
call [ __vbaStrI2@IAT ]
mov edx eax
lea ecx [ ebp - 0x20 ]
call [ __vbaStrMove@IAT ]
mov ebx [ __vbaStrCopy@IAT ]
mov edx r-xdata
lea ecx [ ebp - 0x1c ]
call ebx
mov edx r-xdata
lea ecx [ ebp - 0x18 ]
call ebx
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
push edx
lea ecx [ ebp - 0x18 ]
push eax
lea edx [ ebp - 0x34 ]
push ecx
push edx
call sub_40a4e0
mov ebx [ esi ]
lea eax [ ebp - 0x34 ]
push eax
call [ __vbaR4Var@IAT ]
push ecx
fstp [ esp ]
push esi
call [ ebx + 0x74 ]
test eax eax
fnclex
jge r-xdata
push 0x5c
push r-xdata
push ebx
push eax
call edi
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
push ecx
lea eax [ ebp - 0x18 ]
push edx
push eax
push 0x3
call [ __vbaFreeStrList@IAT ]
add esp 0x10
lea ecx [ ebp - 0x34 ]
call [ __vbaFreeVar@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x74
push r-xdata
push esi
push eax
call edi
mov ebx [ rw-data ]
lea edx [ ebp - 0x24 ]
push edx
push ebx
mov ecx [ ebx ]
call [ ecx + 0x18 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x3c ]
push edx
push eax
mov ecx [ eax ]
mov ebx eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push 0x18
push r-xdata
push ebx
push eax
call edi
fld [ ebp - 0x3c ]
fsub [ r-xdata ]
push ecx
fnstsw ax
test al 0xd
jne r-xdata
push 0x50
push r-xdata
push ebx
push eax
call edi
jmp r-xdata
fstp [ esp ]
call [ __vbaStrR4@IAT ]
mov edx eax
lea ecx [ ebp - 0x20 ]
call [ __vbaStrMove@IAT ]
mov ebx [ __vbaStrCopy@IAT ]
mov edx r-xdata
lea ecx [ ebp - 0x1c ]
call ebx
mov edx r-xdata
lea ecx [ ebp - 0x18 ]
call ebx
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x1c ]
push eax
lea edx [ ebp - 0x18 ]
push ecx
lea eax [ ebp - 0x34 ]
push edx
push eax
call sub_40a4e0
mov ebx [ esi ]
lea ecx [ ebp - 0x34 ]
push ecx
call [ __vbaR4Var@IAT ]
push ecx
fstp [ esp ]
push esi
call [ ebx + 0x7c ]
test eax eax
fnclex
jge r-xdata
jmp [ __vbaFPException@IAT ]
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
push edx
lea ecx [ ebp - 0x18 ]
push eax
push ecx
push 0x3
call [ __vbaFreeStrList@IAT ]
add esp 0x10
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x34 ]
call [ __vbaFreeVar@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x7c
push r-xdata
push esi
push eax
call edi
mov ebx [ rw-data ]
lea eax [ ebp - 0x24 ]
push eax
push ebx
mov edx [ ebx ]
call [ edx + 0x18 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x40 ]
push edx
push eax
mov ecx [ eax ]
mov ebx eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push 0x18
push r-xdata
push ebx
push eax
call edi
mov eax [ esi ]
lea ecx [ ebp - 0x3c ]
push ecx
push esi
call [ eax + 0x78 ]
test eax eax
fnclex
jge r-xdata
push 0x50
push r-xdata
push ebx
push eax
call edi
fld [ ebp - 0x3c ]
fcomp [ ebp - 0x40 ]
fnstsw ax
test ah 0x41
jne r-xdata
push 0x78
push r-xdata
push esi
push eax
call edi
xor ebx ebx
mov ebx 0x1
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edx [ esi ]
lea eax [ ebp - 0x40 ]
push eax
push esi
call [ edx + 0x88 ]
test eax eax
fnclex
jge r-xdata
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
neg ebx
test bx bx
je r-xdata
mov ebx [ rw-data ]
lea eax [ ebp - 0x24 ]
push eax
push ebx
mov edx [ ebx ]
call [ edx + 0x18 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x88
push r-xdata
push esi
push eax
call edi
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x40 ]
push edx
push eax
mov ecx [ eax ]
mov ebx eax
call [ ecx + 0x98 ]
test eax eax
fnclex
jge r-xdata
push 0x18
push r-xdata
push ebx
push eax
call edi
mov ebx [ rw-data ]
lea edx [ ebp - 0x24 ]
push edx
push ebx
mov ecx [ ebx ]
call [ ecx + 0x18 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ esi ]
lea ecx [ ebp - 0x3c ]
push ecx
push esi
call [ eax + 0x70 ]
test eax eax
fnclex
jge r-xdata
push 0x98
push r-xdata
push ebx
push eax
call edi
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x3c ]
push edx
push eax
mov ecx [ eax ]
mov ebx eax
call [ ecx + 0x50 ]
test eax eax
fnclex
jge r-xdata
push 0x18
push r-xdata
push ebx
push eax
call edi
fld [ ebp - 0x3c ]
fcomp [ ebp - 0x40 ]
fnstsw ax
test ah 0x41
jne r-xdata
push 0x70
push r-xdata
push esi
push eax
call edi
fld [ ebp - 0x3c ]
fsub [ ebp - 0x40 ]
mov ecx [ esi ]
push ecx
fnstsw ax
test al 0xd
jne r-xdata
push 0x50
push r-xdata
push ebx
push eax
call edi
xor eax eax
mov eax 0x1
jmp r-xdata
fstp [ esp ]
push esi
call [ ecx + 0x7c ]
test eax eax
fnclex
jge r-xdata
lea edx [ ebp - 0x24 ]
push esi
push edx
mov [ ebp - 0x38 ] 0x1
call [ __vbaObjSetAddref@IAT ]
lea eax [ ebp - 0x38 ]
lea ecx [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x34 ]
push ecx
push edx
call sub_40a900
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x34 ]
call [ __vbaFreeVar@IAT ]
mov [ ebp - 0x4 ] 0x0
fwait
push sub_404fe7
jmp r-xdata
mov edx [ esi ]
lea eax [ ebp - 0x40 ]
push eax
push esi
call [ edx + 0x80 ]
test eax eax
fnclex
jge r-xdata
neg eax
lea ecx [ ebp - 0x24 ]
mov bx ax
call [ __vbaFreeObj@IAT ]
test bx bx
je r-xdata
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
push 0x7c
push r-xdata
push esi
push eax
call edi
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x80
push r-xdata
push esi
push eax
call edi
mov ebx [ rw-data ]
lea edx [ ebp - 0x24 ]
push edx
push ebx
mov ecx [ ebx ]
call [ ecx + 0x18 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x3c ]
push edx
push eax
mov ecx [ eax ]
mov ebx eax
call [ ecx + 0x98 ]
test eax eax
fnclex
jge r-xdata
push 0x18
push r-xdata
push ebx
push eax
call edi
fld [ ebp - 0x3c ]
fsub [ ebp - 0x40 ]
mov ecx [ esi ]
push ecx
fnstsw ax
test al 0xd
jne r-xdata
push 0x98
push r-xdata
push ebx
push eax
call edi
fstp [ esp ]
push esi
call [ ecx + 0x74 ]
test eax eax
fnclex
jge r-xdata
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
push 0x74
push r-xdata
push esi
push eax
call edi
sub_404fbc
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x1c ]
push eax
lea edx [ ebp - 0x18 ]
push ecx
push edx
push 0x3
call [ __vbaFreeStrList@IAT ]
add esp 0x10
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x34 ]
call [ __vbaFreeVar@IAT ]
retn
sub_404fe7
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_405010
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x1
mov [ ebp - 0x4 ] ecx
and al 0xfe
push eax
mov [ ebp + 0x8 ] eax
mov edx [ eax ]
call [ edx + 0x4 ]
call sub_406df0
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_405080
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov edi [ ebp + 0x8 ]
mov eax edi
and eax 0x1
mov [ ebp - 0x4 ] eax
and edi 0xfffffffe
push edi
mov [ ebp + 0x8 ] edi
mov ecx [ edi ]
call [ ecx + 0x4 ]
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov esi [ rw-data ]
lea eax [ ebp - 0x18 ]
push edi
push eax
mov edx [ esi ]
mov [ ebp - 0x2c ] edx
call [ __vbaObjSetAddref@IAT ]
mov ecx [ ebp - 0x2c ]
push eax
push esi
call [ ecx + 0x10 ]
cmp eax ebx
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov [ ebp - 0x4 ] ebx
push sub_40512f
jmp sub_40512e
push 0x10
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
sub_40512f
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_405150
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x1
mov [ ebp - 0x4 ] eax
and esi 0xfffffffe
push esi
mov [ ebp + 0x8 ] esi
mov ecx [ esi ]
call [ ecx + 0x4 ]
xor edi edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x28 ] edi
call sub_403cf4
mov ebx [ __vbaSetSystemError@IAT ]
call ebx
mov edx [ esi ]
lea eax [ ebp - 0x24 ]
push eax
push esi
call [ edx + 0x58 ]
cmp eax edi
fnclex
jge r-xdata
mov edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x28 ]
push ecx
push 0x2
push 0xa1
push edx
mov [ ebp - 0x28 ] edi
call sub_4039c0
call ebx
mov eax [ esi ]
lea ecx [ ebp - 0x24 ]
push ecx
push esi
call [ eax + 0x70 ]
cmp eax edi
fnclex
jge r-xdata
push 0x58
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebp - 0x24 ]
mov ebx [ __vbaStrR4@IAT ]
push edx
call ebx
mov edx eax
lea ecx [ ebp - 0x20 ]
call [ __vbaStrMove@IAT ]
mov edi [ __vbaStrCopy@IAT ]
mov edx r-xdata
lea ecx [ ebp - 0x1c ]
call edi
mov edx r-xdata
lea ecx [ ebp - 0x18 ]
call edi
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x1c ]
push eax
lea edx [ ebp - 0x18 ]
push ecx
push edx
call sub_40a770
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x1c ]
push eax
lea edx [ ebp - 0x18 ]
push ecx
push edx
push 0x3
call [ __vbaFreeStrList@IAT ]
mov eax [ esi ]
add esp 0x10
lea ecx [ ebp - 0x24 ]
push ecx
push esi
call [ eax + 0x78 ]
test eax eax
fnclex
jge r-xdata
push 0x70
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebp - 0x24 ]
push edx
call ebx
mov edx eax
lea ecx [ ebp - 0x20 ]
call [ __vbaStrMove@IAT ]
mov edx r-xdata
lea ecx [ ebp - 0x1c ]
call edi
mov edx r-xdata
lea ecx [ ebp - 0x18 ]
call edi
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x1c ]
push eax
lea edx [ ebp - 0x18 ]
push ecx
push edx
call sub_40a770
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x1c ]
push eax
lea edx [ ebp - 0x18 ]
push ecx
push edx
push 0x3
call [ __vbaFreeStrList@IAT ]
add esp 0x10
mov [ ebp - 0x4 ] 0x0
fwait
push sub_4052f2
jmp sub_4052f1
push 0x78
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
sub_4052f2
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_405320
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov edi [ ebp + 0x8 ]
mov eax edi
and eax 0x1
mov [ ebp - 0x4 ] eax
and edi 0xfffffffe
push edi
mov [ ebp + 0x8 ] edi
mov ecx [ edi ]
call [ ecx + 0x4 ]
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov esi [ rw-data ]
lea eax [ ebp - 0x18 ]
push edi
push eax
mov edx [ esi ]
mov [ ebp - 0x2c ] edx
call [ __vbaObjSetAddref@IAT ]
mov ecx [ ebp - 0x2c ]
push eax
push esi
call [ ecx + 0x10 ]
cmp eax ebx
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
mov [ ebp - 0x4 ] ebx
push sub_4053cf
jmp sub_4053ce
push 0x10
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
sub_4053cf
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4053f0
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x50
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov edi [ ebp + 0x8 ]
mov eax edi
and eax 0x1
mov [ ebp - 0x4 ] eax
and edi 0xfffffffe
push edi
mov [ ebp + 0x8 ] edi
mov ecx [ edi ]
call [ ecx + 0x4 ]
mov edx [ edi ]
xor esi esi
push edi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x34 ] esi
call [ edx + 0x308 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call [ __vbaObjSet@IAT ]
mov ebx eax
lea edx [ ebp - 0x2c ]
push edx
push ebx
mov ecx [ ebx ]
call [ ecx + 0x4c ]
test eax eax
fnclex
jge r-xdata
mov ax [ ebp - 0x2c ]
mov ebx 0x1
sub ax 0x1
mov [ ebp - 0x18 ] ebx
jo r-xdata
push 0x4c
push r-xdata
push ebx
push eax
call [ __vbaHresultCheckObj@IAT ]
call [ __vbaErrorOverflow@IAT ]
nop
nop
nop
nop
push ebp
mov ebp esp
sub esp 0x18
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
mov eax 0x84
call __vbaChkstk
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x14 ] r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
and ecx 0xfffffffe
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0xc ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
push ecx
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x24 ] 0x203
mov [ ebp - 0x4 ] 0x3
push 0xffffffff
call [ __vbaOnError@IAT ]
mov [ ebp - 0x4 ] 0x4
cmp [ rw-data ] 0x0
jne r-xdata
movsx ecx ax
mov [ ebp - 0x50 ] ecx
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
mov [ ebp - 0x8c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x8c ] rw-data
jmp r-xdata
mov eax [ edi ]
push edi
call [ eax + 0x304 ]
lea ecx [ ebp - 0x24 ]
push eax
push ecx
call [ __vbaObjSet@IAT ]
add esi 0x64
mov ebx eax
jo r-xdata
mov edx [ edi ]
push edi
call [ edx + 0x308 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call [ __vbaObjSet@IAT ]
mov esi eax
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx ebx
mov edx [ esi ]
mov [ ebp - 0x5c ] edx
call [ __vbaI2I4@IAT ]
mov edx [ ebp - 0x5c ]
push eax
push esi
call [ edx + 0x40 ]
test eax eax
fnclex
jge r-xdata
mov [ ebp - 0x90 ] 0x0
push 0x40
push r-xdata
mov eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp - 0x64 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x90 ] eax
jmp r-xdata
mov edx [ ebp - 0x8c ]
mov eax [ edx ]
mov ecx [ ebp - 0x8c ]
mov edx [ ecx ]
mov ecx [ edx ]
push eax
call [ ecx + 0x308 ]
push eax
lea edx [ ebp - 0x34 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x60 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp + 0xc ]
mov dx [ ecx ]
push edx
mov eax [ ebp - 0x60 ]
mov ecx [ eax ]
mov edx [ ebp - 0x60 ]
push edx
call [ ecx + 0x40 ]
fnclex
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x0
jge r-xdata
mov [ ebp - 0x60 ] esi
mov edx [ ebx ]
fild [ ebp - 0x60 ]
fstp [ ebp - 0x64 ]
mov eax [ ebp - 0x64 ]
push eax
push ebx
call [ edx + 0x84 ]
test eax eax
fnclex
jge r-xdata
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov ecx [ eax ]
mov esi eax
call [ ecx + 0xb8 ]
test eax eax
fnclex
jge r-xdata
push 0x40
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x94 ] 0x0
push 0xb8
push r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
mov edx [ ebp - 0x6c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x94 ] eax
jmp r-xdata
mov edx [ ebp - 0x38 ]
mov [ ebp - 0x68 ] edx
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x68 ]
mov edx [ ecx ]
mov eax [ ebp - 0x68 ]
push eax
call [ edx + 0xb8 ]
fnclex
mov [ ebp - 0x6c ] eax
cmp [ ebp - 0x6c ] 0x0
jge r-xdata
mov ebx [ __vbaHresultCheckObj@IAT ]
push 0x84
push r-xdata
push ebx
mov ebx [ __vbaHresultCheckObj@IAT ]
push eax
call ebx
jmp r-xdata
mov eax [ ebp - 0x20 ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x20 ]
neg esi
sbb esi esi
neg esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x24 ]
push ecx
push edx
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
test si si
mov esi [ ebp - 0x1c ]
je r-xdata
push 0xb8
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x98 ] 0x0
push 0x1c
push r-xdata
mov ecx [ rw-data ]
push ecx
mov edx [ ebp - 0x70 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x98 ] eax
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x30 ] 0x0
mov ecx [ ebp - 0x88 ]
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x48 ] 0x8
lea edx [ ebp - 0x58 ]
push edx
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx ]
mov eax [ rw-data ]
push eax
call [ edx + 0x1c ]
fnclex
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x70 ] 0x0
jge r-xdata
fld [ ebp - 0x30 ]
fadd [ r-xdata ]
mov edx [ edi ]
push ecx
fnstsw ax
test al 0xd
jne r-xdata
push 0x80
push r-xdata
push esi
push eax
call ebx
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
mov ecx [ edi ]
push edi
call [ ecx + 0x304 ]
lea edx [ ebp - 0x24 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea ecx [ ebp - 0x30 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0x80 ]
test eax eax
fnclex
jge r-xdata
mov ecx [ ebp - 0x18 ]
mov eax 0x1
add eax ecx
jo r-xdata
add esi 0x12c
jo r-xdata
mov [ ebp - 0x9c ] 0x0
push 0x1c
push r-xdata
mov edx [ ebp - 0x60 ]
push edx
mov eax [ ebp - 0x64 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x9c ] eax
jmp r-xdata
push r-xdata
lea eax [ ebp - 0x58 ]
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
call [ __vbaObjSet@IAT ]
lea edx [ ebp - 0x38 ]
push edx
lea eax [ ebp - 0x34 ]
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
lea ecx [ ebp - 0x58 ]
push ecx
lea edx [ ebp - 0x48 ]
push edx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0x5
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x60 ] eax
lea ecx [ ebp - 0x5c ]
push ecx
mov edx [ ebp - 0x60 ]
mov eax [ edx ]
mov ecx [ ebp - 0x60 ]
push ecx
call [ eax + 0x1c ]
fnclex
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x0
jge r-xdata
jmp r-xdata
fstp [ esp ]
push edi
call [ edx + 0x84 ]
test eax eax
fnclex
jge r-xdata
mov ebx eax
mov [ ebp - 0x18 ] ebx
jmp r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x8
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call [ __vbaObjSet@IAT ]
mov [ ebp - 0xa4 ] eax
mov ecx [ ebp - 0xa4 ]
mov edx [ ecx ]
mov eax [ ebp - 0xa4 ]
push eax
call [ edx + 0x48 ]
lea ecx [ ebp - 0x34 ]
call [ __vbaFreeObj@IAT ]
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x28 ]
mov edx [ ecx ]
mov eax [ ebp - 0x28 ]
push eax
call [ edx + 0x58 ]
fnclex
mov [ ebp - 0x60 ] eax
cmp [ ebp - 0x60 ] 0x0
jge r-xdata
xor ecx ecx
cmp [ ebp - 0x5c ] 0x0
sete cl
neg ecx
mov [ ebp - 0x68 ] cx
lea ecx [ ebp - 0x34 ]
call [ __vbaFreeObj@IAT ]
movsx edx [ ebp - 0x68 ]
test edx edx
je r-xdata
jmp [ __vbaFPException@IAT ]
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
mov eax [ edi ]
push edi
call [ eax + 0x310 ]
lea ecx [ ebp - 0x24 ]
push eax
push ecx
call [ __vbaObjSet@IAT ]
mov edx [ edi ]
mov esi eax
lea eax [ ebp - 0x30 ]
push eax
push edi
call [ edx + 0x80 ]
test eax eax
fnclex
jge r-xdata
push 0x84
push r-xdata
push edi
push eax
call ebx
cmp ebx [ ebp - 0x50 ]
jg r-xdata
lea ecx [ ebp - 0x28 ]
call [ __vbaFreeObj@IAT ]
retn
mov [ ebp - 0xa0 ] 0x0
push 0x58
push r-xdata
mov ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp - 0x60 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0xa0 ] eax
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov ecx [ esi ]
push edx
push esi
call [ ecx + 0x7c ]
test eax eax
fnclex
jge r-xdata
push 0x80
push r-xdata
push edi
push eax
call ebx
mov [ ebp - 0x4 ] 0xa
push r-xdata
push 0x0
call [ __vbaCastObj@IAT ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x10 ] 0x0
push sub_405b33
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
mov eax [ edi ]
push edi
call [ eax + 0x30c ]
lea ecx [ ebp - 0x24 ]
push eax
push ecx
call [ __vbaObjSet@IAT ]
mov esi eax
lea eax [ ebp - 0x34 ]
push eax
push esi
mov edx [ esi ]
call [ edx + 0x70 ]
test eax eax
fnclex
jge r-xdata
push 0x7c
push r-xdata
push esi
push eax
call ebx
mov ecx [ edi ]
push edi
call [ ecx + 0x30c ]
lea edx [ ebp - 0x28 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x30 ]
mov esi eax
mov eax [ edi ]
push ecx
push edi
call [ eax + 0x80 ]
test eax eax
fnclex
jge r-xdata
push 0x70
push r-xdata
push esi
push eax
call ebx
fld [ ebp - 0x30 ]
fsub [ ebp - 0x34 ]
mov edx [ esi ]
push ecx
fsub [ r-xdata ]
fnstsw ax
test al 0xd
jne r-xdata
push 0x80
push r-xdata
push edi
push eax
call ebx
fstp [ esp ]
push esi
call [ edx + 0x64 ]
test eax eax
fnclex
jge r-xdata
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x24 ]
push eax
push ecx
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0x0
fwait
push sub_405782
jmp r-xdata
push 0x64
push r-xdata
push esi
push eax
call ebx
retn
sub_405782
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_405af9
lea ecx [ ebp - 0x30 ]
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x38 ]
push edx
lea eax [ ebp - 0x34 ]
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
lea ecx [ ebp - 0x58 ]
push ecx
lea edx [ ebp - 0x48 ]
push edx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
retn
sub_405b33
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
push edx
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x20 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_405b60
push ebp
mov ebp esp
sub esp 0x18
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
mov eax 0x84
call __vbaChkstk
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x14 ] r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
and ecx 0xfffffffe
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0xc ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
push ecx
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x24 ] 0x200
mov [ ebp - 0x4 ] 0x3
push 0xffffffff
call [ __vbaOnError@IAT ]
mov [ ebp - 0x4 ] 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x8c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x8c ] rw-data
jmp r-xdata
mov [ ebp - 0x90 ] 0x0
push 0x40
push r-xdata
mov eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp - 0x64 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x90 ] eax
jmp r-xdata
mov edx [ ebp - 0x8c ]
mov eax [ edx ]
mov ecx [ ebp - 0x8c ]
mov edx [ ecx ]
mov ecx [ edx ]
push eax
call [ ecx + 0x308 ]
push eax
lea edx [ ebp - 0x34 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x60 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp + 0xc ]
mov dx [ ecx ]
push edx
mov eax [ ebp - 0x60 ]
mov ecx [ eax ]
mov edx [ ebp - 0x60 ]
push edx
call [ ecx + 0x40 ]
fnclex
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x0
jge r-xdata
mov [ ebp - 0x94 ] 0x0
push 0xb8
push r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
mov edx [ ebp - 0x6c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x94 ] eax
jmp r-xdata
mov edx [ ebp - 0x38 ]
mov [ ebp - 0x68 ] edx
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ ebp - 0x68 ]
mov edx [ ecx ]
mov eax [ ebp - 0x68 ]
push eax
call [ edx + 0xb8 ]
fnclex
mov [ ebp - 0x6c ] eax
cmp [ ebp - 0x6c ] 0x0
jge r-xdata
mov [ ebp - 0x98 ] 0x0
push 0x1c
push r-xdata
mov ecx [ rw-data ]
push ecx
mov edx [ ebp - 0x70 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x98 ] eax
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x30 ] 0x0
mov ecx [ ebp - 0x88 ]
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x48 ] 0x8
lea edx [ ebp - 0x58 ]
push edx
lea eax [ ebp - 0x48 ]
push eax
mov ecx [ rw-data ]
mov edx [ ecx ]
mov eax [ rw-data ]
push eax
call [ edx + 0x1c ]
fnclex
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x70 ] 0x0
jge r-xdata
mov [ ebp - 0x9c ] 0x0
push 0x1c
push r-xdata
mov edx [ ebp - 0x60 ]
push edx
mov eax [ ebp - 0x64 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x9c ] eax
jmp r-xdata
push r-xdata
lea eax [ ebp - 0x58 ]
push eax
call [ __vbaCastObjVar@IAT ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
call [ __vbaObjSet@IAT ]
lea edx [ ebp - 0x38 ]
push edx
lea eax [ ebp - 0x34 ]
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
lea ecx [ ebp - 0x58 ]
push ecx
lea edx [ ebp - 0x48 ]
push edx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0x5
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x60 ] eax
lea ecx [ ebp - 0x5c ]
push ecx
mov edx [ ebp - 0x60 ]
mov eax [ edx ]
mov ecx [ ebp - 0x60 ]
push ecx
call [ eax + 0x1c ]
fnclex
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x8
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call [ __vbaObjSet@IAT ]
mov [ ebp - 0xa4 ] eax
mov ecx [ ebp - 0xa4 ]
mov edx [ ecx ]
mov eax [ ebp - 0xa4 ]
push eax
call [ edx + 0x48 ]
lea ecx [ ebp - 0x34 ]
call [ __vbaFreeObj@IAT ]
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x28 ]
mov edx [ ecx ]
mov eax [ ebp - 0x28 ]
push eax
call [ edx + 0x58 ]
fnclex
mov [ ebp - 0x60 ] eax
cmp [ ebp - 0x60 ] 0x0
jge r-xdata
xor ecx ecx
cmp [ ebp - 0x5c ] 0x0
sete cl
neg ecx
mov [ ebp - 0x68 ] cx
lea ecx [ ebp - 0x34 ]
call [ __vbaFreeObj@IAT ]
movsx edx [ ebp - 0x68 ]
test edx edx
je r-xdata
mov [ ebp - 0xa0 ] 0x0
push 0x58
push r-xdata
mov ecx [ ebp - 0x28 ]
push ecx
mov edx [ ebp - 0x60 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0xa0 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xa
push r-xdata
push 0x0
call [ __vbaCastObj@IAT ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x10 ] 0x0
push sub_405ee3
jmp sub_405ed9
jmp r-xdata
sub_405ea9
lea ecx [ ebp - 0x30 ]
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x38 ]
push edx
lea eax [ ebp - 0x34 ]
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
lea ecx [ ebp - 0x58 ]
push ecx
lea edx [ ebp - 0x48 ]
push edx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
retn
sub_405ee3
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
push edx
call [ ecx + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x20 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_405f10
push ebp
mov ebp esp
sub esp 0x18
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
mov eax 0x84
call __vbaChkstk
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x14 ] r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
and ecx 0xfffffffe
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0xc ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
push ecx
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp + 0x10 ]
cmp [ edx ] 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x2
jne r-xdata
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x24 ] 0x201
jmp r-xdata
mov [ ebp - 0x4 ] 0x7
push 0xffffffff
call [ __vbaOnError@IAT ]
mov [ ebp - 0x4 ] 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x24 ] 0x204
mov [ ebp - 0x8c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x8c ] rw-data
jmp r-xdata
mov [ ebp - 0x90 ] 0x0
push 0x40
push r-xdata
mov edx [ ebp - 0x60 ]
push edx
mov eax [ ebp - 0x64 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x90 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8c ]
mov edx [ ecx ]
mov eax [ ebp - 0x8c ]
mov ecx [ eax ]
mov eax [ ecx ]
push edx
call [ eax + 0x308 ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x60 ] eax
lea edx [ ebp - 0x38 ]
push edx
mov eax [ ebp + 0xc ]
mov cx [ eax ]
push ecx
mov edx [ ebp - 0x60 ]
mov eax [ edx ]
mov ecx [ ebp - 0x60 ]
push ecx
call [ eax + 0x40 ]
fnclex
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x0
jge r-xdata
mov [ ebp - 0x94 ] 0x0
push 0xb8
push r-xdata
mov eax [ ebp - 0x68 ]
push eax
mov ecx [ ebp - 0x6c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x94 ] eax
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x68 ] ecx
lea edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x68 ]
mov ecx [ eax ]
mov edx [ ebp - 0x68 ]
push edx
call [ ecx + 0xb8 ]
fnclex
mov [ ebp - 0x6c ] eax
cmp [ ebp - 0x6c ] 0x0
jge r-xdata
mov [ ebp - 0x98 ] 0x0
push 0x1c
push r-xdata
mov eax [ rw-data ]
push eax
mov ecx [ ebp - 0x70 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x98 ] eax
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x88 ] edx
mov [ ebp - 0x30 ] 0x0
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x48 ] 0x8
lea ecx [ ebp - 0x58 ]
push ecx
lea edx [ ebp - 0x48 ]
push edx
mov eax [ rw-data ]
mov ecx [ eax ]
mov edx [ rw-data ]
push edx
call [ ecx + 0x1c ]
fnclex
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x70 ] 0x0
jge r-xdata
mov [ ebp - 0x9c ] 0x0
push 0x1c
push r-xdata
mov ecx [ ebp - 0x60 ]
push ecx
mov edx [ ebp - 0x64 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x9c ] eax
jmp r-xdata
push r-xdata
lea edx [ ebp - 0x58 ]
push edx
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x38 ]
push ecx
lea edx [ ebp - 0x34 ]
push edx
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x48 ]
push ecx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0x9
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea edx [ ebp - 0x34 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x60 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov ecx [ ebp - 0x60 ]
mov edx [ ecx ]
mov eax [ ebp - 0x60 ]
push eax
call [ edx + 0x1c ]
fnclex
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xc
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea edx [ ebp - 0x34 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0xa4 ] eax
mov eax [ ebp - 0xa4 ]
mov ecx [ eax ]
mov edx [ ebp - 0xa4 ]
push edx
call [ ecx + 0x48 ]
lea ecx [ ebp - 0x34 ]
call [ __vbaFreeObj@IAT ]
mov [ ebp - 0x4 ] 0xa
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
mov edx [ ebp - 0x28 ]
push edx
call [ ecx + 0x58 ]
fnclex
mov [ ebp - 0x60 ] eax
cmp [ ebp - 0x60 ] 0x0
jge r-xdata
xor eax eax
cmp [ ebp - 0x5c ] 0x0
sete al
neg eax
mov [ ebp - 0x68 ] ax
lea ecx [ ebp - 0x34 ]
call [ __vbaFreeObj@IAT ]
movsx ecx [ ebp - 0x68 ]
test ecx ecx
je r-xdata
mov [ ebp - 0xa0 ] 0x0
push 0x58
push r-xdata
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x60 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0xa0 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xe
push r-xdata
push 0x0
call [ __vbaCastObj@IAT ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x10 ] 0x0
push sub_4062c2
jmp sub_4062b8
jmp r-xdata
sub_406288
lea ecx [ ebp - 0x30 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x38 ]
push ecx
lea edx [ ebp - 0x34 ]
push edx
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x48 ]
push ecx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
retn
sub_4062c2
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
push ecx
call [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x20 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_4062f0
push ebp
mov ebp esp
sub esp 0x18
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
mov eax 0x84
call __vbaChkstk
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x14 ] r-xdata
mov eax [ ebp + 0x8 ]
and eax 0x1
mov [ ebp - 0x10 ] eax
mov ecx [ ebp + 0x8 ]
and ecx 0xfffffffe
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0xc ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
push ecx
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp + 0x10 ]
cmp [ edx ] 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x2
jne r-xdata
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x24 ] 0x202
jmp r-xdata
mov [ ebp - 0x4 ] 0x7
push 0xffffffff
call [ __vbaOnError@IAT ]
mov [ ebp - 0x4 ] 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x24 ] 0x205
mov [ ebp - 0x8c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x8c ] rw-data
jmp r-xdata
mov [ ebp - 0x90 ] 0x0
push 0x40
push r-xdata
mov edx [ ebp - 0x60 ]
push edx
mov eax [ ebp - 0x64 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x90 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8c ]
mov edx [ ecx ]
mov eax [ ebp - 0x8c ]
mov ecx [ eax ]
mov eax [ ecx ]
push edx
call [ eax + 0x308 ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x60 ] eax
lea edx [ ebp - 0x38 ]
push edx
mov eax [ ebp + 0xc ]
mov cx [ eax ]
push ecx
mov edx [ ebp - 0x60 ]
mov eax [ edx ]
mov ecx [ ebp - 0x60 ]
push ecx
call [ eax + 0x40 ]
fnclex
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x0
jge r-xdata
mov [ ebp - 0x94 ] 0x0
push 0xb8
push r-xdata
mov eax [ ebp - 0x68 ]
push eax
mov ecx [ ebp - 0x6c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x94 ] eax
jmp r-xdata
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x68 ] ecx
lea edx [ ebp - 0x30 ]
push edx
mov eax [ ebp - 0x68 ]
mov ecx [ eax ]
mov edx [ ebp - 0x68 ]
push edx
call [ ecx + 0xb8 ]
fnclex
mov [ ebp - 0x6c ] eax
cmp [ ebp - 0x6c ] 0x0
jge r-xdata
mov [ ebp - 0x98 ] 0x0
push 0x1c
push r-xdata
mov eax [ rw-data ]
push eax
mov ecx [ ebp - 0x70 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x98 ] eax
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov [ ebp - 0x88 ] edx
mov [ ebp - 0x30 ] 0x0
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x48 ] 0x8
lea ecx [ ebp - 0x58 ]
push ecx
lea edx [ ebp - 0x48 ]
push edx
mov eax [ rw-data ]
mov ecx [ eax ]
mov edx [ rw-data ]
push edx
call [ ecx + 0x1c ]
fnclex
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x70 ] 0x0
jge r-xdata
mov [ ebp - 0x9c ] 0x0
push 0x1c
push r-xdata
mov ecx [ ebp - 0x60 ]
push ecx
mov edx [ ebp - 0x64 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x9c ] eax
jmp r-xdata
push r-xdata
lea edx [ ebp - 0x58 ]
push edx
call [ __vbaCastObjVar@IAT ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x38 ]
push ecx
lea edx [ ebp - 0x34 ]
push edx
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x48 ]
push ecx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0x9
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea edx [ ebp - 0x34 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x60 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov ecx [ ebp - 0x60 ]
mov edx [ ecx ]
mov eax [ ebp - 0x60 ]
push eax
call [ edx + 0x1c ]
fnclex
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x64 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xc
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea edx [ ebp - 0x34 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0xa4 ] eax
mov eax [ ebp - 0xa4 ]
mov ecx [ eax ]
mov edx [ ebp - 0xa4 ]
push edx
call [ ecx + 0x48 ]
lea ecx [ ebp - 0x34 ]
call [ __vbaFreeObj@IAT ]
mov [ ebp - 0x4 ] 0xa
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
mov edx [ ebp - 0x28 ]
push edx
call [ ecx + 0x58 ]
fnclex
mov [ ebp - 0x60 ] eax
cmp [ ebp - 0x60 ] 0x0
jge r-xdata
xor eax eax
cmp [ ebp - 0x5c ] 0x0
sete al
neg eax
mov [ ebp - 0x68 ] ax
lea ecx [ ebp - 0x34 ]
call [ __vbaFreeObj@IAT ]
movsx ecx [ ebp - 0x68 ]
test ecx ecx
je r-xdata
mov [ ebp - 0xa0 ] 0x0
push 0x58
push r-xdata
mov eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x60 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0xa0 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xe
push r-xdata
push 0x0
call [ __vbaCastObj@IAT ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x10 ] 0x0
push sub_4066a2
jmp sub_406698
jmp r-xdata
sub_406668
lea ecx [ ebp - 0x30 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x38 ]
push ecx
lea edx [ ebp - 0x34 ]
push edx
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x48 ]
push ecx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
retn
sub_4066a2
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
push ecx
call [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x20 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_4066d0
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x1
mov [ ebp - 0x4 ] eax
and esi 0xfffffffe
push esi
mov [ ebp + 0x8 ] esi
mov ecx [ esi ]
call [ ecx + 0x4 ]
sub esp 0x10
xor edi edi
mov edx esp
mov ecx 0x4008
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x54 ] ecx
mov [ edx ] ecx
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x18 ]
push 0x1
mov [ edx + 0x4 ] ecx
mov ecx [ esi ]
mov [ ebp - 0x4c ] eax
push 0x44
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x48 ]
push esi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x70 ] edi
mov [ edx + 0xc ] eax
call [ ecx + 0x314 ]
lea edx [ ebp - 0x24 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
push eax
call [ __vbaLateIdCall@IAT ]
add esp 0x1c
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
call [ Ordinal_MSVBVM60_598@IAT ]
push 0xa
call sub_4037b0
call [ __vbaSetSystemError@IAT ]
mov ecx [ ebp - 0x18 ]
mov ebx [ __vbaInStr@IAT ]
push 0x1
push ecx
lea eax [ ebp - 0x18 ]
push r-xdata
push edi
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x54 ] 0x4008
call ebx
sub eax 0x1
lea edx [ ebp - 0x54 ]
jo r-xdata
call [ __vbaErrorOverflow@IAT ]
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ __vbaSetSystemError@IAT ]
cmp ebx 0x4a
jne r-xdata
push eax
lea eax [ ebp - 0x34 ]
push edx
push eax
call [ Ordinal_MSVBVM60_617@IAT ]
lea ecx [ ebp - 0x34 ]
lea edx [ ebp - 0x44 ]
push ecx
push edx
call [ Ordinal_MSVBVM60_528@IAT ]
lea eax [ ebp - 0x44 ]
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x1c ]
call [ __vbaStrMove@IAT ]
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0x34 ]
push ecx
push edx
push 0x2
call [ __vbaFreeVarList@IAT ]
mov ecx [ ebp - 0x18 ]
add esp 0xc
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x54 ] 0x4008
push 0x1
push ecx
push r-xdata
push edi
mov [ ebp - 0x4c ] eax
call ebx
mov edx [ ebp - 0x18 ]
mov ebx eax
push edx
call [ __vbaLenBstr@IAT ]
sub eax ebx
lea ecx [ ebp - 0x34 ]
jo r-xdata
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
push esi
push edx
push ebx
push eax
call sub_403a5c
mov esi eax
call edi
mov eax esi
pop edi
pop esi
pop ebx
retn 0x10
mov eax [ rw-data ]
push 0xc
push esi
push eax
call sub_403844
call edi
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x54 ]
push eax
push ecx
call [ Ordinal_MSVBVM60_619@IAT ]
lea edx [ ebp - 0x34 ]
push edx
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x20 ]
call [ __vbaStrMove@IAT ]
lea ecx [ ebp - 0x34 ]
call [ __vbaFreeVar@IAT ]
call [ Ordinal_MSVBVM60_598@IAT ]
mov eax [ ebp - 0x1c ]
mov ebx [ __vbaStrCmp@IAT ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov ecx [ eax + 0x8 ]
push ecx
call sub_406f10
pop edi
pop esi
pop ebx
retn 0x10
mov eax [ ebp - 0x1c ]
push eax
push r-xdata
call ebx
test eax eax
jne r-xdata
mov ecx [ esi ]
push edi
push 0x46
push esi
call [ ecx + 0x314 ]
mov ebx [ __vbaObjSet@IAT ]
lea edx [ ebp - 0x24 ]
push eax
push edx
call ebx
push eax
call [ __vbaLateIdCall@IAT ]
add esp 0xc
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
sub esp 0x10
mov eax [ ebp - 0x20 ]
mov edx esp
mov ecx 0x8
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x4c ] eax
mov [ edx ] ecx
mov ecx [ ebp - 0x50 ]
push 0x1
push 0x47
mov [ edx + 0x4 ] ecx
mov ecx [ esi ]
push esi
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x48 ]
mov [ edx + 0xc ] eax
call [ ecx + 0x314 ]
lea edx [ ebp - 0x24 ]
push eax
push edx
call ebx
push eax
call [ __vbaLateIdCall@IAT ]
add esp 0x1c
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
mov eax [ esi ]
push esi
call [ eax + 0x2fc ]
lea ecx [ ebp - 0x24 ]
push eax
push ecx
call ebx
mov ebx eax
push edi
push ebx
mov edx [ ebx ]
call [ edx + 0x5c ]
cmp eax edi
fnclex
jge r-xdata
mov ecx [ ebp - 0x1c ]
push ecx
push r-xdata
call ebx
test eax eax
jne r-xdata
mov edx [ ebp - 0x20 ]
lea ecx [ esi + 0x34 ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
mov ebx [ __vbaStrCmp@IAT ]
push 0x5c
push r-xdata
push ebx
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call ebx
test eax eax
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
mov [ ebp - 0x4 ] edi
push sub_406a0b
jmp r-xdata
mov edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x70 ]
call [ __vbaStrCopy@IAT ]
mov ebx [ rw-data ]
lea eax [ ebp - 0x24 ]
push esi
push eax
mov edx [ ebx ]
mov [ ebp - 0x7c ] edx
call [ __vbaObjSetAddref@IAT ]
mov ecx [ ebp - 0x7c ]
push eax
push ebx
call [ ecx + 0x10 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov esi [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x70 ]
call esi
lea ecx [ ebp - 0x18 ]
call esi
lea ecx [ ebp - 0x1c ]
call esi
lea ecx [ ebp - 0x20 ]
call esi
retn
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
mov ebx [ __vbaStrCmp@IAT ]
push 0x10
push r-xdata
push ebx
push eax
call [ __vbaHresultCheckObj@IAT ]
sub_406a0b
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_406aa0
push ebp
mov ebp esp
sub esp 0x8
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xb4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] esp
mov [ ebp - 0x4 ] r-xdata
mov ecx 0xc
xor eax eax
lea edi [ ebp - 0x40 ]
xor ebx ebx
[ edi ]
mov ecx 0xc
lea edi [ ebp - 0xb8 ]
[ edi ]
lea eax [ ebp - 0x48 ]
push r-xdata
push eax
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x70 ] ebx
mov [ rw-data ] 0x1
mov [ rw-data ] bx
call [ __vbaStrToAnsi@IAT ]
push eax
call sub_403a14
mov [ ebp - 0x70 ] eax
call [ __vbaSetSystemError@IAT ]
mov ecx [ ebp - 0x70 ]
mov [ rw-data ] ecx
lea ecx [ ebp - 0x48 ]
call [ __vbaFreeStr@IAT ]
push r-xdata
mov [ ebp - 0x40 ] 0x30
call sub_406a90
mov [ ebp - 0x38 ] eax
mov eax [ rw-data ]
cmp eax ebx
jne r-xdata
mov esi [ rw-data ]
lea eax [ ebp - 0x4c ]
push eax
push esi
mov edx [ esi ]
call [ edx + 0x14 ]
cmp eax ebx
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov ebx [ __vbaHresultCheckObj@IAT ]
mov ebx [ __vbaHresultCheckObj@IAT ]
push 0x14
push r-xdata
push esi
push eax
call ebx
jmp r-xdata
mov eax [ ebp - 0x70 ]
mov edi [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x2c ] eax
call edi
mov edx r-xdata
lea ecx [ ebp - 0x18 ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x40 ]
lea edx [ ebp - 0xb8 ]
push ecx
push edx
push r-xdata
call [ __vbaRecUniToAnsi@IAT ]
push eax
call sub_40389c
call [ __vbaSetSystemError@IAT ]
lea eax [ ebp - 0xb8 ]
lea ecx [ ebp - 0x40 ]
push eax
push ecx
push r-xdata
call [ __vbaRecAnsiToUni@IAT ]
lea edx [ ebp - 0xb8 ]
push edx
push r-xdata
call [ __vbaRecDestructAnsi@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x100
push r-xdata
push esi
push eax
call ebx
mov eax [ ebp - 0x4c ]
lea edx [ ebp - 0x70 ]
push edx
push eax
mov ecx [ eax ]
mov esi eax
call [ ecx + 0x100 ]
test eax eax
fnclex
jge r-xdata
mov esi [ rw-data ]
lea ecx [ ebp - 0x4c ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0x14 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ ebp - 0x4c ]
lea ecx [ ebp - 0x70 ]
push ecx
push eax
mov edx [ eax ]
mov esi eax
call [ edx + 0x100 ]
test eax eax
fnclex
jge r-xdata
push 0x14
push r-xdata
push esi
push eax
call ebx
mov edx [ ebp - 0x70 ]
push 0x0
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x80000000
push 0x0
lea eax [ ebp - 0x48 ]
push r-xdata
push eax
call [ __vbaStrToAnsi@IAT ]
push eax
push 0x8
call sub_403930
mov esi eax
call [ __vbaSetSystemError@IAT ]
lea ecx [ ebp - 0x48 ]
mov [ rw-data ] esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x4c ]
call edi
push r-xdata
call [ __vbaNew@IAT ]
push eax
push rw-data
call [ __vbaObjSet@IAT ]
mov eax [ rw-data ]
lea edx [ ebp - 0x70 ]
mov [ rw-data ] 0x0
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x24 ]
test eax eax
fnclex
jge r-xdata
push 0x100
push r-xdata
push esi
push eax
call ebx
mov edx [ ebp - 0x70 ]
mov edi 0x1
mov [ ebp - 0xc0 ] edx
mov esi edi
mov ecx [ rw-data ]
push 0x24
push r-xdata
push ecx
push eax
call ebx
mov eax [ rw-data ]
push 0x0
push 0x0
push eax
push 0xffff
call sub_4039c0
call [ __vbaSetSystemError@IAT ]
push sub_406dce
jmp r-xdata
mov eax [ rw-data ]
lea edx [ ebp - 0x5c ]
mov [ ebp - 0x54 ] 0x1
mov [ ebp - 0x5c ] 0x2
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x28 ]
test eax eax
fnclex
jge r-xdata
lea ecx [ ebp - 0xb8 ]
push ecx
push r-xdata
call [ __vbaRecDestructAnsi@IAT ]
lea edx [ ebp - 0x40 ]
push edx
push r-xdata
call [ __vbaRecDestruct@IAT ]
retn
lea ecx [ ebp - 0x5c ]
call [ __vbaFreeVar@IAT ]
mov edx edi
add edx esi
jo r-xdata
mov ecx [ rw-data ]
push 0x28
push r-xdata
push ecx
push eax
call ebx
call [ __vbaErrorOverflow@IAT ]
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov esi edx
jmp r-xdata
cmp esi [ ebp - 0xc0 ]
jg r-xdata
sub_406df0
push ebp
mov ebp esp
sub esp 0x8
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push esi
push edi
mov [ ebp - 0x8 ] esp
mov [ ebp - 0x4 ] r-xdata
mov eax [ rw-data ]
xor edi edi
push eax
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] edi
call sub_403978
mov ebx [ __vbaSetSystemError@IAT ]
call ebx
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
lea edx [ ebp - 0x18 ]
push edx
push esi
mov ecx [ esi ]
call [ ecx + 0x14 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov ecx [ eax ]
mov esi eax
call [ ecx + 0x100 ]
cmp eax edi
fnclex
jge r-xdata
push 0x14
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x14 ]
push eax
push r-xdata
push ecx
call [ __vbaStrToAnsi@IAT ]
push eax
call sub_4038e8
call ebx
lea ecx [ ebp - 0x14 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
push r-xdata
push edi
call [ __vbaCastObj@IAT ]
push eax
push rw-data
call [ __vbaObjSet@IAT ]
push sub_406efe
jmp sub_406efd
push 0x100
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
sub_406f10
push ebp
mov ebp esp
sub esp 0x18
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
mov eax 0x2f4
call __vbaChkstk
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x2
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0x4
jo r-xdata
call [ __vbaErrorOverflow@IAT ]
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
call sub_403844
call [ __vbaSetSystemError@IAT ]
mov [ ebp - 0x4 ] 0x3
push 0x58
mov edx [ ebp + 0x8 ]
add edx 0x8
jo r-xdata
push edx
lea eax [ ebp - 0xbc ]
push eax
lea ecx [ ebp - 0x1cc ]
push ecx
push r-xdata
call [ __vbaRecUniToAnsi@IAT ]
push eax
call sub_403844
call [ __vbaSetSystemError@IAT ]
lea edx [ ebp - 0x1cc ]
push edx
lea eax [ ebp - 0xbc ]
push eax
push r-xdata
call [ __vbaRecAnsiToUni@IAT ]
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0xb4 ]
push ecx
mov edx [ ebp - 0xb8 ]
push edx
call sub_4095f0
mov edx eax
lea ecx [ ebp - 0xc8 ]
call [ __vbaStrMove@IAT ]
mov [ ebp - 0x4 ] 0x5
push 0xffffffff
call [ __vbaOnError@IAT ]
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0xc4 ]
mov [ ebp - 0x1d0 ] eax
mov ecx [ ebp - 0x1d0 ]
mov [ ebp - 0x204 ] ecx
cmp [ ebp - 0x204 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x8
push r-xdata
call [ __vbaNew@IAT ]
push eax
lea edx [ ebp - 0x24 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x4 ] 0x9
mov eax [ ebp + 0x8 ]
add eax 0x8
jo r-xdata
cmp [ ebp - 0x204 ] 0x1
je r-xdata
push eax
mov ecx [ ebp - 0x24 ]
mov edx [ ecx ]
mov eax [ ebp - 0x24 ]
push eax
call [ edx + 0x1c ]
fnclex
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x1c
lea edx [ ebp - 0xc8 ]
mov [ ebp - 0x108 ] edx
mov [ ebp - 0x110 ] 0x4008
lea eax [ ebp - 0xf0 ]
push eax
lea ecx [ ebp - 0x110 ]
push ecx
mov edx [ rw-data ]
mov eax [ edx ]
mov ecx [ rw-data ]
push ecx
call [ eax + 0x1c ]
fnclex
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jge r-xdata
cmp [ ebp - 0x204 ] 0x2
je r-xdata
mov [ ebp - 0x208 ] 0x0
push 0x1c
push r-xdata
mov ecx [ ebp - 0x24 ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x208 ] eax
jmp r-xdata
mov [ ebp - 0x2bc ] 0x0
push 0x1c
push r-xdata
mov edx [ rw-data ]
push edx
mov eax [ ebp - 0x150 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2bc ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x27
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x110 ] 0x4008
lea edx [ ebp - 0x110 ]
push edx
mov eax [ rw-data ]
mov ecx [ eax ]
mov edx [ rw-data ]
push edx
call [ ecx + 0x28 ]
fnclex
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jge r-xdata
jmp r-xdata
mov [ ebp - 0x20c ] 0x0
push 0x20
push r-xdata
mov edx [ rw-data ]
push edx
mov eax [ ebp - 0x150 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x20c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xa
mov [ ebp - 0xf8 ] 0x80020004
mov [ ebp - 0x100 ] 0xa
mov [ ebp - 0xe8 ] 0x80020004
mov [ ebp - 0xf0 ] 0xa
lea eax [ ebp - 0xc8 ]
mov [ ebp - 0x118 ] eax
mov [ ebp - 0x120 ] 0x4008
mov ecx [ ebp - 0x24 ]
push ecx
lea edx [ ebp - 0xd4 ]
push edx
call [ __vbaObjSetAddref@IAT ]
lea eax [ ebp - 0xd4 ]
mov [ ebp - 0x108 ] eax
mov [ ebp - 0x110 ] 0x4009
lea ecx [ ebp - 0x100 ]
push ecx
lea edx [ ebp - 0xf0 ]
push edx
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x110 ]
push ecx
mov edx [ rw-data ]
mov eax [ edx ]
mov ecx [ rw-data ]
push ecx
call [ eax + 0x20 ]
fnclex
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jge r-xdata
push edx
mov eax [ ebp - 0x174 ]
mov ecx [ eax ]
mov edx [ ebp - 0x174 ]
push edx
call [ ecx + 0x1c ]
fnclex
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jge r-xdata
push r-xdata
lea ecx [ ebp - 0xf0 ]
push ecx
call [ __vbaCastObjVar@IAT ]
push eax
lea edx [ ebp - 0x24 ]
push edx
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0xf0 ]
call [ __vbaFreeVar@IAT ]
mov [ ebp - 0x4 ] 0x1d
mov eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x174 ]
push ecx
call [ __vbaObjSetAddref@IAT ]
mov [ ebp - 0x4 ] 0x1e
mov edx [ ebp + 0x8 ]
add edx 0x8
jo r-xdata
mov [ ebp - 0x2e8 ] 0x0
push 0x28
push r-xdata
mov eax [ rw-data ]
push eax
mov ecx [ ebp - 0x150 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2e8 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x31
push r-xdata
push 0x0
call [ __vbaCastObj@IAT ]
push eax
lea edx [ ebp - 0x24 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x4 ] 0x32
mov [ ebp - 0xc0 ] 0x1
fwait
push sub_408fec
jmp r-xdata
mov [ ebp - 0x4 ] 0xf
mov [ rw-data ] 0x0
mov [ ebp - 0x4 ] 0x10
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xd
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov ecx [ ebp - 0xd4 ]
push ecx
call [ __vbaCastObj@IAT ]
push eax
lea edx [ ebp - 0x24 ]
push edx
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0xd4 ]
call [ __vbaFreeObj@IAT ]
lea eax [ ebp - 0x100 ]
push eax
lea ecx [ ebp - 0xf0 ]
push ecx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0xb
mov edx [ ebp - 0x24 ]
push edx
lea eax [ ebp - 0x170 ]
push eax
call [ __vbaObjSetAddref@IAT ]
mov [ ebp - 0x4 ] 0xc
movsx ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov [ ebp - 0x2c0 ] 0x0
push 0x1c
push r-xdata
mov eax [ ebp - 0x174 ]
push eax
mov ecx [ ebp - 0x150 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2c0 ] eax
jmp r-xdata
mov [ ebp - 0x2ec ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2ec ] rw-data
jmp r-xdata
mov [ ebp - 0x4 ] 0x28
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x174 ]
push eax
lea ecx [ ebp - 0x170 ]
push ecx
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0xc8 ]
call [ __vbaFreeStr@IAT ]
retn
mov [ ebp - 0x228 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x228 ] rw-data
jmp r-xdata
mov [ ebp - 0x210 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x210 ] rw-data
jmp r-xdata
mov [ ebp - 0x2c4 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2c4 ] rw-data
jmp r-xdata
mov [ ebp - 0x4 ] 0x1f
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2f0 ] 0x0
push 0x4c
push r-xdata
mov ecx [ ebp - 0x150 ]
push ecx
mov edx [ ebp - 0x154 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2f0 ] eax
jmp r-xdata
mov edx [ ebp - 0x2ec ]
mov eax [ edx ]
mov ecx [ ebp - 0x2ec ]
mov edx [ ecx ]
mov ecx [ edx ]
push eax
call [ ecx + 0x308 ]
push eax
lea edx [ ebp - 0xd4 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x150 ] eax
lea eax [ ebp - 0x144 ]
push eax
mov ecx [ ebp - 0x150 ]
mov edx [ ecx ]
mov eax [ ebp - 0x150 ]
push eax
call [ edx + 0x4c ]
fnclex
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x154 ] 0x0
jge r-xdata
mov [ ebp - 0x22c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x22c ] rw-data
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov ecx [ eax ]
mov [ ebp - 0x158 ] ecx
cmp [ rw-data ] 0x0
jne r-xdata
push ecx
mov edx [ ebp - 0x150 ]
mov eax [ edx ]
mov ecx [ ebp - 0x150 ]
push ecx
call [ eax + 0x40 ]
fnclex
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x154 ] 0x0
jge r-xdata
mov edx [ ebp - 0x210 ]
mov eax [ edx ]
mov ecx [ ebp - 0x210 ]
mov edx [ ecx ]
mov ecx [ edx ]
push eax
call [ ecx + 0x308 ]
push eax
lea edx [ ebp - 0xdc ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x150 ] eax
lea eax [ ebp - 0xe0 ]
push eax
mov cx [ rw-data ]
sub cx 0x1
jo r-xdata
mov [ ebp - 0x2c8 ] 0x0
push 0x4c
push r-xdata
mov ecx [ ebp - 0x150 ]
push ecx
mov edx [ ebp - 0x154 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2c8 ] eax
jmp r-xdata
mov edx [ ebp - 0x2c4 ]
mov eax [ edx ]
mov ecx [ ebp - 0x2c4 ]
mov edx [ ecx ]
mov ecx [ edx ]
push eax
call [ ecx + 0x308 ]
push eax
lea edx [ ebp - 0xd4 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x150 ] eax
lea eax [ ebp - 0x144 ]
push eax
mov ecx [ ebp - 0x150 ]
mov edx [ ecx ]
mov eax [ ebp - 0x150 ]
push eax
call [ edx + 0x4c ]
fnclex
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x154 ] 0x0
jge r-xdata
movsx ecx ax
mov [ ebp - 0x1e0 ] ecx
mov [ ebp - 0x1dc ] 0x1
mov [ ebp - 0xcc ] 0x1
lea ecx [ ebp - 0xd4 ]
call [ __vbaFreeObj@IAT ]
jmp r-xdata
mov ax [ ebp - 0x144 ]
sub ax 0x1
jo r-xdata
mov [ ebp - 0x230 ] 0x0
push 0x40
push r-xdata
mov edx [ ebp - 0x150 ]
push edx
mov eax [ ebp - 0x154 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x230 ] eax
jmp r-xdata
mov edx [ ebp - 0x22c ]
mov eax [ edx ]
mov ecx [ ebp - 0x22c ]
mov edx [ ecx ]
mov ecx [ edx ]
push eax
call [ ecx + 0x308 ]
push eax
lea edx [ ebp - 0xd4 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x150 ] eax
lea eax [ ebp - 0xd8 ]
push eax
mov cx [ rw-data ]
push ecx
mov edx [ ebp - 0x150 ]
mov eax [ edx ]
mov ecx [ ebp - 0x150 ]
push ecx
call [ eax + 0x40 ]
fnclex
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x154 ] 0x0
jge r-xdata
mov [ ebp - 0x214 ] 0x0
push 0x40
push r-xdata
mov edx [ ebp - 0x150 ]
push edx
mov eax [ ebp - 0x154 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x214 ] eax
jmp r-xdata
movsx ecx ax
mov [ ebp - 0x1d8 ] ecx
mov [ ebp - 0x1d4 ] 0x1
mov [ ebp - 0xcc ] 0x1
lea ecx [ ebp - 0xd4 ]
call [ __vbaFreeObj@IAT ]
jmp r-xdata
mov ax [ ebp - 0x144 ]
sub ax 0x1
jo r-xdata
mov eax [ ebp - 0xcc ]
cmp eax [ ebp - 0x1e0 ]
jg r-xdata
mov [ ebp - 0x234 ] 0x0
push 0xc
push r-xdata
mov ecx [ ebp - 0x158 ]
push ecx
mov edx [ ebp - 0x15c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
mov ecx [ ebp - 0xd8 ]
mov [ ebp - 0x1f8 ] ecx
mov [ ebp - 0xd8 ] 0x0
mov edx [ ebp - 0x1f8 ]
push edx
lea eax [ ebp - 0xdc ]
push eax
call [ __vbaObjSet@IAT ]
push eax
mov ecx [ ebp - 0x158 ]
mov edx [ ecx ]
mov eax [ ebp - 0x158 ]
push eax
call [ edx + 0xc ]
fnclex
mov [ ebp - 0x15c ] eax
cmp [ ebp - 0x15c ] 0x0
jge r-xdata
mov [ ebp - 0x218 ] 0x0
push 0x70
push r-xdata
mov eax [ ebp - 0x158 ]
push eax
mov ecx [ ebp - 0x15c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
mov ecx [ ebp - 0xe0 ]
mov [ ebp - 0x158 ] ecx
lea edx [ ebp - 0x14c ]
push edx
mov eax [ ebp - 0x158 ]
mov ecx [ eax ]
mov edx [ ebp - 0x158 ]
push edx
call [ ecx + 0x70 ]
fnclex
mov [ ebp - 0x15c ] eax
cmp [ ebp - 0x15c ] 0x0
jge r-xdata
mov eax [ ebp - 0xcc ]
cmp eax [ ebp - 0x1d8 ]
jg r-xdata
mov [ ebp - 0x4 ] 0x29
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x238 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x238 ] rw-data
jmp r-xdata
lea eax [ ebp - 0xdc ]
push eax
lea ecx [ ebp - 0xd4 ]
push ecx
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0x11
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x21c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x21c ] rw-data
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x25
push 0x0
lea eax [ ebp - 0x174 ]
push eax
call [ __vbaObjSetAddref@IAT ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x20
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2f4 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2f4 ] rw-data
jmp r-xdata
mov [ ebp - 0x23c ] 0x0
push 0x40
push r-xdata
mov edx [ ebp - 0x154 ]
push edx
mov eax [ ebp - 0x158 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x23c ] eax
jmp r-xdata
mov edx [ ebp - 0x238 ]
mov eax [ edx ]
mov ecx [ ebp - 0x238 ]
mov edx [ ecx ]
mov ecx [ edx ]
push eax
call [ ecx + 0x308 ]
push eax
lea edx [ ebp - 0xd8 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x154 ] eax
lea eax [ ebp - 0xdc ]
push eax
mov cx [ rw-data ]
push ecx
mov edx [ ebp - 0x154 ]
mov eax [ edx ]
mov ecx [ ebp - 0x154 ]
push ecx
call [ eax + 0x40 ]
fnclex
mov [ ebp - 0x158 ] eax
cmp [ ebp - 0x158 ] 0x0
jge r-xdata
push ecx
mov edx [ ebp - 0x160 ]
mov eax [ edx ]
mov ecx [ ebp - 0x160 ]
push ecx
call [ eax + 0x40 ]
fnclex
mov [ ebp - 0x164 ] eax
cmp [ ebp - 0x164 ] 0x0
jge r-xdata
mov edx [ ebp - 0x21c ]
mov eax [ edx ]
mov ecx [ ebp - 0x21c ]
mov edx [ ecx ]
mov ecx [ edx ]
push eax
call [ ecx + 0x308 ]
push eax
lea edx [ ebp - 0xd4 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x160 ] eax
lea eax [ ebp - 0xd8 ]
push eax
mov cx [ rw-data ]
sub cx 0x1
jo r-xdata
mov [ ebp - 0x2cc ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2cc ] rw-data
jmp r-xdata
mov [ ebp - 0x2f8 ] 0x0
push 0x40
push r-xdata
mov eax [ ebp - 0x150 ]
push eax
mov ecx [ ebp - 0x154 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2f8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x2f4 ]
mov edx [ ecx ]
mov eax [ ebp - 0x2f4 ]
mov ecx [ eax ]
mov eax [ ecx ]
push edx
call [ eax + 0x308 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ecx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x150 ] eax
lea edx [ ebp - 0xd8 ]
push edx
mov ecx [ ebp - 0xcc ]
call [ __vbaI2I4@IAT ]
push eax
mov eax [ ebp - 0x150 ]
mov ecx [ eax ]
mov edx [ ebp - 0x150 ]
push edx
call [ ecx + 0x40 ]
fnclex
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x154 ] 0x0
jge r-xdata
mov [ ebp - 0x240 ] 0x0
push 0x28
push r-xdata
mov eax [ ebp - 0x170 ]
push eax
mov ecx [ ebp - 0x150 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x240 ] eax
jmp r-xdata
mov ecx [ ebp - 0xdc ]
mov [ ebp - 0x15c ] ecx
lea edx [ ebp - 0xd4 ]
push edx
mov eax [ ebp - 0x170 ]
mov ecx [ eax ]
mov edx [ ebp - 0x170 ]
push edx
call [ ecx + 0x28 ]
fnclex
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jge r-xdata
mov [ ebp - 0x220 ] 0x0
push 0x40
push r-xdata
mov edx [ ebp - 0x160 ]
push edx
mov eax [ ebp - 0x164 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x220 ] eax
jmp r-xdata
mov [ ebp - 0x2d0 ] 0x0
push 0x40
push r-xdata
mov eax [ ebp - 0x150 ]
push eax
mov ecx [ ebp - 0x154 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2d0 ] eax
jmp r-xdata
mov ecx [ ebp - 0x2cc ]
mov edx [ ecx ]
mov eax [ ebp - 0x2cc ]
mov ecx [ eax ]
mov eax [ ecx ]
push edx
call [ eax + 0x308 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ecx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x150 ] eax
lea edx [ ebp - 0xd8 ]
push edx
mov ecx [ ebp - 0xcc ]
call [ __vbaI2I4@IAT ]
push eax
mov eax [ ebp - 0x150 ]
mov ecx [ eax ]
mov edx [ ebp - 0x150 ]
push edx
call [ ecx + 0x40 ]
fnclex
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x154 ] 0x0
jge r-xdata
mov [ ebp - 0x2fc ] 0x0
push 0xb8
push r-xdata
mov ecx [ ebp - 0x158 ]
push ecx
mov edx [ ebp - 0x15c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2fc ] eax
jmp r-xdata
mov edx [ ebp - 0xd8 ]
mov [ ebp - 0x158 ] edx
lea eax [ ebp - 0xd0 ]
push eax
mov ecx [ ebp - 0x158 ]
mov edx [ ecx ]
mov eax [ ebp - 0x158 ]
push eax
call [ edx + 0xb8 ]
fnclex
mov [ ebp - 0x15c ] eax
cmp [ ebp - 0x15c ] 0x0
jge r-xdata
mov [ ebp - 0x244 ] 0x0
push 0x5c
push r-xdata
mov edx [ ebp - 0x15c ]
push edx
mov eax [ ebp - 0x160 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x244 ] eax
jmp r-xdata
mov edx [ ebp - 0xd4 ]
mov [ ebp - 0x1fc ] edx
mov [ ebp - 0xd4 ] 0x0
mov eax [ ebp - 0x1fc ]
push eax
lea ecx [ ebp - 0xe0 ]
push ecx
call [ __vbaObjSet@IAT ]
push eax
mov edx [ ebp - 0x15c ]
mov eax [ edx ]
mov ecx [ ebp - 0x15c ]
push ecx
call [ eax + 0x5c ]
fnclex
mov [ ebp - 0x160 ] eax
cmp [ ebp - 0x160 ] 0x0
jge r-xdata
mov [ ebp - 0x224 ] 0x0
push 0x60
push r-xdata
mov eax [ ebp - 0x168 ]
push eax
mov ecx [ ebp - 0x16c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x224 ] eax
jmp r-xdata
mov ecx [ ebp - 0xd8 ]
mov [ ebp - 0x168 ] ecx
lea edx [ ebp - 0x148 ]
push edx
mov eax [ ebp - 0x168 ]
mov ecx [ eax ]
mov edx [ ebp - 0x168 ]
push edx
call [ ecx + 0x60 ]
fnclex
mov [ ebp - 0x16c ] eax
cmp [ ebp - 0x16c ] 0x0
jge r-xdata
mov [ ebp - 0x2d4 ] 0x0
push 0xb8
push r-xdata
mov ecx [ ebp - 0x158 ]
push ecx
mov edx [ ebp - 0x15c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2d4 ] eax
jmp r-xdata
mov edx [ ebp - 0xd8 ]
mov [ ebp - 0x158 ] edx
lea eax [ ebp - 0xd0 ]
push eax
mov ecx [ ebp - 0x158 ]
mov edx [ ecx ]
mov eax [ ebp - 0x158 ]
push eax
call [ edx + 0xb8 ]
fnclex
mov [ ebp - 0x15c ] eax
cmp [ ebp - 0x15c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x2f
jmp r-xdata
mov [ ebp - 0x4 ] 0x2a
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0xd0 ]
push eax
mov ecx [ ebp - 0xc8 ]
push ecx
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
inc eax
neg eax
mov [ ebp - 0x160 ] ax
lea ecx [ ebp - 0xd0 ]
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
movsx ecx [ ebp - 0x160 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x248 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x248 ] rw-data
jmp r-xdata
lea ecx [ ebp - 0xdc ]
push ecx
lea edx [ ebp - 0xe0 ]
push edx
lea eax [ ebp - 0xd8 ]
push eax
push 0x3
call [ __vbaFreeObjList@IAT ]
add esp 0x10
mov [ ebp - 0x4 ] 0x12
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call [ __vbaFpI4@IAT ]
mov [ rw-data ] eax
lea edx [ ebp - 0xe0 ]
push edx
lea eax [ ebp - 0xdc ]
push eax
lea ecx [ ebp - 0xd8 ]
push ecx
lea edx [ ebp - 0xd4 ]
push edx
push 0x4
call [ __vbaFreeObjList@IAT ]
add esp 0x14
fld [ ebp - 0x148 ]
fadd [ ebp - 0x14c ]
fadd [ r-xdata ]
fnstsw ax
test al 0xd
jne r-xdata
mov [ ebp - 0x4 ] 0x24
jmp r-xdata
mov [ ebp - 0x4 ] 0x21
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0xd0 ]
push eax
mov ecx [ ebp - 0xc8 ]
push ecx
call [ __vbaStrCmp@IAT ]
neg eax
sbb eax eax
inc eax
neg eax
mov [ ebp - 0x160 ] ax
lea ecx [ ebp - 0xd0 ]
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
movsx ecx [ ebp - 0x160 ]
test ecx ecx
je r-xdata
mov edx [ ebp - 0xcc ]
add edx [ ebp - 0x1dc ]
jo r-xdata
mov [ ebp - 0x300 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x300 ] rw-data
jmp r-xdata
mov [ ebp - 0x24c ] 0x0
push 0x40
push r-xdata
mov ecx [ ebp - 0x150 ]
push ecx
mov edx [ ebp - 0x154 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x24c ] eax
jmp r-xdata
mov ecx [ ebp - 0x248 ]
mov edx [ ecx ]
mov eax [ ebp - 0x248 ]
mov ecx [ eax ]
mov eax [ ecx ]
push edx
call [ eax + 0x308 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ecx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x150 ] eax
lea edx [ ebp - 0xd8 ]
push edx
mov ax [ rw-data ]
push eax
mov ecx [ ebp - 0x150 ]
mov edx [ ecx ]
mov eax [ ebp - 0x150 ]
push eax
call [ edx + 0x40 ]
fnclex
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x154 ] 0x0
jge r-xdata
jmp [ __vbaFPException@IAT ]
mov edx [ ebp - 0xcc ]
add edx [ ebp - 0x1d4 ]
jo r-xdata
mov [ ebp - 0x2d8 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2d8 ] rw-data
jmp r-xdata
mov [ ebp - 0xcc ] edx
mov [ ebp - 0x304 ] 0x0
push 0x40
push r-xdata
mov ecx [ ebp - 0x150 ]
push ecx
mov edx [ ebp - 0x154 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x304 ] eax
jmp r-xdata
mov edx [ ebp - 0x300 ]
mov eax [ edx ]
mov ecx [ ebp - 0x300 ]
mov edx [ ecx ]
mov ecx [ edx ]
push eax
call [ ecx + 0x308 ]
push eax
lea edx [ ebp - 0xd4 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x150 ] eax
lea eax [ ebp - 0xd8 ]
push eax
mov ecx [ ebp - 0xcc ]
call [ __vbaI2I4@IAT ]
push eax
mov ecx [ ebp - 0x150 ]
mov edx [ ecx ]
mov eax [ ebp - 0x150 ]
push eax
call [ edx + 0x40 ]
fnclex
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x154 ] 0x0
jge r-xdata
mov [ ebp - 0x250 ] 0x0
push 0x6c
push r-xdata
mov ecx [ ebp - 0x158 ]
push ecx
mov edx [ ebp - 0x15c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x250 ] eax
jmp r-xdata
mov eax [ ebp - 0xd8 ]
mov [ ebp - 0x158 ] eax
push 0x42200000
mov ecx [ ebp - 0x158 ]
mov edx [ ecx ]
mov eax [ ebp - 0x158 ]
push eax
call [ edx + 0x6c ]
fnclex
mov [ ebp - 0x15c ] eax
cmp [ ebp - 0x15c ] 0x0
jge r-xdata
mov [ ebp - 0xcc ] edx
mov [ ebp - 0x2dc ] 0x0
push 0x40
push r-xdata
mov ecx [ ebp - 0x154 ]
push ecx
mov edx [ ebp - 0x158 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2dc ] eax
jmp r-xdata
mov edx [ ebp - 0x2d8 ]
mov eax [ edx ]
mov ecx [ ebp - 0x2d8 ]
mov edx [ ecx ]
mov ecx [ edx ]
push eax
call [ ecx + 0x308 ]
push eax
lea edx [ ebp - 0xd8 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x154 ] eax
lea eax [ ebp - 0xdc ]
push eax
mov ecx [ ebp - 0xcc ]
call [ __vbaI2I4@IAT ]
push eax
mov ecx [ ebp - 0x154 ]
mov edx [ ecx ]
mov eax [ ebp - 0x154 ]
push eax
call [ edx + 0x40 ]
fnclex
mov [ ebp - 0x158 ] eax
cmp [ ebp - 0x158 ] 0x0
jge r-xdata
mov [ ebp - 0x308 ] 0x0
push 0xbc
push r-xdata
mov ecx [ ebp - 0x158 ]
push ecx
mov edx [ ebp - 0x15c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov eax [ ebp - 0xd8 ]
mov [ ebp - 0x158 ] eax
push r-xdata
mov ecx [ ebp - 0x158 ]
mov edx [ ecx ]
mov eax [ ebp - 0x158 ]
push eax
call [ edx + 0xbc ]
fnclex
mov [ ebp - 0x15c ] eax
cmp [ ebp - 0x15c ] 0x0
jge r-xdata
mov [ ebp - 0x254 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x254 ] rw-data
jmp r-xdata
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ecx
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0x13
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2e0 ] 0x0
push 0x28
push r-xdata
mov edx [ ebp - 0x174 ]
push edx
mov eax [ ebp - 0x150 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2e0 ] eax
jmp r-xdata
mov eax [ ebp - 0xdc ]
mov [ ebp - 0x15c ] eax
lea ecx [ ebp - 0xd4 ]
push ecx
mov edx [ ebp - 0x174 ]
mov eax [ edx ]
mov ecx [ ebp - 0x174 ]
push ecx
call [ eax + 0x28 ]
fnclex
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jge r-xdata
mov [ ebp - 0x30c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x30c ] rw-data
jmp r-xdata
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ecx
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0x2b
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x258 ] 0x0
push 0x40
push r-xdata
mov edx [ ebp - 0x150 ]
push edx
mov eax [ ebp - 0x154 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x258 ] eax
jmp r-xdata
mov edx [ ebp - 0x254 ]
mov eax [ edx ]
mov ecx [ ebp - 0x254 ]
mov edx [ ecx ]
mov ecx [ edx ]
push eax
call [ ecx + 0x308 ]
push eax
lea edx [ ebp - 0xd4 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x150 ] eax
lea eax [ ebp - 0xd8 ]
push eax
mov cx [ rw-data ]
push ecx
mov edx [ ebp - 0x150 ]
mov eax [ edx ]
mov ecx [ ebp - 0x150 ]
push ecx
call [ eax + 0x40 ]
fnclex
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x154 ] 0x0
jge r-xdata
mov [ ebp - 0x2e4 ] 0x0
push 0x5c
push r-xdata
mov ecx [ ebp - 0x15c ]
push ecx
mov edx [ ebp - 0x160 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2e4 ] eax
jmp r-xdata
mov ecx [ ebp - 0xd4 ]
mov [ ebp - 0x200 ] ecx
mov [ ebp - 0xd4 ] 0x0
mov edx [ ebp - 0x200 ]
push edx
lea eax [ ebp - 0xe0 ]
push eax
call [ __vbaObjSet@IAT ]
push eax
mov ecx [ ebp - 0x15c ]
mov edx [ ecx ]
mov eax [ ebp - 0x15c ]
push eax
call [ edx + 0x5c ]
fnclex
mov [ ebp - 0x160 ] eax
cmp [ ebp - 0x160 ] 0x0
jge r-xdata
mov [ ebp - 0x310 ] 0x0
push 0x40
push r-xdata
mov ecx [ ebp - 0x150 ]
push ecx
mov edx [ ebp - 0x154 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x310 ] eax
jmp r-xdata
mov edx [ ebp - 0x30c ]
mov eax [ edx ]
mov ecx [ ebp - 0x30c ]
mov edx [ ecx ]
mov ecx [ edx ]
push eax
call [ ecx + 0x308 ]
push eax
lea edx [ ebp - 0xd4 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x150 ] eax
lea eax [ ebp - 0xd8 ]
push eax
mov ecx [ ebp - 0xcc ]
call [ __vbaI2I4@IAT ]
push eax
mov ecx [ ebp - 0x150 ]
mov edx [ ecx ]
mov eax [ ebp - 0x150 ]
push eax
call [ edx + 0x40 ]
fnclex
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x154 ] 0x0
jge r-xdata
mov [ ebp - 0x260 ] 0x0
push 0x64
push r-xdata
mov eax [ ebp - 0x158 ]
push eax
mov ecx [ ebp - 0x15c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x260 ] eax
jmp r-xdata
mov ecx [ ebp - 0xd8 ]
mov [ ebp - 0x158 ] ecx
fild [ rw-data ]
fstp [ ebp - 0x25c ]
mov edx [ ebp - 0x25c ]
push edx
mov eax [ ebp - 0x158 ]
mov ecx [ eax ]
mov edx [ ebp - 0x158 ]
push edx
call [ ecx + 0x64 ]
fnclex
mov [ ebp - 0x15c ] eax
cmp [ ebp - 0x15c ] 0x0
jge r-xdata
lea eax [ ebp - 0xdc ]
push eax
lea ecx [ ebp - 0xe0 ]
push ecx
lea edx [ ebp - 0xd8 ]
push edx
push 0x3
call [ __vbaFreeObjList@IAT ]
add esp 0x10
jmp r-xdata
mov [ ebp - 0x314 ] 0x0
push 0x8c
push r-xdata
mov ecx [ ebp - 0x158 ]
push ecx
mov edx [ ebp - 0x15c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
mov eax [ ebp - 0xd8 ]
mov [ ebp - 0x158 ] eax
push 0x0
mov ecx [ ebp - 0x158 ]
mov edx [ ecx ]
mov eax [ ebp - 0x158 ]
push eax
call [ edx + 0x8c ]
fnclex
mov [ ebp - 0x15c ] eax
cmp [ ebp - 0x15c ] 0x0
jge r-xdata
mov [ ebp - 0x264 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x264 ] rw-data
jmp r-xdata
lea edx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0x14
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ecx
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0x2c
call sub_409010
jmp r-xdata
mov [ ebp - 0x268 ] 0x0
push 0x40
push r-xdata
mov ecx [ ebp - 0x160 ]
push ecx
mov edx [ ebp - 0x164 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x268 ] eax
jmp r-xdata
mov ecx [ ebp - 0x264 ]
mov edx [ ecx ]
mov eax [ ebp - 0x264 ]
mov ecx [ eax ]
mov eax [ ecx ]
push edx
call [ eax + 0x308 ]
push eax
lea ecx [ ebp - 0xdc ]
push ecx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x160 ] eax
lea edx [ ebp - 0xe0 ]
push edx
mov ax [ rw-data ]
push eax
mov ecx [ ebp - 0x160 ]
mov edx [ ecx ]
mov eax [ ebp - 0x160 ]
push eax
call [ edx + 0x40 ]
fnclex
mov [ ebp - 0x164 ] eax
cmp [ ebp - 0x164 ] 0x0
jge r-xdata
mov [ ebp - 0x26c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x26c ] rw-data
jmp r-xdata
mov eax [ ebp - 0xe0 ]
mov [ ebp - 0x168 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x270 ] 0x0
push 0x40
push r-xdata
mov eax [ ebp - 0x150 ]
push eax
mov ecx [ ebp - 0x154 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x270 ] eax
jmp r-xdata
mov ecx [ ebp - 0x26c ]
mov edx [ ecx ]
mov eax [ ebp - 0x26c ]
mov ecx [ eax ]
mov eax [ ecx ]
push edx
call [ eax + 0x308 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ecx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x150 ] eax
lea edx [ ebp - 0xd8 ]
push edx
push 0x0
mov eax [ ebp - 0x150 ]
mov ecx [ eax ]
mov edx [ ebp - 0x150 ]
push edx
call [ ecx + 0x40 ]
fnclex
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x154 ] 0x0
jge r-xdata
mov [ ebp - 0x274 ] 0x0
push 0x70
push r-xdata
mov ecx [ ebp - 0x158 ]
push ecx
mov edx [ ebp - 0x15c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x274 ] eax
jmp r-xdata
mov edx [ ebp - 0xd8 ]
mov [ ebp - 0x158 ] edx
lea eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x158 ]
mov edx [ ecx ]
mov eax [ ebp - 0x158 ]
push eax
call [ edx + 0x70 ]
fnclex
mov [ ebp - 0x15c ] eax
cmp [ ebp - 0x15c ] 0x0
jge r-xdata
mov [ ebp - 0x278 ] 0x0
push 0x74
push r-xdata
mov ecx [ ebp - 0x168 ]
push ecx
mov edx [ ebp - 0x16c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x278 ] eax
jmp r-xdata
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x168 ]
mov edx [ ecx ]
mov eax [ ebp - 0x168 ]
push eax
call [ edx + 0x74 ]
fnclex
mov [ ebp - 0x16c ] eax
cmp [ ebp - 0x16c ] 0x0
jge r-xdata
mov [ ebp - 0x27c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x27c ] rw-data
jmp r-xdata
lea eax [ ebp - 0xe0 ]
push eax
lea ecx [ ebp - 0xdc ]
push ecx
lea edx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
push eax
push 0x4
call [ __vbaFreeObjList@IAT ]
add esp 0x14
mov [ ebp - 0x4 ] 0x15
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x280 ] 0x0
push 0x40
push r-xdata
mov ecx [ ebp - 0x160 ]
push ecx
mov edx [ ebp - 0x164 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x280 ] eax
jmp r-xdata
mov ecx [ ebp - 0x27c ]
mov edx [ ecx ]
mov eax [ ebp - 0x27c ]
mov ecx [ eax ]
mov eax [ ecx ]
push edx
call [ eax + 0x308 ]
push eax
lea ecx [ ebp - 0xdc ]
push ecx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x160 ] eax
lea edx [ ebp - 0xe0 ]
push edx
mov ax [ rw-data ]
push eax
mov ecx [ ebp - 0x160 ]
mov edx [ ecx ]
mov eax [ ebp - 0x160 ]
push eax
call [ edx + 0x40 ]
fnclex
mov [ ebp - 0x164 ] eax
cmp [ ebp - 0x164 ] 0x0
jge r-xdata
mov [ ebp - 0x284 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x284 ] rw-data
jmp r-xdata
mov eax [ ebp - 0xe0 ]
mov [ ebp - 0x168 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x288 ] 0x0
push 0x40
push r-xdata
mov eax [ ebp - 0x150 ]
push eax
mov ecx [ ebp - 0x154 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x288 ] eax
jmp r-xdata
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov eax [ ebp - 0x284 ]
mov ecx [ eax ]
mov eax [ ecx ]
push edx
call [ eax + 0x308 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ecx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x150 ] eax
lea edx [ ebp - 0xd8 ]
push edx
push 0x0
mov eax [ ebp - 0x150 ]
mov ecx [ eax ]
mov edx [ ebp - 0x150 ]
push edx
call [ ecx + 0x40 ]
fnclex
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x154 ] 0x0
jge r-xdata
mov [ ebp - 0x28c ] 0x0
push 0x78
push r-xdata
mov ecx [ ebp - 0x158 ]
push ecx
mov edx [ ebp - 0x15c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x28c ] eax
jmp r-xdata
mov edx [ ebp - 0xd8 ]
mov [ ebp - 0x158 ] edx
lea eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x158 ]
mov edx [ ecx ]
mov eax [ ebp - 0x158 ]
push eax
call [ edx + 0x78 ]
fnclex
mov [ ebp - 0x15c ] eax
cmp [ ebp - 0x15c ] 0x0
jge r-xdata
mov [ ebp - 0x290 ] 0x0
push 0x7c
push r-xdata
mov ecx [ ebp - 0x168 ]
push ecx
mov edx [ ebp - 0x16c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x290 ] eax
jmp r-xdata
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x168 ]
mov edx [ ecx ]
mov eax [ ebp - 0x168 ]
push eax
call [ edx + 0x7c ]
fnclex
mov [ ebp - 0x16c ] eax
cmp [ ebp - 0x16c ] 0x0
jge r-xdata
mov [ ebp - 0x294 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x294 ] rw-data
jmp r-xdata
lea eax [ ebp - 0xe0 ]
push eax
lea ecx [ ebp - 0xdc ]
push ecx
lea edx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
push eax
push 0x4
call [ __vbaFreeObjList@IAT ]
add esp 0x14
mov [ ebp - 0x4 ] 0x16
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x298 ] 0x0
push 0x40
push r-xdata
mov ecx [ ebp - 0x150 ]
push ecx
mov edx [ ebp - 0x154 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x298 ] eax
jmp r-xdata
mov ecx [ ebp - 0x294 ]
mov edx [ ecx ]
mov eax [ ebp - 0x294 ]
mov ecx [ eax ]
mov eax [ ecx ]
push edx
call [ eax + 0x308 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ecx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x150 ] eax
lea edx [ ebp - 0xd8 ]
push edx
mov ax [ rw-data ]
push eax
mov ecx [ ebp - 0x150 ]
mov edx [ ecx ]
mov eax [ ebp - 0x150 ]
push eax
call [ edx + 0x40 ]
fnclex
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x154 ] 0x0
jge r-xdata
mov [ ebp - 0x29c ] 0x0
push 0x8c
push r-xdata
mov ecx [ ebp - 0x158 ]
push ecx
mov edx [ ebp - 0x15c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x29c ] eax
jmp r-xdata
mov eax [ ebp - 0xd8 ]
mov [ ebp - 0x158 ] eax
push 0xffffffff
mov ecx [ ebp - 0x158 ]
mov edx [ ecx ]
mov eax [ ebp - 0x158 ]
push eax
call [ edx + 0x8c ]
fnclex
mov [ ebp - 0x15c ] eax
cmp [ ebp - 0x15c ] 0x0
jge r-xdata
mov [ ebp - 0x2a0 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2a0 ] rw-data
jmp r-xdata
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ecx
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0x17
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2a4 ] 0x0
push 0x40
push r-xdata
mov edx [ ebp - 0x150 ]
push edx
mov eax [ ebp - 0x154 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2a4 ] eax
jmp r-xdata
mov edx [ ebp - 0x2a0 ]
mov eax [ edx ]
mov ecx [ ebp - 0x2a0 ]
mov edx [ ecx ]
mov ecx [ edx ]
push eax
call [ ecx + 0x308 ]
push eax
lea edx [ ebp - 0xd4 ]
push edx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x150 ] eax
lea eax [ ebp - 0xd8 ]
push eax
mov cx [ rw-data ]
push ecx
mov edx [ ebp - 0x150 ]
mov eax [ edx ]
mov ecx [ ebp - 0x150 ]
push ecx
call [ eax + 0x40 ]
fnclex
mov [ ebp - 0x154 ] eax
cmp [ ebp - 0x154 ] 0x0
jge r-xdata
mov [ ebp - 0x2a8 ] 0x0
push 0xbc
push r-xdata
mov eax [ ebp - 0x158 ]
push eax
mov ecx [ ebp - 0x15c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2a8 ] eax
jmp r-xdata
mov ecx [ ebp - 0xd8 ]
mov [ ebp - 0x158 ] ecx
mov edx [ ebp - 0xc8 ]
push edx
mov eax [ ebp - 0x158 ]
mov ecx [ eax ]
mov edx [ ebp - 0x158 ]
push edx
call [ ecx + 0xbc ]
fnclex
mov [ ebp - 0x15c ] eax
cmp [ ebp - 0x15c ] 0x0
jge r-xdata
mov [ ebp - 0x2ac ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2ac ] rw-data
jmp r-xdata
lea edx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0x18
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2b0 ] 0x0
push 0x40
push r-xdata
mov ecx [ ebp - 0x154 ]
push ecx
mov edx [ ebp - 0x158 ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2b0 ] eax
jmp r-xdata
mov ecx [ ebp - 0x2ac ]
mov edx [ ecx ]
mov eax [ ebp - 0x2ac ]
mov ecx [ eax ]
mov eax [ ecx ]
push edx
call [ eax + 0x308 ]
push eax
lea ecx [ ebp - 0xd4 ]
push ecx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x154 ] eax
lea edx [ ebp - 0xd8 ]
push edx
mov ax [ rw-data ]
push eax
mov ecx [ ebp - 0x154 ]
mov edx [ ecx ]
mov eax [ ebp - 0x154 ]
push eax
call [ edx + 0x40 ]
fnclex
mov [ ebp - 0x158 ] eax
cmp [ ebp - 0x158 ] 0x0
jge r-xdata
mov [ ebp - 0x2b4 ] 0x0
push 0x20
push r-xdata
mov edx [ ebp - 0x170 ]
push edx
mov eax [ ebp - 0x150 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2b4 ] eax
jmp r-xdata
mov eax [ ebp - 0xd8 ]
mov [ ebp - 0x15c ] eax
lea ecx [ ebp - 0xd0 ]
push ecx
mov edx [ ebp - 0x170 ]
mov eax [ edx ]
mov ecx [ ebp - 0x170 ]
push ecx
call [ eax + 0x20 ]
fnclex
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jge r-xdata
mov [ ebp - 0x2b8 ] 0x0
push 0x104
push r-xdata
mov edx [ ebp - 0x15c ]
push edx
mov eax [ ebp - 0x160 ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2b8 ] eax
jmp r-xdata
mov ecx [ ebp - 0xd0 ]
push ecx
mov edx [ ebp - 0x15c ]
mov eax [ edx ]
mov ecx [ ebp - 0x15c ]
push ecx
call [ eax + 0x104 ]
fnclex
mov [ ebp - 0x160 ] eax
cmp [ ebp - 0x160 ] 0x0
jge r-xdata
mov [ rw-data ] ax
mov [ ebp - 0x4 ] 0x1a
push 0x0
lea ecx [ ebp - 0x170 ]
push ecx
call [ __vbaObjSetAddref@IAT ]
jmp r-xdata
lea ecx [ ebp - 0xd0 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0xd8 ]
push ecx
lea edx [ ebp - 0xd4 ]
push edx
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0x19
mov ax [ rw-data ]
add ax 0x1
jo r-xdata
sub_408f70
lea ecx [ ebp - 0xd0 ]
call [ __vbaFreeStr@IAT ]
lea eax [ ebp - 0xe0 ]
push eax
lea ecx [ ebp - 0xdc ]
push ecx
lea edx [ ebp - 0xd8 ]
push edx
lea eax [ ebp - 0xd4 ]
push eax
push 0x4
call [ __vbaFreeObjList@IAT ]
add esp 0x14
lea ecx [ ebp - 0x100 ]
push ecx
lea edx [ ebp - 0xf0 ]
push edx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
retn
sub_409010
push ebp
mov ebp esp
sub esp 0x8
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x74
push ebx
push esi
push edi
mov [ ebp - 0x8 ] esp
mov [ ebp - 0x4 ] r-xdata
mov eax [ rw-data ]
xor edi edi
cmp eax edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] edi
jne r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x308 ]
lea edx [ ebp - 0x20 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea ecx [ ebp - 0x30 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0x4c ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov dx [ ebp - 0x30 ]
mov ebx 0x1
sub dx 0x1
lea ecx [ ebp - 0x20 ]
jo r-xdata
push 0x4c
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
call [ __vbaErrorOverflow@IAT ]
movsx eax dx
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x14 ] ebx
call [ __vbaFreeObj@IAT ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x308 ]
lea edx [ ebp - 0x20 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea ecx [ ebp - 0x30 ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0x4c ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
call [ ecx + 0x308 ]
lea edx [ ebp - 0x20 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx ebx
mov edx [ esi ]
mov [ ebp - 0x70 ] edx
call [ __vbaI2I4@IAT ]
mov ecx [ ebp - 0x70 ]
push eax
push esi
call [ ecx + 0x40 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov dx [ ebp - 0x30 ]
lea ecx [ ebp - 0x20 ]
sub dx 0x1
jo r-xdata
push 0x4c
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
push ecx
push eax
mov edx [ eax ]
mov esi eax
call [ edx + 0xb8 ]
test eax eax
fnclex
jge r-xdata
push 0x40
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
movsx edi dx
call [ __vbaFreeObj@IAT ]
mov edx [ ebp - 0x1c ]
push edx
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x1c ]
neg esi
sbb esi esi
neg esi
neg esi
call [ __vbaFreeStr@IAT ]
lea eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
test si si
je r-xdata
push 0xb8
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ rw-data ] 0xffff
push sub_4095d4
fwait
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov eax 0x1
add eax ecx
jo r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x308 ]
lea edx [ ebp - 0x20 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov ebx [ esi ]
call [ __vbaI2I4@IAT ]
push eax
push esi
call [ ebx + 0x40 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ebx eax
mov [ ebp - 0x14 ] ebx
jmp r-xdata
mov edx [ eax ]
push eax
call [ edx + 0x308 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x24 ]
mov esi eax
push ecx
mov ecx [ ebp - 0x14 ]
mov ebx [ esi ]
call [ __vbaI2I4@IAT ]
push eax
push esi
call [ ebx + 0x40 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov ecx [ eax ]
mov esi eax
call [ ecx + 0xb8 ]
test eax eax
fnclex
jge r-xdata
push 0x40
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov eax [ ebp - 0x60 ]
cmp ebx eax
mov eax [ rw-data ]
jg r-xdata
mov ebx [ __vbaHresultCheckObj@IAT ]
mov ebx [ __vbaHresultCheckObj@IAT ]
push 0x40
push r-xdata
push esi
push eax
call ebx
jmp r-xdata
mov eax [ ebp - 0x1c ]
push eax
push r-xdata
call [ __vbaStrCmp@IAT ]
mov esi eax
lea ecx [ ebp - 0x1c ]
neg esi
sbb esi esi
neg esi
neg esi
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
push ecx
push edx
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
test si si
jne r-xdata
push 0xb8
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x74 ] edi
mov edx [ eax ]
fild [ ebp - 0x74 ]
mov esi eax
fstp [ ebp - 0x78 ]
mov ecx [ ebp - 0x78 ]
push ecx
push eax
call [ edx + 0x64 ]
test eax eax
fnclex
jge r-xdata
add edi 0x28
mov eax [ ebp - 0x24 ]
jo r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
or eax 0xffffffff
add eax edi
jo r-xdata
lea edx [ ebp - 0x24 ]
lea eax [ ebp - 0x20 ]
push edx
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
mov eax [ rw-data ]
add esp 0xc
test eax eax
jne r-xdata
push 0x64
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x308 ]
lea edx [ ebp - 0x28 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea eax [ ebp - 0x2c ]
push eax
mov ecx edi
mov ebx [ esi ]
call [ __vbaI2I4@IAT ]
push eax
push esi
call [ ebx + 0x40 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov edi eax
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x308 ]
lea edx [ ebp - 0x20 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea ecx [ ebp - 0x24 ]
push ecx
push 0x0
mov eax [ esi ]
push esi
call [ eax + 0x40 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
mov ebx [ __vbaHresultCheckObj@IAT ]
mov ebx [ __vbaHresultCheckObj@IAT ]
push 0x40
push r-xdata
push esi
push eax
call ebx
jmp r-xdata
mov eax 0x1
cmp edi eax
jl r-xdata
mov eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
mov edx [ eax ]
mov esi eax
call [ edx + 0x70 ]
test eax eax
fnclex
jge r-xdata
push 0x40
push r-xdata
push esi
push eax
call ebx
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x70
push r-xdata
push esi
push eax
call ebx
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x38 ]
push edx
push eax
mov ecx [ eax ]
mov esi eax
call [ ecx + 0x70 ]
test eax eax
fnclex
jge r-xdata
fld [ ebp - 0x34 ]
fild [ ebp - 0x18 ]
fstp [ ebp - 0x80 ]
fadd [ ebp - 0x80 ]
fadd [ r-xdata ]
fnstsw ax
test al 0xd
jne r-xdata
push 0x70
push r-xdata
push esi
push eax
call ebx
mov ecx [ eax ]
push eax
call [ ecx + 0x308 ]
lea edx [ ebp - 0x20 ]
push eax
push edx
call [ __vbaObjSet@IAT ]
mov esi eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov edx [ esi ]
mov [ ebp - 0x84 ] edx
call [ __vbaI2I4@IAT ]
mov ecx [ ebp - 0x84 ]
push eax
push esi
call [ ecx + 0x40 ]
test eax eax
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ rw-data ]
jmp r-xdata
call [ __vbaFpI4@IAT ]
mov edi eax
lea edx [ ebp - 0x24 ]
lea eax [ ebp - 0x20 ]
push edx
push eax
push 0x2
mov [ ebp - 0x18 ] edi
call [ __vbaFreeObjList@IAT ]
add esp 0xc
mov eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
mov edx [ eax ]
mov esi eax
call [ edx + 0x60 ]
test eax eax
fnclex
jge r-xdata
push 0x40
push r-xdata
push esi
push eax
call ebx
jmp [ __vbaFPException@IAT ]
fld [ ebp - 0x38 ]
fadd [ ebp - 0x34 ]
fadd [ r-xdata ]
fnstsw ax
test al 0xd
jne r-xdata
push 0x60
push r-xdata
push esi
push eax
call ebx
call [ __vbaFpI4@IAT ]
mov [ rw-data ] eax
lea edx [ ebp - 0x2c ]
lea eax [ ebp - 0x28 ]
push edx
lea ecx [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x20 ]
push ecx
push edx
push 0x4
call [ __vbaFreeObjList@IAT ]
add esp 0x14
sub_4095ae
lea ecx [ ebp - 0x1c ]
call [ __vbaFreeStr@IAT ]
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x28 ]
push eax
lea edx [ ebp - 0x24 ]
push ecx
lea eax [ ebp - 0x20 ]
push edx
push eax
push 0x4
call [ __vbaFreeObjList@IAT ]
add esp 0x14
retn
sub_4095f0
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x40
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor eax eax
lea edx [ ebp - 0x3c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] eax
lea eax [ ebp + 0x8 ]
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] eax
mov eax 0x4003
push r-xdata
push edx
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x4c ] eax
call [ Ordinal_MSVBVM60_572@IAT ]
mov esi [ __vbaStrMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x1c ]
call esi
mov edi [ __vbaStrCat@IAT ]
push eax
call edi
mov edx eax
lea ecx [ ebp - 0x20 ]
call esi
push eax
push r-xdata
call edi
mov edx eax
lea ecx [ ebp - 0x28 ]
call esi
push eax
lea eax [ ebp - 0x4c ]
push eax
call [ Ordinal_MSVBVM60_536@IAT ]
mov edx eax
lea ecx [ ebp - 0x24 ]
call esi
push eax
call [ Ordinal_MSVBVM60_519@IAT ]
mov edx eax
lea ecx [ ebp - 0x2c ]
call esi
push eax
call edi
mov edx eax
lea ecx [ ebp - 0x18 ]
call esi
lea ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
push ecx
lea eax [ ebp - 0x24 ]
push edx
lea ecx [ ebp - 0x20 ]
push eax
lea edx [ ebp - 0x1c ]
push ecx
push edx
push 0x5
call [ __vbaFreeStrList@IAT ]
add esp 0x18
push sub_4096ff
jmp r-xdata
retn
sub_4096cf
test [ ebp - 0x4 ] 0x4
je r-xdata
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x28 ]
push eax
lea edx [ ebp - 0x24 ]
push ecx
lea eax [ ebp - 0x20 ]
push edx
lea ecx [ ebp - 0x1c ]
push eax
push ecx
push 0x5
call [ __vbaFreeStrList@IAT ]
add esp 0x18
retn
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeStr@IAT ]
sub_409720
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4c4
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov ecx 0x26
xor eax eax
lea edi [ ebp - 0xac ]
cmp [ esi + 0x70 ] bx
[ edi ]
mov ecx 0xea
lea edi [ ebp - 0x458 ]
[ edi ]
mov ecx 0x16
lea edi [ ebp - 0x4d0 ]
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0x45c ] ebx
mov [ ebp - 0x460 ] ebx
mov [ ebp - 0x464 ] ebx
mov [ ebp - 0x474 ] ebx
[ edi ]
je r-xdata
mov eax [ ebp + 0xc ]
push 0x58
lea ecx [ ebp - 0xac ]
push eax
lea edx [ ebp - 0x4d0 ]
push ecx
push edx
push r-xdata
call [ __vbaRecUniToAnsi@IAT ]
push eax
call sub_403844
call [ __vbaSetSystemError@IAT ]
lea eax [ ebp - 0x4d0 ]
lea ecx [ ebp - 0xac ]
push eax
push ecx
push r-xdata
call [ __vbaRecAnsiToUni@IAT ]
jmp r-xdata
mov edi [ Ordinal_MSVBVM60_644@IAT ]
lea ecx [ ebp - 0xac ]
push ecx
call edi
mov ebx [ ebp + 0xc ]
push 0x98
push ebx
push eax
call sub_403844
call [ __vbaSetSystemError@IAT ]
cmp [ esi + 0x72 ] 0x0
je r-xdata
cmp [ esi + 0x34 ] ebx
jne r-xdata
xor ebx ebx
cmp [ ebp - 0xac ] 0x3a8
jl r-xdata
mov al [ ebp - 0xa0 ]
test al 0x1
je r-xdata
mov edx [ ebp - 0xa8 ]
mov eax [ ebp - 0xa4 ]
mov [ esi + 0x34 ] edx
mov [ esi + 0x38 ] eax
lea edx [ ebp - 0x458 ]
push edx
call edi
push 0x3a8
push ebx
push eax
call sub_403844
call [ __vbaSetSystemError@IAT ]
mov [ ebp - 0xb0 ] 0xffffffff
test al 0x2
je r-xdata
mov ecx [ ebp - 0x9c ]
mov [ esi + 0x44 ] ecx
cmp [ ebp - 0xb0 ] bx
je r-xdata
mov eax [ ebp - 0x98 ]
mov edx [ esi ]
lea ecx [ ebp - 0x460 ]
mov [ esi + 0x40 ] eax
push ecx
push eax
push esi
call [ edx + 0x5c ]
mov edx [ ebp - 0x460 ]
push r-xdata
push edx
call [ __vbaCastObj@IAT ]
push eax
lea eax [ ebp - 0x464 ]
push eax
call [ __vbaObjSet@IAT ]
lea ecx [ esi + 0x58 ]
push eax
push ecx
call [ __vbaObjSetAddref@IAT ]
lea edx [ ebp - 0x464 ]
lea eax [ ebp - 0x460 ]
push edx
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
mov al [ ebp - 0xa0 ]
add esp 0xc
test al 0x4
je r-xdata
test [ ebp - 0x44c ] 0x4
je r-xdata
lea edx [ ebp - 0x474 ]
push edx
call [ Ordinal_MSVBVM60_546@IAT ]
lea eax [ ebp - 0x474 ]
push eax
call [ __vbaDateVar@IAT ]
fstp [ esi + 0x50 ]
lea ecx [ ebp - 0x474 ]
call [ __vbaFreeVar@IAT ]
fwait
push sub_409a91
jmp r-xdata
lea ecx [ ebp - 0x94 ]
push ecx
push 0x40
call [ __vbaStrFixstr@IAT ]
mov edx eax
lea ecx [ ebp - 0x45c ]
call [ __vbaStrMove@IAT ]
mov edx eax
lea ecx [ esi + 0x3c ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x45c ]
call [ __vbaFreeStr@IAT ]
mov edi [ __vbaStrCopy@IAT ]
mov ebx [ __vbaStrMove@IAT ]
lea ecx [ ebp - 0x440 ]
push ecx
push 0x80
call [ __vbaStrFixstr@IAT ]
mov ebx [ __vbaStrMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x45c ]
call ebx
mov edi [ __vbaStrCopy@IAT ]
mov edx eax
lea ecx [ esi + 0x3c ]
call edi
lea ecx [ ebp - 0x45c ]
call [ __vbaFreeStr@IAT ]
jmp r-xdata
retn
test [ ebp - 0x44c ] 0x10
je r-xdata
mov cl [ ebp - 0x33c ]
mov eax [ ebp - 0x340 ]
test cl 0x1
je r-xdata
test [ ebp - 0x44c ] 0x8
je r-xdata
mov eax [ ebp - 0xb4 ]
lea ecx [ ebp - 0x338 ]
push ecx
push 0x100
mov [ esi + 0x6c ] eax
call [ __vbaStrFixstr@IAT ]
mov edx eax
lea ecx [ ebp - 0x45c ]
call ebx
mov edx eax
lea ecx [ esi + 0x60 ]
call edi
lea ecx [ ebp - 0x45c ]
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x134 ]
push edx
push 0x40
call [ __vbaStrFixstr@IAT ]
mov edx eax
lea ecx [ ebp - 0x45c ]
call ebx
mov edx eax
lea ecx [ esi + 0x64 ]
call edi
lea ecx [ ebp - 0x45c ]
call [ __vbaFreeStr@IAT ]
mov eax [ ebp - 0x138 ]
mov [ esi + 0x68 ] eax
jmp r-xdata
test cl 0x2
je r-xdata
mov edx eax
and edx 0x1
neg edx
mov [ esi + 0x5e ] dx
shr eax 0x1
and eax 0x1
neg eax
mov [ esi + 0x5c ] ax
sub_409a91
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409ab0
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x18 ] edi
mov [ ecx ] edi
mov edx [ esi + 0x3c ]
lea ecx [ ebp - 0x18 ]
call [ __vbaStrCopy@IAT ]
push sub_409b0d
jmp sub_409b0c
sub_409b0d
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409b40
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov ecx [ esi + 0x40 ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409bb0
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] edi
mov [ ecx ] edi
mov edx [ esi + 0x58 ]
push edx
push eax
call [ __vbaObjSetAddref@IAT ]
push sub_409c0f
jmp sub_409c0e
sub_409c0f
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x18 ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409c40
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov ecx [ esi + 0x44 ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409cb0
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov ecx [ esi + 0x34 ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409d20
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov ecx [ esi + 0x38 ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409d90
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov cx [ esi + 0x5e ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
mov cx [ ebp - 0x18 ]
mov [ eax ] cx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409e00
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov cx [ esi + 0x5c ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
mov cx [ ebp - 0x18 ]
mov [ eax ] cx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409e70
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x18 ] edi
mov [ ecx ] edi
mov edx [ esi + 0x60 ]
lea ecx [ ebp - 0x18 ]
call [ __vbaStrCopy@IAT ]
push sub_409ecd
jmp sub_409ecc
sub_409ecd
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409f00
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x18 ] edi
mov [ ecx ] edi
mov edx [ esi + 0x64 ]
lea ecx [ ebp - 0x18 ]
call [ __vbaStrCopy@IAT ]
push sub_409f5d
jmp sub_409f5c
sub_409f5d
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409f90
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov ecx [ esi + 0x6c ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x18 ] ecx
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a000
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x18 ] edi
mov [ ecx ] edi
mov edx [ esi + 0x68 ]
push edx
call [ __vbaStrI4@IAT ]
mov edx eax
lea ecx [ ebp - 0x18 ]
call [ __vbaStrMove@IAT ]
push sub_40a066
jmp sub_40a065
sub_40a066
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp - 0x18 ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a090
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov ecx [ esi + 0x48 ]
mov edx [ esi + 0x4c ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a110
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor edi edi
mov [ ebp - 0x4 ] edi
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov ecx [ esi + 0x50 ]
mov edx [ esi + 0x54 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a190
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
push esi
mov eax [ esi ]
call [ eax + 0x4 ]
mov ecx [ ebp + 0xc ]
mov edx [ esi + 0x38 ]
mov eax [ esi + 0x44 ]
push ecx
mov ecx [ esi + 0x34 ]
push edx
push eax
push ecx
call sub_403f84
call [ __vbaSetSystemError@IAT ]
mov eax [ ebp + 0x8 ]
push eax
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a210
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x28 ] eax
xor ecx ecx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x1c ] eax
xor ebx ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x30 ] ecx
cmp eax ebx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ edx ] ebx
je r-xdata
push sub_40a374
jmp r-xdata
mov esi [ __vbaUI1I2@IAT ]
mov ecx 0x8b
mov [ ebp - 0x28 ] 0x14
mov [ ebp - 0x24 ] 0x3
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x38 ] 0x7bf80980
mov [ ebp - 0x34 ] 0xbf32
mov [ ebp - 0x32 ] 0x101a
call esi
mov ecx 0xbb
mov [ ebp - 0x30 ] al
call esi
xor ecx ecx
mov [ ebp - 0x2f ] al
call esi
mov ecx 0xaa
mov [ ebp - 0x2e ] al
call esi
xor ecx ecx
mov [ ebp - 0x2d ] al
call esi
mov ecx 0x30
mov [ ebp - 0x2c ] al
call esi
mov ecx 0xc
mov [ ebp - 0x2b ] al
call esi
mov ecx 0xab
mov [ ebp - 0x2a ] al
call esi
mov esi [ __vbaCastObj@IAT ]
mov [ ebp - 0x29 ] al
mov eax [ ebp - 0x40 ]
push r-xdata
push eax
call esi
mov edi [ __vbaObjSet@IAT ]
lea ecx [ ebp - 0x44 ]
push eax
push ecx
call edi
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x38 ]
push edx
push ebx
lea ecx [ ebp - 0x28 ]
push eax
push ecx
call sub_403f3c
call [ __vbaSetSystemError@IAT ]
mov edx [ ebp - 0x44 ]
push r-xdata
push edx
call esi
push eax
lea eax [ ebp - 0x40 ]
push eax
call edi
lea ecx [ ebp - 0x44 ]
call [ __vbaFreeObj@IAT ]
mov ecx [ ebp - 0x40 ]
push r-xdata
push ecx
call esi
lea edx [ ebp - 0x3c ]
push eax
push edx
call edi
lea ecx [ ebp - 0x40 ]
call [ __vbaFreeObj@IAT ]
retn
sub_40a3a0
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xac
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x1
mov [ ebp - 0x4 ] eax
and esi 0xfffffffe
push esi
mov [ ebp + 0x8 ] esi
mov ecx [ esi ]
call [ ecx + 0x4 ]
mov ecx 0x25
xor eax eax
lea edi [ ebp - 0xa8 ]
lea edx [ ebp - 0xa8 ]
[ edi ]
push edx
mov [ ebp - 0xb8 ] eax
mov [ ebp - 0xa8 ] 0x94
call sub_403ed0
call [ __vbaSetSystemError@IAT ]
mov eax [ ebp - 0x98 ]
shr eax 0x1
and eax 0x1
neg eax
test ax ax
mov [ esi + 0x70 ] ax
je r-xdata
mov edi [ Ordinal_MSVBVM60_546@IAT ]
lea eax [ ebp - 0xb8 ]
push eax
call edi
lea ecx [ ebp - 0xb8 ]
push ecx
call [ __vbaDateVar@IAT ]
mov ebx [ __vbaFreeVar@IAT ]
lea ecx [ ebp - 0xb8 ]
fstp [ esi + 0x48 ]
call ebx
lea edx [ ebp - 0xb8 ]
push edx
call edi
lea eax [ ebp - 0xb8 ]
push eax
call [ __vbaDateVar@IAT ]
fstp [ esi + 0x50 ]
lea ecx [ ebp - 0xb8 ]
call ebx
mov edi [ __vbaStrCopy@IAT ]
mov edx r-xdata
lea ecx [ esi + 0x60 ]
call edi
mov edx r-xdata
lea ecx [ esi + 0x64 ]
call edi
mov [ ebp - 0x4 ] 0x0
fwait
push sub_40a4be
jmp sub_40a4bd
cmp [ ebp - 0xa4 ] 0x5
jl r-xdata
mov [ esi + 0x72 ] 0xffff
sub_40a4be
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40a4e0
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x80
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
xor esi esi
lea eax [ ebp - 0x58 ]
push esi
push eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x78 ] esi
call [ Ordinal_MSVBVM60_608@IAT ]
lea ecx [ ebp - 0x58 ]
lea edx [ ebp - 0x68 ]
push ecx
push 0xff
push edx
call [ Ordinal_MSVBVM60_607@IAT ]
lea eax [ ebp - 0x68 ]
push eax
call [ __vbaStrVarMove@IAT ]
mov ebx [ __vbaStrMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x28 ]
call ebx
lea ecx [ ebp - 0x68 ]
lea edx [ ebp - 0x58 ]
push ecx
push edx
push 0x2
call [ __vbaFreeVarList@IAT ]
mov eax [ rw-data ]
add esp 0xc
cmp eax esi
jne r-xdata
mov edi [ rw-data ]
lea ecx [ ebp - 0x48 ]
push ecx
push edi
mov eax [ edi ]
call [ eax + 0x14 ]
cmp eax esi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ ebp - 0x48 ]
lea ecx [ ebp - 0x2c ]
push ecx
push eax
mov edx [ eax ]
mov edi eax
call [ edx + 0x50 ]
cmp eax esi
fnclex
jge r-xdata
push 0x14
push r-xdata
push edi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebp - 0x2c ]
push edx
push r-xdata
call [ __vbaStrCat@IAT ]
mov edx eax
lea ecx [ ebp - 0x40 ]
call ebx
mov esi [ __vbaStrToAnsi@IAT ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call esi
mov ecx [ ebp - 0x28 ]
push eax
push ecx
call [ __vbaLenBstr@IAT ]
mov edx [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x3c ]
push edx
push eax
call esi
mov edi [ ebp + 0x14 ]
push eax
lea edx [ ebp - 0x38 ]
mov ecx [ edi ]
push ecx
push edx
call esi
mov ebx [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x34 ]
mov eax [ ebx ]
push eax
push ecx
call esi
mov edx [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x30 ]
mov eax [ edx ]
push eax
push ecx
call esi
push eax
call sub_403b24
mov [ ebp - 0x7c ] eax
call [ __vbaSetSystemError@IAT ]
mov edx [ ebp - 0x30 ]
mov eax [ ebp + 0xc ]
mov esi [ __vbaStrToUnicode@IAT ]
push edx
push eax
call esi
mov ecx [ ebp - 0x34 ]
push ecx
push ebx
call esi
mov edx [ ebp - 0x38 ]
push edx
push edi
call esi
mov eax [ ebp - 0x3c ]
lea ecx [ ebp - 0x28 ]
push eax
push ecx
call esi
mov eax [ ebp - 0x7c ]
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x70 ] edx
lea ecx [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x58 ]
push ecx
push edx
mov [ ebp - 0x78 ] 0x4008
call [ Ordinal_MSVBVM60_617@IAT ]
lea edx [ ebp - 0x58 ]
lea ecx [ ebp - 0x24 ]
call [ __vbaVarMove@IAT ]
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x40 ]
lea edx [ ebp - 0x3c ]
push ecx
lea eax [ ebp - 0x38 ]
push edx
lea ecx [ ebp - 0x34 ]
push eax
lea edx [ ebp - 0x30 ]
push ecx
lea eax [ ebp - 0x2c ]
push edx
push eax
push 0x7
call [ __vbaFreeStrList@IAT ]
add esp 0x20
lea ecx [ ebp - 0x48 ]
call [ __vbaFreeObj@IAT ]
push sub_40a735
jmp r-xdata
push 0x50
push r-xdata
push edi
push eax
call [ __vbaHresultCheckObj@IAT ]
lea ecx [ ebp - 0x28 ]
call [ __vbaFreeStr@IAT ]
retn
sub_40a6d8
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0x40 ]
push ecx
lea eax [ ebp - 0x3c ]
push edx
lea ecx [ ebp - 0x38 ]
push eax
lea edx [ ebp - 0x34 ]
push ecx
lea eax [ ebp - 0x30 ]
push edx
lea ecx [ ebp - 0x2c ]
push eax
push ecx
push 0x7
call [ __vbaFreeStrList@IAT ]
add esp 0x20
lea ecx [ ebp - 0x48 ]
call [ __vbaFreeObj@IAT ]
lea edx [ ebp - 0x68 ]
lea eax [ ebp - 0x58 ]
push edx
push eax
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
retn
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeVar@IAT ]
sub_40a735
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x24 ]
mov ecx eax
pop edi
pop esi
pop ebx
mov [ ecx ] edx
mov edx [ ebp - 0x20 ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x18 ]
mov [ ecx + 0xc ] edx
mov ecx [ ebp - 0x14 ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x10
sub_40a770
push ebp
mov ebp esp
sub esp 0x8
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x30
push ebx
push esi
push edi
mov [ ebp - 0x8 ] esp
mov [ ebp - 0x4 ] r-xdata
mov eax [ rw-data ]
xor edi edi
cmp eax edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] edi
jne r-xdata
mov esi [ rw-data ]
lea ecx [ ebp - 0x2c ]
push ecx
push esi
mov eax [ esi ]
call [ eax + 0x14 ]
cmp eax edi
fnclex
jge r-xdata
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x14 ]
push ecx
push eax
mov edx [ eax ]
mov esi eax
call [ edx + 0x50 ]
cmp eax edi
fnclex
jge r-xdata
push 0x14
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
mov edx [ ebp - 0x14 ]
push edx
push r-xdata
call [ __vbaStrCat@IAT ]
mov edx eax
lea ecx [ ebp - 0x24 ]
call [ __vbaStrMove@IAT ]
mov esi [ __vbaStrToAnsi@IAT ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call esi
mov edi [ ebp + 0x10 ]
push eax
lea edx [ ebp - 0x20 ]
mov ecx [ edi ]
push ecx
push edx
call esi
mov ebx [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x1c ]
mov eax [ ebx ]
push eax
push ecx
call esi
mov edx [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
mov eax [ edx ]
push eax
push ecx
call esi
push eax
call sub_403b78
call [ __vbaSetSystemError@IAT ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov esi [ __vbaStrToUnicode@IAT ]
push edx
push eax
call esi
mov ecx [ ebp - 0x1c ]
push ecx
push ebx
call esi
mov edx [ ebp - 0x20 ]
push edx
push edi
call esi
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x20 ]
push ecx
lea eax [ ebp - 0x1c ]
push edx
lea ecx [ ebp - 0x18 ]
push eax
lea edx [ ebp - 0x14 ]
push ecx
push edx
push 0x6
call [ __vbaFreeStrList@IAT ]
add esp 0x1c
lea ecx [ ebp - 0x2c ]
call [ __vbaFreeObj@IAT ]
push sub_40a8eb
jmp r-xdata
push 0x50
push r-xdata
push esi
push eax
call [ __vbaHresultCheckObj@IAT ]
retn
sub_40a8bd
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x20 ]
push ecx
lea eax [ ebp - 0x1c ]
push edx
lea ecx [ ebp - 0x18 ]
push eax
lea edx [ ebp - 0x14 ]
push ecx
push edx
push 0x6
call [ __vbaFreeStrList@IAT ]
add esp 0x1c
lea ecx [ ebp - 0x2c ]
call [ __vbaFreeObj@IAT ]
retn
sub_40a900
push ebp
mov ebp esp
sub esp 0xc
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xf0
push ebx
push esi
push edi
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] r-xdata
mov eax [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x28 ] ebx
movsx eax [ eax ]
dec eax
mov [ ebp - 0x38 ] ebx
cmp eax 0x3
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x88 ] ebx
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xd8 ] ebx
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xf8 ] ebx
ja r-xdata
mov esi [ ebp + 0xc ]
mov edi [ __vbaLateMemCallLd@IAT ]
push ebx
push r-xdata
mov ecx [ esi ]
lea edx [ ebp - 0xb8 ]
push ecx
push edx
call edi
mov eax [ esi ]
push ebx
push r-xdata
lea ecx [ ebp - 0x38 ]
push eax
push ecx
call edi
mov edx [ esi ]
push ebx
push r-xdata
lea eax [ ebp - 0x58 ]
push edx
push eax
call edi
mov ecx [ esi ]
push ebx
push r-xdata
lea edx [ ebp - 0x78 ]
push ecx
push edx
call edi
mov eax [ esi ]
add esp 0x40
lea ecx [ ebp - 0x98 ]
push ebx
push r-xdata
push eax
push ecx
call edi
mov edi [ __vbaVarDiv@IAT ]
add esp 0x10
mov eax 0x2
mov ecx 0xf
mov [ ebp - 0xf8 ] eax
mov [ ebp - 0xe8 ] eax
mov [ ebp - 0xd8 ] eax
mov [ ebp - 0xc8 ] eax
lea edx [ ebp - 0x98 ]
mov [ ebp - 0xf0 ] ecx
mov [ ebp - 0xe0 ] ecx
mov [ ebp - 0xd0 ] ecx
mov [ ebp - 0xc0 ] ecx
push 0x50
lea eax [ ebp - 0xf8 ]
push edx
lea ecx [ ebp - 0xa8 ]
push eax
push ecx
call edi
mov esi [ __vbaI4Var@IAT ]
push eax
call esi
push eax
lea edx [ ebp - 0x78 ]
lea eax [ ebp - 0xe8 ]
push edx
lea ecx [ ebp - 0x88 ]
push eax
push ecx
call edi
push eax
call esi
push eax
lea edx [ ebp - 0x58 ]
lea eax [ ebp - 0xd8 ]
push edx
lea ecx [ ebp - 0x68 ]
push eax
push ecx
call edi
push eax
call esi
push eax
lea edx [ ebp - 0x38 ]
lea eax [ ebp - 0xc8 ]
push edx
lea ecx [ ebp - 0x48 ]
push eax
push ecx
call edi
push eax
call esi
movsx edx [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xb8 ]
push edx
push eax
call esi
push eax
call sub_403bd8
call [ __vbaSetSystemError@IAT ]
lea ecx [ ebp - 0xb8 ]
lea edx [ ebp - 0x98 ]
push ecx
lea eax [ ebp - 0x78 ]
push edx
lea ecx [ ebp - 0x58 ]
push eax
lea edx [ ebp - 0x38 ]
push ecx
push edx
push 0x5
call [ __vbaFreeVarList@IAT ]
add esp 0x18
push sub_40ab3b
jmp r-xdata
jmp [ eax * 4 + jump_table_40ab6c ]
retn
mov [ ebp - 0x18 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x18 ] ebx
jmp r-xdata
mov [ ebp - 0x18 ] 0xfffffffe
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
sub_40aaef
test [ ebp - 0x4 ] 0x4
je r-xdata
lea eax [ ebp - 0xb8 ]
lea ecx [ ebp - 0xa8 ]
push eax
lea edx [ ebp - 0x98 ]
push ecx
lea eax [ ebp - 0x88 ]
push edx
lea ecx [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x68 ]
push ecx
lea eax [ ebp - 0x58 ]
push edx
lea ecx [ ebp - 0x48 ]
push eax
lea edx [ ebp - 0x38 ]
push ecx
push edx
push 0x9
call [ __vbaFreeVarList@IAT ]
add esp 0x28
retn
lea ecx [ ebp - 0x28 ]
call [ __vbaFreeVar@IAT ]
sub_40ab3b
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x28 ]
mov ecx eax
pop edi
pop esi
pop ebx
mov [ ecx ] edx
mov edx [ ebp - 0x24 ]
mov [ ecx + 0x4 ] edx
mov edx [ ebp - 0x20 ]
mov [ ecx + 0x8 ] edx
mov edx [ ebp - 0x1c ]
mov [ ecx + 0xc ] edx
mov ecx [ ebp - 0x14 ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0xc
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_40e27d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_40ee90
add esp 0x4
call sub_40f050
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_40f080
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_40f080
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_40ee90
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_40ee90
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_40ee90
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_40ee90
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
push 0x37b18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_40efc0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0x37b18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_40e27d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_40ee90
add esp 0x4
call sub_40f050
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_40f080
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_40f080
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_40ee90
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_40ee90
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_40ee90
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_40ee90
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
push 0x37b18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_40efc0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0x37b18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_40ee90
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_40efc0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x64
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
xor eax 0x80be78ab
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] al
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1 ]
cmp edx 0x7d
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x77
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp eax 0x61
jne rwxdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3e4
mov [ ebp - 0x4 ] ecx
sub_40f050
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_40f080
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
__vbaChkstk
jmp [ __vbaChkstk@IAT ]
_adj_fdiv_m16i
jmp [ _adj_fdiv_m16i@IAT ]
_adj_fdiv_m32
jmp [ _adj_fdiv_m32@IAT ]
_adj_fdiv_m32i
jmp [ _adj_fdiv_m32i@IAT ]
_adj_fdiv_m64
jmp [ _adj_fdiv_m64@IAT ]
_adj_fdiv_r
jmp [ _adj_fdiv_r@IAT ]
_adj_fdivr_m16i
jmp [ _adj_fdivr_m16i@IAT ]
_adj_fdivr_m32
jmp [ _adj_fdivr_m32@IAT ]
_adj_fdivr_m32i
jmp [ _adj_fdivr_m32i@IAT ]
_adj_fdivr_m64
jmp [ _adj_fdivr_m64@IAT ]
_adj_fpatan
jmp [ _adj_fpatan@IAT ]
_adj_fprem
jmp [ _adj_fprem@IAT ]
_adj_fprem1
jmp [ _adj_fprem1@IAT ]
_adj_fptan
jmp [ _adj_fptan@IAT ]
_CIatan
jmp [ _CIatan@IAT ]
_CIcos
jmp [ _CIcos@IAT ]
_CIexp
jmp [ _CIexp@IAT ]
_CIlog
jmp [ _CIlog@IAT ]
_CIsin
jmp [ _CIsin@IAT ]
_CIsqrt
jmp [ _CIsqrt@IAT ]
_CItan
jmp [ _CItan@IAT ]
_allmul
jmp [ _allmul@IAT ]
DllFunctionCall
jmp [ DllFunctionCall@IAT ]
__vbaLenBstr
jmp [ __vbaLenBstr@IAT ]
Ordinal_MSVBVM60_619
jmp [ Ordinal_MSVBVM60_619@IAT ]
__vbaInStr
jmp [ __vbaInStr@IAT ]
Ordinal_MSVBVM60_617
jmp [ Ordinal_MSVBVM60_617@IAT ]
Ordinal_MSVBVM60_528
jmp [ Ordinal_MSVBVM60_528@IAT ]
__vbaStrVarMove
jmp [ __vbaStrVarMove@IAT ]
Ordinal_MSVBVM60_598
jmp [ Ordinal_MSVBVM60_598@IAT ]
__vbaLateIdCall
jmp [ __vbaLateIdCall@IAT ]
__vbaCastObj
jmp [ __vbaCastObj@IAT ]
Ordinal_MSVBVM60_685
jmp [ Ordinal_MSVBVM60_685@IAT ]
__vbaFreeVarList
jmp [ __vbaFreeVarList@IAT ]
__vbaCastObjVar
jmp [ __vbaCastObjVar@IAT ]
__vbaOnError
jmp [ __vbaOnError@IAT ]
__vbaErrorOverflow
jmp [ __vbaErrorOverflow@IAT ]
__vbaFreeObjList
jmp [ __vbaFreeObjList@IAT ]
__vbaI2I4
jmp [ __vbaI2I4@IAT ]
__vbaStrCmp
jmp [ __vbaStrCmp@IAT ]
__vbaSetSystemError
jmp [ __vbaSetSystemError@IAT ]
__vbaObjSetAddref
jmp [ __vbaObjSetAddref@IAT ]
__vbaStrR4
jmp [ __vbaStrR4@IAT ]
__vbaFreeVar
jmp [ __vbaFreeVar@IAT ]
__vbaFreeStrList
jmp [ __vbaFreeStrList@IAT ]
__vbaStrI2
jmp [ __vbaStrI2@IAT ]
__vbaStrMove
jmp [ __vbaStrMove@IAT ]
__vbaR4Var
jmp [ __vbaR4Var@IAT ]
__vbaObjSet
jmp [ __vbaObjSet@IAT ]
__vbaFreeObj
jmp [ __vbaFreeObj@IAT ]
__vbaFreeStr
jmp [ __vbaFreeStr@IAT ]
__vbaNew2
jmp [ __vbaNew2@IAT ]
__vbaStrCopy
jmp [ __vbaStrCopy@IAT ]
__vbaHresultCheckObj
jmp [ __vbaHresultCheckObj@IAT ]
Ordinal_MSVBVM60_536
jmp [ Ordinal_MSVBVM60_536@IAT ]
Ordinal_MSVBVM60_519
jmp [ Ordinal_MSVBVM60_519@IAT ]
Ordinal_MSVBVM60_572
jmp [ Ordinal_MSVBVM60_572@IAT ]
__vbaStrCat
jmp [ __vbaStrCat@IAT ]
__vbaFpI4
jmp [ __vbaFpI4@IAT ]
__vbaRecDestruct
jmp [ __vbaRecDestruct@IAT ]
__vbaNew
jmp [ __vbaNew@IAT ]
__vbaRecDestructAnsi
jmp [ __vbaRecDestructAnsi@IAT ]
__vbaRecAnsiToUni
jmp [ __vbaRecAnsiToUni@IAT ]
__vbaRecUniToAnsi
jmp [ __vbaRecUniToAnsi@IAT ]
__vbaStrToAnsi
jmp [ __vbaStrToAnsi@IAT ]
__vbaUI1I2
jmp [ __vbaUI1I2@IAT ]
__vbaGenerateBoundsError
jmp [ __vbaGenerateBoundsError@IAT ]
__vbaStrI4
jmp [ __vbaStrI4@IAT ]
Ordinal_MSVBVM60_546
jmp [ Ordinal_MSVBVM60_546@IAT ]
__vbaDateVar
jmp [ __vbaDateVar@IAT ]
__vbaStrFixstr
jmp [ __vbaStrFixstr@IAT ]
Ordinal_MSVBVM60_644
jmp [ Ordinal_MSVBVM60_644@IAT ]
__vbaStrToUnicode
jmp [ __vbaStrToUnicode@IAT ]
__vbaVarMove
jmp [ __vbaVarMove@IAT ]
Ordinal_MSVBVM60_608
jmp [ Ordinal_MSVBVM60_608@IAT ]
Ordinal_MSVBVM60_607
jmp [ Ordinal_MSVBVM60_607@IAT ]
__vbaVarDiv
jmp [ __vbaVarDiv@IAT ]
__vbaI4Var
jmp [ __vbaI4Var@IAT ]
__vbaLateMemCallLd
jmp [ __vbaLateMemCallLd@IAT ]
EVENT_SINK_QueryInterface
jmp [ EVENT_SINK_QueryInterface@IAT ]
EVENT_SINK_AddRef
jmp [ EVENT_SINK_AddRef@IAT ]
EVENT_SINK_Release
jmp [ EVENT_SINK_Release@IAT ]
Ordinal_MSVBVM60_303
jmp [ Ordinal_MSVBVM60_303@IAT ]
Ordinal_MSVBVM60_309
jmp [ Ordinal_MSVBVM60_309@IAT ]
Ordinal_MSVBVM60_100
jmp [ Ordinal_MSVBVM60_100@IAT ]
sub_401bd2
sti
add [ edx - 0x79ff073a ] bl
fyl2xp1
add [ ecx - 0x45ff0329 ] bl
0xef
sub_401be5
shr ecx 0x1
add [ ebp - 0x4eff0c37 ] ch
0xf6
sub_401c31
out 0xda al
add ch dh
0xeefd00dd 0xdc
sub_401c4e
fld [ eax ]
enter 0xf5c3 0x0
0xffc2
sub_401d92
stc
inc esi
sub bh ch
0xb9c3
sub_401db2
0xefaf2766 0xf4f5
sub_401db9
shl ecx cl
hlt
sub_4037b0
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_40389c
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_4038e8
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_403930
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_403978
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_4039c0
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_403a14
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_403a5c
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_403b24
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_403b78
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_403bd8
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_403cf4
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_403ed0
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_403f3c
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_403f84
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_405124
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
retn
sub_40512e
retn
sub_4052d9
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x1c ]
push eax
lea edx [ ebp - 0x18 ]
push ecx
push edx
push 0x3
call [ __vbaFreeStrList@IAT ]
add esp 0x10
retn
sub_4052f1
retn
sub_4053c4
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
retn
sub_4053ce
retn
sub_405764
lea ecx [ ebp - 0x20 ]
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0x28 ]
lea eax [ ebp - 0x24 ]
push edx
push eax
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
retn
sub_405ed9
lea ecx [ ebp - 0x28 ]
call [ __vbaFreeObj@IAT ]
retn
sub_4062b8
lea ecx [ ebp - 0x28 ]
call [ __vbaFreeObj@IAT ]
retn
sub_406698
lea ecx [ ebp - 0x28 ]
call [ __vbaFreeObj@IAT ]
retn
sub_4069d3
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0x34 ]
push eax
push ecx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
retn
sub_406a90
mov eax [ esp + 0x4 ]
retn 0x4
sub_406d90
lea ecx [ ebp - 0x48 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x4c ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x5c ]
call [ __vbaFreeVar@IAT ]
retn
sub_406dce
mov ecx [ ebp - 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_406eea
lea ecx [ ebp - 0x14 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
retn
sub_406efd
retn
sub_406efe
mov ecx [ ebp - 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_408fec
mov eax [ ebp - 0xc0 ]
mov ecx [ ebp - 0x20 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4095d4
mov ecx [ ebp - 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_4096ff
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409a5e
lea ecx [ ebp - 0x45c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x464 ]
lea edx [ ebp - 0x460 ]
push ecx
push edx
push 0x2
call [ __vbaFreeObjList@IAT ]
add esp 0xc
lea ecx [ ebp - 0x474 ]
call [ __vbaFreeVar@IAT ]
retn
sub_409b02
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeStr@IAT ]
retn
sub_409b0c
retn
sub_409c04
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeObj@IAT ]
retn
sub_409c0e
retn
sub_409ec2
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeStr@IAT ]
retn
sub_409ecc
retn
sub_409f52
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeStr@IAT ]
retn
sub_409f5c
retn
sub_40a05b
lea ecx [ ebp - 0x18 ]
call [ __vbaFreeStr@IAT ]
retn
sub_40a065
retn
sub_40a351
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x44 ]
call [ __vbaFreeObj@IAT ]
retn
lea ecx [ ebp - 0x3c ]
call [ __vbaFreeObj@IAT ]
sub_40a374
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x3c ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x14 ]
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40a4b0
lea ecx [ ebp - 0xb8 ]
call [ __vbaFreeVar@IAT ]
retn
sub_40a4bd
retn
sub_40a8eb
mov ecx [ ebp - 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
