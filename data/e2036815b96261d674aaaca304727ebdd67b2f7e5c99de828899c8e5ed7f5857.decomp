sub_401148
push es
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
sbb ah [ ecx + 0x47 ]
add ah dh
pushad
inc edi
add [ esi ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebx + 0x47 ] ah
add cl bl
bound eax [ edi ]
add [ es : eax + eax ] dl
add [ eax ] al
add [ eax ] al
fmul [ edi - 0x7059ffb9 ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004011 ] al
add [ eax ] eax
add [ esi - 0x6affb89d ] cl
arpl [ edi ] ax
xchg ebp eax
arpl [ edi ] ax
std
inc edi
add [ 0xffffffff8f004765 ] dl
inc edi
add [ ecx ] cl
inc di
add [ ebx - 0x33ffb89a ] al
inc di
add [ esi ] cl
inc edi
add [ edi - 0x53ffb899 ] ah
inc edi
add [ edi + 0x67e60047 ] ch
inc edi
add [ eax + ebp * 2 ] al
inc edi
add [ ecx ] cl
push 0x68090047
inc edi
add [ ebx + 0x68 ] cl
inc edi
add ah ah
push 0x68e90047
inc edi
add cl ch
push 0x69020047
inc edi
add [ eax ] ah
imul eax [ edi ] r-xdata
and eax 0x46004769
imul eax [ edi ] r-xdata
in al 0x69
inc edi
add ah ah
imul eax [ edi ] r-xdata
sbb ebp [ edx + 0x47 ]
add [ eax ] ah
push 0x47
add [ eax ] ah
push 0x47
add [ ecx + 0x6a ] al
inc edi
add dl bl
push 0x47
add bh bl
push 0x47
add bh bl
push 0x47
add [ ecx ] bl
imul eax [ edi ] 0x37
imul eax [ edi ] 0x3c
imul eax [ edi ] 0x3c
imul eax [ edi ] 0x7e
imul eax [ edi ] 0x17
insb
inc edi
add [ esp + ebp * 2 ] bl
inc edi
add [ esp + ebp * 2 ] bl
inc edi
add [ esi + 0x6c ] bl
inc edi
add bh dh
insb
inc edi
add ah bh
insb
inc edi
add ah bh
insb
inc edi
add [ esi ] dh
insd
inc edi
add [ ebp + ebp * 2 + 0x47 ] dl
add [ ecx + 0x6d ] bl
inc edi
add [ ecx + 0x6d ] bl
inc edi
add [ edx + 0x6d ] bh
inc edi
add [ ebx ] dl
outsb
inc edi
add [ eax ] bl
outsb
inc edi
add [ eax ] bl
outsb
inc edi
add [ ecx ] dh
outsb
inc edi
add [ edi + 0x6e ] cl
inc edi
add [ esi + ebp * 2 + 0x47 ] dl
add [ esi + ebp * 2 + 0x47 ] dl
add [ ebp + 0x6e ] dh
inc edi
add [ esi ] cl
outsd
inc edi
add [ ebx ] dl
outsd
inc edi
add [ ebx ] dl
outsd
inc edi
add [ edi + ebp * 2 ] ch
inc edi
add [ edx + 0x6f ] cl
inc edi
add [ edi + 0x6f ] cl
inc edi
add [ edi + 0x6f ] cl
inc edi
add [ ecx + 0x2a00476f ] dl
jo r-xdata
inc edi
add [ eax + 0x21004772 ] cl
add [ edi ] ch
jo r-xdata
inc edi
add [ eax - 0x49ffb88b ] bl
jne r-xdata
add [ esi ] ah
jae r-xdata
jae r-xdata
inc edi
add [ ecx ] ah
add [ edi ] ch
jo r-xdata
inc edi
add [ esi + 0x78 ] ch
add [ ebx - 0x44ffb88b ] bh
jne r-xdata
inc edi
add [ esi - 0x44ffb88b ] dh
jne r-xdata
add [ esi ] ah
jae r-xdata
inc edi
add [ ecx + 0x70 ] ch
inc edi
add [ edi - 0x73ffb890 ] al
jo r-xdata
inc edi
add [ ecx + edi * 2 + 0x47 ] ch
inc edi
add [ ecx - 0x6effb888 ] dl
js r-xdata
add ch bh
inc edi
add [ eax + edi * 2 + 0x78910047 ] cl
jne r-xdata
add [ ebx - 0x2ffb88b ] bh
inc edi
add [ eax + 0x73 ] ah
inc edi
add [ esi + 0x73 ] bh
inc edi
add [ ebx - 0x7cffb88d ] al
jae r-xdata
add [ eax + esi * 2 + 0x70ce0047 ] cl
inc edi
add [ edi + 0x71 ] ah
inc edi
add [ ecx + esi * 2 + 0x47 ] ch
add [ ecx + esi * 2 + 0x47 ] ch
add [ ebp + 0x26004771 ] cl
jb r-xdata
inc edi
add [ eax - 0x5fffb882 ] ah
jle r-xdata
add bl ch
jpo r-xdata
inc edi
add [ edx - 0x3fffb884 ] ah
add dh cl
jns r-xdata
inc edi
js r-xdata
add bl dl
inc edi
add [ ecx - 0x2cffb888 ] dl
add [ esi - 0x64ffb88a ] dl
jbe r-xdata
inc edi
add [ ebx - 0x64ffb88a ] bl
jbe r-xdata
add [ ebx + esi * 2 + 0x743d0047 ] ah
inc edi
add [ edx + 0x74 ] al
inc edi
add [ edx + 0x74 ] al
inc edi
add [ esp + esi * 2 + 0x47 ] bh
add [ ebx ] ch
jb r-xdata
inc edi
add [ edi - 0x68ffb87f ] dl
add dl bl
jle r-xdata
inc edi
add [ esp + edi * 2 + 0x7c890047 ] al
inc edi
add [ ecx - 0x5dffb884 ] cl
jl r-xdata
inc edi
add ch al
jl r-xdata
jl r-xdata
inc edi
add dh cl
jns r-xdata
inc edi
add dl cl
jpo r-xdata
inc edi
add [ ebx - 0x43ffb88a ] bl
jbe r-xdata
add [ ecx + 0x79 ] dh
inc edi
add [ esi + esi * 2 + 0x77550047 ] bh
inc edi
add [ ecx - 0x69ffb889 ] dl
ja r-xdata
add [ edi - 0x1effb88c ] bl
add [ edx - 0x60ffb88c ] bl
je r-xdata
inc edi
add [ ebx ] ch
jb r-xdata
inc edi
add [ edi - 0x2effb87f ] dl
add al bh
jle r-xdata
inc edi
add al al
inc edi
add ah dh
add [ edi ] r-xdata
scasb [ edi ]
add [ edi - 0x43ffb881 ] dh
jg r-xdata
inc edi
add ch al
jl r-xdata
inc edi
add [ eax ] dl
jpe r-xdata
add [ edi ] 0xb3
inc edi
add [ edx - 0x68ffb87f ] dl
add [ edi ] r-xdata
rol [ ecx - 0x7e10ffb9 ] 0x1
add [ eax - 0x25ffb882 ] ah
inc edi
add [ ecx + 0x79 ] dh
inc edi
add [ ebx - 0x36ffb887 ] ch
jns r-xdata
inc edi
add [ edx + 0x77 ] bl
inc edi
add [ edx + 0x77 ] bl
inc edi
add [ ebx + 0x77 ] dh
add [ ebp + 0x77 ] dl
inc edi
add [ esi - 0x48ffb889 ] dl
ja r-xdata
inc edi
add [ edx + 0x75 ] bh
inc edi
add [ edi + 0x75 ] bh
inc edi
add [ edi + 0x75 ] bh
inc edi
add [ edi - 0x60ffb88c ] bl
je r-xdata
add [ edx + esi * 2 + 0x47 ] al
add [ edx + 0x72 ] ah
inc edi
add [ edi + 0x72 ] ah
inc edi
add [ edi + 0x72 ] ah
add [ edi ] r-xdata
hlt
inc edi
add cl dl
add ch bh
jle r-xdata
inc edi
add ah dh
add [ edi ] r-xdata
adc eax 0xae004782
add [ esi ] bl
jg r-xdata
inc edi
add [ 0xffffffff99004786 ] bh
add [ edi ] 0xb3
add [ edi ] 0xed
inc edi
add [ esi - 0x4cffb87e ] ch
add [ edi ] r-xdata
out dx eax
add [ edi + edi * 2 + 0x7ff60047 ] bh
inc edi
inc edi
add [ edi + edi * 2 + 0x7fbc0047 ] bh
inc edi
add dh dh
jg r-xdata
add dh ah
jl r-xdata
inc edi
add [ ecx - 0x51ffb886 ] ch
jpe r-xdata
inc edi
add [ esi - 0x17ffb886 ] ch
inc edi
add [ eax + 0x78 ] dl
inc edi
inc edi
add [ esi - 0x69ffb889 ] dl
ja r-xdata
je r-xdata
add cl ah
add [ edi ] r-xdata
hlt
inc edi
add bh ch
add ch bh
jle r-xdata
dec edx
test [ edi ] al
jecxz r-xdata
inc edi
add [ esi - 0x5effb876 ] al
mov al [ edi ]
mov dl 0x8a
inc edi
add al al
mov al [ edi ]
sub [ ebx - 0x74abffb9 ] cl
inc edi
add [ ebx + ecx * 4 + 0x47 ] ch
add [ eax - 0x3affb875 ] dh
mov eax [ edi ]
stc
mov eax [ edi ]
or cl [ edi + eax * 2 + 0x478c1800 ]
add [ esp + ecx * 4 + 0x47 ] cl
add [ esp + ecx * 4 + 0x47 ] cl
add [ esi - 0x74 ] ah
inc edi
add [ edi ] ch
lea eax [ edi ]
mov edi 0xe300478d
mov es [ edi ]
cmp cl [ edi - 0x707cffb9 ]
inc edi
add [ esi + 0x478f ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
aas
add [ edi ] 0xb
add [ edi ] 0x10
add [ edi ] 0x10
add [ edi ] 0x2e
add [ edi ] 0xffffffc7
add [ edi ] 0xffffffcc
add [ edi ] 0xffffffcc
add [ edi ] 0xffffffe5
add [ edi ] 0x3
test [ edi ] al
or [ edi + eax * 2 + 0x47840800 ] al
add [ edx - 0x7c ] cl
inc edi
add bl ah
test [ edi ] al
call 0xffffffffe8405c69
test [ edi ] al
add [ ebp - 0x7ae0ffb9 ] eax
inc edi
add [ eax * 4 - 0x7adbffb9 ] ah
inc edi
add [ eax ] al
xchg [ edi ] al
jbe 0xffffffff86661549
inc edi
add [ ebx - 0x12ffb87e ] dh
add [ eax + eax * 4 ] dl
inc edi
add [ ecx ] bl
add [ edi ] 0x19
inc edi
add [ edi + 0x7d ] bh
add [ edi ] 0xd3
inc edi
add [ edx ] bh
add al al
jge r-xdata
inc edi
add [ ebp + edi * 2 + 0x7d9d0047 ] al
add [ esi ] al
jpo r-xdata
inc edi
add [ esi - 0x51ffb886 ] ch
jpe r-xdata
add [ edi + 0x50004777 ] dh
js r-xdata
add [ edi ] 0x3a
inc edi
add [ ecx ] bl
xchg [ edi ] al
cmc
xchg [ edi ] al
add al 0x87
inc edi
add [ edi + eax * 4 ] al
inc edi
add [ eax - 0x79 ] al
inc edi
add [ edx - 0x79 ] bl
inc edi
add [ ebx - 0x59ffb879 ] al
xchg [ edi ] eax
mov ecx 0xbe004787
xchg [ edi ] eax
mov esi 0xe5004787
xchg [ edi ] eax
or [ eax - 0x7772ffb9 ] 0x89070047
inc edi
add bh ah
mov [ edi ] eax
pop edx
mov al [ edi ]
jne r-xdata
inc edi
add al ch
test [ edi ] al
call 0x1405c6d
test [ edi ] eax
pop ds
test [ edi ] eax
and al 0x85
inc edi
add [ eax * 4 - 0x79ffffb9 ] ah
inc edi
add [ edi ] cl
xchg [ edi ] al
xchg [ es : edi ] al
cmp eax 0x99004786
add [ edi ] 0xd8
inc edi
add bl dl
add al al
jge r-xdata
inc edi
add [ ebp - 0x44ffb883 ] bl
jge r-xdata
add [ ebx ] cl
jpo r-xdata
inc edi
add [ ebp + edi * 2 + 0x7d840047 ] al
jpe r-xdata
add al ch
inc edi
add [ ebp + 0x78 ] dl
inc edi
add [ ebp + 0x78 ] dl
add [ edi ] 0xd8
inc edi
add al bl
add [ edx ] al
jle r-xdata
inc edi
add [ ebx - 0x3fffb883 ] bh
add [ ebx ] cl
jpo r-xdata
add [ edi ] 0xf9
add [ edi ] 0x92
add [ edi ] r-xdata
xchg edi eax
inc edi
add al bl
add [ ebx - 0x5fffb882 ] bl
jle r-xdata
inc edi
add [ ebx + edi * 2 ] ch
inc edi
add ch al
jpo r-xdata
inc edi
add dl cl
jpo r-xdata
_start
push r-xdata
call Ordinal_MSVBVM60_100
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
add [ eax ] al
cmp [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsd [ esi ]
in eax dx
cld
xchg ebx eax
shl [ ecx ] 0x1
out dx al
dec edi
mov ch 0xa9
xchg edi eax
int 0x6
adc al [ ebp ]
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx ] al
push es
push eax
add [ ecx ] 0x52
outsd
bound esi [ ebp + 0x72 ]
add [ ebx ] dh
add al [ eax ]
add [ eax ] al
add [ ecx ] al
add [ 0x40264400 ] dl
add [ eax ] al
add [ eax ] al
add bh bh
sub_401eaf
dec [ eax ]
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add cl ch
add [ eax ] al
add [ edi + ebx ] al
inc eax
add ah cl
pop ss
inc eax
add [ eax + 0x78004017 ] dl
add [ eax ] al
add [ edx - 0x78000000 ] al
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x63 ] dl
popad
jb r-xdata
add [ eax ] al
push eax
add [ eax ] al
add [ ecx - 0x30 ] bl
fisttp [ edi + 0x4c2f8d1a ]
scasd [ edi ]
mov [ edi + 0x70 ] al
cmp al 0x83
push ebx
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsub st6
push es
add [ eax ] al
add [ eax ] al
add al ah
insd
inc eax
add [ eax + eax + 0x1f40000 ] bl
add [ eax ] al
inc esp
inc eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x5fffb8a2 ] al
nop
inc edi
add [ eax + 0x800001d ] al
mov al [ 0x15b60047 ]
inc eax
add [ eax ] al
mov al [ 0x47 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
bound ebp [ edi + 0x69 ]
add [ fs : ebx + 0x70 ] dl
outsd
je r-xdata
add eax 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jmp r-xdata
add [ eax ] al
push edx
outsd
bound esi [ ebp + 0x72 ]
add [ eax ] al
push eax
add [ eax ] al
add [ edi ] dl
in eax dx
and dl [ esi - 0x77 ]
dec edx
test [ esi - 0x47 ] 0xbc3d09fe
iretd
add [ eax ] al
add [ eax ] al
add ah dh
imul eax [ eax ] 0x4c
add [ eax ] al
add [ eax ] dl
add [ eax ] al
pop ecx
rcr bl 0x1
sub_4029ff
push esp
inc ebx
inc eax
add [ eax ] al
add [ eax ] al
add al bh
mov eax [ 0x47 ]
add [ eax ] al
les ebp [ eax + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
inc [ eax ]
add [ ecx ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
hlt
sub_402a5f
push esp
inc ebx
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] bl
mov [ 0x47 ] al
add [ eax ] al
aam 0x2c
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
inc [ eax ]
add [ ecx ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
int3
sub_40e181
dec [ ecx + 0x27d9c52 ]
mov cl 0x98
or ebx [ ecx + ebp * 8 - 0x20bdda77 ]
stosd [ edi ]
push 0x9210760a
mov dh 0x33
sahf
xchg ebp eax
and bl [ ebx ]
popad
mov esp 0x2e1b66ff
mov ah 0x9f
int3
sub_419858
stc
mov edx 0x6d66cd10
cmp [ edi - 0x38 ] ebx
mov [ 0xfffffffffdecdd64 ] eax
cdq
jno r-xdata
push ss
fst [ edi ]
mov dh 0x21
fistp [ esi - 0x2f ]
inc esp
cmp eax 0x356c0711
mov [ edi - 0x5e ] ss
aam 0xd1
jae r-xdata
hlt
lahf
je r-xdata
in eax 0x4e
outsb
mov [ edx ] es
jpo r-xdata
mul bl
mov [ 0x39ad5ab1 ] al
fist [ ebx - 0x20a05c52 ]
pop esi
lodsd [ esi ]
inc esi
0x2e1d8e73 0xc93c
push ss
sub al 0x56
cmc
and eax 0xf6f1235b
sbb esi edx
lodsd [ esi ]
xor eax [ edx ]
dec edx
pushfd
push ss
cld
movsb [ edi ] [ esi ]
insd
xor eax [ edx ]
ja r-xdata
xchg ebp eax
mov ah 0x7
or [ ebx - 0x43 ] 0xff4ac5e6
and al 0xb8
jecxz r-xdata
jecxz r-xdata
push ds
or [ ecx - 0x2fbcc0bc ] ah
in al 0x31
mov al [ 0xffffffff96d98e55 ]
jecxz r-xdata
out 0xc5 al
dec edx
jmp [ eax + edi * 4 ]
mov dh 0xd9
and bl bh
arpl sp si
aam 0x14
dec ebp
or ebx [ ebp - 0x6c3e0295 ]
or eax 0xbb1a63ef
push cs
adc ebp [ edi - 0x52 ]
pop edx
retn
loope r-xdata
pop esp
stosb [ edi ]
sub [ esi - 0x6ab8e82d ] ebp
loope r-xdata
inc esp
aas
inc ebx
shr [ edi - 0x454a8375 ] 0x1
scasd [ edi ]
mov edi [ ebp + esi * 4 - 0x46 ]
pushad
fiadd [ ecx - 0x2f25102c ]
aam 0xc2
sub [ edx ] ecx
sbb esp [ edx - 0x5 ]
test [ edx + 0x1d569218 ] 0xbf
cmp edx [ ebx + eax * 8 ]
pushfd
and eax 0x46a7c674
mov ecx 0x81e15ac
mov eax [ 0xffffffffd0433f44 ]
aas
and [ eax + 0x1c ] bh
cmp [ edx + 0x50 ] cl
cdq
loop r-xdata
jmp r-xdata
not bh
adc dh [ ecx ]
dec edi
mov bl 0x46
pop ebp
aaa
xlat
mov edi 0x4218c5da
in al 0x57
pop es
test [ eax ] edi
salc
adc dh bl
mov al dl
mov cl 0xd
xchg edx eax
pop eax
in al dx
rcl [ edi ] cl
inc edi
xchg ebp eax
cmp dh [ edx + 0x12cd6fa2 ]
inc ebp
and bh dl
add [ ecx + 0x3c320552 ] edi
cmp [ edx ] ebp
and al [ eax ]
push esi
sub_41c958
push 0x6d
std
or al 0x60
push esp
push ds
adc ah cl
jge r-xdata
shl [ esi ] cl
xchg ebp eax
retn
aaa
movsb [ edi ] [ esi ]
mov esp 0x4dff502f
insd
sbb [ ecx ] edx
shl [ ecx - 0x39f7e273 ] 0xc4
sbb [ edx + 0x55981a6 ] bh
add dl [ edi - 0x78669c44 ]
scasb [ edi ]
add [ esi + 0x36d37921 ] ch
sub_41c98b
mov esp 0xf4af9d10
or eax 0xebd318fa
movsd [ edi ] [ esi ]
lodsd [ esi ]
mov al [ 0x724ba2d3 ]
xchg ecx eax
and [ edi - 0x16 ] dl
add [ ebp - 0x5cfaae60 ] ah
popad
dec edx
pop ebp
cmpsb [ esi ] [ edi ]
xor al 0x4a
popad
imul ebp [ ecx ] 0xddfab1ff
sbb al 0xb7
pop esp
adc [ eax - 0x493858a6 ] 0xfe
iretd
sub_42a094
aam 0xdb
loope r-xdata
push eax
push esi
pop ebp
arpl [ ecx + 0x70 ] bp
jbe r-xdata
out dx al
hlt
mov ebx 0xd4cec8c1
fdisi8087_nop
out 0xee eax
hlt
or [ ecx - 0x5d636a71 ] 0xa8
scasd [ edi ]
mov ch 0xbb
retn 0xcec8
sub_42c804
or dl [ eax ]
push ss
sbb eax 0x36302a23
add [ esi ] bh
inc esp
dec ebx
push ecx
push edi
pop esi
push 0x71
js r-xdata
test [ ebx - 0x5b61686f ] cl
stosb [ edi ]
mov cl 0xb7
mov ebp 0xd7d1cac3
fucom st3
jmp r-xdata
xchg edi eax
sahf
movsb [ edi ] [ esi ]
sub_42c82a
clc
inc [ ebx + ecx ]
adc [ eax ] ebx
push ds
and al 0x2a
xor [ edi ] esi
inc ebp
dec ebx
push ecx
pop eax
pop esi
imul esi [ gs : ecx + 0x77 ] 0x7e
test [ ebx - 0x5a61676f ] cl
stosd [ edi ]
mov cl 0xb8
mov esi 0xd7d1cbc4
fsubrp st4
0x5fef7f1 0x110b
sub_42d352
sbb eax 0x463b3127
push eax
pop edx
outsd
jns r-xdata
call 0x154cd1d8
pop ds
sub [ ebx ] esi
cmp eax 0x675d5247
jno r-xdata
lea edx [ edi - 0x3f49535e ]

adc bl [ esi ]
xor [ ebx ] edi
inc ebp
dec edi
pop ecx
outsb
js r-xdata
test [ eax - 0x444f5a66 ] edx
lea edx [ edi - 0x3e49545f ]

sub_42d740
rcr cl 0x1
jecxz r-xdata
xor al 0x3f
dec ecx
push esp
pop esi
push 0x92887d73
pushfd
cmpsb [ esi ] [ edi ]
mov al 0xbb
clc
add cl [ edi + edx ]
and [ ebx ] ebp
inc eax
dec edx
push esp
pop esi
push 0x92887e72
popfd
test al 0xb1
mov esp 0xe4dad0c6
out dx al
clc
add cl [ eax + ebx ]
and ch [ 0x554b4137 ]
pop edi
imul esi [ ebx + 0x7e ] 0xa79d9288
mov cl 0xbb
sub_43f53f
push ss
sbb eax 0x352f2923
cmp al 0x42
dec eax
dec esi
push ebp
pop ebx
popad
jpe r-xdata
add [ edi - 0x60666c73 ] 0xa6
lodsb [ esi ]
mov dl 0xb8
mov esi 0xd7d1cbc5
fsubrp st4
0x3fdf7f0 0xf09
insd
je r-xdata
xchg [ ebp - 0x595f666d ] cl
lodsb [ esi ]
mov bl 0xb9
mov edi 0xd9d2ccc6
sub_440634
idiv esi
add al 0xa
adc [ esi ] dl
sbb eax 0x352f2923
cmp al 0x42
dec eax
dec esi
push esp
pop ebx
popad
imul esi [ edi - 0x7d ] 0xffffff8b
xchg ecx eax
0xc0bab3a6 0xd4c9
loope r-xdata
das
xor eax 0x4e48423c
out dx eax
test [ edx ] 0x241e180f
sub esi [ eax + eax * 2 ]
dec esp
push ebx
pop ecx
pop edi
insb
jb r-xdata
xchg esi eax
pushfd
mov [ 0xffffffffbcb5afa9 ] al
retn 0xcfc9
jg r-xdata
cmp al 0x42
dec eax
dec edi
push ebp
pop ebx
bound ebp [ eax + 0x6e ]
je r-xdata
mov edx [ edx - 0x545a6168 ]
mov cl 0xb7
add [ edi - 0x5f656b72 ] 0xb9b3ada6
rol dh 0xcc
rcr al cl
sub_443de8
salc
stosb [ edi ]
mov ecx 0xf0e3d5c7
dec [ edx + ebx ]
sub [ esi ] dh
inc esp
push edx
popad
jno r-xdata
stosb [ edi ]
salc
out dx al
push es
sbb eax 0x7a634b34
xchg ecx eax
test al 0xbf
xlat
out dx al
add eax 0x614a331c
ja r-xdata
lea ebx [ ebx - 0x37ff4857 ]
salc
in eax 0xf3
add [ eax ] edx
push ebx
bound esi [ eax + 0x7e ]
mov [ edx - 0x2b394958 ] ds
loop r-xdata
cmpsb [ esi ] [ edi ]
mov ebp 0x1c05eed7
xor ecx [ ebx + 0x61 ]
js r-xdata
mov [ edx - 0x2b3b4858 ] ds
loop r-xdata
mov ds [ ebp - 0x2a384655 ]
jecxz r-xdata
sbb ch [ eax ]
inc esp
dec [ edx + ebx ]
sub [ edi ] dh
inc ebp
push ebx
popad
outsd
jge r-xdata
or al 0x1a
cmpsd [ esi ] [ edi ]
mov esi 0x1b04edd6
xor cl [ ecx ]
jl r-xdata
sbb al 0x2a
cmp [ esi + 0x54 ] al
bound esi [ eax + 0x7e ]
dec [ 0x46382a1b ]
sbb eax 0x57493b2c
jae r-xdata
dec [ edx + ebx ]
sub [ esi ] dh
inc esp
cdq
test al 0xb6
cld
adc eax 0x57402902
insd
test [ ebx - 0x920364e ] bl
stosb [ edi ]
rcr eax 0xef
or [ edi ] bl
dec ebp
jpo r-xdata
push esp
bound esi [ eax + 0x7e ]
mov ebx [ edx - 0x2b384756 ]
jecxz r-xdata
sub bh [ eax ]
inc esi
dec [ esi ]
sbb al 0x2c
cmp ecx [ eax + 0x56 ]
jae r-xdata
or eax 0x69523b24
adc [ edi - 0xc233b52 ] 0xa
and [ eax ] edi
dec edi
jge r-xdata
fcomip st6
stosb [ edi ]
rcr eax 0xef
pop es
sbb eax 0x79624b34
nop
cmpsd [ esi ] [ edi ]
mov esi 0x1c05edd6
xor ecx [ ebx + 0x64 ]
jl r-xdata
mov [ esi - 0x313f4d5c ] dl
fsub st2
clc
push es
adc al 0x24
xor al [ eax + 0x4e ]
pop esp
push 0x78
xchg [ ebp - 0x32404e5d ] edx
fsub st1
test [ esi ] 0x3f302214
dec ebp
pop esp
push 0x78
xchg [ edx - 0x24324050 ] dl
jmp 0x2157430b
retn 0xf0d9
stosb [ edi ]
retn 0xefd9
sub_447f58
pop ds
sub eax 0x463f3933
dec esp
push edx
pop eax
pop edi
imul esi [ gs : ecx + 0x78 ] 0x7e
test [ edx + 0x9d9791 ] cl
movsd [ edi ] [ esi ]
stosd [ edi ]
mov cl 0xb8
mov esi 0xd7d1cac4
fucom st7
dec [ ebx ]
adc [ eax ] ebx
push ds
and eax 0x3e38322b
inc ebp
dec esp
push edx
pop eax
pop esi
imul esi [ gs : ecx + 0x77 ] 0x7e
test [ ebx - 0x5b61676f ] ecx
stosd [ edi ]
mov cl 0xb7
mov ebp 0xd7d0cac4
fucom st3
0x3fdf6f0 0x1009
sub_447fa5
push ss
sbb al 0x22
sub [ edi ] ebp
xor eax 0x4e48423c
push ebp
pop ebx
popad
push 0x817b756e
mov [ esi - 0x585e656c ] cl
lodsd [ esi ]
mov bl 0xba
ror esp 0xd7
loop r-xdata
hlt
sub_44e678
into
fsub st4
out dx eax
sti
or [ eax ] dl
push ss
sbb eax 0x453e3226
push eax
pop ebx
jae r-xdata
imul esi [ gs : ecx + 0x77 ] 0x7e
test [ edx - 0x5c626870 ] cl
test eax 0xc3bcb6b0
leave
rcl dh 0x1
fsubr st2
call 0xa43dd0e
adc eax 0x332d2620
cmp [ edi ] edi
inc esi
dec esp
push ebx
pop ecx
pop edi
insb
jb r-xdata
or [ ebp - 0x48525b67 ] 0xc3
iretd
mov dh 0xbc
retn
jle r-xdata
inc ecx
dec ebp
pop eax
jo r-xdata
mov edx [ ecx - 0x555b6269 ]
mov al 0xb7
mov ebp 0xd6d0c9c3
fsubr st2
jmp 0x341dd34
xchg ecx eax
xchg edi eax
popfd
movsb [ edi ] [ esi ]
stosb [ edi ]
jge r-xdata
adc ebx [ 0x473d3228 ]
push ecx
pop esp
jo r-xdata
mov edx [ ecx - 0x555c6269 ]
mov al 0xb6
mov esp 0xd5cfc9c3
fsubr st2
call 0x240dcc0
pop es
push cs
adc al 0x1a
and [ esi ] ah
sub eax 0x463f3933
dec esp
push edx
pop eax
retn
test [ esi - 0x48525c67 ] cl
ror ebx 0xd6
loop r-xdata
int1
clc
inc [ edx + ecx ]
adc [ edi ] edx
sbb eax 0x36302a23
cmp al 0x43
dec edx
push eax
push esi
pop esp
bound ebp [ ecx + 0x6f ]
jne r-xdata
or [ eax + 0x9b948e ] 0xa6
mov cl 0xbc
sub_4521d8
push esp
pop edx
pushad
insb
jae r-xdata
mov [ esi - 0x585e646b ] cl
add [ esi - 0x60666c74 ] 0xa5
lodsb [ esi ]
mov dl 0xb8
mov esi 0xd7d1cbc5
fsubrp st4
0x3fdf7f0 0x1009
dec edx
push eax
push esi
pop esp
arpl [ ecx + 0x6f ] bp
jne r-xdata
in al dx
stc
inc [ 0x1e18120c ]
and eax 0xffffffff
scasb [ edi ]
mov ah 0xba
rol edi 0xcd
rcr edx cl
loopne r-xdata
or [ eax - 0x5e646a72 ] 0xa7
sub_45221d
push ss
sbb al 0x23
sub [ edi ] ebp
xor eax 0x4e48423c
push ebp
pop ebx
popad
outsb
je r-xdata
lahf
movsd [ edi ] [ esi ]
lodsb [ esi ]
mov dl 0xb8
mov edi 0xd8d2cbc5
fsubrp st5
jmp r-xdata
add [ edi - 0x5f656c73 ] 0xa6
lodsb [ esi ]
mov bl 0xb9
mov edi 0xd8d2ccc5
fsubrp st5
jmp r-xdata
cdq
0xb3aca6a0 0xbfb9
sub_452625
sti
add [ edi ] eax
or eax 0x26201a13
sub al 0x33
cmp [ edi ] edi
inc ebp
dec esp
push edx
pop eax
pop esi
imul esi [ fs : ecx + 0x77 ] 0x7d
test [ edx - 0x5c626970 ] cl
test eax 0xc2bcb5af
enter 0xd5ce 0xdb
loope r-xdata
out dx al
hlt
sub_4629b0
add cl [ 0x3c302418 ]
dec eax
push ebx
pop edi
imul esi [ esi - 0x7e ] 0xffffff8e
0xcbbfb3a6 0xe3d7
out dx eax
cli
push es
adc bl [ 0x493e3428 ]
push esp
pushad
imul edi [ eax - 0x7d ] 0xffffff8f
0xc8bcb1a5 0xdfd3
jmp r-xdata
sub_467621
add dl [ eax ]
sbb eax 0x5547392b
bound esi [ eax + 0x7e ]
mov [ edx - 0x2e3c4a58 ] ds
fucomip st5
sti
or [ esi ] edx
and al 0x32
inc eax
dec esi
pop esp
imul esi [ edi - 0x7b ] 0xb3a59700
ror esi 0xdc
0x211406f8 0x3d2f
sub_468cf2
cmp al 0xb8
inc ecx
test di 0xa3e9
rdtsc
test al 0xfb
cmp ecx 0xffffff
jne sub_468cf2
cmp edx 0x97c9b63a
pop eax
test ebx 0x97c9bff2
add al [ edi + 0x2 ]
cmp bx 0xc8f5
push eax
test dl 0x0
retn
sub_468df8
test di 0x28e4
pop ebx
test al 0x8d
push 0x0
cmp edx 0x97cb3ded
push esp
test ebx 0x97cb46b7
push ebx
cmp bx 0x5075
mov edx eax
test dl 0x31
call edx
test si 0x6234
pop eax
test al 0x3f
cmp eax 0xc
jl r-xdata
call sub_469043
cmp bh 0xb2
mov edx 0x36
cmp bh 0xaa
inc edx
cmp ax 0xb196
inc edx
cmp al 0x9
inc edx
test di 0xc2b9
inc edx
test al 0xfc
inc edx
cmp edx 0x97cbd3bc
inc edx
test ebx 0x97cbdc0a
inc edx
cmp bx 0xe4f9
inc edx
test dl 0x7
inc edx
test si 0xf579
inc edx
test al 0x2a
push edx
cmp si 0x86d
mov edx 0xff0
test ax 0x10d9
add edx 0x10
test edi 0x97cc1922
push edx
test bh 0xee
push 0x55e0
cmp cx 0x2c2c
sub edx 0xff0
cmp bh 0x98
sub edx 0x10
cmp bh 0xdf
push edx
cmp ax 0x4808
call eax
cmp al 0xa9
jmp r-xdata
cmp si 0x750d
mov ecx esp
test ax 0x7db4
sub ecx 0xffffffec
test edi 0x97cb8554
mov edx ecx
test bh 0x6e
sub edx 0xfffffff4
cmp cx 0x96d9
call sub_468ecf
pop esp
inc ebx
jae r-xdata
jns r-xdata
pushfd
pop edx
aad 0x75
jns r-xdata
pop ebp
das
dec ebx
mov [ ebx ] edx
je r-xdata
das
xor ebx [ ecx + 0x60 ]
mov es [ ebx ]
call 0x436b1c08
mov eax [ 0x1a3195c9 ]
sbb eax 0x5e22d14
sub [ ecx - 0x3 ] bh
stc
dec ecx
pop ss
and eax 0x929d76fb
cmp al [ ecx ]
aaa
or cl [ esi + 0x2c ]
sub ch bl
jmp r-xdata
test ah bl
pop esp
fst [ 0x1e6efe51 ]
push ebx
jo r-xdata
mov al [ 0xffffffffa0798f2f ]
das
xchg esi eax
0x8e605933 0xe803
sub_468ecf
test di 0x59a0
pop edi
test al 0xc9
cmp edx 0x97cc6a7e
inc esi
test ebx 0x97cc72a2
mov edx [ edi ]
cmp bx 0x7c6e
xor edx esi
test dl 0xe7
mov ebx [ esp + 0x10 ]
test si 0x8f2e
cmp edx ebx
jne r-xdata
test al 0xfd
mov ebx 0x55e0
cmp si 0xa1fe
test ax 0xaba6
sub ebx 0x4
test edi 0x97ccb3f8
push [ edi + ebx ]
test bh 0xcd
pop edx
cmp cx 0xc75c
call sub_468cc1
cmp bh 0x92
or [ eax + ebx ] edx
cmp bh 0xf6
test ebx ebx
jne r-xdata
cmp ax 0xe3cd
jmp eax
sub_469043
cmp eax 0x97ccfd5e
push 0x30
test ecx 0x97cd0699
pop ebx
test cx 0x1122
push [ fs : ebx ]
cmp edx 0x97cd19f4
pop ebx
cmp ebx 0x97cd2382
mov ebx [ ebx + 0xc ]
test bl 0x11
mov ebx [ ebx + 0x14 ]
cmp ebx 0x97cd35fa
push ecx
cmp eax 0x97cd3ef6
mov ebx [ ebx ]
test ecx 0x97cd47fc
mov ecx [ ebx + 0x28 ]
test cx 0x52ac
push 0x4f756
cmp edx 0x97cd5bee
pop eax
cmp ebx 0x97cd6a53
add eax 0x3d0900
test bl 0x44
cmp [ ecx + 0x4 ] eax
jne r-xdata
cmp ebx 0x97cd8020
push 0x15f74d
cmp eax 0x97cd897a
pop eax
test ecx 0x97cd9283
add eax 0x3d0900
test cx 0x9bbd
cmp [ ecx ] eax
jne r-xdata
cmp edx 0x97cda695
pop ecx
cmp ebx 0x97cdb018
mov esi [ ebx + 0x10 ]
test bl 0xb5
mov edi esi
cmp ebx 0x97cdc153
mov ebx [ esi + 0x3c ]
cmp eax 0x97cdcb3b
add esi ebx
test ecx 0x97cdd538
mov ebx [ esi + 0x78 ]
test cx 0xdedc
mov eax edi
cmp edx 0x97cde728
add eax ebx
cmp ebx 0x97cdf037
mov esi eax
test bl 0x5
add esi 0x28
cmp ebx 0x97ce03a5
lodsd [ esi ]
cmp eax 0x97ce0ced
test eax eax
je r-xdata
test ecx 0x97ce174b
add eax edi
test cx 0x21a6
mov ebx [ esp + 0x8 ]
cmp edx 0x97ce2a4e
cmp [ eax ] ebx
jne r-xdata
cmp ebx 0x97ce34f5
mov ebx [ eax + 0x4 ]
test bl 0xdd
cmp ebx [ esp + 0xc ]
jne r-xdata
cmp ebx 0x97ce47c9
mov esi [ esp + 0x10 ]
cmp eax 0x97ce5151
push 0x0
test ecx 0x97ce5b50
pop ebx
test cx 0x64a4
push ebx
cmp edx 0x97ce6cfb
push ebx
cmp ebx 0x97ce7752
push ebx
test bl 0x52
push esp
cmp ebx 0x97ce8abb
push esi
cmp eax 0x97ce94f1
push edx
test ecx 0x97ce9f0c
push ecx
test cx 0xa97d
push esp
cmp edx 0x97ceb246
call eax
cmp ebx 0x97cebd14
add esp 0x1c
test bl 0x2f
retn
sub_469a26
popfd
push edi
push ebx
aad 0x75
or bl bh
lds esi [ ebx + eax * 4 + 0x5a ]
mov ebp 0xd55a8b75
mov dl [ esi ]
dec edx
aam 0x75
xor [ eax ] 0xffffffd5
mov dl [ esi ]
dec edx
aam 0x75
and [ edi - 0x2b ] 0x7d
sbb [ edx - 0x26 ] 0xfffffff7
retn
sub_469ed4
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
rcl [ eax - 0x43 ] cl
sbb [ edx - 0x2b ] 0xfffffff6
jpo r-xdata
xor edi [ esp + ebx + 0x1cbc33ea ]
0xea1cbc33 0xbc33
mov eax [ 0xffffffffd41e6b79 ]
jne r-xdata
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
push 0x689e3eb1
mov cl 0x3e
sahf
imul edi ebp 0xffffffc0
jne r-xdata
cmp bh [ 0xffffffffd55a942c ]
adc al 0x8
daa
fld [ edx + ecx * 2 - 0x64 ]
sar [ edx - 0x7d ] 0x1
sbb edx [ esp + ecx * 4 - 0x7d ]
pop eax
aad 0x75
imul [ ecx + 0x5a83746d ]
aad 0xfc
mov [ edx ] 0x3c
or eax 0x2dd55aaf
shl [ edx + 0x5a836987 ] cl
cmp al 0x9b
sbb [ edx - 0x2b ] 0x1c
0xea1cbc33 0xbc33
sub_46a159
shl [ ebx + eax * 4 + 0x5a ] 0xbd
mov al [ ebx + 0x44f4d55a ]
pop edx
aam 0x75
or [ 0x5b839a54 ] 0xffffffd5
jne r-xdata
xor eax 0xd18375cb
test al 0x79
add bl [ ebp + 0x5a8379cd ]
sbb [ 0x75d55a7c ] 0x7c
iretd
movsd [ edi ] [ esi ]
inc eax
insd
sbb [ edx - 0x2b ] 0x9c
sub al 0x70
aad 0x75
fcmovnu st3
adc dh [ ebp - 0x7e ]
pop edx
aad 0x32
in eax 0xd9
0x92a3f675 0xd227
sub_46a18c
rol [ eax + 0x55980279 ] 0x1
jbe r-xdata
adc ebx 0xffffff90
xor eax 0x7ad5a200
pop es
mov bh dl
jne r-xdata
pop edx
pop esi
cmp bh dl
adc bh [ esp + edx * 4 ]
sbb [ edx - 0x2b ] 0x28
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
fiadd [ edi ]
mov [ eax ] ch
retn
0xea1cbc33 0xbc33
mov bl 0x80
pop esi
sbb [ edx - 0x73 ] 0x25
imul eax [ ecx - 0x32 ] 0x75
adc ecx 0xffffff90
sub eax 0x7ad5a200
pop es
loopne r-xdata
fstp [ esi - 0x7d ]
pop edx
jne r-xdata
0xea1cbc33 0xbc33
rcl [ eax - 0x6f2c3cdf ] 0x1
and [ ebx + 0x35 ] ebp

sub_46a2e1
out dx al
jne r-xdata
sub [ ebx - 0x58d7a1f7 ] ah
pop ebp
adc esi [ esi - 0x32 ]
pushfd
xchg esi eax
je r-xdata
aad 0x35
aam 0xa5
cmp [ 0xfffffffff6d92f08 ] 0x45
push 0x5c
jae r-xdata
or [ ebp + 0x5616d68a ] eax
fwait
xchg [ ebp + 0xad68ae3 ] esp
cmp al 0xab
sbb [ edx - 0x2b ] 0xffffff94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx + 0x30629434 ]
aam 0x1f
xor [ eax ] 0xffffffd5
and ch cl
pop edx
mov edi 0x910f7c75
inc dh
push cs
push esi
lea eax [ ebx + 0x7e5b5055 ]
movsd [ edi ] [ esi ]
sub al [ ebx + eax * 2 - 0x2d ]
nop
and [ edx ] ecx
pop ds
xchg ebp eax
mov dh 0xe7
sti
in eax 0x75
sbb [ edx + 0x5e ] 0x35
pushfd
rcr [ edi ] 0x1
or [ esi + ebx * 2 ] 0x28
mov [ 0xffffffffa7285e09 ] eax
sub_46a408
rcl [ ebp + 0x5e5a0861 ] 0x1
sub eax 0x38eedbab
or [ ecx ] 0xffffffd5
push eax
pop ebx
jle r-xdata
pop edx
xchg edi eax
jne r-xdata
xchg esp eax
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound esi [ eax ]
aam 0x1f
xor [ eax ] 0xffffffd5
and ch cl
pop edx
mov edi 0x910f7c75
inc dh
push cs
push esi
lea eax [ ebx + 0x7e5b5055 ]
movsd [ edi ] [ esi ]
sub al [ ebx + eax * 2 - 0x2d ]
nop
and [ edx ] ecx
pop ds
xchg ebp eax
mov dh 0xe7
sti
in eax 0x75
sbb [ edx + 0x5e ] 0x35
add [ eax - 0x25 ] dh
scasb [ edi ]
jno r-xdata
mov al 0x5e
add eax 0x2b5e0c93
mov edi 0x8251e1d1
test [ esi + 0x2b ] bl
sti
rcl ecx 0x1
push ecx
add [ edx - 0x63ff4ca4 ] 0xfd
fadd [ esi ]
0x5e808ea1 0xf4f1
mov ebx 0x995e0f
das
and eax 0x395efbf4
jns r-xdata
pop esi
sub edi [ edi - 0x7dae1e2f ]
xlat
mov al [ 0xe6bd892 ]
ror [ es : ecx ] 0x1
sbb [ 0x75d15a83 ] 0x8a810bd1
push ebx
fst [ ecx ]
imul eax [ eax + 0x3e ] 0x5a834574
aad 0xfe
retn
sub_46a478
rcr [ eax - 0x16d4f7af ] 0x1
je r-xdata
or [ ecx - 0x56f679a1 ] ebp
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
dec dh
pop esi
cmp al 0x97
pushfd
pop edx
aad 0x2f
imul eax [ ecx ] 0x2b
mov bh [ ebp + 0x5 ]
cld
shl edx cl
dec ch
outsb
pop esp
cmp al [ edi + 0xa259bd1 ]
aad 0xb9
je r-xdata
or [ ecx ] 0xffffffd5
pop edx
pop esi
or [ edi + 0x42f62cd3 ] cl
adc bl [ edx + edi - 0x71 ]
fst [ ecx + esi ]
or dl [ 0x4a42f6dd ]
pop esp
cmp dl [ ebx - 0x7c5aeb25 ]
pop edx
aad 0xfc
int3
push eax
pop ebx
jle r-xdata
pop edx
xchg edi eax
jne r-xdata
xchg esp eax
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound edi [ ebx - 0x449d6bcc ]
xor al 0x94
bound esi [ eax ]
aam 0x1f
xor [ eax ] 0xffffffd5
and ch cl
pop edx
mov edi 0x910f7c75
inc dh
push cs
push esi
lea eax [ ebx + 0x7e5b5055 ]
movsd [ edi ] [ esi ]
sub al [ ebx + eax * 2 - 0x2d ]
nop
and [ edx ] ecx
pop ds
xchg ebp eax
mov dh 0xe7
sti
in eax 0x75
sbb [ edx + 0x5e ] 0x35
add [ eax - 0x25 ] dh
scasb [ edi ]
jno r-xdata
mov al 0x5e
add eax 0x2b5e0c93
mov edi 0x8251e1d1
test [ esi + 0x2b ] bl
sti
rcl ecx 0x1
push ecx
add [ edx - 0x63ff4ca4 ] 0xfd
fadd [ esi ]
0x5e808ea1 0xf4f1
mov ebx 0x995e0f
das
and eax 0x395efbf4
jns r-xdata
pop esi
sub edi [ edi - 0x7dae1e2f ]
xlat
mov al [ 0xe6bd892 ]
ror [ es : ecx ] 0x1
sbb [ 0x75d15a83 ] 0x8a810bd1
push ebx
fst [ ecx ]
imul eax [ eax + 0x3e ] 0x5a834574
aad 0xfe
retn
sub_46a73d
leave
jne r-xdata
sub cl dh
add [ 0x2aa57fcc ] bh
mov dh ah
pop esi
pop esi
cmp cl [ ebx + 0x538ae4a5 ]
xor [ ebp - 0x2a957ce3 ] dl
jne r-xdata
jle r-xdata
sub cl dh
mov eax [ 0x987b656 ]
pop esi
and cl [ ebx - 0x2975185b ]
outsb
push esi
lea eax [ ebx - 0x7154afab ]
pop edx
aad 0x9e
aam 0xd3
hlt
push ebp
push esi
mov ah 0xd3
or edi [ edi + 0x56a10a75 ]
mov dh 0x87
or [ esi + 0x22 ] ebx
mov esp [ ebp + 0x6ed68ae7 ]
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
leave
jne r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jge r-xdata
add [ esi + 0x38 ] bl
mov esi [ ebx + 0x5a83686a ]
pop esi
cmp [ ebx - 0x7c97954d ] cl
pop edx
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xa909865f
pop edi
xchg [ ecx ] cl
test eax 0xfe09865f
into
pop esi
cmp al 0x97
pushfd
pop edx
aad 0x2f
imul eax [ ecx ] 0x2b
mov bh [ ebp + 0x5 ]
cld
sub bh ah
push 0x68
sbb [ edx - 0x71 ] 0xffffff9d
dec ebx
cmpsd [ esi ] [ edi ]
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
sub cl [ edx + 0x6f71b2d3 ]
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
jle r-xdata
sub cl dh
jno r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
fisubr [ eax ]
int1
sbb [ edx + 0x3c ] 0xffffffba
sbb [ edx - 0x2b ] 0xffffffde
cmp al 0xba
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
sub cl dh
aad 0xde
sub cl dh
jle r-xdata
sub cl dh
jle r-xdata
jle r-xdata
sub cl dh
jle r-xdata
jle r-xdata
sub cl dh
jle r-xdata
jle r-xdata
sub cl dh
jle r-xdata
jle r-xdata
sub cl dh
jle r-xdata
jle r-xdata
sub cl dh
jle r-xdata
jle r-xdata
sub cl dh
jle r-xdata
jle r-xdata
sub cl dh
pop esi
cmp [ ebx - 0x7c972e4d ] cl
pop edx
sub_46be41
aam 0x75
and eax 0xffffffd5
adc eax 0xe85e5a83
mov ebx 0xba75d55b
inc esi
fnstsw [ edx + 0x7 ]
sbb dl ah
jne r-xdata
imul [ esi + 0x5e8b29ec ]
mov al [ 0xffffffffd55a3b78 ]
jne r-xdata
ror cl 0x1
jge r-xdata
sbb [ edx + 0x2a ] 0xffffffc0
stosd [ edi ]
pop ebx
aad 0x75
rcl [ eax - 0x2b6195d3 ] cl
jne r-xdata
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
inc esi
retn 0xc134
jmp 0x7cd17cd2
fst [ ecx + esi * 2 ]
jecxz r-xdata
jne r-xdata
mov ch [ edi + 0x75 ]
sbb [ edx - 0x2b ] 0xfffffffe
push cs
jbe r-xdata
loopne r-xdata
je r-xdata
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
lodsd [ esi ]
and al 0xf6
jns r-xdata
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ edi + ebx * 4 - 0x7d ] dl
cmp dl ch
jne r-xdata
cmpsd [ esi ] [ edi ]
pop ebx
aad 0x75
or bl bh
jmp 0x3ca140fe
sbb [ gs : edx - 0x14 ] 0x69
mov ebp [ esi ]
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
sbb [ edx - 0x72 ] 0xfffffffe
cwde
ror [ eax + 0x45 ] cl
sbb [ edx - 0x2b ] 0xfe
push ds
aam 0x75
adc ebx 0x48
push ecx
sbb [ edx - 0x2b ] 0x13
or [ esi - 0x23 ] ch
adc esi [ eax - 0x7c8b1a11 ]
pop edx
mov bl 0xf6
jge r-xdata
jpo r-xdata
mov al [ 0xfffffffff1df0856 ]
je r-xdata
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
mov eax [ 0xffffffffe1d3e579 ]
add [ ebx + 0x5841f6d7 ] bl
idiv [ eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
aad 0x65
sbb [ edx - 0x2c ] 0xffffffad
or bl [ edx + 0x3c850aae ]
stosd [ edi ]
sbb [ edx - 0x2b ] 0xffffffd8
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
pop edx
in al 0xae
in eax 0xd1
int 0xf6
inc ebx
pop eax
pop esp
mov ebx [ esi - 0x60 ]
js r-xdata
pop ebx
aad 0x75
loop r-xdata
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
idiv [ cs : eax - 0x28 ]
rcl ecx 0x1
jg r-xdata
fsubr [ esi ]
idiv [ eax - 0x28 ]
test eax 0x55431bda
mov ebx 0x14b58c7e
and al 0x8c
and al 0x14
std
dec ebx
add edi esp
xchg [ eax ] al
cdq
aam 0x0
adc ebx 0x5087fc2e
push esi
mov ah 0x82
das
in eax 0xd3
loope r-xdata
pop edx
aad 0x75
adc ebx 0xffffff90
sub eax 0x75d49e6a
sbb ecx 0x14
jno r-xdata
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop ebp
test [ ebx ] cl
stosd [ edi ]
pop eax
pop ebp
sbb [ edx - 0x2b ] 0xfc
push ds
pop ebp
test [ ebx ] cl
or ebp [ ebx - 0x54f47ba3 ]
xchg esi eax
add [ ebx + 0x5841f6d7 ] bl
pop esp
loopne r-xdata
add [ ebx + 0x5841f6d7 ] bl
leave
fldcw [ edi ]
mov bl 0x74
jpo r-xdata
jne r-xdata
dec esi
lahf
push edx
mov al [ 0x2fd9c98f ]
scasb [ edi ]
in al dx
sub [ ebx + 0x3b78a05e ] ecx
sbb [ edx + 0x5c ] 0xfffffff0
pop edx
sub_471cd7
inc [ eax ]
movsd [ edi ] [ esi ]
jpo r-xdata
add [ eax + 0x56000008 ] ch
add [ eax ] al
add [ eax ] dl
adc [ eax ] al
add [ ecx ] al
add [ eax ] cl
add [ eax + 0x5 ] ch
add [ eax ] al
dec [ eax ]
add [ eax ] al
sub [ eax ] ch
add [ eax ] al
add [ eax ] eax
sbb [ eax ] al
sub [ eax + eax ] dl
add [ ebp - 0x52ff7b85 ] ch
test [ eax + eax + 0x7b73a5 ] cl
mov ch 0x84
mov [ eax ] es
pushfd
pop edx
arpl [ ebp - 0x5aff8c95 ] cx
cmp [ edx ] eax
salc
jae r-xdata
mov [ eax ] es
out 0x84 eax
test [ eax ] al
call [ esp + edx * 4 - 0x73731100 ]
add [ edx + edx * 2 + 0x7bce0052 ] cl
jpo r-xdata
add dh dl
jpo r-xdata
not [ esp + edx * 4 - 0x63630100 ]
add dh dl
test [ eax + eax + 0x9c9cf7 ] al
jmp [ ebp + 0x73ad00a5 ]
add [ esi + 0xe ] ah
add [ eax ] al
and [ eax ] ah
add [ eax ] al
add [ eax ] eax
sbb [ eax ] al
test al 0xc
add [ eax ] al
mov fs [ edx ]
add [ eax ] al
adc [ eax ] dl
add [ eax ] al
add [ eax ] eax
sbb [ eax ] al
push 0x36000003
das
add [ eax ] al
sub [ eax ] al
add [ eax ] al
and [ eax ] al
add [ eax ] al
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh bh
add [ ebp - 0x52ffbdc7 ] dh
cmp [ edx ] eax
mov [ edx + 0x4a ] 0x0
mov ebp 0xc6004a42
dec edx
push edx
add dh cl
push edx
pop edx
add dh cl
pop edx
arpl [ eax ] ax
pushfd
cmp [ ecx ] edi
add [ ebp - 0x5affbdbe ] ch
inc edx
inc edx
add [ ebp - 0x73ffb5b6 ] dh
cmp [ ecx ] edi
add [ ecx + edi + 0x52bd0039 ] al
push edx
add [ edx + eax * 2 + 0x52b50042 ] dl
push edx
add dh al
pop edx
pop edx
add [ ebx + 0x39 ] bh
cmp [ eax ] eax
mov [ edx + 0x42 ] es
add [ ebp - 0x31ffa5a6 ] bh
arpl [ ebx ] sp
salc
imul ebp [ ebx ] 0xffffffc6
arpl [ ebx ] sp
fidiv [ ebx + 0x73 ]
add dh cl

sub_472ff2
mov esp 0x449f5655
inc ebp
jl r-xdata
ror ecx 0x1
not edx
0xd3f7
dec ebp
mov bh 0xac
cmpsd [ esi ] [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bh al
mov cl [ ebx - 0xd6d6a2e ]
iretd
sub_473cd8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ eax ] es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al

sub_474195
pushad
pushad
mov eax 0x3c655f5e
xor al 0x7b
imul esp [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
int 0x6f
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x33 ] al
outsd
retn 0xf7bb
sub_474258
popad
popad
mov esp 0x3a925656
cmp ebp [ edi + 0x5a ]
push eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add bl cl
add [ eax ] al
add dh al
xchg ecx eax
xchg edx eax
leave
add [ eax - 0x52e250a ] 0xffffffbf
mov edx 0xfbb1b4fb
mov dh 0xb2
cli
mov bh 0xb3
cli
mov ecx 0xb7bbfab5
cli
mov ebp 0xbac0f9b8
stc
sar [ ecx + edi * 8 - 0x3a06423d ] 0xbf
clc
mov al 0xf8
enter 0xf8c2 0xca
retn
sub_475e90
push ebp
mov ebp esp
sub esp 0x8
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xcc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] esp
mov [ ebp - 0x4 ] sub_401148
mov edi [ __vbaRefVarAry@IAT ]
lea eax [ ebp - 0x88 ]
xor esi esi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x98 ] esi
mov [ ebp - 0xa8 ] esi
mov [ ebp - 0xb8 ] esi
call edi
mov ecx [ eax ]
push ecx
push 0x1
call [ __vbaLbound@IAT ]
lea edx [ ebp - 0x88 ]
mov ebx eax
push edx
call edi
mov eax [ eax ]
push eax
push 0x1
call [ __vbaUbound@IAT ]
lea ecx [ ebp - 0xa8 ]
add ebx eax
push ecx
lea edx [ ebp - 0x68 ]
push 0x1
lea eax [ ebp - 0xb8 ]
push edx
push eax
jo r-xdata
call [ __vbaErrorOverflow@IAT ]
nop
nop
nop
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0xa0 ] 0xc
mov [ ebp - 0xa8 ] 0x2
call [ Ordinal_MSVBVM60_632@IAT ]
mov ebx [ __vbaVarMove@IAT ]
lea edx [ ebp - 0xb8 ]
lea ecx [ ebp - 0x2c ]
call ebx
lea ecx [ ebp - 0xa8 ]
call [ __vbaFreeVar@IAT ]
mov ecx [ ebp - 0x14 ]
push ecx
call [ Ordinal_MSVBVM60_581@IAT ]
fstp st0
fld [ r-xdata ]
call [ __vbaR8IntI4@IAT ]
lea edx [ ebp - 0xa8 ]
mov [ ebp - 0xa0 ] 0x80020004
push edx
mov [ ebp - 0xa8 ] 0xa
call [ Ordinal_MSVBVM60_646@IAT ]
mov edi [ __vbaStrMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x1c ]
call edi
lea ecx [ ebp - 0xa8 ]
call [ __vbaFreeVar@IAT ]
mov eax [ ebp - 0x70 ]
push 0x4d
push eax
call [ Ordinal_MSVBVM60_616@IAT ]
mov edx eax
lea ecx [ ebp - 0x34 ]
call edi
push esi
push 0xffffffff
lea ecx [ ebp - 0x4c ]
lea edx [ ebp - 0xa8 ]
push ecx
push r-xdata
push edx
call [ Ordinal_MSVBVM60_711@IAT ]
lea edx [ ebp - 0xa8 ]
lea ecx [ ebp - 0x4c ]
call ebx
lea eax [ ebp - 0xa8 ]
push eax
call [ Ordinal_MSVBVM60_610@IAT ]
lea ecx [ ebp - 0xa8 ]
lea edx [ ebp - 0x98 ]
push ecx
push edx
call [ __vbaStrVarVal@IAT ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
call [ Ordinal_MSVBVM60_540@IAT ]
lea ecx [ ebp - 0xb8 ]
push ecx
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x6c ]
call edi
lea ecx [ ebp - 0x98 ]
call [ __vbaFreeStr@IAT ]
mov ebx [ __vbaFreeVarList@IAT ]
lea edx [ ebp - 0xb8 ]
lea eax [ ebp - 0xa8 ]
push edx
push eax
push 0x2
call ebx
mov ecx 0x1
add esp 0xc
mov [ ebp - 0xb0 ] ecx
mov [ ebp - 0xa0 ] ecx
lea ecx [ ebp - 0xb8 ]
lea edx [ ebp - 0xa8 ]
push ecx
push edx
push 0x3ff00000
push esi
push 0x3ff00000
push esi
mov eax 0x2
push 0x4202a0f8
push 0xa1c80000
mov [ ebp - 0xb8 ] eax
mov [ ebp - 0xa8 ] eax
call [ Ordinal_MSVBVM60_678@IAT ]
lea eax [ ebp - 0xb8 ]
lea ecx [ ebp - 0xa8 ]
push eax
push ecx
push 0x2
fstp st0
call ebx
mov edx [ ebp - 0x18 ]
add esp 0xc
push edx
call [ Ordinal_MSVBVM60_517@IAT ]
mov edx eax
lea ecx [ ebp - 0x74 ]
call edi
push r-xdata
call [ Ordinal_MSVBVM60_693@IAT ]
fwait
push sub_476161
jmp r-xdata
mov esi [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x14 ]
call esi
lea ecx [ ebp - 0x18 ]
call esi
lea ecx [ ebp - 0x1c ]
call esi
mov edi [ __vbaFreeVar@IAT ]
lea ecx [ ebp - 0x2c ]
call edi
lea ecx [ ebp - 0x34 ]
call esi
lea ecx [ ebp - 0x4c ]
call edi
lea ecx [ ebp - 0x68 ]
call edi
lea ecx [ ebp - 0x6c ]
call esi
lea ecx [ ebp - 0x70 ]
call esi
lea ecx [ ebp - 0x74 ]
call esi
lea ecx [ ebp - 0x88 ]
call edi
retn
sub_476180
push ebp
mov ebp esp
sub esp 0x8
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x118
push ebx
push esi
push edi
mov [ ebp - 0x8 ] esp
mov [ ebp - 0x4 ] r-xdata
mov ecx 0xd
xor eax eax
lea edi [ ebp - 0x98 ]
xor edx edx
[ edi ]
lea eax [ ebp - 0x92 ]
mov edi [ Ordinal_MSVBVM60_650@IAT ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x64 ] edx
mov [ ebp - 0xa4 ] edx
mov [ ebp - 0xa8 ] edx
mov [ ebp - 0xac ] edx
mov [ ebp - 0xb0 ] edx
mov edx 0x80020004
mov [ ebp - 0xd8 ] eax
mov eax 0x4002
mov [ ebp - 0xb8 ] edx
mov ecx 0xa
mov [ ebp - 0xc8 ] edx
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0x100 ] eax
push 0x1
lea edx [ ebp - 0xc0 ]
mov [ ebp - 0xc0 ] ecx
mov [ ebp - 0xd0 ] ecx
push 0x1
lea eax [ ebp - 0xe0 ]
lea ecx [ ebp - 0x94 ]
push edx
push eax
mov [ ebp - 0xf8 ] ecx
call edi
mov esi [ __vbaStrMove@IAT ]
mov edx eax
lea ecx [ ebp - 0xa8 ]
call esi
mov ebx [ __vbaStrCat@IAT ]
push eax
push r-xdata
call ebx
mov edx eax
lea ecx [ ebp - 0xac ]
call esi
push eax
push 0x1
lea ecx [ ebp - 0xd0 ]
push 0x1
lea edx [ ebp - 0x100 ]
push ecx
push edx
call edi
mov edx eax
lea ecx [ ebp - 0xb0 ]
call esi
push eax
call ebx
mov edx eax
mov ecx rw-data
call esi
lea eax [ ebp - 0xb0 ]
lea ecx [ ebp - 0xac ]
push eax
lea edx [ ebp - 0xa8 ]
push ecx
push edx
push 0x3
call [ __vbaFreeStrList@IAT ]
lea eax [ ebp - 0xd0 ]
lea ecx [ ebp - 0xc0 ]
push eax
push ecx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0x1c
push sub_47633c
jmp r-xdata
mov esi [ __vbaFreeVar@IAT ]
lea ecx [ ebp - 0x20 ]
call esi
lea ecx [ ebp - 0x34 ]
call esi
lea ecx [ ebp - 0x44 ]
call esi
lea ecx [ ebp - 0x54 ]
call esi
lea ecx [ ebp - 0x64 ]
call esi
lea ecx [ ebp - 0xa4 ]
call [ __vbaFreeStr@IAT ]
retn
sub_4762d9
lea edx [ ebp - 0xb0 ]
lea eax [ ebp - 0xac ]
push edx
lea ecx [ ebp - 0xa8 ]
push eax
push ecx
push 0x3
call [ __vbaFreeStrList@IAT ]
lea edx [ ebp - 0xd0 ]
lea eax [ ebp - 0xc0 ]
push edx
push eax
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0x1c
retn
sub_476350
push ebp
mov ebp esp
sub esp 0x18
push __vbaExceptHandler
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
mov eax 0x32c
call __vbaChkstk
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x3
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x150 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x150 ] rw-data
jmp r-xdata
mov [ ebp - 0x154 ] 0x0
push 0x2a4
push r-xdata
mov edx [ ebp - 0x128 ]
push edx
mov eax [ ebp - 0x12c ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x154 ] eax
jmp r-xdata
mov eax [ ebp - 0x150 ]
mov ecx [ eax ]
mov [ ebp - 0x128 ] ecx
mov [ ebp - 0x114 ] 0x1
mov [ ebp - 0x11c ] 0x2
mov [ ebp - 0x104 ] 0x1
mov [ ebp - 0x10c ] 0x2
mov [ ebp - 0xf4 ] 0x1
mov [ ebp - 0xfc ] 0x2
mov eax 0x10
call __vbaChkstk
mov edx esp
mov eax [ ebp - 0x11c ]
mov [ edx ] eax
mov ecx [ ebp - 0x118 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x114 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x110 ]
mov [ edx + 0xc ] ecx
mov eax 0x10
call __vbaChkstk
mov edx esp
mov eax [ ebp - 0x10c ]
mov [ edx ] eax
mov ecx [ ebp - 0x108 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0x104 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0x100 ]
mov [ edx + 0xc ] ecx
mov eax 0x10
call __vbaChkstk
mov edx esp
mov eax [ ebp - 0xfc ]
mov [ edx ] eax
mov ecx [ ebp - 0xf8 ]
mov [ edx + 0x4 ] ecx
mov eax [ ebp - 0xf4 ]
mov [ edx + 0x8 ] eax
mov ecx [ ebp - 0xf0 ]
mov [ edx + 0xc ] ecx
push 0x3f800000
mov edx [ ebp - 0x128 ]
mov eax [ edx ]
mov ecx [ ebp - 0x128 ]
push ecx
call [ eax + 0x2a4 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x158 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x158 ] rw-data
jmp r-xdata
mov [ ebp - 0x4 ] 0x4
mov edx r-xdata
lea ecx [ ebp - 0xc0 ]
call [ __vbaStrCopy@IAT ]
mov [ ebp - 0x4 ] 0x5
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x15c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x15c ] rw-data
jmp r-xdata
push r-xdata
mov ecx [ ebp - 0xc0 ]
push ecx
call [ __vbaStrCat@IAT ]
mov edx eax
lea ecx [ ebp - 0xc8 ]
call [ __vbaStrMove@IAT ]
push eax
mov edx [ ebp - 0x158 ]
mov eax [ edx ]
push eax
push r-xdata
call [ __vbaPrintObj@IAT ]
add esp 0xc
lea ecx [ ebp - 0xc8 ]
call [ __vbaFreeStr@IAT ]
mov [ ebp - 0x4 ] 0x6
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x160 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x160 ] rw-data
jmp r-xdata
push r-xdata
mov ecx [ ebp - 0xc0 ]
push ecx
call [ __vbaStrCat@IAT ]
mov edx eax
lea ecx [ ebp - 0xc8 ]
call [ __vbaStrMove@IAT ]
push eax
mov edx [ ebp - 0x15c ]
mov eax [ edx ]
push eax
push r-xdata
call [ __vbaPrintObj@IAT ]
add esp 0xc
lea ecx [ ebp - 0xc8 ]
call [ __vbaFreeStr@IAT ]
mov [ ebp - 0x4 ] 0x7
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x164 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x164 ] rw-data
jmp r-xdata
push r-xdata
mov ecx [ ebp - 0xc0 ]
push ecx
call [ __vbaStrCat@IAT ]
mov edx eax
lea ecx [ ebp - 0xc8 ]
call [ __vbaStrMove@IAT ]
push eax
mov edx [ ebp - 0x160 ]
mov eax [ edx ]
push eax
push r-xdata
call [ __vbaPrintObj@IAT ]
add esp 0xc
lea ecx [ ebp - 0xc8 ]
call [ __vbaFreeStr@IAT ]
mov [ ebp - 0x4 ] 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xd
mov eax 0x51cc8130
neg eax
mov ecx 0x125f
adc ecx 0x0
neg ecx
mov [ ebp - 0x17c ] eax
mov [ ebp - 0x178 ] ecx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x17c ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x168 ]
jne r-xdata
mov ecx [ ebp - 0x164 ]
mov edx [ ecx ]
push edx
lea eax [ ebp - 0x3c ]
push eax
call [ __vbaObjSetAddref@IAT ]
mov [ ebp - 0x4 ] 0x9
mov ecx 0x8474a770
neg ecx
mov edx 0xc29
adc edx 0x0
neg edx
mov [ ebp - 0x16c ] ecx
mov [ ebp - 0x168 ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x16c ]
jne r-xdata
mov [ ebp - 0x4 ] 0x11
mov edx 0x8351ee0
neg edx
mov eax 0x1fe
adc eax 0x0
neg eax
mov [ ebp - 0x184 ] edx
mov [ ebp - 0x180 ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x184 ]
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x178 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xa
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x15
cmp [ ebp - 0x38 ] 0xe6ca6f80
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x180 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xe
push 0x0
push r-xdata
mov ecx [ ebp - 0xc4 ]
push ecx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x170 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x170 ] rw-data
jmp r-xdata
mov [ ebp - 0x4 ] 0x19
cmp [ ebp - 0x38 ] 0xba3849b0
jne r-xdata
cmp [ ebp - 0x34 ] 0x104e
jne r-xdata
mov [ ebp - 0x4 ] 0x12
cmp [ rw-data ] 0x0
jne r-xdata
fwait
push sub_479081
jmp r-xdata
mov [ ebp - 0x174 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
mov edx [ ebp - 0x12c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x174 ] eax
jmp r-xdata
mov edx [ ebp - 0x170 ]
mov eax [ edx ]
mov [ ebp - 0x128 ] eax
push r-xdata
mov ecx [ ebp - 0x128 ]
mov edx [ ecx ]
mov eax [ ebp - 0x128 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x1d
cmp [ ebp - 0x38 ] 0x62f1a030
jne r-xdata
cmp [ ebp - 0x34 ] 0x810
jne r-xdata
mov [ ebp - 0x4 ] 0x16
push 0x0
push r-xdata
mov ecx [ ebp - 0xc4 ]
push ecx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x188 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x188 ] rw-data
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x28 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x30 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x3c ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0x40 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x44 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x4c ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x5c ]
call [ __vbaFreeVar@IAT ]
lea ecx [ ebp - 0x60 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x70 ]
call [ __vbaFreeVar@IAT ]
lea ecx [ ebp - 0x74 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x78 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0x88 ]
call [ __vbaFreeVar@IAT ]
lea ecx [ ebp - 0xb0 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0xb8 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0xc0 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0xc4 ]
call [ __vbaFreeObj@IAT ]
retn
jmp r-xdata
mov [ ebp - 0x4 ] 0x21
cmp [ ebp - 0x38 ] 0x9371f280
jne r-xdata
cmp [ ebp - 0x34 ] 0xbf7
jne r-xdata
mov [ ebp - 0x4 ] 0x1a
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x18c ] 0x0
push 0x54
push r-xdata
mov edx [ ebp - 0x128 ]
push edx
mov eax [ ebp - 0x12c ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x18c ] eax
jmp r-xdata
mov eax [ ebp - 0x188 ]
mov ecx [ eax ]
mov [ ebp - 0x128 ] ecx
push r-xdata
mov edx [ ebp - 0x128 ]
mov eax [ edx ]
mov ecx [ ebp - 0x128 ]
push ecx
call [ eax + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x25
mov edx 0x8a489f60
neg edx
mov eax 0x2a3
adc eax 0x0
neg eax
mov [ ebp - 0x1a4 ] edx
mov [ ebp - 0x1a0 ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x1a4 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x11f8
jne r-xdata
mov [ ebp - 0x4 ] 0x1e
push 0x0
push r-xdata
mov eax [ ebp - 0xc4 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x190 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x190 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x29
mov ecx 0x9fe774f0
neg ecx
mov edx 0xb08
adc edx 0x0
neg edx
mov [ ebp - 0x1ac ] ecx
mov [ ebp - 0x1a8 ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x1ac ]
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x1a0 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x22
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x194 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
mov edx [ ebp - 0x12c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x194 ] eax
jmp r-xdata
mov edx [ ebp - 0x190 ]
mov eax [ edx ]
mov [ ebp - 0x128 ] eax
push r-xdata
mov ecx [ ebp - 0x128 ]
mov edx [ ecx ]
mov eax [ ebp - 0x128 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x2d
mov eax 0x1e216eb0
neg eax
mov ecx 0x722
adc ecx 0x0
neg ecx
mov [ ebp - 0x1bc ] eax
mov [ ebp - 0x1b8 ] ecx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x1bc ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x1a8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x26
push 0x0
push r-xdata
mov eax [ ebp - 0xc4 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x198 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x198 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x31
mov edx 0xdd7a0c60
neg edx
mov eax 0xf9
adc eax 0x0
neg eax
mov [ ebp - 0x1cc ] edx
mov [ ebp - 0x1c8 ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x1cc ]
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x1b8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x2a
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x19c ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x12c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x19c ] eax
jmp r-xdata
mov ecx [ ebp - 0x198 ]
mov edx [ ecx ]
mov [ ebp - 0x128 ] edx
push r-xdata
mov eax [ ebp - 0x128 ]
mov ecx [ eax ]
mov edx [ ebp - 0x128 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x35
cmp [ ebp - 0x38 ] 0xf4aeb200
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x1c8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x2e
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x1b0 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x1b0 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x39
cmp [ ebp - 0x38 ] 0xd4a56340
jne r-xdata
cmp [ ebp - 0x34 ] 0x1152
jne r-xdata
mov [ ebp - 0x4 ] 0x32
push 0x0
push r-xdata
mov eax [ ebp - 0xc4 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x1c0 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x1c0 ] rw-data
jmp r-xdata
mov [ ebp - 0x1b4 ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
mov edx [ ebp - 0x12c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x1b4 ] eax
jmp r-xdata
mov edx [ ebp - 0x1b0 ]
mov eax [ edx ]
mov [ ebp - 0x128 ] eax
push r-xdata
mov ecx [ ebp - 0x128 ]
mov edx [ ecx ]
mov eax [ ebp - 0x128 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x3d
cmp [ ebp - 0x38 ] 0x377ef9c0
jne r-xdata
cmp [ ebp - 0x34 ] 0x8ed
jne r-xdata
mov [ ebp - 0x4 ] 0x36
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x1c4 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x12c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x1c4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c0 ]
mov edx [ ecx ]
mov [ ebp - 0x128 ] edx
push r-xdata
mov eax [ ebp - 0x128 ]
mov ecx [ eax ]
mov edx [ ebp - 0x128 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x41
cmp [ ebp - 0x38 ] 0xa1565c10
jne r-xdata
cmp [ ebp - 0x34 ] 0xcf1
jne r-xdata
mov [ ebp - 0x4 ] 0x3a
push 0x0
push r-xdata
mov edx [ ebp - 0xc4 ]
push edx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x1d0 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x1d0 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x45
mov edx 0x6fb475d0
neg edx
mov eax 0x1c6
adc eax 0x0
neg eax
mov [ ebp - 0x1e4 ] edx
mov [ ebp - 0x1e0 ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x1e4 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x12fc
jne r-xdata
mov [ ebp - 0x4 ] 0x3e
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x1d4 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x12c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1d0 ]
mov edx [ ecx ]
mov [ ebp - 0x128 ] edx
push r-xdata
mov eax [ ebp - 0x128 ]
mov ecx [ eax ]
mov edx [ ebp - 0x128 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x49
mov ecx 0xac3c3b60
neg ecx
mov edx 0xa2b
adc edx 0x0
neg edx
mov [ ebp - 0x1f4 ] ecx
mov [ ebp - 0x1f0 ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x1f4 ]
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x1e0 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x42
push 0x0
push r-xdata
mov ecx [ ebp - 0xc4 ]
push ecx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x1d8 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x1d8 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x4d
mov eax 0x43f45520
neg eax
mov ecx 0x601
adc ecx 0x0
neg ecx
mov [ ebp - 0x1fc ] eax
mov [ ebp - 0x1f8 ] ecx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x1fc ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x1f0 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x46
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x1dc ] 0x0
push 0x54
push r-xdata
mov edx [ ebp - 0x128 ]
push edx
mov eax [ ebp - 0x12c ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x1dc ] eax
jmp r-xdata
mov eax [ ebp - 0x1d8 ]
mov ecx [ eax ]
mov [ ebp - 0x128 ] ecx
push r-xdata
mov edx [ ebp - 0x128 ]
mov eax [ edx ]
mov ecx [ ebp - 0x128 ]
push ecx
call [ eax + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x51
cmp [ ebp - 0x38 ] 0x55e30d30
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x1f8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x4a
push 0x0
push r-xdata
mov edx [ ebp - 0xc4 ]
push edx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x1e8 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x1e8 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x55
cmp [ ebp - 0x38 ] 0x7d610c10
jne r-xdata
cmp [ ebp - 0x34 ] 0xa43
jne r-xdata
mov [ ebp - 0x4 ] 0x4e
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x1ec ] 0x0
push 0x54
push r-xdata
mov edx [ ebp - 0x128 ]
push edx
mov eax [ ebp - 0x12c ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x1ec ] eax
jmp r-xdata
mov eax [ ebp - 0x1e8 ]
mov ecx [ eax ]
mov [ ebp - 0x128 ] ecx
push r-xdata
mov edx [ ebp - 0x128 ]
mov eax [ edx ]
mov ecx [ ebp - 0x128 ]
push ecx
call [ eax + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x59
cmp [ ebp - 0x38 ] 0x50cee640
jne r-xdata
cmp [ ebp - 0x34 ] 0xa55
jne r-xdata
mov [ ebp - 0x4 ] 0x52
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x200 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x200 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x5d
mov edx 0xa6c22380
neg edx
mov eax 0x46c
adc eax 0x0
neg eax
mov [ ebp - 0x21c ] edx
mov [ ebp - 0x218 ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x21c ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x217
jne r-xdata
mov [ ebp - 0x4 ] 0x56
push 0x0
push r-xdata
mov eax [ ebp - 0xc4 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x208 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x208 ] rw-data
jmp r-xdata
mov [ ebp - 0x204 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x12c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x204 ] eax
jmp r-xdata
mov ecx [ ebp - 0x200 ]
mov edx [ ecx ]
mov [ ebp - 0x128 ] edx
push r-xdata
mov eax [ ebp - 0x128 ]
mov ecx [ eax ]
mov edx [ ebp - 0x128 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x61
cmp [ ebp - 0x38 ] 0x29fe2ed0
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x218 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x5a
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x20c ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
mov edx [ ebp - 0x12c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x20c ] eax
jmp r-xdata
mov edx [ ebp - 0x208 ]
mov eax [ edx ]
mov [ ebp - 0x128 ] eax
push r-xdata
mov ecx [ ebp - 0x128 ]
mov edx [ ecx ]
mov eax [ ebp - 0x128 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x65
mov edx 0xf3b202d0
neg edx
mov eax 0x89c
adc eax 0x0
neg eax
mov [ ebp - 0x22c ] edx
mov [ ebp - 0x228 ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x22c ]
jne r-xdata
cmp [ ebp - 0x34 ] 0xbff
jne r-xdata
mov [ ebp - 0x4 ] 0x5e
push 0x0
push r-xdata
mov eax [ ebp - 0xc4 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x210 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x210 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x69
mov ecx 0x13b11860
neg ecx
mov edx 0x1102
adc edx 0x0
neg edx
mov [ ebp - 0x234 ] ecx
mov [ ebp - 0x230 ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x234 ]
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x228 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x62
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x214 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x12c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x214 ] eax
jmp r-xdata
mov ecx [ ebp - 0x210 ]
mov edx [ ecx ]
mov [ ebp - 0x128 ] edx
push r-xdata
mov eax [ ebp - 0x128 ]
mov ecx [ eax ]
mov edx [ ebp - 0x128 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x6d
cmp [ ebp - 0x38 ] 0xe8352de0
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x230 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x66
push 0x0
push r-xdata
mov eax [ ebp - 0xc4 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x220 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x220 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x71
mov ecx 0x56e36fd0
neg ecx
mov edx 0x71a
adc edx 0x0
neg edx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x240 ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x244 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0xfb0
jne r-xdata
mov [ ebp - 0x4 ] 0x6a
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x224 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x12c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x224 ] eax
jmp r-xdata
mov ecx [ ebp - 0x220 ]
mov edx [ ecx ]
mov [ ebp - 0x128 ] edx
push r-xdata
mov eax [ ebp - 0x128 ]
mov ecx [ eax ]
mov edx [ ebp - 0x128 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x75
cmp [ ebp - 0x38 ] 0x8b6c5e90
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x240 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x6e
push 0x0
push r-xdata
mov eax [ ebp - 0xc4 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x238 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x238 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x79
cmp [ ebp - 0x38 ] 0x6b3bffd0
jne r-xdata
cmp [ ebp - 0x34 ] 0xb59
jne r-xdata
mov [ ebp - 0x4 ] 0x72
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x23c ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
mov edx [ ebp - 0x12c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x23c ] eax
jmp r-xdata
mov edx [ ebp - 0x238 ]
mov eax [ edx ]
mov [ ebp - 0x128 ] eax
push r-xdata
mov ecx [ ebp - 0x128 ]
mov edx [ ecx ]
mov eax [ ebp - 0x128 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x7d
cmp [ ebp - 0x38 ] 0x9cc20610
jne r-xdata
cmp [ ebp - 0x34 ] 0x2f4
jne r-xdata
mov [ ebp - 0x4 ] 0x76
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x248 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x248 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x81
cmp [ ebp - 0x38 ] 0x2da96860
jne r-xdata
cmp [ ebp - 0x34 ] 0x6f7
jne r-xdata
mov [ ebp - 0x4 ] 0x7a
push 0x0
push r-xdata
mov ecx [ ebp - 0xc4 ]
push ecx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x250 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x250 ] rw-data
jmp r-xdata
mov [ ebp - 0x24c ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
mov edx [ ebp - 0x12c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x24c ] eax
jmp r-xdata
mov edx [ ebp - 0x248 ]
mov eax [ edx ]
mov [ ebp - 0x128 ] eax
push r-xdata
mov ecx [ ebp - 0x128 ]
mov edx [ ecx ]
mov eax [ ebp - 0x128 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x85
mov ecx 0xd91dd940
neg ecx
mov edx 0x7bf
adc edx 0x0
neg edx
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x260 ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x264 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0xd03
jne r-xdata
mov [ ebp - 0x4 ] 0x7e
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x254 ] 0x0
push 0x54
push r-xdata
mov edx [ ebp - 0x128 ]
push edx
mov eax [ ebp - 0x12c ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x254 ] eax
jmp r-xdata
mov eax [ ebp - 0x250 ]
mov ecx [ eax ]
mov [ ebp - 0x128 ] ecx
push r-xdata
mov edx [ ebp - 0x128 ]
mov eax [ edx ]
mov ecx [ ebp - 0x128 ]
push ecx
call [ eax + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x89
mov eax 0x15afff10
neg eax
mov ecx 0x1025
adc ecx 0x0
neg ecx
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x270 ] ecx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x274 ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x260 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x82
push 0x0
push r-xdata
mov eax [ ebp - 0xc4 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x258 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x258 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x8d
mov edx 0xad5db890
neg edx
mov eax 0xbfa
adc eax 0x0
neg eax
mov [ ebp - 0x27c ] edx
mov [ ebp - 0x278 ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x27c ]
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x270 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x86
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x25c ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
mov edx [ ebp - 0x12c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x25c ] eax
jmp r-xdata
mov edx [ ebp - 0x258 ]
mov eax [ edx ]
mov [ ebp - 0x128 ] eax
push r-xdata
mov ecx [ ebp - 0x128 ]
mov edx [ ecx ]
mov eax [ ebp - 0x128 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x91
mov ecx 0x53865640
neg ecx
mov edx 0x616
adc edx 0x0
neg edx
mov [ ebp - 0x28c ] ecx
mov [ ebp - 0x288 ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x28c ]
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x278 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x8a
push 0x0
push r-xdata
mov ecx [ ebp - 0xc4 ]
push ecx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x268 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x268 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x95
cmp [ ebp - 0x38 ] 0xa5cf17e0
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x288 ]
jne r-xdata
mov [ ebp - 0x4 ] 0x8e
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x26c ] 0x0
push 0x54
push r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
mov edx [ ebp - 0x12c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x26c ] eax
jmp r-xdata
mov edx [ ebp - 0x268 ]
mov eax [ edx ]
mov [ ebp - 0x128 ] eax
push r-xdata
mov ecx [ ebp - 0x128 ]
mov edx [ ecx ]
mov eax [ ebp - 0x128 ]
push eax
call [ edx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x99
cmp [ ebp - 0x38 ] 0x6ee71250
jne r-xdata
cmp [ ebp - 0x34 ] 0xc36
jne r-xdata
mov [ ebp - 0x4 ] 0x92
push 0x0
push r-xdata
mov edx [ ebp - 0xc4 ]
push edx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x280 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x280 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0x9d
cmp [ ebp - 0x38 ] 0xd1b64890
jne r-xdata
cmp [ ebp - 0x34 ] 0x3f8
jne r-xdata
mov [ ebp - 0x4 ] 0x96
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x284 ] 0x0
push 0x54
push r-xdata
mov edx [ ebp - 0x128 ]
push edx
mov eax [ ebp - 0x12c ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x284 ] eax
jmp r-xdata
mov eax [ ebp - 0x280 ]
mov ecx [ eax ]
mov [ ebp - 0x128 ] ecx
push r-xdata
mov edx [ ebp - 0x128 ]
mov eax [ edx ]
mov ecx [ ebp - 0x128 ]
push ecx
call [ eax + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xa1
cmp [ ebp - 0x38 ] 0x62769ae0
jne r-xdata
cmp [ ebp - 0x34 ] 0x7fb
jne r-xdata
mov [ ebp - 0x4 ] 0x9a
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x290 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x290 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xa5
cmp [ ebp - 0x38 ] 0x84c66940
jne r-xdata
cmp [ ebp - 0x34 ] 0xe07
jne r-xdata
mov [ ebp - 0x4 ] 0x9e
push 0x0
push r-xdata
mov edx [ ebp - 0xc4 ]
push edx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x298 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x298 ] rw-data
jmp r-xdata
mov [ ebp - 0x294 ] 0x0
push 0x54
push r-xdata
mov edx [ ebp - 0x128 ]
push edx
mov eax [ ebp - 0x12c ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x294 ] eax
jmp r-xdata
mov eax [ ebp - 0x290 ]
mov ecx [ eax ]
mov [ ebp - 0x128 ] ecx
push r-xdata
mov edx [ ebp - 0x128 ]
mov eax [ edx ]
mov ecx [ ebp - 0x128 ]
push ecx
call [ eax + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xa9
mov edx 0x9b430c90
neg edx
mov eax 0x499
adc eax 0x0
neg eax
mov [ ebp - 0x2ac ] edx
mov [ ebp - 0x2a8 ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x2ac ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x3cb
jne r-xdata
mov [ ebp - 0x4 ] 0xa2
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x29c ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x12c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x29c ] eax
jmp r-xdata
mov ecx [ ebp - 0x298 ]
mov edx [ ecx ]
mov [ ebp - 0x128 ] edx
push r-xdata
mov eax [ ebp - 0x128 ]
mov ecx [ eax ]
mov edx [ ebp - 0x128 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xad
mov ecx 0xb9d9b610
neg ecx
mov edx 0xb1d
adc edx 0x0
neg edx
mov [ ebp - 0x2bc ] ecx
mov [ ebp - 0x2b8 ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x2bc ]
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x2a8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xa6
push 0x0
push r-xdata
mov ecx [ ebp - 0xc4 ]
push ecx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x2a0 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2a0 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xb1
cmp [ ebp - 0x38 ] 0x170dac40
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x2b8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xaa
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2a4 ] 0x0
push 0x54
push r-xdata
mov edx [ ebp - 0x128 ]
push edx
mov eax [ ebp - 0x12c ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2a4 ] eax
jmp r-xdata
mov eax [ ebp - 0x2a0 ]
mov ecx [ eax ]
mov [ ebp - 0x128 ] ecx
push r-xdata
mov edx [ ebp - 0x128 ]
mov eax [ edx ]
mov ecx [ ebp - 0x128 ]
push ecx
call [ eax + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xb5
mov ecx 0x66ece5a0
neg ecx
mov edx 0xf58
adc edx 0x0
neg edx
mov [ ebp - 0x2cc ] ecx
mov [ ebp - 0x2c8 ] edx
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x2cc ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x54e
jne r-xdata
mov [ ebp - 0x4 ] 0xae
push 0x0
push r-xdata
mov edx [ ebp - 0xc4 ]
push edx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x2b0 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2b0 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xb9
cmp [ ebp - 0x38 ] 0xe3b46be0
jne r-xdata
mov ecx [ ebp - 0x34 ]
cmp ecx [ ebp - 0x2c8 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xb2
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2b4 ] 0x0
push 0x54
push r-xdata
mov edx [ ebp - 0x128 ]
push edx
mov eax [ ebp - 0x12c ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2b4 ] eax
jmp r-xdata
mov eax [ ebp - 0x2b0 ]
mov ecx [ eax ]
mov [ ebp - 0x128 ] ecx
push r-xdata
mov edx [ ebp - 0x128 ]
mov eax [ edx ]
mov ecx [ ebp - 0x128 ]
push ecx
call [ eax + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xbd
cmp [ ebp - 0x38 ] 0xd5136220
jne r-xdata
cmp [ ebp - 0x34 ] 0xf5c
jne r-xdata
mov [ ebp - 0x4 ] 0xb6
push 0x0
push r-xdata
mov edx [ ebp - 0xc4 ]
push edx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x2c0 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2c0 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xc1
mov edx 0x5a053b90
neg edx
mov eax 0xda4
adc eax 0x0
neg eax
mov [ ebp - 0x2e4 ] edx
mov [ ebp - 0x2e0 ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x2e4 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x8ff
jne r-xdata
mov [ ebp - 0x4 ] 0xba
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2c4 ] 0x0
push 0x54
push r-xdata
mov edx [ ebp - 0x128 ]
push edx
mov eax [ ebp - 0x12c ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2c4 ] eax
jmp r-xdata
mov eax [ ebp - 0x2c0 ]
mov ecx [ eax ]
mov [ ebp - 0x128 ] ecx
push r-xdata
mov edx [ ebp - 0x128 ]
mov eax [ edx ]
mov ecx [ ebp - 0x128 ]
push ecx
call [ eax + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xc5
cmp [ ebp - 0x38 ] 0x3f1a92d0
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x2e0 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xbe
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2d0 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2d0 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xc9
mov edx 0xa797d300
neg edx
mov eax 0x3bc
adc eax 0x0
neg eax
mov [ ebp - 0x2f4 ] edx
mov [ ebp - 0x2f0 ] eax
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x2f4 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x49e
jne r-xdata
mov [ ebp - 0x4 ] 0xc2
push 0x0
push r-xdata
mov eax [ ebp - 0xc4 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x2d8 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2d8 ] rw-data
jmp r-xdata
mov [ ebp - 0x2d4 ] 0x0
push 0x54
push r-xdata
mov edx [ ebp - 0x128 ]
push edx
mov eax [ ebp - 0x12c ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2d4 ] eax
jmp r-xdata
mov eax [ ebp - 0x2d0 ]
mov ecx [ eax ]
mov [ ebp - 0x128 ] ecx
push r-xdata
mov edx [ ebp - 0x128 ]
mov eax [ edx ]
mov ecx [ ebp - 0x128 ]
push ecx
call [ eax + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xcd
cmp [ ebp - 0x38 ] 0xcb105340
jne r-xdata
mov edx [ ebp - 0x34 ]
cmp edx [ ebp - 0x2f0 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xc6
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2dc ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x12c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2dc ] eax
jmp r-xdata
mov ecx [ ebp - 0x2d8 ]
mov edx [ ecx ]
mov [ ebp - 0x128 ] edx
push r-xdata
mov eax [ ebp - 0x128 ]
mov ecx [ eax ]
mov edx [ ebp - 0x128 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xd1
cmp [ ebp - 0x38 ] 0x24e7b590
jne r-xdata
cmp [ ebp - 0x34 ] 0x6d
jne r-xdata
mov [ ebp - 0x4 ] 0xca
push 0x0
push r-xdata
mov eax [ ebp - 0xc4 ]
push eax
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x2e8 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2e8 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xd5
mov eax 0x69087c10
neg eax
mov ecx 0xe7b
adc ecx 0x0
neg ecx
mov [ ebp - 0x304 ] eax
mov [ ebp - 0x300 ] ecx
mov edx [ ebp - 0x38 ]
cmp edx [ ebp - 0x304 ]
jne r-xdata
cmp [ ebp - 0x34 ] 0x652
jne r-xdata
mov [ ebp - 0x4 ] 0xce
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2ec ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x12c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2ec ] eax
jmp r-xdata
mov ecx [ ebp - 0x2e8 ]
mov edx [ ecx ]
mov [ ebp - 0x128 ] edx
push r-xdata
mov eax [ ebp - 0x128 ]
mov ecx [ eax ]
mov edx [ ebp - 0x128 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0xd9
cmp [ ebp - 0x38 ] 0xe7386e60
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x300 ]
jne r-xdata
mov [ ebp - 0x4 ] 0xd2
push 0x0
push r-xdata
mov edx [ ebp - 0xc4 ]
push edx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x2f8 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x2f8 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xdd
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x34 ] 0x1060
jne r-xdata
mov [ ebp - 0x4 ] 0xd6
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x2fc ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x12c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x2fc ] eax
jmp r-xdata
mov ecx [ ebp - 0x2f8 ]
mov edx [ ecx ]
mov [ ebp - 0x128 ] edx
push r-xdata
mov eax [ ebp - 0x128 ]
mov ecx [ eax ]
mov edx [ ebp - 0x128 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x310 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x310 ] rw-data
jmp r-xdata
mov [ ebp - 0x4 ] 0xda
push 0x0
push r-xdata
mov edx [ ebp - 0xc4 ]
push edx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x308 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x308 ] rw-data
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x314 ] 0x0
push 0x288
push r-xdata
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x12c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
mov eax [ ebp - 0x310 ]
mov ecx [ eax ]
mov [ ebp - 0x128 ] ecx
lea edx [ ebp - 0xcc ]
push edx
mov eax [ ebp - 0x128 ]
mov ecx [ eax ]
mov edx [ ebp - 0x128 ]
push edx
call [ ecx + 0x288 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x30c ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x12c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x30c ] eax
jmp r-xdata
mov ecx [ ebp - 0x308 ]
mov edx [ ecx ]
mov [ ebp - 0x128 ] edx
push r-xdata
mov eax [ ebp - 0x128 ]
mov ecx [ eax ]
mov edx [ ebp - 0x128 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
call [ __vbaErrorOverflow@IAT ]
int3
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xe7
mov eax 0x1
cdq
idiv [ rw-data ]
mov ecx [ rw-data ]
xor ecx edx
mov edx [ rw-data ]
mov eax [ rw-data ]
mov [ eax + edx * 4 ] ecx
mov [ ebp - 0x4 ] 0xe8
mov ecx [ rw-data ]
and ecx 0x80000000
jns r-xdata
mov edx [ ebp - 0xcc ]
mov [ ebp - 0x14c ] edx
mov [ ebp - 0xcc ] 0x0
mov eax [ ebp - 0x14c ]
mov [ ebp - 0xd4 ] eax
mov [ ebp - 0xdc ] 0x9
lea edx [ ebp - 0xdc ]
lea ecx [ ebp - 0x70 ]
call [ __vbaVarMove@IAT ]
mov [ ebp - 0x4 ] 0xde
push 0xffffffff
call [ __vbaOnError@IAT ]
mov [ ebp - 0x4 ] 0xdf
mov edx r-xdata
mov ecx rw-data
call [ __vbaStrCopy@IAT ]
mov [ ebp - 0x4 ] 0xe0
mov edx r-xdata
mov ecx rw-data
call [ __vbaStrCopy@IAT ]
mov [ ebp - 0x4 ] 0xe1
mov [ ebp - 0x124 ] 0x25ebfe25
mov [ ebp - 0x120 ] 0xac41d0df
mov edx r-xdata
lea ecx [ ebp - 0xc8 ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x124 ]
push ecx
lea edx [ ebp - 0x120 ]
push edx
lea eax [ ebp - 0xc8 ]
push eax
push 0x85a36cea
call sub_475e90
mov [ rw-data ] eax
lea ecx [ ebp - 0xc8 ]
call [ __vbaFreeStr@IAT ]
mov [ ebp - 0x4 ] 0xe2
mov [ ebp - 0x124 ] 0x2f15b211
mov [ ebp - 0x120 ] 0x877911c
mov edx r-xdata
lea ecx [ ebp - 0xc8 ]
call [ __vbaStrCopy@IAT ]
lea ecx [ ebp - 0x124 ]
push ecx
lea edx [ ebp - 0x120 ]
push edx
lea eax [ ebp - 0xc8 ]
push eax
push 0xee2bc178
call sub_475e90
mov [ rw-data ] eax
lea ecx [ ebp - 0xc8 ]
call [ __vbaFreeStr@IAT ]
mov [ ebp - 0x4 ] 0xe3
push 0x0
call [ __vbaOnError@IAT ]
jmp r-xdata
xor ecx 0x1
mov [ rw-data ] ecx
mov [ ebp - 0x4 ] 0xe9
cmp [ rw-data ] 0x17f16
je r-xdata
dec ecx
or ecx 0xffffffff
inc ecx
mov [ ebp - 0x4 ] 0xec
mov edx [ rw-data ]
push edx
mov eax [ rw-data ]
push eax
call [ __vbaStrCat@IAT ]
mov edx eax
mov ecx rw-data
call [ __vbaStrMove@IAT ]
mov [ ebp - 0x4 ] 0xed
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
mov [ ebp - 0x318 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x318 ] rw-data
jmp r-xdata
mov [ ebp - 0x4 ] 0xe5
push 0x64
lea ecx [ ebp - 0xdc ]
push ecx
call [ Ordinal_MSVBVM60_526@IAT ]
lea edx [ ebp - 0xdc ]
push edx
call [ __vbaStrVarMove@IAT ]
mov edx eax
mov ecx rw-data
call [ __vbaStrMove@IAT ]
lea ecx [ ebp - 0xdc ]
call [ __vbaFreeVar@IAT ]
mov [ ebp - 0x4 ] 0xe6
mov eax [ rw-data ]
add eax 0x1
jo r-xdata
mov [ ebp - 0x31c ] 0x0
push 0x14c
push r-xdata
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x12c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x31c ] eax
jmp r-xdata
mov ecx [ ebp - 0x318 ]
mov edx [ ecx ]
mov [ ebp - 0x128 ] edx
push 0xffffffff
mov eax [ ebp - 0x128 ]
mov ecx [ eax ]
mov edx [ ebp - 0x128 ]
push edx
call [ ecx + 0x14c ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x320 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x320 ] rw-data
jmp r-xdata
mov [ ebp - 0x4 ] 0xee
call sub_476180
mov [ ebp - 0x4 ] 0xef
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x324 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x324 ] rw-data
jmp r-xdata
push r-xdata
mov edx [ rw-data ]
push edx
call [ __vbaStrCat@IAT ]
mov edx eax
lea ecx [ ebp - 0xc8 ]
call [ __vbaStrMove@IAT ]
push eax
mov eax [ ebp - 0x320 ]
mov ecx [ eax ]
push ecx
push r-xdata
call [ __vbaPrintObj@IAT ]
add esp 0xc
lea ecx [ ebp - 0xc8 ]
call [ __vbaFreeStr@IAT ]
mov [ ebp - 0x4 ] 0xf0
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x328 ] 0x0
push 0x288
push r-xdata
mov edx [ ebp - 0x128 ]
push edx
mov eax [ ebp - 0x12c ]
push eax
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x328 ] eax
jmp r-xdata
mov edx [ ebp - 0x324 ]
mov eax [ edx ]
mov [ ebp - 0x128 ] eax
lea ecx [ ebp - 0xcc ]
push ecx
mov edx [ ebp - 0x128 ]
mov eax [ edx ]
mov ecx [ ebp - 0x128 ]
push ecx
call [ eax + 0x288 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x4 ] 0x101
mov eax [ rw-data ]
cdq
and edx 0xf
add eax edx
sar eax 0x4
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0x102
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xff
fild [ rw-data ]
fstp [ ebp - 0x334 ]
fld [ ebp - 0x334 ]
fadd [ r-xdata ]
fnstsw ax
test al 0xd
jne r-xdata
push 0x0
push 0x0
mov ecx [ ebp - 0xcc ]
push ecx
lea edx [ ebp - 0xdc ]
push edx
call [ __vbaLateIdCallLd@IAT ]
add esp 0x10
push eax
call [ __vbaI4Var@IAT ]
mov [ rw-data ] eax
lea ecx [ ebp - 0xcc ]
call [ __vbaFreeObj@IAT ]
lea ecx [ ebp - 0xdc ]
call [ __vbaFreeVar@IAT ]
mov [ ebp - 0x4 ] 0xf1
lea eax [ ebp - 0xdc ]
push eax
call [ Ordinal_MSVBVM60_610@IAT ]
lea ecx [ ebp - 0xdc ]
push ecx
lea edx [ ebp - 0xc8 ]
push edx
call [ __vbaStrVarVal@IAT ]
push eax
lea eax [ ebp - 0xec ]
push eax
call [ Ordinal_MSVBVM60_540@IAT ]
lea ecx [ ebp - 0xec ]
push ecx
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x44 ]
call [ __vbaStrMove@IAT ]
lea ecx [ ebp - 0xc8 ]
call [ __vbaFreeStr@IAT ]
lea edx [ ebp - 0xec ]
push edx
lea eax [ ebp - 0xdc ]
push eax
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0xf2
mov [ ebp - 0xa0 ] 0x80000000
mov [ ebp - 0x9c ] 0x41544f3a
mov [ ebp - 0x4 ] 0xf3
mov [ ebp - 0xbc ] 0x1
mov [ ebp - 0x4 ] 0xf4
mov [ ebp - 0x98 ] 0xf0c80000
mov [ ebp - 0x94 ] 0x4202a371
mov [ ebp - 0x4 ] 0xf5
mov [ ebp - 0x90 ] 0x4b351611
mov [ ebp - 0x4 ] 0xf6
mov [ ebp - 0x2c ] 0x1386
mov [ ebp - 0x4 ] 0xf7
lea ecx [ ebp - 0xdc ]
push ecx
call [ Ordinal_MSVBVM60_610@IAT ]
lea edx [ ebp - 0xdc ]
push edx
push 0x4065e000
push 0x0
push r-xdata
lea eax [ ebp - 0xec ]
push eax
call [ Ordinal_MSVBVM60_661@IAT ]
lea ecx [ ebp - 0xec ]
push ecx
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0xb8 ]
call [ __vbaStrMove@IAT ]
lea edx [ ebp - 0xec ]
push edx
lea eax [ ebp - 0xdc ]
push eax
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
mov [ ebp - 0x4 ] 0xf8
push 0x4067e33b
push 0x645a1cac
call [ __vbaR8Sgn@IAT ]
movsx ecx ax
mov [ ebp - 0x32c ] ecx
fild [ ebp - 0x32c ]
fstp [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0xf9
push r-xdata
call [ __vbaLenBstr@IAT ]
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x4 ] 0xfa
mov ecx 0xaa
call [ __vbaUI1I2@IAT ]
push eax
lea edx [ ebp - 0xdc ]
push edx
call [ Ordinal_MSVBVM60_695@IAT ]
lea eax [ ebp - 0xdc ]
push eax
call [ __vbaStrVarMove@IAT ]
mov edx eax
lea ecx [ ebp - 0x40 ]
call [ __vbaStrMove@IAT ]
lea ecx [ ebp - 0xdc ]
call [ __vbaFreeVar@IAT ]
mov [ ebp - 0x4 ] 0xfb
mov edx r-xdata
lea ecx [ ebp - 0x30 ]
call [ __vbaStrCopy@IAT ]
mov [ ebp - 0x4 ] 0xfc
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0xf4 ] ecx
mov [ ebp - 0xfc ] 0x4008
push 0x0
lea edx [ ebp - 0xfc ]
push edx
call [ Ordinal_MSVBVM60_645@IAT ]
mov edx eax
lea ecx [ ebp - 0x28 ]
call [ __vbaStrMove@IAT ]
mov [ ebp - 0x4 ] 0xfd
mov [ rw-data ] 0x468c8f0
mov [ ebp - 0x4 ] 0xfe
or eax 0xffffffff
test eax eax
je r-xdata
mov [ ebp - 0x338 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x338 ] rw-data
jmp r-xdata
jmp r-xdata
call [ __vbaFpI4@IAT ]
mov [ rw-data ] eax
mov [ ebp - 0x33c ] 0x0
push 0xd8
push r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
mov edx [ ebp - 0x12c ]
push edx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x33c ] eax
jmp r-xdata
mov ecx [ ebp - 0x338 ]
mov edx [ ecx ]
mov [ ebp - 0x128 ] edx
lea eax [ ebp - 0x120 ]
push eax
mov ecx [ ebp - 0x128 ]
mov edx [ ecx ]
mov eax [ ebp - 0x128 ]
push eax
call [ edx + 0xd8 ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
jmp [ __vbaFPException@IAT ]
mov [ ebp - 0x340 ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x340 ] rw-data
jmp r-xdata
mov eax [ ebp - 0x120 ]
mov [ ebp - 0xf4 ] eax
mov [ ebp - 0xfc ] 0x3
lea edx [ ebp - 0xfc ]
lea ecx [ ebp - 0x88 ]
call [ __vbaVarMove@IAT ]
mov [ ebp - 0x4 ] 0x103
mov ecx 0xfb176000
neg ecx
mov edx 0x212
adc edx 0x0
neg edx
push edx
push ecx
call [ __vbaI4Cy@IAT ]
push eax
push 0x12b0
push 0x3d2021a0
call [ __vbaI4Cy@IAT ]
push eax
push 0x24e
push 0xf388bf50
call [ __vbaI4Cy@IAT ]
push eax
push 0x8ab
push 0xd0b98910
call [ __vbaI4Cy@IAT ]
push eax
mov eax [ rw-data ]
push eax
call sub_403578
mov [ ebp - 0x120 ] eax
call [ __vbaSetSystemError@IAT ]
mov ecx [ ebp - 0x120 ]
mov [ ebp - 0xf4 ] ecx
mov [ ebp - 0xfc ] 0x3
lea edx [ ebp - 0xfc ]
lea ecx [ ebp - 0x5c ]
call [ __vbaVarMove@IAT ]
mov [ ebp - 0x4 ] 0x104
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x344 ] 0x0
push 0x2c
push r-xdata
mov eax [ ebp - 0x128 ]
push eax
mov ecx [ ebp - 0x12c ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x344 ] eax
jmp r-xdata
mov edx [ ebp - 0x340 ]
mov eax [ edx ]
mov [ ebp - 0x130 ] eax
call [ Ordinal_MSVBVM60_685@IAT ]
push eax
lea ecx [ ebp - 0xcc ]
push ecx
call [ __vbaObjSet@IAT ]
mov [ ebp - 0x128 ] eax
lea edx [ ebp - 0xc8 ]
push edx
mov eax [ ebp - 0x128 ]
mov ecx [ eax ]
mov edx [ ebp - 0x128 ]
push edx
call [ ecx + 0x2c ]
fnclex
mov [ ebp - 0x12c ] eax
cmp [ ebp - 0x12c ] 0x0
jge r-xdata
mov [ ebp - 0x348 ] 0x0
push 0x54
push r-xdata
mov eax [ ebp - 0x130 ]
push eax
mov ecx [ ebp - 0x134 ]
push ecx
call [ __vbaHresultCheckObj@IAT ]
mov [ ebp - 0x348 ] eax
jmp r-xdata
mov edx [ ebp - 0xc8 ]
push edx
mov eax [ ebp - 0x130 ]
mov ecx [ eax ]
mov edx [ ebp - 0x130 ]
push edx
call [ ecx + 0x54 ]
fnclex
mov [ ebp - 0x134 ] eax
cmp [ ebp - 0x134 ] 0x0
jge r-xdata
mov [ ebp - 0x34c ] rw-data
push rw-data
push r-xdata
call [ __vbaNew2@IAT ]
mov [ ebp - 0x34c ] rw-data
jmp r-xdata
lea ecx [ ebp - 0xc8 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0xcc ]
call [ __vbaFreeObj@IAT ]
mov [ ebp - 0x4 ] 0x105
mov [ ebp - 0x124 ] 0xfd4edd30
mov [ ebp - 0x120 ] 0xd6f4bd3b
mov edx r-xdata
lea ecx [ ebp - 0xc8 ]
call [ __vbaStrCopy@IAT ]
lea edx [ ebp - 0x124 ]
push edx
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0xc8 ]
push ecx
push 0xbc63ed53
call sub_475e90
lea ecx [ ebp - 0xc8 ]
call [ __vbaFreeStr@IAT ]
mov [ ebp - 0x4 ] 0x106
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ ebp - 0x34c ]
mov eax [ edx ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
call [ __vbaObjSetAddref@IAT ]
mov [ ebp - 0x4 ] 0x107
push 0x0
push r-xdata
mov edx [ ebp - 0x24 ]
push edx
call [ __vbaLateMemCall@IAT ]
add esp 0xc
__vbaExceptHandler
jmp [ __vbaExceptHandler@IAT ]
_adj_fdiv_m16i
jmp [ _adj_fdiv_m16i@IAT ]
_adj_fdiv_m32
jmp [ _adj_fdiv_m32@IAT ]
_adj_fdiv_m32i
jmp [ _adj_fdiv_m32i@IAT ]
_adj_fdiv_m64
jmp [ _adj_fdiv_m64@IAT ]
_adj_fdiv_r
jmp [ _adj_fdiv_r@IAT ]
_adj_fdivr_m16i
jmp [ _adj_fdivr_m16i@IAT ]
_adj_fdivr_m32
jmp [ _adj_fdivr_m32@IAT ]
_adj_fdivr_m32i
jmp [ _adj_fdivr_m32i@IAT ]
_adj_fdivr_m64
jmp [ _adj_fdivr_m64@IAT ]
_adj_fpatan
jmp [ _adj_fpatan@IAT ]
_adj_fprem
jmp [ _adj_fprem@IAT ]
_adj_fprem1
jmp [ _adj_fprem1@IAT ]
_adj_fptan
jmp [ _adj_fptan@IAT ]
_CIatan
jmp [ _CIatan@IAT ]
_CIcos
jmp [ _CIcos@IAT ]
_CIexp
jmp [ _CIexp@IAT ]
_CIlog
jmp [ _CIlog@IAT ]
_CIsin
jmp [ _CIsin@IAT ]
_CIsqrt
jmp [ _CIsqrt@IAT ]
_CItan
jmp [ _CItan@IAT ]
_allmul
jmp [ _allmul@IAT ]
DllFunctionCall
jmp [ DllFunctionCall@IAT ]
Ordinal_MSVBVM60_685
jmp [ Ordinal_MSVBVM60_685@IAT ]
__vbaObjSet
jmp [ __vbaObjSet@IAT ]
__vbaI4Cy
jmp [ __vbaI4Cy@IAT ]
__vbaFpI4
jmp [ __vbaFpI4@IAT ]
Ordinal_MSVBVM60_645
jmp [ Ordinal_MSVBVM60_645@IAT ]
__vbaUI1I2
jmp [ __vbaUI1I2@IAT ]
Ordinal_MSVBVM60_695
jmp [ Ordinal_MSVBVM60_695@IAT ]
__vbaLenBstr
jmp [ __vbaLenBstr@IAT ]
__vbaR8Sgn
jmp [ __vbaR8Sgn@IAT ]
Ordinal_MSVBVM60_661
jmp [ Ordinal_MSVBVM60_661@IAT ]
__vbaFreeObj
jmp [ __vbaFreeObj@IAT ]
__vbaLateIdCallLd
jmp [ __vbaLateIdCallLd@IAT ]
__vbaOnError
jmp [ __vbaOnError@IAT ]
__vbaLateMemCall
jmp [ __vbaLateMemCall@IAT ]
__vbaObjSetAddref
jmp [ __vbaObjSetAddref@IAT ]
__vbaPrintObj
jmp [ __vbaPrintObj@IAT ]
__vbaHresultCheckObj
jmp [ __vbaHresultCheckObj@IAT ]
__vbaNew2
jmp [ __vbaNew2@IAT ]
__vbaStrToUnicode
jmp [ __vbaStrToUnicode@IAT ]
__vbaSetSystemError
jmp [ __vbaSetSystemError@IAT ]
__vbaStrToAnsi
jmp [ __vbaStrToAnsi@IAT ]
Ordinal_MSVBVM60_526
jmp [ Ordinal_MSVBVM60_526@IAT ]
__vbaI4Var
jmp [ __vbaI4Var@IAT ]
__vbaStrCopy
jmp [ __vbaStrCopy@IAT ]
__vbaFreeStrList
jmp [ __vbaFreeStrList@IAT ]
Ordinal_MSVBVM60_650
jmp [ Ordinal_MSVBVM60_650@IAT ]
__vbaStrCat
jmp [ __vbaStrCat@IAT ]
__vbaErrorOverflow
jmp [ __vbaErrorOverflow@IAT ]
Ordinal_MSVBVM60_693
jmp [ Ordinal_MSVBVM60_693@IAT ]
Ordinal_MSVBVM60_517
jmp [ Ordinal_MSVBVM60_517@IAT ]
Ordinal_MSVBVM60_678
jmp [ Ordinal_MSVBVM60_678@IAT ]
__vbaFreeVarList
jmp [ __vbaFreeVarList@IAT ]
__vbaFreeStr
jmp [ __vbaFreeStr@IAT ]
Ordinal_MSVBVM60_610
jmp [ Ordinal_MSVBVM60_610@IAT ]
__vbaStrVarVal
jmp [ __vbaStrVarVal@IAT ]
Ordinal_MSVBVM60_540
jmp [ Ordinal_MSVBVM60_540@IAT ]
__vbaStrVarMove
jmp [ __vbaStrVarMove@IAT ]
Ordinal_MSVBVM60_711
jmp [ Ordinal_MSVBVM60_711@IAT ]
Ordinal_MSVBVM60_616
jmp [ Ordinal_MSVBVM60_616@IAT ]
Ordinal_MSVBVM60_646
jmp [ Ordinal_MSVBVM60_646@IAT ]
__vbaStrMove
jmp [ __vbaStrMove@IAT ]
__vbaR8IntI4
jmp [ __vbaR8IntI4@IAT ]
Ordinal_MSVBVM60_581
jmp [ Ordinal_MSVBVM60_581@IAT ]
__vbaFreeVar
jmp [ __vbaFreeVar@IAT ]
Ordinal_MSVBVM60_632
jmp [ Ordinal_MSVBVM60_632@IAT ]
__vbaVarMove
jmp [ __vbaVarMove@IAT ]
__vbaLbound
jmp [ __vbaLbound@IAT ]
__vbaRefVarAry
jmp [ __vbaRefVarAry@IAT ]
__vbaUbound
jmp [ __vbaUbound@IAT ]
EVENT_SINK_QueryInterface
jmp [ EVENT_SINK_QueryInterface@IAT ]
EVENT_SINK_AddRef
jmp [ EVENT_SINK_AddRef@IAT ]
EVENT_SINK_Release
jmp [ EVENT_SINK_Release@IAT ]
Ordinal_MSVBVM60_100
jmp [ Ordinal_MSVBVM60_100@IAT ]
sub_401f46
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_402a2f
push esp
inc ebx
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] cl
mov [ 0x47 ] al
add [ eax ] al
int3
sub_403578
mov eax [ rw-data ]
or eax eax
je r-xdata
push r-xdata
mov eax DllFunctionCall
call eax
jmp eax
jmp eax
sub_406eab
xchg esp eax
les ecx [ ecx + 0x494aabde ]
mov [ eax ] bh
stc
iretd
sub_406eb7
mov esp 0x8bc6c223
xor esp [ edx + 0x7f ]
mov [ 0x21fbbad ] ds
int3
sub_40c6d8
[ edi + ebp * 2 ]
sub_40c720
and [ ebx - 0x1 ] esp
and ecx esp
0x28557e77 0xb57b
sub_4131d8
retn 0xc741
sub_4131db
sub [ eax - 0x4c833b0c ] ch
retn 0x19c7
sub_413249
jmp [ esi + 0x2e ]
sub_417d58
sar [ ecx + ebp * 4 ] cl
cmpsd [ esi ] [ edi ]
retn
sub_417d87
0x5f20bff9 0x7434
sub_41825a
sub al 0xde
in eax dx
aaa
xchg ecx eax
retn
sub_41c9be
adc al 0x58
xchg [ esi + eax * 2 - 0xc866961 ] esp
fst [ ecx ]
test al 0xb8
sbb eax 0x64540382
iretd
sub_41de58
psubw mm4 mm4
and [ ebx - 0x5 ] cl
add cl [ esp + ebx * 8 ]
retn
sub_41f858
daa
int3
sub_423a19
[ esi ]
sub_425879
jmp edi
sub_42c2bb
leave
rcl dh 0x1
fsubr st4
0x3fdf7f0 0x100a
sub_42c2c7
push ss
sbb eax 0x37302a23
cmp eax 0x57504a43
pop ebp
arpl [ edx + 0x70 ] bp
jbe r-xdata
mov [ 0xffffffffbcb6afa9 ] eax
retn 0xcfc9
or [ ecx - 0x5c636971 ] 0xffffffa9
scasd [ edi ]
mov ch 0xbc
retn 0xcfc8
sub_42c333
leave
iretd
sub_42c897

sub_42cf2a
rcr edi cl
0x140afff5 0x291e
sub_42cf33
xor al 0x3e
dec eax
push ebx
pop edi
push 0x76
add [ ebx - 0x525d6772 ] al
mov bh 0xc1

sub_42d316
inc ebp
iretd
sub_42d39d
sbb al 0x27
xor [ ebx ] edi
inc ebp
dec edi
pop ecx
arpl [ esi + 0x78 ] bp
or [ ebp - 0x49545e69 ] 0xffffffc0
0xdfd4
sub_42d8e7
jmp [ ecx + 0x6d ]
sub_42e695
pushfd
cmpsd [ esi ] [ edi ]
mov bl 0xbf
0xe1d5
sub_42edd9
iretd
sub_42ee02
[ 0x574d4237 ]
sub_42ee08
bound ebp [ ebp + 0x78 ]
or [ ebp - 0x47525c68 ] 0xc2
int3
sub_43330e
jmp eax
sub_43a6c2
jmp [ eax ]
sub_43dc33
salc
loopne r-xdata
and eax 0x4e443a2f
pop eax
arpl [ ebp + 0x78 ] bp
or [ ebp - 0x48525d69 ] 0xffffffc1
int3
test [ ecx ] 0x2b20160c
xor eax 0x5e54493f
push 0x74
or [ ebx - 0x49545e69 ] 0xc1
int3
sub_440022
leave
iretd
sub_44004b
0xd6d0
sub_44004e
fucom st3
0x3fdf6f0 0x100a
sub_4405d8
mov edi 0xd8d1cbc5
fsubrp st4
0x3fdf7f0 0xf09
sub_4424ff
[ edi + esi * 2 - 0x7e ]
sub_442503
lea edx [ edi - 0x3e49535f ]
iretd
sub_442520
iretd
sub_4505d8
mov [ 0xffffffffbcb5afa9 ] eax
retn 0xcec8
sub_4521f7
push ss
sbb al 0x22
sub [ edi ] ebp
xor eax 0x5348423b
pop edi
imul esi [ edx + 0x79 ] 0x7f
test [ edx + edx * 4 - 0x545a6168 ] ecx
mov cl 0xb7
mov esi 0xd8d1cbc4
fsubrp st4
0x3fdf7f1 0x100a
sub_452296
[ edi ]
sub_458597
0x170c00f5 0x2d22
sub_458f1e
fsub st4
out dx eax
sti
push es
adc bl [ 0x4b403529 ]
push edi
bound ebp [ ebp + 0x78 ]
test [ eax - 0x404c5764 ] dl

sub_459414
[ ecx - 0x26333e4a ]
sub_45941a
in eax 0xef
cli
add eax 0x31271b10
cmp al 0x47
push edx
pop esp
push 0x958a7f73
lahf
stosb [ edi ]
mov ch 0xc0
0xe0d5
sub_459432
in al dx
clc
add ecx [ 0x332d2519 ]
cmp [ eax + edx * 2 + 0x5c ] eax
push 0x948a7f73
lahf
stosb [ edi ]
mov ch 0xc1
int3
sub_45d8f1
jmp edx
sub_461bd8
lea edx [ ebx - 0x53596067 ]
mov dl 0xb8
mov edi 0xd8d1cbc5
fsubrp st5
jmp r-xdata
lahf
cmpsb [ esi ] [ edi ]
lodsb [ esi ]
sub_4623c0
[ edx ]
sub_46295b
0xc8bcb1a6 0xded3
0x180c01f5 0x3023
sub_462990
[ ecx - 0x38434f5c ]
rcr edi cl
0x1b0e02f6 0x3226
sub_462a0e
cmp eax [ edi + 0x52 ]
pop ebp
imul esi [ ebp - 0x7f ] 0xb1a5998d
mov ebp 0xeaded3c8
test [ edx ] 0xd
sbb [ ebx ] ah
cmp eax [ cs : esi + 0x53 ]
pop edi
push 0x76
or [ esi - 0x434e5a67 ] 0xc8
rcr edi cl
0x1a0e03f7 0x3327
sub_462d14
call [ ecx - 0x404b5662 ]

sub_462fe0
out 0xed al
cld
pop es
adc ebx [ edi ]
sub [ 0x57514a41 ] esi
pop ebp
arpl [ ebp + 0x79 ] bp
test [ edi - 0x474e5b67 ] ecx
mov edi 0xdfd3cbc5
jmp r-xdata
mov cl 0xb8
sub_463099
xchg edx eax
pushfd
cmpsb [ esi ] [ edi ]
mov dl 0xbd
enter 0xded3 0xe9
hlt
sub_467958
mov al [ 0xffffffffd8cabcae ]
out 0xf6 eax
add al 0x12
and [ esi ] ch
cmp al 0x4d
pop ebx
imul esi [ edi - 0x7b ] 0xbeafa193
int3
sub_468cc1
test dl 0xc6
test si 0x3ff3
push esi
test al 0xa7
cmp si 0x529e
xor edx [ esp ]
test ax 0x5b99
test edi 0x97c963e3
pop esi
test bh 0xd5
cmp cx 0x7843
retn
sub_46a006
sbb al 0xea
xor edi [ esp + ebx + 0x1cbc33ea ]
0xea1cbc33 0xbc33
sub_46a016
sbb al 0xea
xor edi [ esp + ebx + 0x1cbc33ea ]
0xea1cbc33 0xbc33
sub_46a036
sbb al 0xea
xor edi [ esp + ebx + 0x1cbc33ea ]
0xea1cbc33 0xbc33
sub_46a046
sbb al 0xea
xor edi [ esp + ebx + 0x1cbc33ea ]
0xea1cbc33 0xbc33
sub_46a056
sbb al 0xea
xor edi [ esp + ebx + 0x1cbc33ea ]
0xea1cbc33 0xbc33
sub_46a066
sbb al 0xea
xor edi [ esp + ebx + 0x1cbc33ea ]
0xea1cbc33 0xbc33
sub_46a076
sbb al 0xea
xor edi [ esp + ebx + 0x1cbc33ea ]
0xea1cbc33 0xbc33
sub_46a086
sbb al 0xea
xor edi [ esp + ebx + 0x1cbc33ea ]
0xea1cbc33 0xbc33
sub_46a096
sbb al 0xea
xor edi [ esp + ebx + 0x1cbc33ea ]
0xea1cbc33 0xbc33
sub_46a0a6
sbb al 0xea
xor edi [ esp + ebx + 0x1cbc33ea ]
0xea1cbc33 0xbc33
sub_46a0b6
sbb al 0xea
xor edi [ esp + ebx + 0x1cbc33ea ]
0xea1cbc33 0xbc33
sub_46a0c6
sbb al 0xea
xor edi [ esp + ebx + 0x1cbc33ea ]
0xea1cbc33 0xbc33
sub_46a0d6
sbb al 0xea
xor edi [ esp + ebx + 0x1cbc33ea ]
0xea1cbc33 0xbc33
sub_46a0e6
sbb al 0xea
xor edi [ esp + ebx + 0x2d90d1ea ]
add [ edx - 0x3bf8852b ] ah
les esi [ ebp - 0x7d ]
rcl [ eax - 0x6f2c3cdf ] 0x1
and [ ebx - 0x17 ] ebp

sub_46a5aa
iretd
sub_46bd9c
push edx
in al 0xbc
retn 0xc961
sub_471bda
aad 0xc8
0x101f
sub_472edf
mov esp 0xf9bbc2f9
sar [ edx - 0x64a4506 ] 0xa8
cmpsb [ esi ] [ edi ]
hlt
sub_473021
not edx

sub_473024
clc
0xf9c4
sub_473028
retn 0xf9bd
sub_47302b
sar [ ebx - 0x6423d07 ] 0xc3
mov esi 0xf9bfc5f9
mov al 0xf8
mov ecx 0xf8c3c9f8
0xf8c4
sub_473043

sub_473045
clc
int 0xc5
test esi 0xc8d0f7c6
not ecx
leave
not edx
0xd3f7
sub_473056

sub_473057
not ch
int3
sub_473bf4
retn 0x577f
sub_473bf7
retn 0x577f
sub_473bfa
0x6b8f
sub_473dba
inc [ eax + 0xff3f ]
add bh bh
clc
add [ edi ] al
inc [ eax ]
add [ eax ] al
push eax
add [ ecx ] al
inc [ eax ]
add [ eax ] al
jmp eax
sub_4741bf
ror dl cl
clc
int3
sub_4742a5
clc
int3
sub_474e0b
push ecx
int3
sub_4760f4
lea ecx [ ebp - 0x98 ]
call [ __vbaFreeStr@IAT ]
lea eax [ ebp - 0xb8 ]
lea ecx [ ebp - 0xa8 ]
push eax
push ecx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
retn
sub_476161
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x30 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_47633c
mov ecx [ ebp - 0x10 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_478fa6
lea ecx [ ebp - 0xc8 ]
call [ __vbaFreeStr@IAT ]
lea ecx [ ebp - 0xcc ]
call [ __vbaFreeObj@IAT ]
lea eax [ ebp - 0xec ]
push eax
lea ecx [ ebp - 0xdc ]
push ecx
push 0x2
call [ __vbaFreeVarList@IAT ]
add esp 0xc
retn
sub_479081
mov ecx [ ebp - 0x20 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
