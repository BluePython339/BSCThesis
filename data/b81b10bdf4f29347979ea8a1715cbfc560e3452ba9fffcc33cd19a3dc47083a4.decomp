sub_401000
push ebp
mov ebp esp
sub esp 0x24
push ebx
add esp 0xfffffff4
push sub_401104
call SetUnhandledExceptionFilter
add esp 0xfffffffc
call _fpreset
add esp 0x10
mov [ ebp - 0x4 ] 0x0
add esp 0xfffffff4
lea eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push rw-data
call __getmainargs
add esp 0x20
mov edx [ rw-data ]
test edx edx
je r-xdata
add esp 0xfffffffc
call __p__environ
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call sub_401214
mov ebx eax
call _cexit
mov eax [ _fmode@IAT ]
mov [ eax ] edx
mov edx [ _iob@IAT ]
test edx edx
je r-xdata
mov edx [ _iob@IAT ]
add edx 0x20
je r-xdata
add esp 0xfffffff8
mov eax [ rw-data ]
push eax
add esp 0xfffffff4
push edx
call _fileno
add esp 0x10
push eax
call _setmode
add esp 0x10
mov edx [ _iob@IAT ]
add edx 0x40
je r-xdata
add esp 0xfffffff8
mov eax [ rw-data ]
push eax
add esp 0xfffffff4
push edx
call _fileno
add esp 0x10
push eax
call _setmode
add esp 0x10
add esp 0xfffffff8
mov eax [ rw-data ]
push eax
add esp 0xfffffff4
push edx
call _fileno
add esp 0x10
push eax
call _setmode
add esp 0x10
sub_401104
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
xor esi esi
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000091
ja r-xdata
cmp eax 0xc0000093
je r-xdata
cmp eax 0xc000008d
jae r-xdata
mov esi 0x1
cmp eax 0xc0000094
je r-xdata
cmp eax 0xc0000005
je r-xdata
test eax eax
je r-xdata
add esp 0xfffffff8
push 0x1
push 0x8
call signal
add esp 0x10
test esi esi
je r-xdata
add esp 0xfffffff8
push 0x0
push 0x8
call signal
add esp 0x10
cmp eax 0x1
jne r-xdata
jmp r-xdata
add esp 0xfffffff8
push 0x0
push 0xb
call signal
add esp 0x10
cmp eax 0x1
jne r-xdata
jmp r-xdata
lea esp [ ebp - 0x18 ]
mov eax ebx
pop ebx
pop esi
mov esp ebp
pop ebp
retn 0x4
add esp 0xfffffff4
mov ebx 0xffffffff
push 0x8
mov ebx 0xffffffff
jmp r-xdata
call _fpreset
test eax eax
je r-xdata
add esp 0xfffffff8
mov ebx 0xffffffff
push 0x1
push 0xb
call signal
jmp r-xdata
add esp 0xfffffff4
mov ebx 0xffffffff
push 0xb
jmp r-xdata
call eax
sub_401214
push ebp
mov ebp esp
sub esp 0x64
push ebx
call sub_401334
call GetCommandLineA
mov ebx eax
add esp 0xfffffff4
lea eax [ ebp - 0x50 ]
push eax
call GetStartupInfoA
add esp 0xc
test ebx ebx
je r-xdata
mov eax 0xa
test [ ebp - 0x24 ] 0x1
je r-xdata
jmp r-xdata
push eax
push ebx
push 0x0
add esp 0xfffffff4
push 0x0
call GetModuleHandleA
add esp 0xc
push eax
call sub_4014b8
mov ebx [ ebp - 0x68 ]
mov esp ebp
pop ebp
retn
movzx eax [ ebp - 0x20 ]
mov al [ ebx ]
cmp al 0x20
je r-xdata
inc ebx
cmp al 0x9
je r-xdata
mov al [ ebx ]
cmp al 0x22
jne r-xdata
cmp al 0x20
je r-xdata
lea esi [ esi ]
inc ebx
cmp al 0x9
je r-xdata
test al al
jne r-xdata
cmp al 0x9
je r-xdata
mov al [ ebx ]
cmp al 0x20
je r-xdata
test al al
jne r-xdata
inc ebx
mov al [ ebx ]
cmp al 0x22
je r-xdata
jmp r-xdata
inc ebx
mov al [ ebx ]
jmp r-xdata
sub_4012ac
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x8
cmp [ eax ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ rw-data ]
lea edx [ eax + 0x4 ]
mov [ rw-data ] edx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub_4012e0
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov eax [ r-xdata ]
cmp eax 0xffffffff
jne r-xdata
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ r-xdata ] 0x0
je r-xdata
add esp 0xfffffff4
push sub_4012ac
call atexit
mov ebx [ ebp - 0x18 ]
mov esp ebp
pop ebp
retn
nop
mov edx r-xdata
lea esi [ esi ]
mov eax [ ebx * 4 + r-xdata ]
call eax
dec ebx
jne r-xdata
add edx 0x4
inc eax
cmp [ edx ] 0x0
jne r-xdata
sub_401334
push ebp
mov ebp esp
sub esp 0x14
push ebx
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ ebp - 0x18 ]
mov esp ebp
pop ebp
retn
mov [ rw-data ] 0x1
mov eax [ r-xdata ]
cmp eax 0xffffffff
jne r-xdata
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ r-xdata ] 0x0
je r-xdata
add esp 0xfffffff4
push sub_4012ac
call atexit
nop
mov edx r-xdata
mov eax [ ebx * 4 + r-xdata ]
call eax
dec ebx
jne r-xdata
add edx 0x4
inc eax
cmp [ edx ] 0x0
jne r-xdata
sub_401398
bound esp [ ecx + 0x64 ]
pop edi
popad
insb
insb
outsd
arpl [ eax ] ax
mov esi esi
push ebp
mov ebp esp
sub esp 0x34
push ebx
jmp r-xdata
push 0x0
push 0x0
push 0x0
lea ebx [ ebp - 0x20 ]
push ebx
call GetMessageA
test eax eax
jne r-xdata
add esp 0xfffffff4
push ebx
call TranslateMessage
push ebx
call DispatchMessageA
add esp 0xc
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x38 ]
leave
retn
sub_4014b8
push ebp
mov ebp esp
sub esp 0xdc
push edi
push esi
push ebx
mov ebx [ ebp + 0x10 ]
call InitCommonControls
test ebx ebx
je r-xdata
add esp 0xfffffffc
push 0x12
push r-xdata
push ebx
call strncmp
add esp 0x10
test eax eax
jne r-xdata
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
je r-xdata
add esp 0xfffffffc
push 0xf
push r-xdata
push ebx
call strncmp
add esp 0x10
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
mov esi ebx
mov edi r-xdata
mov ecx 0xd
cld
test al 0x0
[ esi ] [ edi ]
jne r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
add esp 0xfffffff8
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc4 ] edx
push edx
call GetCommandLineW
push eax
call sub_409dd0
add esp 0xfffffff8
mov ecx [ ebp - 0xc4 ]
push ecx
push [ ebp + 0x8 ]
call sub_4098b8
add esp 0x20
add esp 0xfffffff4
push 0x9a
call sub_4019cc
add esp 0x10
test eax eax
jne r-xdata
call sub_4026d4
call sub_40954c
jmp r-xdata
xor esi esi
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
sub edx eax
mov eax edx
sar eax 0x2
cmp esi eax
jae r-xdata
add esp 0xfffffff4
push 0x9c
call sub_4019cc
add esp 0x10
test eax eax
je r-xdata
xor eax eax
lea esp [ ebp - 0xe8 ]
pop ebx
pop esi
pop edi
leave
retn 0x10
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
lea esi [ esi ]
add esp 0xfffffff4
push 0x6c
call sub_4019cc
add esp 0x10
test eax eax
je r-xdata
add esp 0xfffffff8
add esp 0xfffffffe
push 0x1
add esp 0xfffffffe
push 0x1
call sub_407720
add esp 0x10
add esp 0xfffffff8
push r-xdata
mov eax ebx
add eax [ ebp - 0x10 ]
push [ eax ]
call wcscmp
add esp 0x10
test eax eax
jne r-xdata
add esp 0xfffffff8
push r-xdata
mov eax ebx
add eax [ ebp - 0x10 ]
push [ eax ]
call wcscmp
add esp 0x10
test eax eax
jne r-xdata
call sub_4066f8
test al al
jne r-xdata
add esp 0xfffffff4
push 0x278b
call sub_4019cc
add esp 0x10
test eax eax
jne r-xdata
add esp 0xfffffff4
push 0x9a
call sub_4019cc
add esp 0x10
test eax eax
je r-xdata
call sub_4093fc
jmp r-xdata
call sub_4026d4
jmp r-xdata
add esp 0xfffffff4
add esp 0xfffffffe
push 0x1
call sub_4022ac
add esp 0x10
test eax eax
je r-xdata
mov [ ebp - 0xc0 ] 0x94
add esp 0xfffffff4
lea eax [ ebp - 0xc0 ]
push eax
call GetVersionExA
add esp 0xc
test eax eax
je r-xdata
add esp 0xfffffff4
mov eax [ ebp + 0x14 ]
push eax
call sub_407e60
jmp r-xdata
add ebx 0x4
inc esi
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
sub ecx eax
mov eax ecx
sar eax 0x2
cmp esi eax
jb r-xdata
add esp 0xfffffff8
push r-xdata
mov eax ebx
add eax [ ebp - 0x10 ]
push [ eax ]
call wcscmp
add esp 0x10
test eax eax
jne r-xdata
call sub_409670
add esp 0xfffffffc
add esp 0xfffffffe
push 0x0
push 0x0
add esp 0xfffffffe
push 0x1
call sub_4081a4
add esp 0x10
test al al
jne r-xdata
add esp 0xfffffff8
push r-xdata
push 0x3f1
call sub_4029e0
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0xb0 ] 0x2
jne r-xdata
add esp 0x10
add esp 0xfffffff4
push 0x9a
call sub_4019cc
add esp 0x10
test eax eax
je r-xdata
call sub_4026d4
call sub_4093fc
test al al
jne r-xdata
add esp 0xfffffff4
push 0x6c
call sub_4019cc
add esp 0x10
test eax eax
je r-xdata
add esp 0xfffffff4
push 0x53
call sub_402a00
add esp 0xfffffff4
mov edi [ rw-data ]
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx + 0x3a ]
push eax
call sub_415f94
mov ebx eax
mov edi ebx
mov esi r-xdata
cld
mov ecx 0xe
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
add esp 0xfffffff8
push [ rw-data ]
push ebx
call strcat
add esp 0x20
push 0x40
push [ rw-data ]
push ebx
push 0x0
call MessageBoxA
add esp 0xfffffff4
push ebx
call sub_4160b0
cmp [ ebp - 0xbc ] 0x4
jne r-xdata
push 0x0
push r-xdata
push r-xdata
push 0x0
call MessageBoxA
add esp 0xfffffff4
push 0x1
call exit
add esp 0xfffffff8
add esp 0xfffffffe
push 0x1
mov edx [ ebp - 0xc4 ]
push edx
call sub_404c94
add esp 0x10
test al al
jne r-xdata
add esp 0xfffffff4
push 0x278b
call sub_4019cc
add esp 0x10
test eax eax
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
sub eax esi
sar eax 0x2
je r-xdata
add esp 0xfffffff8
push 0x0
push 0x3ed
call sub_4029e0
add esp 0xfffffff4
mov eax [ ebp + 0x14 ]
push eax
call sub_407e60
add esp 0x10
shl eax 0x2
cmp eax 0x80
jbe r-xdata
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push esi
call free
jmp r-xdata
sub_4018c8
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
sub_40192e
sub al 0x0
push ebp
mov ebp esp
mov eax 0x2010
call sub_4161a4
push esi
push ebx
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x2000 ]
push ebx
push [ ebp + 0x8 ]
call sub_401aa8
add esp 0xfffffff4
add esp 0xfffffff8
push sub_40192e
push ebx
call strtok
push eax
call atoi
mov esi eax
add esp 0x30
add esp 0xfffffff4
add esp 0xfffffff8
push sub_40192e
push 0x0
call strtok
push eax
call atoi
mov ebx eax
add esp 0x20
add esp 0xfffffff4
add esp 0xfffffff8
push sub_40192e
push 0x0
call strtok
push eax
call atoi
mov ecx eax
mov eax esi
movzx edx al
movzx eax bx
shl eax 0x8
or edx eax
movzx eax cl
shl eax 0x10
or edx eax
mov eax edx
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
leave
retn
sub_4019cc
push ebp
mov ebp esp
mov eax 0x2014
call sub_4161a4
push ebx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x2000 ] 0x0
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x2000 ]
push ebx
push eax
call sub_401aa8
add esp 0xfffffff4
push ebx
call atoi
mov ebx [ ebp - 0x2018 ]
leave
retn
sub_401a0c
push ebp
mov ebp esp
sub esp 0x70
push esi
push ebx
mov esi [ ebp + 0xc ]
lea ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
add esp 0xfffffffc
push ebx
push rw-data
push eax
call sub_41f7dc
add esp 0xc
mov cl 0x0
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x10 ]
cmp edx eax
je r-xdata
mov cl 0x1
mov eax [ edx + 0x10 ]
cmp [ ebp + 0x8 ] eax
jge r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x40 ] eax
lea edx [ ebp - 0x58 ]
mov eax [ ebx ]
mov [ ebp - 0x58 ] eax
mov [ edx + 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x50 ] eax
push edx
lea eax [ ebp - 0x50 ]
push eax
push rw-data
push ecx
call sub_41f1cc
add esp 0xc
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
test cl cl
je r-xdata
mov [ esi ] 0x0
add esp 0xfffffff8
push eax
push esi
call wcscpy
jmp r-xdata
lea esp [ ebp - 0x78 ]
pop ebx
pop esi
leave
retn
sub_401aa8
push ebp
mov ebp esp
sub esp 0x70
push esi
push ebx
mov esi [ ebp + 0xc ]
lea ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
add esp 0xfffffffc
push ebx
push rw-data
push eax
call sub_41f818
add esp 0xc
mov cl 0x0
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x10 ]
cmp edx eax
je r-xdata
mov cl 0x1
mov eax [ edx + 0x10 ]
cmp [ ebp + 0x8 ] eax
jge r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x40 ] eax
lea edx [ ebp - 0x58 ]
mov eax [ ebx ]
mov [ ebp - 0x58 ] eax
mov [ edx + 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x50 ] eax
push edx
lea eax [ ebp - 0x50 ]
push eax
push rw-data
push ecx
call sub_41f3f0
add esp 0xc
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
test cl cl
je r-xdata
mov [ esi ] 0x0
add esp 0xfffffff8
push eax
push esi
call strcpy
jmp r-xdata
lea esp [ ebp - 0x78 ]
pop ebx
pop esi
leave
retn
sub_401ba8
push ebp
mov ebp esp
sub esp 0x14
push ebx
add esp 0xfffffffc
push 0x0
push 0x80
push 0x3
push 0x0
push 0x3
push 0x80000000
call sub_4034b8
push eax
call CreateFileA
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
add esp 0xfffffff8
call sub_4034b8
push eax
push r-xdata
call sub_4071a4
add esp 0xfffffff4
push r-xdata
call sub_40298c
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
sub_401c1c
push ebp
mov ebp esp
sub esp 0x8c
push edi
push esi
push ebx
call sub_401ba8
mov ebx eax
add esp 0xfffffff4
push ebx
call sub_401e9c
add esp 0xfffffff4
push ebx
call sub_403130
add esp 0x20
cmp eax 0xe8e413d5
je r-xdata
add esp 0xfffffff4
push ebx
call sub_403130
add esp 0xfffffff4
push ebx
call sub_403130
add esp 0x20
add esp 0xfffffff4
push ebx
call sub_4030b8
add esp 0xfffffff4
push ebx
call sub_403130
add esp 0x20
test eax eax
jle r-xdata
add esp 0xfffffff4
push r-xdata
call sub_40298c
add esp 0xfffffff4
push ebx
call sub_403130
add esp 0x10
test eax eax
jle r-xdata
mov esi eax
nop
push 0x1
push 0x0
push 0x0
push ebx
call SetFilePointer
mov [ rw-data ] eax
add esp 0xfffffff4
push ebx
call CloseHandle
push 0x6b
call sub_4019cc
add esp 0x10
cmp eax 0x1
je r-xdata
mov esi eax
nop
mov cl 0x1
mov eax [ edx + 0x10 ]
cmp [ ebp - 0x54 ] eax
jge r-xdata
lea esp [ ebp - 0x98 ]
pop ebx
pop esi
pop edi
leave
retn
cmp eax 0x5
je r-xdata
mov cl 0x1
mov eax [ edx + 0x10 ]
cmp [ ebp - 0x64 ] eax
jge r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x74 ]
mov [ eax + 0x14 ] edx
dec esi
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x40 ] eax
lea edx [ ebp - 0x60 ]
mov eax [ edi ]
mov [ ebp - 0x60 ] eax
mov [ edx + 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x50 ] eax
push edx
lea eax [ ebp - 0x50 ]
push eax
push rw-data
push ecx
call sub_41f3f0
add esp 0xc
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
test cl cl
je r-xdata
call sub_4026d4
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x78 ]
mov [ eax + 0x14 ] edx
dec esi
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x40 ] eax
lea edx [ ebp - 0x70 ]
mov eax [ edi ]
mov [ ebp - 0x70 ] eax
mov [ edx + 0x4 ] 0x0
lea ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x50 ] eax
push edx
lea eax [ ebp - 0x50 ]
push eax
push rw-data
push ecx
call sub_41f1cc
add esp 0xc
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
test cl cl
je r-xdata
add esp 0xfffffff4
push ebx
call sub_403130
mov [ ebp - 0x54 ] eax
add esp 0xfffffff4
push ebx
call sub_403208
mov [ ebp - 0x74 ] eax
lea edi [ ebp - 0x54 ]
add esp 0x20
lea eax [ ebp - 0x10 ]
add esp 0xfffffffc
push edi
push rw-data
push eax
call sub_41f818
add esp 0xc
mov cl 0x0
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x10 ]
cmp edx eax
je r-xdata
add esp 0xfffffff4
push ebx
call sub_403130
mov [ ebp - 0x64 ] eax
add esp 0xfffffff4
push ebx
call sub_403284
mov [ ebp - 0x78 ] eax
lea edi [ ebp - 0x64 ]
add esp 0x20
lea eax [ ebp - 0x10 ]
add esp 0xfffffffc
push edi
push rw-data
push eax
call sub_41f7dc
add esp 0xc
mov cl 0x0
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov edx [ ebp - 0x10 ]
cmp edx eax
je r-xdata
sub_401e9c
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
push 0x0
push 0x0
push 0x3c
mov eax [ ebp + 0x8 ]
push eax
call SetFilePointer
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call sub_403130
mov ebx eax
lea eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
push 0x0
push 0x0
lea eax [ ebx + 0x6 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetFilePointer
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call sub_40319c
movsx esi ax
add esp 0x20
add esp 0xfffffff8
push esi
push r-xdata
call sub_407210
push 0x0
push 0x0
lea eax [ ebx + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetFilePointer
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call sub_40319c
movsx ebx ax
add esp 0x20
add esp 0xfffffff8
push ebx
push r-xdata
call sub_407210
mov eax [ ebp - 0x4 ]
lea ebx [ eax + ebx + 0x14 ]
lea esi [ esi + esi * 4 - 0x5 ]
lea esi [ ebx + esi * 8 ]
add esp 0xfffffff8
push esi
push r-xdata
call sub_407210
add esp 0x20
push 0x0
push 0x0
lea eax [ esi + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetFilePointer
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call sub_403130
mov edi eax
push 0x0
push 0x0
add esi 0x14
push esi
mov eax [ ebp + 0x8 ]
push eax
call SetFilePointer
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call sub_403130
mov ebx eax
add esp 0x20
add esp 0xfffffffc
push ebx
push edi
push r-xdata
call sub_407210
push 0x0
push 0x0
lea eax [ ebx + edi ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetFilePointer
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
sub_401fd4
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov edi [ ebp + 0xc ]
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call sub_4030b8
mov ebx eax
mov esi edx
push esi
push ebx
push edi
push r-xdata
call sub_407210
add esp 0x20
test esi esi
jg r-xdata
add esp 0xfffffffc
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0x40000000
push edi
call CreateFileA
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
jne r-xdata
add esp 0xfffffff4
add esp 0xfffffffe
push 0x1
push esi
push ebx
push edi
mov eax [ ebp + 0x8 ]
push eax
call sub_4020a8
add esp 0x20
test eax eax
jne r-xdata
add esp 0xfffffff8
push r-xdata
push 0x3f1
call sub_4029e0
xor eax eax
test ebx ebx
jbe r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push edi
call CloseHandle
sub_4020a8
push ebp
mov ebp esp
mov eax 0x201c
call sub_4161a4
push edi
push esi
push ebx
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x2010 ] 0x0
mov [ ebp - 0x200c ] 0x0
test esi esi
jg r-xdata
add esp 0xfffffff4
push 0x0
lea eax [ ebp - 0x2004 ]
push eax
mov eax ebx
mov edx esi
sub eax [ ebp - 0x2010 ]
sbb edx [ ebp - 0x200c ]
js r-xdata
jne r-xdata
push eax
lea edi [ ebp - 0x2000 ]
push edi
mov eax [ ebp + 0x8 ]
push eax
call ReadFile
add esp 0xc
test eax eax
je r-xdata
jne r-xdata
xor eax eax
test ebx ebx
jbe r-xdata
add esp 0xfffffff4
mov eax [ ebp - 0x2010 ]
mov edx [ ebp - 0x200c ]
push edx
push eax
call GetLastError
push eax
push [ ebp - 0x2004 ]
push r-xdata
call sub_4071a4
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x2004 ]
test edx edx
jne r-xdata
mov eax 0x2000
cmp eax 0x2000
jb r-xdata
lea esp [ ebp - 0x2028 ]
pop ebx
pop esi
pop edi
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
xor edi edi
cmp edi [ ebp - 0x2004 ]
jae r-xdata
xor eax eax
cmp eax edx
jae r-xdata
mov eax [ ebp - 0x2004 ]
add [ ebp - 0x2010 ] eax
adc [ ebp - 0x200c ] 0x0
cmp esi [ ebp - 0x200c ]
jg r-xdata
nop
xor [ eax + edi ] 0x88
inc eax
cmp eax [ ebp - 0x2004 ]
jb r-xdata
jne r-xdata
add edi [ ebp - 0x2008 ]
cmp edi [ ebp - 0x2004 ]
jb r-xdata
add esp 0xfffffffc
call GetLastError
push eax
mov eax [ ebp - 0x2004 ]
sub eax edi
push eax
push r-xdata
call sub_4071a4
mov eax 0x2
jmp r-xdata
cmp ebx [ ebp - 0x2010 ]
ja r-xdata
add esp 0xfffffff4
push 0x0
lea eax [ ebp - 0x2008 ]
push eax
mov eax [ ebp - 0x2004 ]
sub eax edi
push eax
lea eax [ edi + ebp - 0x2000 ]
push eax
mov edx [ ebp + 0xc ]
push edx
call WriteFile
add esp 0xc
test eax eax
jne r-xdata
sub_4022ac
push ebp
mov ebp esp
mov eax 0x401c
call sub_4161a4
push edi
push esi
push ebx
mov bl [ ebp + 0x8 ]
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0xfffffff4
push 0x7d2
call sub_4019cc
mov [ ebp - 0x4004 ] eax
add esp 0x20
add esp 0xfffffff8
push eax
push r-xdata
call sub_407210
add esp 0x10
cmp [ ebp - 0x4004 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
call sub_401ba8
mov [ ebp - 0x4008 ] eax
push 0x0
push 0x0
push [ rw-data ]
push eax
call SetFilePointer
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x2000 ]
push ebx
push 0x7d3
call sub_401aa8
mov [ ebp - 0x400c ] 0x0
add esp 0xfffffff8
push r-xdata
push ebx
call strtok
mov esi eax
add esp 0x20
jmp r-xdata
call sub_409460
xor eax eax
mov [ rw-data ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4004 ]
cmp [ ebp - 0x400c ] eax
jge r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4008 ]
push eax
call SetFilePointer
mov [ rw-data ] eax
add esp 0xfffffff4
mov eax [ ebp - 0x4008 ]
push eax
call CloseHandle
push r-xdata
call sub_407210
test esi esi
je r-xdata
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
jne r-xdata
push esi
push rw-data
push r-xdata
lea ebx [ ebp - 0x4000 ]
push ebx
call sprintf
add esp 0xfffffff8
push 0x5c
push esi
call strchr
mov edx eax
add esp 0x20
test edx edx
je r-xdata
push esi
push rw-data
push r-xdata
push ebx
call sprintf
add esp 0xfffffff8
push ebx
mov eax [ ebp - 0x4008 ]
push eax
call sub_401fd4
mov esi eax
add esp 0x20
test esi esi
jne r-xdata
mov edi rw-data
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
sub edx esi
lea eax [ ecx + edx ]
mov [ eax + ebx ] 0x0
add esp 0xfffffff8
push ebx
push r-xdata
call sub_407210
add esp 0xfffffff8
push 0x0
push ebx
call CreateDirectoryA
add esp 0x18
test eax eax
jne r-xdata
add esp 0xfffffff8
push ebx
push r-xdata
call sub_4071a4
add esp 0xfffffff4
push rw-data
call sub_402d48
add esp 0x20
add esp 0xfffffff4
push rw-data
call RemoveDirectoryA
mov eax esi
jmp r-xdata
inc [ ebp - 0x400c ]
add esp 0xfffffff8
push r-xdata
push 0x0
call strtok
mov esi eax
add esp 0x10
call GetLastError
cmp eax 0xb7
je r-xdata
lea esp [ ebp - 0x4028 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff8
push ebx
push r-xdata
call sub_4071a4
add esp 0x10
sub_4024e0
push ebp
mov ebp esp
sub esp 0x40
push esi
push ebx
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
add esp 0xfffffff8
push 0x2
push rw-data
call sub_41afe4
add esp 0x10
add esp 0xfffffff8
push 0x2
push rw-data
call sub_41b068
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x21 ] 0x0
lea esi [ ebp - 0x21 ]
mov [ rw-data ] 0x0
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov ebx [ rw-data ]
test ebx ebx
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
add esp 0xc
mov eax [ ebx ]
mov [ rw-data ] eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov edx ebx
add esp 0xfffffff4
push 0x18
call sub_41c140
mov ebx eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov edx ebx
add esp 0x10
jmp r-xdata
mov eax [ ebx ]
mov [ rw-data ] eax
add esp 0xfffffff4
push 0x18
call sub_41c140
mov ebx eax
jmp r-xdata
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov al [ esi ]
mov [ rw-data ] al
mov [ edx ] 0x0
mov eax [ rw-data ]
mov [ eax + 0x4 ] 0x0
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov eax [ rw-data ]
mov [ eax + 0xc ] eax
mov [ ebp - 0x22 ] 0x0
lea esi [ ebp - 0x22 ]
mov [ rw-data ] 0x0
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov ebx [ rw-data ]
test ebx ebx
jne r-xdata
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
mov edx ebx
mov [ rw-data ] edx
mov [ rw-data ] 0x0
mov al [ esi ]
mov [ rw-data ] al
mov [ edx ] 0x0
mov eax [ rw-data ]
mov [ eax + 0x4 ] 0x0
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov eax [ rw-data ]
mov [ eax + 0xc ] eax
jmp r-xdata
sub_4026b8
bound esp [ ecx + 0x64 ]
pop edi
popad
insb
insb
outsd
arpl [ eax ] ax
mov esi esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
leave
retn
sub_4026f0
push ebp
mov ebp esp
mov eax 0x4010
call sub_4161a4
push esi
push ebx
mov esi [ ebp + 0x8 ]
add esp 0xfffffff4
push 0x0
call sub_407e60
call sub_407188
add esp 0x10
test eax eax
je r-xdata
add esp 0xfffffff8
push esi
lea eax [ ebp - 0x2000 ]
push eax
call strcpy
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x4000 ]
push ebx
call sub_407188
push eax
mov eax [ rw-data ]
call eax
add esp 0x4
test eax eax
jne r-xdata
add esp 0xfffffffc
lea eax [ ebp - 0x2000 ]
push eax
push r-xdata
mov eax [ _iob@IAT ]
add eax 0x40
push eax
call fprintf
add esp 0xfffffff4
mov eax [ _iob@IAT ]
add eax 0x40
push eax
call fflush
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x4000 ]
push ebx
push 0x3e8
call sub_401aa8
push 0x10
push ebx
lea eax [ ebp - 0x2000 ]
push eax
push [ rw-data ]
call MessageBoxA
jmp r-xdata
push ebx
push esi
push r-xdata
lea eax [ ebp - 0x2000 ]
push eax
call sprintf
jmp r-xdata
add esp 0xfffffff8
call sub_407188
push eax
push ebx
call strcpy
add esp 0x10
lea esp [ ebp - 0x4018 ]
pop ebx
pop esi
leave
retn
add esp 0x10
cmp [ rw-data ] 0x0
je r-xdata
sub_402808
push ebp
mov ebp esp
mov eax 0xa010
call sub_4161a4
push esi
push ebx
mov esi [ ebp + 0x8 ]
add esp 0xfffffff4
push 0x0
call sub_407e60
call sub_407188
add esp 0x10
test eax eax
je r-xdata
add esp 0xfffffff8
push esi
lea eax [ ebp - 0x4000 ]
push eax
call wcscpy
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x6000 ]
push ebx
call sub_407188
push eax
mov eax [ rw-data ]
call eax
add esp 0x4
test eax eax
jne r-xdata
add esp 0xfffffffc
lea eax [ ebp - 0x4000 ]
push eax
push r-xdata
mov eax [ _iob@IAT ]
add eax 0x40
push eax
call fwprintf
add esp 0xfffffff4
mov eax [ _iob@IAT ]
add eax 0x40
push eax
call fflush
add esp 0xfffffff8
lea ebx [ ebp - 0xa000 ]
push ebx
push 0x4e2d
call sub_401a0c
push 0x10
push ebx
lea eax [ ebp - 0x4000 ]
push eax
push [ rw-data ]
call MessageBoxW
jmp r-xdata
push ebx
push esi
push r-xdata
lea eax [ ebp - 0x4000 ]
push eax
call swprintf
jmp r-xdata
add esp 0xfffffff8
call sub_407188
push eax
push ebx
call strcpy
add esp 0x10
lea esp [ ebp - 0xa018 ]
pop ebx
pop esi
leave
retn
add esp 0x10
cmp [ rw-data ] 0x0
je r-xdata
sub_402900
push ebp
mov ebp esp
mov eax 0x400c
call sub_4161a4
push edi
push esi
push ebx
add esp 0xfffffffc
push 0x2000
lea edi [ ebp - 0x2000 ]
push edi
push [ ebp + 0x8 ]
call sub_401aa8
add esp 0x10
cmp [ ebp + 0xc ] 0x0
je r-xdata
add esp 0xfffffff4
push edi
call sub_4026f0
lea esp [ ebp - 0x4018 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff8
push r-xdata
push edi
call strstr
mov esi eax
add esp 0x10
test esi esi
je r-xdata
add esp 0xfffffff8
lea eax [ esi + 0x3 ]
push eax
lea ebx [ ebp - 0x4000 ]
push ebx
call strcpy
add esp 0xfffffff8
mov eax [ ebp + 0xc ]
push eax
push esi
call strcpy
add esp 0x20
add esp 0xfffffff8
push ebx
push esi
call strcat
add esp 0x10
sub_4029a8
push ebp
mov ebp esp
mov eax 0x4014
call sub_4161a4
push ebx
add esp 0xfffffff8
lea ebx [ ebp - 0x4000 ]
push ebx
push [ ebp + 0x8 ]
call sub_401a0c
add esp 0xfffffff4
push ebx
call sub_402808
add esp 0x20
add esp 0xfffffff4
push 0x1
call ExitProcess
sub_402a14
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
sub_402a6c
push ebp
mov ebp esp
sub esp 0x33c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
push ebx
call GetFileAttributesA
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
push 0x0
lea edi [ ebp - 0x110 ]
push edi
push 0x104
push ebx
call GetFullPathNameA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
cmp ebx 0x103
jbe r-xdata
lea esp [ ebp - 0x348 ]
pop ebx
pop esi
pop edi
leave
retn 0xc
add esp 0xfffffff4
lea eax [ ebp - 0x324 ]
push eax
call SHGetDesktopFolder
mov edx eax
add esp 0xc
test edx edx
jl r-xdata
add esp 0xfffffff4
push 0x6f
call SetLastError
xor ebx ebx
jmp r-xdata
add esp 0xfffffff8
push 0x104
lea esi [ ebp - 0x320 ]
push esi
push 0xffffffff
push edi
push 0x0
call AreFileApisANSI
test eax eax
sete al
movzx eax al
push eax
call MultiByteToWideChar
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
add esp 0xfffffffc
mov edx [ ebp - 0x324 ]
mov ecx [ edx ]
push 0x0
lea eax [ ebp - 0x328 ]
push eax
lea eax [ ebp - 0x32c ]
push eax
push esi
push 0x0
push 0x0
push edx
mov eax [ ecx + 0xc ]
call eax
mov edx eax
add esp 0x4
test edx edx
jge r-xdata
call GetLastError
cmp eax 0x7a
jne r-xdata
add esp 0xfffffff8
push edi
push [ ebp - 0x328 ]
call SHGetPathFromIDListA
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
sar eax 0x10
and eax 0x1fff
cmp eax 0x7
jne r-xdata
add esp 0xfffffff4
mov eax [ ebp - 0x324 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
add esp 0xfffffff4
push 0x6f
call SetLastError
jmp r-xdata
add esp 0xfffffff4
push edi
call lstrlenA
mov ebx eax
lea esi [ ebx + 0x1 ]
add esp 0xc
cmp esi [ ebp + 0x10 ]
jbe r-xdata
cmp [ ebp - 0x110 ] 0x0
je r-xdata
add esp 0xfffffff4
push 0xd
add esp 0xfffffff4
movzx edx dx
push edx
jmp r-xdata
add esp 0xc
add esp 0xfffffffc
mov eax [ ebp + 0x10 ]
push eax
push edi
push [ ebp + 0xc ]
call lstrcpynA
add esp 0x4
add esp 0xfffffff4
push 0x7a
call SetLastError
mov ebx esi
add esp 0xc
jmp r-xdata
add esp 0xfffffff4
push 0xd
call SetLastError
add esp 0xc
jmp r-xdata
call SetLastError
add esp 0xc
xor ebx ebx
jmp r-xdata
add esp 0xfffffff8
mov eax [ ebp - 0x330 ]
mov edx [ eax ]
push [ ebp - 0x328 ]
push eax
mov eax [ edx + 0x14 ]
call eax
add esp 0xfffffffc
mov eax [ ebp - 0x330 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
add esp 0xfffffff4
lea eax [ ebp - 0x330 ]
push eax
call SHGetMalloc
add esp 0xc
test eax eax
jl r-xdata
sub_402c60
dec ebx
inc ebp
push edx
dec esi
inc ebp
dec esp
xor esi [ edx ]
add [ edi + 0x65 ] al
je r-xdata
salc
outsd
outsb
push eax
popad
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
call GetLastError
cmp eax 0x78
je r-xdata
inc edx
add [ edx + ebp + 0x40 ] ch
add [ ebx - 0x74a8033c ] al
inc ebp
or al 0x50
dec esi
popad
insd
inc ecx
add [ ecx - 0x1a76aa0a ] cl
sub esp 0xc
push edi
push esi
push ebx
mov edi [ ebp + 0x10 ]
add esp 0xfffffff4
push sub_402c60
call GetModuleHandleA
add esp 0xfffffff4
push r-xdata
push eax
call GetProcAddress
mov esi eax
add esp 0x18
test esi esi
je r-xdata
mov eax ebx
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
call sub_402a6c
mov ebx eax
mov [ rw-data ] sub_402a6c
add esp 0xfffffffc
push edi
mov eax [ ebp + 0xc ]
push eax
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
add esp 0xfffffffc
push edi
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call esi
sub_402d48
push ebp
mov ebp esp
mov eax 0x415c
call sub_4161a4
push edi
push esi
push ebx
add esp 0xfffffffc
push 0x1
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call strncmp
add esp 0x10
test eax eax
je r-xdata
lea esp [ ebp - 0x4168 ]
pop ebx
pop esi
pop edi
leave
retn
mov edi [ ebp + 0x8 ]
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
je r-xdata
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
push eax
push r-xdata
call sub_407210
mov edi [ ebp + 0x8 ]
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
add esp 0x10
cmp ecx 0xfffffffe
je r-xdata
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
push eax
lea ebx [ ebp - 0x2140 ]
push ebx
call strcpy
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
add esp 0x10
cmp [ ebx + ecx - 0x1 ] 0x5c
je r-xdata
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
add esp 0xfffffff8
lea eax [ ebp - 0x140 ]
mov [ ebp - 0x4148 ] eax
push eax
push ebx
call FindFirstFileA
mov [ ebp - 0x4144 ] eax
add esp 0x18
cmp eax 0xffffffff
je r-xdata
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
add esp 0x10
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x414c ] eax
mov esi eax
mov edi r-xdata
mov ecx 0x2
cld
test al 0x0
[ esi ] [ edi ]
je r-xdata
add esp 0xfffffff8
mov eax [ ebp - 0x4148 ]
push eax
mov eax [ ebp - 0x4144 ]
push eax
call FindNextFileA
add esp 0x8
test eax eax
jne r-xdata
mov esi eax
mov edi r-xdata
mov ecx 0x3
cld
test al 0x0
[ esi ] [ edi ]
je r-xdata
add esp 0xfffffff4
mov eax [ ebp - 0x4144 ]
push eax
call FindClose
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
push eax
lea ebx [ ebp - 0x4140 ]
push ebx
call strcpy
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
add esp 0x10
cmp [ ebx + ecx - 0x1 ] 0x5c
je r-xdata
add esp 0xfffffff8
mov eax [ ebp - 0x414c ]
push eax
push ebx
call strcat
add esp 0x10
test [ ebp - 0x140 ] 0x10
je r-xdata
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
add esp 0x10
add esp 0xfffffff8
push ebx
push r-xdata
call sub_407210
add esp 0xfffffff4
push ebx
call DeleteFileA
add esp 0xfffffff8
push ebx
push r-xdata
call sub_407210
add esp 0xfffffff4
push ebx
call RemoveDirectoryA
jmp r-xdata
add esp 0x1c
sub_402f2c
push ebp
mov ebp esp
mov eax 0x601c
call sub_4161a4
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
add esp 0xfffffff8
push 0x2000
lea ebx [ ebp - 0x4000 ]
push ebx
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
push ecx
push esi
push 0x0
call AreFileApisANSI
test eax eax
sete al
movzx eax al
push eax
call MultiByteToWideChar
add esp 0xfffffffc
push ebx
call _wcslwr
lea eax [ ebp - 0x6004 ]
push eax
push r-xdata
push 0x2000
lea edi [ ebp - 0x6000 ]
push edi
add esp 0xfffffff4
push ebx
call wcslen
add esp 0x10
inc eax
push eax
push ebx
push 0x0
call AreFileApisANSI
test eax eax
sete al
movzx eax al
push eax
call WideCharToMultiByte
add esp 0x10
cmp [ ebp - 0x6004 ] 0x0
jne r-xdata
lea esp [ ebp - 0x6028 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff8
push edi
push esi
call strcpy
sub_402fdc
push ebp
mov ebp esp
mov eax 0x200c
call sub_4161a4
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ esi ] 0x0
add esp 0xfffffff8
push eax
lea ebx [ ebp - 0x2000 ]
push ebx
call strcpy
add esp 0xfffffff8
push r-xdata
push ebx
call strtok
mov ebx eax
add esp 0x20
test ebx ebx
je r-xdata
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
pop edi
leave
retn
jmp r-xdata
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
jne r-xdata
add esp 0xfffffff8
push ebx
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ esi + ecx - 0x1 ]
push eax
call sub_4037e4
add esp 0xfffffff8
push r-xdata
push 0x0
call strtok
mov ebx eax
add esp 0x20
test ebx ebx
je r-xdata
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
je r-xdata
add esp 0xfffffff8
push r-xdata
push esi
call strcat
add esp 0x10
sub_4030b8
push ebp
mov ebp esp
sub esp 0x18
add esp 0xfffffff4
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x8
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call ReadFile
add esp 0xc
test eax eax
je r-xdata
add esp 0xfffffff8
call GetLastError
push eax
push r-xdata
call sub_407210
add esp 0xfffffff4
push r-xdata
call sub_40298c
cmp [ ebp - 0x4 ] 0x7
ja r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
leave
retn
sub_403130
push ebp
mov ebp esp
sub esp 0x18
add esp 0xfffffff4
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x4
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call ReadFile
add esp 0xc
test eax eax
je r-xdata
add esp 0xfffffffc
push [ ebp - 0x4 ]
call GetLastError
push eax
push r-xdata
call sub_407210
add esp 0xfffffff4
push r-xdata
call sub_40298c
cmp [ ebp - 0x4 ] 0x3
ja r-xdata
mov eax [ ebp - 0x8 ]
leave
retn
sub_40319c
push ebp
mov ebp esp
sub esp 0x18
add esp 0xfffffff4
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x2
lea eax [ ebp - 0x6 ]
push eax
push [ ebp + 0x8 ]
call ReadFile
add esp 0xc
test eax eax
je r-xdata
add esp 0xfffffff8
call GetLastError
push eax
push r-xdata
call sub_407210
add esp 0xfffffff4
push r-xdata
call sub_40298c
cmp [ ebp - 0x4 ] 0x1
ja r-xdata
movsx eax [ ebp - 0x6 ]
leave
retn
sub_403208
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
push ebx
call sub_403130
mov esi eax
add esp 0xfffffff4
lea eax [ esi + 0x1 ]
push eax
call sub_415f94
mov edi eax
mov [ esi + edi ] 0x0
add esp 0x20
add esp 0xfffffff4
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push esi
push edi
push ebx
call ReadFile
add esp 0xc
test eax eax
je r-xdata
add esp 0xfffffff4
push r-xdata
call sub_40298c
cmp [ ebp - 0x4 ] esi
jae r-xdata
mov eax edi
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
sub_403284
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call sub_403130
mov esi eax
add esp 0xfffffff4
shr eax 0x1f
lea ebx [ eax + esi ]
sar ebx 0x1
lea eax [ ebx * 2 + 0x2 ]
push eax
call sub_415f94
mov edi eax
mov [ edi + ebx * 2 ] 0x0
add esp 0x20
add esp 0xfffffff4
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push esi
push edi
mov eax [ ebp + 0x8 ]
push eax
call ReadFile
add esp 0xc
test eax eax
je r-xdata
add esp 0xfffffff4
push r-xdata
call sub_40298c
cmp [ ebp - 0x4 ] esi
jae r-xdata
mov eax edi
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
sub_403304
push ebp
mov ebp esp
sub esp 0x10
push edi
push esi
mov edx [ ebp + 0x8 ]
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
cmp eax 0x1
jbe r-xdata
add esp 0xfffffff8
push 0x0
push edx
call sub_40337c
lea esi [ edx + 0x1 ]
mov eax esi
mov edi r-xdata
mov ecx 0x3
cld
test al 0x0
[ esi ] [ edi ]
je r-xdata
mov al 0x1
jmp r-xdata
mov esi eax
mov edi r-xdata
mov ecx 0x4
cld
test al 0x0
[ esi ] [ edi ]
je r-xdata
lea esp [ ebp - 0x18 ]
pop esi
pop edi
leave
retn
mov esi eax
mov edi r-xdata
mov ecx 0x6
cld
test al 0x0
[ esi ] [ edi ]
jne r-xdata
sub_40337c
push ebp
mov ebp esp
sub esp 0x154
push ebx
mov ebx [ ebp + 0xc ]
add esp 0xfffffff8
lea eax [ ebp - 0x140 ]
push eax
push [ ebp + 0x8 ]
call FindFirstFileA
mov edx eax
add esp 0x8
cmp edx 0xffffffff
je r-xdata
mov al 0x0
test ebx ebx
je r-xdata
add esp 0xfffffff4
push edx
call FindClose
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x12c ]
mov [ ebx ] eax
mov eax [ ebp - 0x128 ]
mov [ ebx + 0x4 ] eax
mov ebx [ ebp - 0x158 ]
leave
retn
sub_4033d8
push ebp
mov ebp esp
sub esp 0x20
push edi
push ebx
mov ebx [ ebp + 0x8 ]
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
cmp eax 0x2
jbe r-xdata
mov al 0x1
jmp r-xdata
cmp [ ebx ] 0x22
jne r-xdata
lea esp [ ebp - 0x28 ]
pop ebx
pop edi
leave
retn
mov [ ebp - 0x2 ] 0x0
add esp 0xfffffffc
push 0x2
push r-xdata
lea eax [ ebx + 0x1 ]
push eax
call strncmp
add esp 0x10
test eax eax
je r-xdata
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
cmp eax 0x3
ja r-xdata
mov al [ ebp - 0x2 ]
add esp 0xfffffffc
push 0x2
push r-xdata
push ebx
call strncmp
test eax eax
setne [ ebp - 0x2 ]
mov [ ebp - 0x1 ] 0x0
add esp 0xfffffffc
push 0x2
push r-xdata
lea eax [ ebx + 0x2 ]
push eax
call strncmp
add esp 0x10
test eax eax
je r-xdata
mov al [ ebp - 0x1 ]
jmp r-xdata
add esp 0xfffffffc
push 0x2
push r-xdata
lea eax [ ebx + 0x1 ]
push eax
call strncmp
test eax eax
setne [ ebp - 0x1 ]
sub_4034b8
push ebp
mov ebp esp
mov eax 0xe01c
call sub_4161a4
push edi
push esi
push ebx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
lea esp [ ebp - 0xe028 ]
pop ebx
pop esi
pop edi
leave
retn
xor edi edi
add esp 0xfffffff4
push r-xdata
call LoadLibraryA
add esp 0xc
test eax eax
je r-xdata
call sub_409adc
test al al
je r-xdata
add esp 0xfffffff8
push r-xdata
push eax
call GetProcAddress
mov edi eax
add esp 0x8
add esp 0xfffffffc
push 0x2000
push rw-data
push 0x0
call GetModuleFileNameA
test edi edi
je r-xdata
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x4000 ]
push ebx
push 0x0
call GetModuleFileNameW
push 0x2000
lea esi [ ebp - 0x8000 ]
push esi
push ebx
call edi
mov [ ebp - 0xe004 ] 0x0
add esp 0xfffffff4
lea eax [ ebp - 0xe004 ]
mov [ ebp - 0xe008 ] eax
push eax
push r-xdata
push 0x2000
push rw-data
add esp 0xfffffff8
push esi
call wcslen
add esp 0xc
inc eax
push eax
push esi
push 0x0
add esp 0xfffffff4
call AreFileApisANSI
add esp 0xc
test eax eax
sete al
movzx eax al
push eax
call WideCharToMultiByte
add esp 0x10
cmp [ ebp - 0xe004 ] 0x0
jne r-xdata
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0xc000 ]
push ebx
push esi
call GetShortPathNameW
mov [ ebp - 0xe004 ] 0x0
add esp 0xfffffff4
mov eax [ ebp - 0xe008 ]
push eax
push r-xdata
push 0x2000
push rw-data
add esp 0xfffffff8
push ebx
call wcslen
add esp 0xc
inc eax
push eax
push ebx
push 0x0
add esp 0xfffffff4
call AreFileApisANSI
add esp 0xc
test eax eax
sete al
movzx eax al
push eax
call WideCharToMultiByte
add esp 0x10
cmp [ ebp - 0xe004 ] 0x0
jne r-xdata
mov edx rw-data
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
cmp eax 0x3
jbe r-xdata
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0xe000 ]
push ebx
push 0x0
call GetModuleFileNameA
push 0x2000
push rw-data
push ebx
call GetShortPathNameA
jmp r-xdata
mov edx rw-data
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
cmp eax 0x3
jbe r-xdata
add esp 0xfffffff8
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx + rw-data ]
push eax
push r-xdata
call _stricmp
add esp 0x10
test eax eax
je r-xdata
add esp 0x4
add esp 0xfffffff8
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx + rw-data ]
push eax
push r-xdata
call _stricmp
add esp 0x10
test eax eax
je r-xdata
add esp 0xfffffff4
push rw-data
call sub_4036f8
mov [ rw-data ] 0x1
sub_4036f8
push ebp
mov ebp esp
mov eax 0x601c
call sub_4161a4
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
add esp 0xfffffff8
push 0x2000
lea ebx [ ebp - 0x4000 ]
push ebx
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
push ecx
push esi
push 0x0
call AreFileApisANSI
test eax eax
sete al
movzx eax al
push eax
call MultiByteToWideChar
add esp 0xfffffffc
push ebx
call wcslen
mov edi eax
xor ebx ebx
mov ecx 0x1
add esp 0x10
cmp ecx edi
jge r-xdata
lea edx [ ebp - 0x4000 ]
mov [ edx + ebx * 2 + 0x2 ] 0x0
lea eax [ ebp - 0x6004 ]
push eax
push r-xdata
push 0x2000
lea ebx [ ebp - 0x6000 ]
push ebx
lea eax [ edi + 0x1 ]
push eax
push edx
push 0x0
call AreFileApisANSI
test eax eax
sete al
movzx eax al
push eax
call WideCharToMultiByte
cmp [ ebp - 0x6004 ] 0x0
jne r-xdata
test ebx ebx
je r-xdata
lea esp [ ebp - 0x6028 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff8
push ebx
push esi
call strcpy
inc ebx
lea eax [ ebp - 0x4000 ]
cmp [ eax + ebx * 2 ] 0x5c
jne r-xdata
cmp [ eax + ecx * 2 ] 0x5c
je r-xdata
lea edx [ ebp - 0x4000 ]
movzx eax [ edx + ecx * 2 ]
mov [ edx + ebx * 2 ] ax
inc ecx
cmp ecx edi
jl r-xdata
sub_4037e4
push ebp
mov ebp esp
sub esp 0x20
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov [ ebx ] 0x0
add esp 0xfffffff4
push esi
call sub_4033d8
add esp 0x10
test al al
je r-xdata
add esp 0xfffffff8
push esi
push ebx
call strcat
add esp 0xfffffff4
push ebx
call sub_4036f8
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff8
push rw-data
push ebx
call strcpy
add esp 0x10
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push 0x2000
call sub_4034b8
push eax
call GetFullPathNameA
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov [ rw-data ] 0x1
sub_403860
push ebp
mov ebp esp
mov eax 0x2020
call sub_4161a4
push esi
push ebx
mov esi [ ebp + 0x8 ]
add esp 0xfffffff8
push [ ebp + 0xc ]
lea ebx [ ebp - 0x2000 ]
push ebx
call sub_4037e4
lea eax [ ebp - 0x2004 ]
push eax
push esi
push 0x2000
push ebx
call GetFullPathNameA
add esp 0x10
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
add esp 0xfffffff4
push esi
call sub_4036f8
lea esp [ ebp - 0x2028 ]
pop ebx
pop esi
leave
retn
add esp 0xfffffff4
push esi
call sub_402f2c
add esp 0x10
sub_4038d0
push ebp
mov ebp esp
mov eax 0x2014
call sub_4161a4
push ebx
add esp 0xfffffffc
push [ ebp + 0x8 ]
push r-xdata
lea ebx [ ebp - 0x2000 ]
push ebx
call sprintf
add esp 0xfffffff4
push ebx
call _rmdir
add esp 0x20
add esp 0xfffffff4
push ebx
call _mkdir
add esp 0x10
test eax eax
jne r-xdata
mov al 0x0
add esp 0xfffffff4
push ebx
call sub_403304
add esp 0x10
test al al
je r-xdata
add esp 0xfffffff4
push ebx
call _rmdir
add esp 0xfffffff4
push ebx
call _rmdir
mov al 0x1
jmp r-xdata
mov ebx [ ebp - 0x2018 ]
leave
retn
sub_4039f4
push ebp
mov ebp esp
mov eax 0x400c
call sub_4161a4
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
add esp 0xfffffff8
push esi
push 0x2000
call GetTempPathA
mov ebx eax
add esp 0xfffffff4
add esp 0xfffffff8
call GetLastError
push eax
push ebx
push r-xdata
call sub_407210
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
add esp 0x28
cmp ecx 0xfffffffe
jne r-xdata
test ebx ebx
jle r-xdata
add esp 0xfffffffc
push 0x2000
push esi
push r-xdata
call GetEnvironmentVariableA
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx + 0x1fff ]
push eax
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ esi + ecx - 0x1 ]
push eax
push r-xdata
call GetEnvironmentVariableA
add esp 0xfffffffc
push esi
push r-xdata
call sub_407210
add esp 0x10
jmp r-xdata
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x2000 ]
push ebx
push esi
mov eax [ rw-data ]
call eax
add esp 0xfffffffc
push 0x3f
push ebx
call strchr
add esp 0x10
test eax eax
je r-xdata
add esp 0xfffffff8
add esp 0xfffffff4
push esi
call _mkdir
push eax
push r-xdata
call sub_407210
add esp 0x20
lea esp [ ebp - 0x4018 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff8
push 0x2000
lea ebx [ ebp - 0x4000 ]
push ebx
call GetWindowsDirectoryA
add esp 0xfffffff4
push ebx
push r-xdata
push esi
call sprintf
add esp 0x20
add esp 0xfffffff4
push esi
call sub_4038d0
add esp 0x10
test al al
jne r-xdata
mov eax [ r-xdata ]
mov [ esi ] eax
mov eax [ r-xdata ]
mov [ esi + 0x4 ] eax
add esp 0xfffffff4
push esi
call sub_4038d0
add esp 0x10
test al al
jne r-xdata
mov edi r-xdata
mov eax [ r-xdata ]
mov [ esi ] eax
movzx eax [ edi + 0x4 ]
mov [ esi + 0x4 ] ax
mov al [ edi + 0x6 ]
mov [ esi + 0x6 ] al
add esp 0xfffffff4
push esi
call sub_4038d0
add esp 0x10
test al al
jne r-xdata
add esp 0xfffffff8
push ebx
push esi
call strcpy
add esp 0xfffffff4
push esi
call sub_4038d0
add esp 0x20
test al al
jne r-xdata
mov eax [ r-xdata ]
mov [ esi ] eax
add esp 0xfffffff4
push esi
call sub_4038d0
add esp 0x10
test al al
je r-xdata
add esp 0xfffffff8
push 0x0
push 0x3f7
call sub_4029e0
mov eax [ r-xdata ]
mov [ esi ] eax
movzx eax [ edi + 0x4 ]
mov [ esi + 0x4 ] ax
mov al [ edi + 0x6 ]
mov [ esi + 0x6 ] al
add esp 0xfffffff4
push esi
call _mkdir
add esp 0xfffffff4
push esi
call sub_4038d0
add esp 0x20
test al al
jne r-xdata
sub_403c40
push ebp
mov ebp esp
mov eax 0x2010
call sub_4161a4
push esi
push ebx
mov esi [ ebp + 0x8 ]
add esp 0xfffffff4
lea ebx [ ebp - 0x2000 ]
push ebx
call sub_4039f4
add esp 0xfffffff8
push ebx
push r-xdata
call sub_407210
add esp 0x20
push esi
push 0x0
push r-xdata
push ebx
call GetTempFileNameA
test eax eax
jne r-xdata
add esp 0xfffffff8
push esi
push r-xdata
call sub_407210
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
leave
retn
add esp 0xfffffff8
call GetLastError
push eax
push r-xdata
call sub_407210
add esp 0xfffffff4
add esp 0xfffffff4
push 0x0
call time
push eax
call srand
add esp 0x30
call rand
push eax
push ebx
push r-xdata
push esi
call sprintf
add esp 0x10
sub_403ce8
push ebp
mov ebp esp
mov eax 0x200c
call sub_4161a4
push edi
push esi
push ebx
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
add esp 0xfffffff4
lea ebx [ ebp - 0x2000 ]
push ebx
call sub_4039f4
push esi
push ebx
push r-xdata
push edi
call sprintf
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
pop edi
leave
retn
sub_403d28
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0xc0000000
push [ ebp + 0x8 ]
call CreateFileA
add esp 0x4
cmp eax 0xffffffff
je r-xdata
mov al 0x0
add esp 0xfffffff4
push eax
call CloseHandle
mov al 0x1
jmp r-xdata
leave
retn
sub_403d68
push ebp
mov ebp esp
mov eax 0x21cc
call sub_4161a4
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
add esp 0xfffffff8
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x2140 ]
push ebx
call strcpy
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
add esp 0x20
cmp [ esi ] 0x2e
je r-xdata
add esp 0xfffffff8
push esi
push ebx
call strcat
add esp 0xfffffff8
lea eax [ ebp - 0x140 ]
mov [ ebp - 0x21b0 ] eax
push eax
push ebx
call FindFirstFileA
mov esi eax
add esp 0x18
cmp esi 0xffffffff
jne r-xdata
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
add esp 0x10
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov ebx [ rw-data ]
test ebx ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
mov [ rw-data ] eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov eax ebx
add esp 0xfffffff4
push 0x10
call sub_41c140
mov ebx eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov eax ebx
add esp 0x10
jmp r-xdata
lea esp [ ebp - 0x21d8 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ ebx ]
mov [ rw-data ] eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov edx ebx
add esp 0xfffffff4
push 0x10
call sub_41c140
mov ebx eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov edx ebx
add esp 0x10
jmp r-xdata
mov [ ebp - 0x2150 ] eax
mov [ eax ] eax
mov eax [ ebp - 0x2150 ]
mov [ eax + 0x4 ] eax
mov esi esi
mov eax [ ebp - 0x2190 ]
mov [ edx ] eax
mov eax [ ebp - 0x2190 ]
mov eax [ eax + 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x2190 ]
mov eax [ eax + 0x4 ]
mov [ eax ] edx
mov eax [ ebp - 0x2190 ]
mov [ eax + 0x4 ] edx
mov [ ebp - 0x2180 ] edx
add esp 0xfffffff8
mov edx [ ebp - 0x21b0 ]
push edx
push esi
call FindNextFileA
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi ]
mov [ edx + 0x8 ] eax
cmp edx 0xfffffff8
je r-xdata
add esp 0xfffffff4
push 0x2000
call malloc
mov edx eax
mov [ ebp - 0x21a4 ] edx
add esp 0xfffffff8
lea eax [ ebp - 0x114 ]
push eax
push edx
call strcpy
lea edi [ ebp - 0x21a4 ]
add esp 0x20
mov eax [ ebp - 0x2150 ]
mov [ ebp - 0x2190 ] eax
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov ebx [ rw-data ]
test ebx ebx
jne r-xdata
add esp 0xfffffff4
push esi
call FindClose
add esp 0xc
mov [ ebp - 0x21a8 ] 0x0
lea ecx [ ebp - 0x21a8 ]
mov eax [ ebp - 0x2150 ]
mov edx [ eax ]
cmp edx eax
je r-xdata
mov ecx [ ebp - 0x21a8 ]
mov [ ebp - 0x21b4 ] ecx
add esp 0xfffffff4
mov eax ecx
shl eax 0xd
push eax
call malloc
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
xor edi edi
add esp 0x10
mov edx [ edx ]
inc [ ecx ]
cmp edx eax
jne r-xdata
cmp [ ebp - 0x21ac ] 0x0
je r-xdata
mov edx [ edx ]
inc [ ecx ]
cmp edx eax
jne r-xdata
lea eax [ ebp - 0x2150 ]
add esp 0xfffffff4
push eax
call sub_41ec4c
mov ebx [ ebp - 0x2150 ]
add esp 0x10
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ rw-data ]
mov [ ebx ] eax
mov [ rw-data ] ebx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
mov eax [ ebp - 0x21b4 ]
mov eax [ ebp - 0x2150 ]
mov eax [ eax ]
mov [ ebp - 0x21a0 ] eax
mov ecx [ ebp + 0x10 ]
mov edx [ ecx ]
mov eax [ eax + 0x8 ]
mov [ edx + edi * 4 ] eax
mov eax [ ebp - 0x2150 ]
mov eax [ eax ]
mov [ ebp - 0x2190 ] eax
mov ebx [ eax ]
mov eax [ eax + 0x4 ]
mov [ eax ] ebx
mov [ ebx + 0x4 ] eax
mov esi [ ebp - 0x2190 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ rw-data ]
mov [ esi ] eax
mov [ rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov [ ebp - 0x2180 ] ebx
inc edi
jmp r-xdata
mov [ ebp - 0x21ac ] 0x0
lea ecx [ ebp - 0x21ac ]
mov eax [ ebp - 0x2150 ]
mov edx [ eax ]
cmp edx eax
je r-xdata
sub_40407f
outsd
jne r-xdata
mov esi esi
push ebp
mov ebp esp
sub esp 0x18
cmp [ rw-data ] 0x0
and [ edi + 0x66 ] ch
and [ ebp + 0x65 ] ch
insd
outsd
jb r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
lea edx [ ebp - 0x4 ]
add esp 0xfffffffc
mov ecx [ eax ]
push 0x0
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
test eax eax
je r-xdata
je r-xdata
add [ ebp - 0x76aaff8a ] cl
in eax 0x83
in al dx
or [ ecx - 0xf383 ] al
add [ eax ] al
jne r-xdata
leave
retn
mov eax [ ebp - 0x4 ]
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
sub_404090
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
sub_404130
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
je r-xdata
leave
retn
mov eax [ rw-data ]
add esp 0xfffffff4
mov edx [ eax ]
push eax
mov eax [ edx + 0x14 ]
call eax
sub_404170
push ebp
mov ebp esp
sub esp 0x10
push edi
push esi
mov edx [ ebp + 0x8 ]
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea esi [ edx + ecx - 0xa ]
mov edi r-xdata
mov ecx 0xa
cld
test al 0x0
[ esi ] [ edi ]
jne r-xdata
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea edi [ ecx - 0x9 ]
mov edi edx
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea edi [ ecx - 0xa ]
jmp r-xdata
add esp 0xfffffffc
push edi
push edx
push rw-data
call strncpy
mov eax rw-data
mov [ edi + eax ] 0x0
add esp 0xfffffff8
push r-xdata
push eax
call strcat
lea esp [ ebp - 0x18 ]
pop esi
pop edi
leave
retn
sub_4041f0
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
jmp r-xdata
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov esi eax
add esp 0x10
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
test eax eax
jle r-xdata
add esp 0xfffffff4
push esi
call sub_4160b0
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call fclose
mov ebx esi
cmp [ esi ] 0x20
jne r-xdata
mov dl [ esi + eax - 0x1 ]
cmp dl 0xd
je r-xdata
mov edi ebx
mov al 0x0
jmp r-xdata
nop
mov [ esi + eax - 0x1 ] 0x0
cmp dl 0xa
je r-xdata
cld
mov ecx 0xffffffff
[ edi ]
not ecx
cmp [ ebx + ecx - 0x2 ] 0x20
je r-xdata
inc ebx
cmp [ ebx ] 0x20
je r-xdata
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
mov [ ebx + ecx - 0x2 ] al
mov edi ebx
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
je r-xdata
add esp 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
push 0x2000
push esi
call fgets
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebx ] 0x23
je r-xdata
add esp 0xfffffff4
push ebx
call sub_405b40
add esp 0xfffffff4
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
call sub_404368
add esp 0x30
sub_404368
push ebp
mov ebp esp
mov eax 0x200c
call sub_4161a4
push edi
push esi
push ebx
mov edi [ ebp + 0xc ]
add esp 0xfffffffc
push 0x11
push r-xdata
push [ ebp + 0x8 ]
call strncmp
add esp 0x10
test eax eax
jne r-xdata
add esp 0xfffffffc
push 0xb
push r-xdata
push [ ebp + 0x8 ]
call strncmp
add esp 0x10
test eax eax
jne r-xdata
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
add eax 0x11
push eax
lea ebx [ ebp - 0x2000 ]
push ebx
call strcpy
add esp 0xfffffff4
push ebx
call sub_405b40
add esp 0x20
add esp 0xfffffff8
push r-xdata
push ebx
call fopen
mov esi eax
add esp 0xfffffffc
push esi
push ebx
push r-xdata
call sub_407210
add esp 0x20
add esp 0xfffffff4
mov eax [ ebp + 0x18 ]
push eax
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call sub_4041f0
jmp r-xdata
add esp 0xfffffffc
push 0xd
push r-xdata
push [ ebp + 0x8 ]
call strncmp
add esp 0x10
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xb
mov edx [ ebp + 0x10 ]
mov [ edx ] eax
jmp r-xdata
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffffc
push 0xd
push r-xdata
push [ ebp + 0x8 ]
call strncmp
add esp 0x10
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xd
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
jmp r-xdata
mov edx [ edi + 0x4 ]
cmp edx [ edi + 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xd
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
jmp r-xdata
add esp 0xfffffffc
lea eax [ ebp + 0x8 ]
push eax
push edx
push edi
call sub_41b940
test edx edx
je r-xdata
add [ edi + 0x4 ] 0x4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
sub_404500
push ebp
mov ebp esp
mov eax 0x204c
call sub_4161a4
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
test esi esi
je r-xdata
mov [ ebp - 0x202c ] 0x0
mov [ ebp - 0x2028 ] 0x0
mov [ ebp - 0x2024 ] 0x0
add esp 0xfffffff4
lea edi [ ebp - 0x2024 ]
push edi
lea esi [ ebp - 0x2028 ]
push esi
lea ebx [ ebp - 0x202c ]
push ebx
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x2034 ] eax
push eax
push [ ebp + 0x10 ]
call sub_405e24
add esp 0x20
call sub_40a554
mov [ ebp - 0x2038 ] eax
add esp 0xfffffff8
push eax
push r-xdata
call sub_407210
add esp 0xfffffff4
push edi
push esi
push ebx
mov edx [ ebp - 0x2034 ]
push edx
mov ecx [ ebp - 0x2038 ]
push ecx
call sub_4041f0
add esp 0x30
add esp 0xfffffff4
push 0xa000
call sub_415f94
mov edi eax
mov [ ebp - 0x2030 ] edi
mov esi r-xdata
cld
mov ecx 0x4
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
add esp 0x10
mov eax [ ebp - 0x2024 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
add esp 0xfffffffc
push r-xdata
push rw-data
push [ ebp - 0x2030 ]
call sub_4064b0
add esp 0xfffffffc
push r-xdata
push rw-data
push [ ebp - 0x2030 ]
call sub_4064b0
add esp 0x20
add esp 0xfffffffc
push rw-data
push r-xdata
lea ebx [ ebp - 0x2020 ]
push ebx
call sprintf
add esp 0xfffffffc
push r-xdata
push ebx
push [ ebp - 0x2030 ]
call sub_4064b0
add esp 0x20
add esp 0xfffffffc
push r-xdata
push ebx
push [ ebp - 0x2030 ]
call sub_4064b0
add esp 0xfffffff4
push [ ebp - 0x2030 ]
call sub_40a098
add esp 0x20
mov eax [ ebp - 0x202c ]
test eax eax
je r-xdata
add esp 0xfffffff8
push eax
push [ ebp - 0x2030 ]
call strcat
add esp 0xfffffff8
push r-xdata
push [ ebp - 0x2030 ]
call strcat
add esp 0x20
mov ebx esi
nop
add esp 0xfffffff4
push [ ebp - 0x2030 ]
call sub_406108
add esp 0xfffffff8
push eax
push [ ebp - 0x2030 ]
call strcat
jmp r-xdata
add esp 0xfffffffc
push eax
push edx
push ecx
call sub_41b940
add esp 0x10
test edx edx
je r-xdata
lea eax [ ebp - 0x2030 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x8 ]
je r-xdata
mov edi [ ebp - 0x2030 ]
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
mov eax [ ebp - 0x2030 ]
cmp [ eax + ecx - 0x2 ] 0x3b
je r-xdata
add esp 0x10
cmp [ ebp - 0x2028 ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
add [ ebp - 0xc ] 0x4
jmp r-xdata
mov eax [ ebx - 0x4 ]
mov [ edx ] eax
add esp 0xfffffffc
push eax
push edx
mov edx [ ebp - 0x2034 ]
push edx
call sub_41b940
add esp 0x10
test edx edx
je r-xdata
add esp 0xfffffff8
push [ ebp - 0x2028 ]
push [ ebp - 0x2030 ]
call strcat
add esp 0x10
add esp 0xfffffff8
push r-xdata
push eax
call strcat
add esp 0x10
lea ecx [ ebp - 0x10 ]
mov eax ebx
add ebx 0x4
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x8 ]
je r-xdata
test esi esi
je r-xdata
mov esi [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
sub eax esi
sar eax 0x2
je r-xdata
mov esi esi
add [ ebp - 0xc ] 0x4
jmp r-xdata
mov eax [ ebp - 0x2030 ]
mov [ edx ] eax
lea esp [ ebp - 0x2058 ]
pop ebx
pop esi
pop edi
leave
retn
shl eax 0x2
cmp eax 0x80
jbe r-xdata
add esp 0xfffffffc
mov ebx esi
shl ebx 0x2
mov eax ebx
add eax [ ebp - 0x10 ]
push [ eax ]
push esi
push r-xdata
call sub_407210
add esp 0x10
add ebx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebx ]
mov [ edx + esi * 8 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ eax + esi * 8 + 0x4 ] 0x0
inc esi
cmp esi [ edx + 0x4 ]
jl r-xdata
add esp 0xfffffffc
push 0x10
push 0x0
mov ecx [ ebp + 0x8 ]
push ecx
call memset
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10002
mov [ eax + 0xc ] 0x1
add esp 0x10
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
sub edx eax
mov eax edx
sar eax 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
add esp 0xfffffff4
shl eax 0x3
push eax
call sub_415f94
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
add esp 0xfffffff8
push [ edx + 0x4 ]
push r-xdata
call sub_407210
xor esi esi
add esp 0x20
mov ecx [ ebp + 0x8 ]
cmp esi [ ecx + 0x4 ]
jge r-xdata
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push esi
call free
jmp r-xdata
sub_404898
push ebp
mov ebp esp
sub esp 0x24
push ebx
add esp 0xfffffffc
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea ebx [ ebp - 0x10 ]
push ebx
call sub_404500
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0x20
add esp 0xfffffffc
push ebx
push rw-data
push rw-data
mov eax [ rw-data ]
call eax
test eax eax
sete al
mov ebx [ ebp - 0x28 ]
leave
retn
sub_404abf
arpl [ edi + 0x6d ] bp
das
js r-xdata
add [ eax ] eax
add bh bh
xor al 0x6a
das
jb r-xdata
nop
pop ebp
add [ eax ] eax
outsb
je r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
push eax
push ebx
push [ rw-data ]
call sub_41a8d4
insd
das
push edi
imul ebp [ esi + 0x4c ] 0x636e7561
push 0x65007265
js r-xdata
insb
popad
jne r-xdata
je r-xdata
insd
add [ gs : ebp + 0x78 ] ah
xor al 0x6a
r-xdata
arpl [ eax + 0x69 ] bp
outsb
and [ bx + si + 0x72 ] dh
outsd
jb r-xdata
rol [ ebp - 0x7cef8b40 ] 0x1
jae r-xdata
popad
outsd
arpl [ ebp + 0x73 ] sp
jae r-xdata
popad
insd
add [ ebp + 0x78 ] ah
xor al 0x6a
r-xdata
popad
popad
add [ gs : bx + si ] ch
sub [ esi ] edx
lea esi [ esi ]
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov eax [ rw-data ]
add esp 0xfffffff8
mov edx [ eax ]
push sub_404abf
push eax
mov eax [ edx + 0x18 ]
call eax
mov ebx eax
add esp 0x8
test ebx ebx
je r-xdata
call sub_415f94
mov [ ebp - 0x2004 ] eax
xor esi esi
add esp 0x20
cmp [ rw-data ] 0x0
je r-xdata
and [ fs : esi + 0x6f ] ch
je r-xdata
popad
jb r-xdata
outsd
insd
insd
jae r-xdata
insd
popad
jo r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
push r-xdata
push r-xdata
push ebx
push eax
mov eax [ edx + 0x1c4 ]
call eax
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx ] eax
push [ rw-data ]
and [ esi + 0x6f ] ch
imul ebp [ esi + 0x69 ] 0x6c616974
imul edi [ edx + 0x65 ] 0x4d564a20
outsb
arpl [ eax + 0x20 ] bp
outsd
outsb
add [ gs : ebp - 0x77 ] dl
in eax 0xb8
sbb al 0x20
r-xdata
jne r-xdata
arpl [ eax + 0x25 ] si
add [ fs : ebx + 0x6f ] ah
insd
jo r-xdata
and eax 0x70633d73
and eax 0x6f630064
inc ebx
inc esi
imul ebp [ ebp ] 0x34657865
push 0x2e
je r-xdata
outsd
jb r-xdata
add esp 0xfffffffc
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
add esp 0xfffffffc
push r-xdata
push r-xdata
push eax
call sprintf
inc esi
add esp 0x20
call sub_4161a4
push edi
push esi
mov ebp esp
mov eax 0x201c
arpl [ ecx + 0x6c ] sp
xor eax [ ebx + 0x68f4c4 ]
and [ eax ] al
add al ch
mov eax 0x8b000112
xchg ebp eax
cld
add [ fs : ebx + 0x6f ] ah
jne r-xdata
insb
and [ ebp + 0x61 ] ch
imul ebp [ esi ] 0x74736564
popad
insb
je r-xdata
push esp
imul esi [ edx ] 0x34657865
push 0x2e
jne r-xdata
dec esi
popad
insd
add [ gs : 0x3d732544 ] ch
and eax 0x78650073
xor al 0x6a
insd
popad
outsb
jne r-xdata
cmp [ rw-data ] 0x69
jne r-xdata
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
add esp 0xfffffffc
push r-xdata
push r-xdata
push eax
call sprintf
inc esi
add esp 0x20
push r-xdata
push r-xdata
push eax
call sprintf
add [ ebx - 0x20036b ] cl
dec [ ecx + 0x5c35ff02 ]
sbb [ edx ] al
je r-xdata
and [ fs : esi + 0x6f ] ch
jae r-xdata
cmp eax 0x54415000
dec eax
add [ ebp + 0x41 ] cl
dec esi
push eax
inc ecx
push ebx
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0xfffffff4
push 0x30
add [ edi + 0x56 ] dl
insb
inc ebx
outsd
jo r-xdata
jpe r-xdata
js r-xdata
js r-xdata
insb
dec edx
jb r-xdata
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
call sub_4034b8
push eax
push r-xdata
push r-xdata
mov eax [ ebp - 0x2004 ]
push [ eax + esi * 4 ]
call sprintf
inc esi
add esp 0x20
add esp 0xfffffff4
push 0x2715
call sub_4019cc
add esp 0x10
test eax eax
je r-xdata
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
add esp 0xfffffffc
push r-xdata
push r-xdata
push eax
call sprintf
inc esi
add esp 0x20
mov esi 0x1
add esp 0x20
push esi
add [ eax ] eax
and [ edx + 0x56 ] cl
dec ebp
add [ ecx + 0x75 ] ch
add [ eax ] al
add [ gs : di ] ch
inc esp
add [ edx + 0x56 ] cl
and [ edx + 0x56 ] cl
dec ebp
dec ebp
jb r-xdata
xor al 0x6a
r-xdata
js r-xdata
add [ 0x3d732544 ] ch
je r-xdata
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
push rw-data
push r-xdata
push r-xdata
push eax
call sprintf
inc esi
add esp 0x20
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
add esp 0x10
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff8
call GetCurrentProcessId
push eax
lea ebx [ ebp - 0x2000 ]
push ebx
call sub_403ce8
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
add esp 0x20
push ebx
push r-xdata
push r-xdata
push eax
call sprintf
inc esi
add esp 0x10
arpl [ ebp + 0x64 ] si
push eax
outsd
cmp eax 0x2d006425
inc esp
jne r-xdata
call sub_401924
mov eax 0xffffffff
jmp r-xdata
push esi
je r-xdata
arpl [ edi + 0x75 ] bp
insb
insb
imul esp [ edx + 0x72 ] 0x2e797261
jo r-xdata
jae r-xdata
add [ ebp + 0x78 ] ah
xor al 0x6a
push 0x65
jbe r-xdata
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] 0x0
add esp 0xfffffff8
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_404898
add esp 0x10
test al al
jne r-xdata
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
call GetConsoleOutputCP
push eax
push r-xdata
push r-xdata
mov eax [ ebp - 0x2004 ]
push [ eax + esi * 4 ]
call sprintf
inc esi
add esp 0x20
push eax
push r-xdata
push r-xdata
mov eax [ ebp - 0x2004 ]
push [ eax + esi * 4 ]
call sprintf
inc esi
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
add esp 0x20
add esp 0xfffffff8
push r-xdata
push eax
call sprintf
add esp 0xfffffffc
mov eax [ ebp - 0x2004 ]
mov ebx [ eax + esi * 4 ]
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
mov edx 0x2000
sub edx eax
push edx
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ebx + ecx - 0x1 ]
push eax
push r-xdata
call GetEnvironmentVariableA
inc esi
add esp 0xfffffff8
push r-xdata
call getenv
add esp 0x20
test eax eax
jne r-xdata
and [ ebx + 0x72 ] ah
popad
je r-xdata
push 0x61
jbe r-xdata
outsd
outsb
add [ 0x3d732544 ] ch
and eax 0x442d0064
js r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0x10
mov [ rw-data ] 0x1
add esp 0xfffffff4
mov edx [ ebp + 0x8 ]
push edx
call sub_4052fc
add esp 0x10
test al al
jne r-xdata
add esp 0xfffffff4
push r-xdata
jmp r-xdata
add [ 0x76616a44 ] ch
popad
xor al 0x6a
imul esi [ cs : ebx + 0x49 ] 0x6174736e
insb
insb
xor al 0x6a
add [ ebp + 0x78 ] ah
xor al 0x6a
insd
outsd
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
add esp 0xfffffff4
push r-xdata
call sub_4071a4
mov al 0x0
jmp r-xdata
dec eax
add [ ebp + 0x78 ] ah
xor al 0x6a
arpl [ cs : edi + 0x6e ] bp
jae r-xdata
dec esi
add esp 0xfffffff4
push r-xdata
call sub_407210
mov al 0x1
add esp 0xfffffff4
push r-xdata
call sub_407210
mov edx [ rw-data ]
add esp 0x10
add esp 0xfffffff4
mov eax [ edx ]
push edx
mov eax [ eax + 0xc ]
call eax
add esp 0xc
lea esp [ ebp - 0x2028 ]
pop ebx
pop esi
pop edi
leave
retn
sub_404c94
push ebp
mov ebp esp
mov eax 0x201c
call sub_4161a4
push edi
push esi
push ebx
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0xfffffff4
push 0x30
call sub_415f94
mov [ ebp - 0x2004 ] eax
xor esi esi
add esp 0x20
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx ] eax
push [ rw-data ]
push r-xdata
push r-xdata
push eax
call sprintf
mov esi 0x1
add esp 0x20
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
add esp 0xfffffffc
push r-xdata
push r-xdata
push eax
call sprintf
inc esi
add esp 0x20
cmp [ rw-data ] 0x69
jne r-xdata
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
add esp 0xfffffffc
push r-xdata
push r-xdata
push eax
call sprintf
inc esi
add esp 0x20
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
call sub_4034b8
push eax
push r-xdata
push r-xdata
mov eax [ ebp - 0x2004 ]
push [ eax + esi * 4 ]
call sprintf
inc esi
add esp 0x20
add esp 0xfffffff4
push 0x2715
call sub_4019cc
add esp 0x10
test eax eax
je r-xdata
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
add esp 0xfffffffc
push r-xdata
push r-xdata
push eax
call sprintf
inc esi
add esp 0x20
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
push rw-data
push r-xdata
push r-xdata
push eax
call sprintf
inc esi
add esp 0x20
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
add esp 0x10
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff8
call GetCurrentProcessId
push eax
lea ebx [ ebp - 0x2000 ]
push ebx
call sub_403ce8
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
add esp 0x20
push ebx
push r-xdata
push r-xdata
push eax
call sprintf
inc esi
add esp 0x10
call sub_401924
mov eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] 0x0
add esp 0xfffffff8
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_404898
add esp 0x10
test al al
jne r-xdata
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
call GetConsoleOutputCP
push eax
push r-xdata
push r-xdata
mov eax [ ebp - 0x2004 ]
push [ eax + esi * 4 ]
call sprintf
inc esi
add esp 0x20
push eax
push r-xdata
push r-xdata
mov eax [ ebp - 0x2004 ]
push [ eax + esi * 4 ]
call sprintf
inc esi
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edx [ ebp - 0x2004 ]
mov [ edx + esi * 4 ] eax
add esp 0x20
add esp 0xfffffff8
push r-xdata
push eax
call sprintf
add esp 0xfffffffc
mov eax [ ebp - 0x2004 ]
mov ebx [ eax + esi * 4 ]
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
mov edx 0x2000
sub edx eax
push edx
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ebx + ecx - 0x1 ]
push eax
push r-xdata
call GetEnvironmentVariableA
inc esi
add esp 0xfffffff8
push r-xdata
call getenv
add esp 0x20
test eax eax
jne r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0x10
mov [ rw-data ] 0x1
add esp 0xfffffff4
mov edx [ ebp + 0x8 ]
push edx
call sub_4052fc
add esp 0x10
test al al
jne r-xdata
add esp 0xfffffff4
push r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
add esp 0xfffffff4
push r-xdata
call sub_4071a4
mov al 0x0
jmp r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
mov al 0x1
add esp 0xfffffff4
push r-xdata
call sub_407210
mov edx [ rw-data ]
add esp 0x10
add esp 0xfffffff4
mov eax [ edx ]
push edx
mov eax [ eax + 0xc ]
call eax
add esp 0xc
lea esp [ ebp - 0x2028 ]
pop ebx
pop esi
pop edi
leave
retn
sub_40507c
push ebp
mov ebp esp
mov eax 0x4010
call sub_4161a4
push esi
push ebx
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x2000 ]
push ebx
push 0x2713
call sub_401aa8
add esp 0xfffffffc
add esp 0xfffffffe
push 0x1
push ebx
lea ebx [ ebp - 0x4000 ]
push ebx
call sub_403860
add esp 0x20
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
add esp 0xfffffff4
push ebx
call sub_403304
add esp 0x20
test al al
je r-xdata
mov al 0x1
mov eax [ rw-data ]
add esp 0xfffffff8
mov edx [ eax ]
push r-xdata
push eax
mov eax [ edx + 0x18 ]
call eax
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
push r-xdata
push r-xdata
push esi
push eax
mov eax [ edx + 0x1c4 ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
add esp 0xfffffff8
push r-xdata
push 0x3f1
call sub_4029e0
add esp 0xfffffffc
push ebx
push esi
push [ rw-data ]
call sub_41a8b0
mov bl al
mov edx [ rw-data ]
add esp 0x10
add esp 0xfffffff4
mov eax [ edx ]
push edx
mov eax [ eax + 0x3c ]
call eax
add esp 0xc
test eax eax
je r-xdata
add esp 0xfffffff8
push r-xdata
push 0x3f1
call sub_4029e0
test bl bl
setne al
jmp r-xdata
mov eax [ rw-data ]
add esp 0xfffffff4
mov edx [ eax ]
push eax
mov eax [ edx + 0x40 ]
call eax
mov al 0x0
jmp r-xdata
lea esp [ ebp - 0x4018 ]
pop ebx
pop esi
leave
retn
sub_4052fc
push ebp
mov ebp esp
mov eax 0xa04c
call sub_4161a4
push edi
push esi
push ebx
cmp [ rw-data ] 0x69
jne r-xdata
add esp 0xfffffff4
lea ebx [ ebp - 0x2000 ]
push ebx
call sub_40a040
add esp 0xfffffff4
push ebx
call sub_4065cc
add esp 0x20
add esp 0xfffffff8
push ebx
push r-xdata
call sub_407210
mov edx [ rw-data ]
add esp 0x10
add esp 0xfffffff8
mov eax [ edx ]
push ebx
push edx
mov eax [ eax + 0x18 ]
call eax
mov [ ebp - 0xa028 ] eax
add esp 0x8
test eax eax
jne r-xdata
call sub_40507c
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
push r-xdata
push r-xdata
mov ecx [ ebp - 0xa028 ]
push ecx
push eax
mov eax [ edx + 0x1c4 ]
call eax
mov [ ebp - 0xa02c ] eax
test eax eax
jne r-xdata
add esp 0xfffffff4
push r-xdata
call sub_4071a4
add esp 0xfffffff8
push 0x0
push 0x3f2
jmp r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
jmp r-xdata
mov [ ebp - 0x2010 ] 0x0
mov [ ebp - 0x200c ] 0x0
mov [ ebp - 0x2008 ] 0x0
add esp 0xfffffff4
lea eax [ ebp - 0x2010 ]
mov [ ebp - 0xa030 ] eax
push eax
call sub_40a164
add esp 0x10
mov edx [ ebp + 0x8 ]
mov ecx [ edx ]
mov eax [ edx + 0x4 ]
sub eax ecx
sar eax 0x2
je r-xdata
add esp 0xfffffff4
push r-xdata
call sub_4071a4
add esp 0xfffffff8
push 0x0
push 0x3f3
call sub_4029e0
mov al 0x1
add esp 0xfffffffc
push 0x2000
lea esi [ ebp - 0x4020 ]
push esi
push 0x7c
call sub_401aa8
add esp 0xfffffff4
push esi
call sub_405b40
add esp 0x20
add esp 0xfffffff8
push 0x2000
lea ebx [ ebp - 0x8020 ]
push ebx
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
push ecx
push esi
push 0x0
push 0x0
call MultiByteToWideChar
mov edx [ ebp - 0xa030 ]
push edx
push ebx
call sub_409dd0
mov ebx 0x1
add esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
sub edx eax
mov eax edx
jmp r-xdata
mov edx [ ebp - 0x200c ]
cmp edx [ ebp - 0x2008 ]
je r-xdata
sar eax 0x2
cmp ebx eax
jb r-xdata
add esp 0xfffffffc
push ecx
push edx
mov ecx [ ebp - 0xa030 ]
push ecx
call sub_41b75c
add esp 0x10
test edx edx
je r-xdata
add esp 0xfffffff4
push 0x7d
call sub_4019cc
add esp 0x10
test eax eax
je r-xdata
add esp 0xfffffff8
mov eax [ ebp - 0x2010 ]
mov edx [ ebp - 0x200c ]
sub edx eax
mov eax edx
sar eax 0x2
push eax
push r-xdata
call sub_407210
add esp 0x10
mov eax [ ebp - 0x2010 ]
mov ebx [ ebp - 0x200c ]
sub ebx eax
sar ebx 0x2
mov eax [ rw-data ]
add esp 0xfffffff8
mov edx [ eax ]
push r-xdata
push eax
mov eax [ edx + 0x18 ]
call eax
mov ecx eax
add esp 0x8
mov eax [ rw-data ]
mov edx [ eax ]
push 0x0
push ecx
push ebx
push eax
mov eax [ edx + 0x2b0 ]
call eax
mov [ ebp - 0xa034 ] eax
test eax eax
jne r-xdata
add [ ebp - 0x200c ] 0x4
jmp r-xdata
mov eax [ ecx ]
mov [ edx ] eax
mov eax ebx
shl eax 0x2
mov edx [ ebp + 0x8 ]
add eax [ edx ]
mov edx [ ebp - 0x200c ]
cmp edx [ ebp - 0x2008 ]
je r-xdata
add esp 0xfffffffc
push 0x2
push r-xdata
mov eax ebx
shl eax 0x2
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
push [ eax ]
call wcsncmp
add esp 0x10
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp - 0x2010 ]
mov ecx [ ebp - 0x200c ]
sub ecx eax
mov eax ecx
jmp r-xdata
add esp 0xfffffffc
push 0x1a5
push r-xdata
push r-xdata
call _assert
add esp 0xfffffffc
push eax
push edx
mov ecx [ ebp - 0xa030 ]
push ecx
call sub_41b75c
add esp 0x10
test edx edx
je r-xdata
inc ebx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
sub ecx eax
mov eax ecx
sar eax 0x2
cmp edi eax
jb r-xdata
add [ ebp - 0x200c ] 0x4
jmp r-xdata
mov eax [ eax ]
mov [ edx ] eax
lea eax [ ebp - 0xa024 ]
push eax
push r-xdata
push 0x2000
lea esi [ ebp - 0xa020 ]
push esi
add esp 0xfffffff4
mov ebx edi
shl ebx 0x2
mov eax ebx
add eax [ ebp - 0x2010 ]
push [ eax ]
call wcslen
add esp 0x10
inc eax
push eax
mov eax ebx
add eax [ ebp - 0x2010 ]
push [ eax ]
push 0x0
call AreFileApisANSI
test eax eax
sete al
movzx eax al
push eax
call WideCharToMultiByte
add esp 0xfffffffc
push esi
push edi
push r-xdata
call sub_407210
add esp 0x10
add ebx [ ebp - 0x2010 ]
add esp 0xfffffff4
push [ ebx ]
call wcslen
mov ecx eax
mov eax [ rw-data ]
add esp 0x10
add esp 0xfffffffc
mov edx [ eax ]
push ecx
push [ ebx ]
push eax
mov eax [ edx + 0x28c ]
call eax
mov ecx eax
add esp 0x4
test ecx ecx
jne r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
mov ecx [ ebp - 0xa034 ]
push ecx
mov eax [ ebp - 0xa02c ]
push eax
mov edx [ ebp - 0xa028 ]
push edx
push [ rw-data ]
call sub_41a8d4
add esp 0x20
add esp 0xfffffff4
push r-xdata
call sub_407210
mov edx [ rw-data ]
add esp 0x10
add esp 0xfffffff4
mov eax [ edx ]
push edx
mov eax [ eax + 0x3c ]
call eax
add esp 0xc
test eax eax
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
push ecx
push edi
mov ecx [ ebp - 0xa034 ]
push ecx
push eax
mov eax [ edx + 0x2b8 ]
call eax
inc edi
mov eax [ ebp - 0x2010 ]
mov edx [ ebp - 0x200c ]
sub edx eax
mov eax edx
add esp 0xfffffffc
push 0x1ad
push r-xdata
push r-xdata
call _assert
mov esi [ ebp - 0x2010 ]
mov eax [ ebp - 0x2008 ]
sub eax esi
sar eax 0x2
je r-xdata
add esp 0xfffffff4
push r-xdata
call sub_4071a4
mov edx [ rw-data ]
add esp 0x10
add esp 0xfffffff4
mov eax [ edx ]
push edx
mov eax [ eax + 0x40 ]
call eax
add esp 0xc
mov esi [ ebp - 0x2010 ]
mov eax [ ebp - 0x2008 ]
sub eax esi
sar eax 0x2
je r-xdata
shl eax 0x2
cmp eax 0x80
jbe r-xdata
mov al 0x0
jmp r-xdata
shl eax 0x2
cmp eax 0x80
jbe r-xdata
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push esi
call free
jmp r-xdata
lea esp [ ebp - 0xa058 ]
pop ebx
pop esi
pop edi
leave
retn
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
jmp r-xdata
add esp 0xfffffff4
push esi
call free
jmp r-xdata
sub_40584c
push ebp
mov ebp esp
mov eax 0x200c
call sub_4161a4
push edi
push esi
push ebx
add esp 0xfffffff8
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
jmp r-xdata
call strstr
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
add esp 0xfffffff8
mov edi [ ebp + 0xc ]
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ esi + ecx - 0x1 ]
push eax
lea ebx [ ebp - 0x2000 ]
push ebx
call strcpy
add esp 0xfffffff8
mov eax [ ebp + 0x10 ]
push eax
push esi
call strcpy
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea esi [ esi + ecx - 0x1 ]
add esp 0x20
add esp 0xfffffff8
push ebx
push esi
call strcpy
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push r-xdata
call sub_407210
add esp 0x20
add esp 0xfffffff8
mov eax [ ebp + 0xc ]
push eax
push esi
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
pop edi
leave
retn
sub_405b40
push ebp
mov ebp esp
mov eax 0x601c
call sub_4161a4
push edi
push esi
push ebx
add esp 0xfffffff8
push r-xdata
lea ebx [ ebp - 0x2000 ]
push ebx
call sub_4037e4
add esp 0xfffffffc
push ebx
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0x20
add esp 0xfffffffc
push ebx
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0xfffffffc
push rw-data
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0x20
add esp 0xfffffffc
push rw-data
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0xfffffffc
push r-xdata
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0x20
add esp 0xfffffffc
push r-xdata
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0xfffffffc
push rw-data
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0x20
add esp 0xfffffffc
push rw-data
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0xfffffffc
push ebx
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0x20
add esp 0xfffffffc
push ebx
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0xfffffffc
push rw-data
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0x20
add esp 0xfffffffc
push rw-data
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0xfffffffc
push r-xdata
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0x20
add esp 0xfffffffc
push r-xdata
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0xfffffffc
push rw-data
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0x20
add esp 0xfffffffc
push rw-data
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0xfffffffc
push ebx
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0x20
add esp 0xfffffffc
push rw-data
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0xfffffffc
push r-xdata
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0x20
add esp 0xfffffffc
push rw-data
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
call GetEnvironmentStrings
mov [ ebp - 0x6004 ] eax
add esp 0x10
test eax eax
je r-xdata
add esp 0xfffffff4
mov eax [ ebp - 0x6004 ]
push eax
call FreeEnvironmentStringsA
lea esp [ ebp - 0x6028 ]
pop ebx
pop esi
pop edi
leave
retn
mov [ ebp - 0x6008 ] eax
cmp [ eax ] 0x0
je r-xdata
nop
mov edi [ ebp - 0x6008 ]
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
add [ ebp - 0x6008 ] ecx
mov eax [ ebp - 0x6008 ]
cmp [ eax ] 0x0
jne r-xdata
mov [ esi ] 0x0
add esp 0xfffffffc
push ebx
push r-xdata
lea ebx [ ebp - 0x6000 ]
push ebx
call sprintf
add esp 0xfffffffc
inc esi
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0x20
add esp 0xfffffff4
push ebx
call _strupr
add esp 0xfffffffc
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
call sub_40584c
add esp 0x20
add esp 0xfffffff8
mov eax [ ebp - 0x6008 ]
push eax
lea ebx [ ebp - 0x4000 ]
push ebx
call strcpy
add esp 0xfffffff8
push 0x3d
push ebx
call strchr
mov esi eax
add esp 0x20
test esi esi
je r-xdata
sub_405e24
push ebp
mov ebp esp
mov eax 0x204c
call sub_4161a4
push edi
push esi
push ebx
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x2000 ]
push ebx
push 0x7b
call sub_401aa8
add esp 0xfffffff4
push ebx
call sub_405b40
add esp 0x20
mov [ ebp - 0x2010 ] 0x0
mov [ ebp - 0x200c ] 0x0
mov [ ebp - 0x2008 ] 0x0
add esp 0xfffffff8
lea eax [ ebp - 0x2010 ]
push eax
push ebx
call sub_409c3c
add esp 0xfffffff4
push r-xdata
call sub_407210
xor ebx ebx
add esp 0x20
jmp r-xdata
mov eax [ ebp - 0x2010 ]
mov edx [ ebp - 0x200c ]
sub edx eax
mov eax edx
sar eax 0x2
cmp ebx eax
jb r-xdata
mov edx [ ebp - 0x2010 ]
mov [ ebp - 0x2034 ] ebx
shl [ ebp - 0x2034 ] 0x2
mov ecx [ ebp - 0x2034 ]
mov ecx [ ecx + edx ]
mov [ ebp - 0x2024 ] ecx
mov eax ecx
mov edi r-xdata
mov ecx 0x11
mov esi eax
cld
test al 0x0
[ esi ] [ edi ]
jne r-xdata
add esp 0xfffffff4
push 0x7d
call sub_4019cc
add esp 0x10
test eax eax
je r-xdata
add esp 0xfffffff4
mov ecx [ ebp + 0x18 ]
push ecx
mov esi [ ebp + 0x14 ]
push esi
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
mov ecx [ ebp - 0x2010 ]
add [ ebp - 0x2034 ] ecx
mov esi [ ebp - 0x2034 ]
push [ esi ]
call sub_404368
add esp 0x20
mov eax [ ebp - 0x200c ]
sub eax edx
sar eax 0x2
dec eax
cmp ebx eax
jae r-xdata
mov esi [ ebp - 0x2010 ]
mov eax [ ebp - 0x2008 ]
sub eax esi
sar eax 0x2
je r-xdata
xor edi edi
jmp r-xdata
add esp 0xfffffff4
mov edi [ ebp - 0x2024 ]
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
mov [ ebp - 0x2038 ] ecx
inc ebx
mov [ ebp - 0x2028 ] ebx
shl ebx 0x2
mov edi [ ebx + edx ]
cld
mov ecx 0xffffffff
[ edi ]
not ecx
mov esi [ ebp - 0x2038 ]
lea eax [ esi + ecx ]
push eax
call sub_415f94
mov edi eax
add esp 0xfffffff8
add esp 0x10
mov eax [ ebp - 0x2010 ]
add [ ebp - 0x2034 ] eax
mov edx [ ebp - 0x2034 ]
push [ edx ]
push edi
call strcpy
add esp 0xfffffff8
push r-xdata
push edi
call strcat
add esp 0x20
add esp 0xfffffff8
add ebx [ ebp - 0x2010 ]
push [ ebx ]
push edi
call strcat
add esp 0xfffffff4
mov ecx [ ebp + 0x18 ]
push ecx
mov esi [ ebp + 0x14 ]
push esi
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
push edi
call sub_404368
mov ebx [ ebp - 0x2028 ]
add esp 0x30
jmp r-xdata
lea esp [ ebp - 0x2058 ]
pop ebx
pop esi
pop edi
leave
retn
shl eax 0x2
cmp eax 0x80
jbe r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
sub esi eax
mov eax esi
sar eax 0x2
cmp edi eax
jb r-xdata
inc ebx
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push esi
call free
jmp r-xdata
add esp 0xfffffffc
push 0x2
push r-xdata
mov ebx edi
shl ebx 0x2
mov eax ebx
mov edx [ ebp + 0x8 ]
add eax [ edx ]
push [ eax ]
call wcsncmp
add esp 0x10
test eax eax
jne r-xdata
inc edi
add esp 0xfffffff4
add esp 0xfffffff4
mov eax ebx
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
push [ eax ]
call wcslen
push eax
call sub_415f94
mov esi eax
add esp 0x20
add esp 0xfffffffc
mov eax [ ebp + 0x8 ]
add ebx [ eax ]
mov eax [ ebx ]
add eax 0x4
push eax
push r-xdata
push esi
call sprintf
add esp 0xfffffff4
mov edx [ ebp + 0x18 ]
push edx
mov ecx [ ebp + 0x14 ]
push ecx
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
push esi
call sub_404368
add esp 0x30
sub_406108
push ebp
mov ebp esp
mov eax 0x803c
call sub_4161a4
push edi
push esi
push ebx
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x4000 ]
push ebx
push 0x79
call sub_401aa8
add esp 0xfffffff8
push ebx
push r-xdata
call sub_407210
add esp 0x20
mov [ ebp - 0x4010 ] 0x0
mov [ ebp - 0x400c ] 0x0
mov [ ebp - 0x4008 ] 0x0
add esp 0xfffffff8
push r-xdata
push ebx
jmp r-xdata
call strtok
mov ebx eax
add esp 0x10
test ebx ebx
je r-xdata
mov [ ebp - 0x8028 ] 0x0
jmp r-xdata
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
jne r-xdata
mov eax [ ebp - 0x4010 ]
mov edx [ ebp - 0x400c ]
sub edx eax
mov eax edx
sar eax 0x2
cmp [ ebp - 0x8028 ] eax
jb r-xdata
add esp 0xfffffff4
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
push ecx
call sub_415f94
mov [ ebp - 0x8024 ] eax
add esp 0xfffffff8
push ebx
push eax
call strcpy
lea ecx [ ebp - 0x4010 ]
lea eax [ ebp - 0x8024 ]
add esp 0x20
mov edx [ ebp - 0x400c ]
cmp edx [ ebp - 0x4008 ]
je r-xdata
mov eax [ ebp - 0x8028 ]
shl eax 0x2
add eax [ ebp - 0x4010 ]
mov esi [ eax ]
add esp 0xfffffff8
lea eax [ esi + 0x2 ]
push eax
lea edi [ ebp - 0x6020 ]
push edi
call strcpy
add esp 0xfffffff4
push edi
call sub_405b40
add esp 0x20
cmp [ esi + 0x1 ] 0x31
sete [ ebp - 0x8029 ]
mov al [ esi ]
cmp al 0x44
je r-xdata
mov edi [ ebp - 0x4010 ]
mov eax [ ebp - 0x4008 ]
sub eax edi
sar eax 0x2
je r-xdata
add esp 0xfffffffc
push eax
push edx
push ecx
call sub_41b940
add esp 0x10
test edx edx
je r-xdata
add esp 0xfffffff8
push edi
lea ebx [ ebp - 0x8020 ]
push ebx
call sub_402fdc
add esp 0xfffffff4
push ebx
call sub_403304
mov [ ebp - 0x802a ] al
add esp 0x20
add esp 0xfffffff8
push ebx
mov eax [ ebp + 0x8 ]
push eax
call strcat
add esp 0xfffffff8
push r-xdata
mov edx [ ebp + 0x8 ]
push edx
call strcat
add esp 0x20
jmp r-xdata
jg r-xdata
lea esp [ ebp - 0x8048 ]
pop ebx
pop esi
pop edi
leave
retn
shl eax 0x2
cmp eax 0x80
jbe r-xdata
add [ ebp - 0x400c ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8024 ]
mov [ edx ] eax
cmp [ ebp - 0x8029 ] 0x0
je r-xdata
cmp al 0x45
je r-xdata
cmp al 0x41
je r-xdata
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ edi ] eax
mov [ ebx + rw-data ] edi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push edi
call free
jmp r-xdata
add esp 0xfffffff8
push r-xdata
push 0x0
add esp 0xfffffff4
push esi
call sub_4160b0
add esp 0x10
inc [ ebp - 0x8028 ]
cmp [ ebp - 0x802a ] 0x0
jne r-xdata
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x8020 ]
push ebx
push edi
call GetEnvironmentVariableA
add esp 0x4
test eax eax
je r-xdata
cmp al 0x53
jne r-xdata
jmp r-xdata
add esp 0xfffffff8
lea eax [ ebp - 0x6020 ]
push eax
push 0x3ee
call sub_4029e0
cmp [ ebp - 0x8029 ] 0x0
je r-xdata
cmp [ ebp - 0x8020 ] 0x22
jne r-xdata
add esp 0xfffffff8
push edi
lea ebx [ ebp - 0x8020 ]
push ebx
call sub_4037e4
add esp 0xfffffffc
push r-xdata
push ebx
mov eax [ ebp + 0x8 ]
push eax
call sub_4064b0
mov [ ebp - 0x802a ] al
add esp 0x20
add esp 0xfffffffc
push r-xdata
push ebx
mov edx [ ebp + 0x8 ]
push edx
call sub_4064b0
add esp 0x10
cmp [ ebp - 0x802a ] 0x0
setne [ ebp - 0x802a ]
test al al
setne al
movzx eax al
or [ ebp - 0x802a ] al
jmp r-xdata
call GetLastError
cmp eax 0xcb
jne r-xdata
add esp 0xfffffff8
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
cmp [ ebx + ecx - 0x2 ] 0x22
jne r-xdata
add esp 0xfffffff8
push edi
push 0x3f0
call sub_4029e0
mov [ ebp - 0x802a ] 0x1
jmp r-xdata
add esp 0xfffffff8
push r-xdata
mov edx [ ebp + 0x8 ]
push edx
call strcat
add esp 0x10
mov edi ebx
cld
mov ecx 0xffffffff
[ edi ]
not ecx
mov [ ebx + ecx - 0x2 ] al
add esp 0xfffffff8
lea eax [ ebp - 0x801f ]
push eax
mov edx [ ebp + 0x8 ]
push edx
jmp r-xdata
call strcat
add esp 0x10
lea edx [ ebp - 0x8020 ]
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
cmp [ edx + ecx - 0x2 ] 0x3b
je r-xdata
sub_4064b0
push ebp
mov ebp esp
mov eax 0x201c
call sub_4161a4
push edi
push esi
push ebx
add esp 0xfffffff4
mov eax [ ebp + 0xc ]
push eax
call sub_403304
add esp 0x10
test al al
jne r-xdata
add esp 0xfffffffc
lea eax [ ebp - 0x2004 ]
push eax
push [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push edx
call sub_403d68
mov esi eax
mov [ ebp - 0x2008 ] 0x0
add esp 0x10
cmp [ ebp - 0x2008 ] esi
jge r-xdata
mov al 0x0
jmp r-xdata
test esi esi
jle r-xdata
lea esi [ esi ]
lea esp [ ebp - 0x2028 ]
pop ebx
pop esi
pop edi
leave
retn
mov al 0x1
add esp 0xfffffff4
push [ ebp - 0x2004 ]
call free
add esp 0xfffffff8
mov eax [ ebp + 0xc ]
push eax
lea ebx [ ebp - 0x2000 ]
push ebx
call strcpy
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
add esp 0x20
add esp 0xfffffff8
mov eax [ ebp - 0x2004 ]
mov edx [ ebp - 0x2008 ]
push [ eax + edx * 4 ]
push ebx
call strcat
add esp 0xfffffff8
push ebx
mov edi [ ebp + 0x8 ]
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
mov edx [ ebp + 0x8 ]
lea eax [ edx + ecx - 0x1 ]
push eax
call sub_4037e4
add esp 0x20
add esp 0xfffffff8
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call strcat
add esp 0xfffffff4
mov eax [ ebp - 0x2004 ]
mov edx [ ebp - 0x2008 ]
push [ eax + edx * 4 ]
call free
add esp 0x20
inc [ ebp - 0x2008 ]
cmp [ ebp - 0x2008 ] esi
jl r-xdata
sub_4065cc
push ebp
mov ebp esp
push edi
mov edx [ ebp + 0x8 ]
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
xor eax eax
cmp eax ecx
jge r-xdata
pop edi
leave
retn
cmp [ eax + edx ] 0x2e
jne r-xdata
inc eax
cmp eax ecx
jl r-xdata
mov [ eax + edx ] 0x2f
sub_406608
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
sub_40666c
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov esi rw-data
mov edi [ rw-data ]
jmp r-xdata
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
jne r-xdata
mov ebx [ esi ]
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea edi [ ecx - 0x1 ]
add esp 0xfffffff4
push ecx
call sub_415f94
xor edx edx
add esp 0x10
cmp edx edi
jge r-xdata
mov al 0x0
mov [ edi + eax ] 0x0
add esp 0xfffffffc
push edi
push eax
mov eax [ ebp + 0x8 ]
push eax
call strncmp
add esp 0x10
test eax eax
jne r-xdata
lea esi [ esi ]
add esi 0x4
mov edi [ esi ]
mov al 0x1
jmp r-xdata
mov cl [ edx + ebx ]
xor cl 0xbb
mov [ edx + eax ] cl
inc edx
cmp edx edi
jl r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
sub_4066f8
push ebp
mov ebp esp
mov eax 0x200c
call sub_4161a4
push edi
push esi
push ebx
add esp 0xfffffffc
push 0x2000
lea esi [ ebp - 0x2000 ]
push esi
push 0x7d0
call sub_401aa8
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea ebx [ esi + ecx - 0x1 ]
add esp 0xfffffffc
mov edi esi
cld
mov ecx 0xffffffff
[ edi ]
not ecx
mov eax 0x2001
sub eax ecx
push eax
push ebx
push 0x81
call sub_401aa8
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea edx [ ecx - 0x1 ]
xor eax eax
add esp 0x20
cmp eax edx
jge r-xdata
add esp 0xfffffff4
push esi
call sub_40679c
cmp eax 0xffffffff
je r-xdata
nop
mov al 0x1
mov al 0x0
jmp r-xdata
add [ eax + ebx ] 0xfe
inc eax
cmp eax edx
jl r-xdata
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
pop edi
leave
retn
sub_40679c
push ebp
mov ebp esp
sub esp 0x10
push edi
push ebx
mov ebx [ ebp + 0x8 ]
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
cmp eax 0x2
jle r-xdata
mov eax 0xfffffffd
cmp [ ebx + 0x1 ] 0x2d
jne r-xdata
add esp 0xfffffff4
push ebx
call sub_40666c
add esp 0x10
test al al
jne r-xdata
mov al [ ebx ]
add al 0xbf
movsx eax al
cmp eax 0x13
ja r-xdata
jmp [ eax * 4 + jump_table_4067f8 ]
add esp 0xfffffff8
add esp 0xfffffffe
push 0x1
jmp r-xdata
add esp 0xfffffff8
add esp 0xfffffffe
push 0x0
add esp 0xfffffff4
push ebx
call sub_406940
jmp r-xdata
push ebx
call sub_406888
jmp r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop edi
leave
retn
sub_406888
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
push ebx
call sub_406980
add eax 0xfffffffc
add esp 0x10
cmp eax 0x1
ja r-xdata
mov eax 0xfffffffd
jmp r-xdata
add esp 0xfffffff4
push ebx
call sub_406a0c
add esp 0x10
test al al
jne r-xdata
mov ebx [ ebp - 0x28 ]
leave
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax 0xffffffff
add esp 0xfffffff4
lea eax [ ebp - 0xc ]
push eax
call time
add esp 0xfffffff4
push ebx
call sub_406cec
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax edx
sub eax ecx
add esp 0x20
test eax eax
jle r-xdata
add esp 0xfffffff8
push edx
push ecx
call difftime
fdiv [ r-xdata ]
fnstcw [ ebp - 0x2 ]
mov dx [ ebp - 0x2 ]
or dx 0xc00
mov [ ebp - 0x4 ] dx
fldcw [ ebp - 0x4 ]
fistp [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
fldcw [ ebp - 0x2 ]
mov edx 0xfffffffd
cmp eax 0xffffffff
jle r-xdata
mov eax 0xfffffffe
jmp r-xdata
mov eax edx
jmp r-xdata
add edx 0x2
sub_406940
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
push ebx
call sub_406980
add eax 0xfffffffe
add esp 0x10
cmp eax 0x1
ja r-xdata
mov eax 0xfffffffd
add esp 0xfffffff4
push ebx
call sub_406a0c
test al al
je r-xdata
mov eax 0xffffffff
jmp r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
sub_406980
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov eax [ ebp + 0x8 ]
xor ebx ebx
jmp r-xdata
add esp 0xfffffff8
push 0x2d
push eax
call strchr
add esp 0x10
test eax eax
jne r-xdata
inc eax
inc ebx
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
sub_406a0c
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x65
jne r-xdata
add esp 0xfffffffc
push r-xdata
push r-xdata
push ebx
call sub_406a90
mov [ ebp - 0x1 ] 0x0
add esp 0xfffffffc
push r-xdata
push r-xdata
push ebx
call sub_406a90
add esp 0x10
test al al
jne r-xdata
mov [ ebp - 0x1 ] 0x1
add esp 0xfffffffc
push r-xdata
push r-xdata
push ebx
call sub_406a90
add esp 0x10
test al al
jne r-xdata
mov ebx [ ebp - 0x28 ]
leave
retn
add esp 0xfffffffc
push r-xdata
push r-xdata
push ebx
call sub_406a90
test al al
je r-xdata
mov al [ ebp - 0x1 ]
jmp r-xdata
sub_406a90
push ebp
mov ebp esp
sub esp 0x6c
push edi
push esi
push ebx
add esp 0xfffffff8
push 0x2d
mov eax [ ebp + 0x8 ]
push eax
call strrchr
mov [ ebp - 0x50 ] eax
mov esi eax
sub esi [ ebp + 0x8 ]
add esp 0x10
cmp esi 0x4
jle r-xdata
mov al 0x0
jmp r-xdata
cmp [ ebp - 0x50 ] 0x0
je r-xdata
lea esp [ ebp - 0x78 ]
pop ebx
pop esi
pop edi
leave
retn
inc [ ebp - 0x50 ]
mov eax [ ebp - 0x50 ]
cmp [ eax ] 0x0
jne r-xdata
add esp 0xfffffff4
lea ebx [ ebp - 0x44 ]
push ebx
call sub_406e6c
add esp 0xfffffffc
push esi
mov eax [ ebp + 0x8 ]
push eax
push ebx
call sub_406ecc
add esp 0x20
add esp 0xfffffffc
mov edi [ ebp + 0xc ]
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ebx
call sub_406ecc
add esp 0xfffffff8
push ebx
lea eax [ ebp - 0x48 ]
push eax
call sub_406e7c
add esp 0x20
add esp 0xfffffff4
push ebx
call sub_406e6c
add esp 0xfffffffc
push esi
mov eax [ ebp + 0x8 ]
push eax
push ebx
call sub_406ecc
add esp 0x20
add esp 0xfffffffc
mov edi [ ebp + 0x10 ]
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ebx
call sub_406ecc
add esp 0xfffffff8
push ebx
lea eax [ ebp - 0x4c ]
push eax
call sub_406e7c
add esp 0x20
add esp 0xfffffffc
add esp 0xfffffffe
push 0x1
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x54 ] eax
push eax
push [ ebp - 0x48 ]
call sub_406c50
add esp 0xfffffffc
add esp 0xfffffffe
push 0x1
lea esi [ ebp - 0x20 ]
push esi
push [ ebp - 0x4c ]
call sub_406c50
add esp 0x20
add esp 0xfffffff8
mov eax [ ebp - 0x54 ]
push eax
lea ebx [ ebp - 0x40 ]
push ebx
call strcpy
add esp 0xfffffff8
push esi
push ebx
call strcat
add esp 0x20
add esp 0xfffffffc
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
push eax
push ebx
mov eax [ ebp - 0x50 ]
push eax
call strncmp
add esp 0x10
test eax eax
je r-xdata
mov al 0x1
add esp 0xfffffffc
add esp 0xfffffffe
push 0x0
mov eax [ ebp - 0x54 ]
push eax
push [ ebp - 0x48 ]
call sub_406c50
add esp 0xfffffffc
add esp 0xfffffffe
push 0x0
push esi
push [ ebp - 0x4c ]
call sub_406c50
add esp 0x20
add esp 0xfffffff8
mov eax [ ebp - 0x54 ]
push eax
push ebx
call strcpy
add esp 0xfffffff8
push esi
push ebx
call strcat
add esp 0x20
add esp 0xfffffffc
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
push eax
push ebx
mov eax [ ebp - 0x50 ]
push eax
call strncmp
test eax eax
sete al
jmp r-xdata
sub_406c50
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add esp 0xfffffffc
push 0x24
push ebx
push eax
call sub_406dc4
add esp 0xfffffffc
push 0x20
push ebx
push eax
call sub_406dc4
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
xor esi esi
cmp ecx 0xfffffffe
je r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
mov edx ebx
mov esi esi
mov [ edx ] 0x79
jmp r-xdata
jg r-xdata
inc edx
inc esi
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
cmp esi eax
jb r-xdata
cmp al 0x6c
je r-xdata
cmp al 0x30
je r-xdata
mov al [ edx ]
cmp al 0x31
je r-xdata
jmp r-xdata
mov [ edx ] 0x7a
cmp al 0x6f
je r-xdata
mov [ edx ] 0x77
jmp r-xdata
jmp r-xdata
mov [ edx ] 0x78
jmp r-xdata
jmp r-xdata
sub_406cec
push ebp
mov ebp esp
sub esp 0x4c
push edi
push esi
push ebx
add esp 0xfffffff8
push 0x2d
push [ ebp + 0x8 ]
call strchr
lea ebx [ eax + 0x1 ]
add esp 0xfffffff8
push 0x2d
push ebx
call strchr
lea ebx [ eax + 0x1 ]
add esp 0x20
add esp 0xfffffff4
push ebx
call atoi
mov [ ebp - 0x34 ] eax
add esp 0xfffffff8
push 0x2e
push ebx
call strchr
lea ebx [ eax + 0x1 ]
add esp 0x20
add esp 0xfffffff4
push ebx
call atoi
mov edi eax
add esp 0xfffffff8
push 0x2e
push ebx
call strchr
lea ebx [ eax + 0x1 ]
add esp 0x20
add esp 0xfffffff4
push ebx
call atoi
mov esi eax
add esp 0xfffffff8
push 0x2d
push ebx
call strchr
lea ebx [ eax + 0x1 ]
add esp 0x20
add esp 0xfffffff4
push ebx
call atoi
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] esi
dec edi
mov [ ebp - 0x20 ] edi
mov eax [ ebp - 0x34 ]
add eax 0xfffff894
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
add esp 0xfffffff4
lea eax [ ebp - 0x30 ]
push eax
call mktime
lea esp [ ebp - 0x58 ]
pop ebx
pop esi
pop edi
leave
retn
sub_406dc4
push ebp
mov ebp esp
sub esp 0x2c
push edi
push esi
push ebx
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
mov [ edi ] 0x0
mov eax [ ebp + 0xc ]
pop ebx
pop esi
pop edi
leave
retn
xor ebx ebx
add dl 0x57
add dl 0x30
jmp r-xdata
mov eax ecx
xor edx edx
div [ ebp + 0x10 ]
mov eax ebx
lea esi [ ebp - 0x20 ]
inc ebx
cmp edx 0x9
jg r-xdata
test ebx ebx
jle r-xdata
mov [ eax + esi ] dl
mov eax ecx
xor edx edx
div [ ebp + 0x10 ]
mov ecx eax
test ecx ecx
jne r-xdata
nop
dec ebx
mov al [ ebx + esi ]
mov [ edi ] al
inc edi
test ebx ebx
jg r-xdata
sub_406e28
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
add esp 0xfffffff4
lea ebx [ ebp - 0x4 ]
push ebx
call sub_406e6c
add esp 0xfffffffc
push esi
push edi
push ebx
call sub_406ecc
add esp 0x20
add esp 0xfffffff8
push ebx
lea eax [ ebp - 0x8 ]
push eax
call sub_406e7c
mov eax [ ebp - 0x8 ]
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
sub_406e90
push ebp
mov ebp esp
push edi
push esi
push ebx
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
test eax eax
jle r-xdata
pop ebx
pop esi
pop edi
leave
retn
mov ebx eax
lea esi [ esi ]
mov eax [ edi ]
mov edx eax
shr edx 0x18
movsx ecx [ esi ]
xor edx ecx
shl eax 0x8
xor eax [ edx * 4 + rw-data ]
mov [ edi ] eax
inc esi
dec ebx
jne r-xdata
sub_406ecc
push ebp
mov ebp esp
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
test eax eax
jle r-xdata
pop ebx
pop esi
leave
retn
mov ecx eax
mov eax [ esi ]
mov dl al
xor dl [ ebx ]
movzx edx dl
shr eax 0x8
xor eax [ edx * 4 + rw-data ]
mov [ esi ] eax
inc ebx
dec ecx
jne r-xdata
sub_406f00
push ebp
mov ebp esp
mov dl [ ebp + 0xb ]
mov al [ ebp + 0x8 ]
mov [ ebp + 0xb ] al
mov [ ebp + 0x8 ] dl
mov dl [ ebp + 0xa ]
mov al [ ebp + 0x9 ]
mov [ ebp + 0xa ] al
mov [ ebp + 0x9 ] dl
mov eax [ ebp + 0x8 ]
leave
retn
sub_406f20
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
sub_406f70
bound esp [ ecx + 0x64 ]
pop edi
popad
insb
insb
outsd
arpl [ eax ] ax
mov esi esi
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
leave
retn
add esp 0xfffffff4
push [ rw-data ]
call DeleteFileA
sub_406ff4
push ebp
mov ebp esp
mov eax 0x401c
call sub_4161a4
push edi
push esi
push ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea esp [ ebp - 0x4028 ]
pop ebx
pop esi
pop edi
leave
retn
mov [ rw-data ] 0x1
mov al [ rw-data ]
mov [ ebp - 0x4005 ] al
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x2000 ]
push ebx
push r-xdata
call GetEnvironmentVariableA
add esp 0x4
test eax eax
je r-xdata
add esp 0xfffffff8
push r-xdata
push eax
call fopen
mov [ rw-data ] eax
add esp 0x10
add esp 0xfffffffc
push 0x2000
push ebx
push r-xdata
call GetEnvironmentVariableA
add esp 0x4
test eax eax
je r-xdata
mov esi ebx
mov edi r-xdata
mov ecx 0x4
cld
test al 0x0
[ esi ] [ edi ]
jne r-xdata
cmp [ ebp - 0x4005 ] 0x0
je r-xdata
mov esi ebx
mov edi r-xdata
mov ecx 0x4
cld
test al 0x0
[ esi ] [ edi ]
jne r-xdata
mov [ ebp - 0x4005 ] 0x1
add esp 0xfffffff8
push r-xdata
push r-xdata
call _tempnam
mov [ rw-data ] eax
add esp 0x10
test eax eax
je r-xdata
mov [ ebp - 0x4005 ] 0x1
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff8
push r-xdata
push eax
call fopen
mov [ rw-data ] eax
add esp 0x10
add esp 0xfffffffc
push 0x2000
lea esi [ ebp - 0x4000 ]
push esi
push 0x0
call GetModuleFileNameA
add esp 0xfffffff8
lea ebx [ ebp - 0x4004 ]
push ebx
call time
add esp 0xfffffff4
push ebx
call ctime
push eax
push esi
push r-xdata
push [ rw-data ]
call fprintf
add esp 0x30
add esp 0xfffffff4
push [ rw-data ]
call fflush
mov [ rw-data ] r-xdata
add esp 0xfffffff8
push r-xdata
push r-xdata
call fopen
mov [ rw-data ] eax
add esp 0x10
test eax eax
je r-xdata
sub_4071a4
push ebp
mov ebp esp
sub esp 0x14
push ebx
lea ebx [ ebp + 0xc ]
call sub_406ff4
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff8
push r-xdata
push eax
call fprintf
add esp 0xfffffffc
push ebx
push [ ebp + 0x8 ]
push [ rw-data ]
call vfprintf
add esp 0x20
add esp 0xfffffff8
push r-xdata
push [ rw-data ]
call fprintf
add esp 0xfffffff4
push [ rw-data ]
call fclose
mov [ rw-data ] 0x0
sub_407210
push ebp
mov ebp esp
sub esp 0x14
push ebx
lea ebx [ ebp + 0xc ]
call sub_406ff4
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffffc
push ebx
push [ ebp + 0x8 ]
push eax
call vfprintf
add esp 0xfffffff8
push r-xdata
push [ rw-data ]
call fprintf
add esp 0x20
add esp 0xfffffff4
push [ rw-data ]
call fclose
mov [ rw-data ] 0x0
sub_407268
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
sub_4072fc
push ebp
mov ebp esp
mov eax 0x2024
call sub_4161a4
push ebx
add esp 0xfffffffc
add esp 0xfffffffe
push 0x0
call sub_4034b8
push eax
lea ebx [ ebp - 0x2000 ]
push ebx
call sub_403860
add esp 0xfffffff4
push 0x0
lea eax [ ebp - 0x2004 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push r-xdata
push 0x80000001
call RegCreateKeyExA
add esp 0x1c
test eax eax
jne r-xdata
mov ebx [ ebp - 0x2028 ]
leave
retn
call GetCurrentProcessId
mov [ ebp - 0x2008 ] eax
add esp 0xfffffff8
push 0x4
lea eax [ ebp - 0x2008 ]
push eax
push 0x4
push 0x0
push ebx
push [ ebp - 0x2004 ]
call RegSetValueExA
add esp 0xfffffffc
push [ ebp - 0x2004 ]
call RegCloseKey
sub_407394
push ebp
mov ebp esp
mov eax 0x2020
call sub_4161a4
push esi
push ebx
add esp 0xfffffffc
add esp 0xfffffffe
push 0x0
call sub_4034b8
push eax
lea ebx [ ebp - 0x2000 ]
push ebx
call sub_403860
xor esi esi
add esp 0xfffffff4
lea eax [ ebp - 0x2004 ]
push eax
push 0x20019
push 0x0
push r-xdata
push 0x80000001
call RegOpenKeyExA
add esp 0x1c
test eax eax
jne r-xdata
mov eax esi
lea esp [ ebp - 0x2028 ]
pop ebx
pop esi
leave
retn
mov [ ebp - 0x2008 ] 0x4
add esp 0xfffffff8
lea eax [ ebp - 0x2008 ]
push eax
lea eax [ ebp - 0x200c ]
push eax
lea eax [ ebp - 0x2010 ]
push eax
push 0x0
push ebx
push [ ebp - 0x2004 ]
call RegQueryValueExA
add esp 0x8
test eax eax
jne r-xdata
add esp 0xfffffff4
push [ ebp - 0x2004 ]
call RegCloseKey
cmp [ ebp - 0x2008 ] 0x4
jne r-xdata
mov esi [ ebp - 0x200c ]
sub_407448
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
xor eax eax
cmp eax ecx
jge r-xdata
mov [ ecx + ebx ] 0x0
pop ebx
pop esi
pop edi
leave
retn
lea esi [ esi ]
mov [ eax + ebx ] dl
mov [ eax + ebx ] 0x5f
jmp r-xdata
mov dl [ eax + esi ]
cmp dl 0x5c
jne r-xdata
inc eax
cmp eax ecx
jl r-xdata
sub_407490
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x22
jne r-xdata
add esp 0xfffffff8
push 0x20
push eax
call wcschr
test eax eax
jne r-xdata
add esp 0xfffffff8
push 0x22
add eax 0x2
push eax
call wcschr
add esp 0x10
test eax eax
je r-xdata
cmp [ eax ] 0x20
jne r-xdata
mov eax r-xdata
jmp r-xdata
leave
retn
mov esi esi
add eax 0x2
cmp [ eax ] 0x20
je r-xdata
sub_407540
push ebp
mov ebp esp
sub esp 0x14
push ebx
push [ rw-data ]
push 0x1
push 0x1
push 0x0
call CreateSemaphoreA
mov ebx eax
call GetLastError
test ebx ebx
je r-xdata
mov al 0x1
cmp eax 0xb7
je r-xdata
add esp 0xfffffff4
push ebx
call CloseHandle
add esp 0xfffffffc
push 0x0
push 0x1
push ebx
call ReleaseSemaphore
add esp 0x4
test eax eax
jne r-xdata
add esp 0xfffffff4
push ebx
call CloseHandle
push r-xdata
call sub_407210
mov al 0x0
jmp r-xdata
add esp 0xfffffff8
call GetLastError
push eax
push r-xdata
call sub_407210
add esp 0x10
mov ebx [ ebp - 0x18 ]
leave
retn
sub_407665
jmp r-xdata
ja r-xdata
and [ fs : 0x32320064 ] ah
imul esi [ ecx + ebp * 2 + 0x6e ] 0x6f662067
jb r-xdata
popa
imul bp [ ebp + 0x20 ] 0x6564
insb
jb r-xdata
outsb
outsd
je r-xdata
mov edx [ r-xdata ]
je r-xdata
and [ ebx - 0x61970b3c ] al
outsd
outsb
add [ edx + 0x65 ] dh
and [ fs : 0x78650064 ] ah
and [ fs : 0x72430064 ] ah
popad
je r-xdata
je r-xdata
insb
and [ gs : ebp + 0x6c ] ah
imul sp [ ebx + 0x61 ] 0x6974
outsd
outsb
and [ ebx + 0x65 ] dh
insd
popad
jo r-xdata
add esp 0xfffffff8
push esi
mov edx [ rw-data ]
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ edx + ecx - 0x1 ]
push eax
call sub_407448
add esp 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x4 ] edx
jmp r-xdata
shl [ ebp + 0x40 ] 0x0
in eax 0xb8
sbb al 0xe0
add [ eax ] al
call sub_4161a4
push edi
push esi
push ebx
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov [ rw-data ] eax
add esp 0xfffffffc
add esp 0xfffffffe
push 0x0
call sub_4034b8
push eax
lea esi [ ebp - 0x2000 ]
push esi
call sub_403860
add esp 0x20
add esp 0xfffffff4
push 0x9e
call sub_4019cc
add esp 0x10
test eax eax
je r-xdata
outsb
add [ di ] ah
add [ fs : ebp - 0x77 ] dl
add [ eax ] al
add al ch
pop edi
mov [ 0xffffffffc483ffff ] al
and [ ebx + 0x65 ] dh
insd
popad
jo r-xdata
mov eax [ rw-data ]
mov [ eax ] 0x0
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
imul esi [ ecx + ebp * 2 + 0x6e ] 0x64250067
add [ ebp - 0x77 ] dl
add [ fs : ebp + 0x78 ] ah
add [ edi + 0x61 ] dh
imul esi [ ecx + ebp * 2 + 0x6e ] 0x6f662067
jb r-xdata
inc esi
imul ebp [ ebp + 0x20 ] 0x6c696166
and [ fs : 0x31320064 ] ah
add [ 0xa007300 ] ah
add [ eax ] al
add [ edi + 0x72 ] dl
imul esi [ ebp + 0x46 ] 0x20656c69
popa
imul ebp [ ebp + 0x64 ] 0x642520
xor dh [ edx ]
insb
popad
jae r-xdata
outsd
jb r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
push [ rw-data ]
push 0x1
push 0x1
push 0x0
call CreateSemaphoreA
mov edi eax
call GetLastError
mov ebx eax
push edi
push ebx
push [ rw-data ]
push r-xdata
call sub_407210
add esp 0x20
cmp ebx 0xb7
jne r-xdata
add esp 0xfffffff4
push 0x2715
call sub_4019cc
add esp 0x10
test eax eax
je r-xdata
adc [ ebp - 0x5ee78b40 ] al
pop esp
sbb [ edx ] al
outsd
jb r-xdata
add [ edi + 0x61 ] dh
imul esi [ eax + 0x72 ] 0x72757465
outsb
call sub_4072fc
jmp r-xdata
add esp 0xfffffff4
push edi
call CloseHandle
add esp 0xfffffffc
call sub_407394
mov ebx eax
add esp 0xfffffff8
push ebx
push r-xdata
call sub_407210
add esp 0x20
add esp 0xfffffff8
add esp 0xfffffffe
push 0x1
push ebx
call sub_409114
add esp 0x10
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
add esp 0xfffffffc
push 0x0
push r-xdata
lea ebx [ ebp - 0xe000 ]
jmp r-xdata
imul ebp [ ebp + 0x64 ] 0x642520
js r-xdata
and [ esi + 0x61 ] ah
lea esp [ ebp - 0xe028 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0xfffffff4
push 0x0
call sub_402a00
add esp 0xfffffff8
push ebx
lea edi [ ebp - 0x4000 ]
push edi
call sub_403ce8
add esp 0xfffffff8
push edi
push r-xdata
call sub_407210
add esp 0x20
add esp 0xfffffff8
push [ rw-data ]
lea ebx [ ebp - 0x6000 ]
push ebx
call strcpy
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
add esp 0x20
push ebx
push 0x1
push 0x1
push 0x0
call CreateSemaphoreA
mov esi eax
test esi esi
jne r-xdata
push ebx
call sprintf
add esp 0xfffffff8
push ebx
push [ rw-data ]
call strcat
add esp 0x20
push [ rw-data ]
push 0x1
push 0x1
push 0x0
call CreateSemaphoreA
mov ebx eax
call GetLastError
cmp eax 0xb7
jne r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0xfffffff8
add esp 0xfffffff8
push 0xffffffff
push esi
call WaitForSingleObject
push eax
push r-xdata
call sub_407210
add esp 0x28
call sub_407540
test al al
je r-xdata
add esp 0xfffffff8
call GetLastError
push eax
push r-xdata
call sub_407210
add esp 0x10
push ebx
call GetLastError
push eax
push [ rw-data ]
push r-xdata
call sub_407210
cmp edi 0x1869f
jle r-xdata
add esp 0xfffffffc
push 0x0
push 0x1
push esi
call ReleaseSemaphore
add esp 0x4
test eax eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0xe005 ] 0x0
jmp r-xdata
add esp 0xfffffff4
push ebx
call CloseHandle
inc edi
add esp 0xfffffff4
push esi
push [ rw-data ]
call sub_407448
add esp 0x20
add esp 0xfffffffc
push edi
push r-xdata
lea ebx [ ebp - 0xdfc0 ]
add esp 0xfffffff8
call GetLastError
push eax
push r-xdata
call sub_407210
add esp 0x10
cmp ebx 0xc7
jg r-xdata
cmp [ ebp - 0xe005 ] 0x0
jne r-xdata
add esp 0xfffffff4
push edi
call sub_403304
add esp 0x10
test al al
jne r-xdata
add esp 0xfffffffc
push 0x0
push 0x80
push 0x1
push 0x0
push 0x0
push 0x40000000
lea eax [ ebp - 0x4000 ]
mov [ ebp - 0xe00c ] eax
push eax
call CreateFileA
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
add esp 0xfffffff4
push 0x32
call Sleep
mov edx 0x66666667
mov eax edx
imul ebx
sar edx 0x1
mov eax ebx
sar eax 0x1f
sub edx eax
lea eax [ edx + edx * 4 ]
add esp 0xc
cmp ebx eax
jne r-xdata
add esp 0xfffffffc
add esp 0xfffffff4
call GetCommandLineW
push eax
call sub_407490
push eax
push r-xdata
lea ebx [ ebp - 0xe000 ]
push ebx
call swprintf
add esp 0x20
add esp 0xfffffff4
push 0x0
lea eax [ ebp - 0xe004 ]
push eax
add esp 0xfffffff4
push ebx
call wcslen
add esp 0x10
add eax eax
push eax
push ebx
push edi
call WriteFile
add esp 0xc
test eax eax
jne r-xdata
add esp 0xfffffff8
call GetLastError
push eax
push r-xdata
call sub_407210
add esp 0xfffffff8
push r-xdata
push 0x3f1
call sub_4029e0
inc ebx
call sub_407540
test al al
jne r-xdata
add esp 0xfffffff4
push edi
call CloseHandle
add esp 0xc
add esp 0xfffffff4
push r-xdata
call sub_407210
xor ebx ebx
add esp 0x10
jmp r-xdata
add esp 0xfffffff8
call GetLastError
push eax
push r-xdata
call sub_4071a4
add esp 0xfffffff8
push r-xdata
push 0x3f1
call sub_4029e0
mov ebx 0xc8
mov [ ebp - 0xe005 ] 0x1
cmp ebx 0xc7
jg r-xdata
cmp [ ebp - 0xe005 ] 0x0
je r-xdata
add esp 0xfffffff4
mov eax [ ebp - 0xe00c ]
push eax
call sub_403304
add esp 0x10
test al al
jne r-xdata
add esp 0xfffffff4
lea eax [ ebp - 0x4000 ]
push eax
call DeleteFileA
add esp 0xc
add esp 0xfffffff4
push 0x32
call Sleep
mov edx 0x66666667
mov eax edx
imul ebx
sar edx 0x1
mov eax ebx
sar eax 0x1f
sub edx eax
lea eax [ edx + edx * 4 ]
add esp 0xc
cmp ebx eax
jne r-xdata
inc ebx
call sub_407540
test al al
jne r-xdata
mov ebx 0xc8
mov [ ebp - 0xe005 ] 0x1
sub_407720
push ebp
mov ebp esp
mov eax 0xe01c
call sub_4161a4
push edi
push esi
push ebx
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov [ rw-data ] eax
add esp 0xfffffffc
add esp 0xfffffffe
push 0x0
call sub_4034b8
push eax
lea esi [ ebp - 0x2000 ]
push esi
call sub_403860
add esp 0x20
add esp 0xfffffff4
push 0x9e
call sub_4019cc
add esp 0x10
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax ] 0x0
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov edx [ r-xdata ]
mov [ eax + 0x4 ] edx
jmp r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
push [ rw-data ]
push 0x1
push 0x1
push 0x0
call CreateSemaphoreA
mov edi eax
call GetLastError
mov ebx eax
push edi
push ebx
push [ rw-data ]
push r-xdata
call sub_407210
add esp 0x20
cmp ebx 0xb7
jne r-xdata
add esp 0xfffffff4
push 0x2715
call sub_4019cc
add esp 0x10
test eax eax
je r-xdata
add esp 0xfffffff8
push esi
mov edx [ rw-data ]
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ edx + ecx - 0x1 ]
push eax
call sub_407448
add esp 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_4072fc
jmp r-xdata
add esp 0xfffffff4
push edi
call CloseHandle
add esp 0xfffffffc
call sub_407394
mov ebx eax
add esp 0xfffffff8
push ebx
push r-xdata
call sub_407210
add esp 0x20
add esp 0xfffffff8
add esp 0xfffffffe
push 0x1
push ebx
call sub_409114
add esp 0x10
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
add esp 0xfffffffc
push 0x0
push r-xdata
lea ebx [ ebp - 0xe000 ]
jmp r-xdata
lea esp [ ebp - 0xe028 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0xfffffff4
push 0x0
call sub_402a00
add esp 0xfffffff8
push ebx
lea edi [ ebp - 0x4000 ]
push edi
call sub_403ce8
add esp 0xfffffff8
push edi
push r-xdata
call sub_407210
add esp 0x20
add esp 0xfffffff8
push [ rw-data ]
lea ebx [ ebp - 0x6000 ]
push ebx
call strcpy
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
add esp 0x20
push ebx
push 0x1
push 0x1
push 0x0
call CreateSemaphoreA
mov esi eax
test esi esi
jne r-xdata
push ebx
call sprintf
add esp 0xfffffff8
push ebx
push [ rw-data ]
call strcat
add esp 0x20
push [ rw-data ]
push 0x1
push 0x1
push 0x0
call CreateSemaphoreA
mov ebx eax
call GetLastError
cmp eax 0xb7
jne r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0xfffffff8
add esp 0xfffffff8
push 0xffffffff
push esi
call WaitForSingleObject
push eax
push r-xdata
call sub_407210
add esp 0x28
call sub_407540
test al al
je r-xdata
add esp 0xfffffff8
call GetLastError
push eax
push r-xdata
call sub_407210
add esp 0x10
push ebx
call GetLastError
push eax
push [ rw-data ]
push r-xdata
call sub_407210
cmp edi 0x1869f
jle r-xdata
add esp 0xfffffffc
push 0x0
push 0x1
push esi
call ReleaseSemaphore
add esp 0x4
test eax eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0xe005 ] 0x0
jmp r-xdata
add esp 0xfffffff4
push ebx
call CloseHandle
inc edi
add esp 0xfffffff4
push esi
push [ rw-data ]
call sub_407448
add esp 0x20
add esp 0xfffffffc
push edi
push r-xdata
lea ebx [ ebp - 0xdfc0 ]
add esp 0xfffffff8
call GetLastError
push eax
push r-xdata
call sub_407210
add esp 0x10
cmp ebx 0xc7
jg r-xdata
cmp [ ebp - 0xe005 ] 0x0
jne r-xdata
add esp 0xfffffff4
push edi
call sub_403304
add esp 0x10
test al al
jne r-xdata
add esp 0xfffffffc
push 0x0
push 0x80
push 0x1
push 0x0
push 0x0
push 0x40000000
lea eax [ ebp - 0x4000 ]
mov [ ebp - 0xe00c ] eax
push eax
call CreateFileA
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
add esp 0xfffffff4
push 0x32
call Sleep
mov edx 0x66666667
mov eax edx
imul ebx
sar edx 0x1
mov eax ebx
sar eax 0x1f
sub edx eax
lea eax [ edx + edx * 4 ]
add esp 0xc
cmp ebx eax
jne r-xdata
add esp 0xfffffffc
add esp 0xfffffff4
call GetCommandLineW
push eax
call sub_407490
push eax
push r-xdata
lea ebx [ ebp - 0xe000 ]
push ebx
call swprintf
add esp 0x20
add esp 0xfffffff4
push 0x0
lea eax [ ebp - 0xe004 ]
push eax
add esp 0xfffffff4
push ebx
call wcslen
add esp 0x10
add eax eax
push eax
push ebx
push edi
call WriteFile
add esp 0xc
test eax eax
jne r-xdata
add esp 0xfffffff8
call GetLastError
push eax
push r-xdata
call sub_407210
add esp 0xfffffff8
push r-xdata
push 0x3f1
call sub_4029e0
inc ebx
call sub_407540
test al al
jne r-xdata
add esp 0xfffffff4
push edi
call CloseHandle
add esp 0xc
add esp 0xfffffff4
push r-xdata
call sub_407210
xor ebx ebx
add esp 0x10
jmp r-xdata
add esp 0xfffffff8
call GetLastError
push eax
push r-xdata
call sub_4071a4
add esp 0xfffffff8
push r-xdata
push 0x3f1
call sub_4029e0
mov ebx 0xc8
mov [ ebp - 0xe005 ] 0x1
cmp ebx 0xc7
jg r-xdata
cmp [ ebp - 0xe005 ] 0x0
je r-xdata
add esp 0xfffffff4
mov eax [ ebp - 0xe00c ]
push eax
call sub_403304
add esp 0x10
test al al
jne r-xdata
add esp 0xfffffff4
lea eax [ ebp - 0x4000 ]
push eax
call DeleteFileA
add esp 0xc
add esp 0xfffffff4
push 0x32
call Sleep
mov edx 0x66666667
mov eax edx
imul ebx
sar edx 0x1
mov eax ebx
sar eax 0x1f
sub edx eax
lea eax [ edx + edx * 4 ]
add esp 0xc
cmp ebx eax
jne r-xdata
inc ebx
call sub_407540
test al al
jne r-xdata
mov ebx 0xc8
mov [ ebp - 0xe005 ] 0x1
sub_407bd0
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
sub_407cae
dec [ ecx + 0x681589c2 ]
sbb [ edx ] al
test edx edx
je r-xdata
leave
retn
add esp 0xfffffff8
mov eax [ edx ]
push r-xdata
push edx
mov eax [ eax + 0x18 ]
call eax
mov ecx eax
add esp 0x8
mov [ rw-data ] ecx
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
push r-xdata
push r-xdata
push ecx
push eax
mov eax [ edx + 0x1c4 ]
call eax
mov [ rw-data ] eax
mov eax [ rw-data ]
mov edx [ eax ]
push r-xdata
push r-xdata
push [ rw-data ]
push eax
mov eax [ edx + 0x1c4 ]
call eax
mov [ rw-data ] eax
sub_407e60
push ebp
mov ebp esp
mov eax 0x2010
call sub_4161a4
push esi
push ebx
add esp 0xfffffff4
push 0x278b
call sub_4019cc
add esp 0x10
test eax eax
je r-xdata
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
leave
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffffc
call sub_4040ec
push eax
push r-xdata
lea ebx [ ebp - 0x2000 ]
push ebx
call sprintf
add esp 0xfffffff8
push ebx
push r-xdata
call sub_407210
add esp 0x20
add esp 0xfffffff4
push ebx
call LoadLibraryA
mov ebx eax
add esp 0xc
test ebx ebx
jne r-xdata
mov eax [ rw-data ]
call eax
jmp r-xdata
add esp 0xfffffff8
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
add esp 0x8
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff4
push r-xdata
call sub_4071a4
jmp r-xdata
add esp 0xfffffff4
push r-xdata
call sub_4071a4
jmp r-xdata
mov edx [ rw-data ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
call edx
add esp 0xfffffffc
push 0xa
push 0x2710
push 0x0
call FindResourceA
mov ebx eax
add esp 0xfffffff8
add esp 0xfffffffc
push ebx
push 0x0
call LoadResource
push eax
call LockResource
mov esi eax
add esp 0xfffffff8
push ebx
push 0x0
call SizeofResource
add esp 0xfffffffc
push eax
push esi
push ebx
push eax
push esi
mov eax [ rw-data ]
call eax
add esp 0x8
push eax
push r-xdata
call sub_407210
mov [ rw-data ] 0x1
sub_407fc4
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
sub_408030
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov al 0x0
add esp 0xfffffff8
push r-xdata
push eax
call GetProcAddress
add esp 0x8
test eax eax
je r-xdata
add esp 0xfffffff4
push eax
call sub_404154
mov al 0x1
jmp r-xdata
leave
retn
sub_4081a4
push ebp
mov ebp esp
mov eax 0x801c
call sub_4161a4
push edi
push esi
push ebx
movzx ebx [ ebp + 0x10 ]
push ebx
mov eax [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
push r-xdata
call sub_407210
add esp 0x10
cmp [ ebp + 0xc ] 0x0
je r-xdata
add esp 0xfffffff8
lea eax [ ebp - 0x4000 ]
push eax
lea eax [ ebp - 0x2000 ]
push eax
call sub_4086c4
mov edi eax
cmp [ ebp + 0x10 ] 0x0
sete [ ebp - 0x8001 ]
add esp 0xfffffffc
push ebx
mov eax [ ebp + 0xc ]
push eax
push r-xdata
call sub_407210
add esp 0xfffffffc
push 0x2000
lea edi [ ebp - 0x6000 ]
push edi
push 0x7e
call sub_401aa8
add esp 0x20
add esp 0xfffffffc
push 0x2000
lea esi [ ebp - 0x8000 ]
push esi
push 0x7f
call sub_401aa8
add esp 0xfffffffc
push esi
push edi
push r-xdata
call sub_407210
add esp 0x20
add esp 0xfffffff8
mov eax [ ebp + 0xc ]
push eax
lea ebx [ ebp - 0x2000 ]
push ebx
call strcpy
add esp 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add esp 0xfffffff8
lea ebx [ ebp - 0x2000 ]
push ebx
push r-xdata
call sub_407210
add esp 0xfffffff4
push ebx
call sub_40c6f4
mov esi eax
add esp 0x20
add esp 0xfffffff4
push ebx
call sub_404170
add esp 0x10
test esi esi
jne r-xdata
add esp 0xfffffff4
push r-xdata
call sub_4071a4
add esp 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8001 ] 0x0
je r-xdata
add esp 0xfffffff4
add esp 0xfffffffe
push 0x0
add esp 0xfffffffe
push 0x1
push esi
push edi
push ebx
call sub_40b020
add esp 0x20
test al al
je r-xdata
add esp 0xfffffff4
push esi
call sub_408030
mov bl al
add esp 0x10
test bl bl
jne r-xdata
add esp 0xfffffff4
push r-xdata
call sub_4071a4
add esp 0x10
mov al 0x0
jmp r-xdata
add esp 0xfffffff8
push r-xdata
push 0x3f8
jmp r-xdata
add esp 0xfffffff4
push r-xdata
call sub_4071a4
add esp 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
add esp 0xfffffff4
add esp 0xfffffffe
push 0x1
push esi
push edi
mov eax [ ebp + 0xc ]
push eax
push ebx
call sub_40c204
add esp 0x20
test al al
je r-xdata
mov edi 0x2
add esp 0xfffffff8
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4000 ]
push eax
call strcpy
jmp r-xdata
test esi esi
je r-xdata
add esp 0xfffffff4
push r-xdata
call sub_4071a4
add esp 0x10
lea esp [ ebp - 0x8028 ]
pop ebx
pop esi
pop edi
leave
retn
call sub_402900
add esp 0xfffffff8
push r-xdata
push 0x3f8
jmp r-xdata
mov edi 0x2
add esp 0xfffffff8
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4000 ]
push eax
call strcpy
jmp r-xdata
add esp 0x10
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test bl bl
jne r-xdata
cmp edi 0x2
je r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
mov al 0x1
add esp 0xfffffff8
push 0x0
push 0x3fc
call sub_402900
add esp 0x10
jg r-xdata
cmp edi 0x3
je r-xdata
cmp edi 0x1
je r-xdata
add esp 0xfffffff8
push 0x0
push 0x3fa
call sub_402900
add esp 0x10
jmp r-xdata
add esp 0xfffffff8
push r-xdata
push 0x3f8
call sub_402900
add esp 0x10
jmp r-xdata
add esp 0xfffffff8
push 0x0
push 0x3ed
sub_40843c
push ebp
mov ebp esp
mov eax 0x401c
call sub_4161a4
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x4000 ]
push ebx
push 0x2713
call sub_401aa8
add esp 0xfffffffc
add esp 0xfffffffe
push 0x1
push ebx
lea ebx [ ebp - 0x2000 ]
push ebx
call sub_403860
add esp 0x20
add esp 0xfffffff8
push edi
push ebx
call strcat
mov [ ebp - 0x4001 ] 0x0
add esp 0xfffffff8
push r-xdata
push ebx
call fopen
mov ebx eax
add esp 0x20
test ebx ebx
je r-xdata
mov al [ ebp - 0x4001 ]
lea esp [ ebp - 0x4028 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffffc
push ebx
push 0x2000
push esi
call fgets
add esp 0x10
test eax eax
setne [ ebp - 0x4001 ]
cmp [ ebp - 0x4001 ] 0x0
je r-xdata
add esp 0xfffffff4
push ebx
call fclose
jmp r-xdata
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
test eax eax
jle r-xdata
mov dl [ esi + eax - 0x1 ]
cmp dl 0xd
je r-xdata
mov [ esi + eax - 0x1 ] 0x0
cmp dl 0xa
je r-xdata
sub_4086c4
push ebp
mov ebp esp
mov eax 0xa03c
call sub_4161a4
push edi
push esi
push ebx
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0xfffffffc
push 0x2000
lea eax [ ebp - 0x2000 ]
mov [ ebp - 0xa028 ] eax
push eax
push 0x80
call sub_401aa8
add esp 0x20
add esp 0xfffffffc
push 0x2000
lea edi [ ebp - 0x4000 ]
push edi
push 0x7e
call sub_401aa8
add esp 0xfffffffc
push 0x2000
lea esi [ ebp - 0x6000 ]
push esi
push 0x7f
call sub_401aa8
add esp 0x20
add esp 0xfffffff8
push r-xdata
lea ebx [ ebp - 0x8000 ]
push ebx
call sub_40843c
add esp 0x10
test al al
je r-xdata
mov [ ebp - 0x8010 ] 0x0
mov [ ebp - 0x800c ] 0x0
mov [ ebp - 0x8008 ] 0x0
add esp 0xfffffff8
push r-xdata
mov edi [ ebp - 0xa028 ]
push edi
jmp r-xdata
add esp 0xfffffff8
push ebx
push r-xdata
call sub_407210
add esp 0xfffffff4
add esp 0xfffffffe
push 0x0
push esi
push edi
push ebx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c204
add esp 0x30
test al al
je r-xdata
call strtok
mov esi eax
add esp 0x10
test esi esi
je r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0xfffffff8
push ebx
mov ecx [ ebp + 0xc ]
push ecx
call strcpy
xor edi edi
jmp r-xdata
mov edx esi
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
jne r-xdata
lea esp [ ebp - 0xa048 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ ebp - 0x8010 ]
mov edx [ ebp - 0x800c ]
sub edx eax
mov eax edx
sar eax 0x2
cmp edi eax
jb r-xdata
add esp 0xfffffff4
mov edx esi
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
push ecx
call sub_415f94
mov [ ebp - 0xa024 ] eax
add esp 0xfffffff8
push esi
push eax
call strcpy
lea ecx [ ebp - 0x8010 ]
lea eax [ ebp - 0xa024 ]
add esp 0x20
mov edx [ ebp - 0x800c ]
cmp edx [ ebp - 0x8008 ]
je r-xdata
mov eax edi
shl eax 0x2
add eax [ ebp - 0x8010 ]
mov esi [ eax ]
add esp 0xfffffff8
lea eax [ esi + 0x1 ]
push eax
lea ebx [ ebp - 0xa020 ]
push ebx
call strcpy
add esp 0xfffffff4
push ebx
call sub_405b40
add esp 0x20
add esp 0xfffffffc
movsx eax [ esi ]
push eax
push ebx
push r-xdata
call sub_407210
add esp 0x10
mov al [ esi ]
add al 0xbf
movsx eax al
cmp eax 0x18
ja r-xdata
add esp 0xfffffff8
push r-xdata
lea ebx [ ebp - 0xa020 ]
push ebx
call sub_40843c
add esp 0x10
test al al
je r-xdata
add esp 0xfffffffc
push eax
push edx
push ecx
call sub_41b940
add esp 0x10
test edx edx
je r-xdata
add esp 0xfffffff4
push esi
call sub_4160b0
add esp 0x10
inc edi
jmp [ eax * 4 + jump_table_4088c4 ]
add esp 0xfffffff8
push r-xdata
mov eax [ ebp - 0xa028 ]
push eax
jmp r-xdata
add esp 0xfffffff8
push ebx
push r-xdata
call sub_407210
add esp 0xfffffff4
add esp 0xfffffffe
push 0x0
lea eax [ ebp - 0x6000 ]
push eax
lea eax [ ebp - 0x4000 ]
push eax
push ebx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c204
add esp 0x30
test al al
je r-xdata
add [ ebp - 0x800c ] 0x4
jmp r-xdata
mov eax [ ebp - 0xa024 ]
mov [ edx ] eax
add esp 0xfffffff4
add esp 0xfffffffe
push 0x0
lea eax [ ebp - 0x6000 ]
push eax
lea eax [ ebp - 0x4000 ]
push eax
push ebx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c204
add esp 0x20
test al al
je r-xdata
add esp 0xfffffffc
lea eax [ ebp - 0x6000 ]
push eax
lea eax [ ebp - 0x4000 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_40c28c
add esp 0x10
test al al
je r-xdata
lea eax [ ebp - 0x6000 ]
push eax
lea eax [ ebp - 0x4000 ]
push eax
push ebx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40c150
add esp 0x10
test al al
je r-xdata
add esp 0xfffffffc
lea eax [ ebp - 0x6000 ]
push eax
lea eax [ ebp - 0x4000 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_40b7e4
add esp 0x10
test al al
je r-xdata
call strtok
mov esi eax
add esp 0x10
test esi esi
je r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0xfffffff8
push ebx
mov edi [ ebp + 0xc ]
push edi
call strcpy
mov esi [ ebp - 0x8010 ]
mov eax [ ebp - 0x8008 ]
sub eax esi
sar eax 0x2
je r-xdata
add esp 0xfffffff8
push r-xdata
push 0x0
add esp 0xfffffff8
push ebx
mov edi [ ebp + 0xc ]
push edi
call strcpy
add esp 0xfffffff4
push esi
call sub_4160b0
mov esi [ ebp - 0x8010 ]
mov eax [ ebp - 0x8008 ]
sub eax esi
sar eax 0x2
je r-xdata
add esp 0xfffffff8
push ebx
mov edx [ ebp + 0xc ]
push edx
call strcpy
add esp 0xfffffff4
push esi
call sub_4160b0
mov esi [ ebp - 0x8010 ]
mov eax [ ebp - 0x8008 ]
sub eax esi
sar eax 0x2
je r-xdata
add esp 0xfffffff8
push ebx
mov edi [ ebp + 0xc ]
push edi
call strcpy
add esp 0xfffffff4
push esi
call sub_4160b0
add esp 0xfffffff4
push esi
call sub_4160b0
lea esi [ ebp - 0x6000 ]
push esi
lea ebx [ ebp - 0x4000 ]
push ebx
mov eax [ ebp + 0x8 ]
push eax
push 0x80000001
call sub_40b648
add esp 0x10
test al al
je r-xdata
mov edx esi
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
jne r-xdata
mov eax 0x2
jmp r-xdata
shl eax 0x2
cmp eax 0x80
jbe r-xdata
shl eax 0x2
cmp eax 0x80
jbe r-xdata
mov eax 0x1
jmp r-xdata
shl eax 0x2
cmp eax 0x80
jbe r-xdata
mov eax 0x3
jmp r-xdata
shl eax 0x2
cmp eax 0x80
ja r-xdata
mov eax 0x4
jmp r-xdata
shl eax 0x2
cmp eax 0x80
ja r-xdata
push esi
push ebx
mov ecx [ ebp + 0x8 ]
push ecx
push 0x80000002
call sub_40b648
add esp 0x10
test al al
je r-xdata
add esp 0xfffffff8
mov edx [ ebp + 0x8 ]
push edx
push r-xdata
call sub_407210
jmp r-xdata
lea ebx [ esi + 0x1 ]
mov dl [ esi ]
cmp dl 0x42
je r-xdata
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
jmp r-xdata
add esp 0xfffffff4
push esi
call free
jmp r-xdata
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
jmp r-xdata
add esp 0xfffffff4
push esi
call free
jmp r-xdata
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push esi
call free
jmp r-xdata
add esp 0xfffffff4
push esi
call free
jmp r-xdata
jmp r-xdata
add esp 0xfffffff4
push esi
call free
jmp r-xdata
jmp r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
push esi
push ebx
push r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_40c150
add esp 0x20
test al al
je r-xdata
add esp 0xfffffff8
mov edi [ ebp + 0x8 ]
push edi
push r-xdata
call sub_407210
mov esi [ ebp - 0x8010 ]
mov eax [ ebp - 0x8008 ]
sub eax esi
sar eax 0x2
je r-xdata
mov esi [ ebp - 0x8010 ]
mov eax [ ebp - 0x8008 ]
sub eax esi
sar eax 0x2
je r-xdata
mov [ ebp - 0xa029 ] 0x0
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
cmp eax 0x1
jbe r-xdata
cmp dl 0x52
je r-xdata
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
push esi
push ebx
push r-xdata
mov edi [ ebp + 0x8 ]
push edi
call sub_40c150
add esp 0x10
test al al
je r-xdata
mov edx r-xdata
mov eax [ r-xdata ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax [ edx + 0x8 ]
mov [ ecx + 0x8 ] eax
mov eax [ edx + 0xc ]
mov [ ecx + 0xc ] eax
jmp r-xdata
shl eax 0x2
cmp eax 0x80
jbe r-xdata
cmp dl 0x42
je r-xdata
mov al [ ebx + 0x1 ]
cmp al 0x3a
je r-xdata
cmp dl 0x41
jne r-xdata
mov esi [ ebp - 0x8010 ]
mov eax [ ebp - 0x8008 ]
sub eax esi
sar eax 0x2
je r-xdata
mov edi [ ebp + 0xc ]
mov esi r-xdata
cld
mov ecx 0x5
[ edi ] [ esi ]
mov esi [ ebp - 0x8010 ]
mov eax [ ebp - 0x8008 ]
sub eax esi
sar eax 0x2
je r-xdata
mov esi [ ebp - 0x8010 ]
mov eax [ ebp - 0x8008 ]
sub eax esi
sar eax 0x2
je r-xdata
add esp 0xfffffff8
push ebx
push r-xdata
call sub_407210
add esp 0xfffffff4
add esp 0xfffffffe
push 0x1
lea eax [ ebp - 0x6000 ]
push eax
lea eax [ ebp - 0x4000 ]
push eax
push ebx
mov edx [ ebp + 0x8 ]
push edx
call sub_40c204
add esp 0x30
test al al
je r-xdata
cmp [ ebp - 0xa029 ] 0x0
jne r-xdata
mov [ ebp - 0xa029 ] 0x1
cmp [ ebx ] 0x5c
jne r-xdata
add esp 0xfffffff8
push r-xdata
push 0x0
xor eax eax
shl eax 0x2
cmp eax 0x80
jbe r-xdata
shl eax 0x2
cmp eax 0x80
jbe r-xdata
add esp 0xfffffff4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_403304
add esp 0x10
test al al
je r-xdata
cmp al 0x5c
jne r-xdata
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push esi
call free
jmp r-xdata
add esp 0xfffffff8
mov edi [ ebp + 0x8 ]
push edi
push r-xdata
call sub_407210
add esp 0xfffffff8
push ebx
mov eax [ ebp + 0xc ]
push eax
call strcpy
mov esi [ ebp - 0x8010 ]
mov eax [ ebp - 0x8008 ]
sub eax esi
sar eax 0x2
je r-xdata
shl eax 0x2
cmp eax 0x80
jbe r-xdata
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
jmp r-xdata
add esp 0xfffffff4
push esi
call free
jmp r-xdata
sub_408fdd
outsd
jne r-xdata
bound esp [ ecx + 0x64 ]
pop edi
popad
insb
insb
outsd
arpl [ eax ] ax
and eax 0x64252f64
and [ edi + 0x66 ] ch
and [ ebp + 0x65 ] ch
insd
outsd
jb r-xdata
lea esp [ ebp - 0x4018 ]
pop ebx
pop esi
leave
retn
mov [ rw-data ] 0x0
add esp 0xfffffff4
push 0x6b
call sub_4019cc
add esp 0x10
cmp eax 0x1
je r-xdata
add [ ebp - 0x77 ] dl
in eax 0xb8
adc [ eax ] al
add al ch
xor edx ecx
add [ eax ] al
push esi
push ebx
cmp [ rw-data ] 0x1
jne r-xdata
add [ eax - 0x7c1a76ab ] dl
in al dx
or [ ecx - 0xf383 ] al
add [ eax ] al
jne r-xdata
add esp 0xfffffff8
push 0x2000
lea esi [ ebp - 0x4000 ]
push esi
call GetConsoleTitleA
add esp 0x8
test eax eax
je r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call GetCurrentProcessId
push eax
call GetTickCount
push eax
push r-xdata
lea ebx [ ebp - 0x2000 ]
push ebx
call sprintf
add esp 0xfffffff4
push ebx
call SetConsoleTitleA
add esp 0x1c
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push 0x28
call Sleep
add esp 0xfffffff4
push ebx
push 0x0
call FindWindowA
mov [ rw-data ] eax
add esp 0xfffffffc
push esi
call SetConsoleTitleA
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
sub_408fec
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
sub_409064
push ebp
mov ebp esp
mov eax 0x4010
call sub_4161a4
push esi
push ebx
cmp [ rw-data ] 0x1
jne r-xdata
lea esp [ ebp - 0x4018 ]
pop ebx
pop esi
leave
retn
mov [ rw-data ] 0x0
add esp 0xfffffff4
push 0x6b
call sub_4019cc
add esp 0x10
cmp eax 0x1
je r-xdata
add esp 0xfffffff8
push 0x2000
lea esi [ ebp - 0x4000 ]
push esi
call GetConsoleTitleA
add esp 0x8
test eax eax
je r-xdata
call GetCurrentProcessId
push eax
call GetTickCount
push eax
push r-xdata
lea ebx [ ebp - 0x2000 ]
push ebx
call sprintf
add esp 0xfffffff4
push ebx
call SetConsoleTitleA
add esp 0x1c
test eax eax
je r-xdata
add esp 0xfffffff4
push 0x28
call Sleep
add esp 0xfffffff4
push ebx
push 0x0
call FindWindowA
mov [ rw-data ] eax
add esp 0xfffffffc
push esi
call SetConsoleTitleA
sub_409158
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] 0x0
call sub_409064
add esp 0xfffffff8
push 0x0
push sub_4091b0
call EnumWindows
mov eax [ rw-data ]
leave
retn
sub_40918c
push ebp
mov ebp esp
sub esp 0x18
add esp 0xfffffff8
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call GetWindowThreadProcessId
mov eax [ ebp - 0x4 ]
cmp [ rw-data ] eax
sete al
leave
retn
sub_4091b0
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
push ebx
call IsWindowVisible
add esp 0xc
test eax eax
je r-xdata
mov eax 0x1
mov ebx [ ebp - 0x18 ]
leave
retn 0x8
add esp 0xfffffff4
push ebx
call sub_40918c
test al al
je r-xdata
cmp ebx [ rw-data ]
je r-xdata
inc [ rw-data ]
sub_4092e2
imul ebp [ esi + 0x73 ] 0x6c6c6174
xor al 0x6a
and [ ebx + 0x74 ] dl
popad
jb r-xdata
call sub_407210
add esp 0xfffffff8
jne r-xdata
push ebx
call ShowWindow
inc eax
add al ch
cmpsb [ esi ] [ edi ]
fdivp st7
inc [ ebx + 0x6af8c4 ]
add [ eax + 0x69 ] ch
cmp ah [ gs : eax ]
outsw
jne r-xdata
push 0x0
clc
and [ fs : edi + 0x69 ] dh
outsb
outsd
ja r-xdata
add [ ebx - 0x3f7af33c ] al
je r-xdata
and eax 0xf6890070
push ebp
mov ebp esp
mov eax 0x200c
call sub_4161a4
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
push ebx
call IsWindowVisible
add esp 0xc
test eax eax
mov eax 0x1
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
pop edi
leave
retn 0x8
add esp 0xfffffffc
push 0x2000
lea esi [ ebp - 0x2000 ]
push esi
push ebx
call GetWindowTextA
add esp 0x4
test eax eax
je r-xdata
mov edi sub_4092e2
mov ecx 0x12
cld
test al 0x0
[ esi ] [ edi ]
jne r-xdata
add esp 0xfffffff8
push ebx
push r-xdata
sub_409388
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
sub_4093fc
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push r-xdata
call GetModuleHandleA
add esp 0xc
test eax eax
je r-xdata
call AllocConsole
add esp 0xfffffff8
push r-xdata
push eax
call GetProcAddress
add esp 0x8
test eax eax
je r-xdata
add esp 0xfffffff4
push 0xffffffff
call eax
add esp 0xc
test eax eax
jne r-xdata
mov al 0x1
leave
retn
call GetLastError
cmp eax 0x5
je r-xdata
sub_409460
push ebp
mov ebp esp
mov eax 0x2014
call sub_4161a4
push ebx
add esp 0xfffffff4
lea ebx [ ebp - 0x2000 ]
push ebx
call sub_403c40
add esp 0xfffffff8
push ebx
push rw-data
call strcpy
add esp 0x20
add esp 0xfffffff8
push r-xdata
push rw-data
call strcat
add esp 0xfffffff8
push rw-data
push r-xdata
call sub_407210
add esp 0x20
add esp 0xfffffff8
push 0x0
push rw-data
call CreateDirectoryA
add esp 0x8
test eax eax
jne r-xdata
mov ebx [ ebp - 0x2018 ]
leave
retn
add esp 0xfffffff8
push r-xdata
push 0x3f1
call sub_4029e0
sub_4094f8
push ebp
mov ebp esp
sub esp 0x18
add esp 0xfffffffc
push 0x2
lea eax [ ebp - 0x2 ]
push eax
push 0x7d1
call sub_401aa8
mov al [ ebp - 0x2 ]
mov [ rw-data ] al
cmp al 0x65
jne r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
jmp r-xdata
leave
retn
sub_40954c
push ebp
mov ebp esp
sub esp 0x34
push ebx
add esp 0xfffffff4
push 0x1388
call Sleep
add esp 0xfffffffc
call sub_409adc
add esp 0x10
test al al
je r-xdata
add esp 0xfffffff8
push 0x0
push 0x2
call ExitWindowsEx
add esp 0xfffffffc
lea eax [ ebp - 0x14 ]
push eax
push 0x28
call GetCurrentProcess
push eax
call OpenProcessToken
add esp 0x4
test eax eax
je r-xdata
mov ebx [ ebp - 0x38 ]
leave
retn
add esp 0xfffffffc
lea ebx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
push r-xdata
push 0x0
call LookupPrivilegeValueA
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] 0x2
add esp 0xfffffffc
push 0x0
push 0x0
push 0x0
push ebx
push 0x0
push [ ebp - 0x14 ]
call AdjustTokenPrivileges
add esp 0xfffffff8
call GetLastError
add esp 0x10
test eax eax
jne r-xdata
sub_409670
push ebp
mov ebp esp
mov eax 0x8010
call sub_4161a4
push edi
push ebx
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x6000 ]
push ebx
push 0x2714
call sub_401aa8
add esp 0xfffffff8
push ebx
push r-xdata
call sub_407210
add esp 0x20
add esp 0xfffffff4
push ebx
call sub_405b40
add esp 0xfffffff8
push ebx
lea ebx [ ebp - 0x4000 ]
push ebx
call sub_402fdc
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
add esp 0x20
cmp ecx 0xfffffffe
je r-xdata
add esp 0xfffffffc
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
mov eax 0x4001
sub eax ecx
push eax
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ebx + ecx - 0x1 ]
push eax
push r-xdata
call GetEnvironmentVariableA
add esp 0xfffffffc
push ebx
push r-xdata
call SetEnvironmentVariableA
add esp 0x8
test eax eax
je r-xdata
mov edi ebx
cld
mov ecx 0xffffffff
[ edi ]
not ecx
cmp [ ebx + ecx - 0x2 ] 0x3b
je r-xdata
add esp 0xfffffffc
call GetLastError
push eax
push ebx
push r-xdata
add esp 0xfffffff8
push ebx
push r-xdata
jmp r-xdata
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
add esp 0x10
call sub_407210
add esp 0x10
add esp 0xfffffffc
push ebx
push r-xdata
lea ebx [ ebp - 0x8000 ]
push ebx
call sprintf
add esp 0xfffffff4
push ebx
call _putenv
lea esp [ ebp - 0x8018 ]
pop ebx
pop edi
leave
retn
sub_4098b8
push ebp
mov ebp esp
mov eax 0x400c
call sub_4161a4
push edi
push esi
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
call sub_401c1c
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
call sub_4094f8
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ ebx ]
mov eax [ ebx + 0x4 ]
sub eax edx
sar eax 0x2
cmp eax 0x1
jbe r-xdata
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x2000 ]
push ebx
push 0x92
call sub_401aa8
add esp 0x10
cmp [ ebp - 0x2000 ] 0x0
je r-xdata
add esp 0xfffffff8
push r-xdata
push [ edx + 0x4 ]
call wcscmp
add esp 0x10
test eax eax
je r-xdata
lea esp [ ebp - 0x4018 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffffc
call sub_407188
push eax
push r-xdata
lea edi [ ebp - 0x4000 ]
push edi
call sprintf
push 0x4
push [ rw-data ]
push edi
push 0x0
call MessageBoxA
add esp 0x10
cmp eax 0x6
jne r-xdata
add esp 0xfffffffc
add esp 0xfffffffe
push 0x1
push ebx
lea ebx [ ebp - 0x4000 ]
push ebx
call sub_403860
add esp 0xfffffff4
push ebx
call SetCurrentDirectoryA
add esp 0x1c
mov eax [ ebx ]
lea ecx [ eax + 0x4 ]
add eax 0x8
mov edx [ ebx + 0x4 ]
cmp eax edx
je r-xdata
add esp 0xfffffff8
push r-xdata
mov eax [ ebx ]
push [ eax + 0x4 ]
call wcscmp
add esp 0x10
test eax eax
je r-xdata
add esp 0xfffffffc
push 0x104
lea esi [ ebp - 0x2000 ]
push esi
call sub_407188
push eax
call GetShortPathNameA
add esp 0xfffffffc
push 0x104
lea ebx [ ebp - 0x1ef0 ]
push ebx
call GetWindowsDirectoryA
add esp 0xfffffff8
push esi
push ebx
push r-xdata
push edi
call sprintf
add esp 0x20
add esp 0xfffffff8
push edi
push r-xdata
call sub_407210
add esp 0xfffffffc
push 0x10
push 0x0
lea esi [ ebp - 0x1de0 ]
push esi
call memset
add esp 0x20
add esp 0xfffffffc
push 0x44
push 0x0
lea ebx [ ebp - 0x1dd0 ]
push ebx
call memset
mov [ ebp - 0x1dd0 ] 0x44
add esp 0xfffffff8
push esi
push ebx
push 0x0
push 0x0
push 0x20
push 0x1
push 0x0
push 0x0
push edi
push 0x0
call CreateProcessA
add esp 0x18
test eax eax
jne r-xdata
add [ ebx + 0x4 ] 0xfffffffc
mov [ rw-data ] 0x1
add esp 0xfffffffc
sub edx eax
and edx 0xfffffffc
push edx
push eax
push ecx
call memmove
add esp 0x10
add esp 0xfffffff8
push r-xdata
mov eax [ ebx ]
push [ eax + 0x4 ]
call wcscmp
add esp 0x10
test eax eax
je r-xdata
add esp 0xfffffff8
call GetLastError
push eax
push r-xdata
call sub_407210
add esp 0xfffffff8
push r-xdata
mov eax [ ebx ]
push [ eax + 0x4 ]
call wcscmp
add esp 0x10
test eax eax
jne r-xdata
sub_409adc
push ebp
mov ebp esp
sub esp 0xa8
mov [ ebp - 0xa0 ] 0x94
add esp 0xfffffff4
lea eax [ ebp - 0xa0 ]
push eax
call GetVersionExA
test eax eax
je r-xdata
mov al 0x0
cmp [ ebp - 0x90 ] 0x2
sete al
jmp r-xdata
leave
retn
sub_409b14
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
add esp 0xfffffff4
mov eax [ ebp + 0xc ]
push eax
call wcslen
add esp 0x10
test eax eax
jne r-xdata
add esp 0xfffffff8
movzx eax [ ebp + 0x14 ]
push eax
mov edi [ ebp + 0xc ]
add edi 0x2
push edi
call wcschr
mov [ ebp - 0x8 ] eax
add esp 0x10
test eax eax
jne r-xdata
add esp 0xfffffff8
push 0x0
push 0x3ef
call sub_4029e0
add esp 0xfffffff4
mov esi [ ebp - 0x8 ]
sub esi [ ebp + 0x10 ]
mov ebx esi
sar ebx 0x1
lea eax [ ebx * 2 + 0x2 ]
push eax
call sub_415f94
mov edx eax
mov [ ebp - 0x4 ] edx
add esp 0x10
mov ecx [ ebp + 0x10 ]
cmp [ ebp + 0xc ] ecx
jne r-xdata
add esp 0xfffffff8
push 0x0
push 0x3ef
call sub_4029e0
add esp 0xfffffffc
mov ebx [ ebp + 0xc ]
sub ebx [ ebp + 0x10 ]
mov eax ebx
sar eax 0x1
push eax
mov eax [ ebp + 0x10 ]
push eax
push edx
call wcsncpy
add esp 0xfffffffc
mov eax [ ebp - 0x8 ]
sub eax [ ebp + 0xc ]
sar eax 0x1
dec eax
push eax
push edi
add ebx [ ebp - 0x4 ]
push ebx
call wcsncpy
add esp 0x20
add esp 0xfffffffc
lea eax [ ebx - 0x1 ]
push eax
push edi
push edx
call wcsncpy
add esp 0x10
jmp r-xdata
add esp 0xfffffffc
push eax
push edx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41b75c
test edx edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + esi - 0x2 ] 0x0
lea eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x4
add eax 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
add [ eax + 0x4 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2 ] 0x20
je r-xdata
sub_409c3c
push ebp
mov ebp esp
mov eax 0x400c
call sub_4161a4
push edi
push esi
push ebx
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
add esp 0xfffffff8
push 0x2000
lea ebx [ ebp - 0x4000 ]
push ebx
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
push ecx
push edx
push 0x0
push 0x0
call MultiByteToWideChar
push esi
push ebx
call sub_409c90
lea esp [ ebp - 0x4018 ]
pop ebx
pop esi
pop edi
leave
retn
sub_409c90
push ebp
mov ebp esp
sub esp 0x3c
push edi
push esi
push ebx
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
add esp 0xfffffff8
lea eax [ ebp - 0x10 ]
push eax
push edx
call sub_409dd0
xor edi edi
add esp 0x10
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
sub edx eax
mov eax edx
sar eax 0x2
cmp edi eax
jae r-xdata
mov esi [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
sub eax esi
sar eax 0x2
je r-xdata
xor ebx ebx
lea esi [ esi ]
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
pop edi
leave
retn
shl eax 0x2
cmp eax 0x80
jbe r-xdata
add esp 0xfffffffc
push eax
push edx
push esi
call sub_41b940
add esp 0x10
test edx edx
je r-xdata
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push esi
call free
jmp r-xdata
add esp 0xfffffff4
add esp 0xfffffff4
mov eax ebx
add eax [ ebp - 0x10 ]
push [ eax ]
call wcslen
inc eax
push eax
call sub_415f94
mov edx eax
mov [ ebp - 0x24 ] edx
add esp 0x20
add esp 0xfffffffc
mov eax ebx
add eax [ ebp - 0x10 ]
push [ eax ]
push r-xdata
push edx
call sprintf
lea eax [ ebp - 0x24 ]
add esp 0x10
mov edx [ esi + 0x4 ]
cmp edx [ esi + 0x8 ]
je r-xdata
add [ esi + 0x4 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ edx ] eax
add esp 0xfffffff4
mov eax ebx
add eax [ ebp - 0x10 ]
push [ eax ]
call sub_4160b0
add esp 0x10
add ebx 0x4
inc edi
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
sub edx eax
mov eax edx
sar eax 0x2
cmp edi eax
jb r-xdata
sub_409dd0
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
jmp r-xdata
add esp 0xfffffff4
push esi
call wcslen
add esp 0x10
test eax eax
jne r-xdata
add esp 0xfffffff8
push 0x22
push esi
call wcschr
mov edi eax
add esp 0xfffffff8
push 0x27
push esi
call wcschr
mov ebx eax
add esp 0x20
add esp 0xfffffff8
push 0x20
push esi
call wcschr
mov [ ebp - 0xc ] eax
add esp 0x10
cmp eax esi
jne r-xdata
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
add esi 0x2
jmp r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0xc ] edi
jae r-xdata
add esp 0xfffffff4
add esp 0xfffffff4
push esi
call wcslen
lea eax [ eax * 2 + 0x2 ]
push eax
call sub_415f94
mov [ ebp - 0x8 ] eax
add esp 0x20
add esp 0xfffffff8
push esi
push eax
call wcscpy
lea eax [ ebp - 0x8 ]
add esp 0x10
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
push 0x27
push esi
push ebx
mov ecx [ ebp + 0xc ]
push ecx
call sub_409b14
mov esi eax
jmp r-xdata
push 0x22
push esi
push edi
mov eax [ ebp + 0xc ]
push eax
call sub_409b14
mov esi eax
jmp r-xdata
cmp edi ebx
jae r-xdata
add esp 0xfffffff4
mov edi [ ebp - 0xc ]
sub edi esi
mov ebx edi
sar ebx 0x1
lea eax [ ebx * 2 + 0x2 ]
push eax
call sub_415f94
mov [ ebp - 0x4 ] eax
add esp 0xfffffffc
push ebx
push esi
push eax
call wcsncpy
mov eax [ ebp - 0x4 ]
mov [ edi + eax ] 0x0
lea eax [ ebp - 0x4 ]
add esp 0x20
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
je r-xdata
cmp [ ebp - 0xc ] ebx
jae r-xdata
add esp 0xfffffffc
push eax
push edx
mov ecx [ ebp + 0xc ]
push ecx
call sub_41b75c
add esp 0x10
test edx edx
je r-xdata
add esp 0x10
add esp 0xfffffffc
push eax
push edx
mov ecx [ ebp + 0xc ]
push ecx
call sub_41b75c
add esp 0x10
test edx edx
je r-xdata
mov eax [ ebp + 0xc ]
add [ eax + 0x4 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
add [ eax + 0x4 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
add esp 0xfffffff4
push esi
call wcslen
lea esi [ esi + eax * 2 ]
mov esi [ ebp - 0xc ]
add esi 0x2
jmp r-xdata
sub_409f6c
outsd
jne r-xdata
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and [ edi + 0x66 ] ch
and [ ebp + 0x65 ] ch
insd
outsd
jb r-xdata
imul ebp [ cs : esi + 0x73 ] 0x6c6c6174
outsb
je r-xdata
nop
nop
arpl [ edi + 0x6d ] bp
das
imul ebp [ esi + 0x73 ] 0x6c6c6174
xor al 0x6a
das
jb r-xdata
add [ ecx - 0x1a76aa0a ] cl
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x2000 ]
push ebx
push 0x2713
call sub_401aa8
add esp 0xfffffffc
add esp 0xfffffffe
push 0x1
push ebx
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ esi + ecx - 0x1 ]
push eax
call sub_403860
mov edi esi
mov al 0x0
cld
movsd [ edi ] [ esi ]
insd
das
insb
popad
jne r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
add esp 0xfffffff8
push r-xdata
push esi
call strcat
add esp 0xfffffff8
push r-xdata
push esi
call strcat
add esp 0xfffffff8
push r-xdata
push esi
call strcat
add esp 0x10
jae r-xdata
arpl [ eax + 0x65 ] bp
jb r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx 0xffffffff
[ edi ]
not ecx
add esp 0x20
cmp [ esi + ecx - 0x2 ] 0x5c
je r-xdata
dec [ ecx - 0x3ff4f09 ]
xor al 0x6a
pop esp
imul esi [ edx + ebp * 2 ] 0x746e7572
popad
insb
insb
in eax 0x57
push esi
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x69
jne r-xdata
push edi
imul ebp [ esi + 0x4c ] 0x636e7561
push 0x63007265
outsd
insd
das
js r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
movsw [ edi ] [ esi ]
mov esi r-xdata
cld
mov ecx 0x7
[ edi ] [ esi ]
mov esi r-xdata
cld
mov ecx 0xa
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
jmp r-xdata
imul ebp [ ebp + 0x65 ] 0x72616a2e
add [ ebx ] bh
add [ ebp - 0x76aaff8a ] cl
xor al 0x6a
das
jb r-xdata
pop esi
pop edi
leave
retn
call sub_4161a4
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x69
jne r-xdata
outsb
je r-xdata
in eax 0xb8
or al 0x20
add [ eax ] al
add [ ebp - 0x77 ] dl
insd
das
push edi
imul ebp [ esi + 0x4c ] 0x636e7561
push 0x8d007265
jbe sub_40a040
sub_409f7c
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
sub_40a040
push ebp
mov ebp esp
push edi
push esi
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x69
jne r-xdata
mov esi r-xdata
cld
mov ecx 0x7
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov esi r-xdata
cld
mov ecx 0xa
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
jmp r-xdata
pop esi
pop edi
leave
retn
sub_40a098
push ebp
mov ebp esp
mov eax 0x200c
call sub_4161a4
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x69
jne r-xdata
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x2000 ]
push ebx
push 0x2713
call sub_401aa8
add esp 0xfffffffc
add esp 0xfffffffe
push 0x1
push ebx
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ esi + ecx - 0x1 ]
push eax
call sub_403860
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
add esp 0x20
cmp [ esi + ecx - 0x2 ] 0x5c
je r-xdata
add esp 0xfffffff8
push r-xdata
push esi
call strcat
add esp 0xfffffff8
push r-xdata
push esi
call strcat
add esp 0xfffffff8
push r-xdata
push esi
call strcat
add esp 0x10
sub_40a164
push ebp
mov ebp esp
mov eax 0x402c
call sub_4161a4
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
push 0x14
call sub_415f94
mov [ ebp - 0x4004 ] eax
add esp 0xfffffff4
push 0x6b
call sub_4019cc
add esp 0x20
cmp eax 0x1
jne r-xdata
add esp 0xfffffff8
push r-xdata
add esp 0xfffffff8
push r-xdata
jmp r-xdata
add esp 0xfffffffc
push eax
push edx
push ebx
call sub_41b75c
add esp 0x10
test edx edx
je r-xdata
push [ ebp - 0x4004 ]
call wcscpy
add esp 0x10
lea eax [ ebp - 0x4004 ]
mov edx [ ebx + 0x4 ]
cmp edx [ ebx + 0x8 ]
je r-xdata
add esp 0xfffffffc
push eax
push edx
push ebx
call sub_41b75c
add esp 0x10
test edx edx
je r-xdata
add [ ebx + 0x4 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x4004 ]
mov [ edx ] eax
add esp 0xfffffff8
push r-xdata
push [ ebp - 0x400c ]
call wcscpy
add esp 0x10
add esp 0xfffffffc
push 0x2000
lea edi [ ebp - 0x4000 ]
push edi
push 0x67
call sub_401aa8
add esp 0xfffffff4
push edi
call sub_405b40
add esp 0x20
cmp [ ebp - 0x4000 ] 0x24
je r-xdata
add [ ebx + 0x4 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x4008 ]
mov [ edx ] eax
add esp 0xfffffff4
push 0x4000
call sub_415f94
mov [ ebp - 0x4008 ] eax
add esp 0xfffffffc
push 0x2000
lea esi [ ebp - 0x2000 ]
push esi
push 0x7a
call sub_401aa8
add esp 0x20
add esp 0xfffffffc
push esi
push r-xdata
push [ ebp - 0x4008 ]
call swprintf
lea eax [ ebp - 0x4008 ]
add esp 0x10
mov edx [ ebx + 0x4 ]
cmp edx [ ebx + 0x8 ]
je r-xdata
add esp 0xfffffffc
push eax
push edx
push ebx
call sub_41b75c
add esp 0x10
test edx edx
je r-xdata
add esp 0xfffffff8
push edi
push esi
call strcpy
add esp 0xfffffffc
add esp 0xfffffffe
push 0x1
push edi
push esi
call sub_403860
jmp r-xdata
add esp 0xfffffff4
push 0x4000
call sub_415f94
mov [ ebp - 0x400c ] eax
add esp 0xfffffff4
push 0x66
call sub_4019cc
add esp 0x20
test eax eax
je r-xdata
add esp 0xfffffff8
push r-xdata
push [ ebp - 0x4010 ]
call wcscpy
add esp 0x10
add esp 0xfffffffc
push 0x2000
lea edi [ ebp - 0x4000 ]
push edi
push 0x69
call sub_401aa8
add esp 0xfffffff4
push edi
call sub_405b40
add esp 0x20
cmp [ ebp - 0x4000 ] 0x24
je r-xdata
add [ ebx + 0x4 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x400c ]
mov [ edx ] eax
lea eax [ ebp - 0x400c ]
mov edx [ ebx + 0x4 ]
cmp edx [ ebx + 0x8 ]
je r-xdata
add esp 0x10
add esp 0xfffffff8
push 0x2000
push [ ebp - 0x400c ]
lea edx [ ebp - 0x2000 ]
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
push ecx
push edx
push 0x0
call AreFileApisANSI
test eax eax
sete al
movzx eax al
push eax
call MultiByteToWideChar
add esp 0x8
jmp r-xdata
add esp 0xfffffffc
push eax
push edx
push ebx
call sub_41b75c
add esp 0x10
test edx edx
je r-xdata
add esp 0xfffffff8
push edi
lea eax [ ebp - 0x2000 ]
push eax
call strcpy
add esp 0xfffffffc
add esp 0xfffffffe
push 0x1
push edi
lea eax [ ebp - 0x2000 ]
push eax
call sub_403860
jmp r-xdata
add esp 0xfffffff4
push 0x4000
call sub_415f94
mov [ ebp - 0x4010 ] eax
add esp 0xfffffff4
push 0x68
call sub_4019cc
add esp 0x20
test eax eax
je r-xdata
add esp 0xfffffff8
push r-xdata
add esp 0xfffffff8
push r-xdata
jmp r-xdata
add [ ebx + 0x4 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x4010 ]
mov [ edx ] eax
lea eax [ ebp - 0x4010 ]
mov edx [ ebx + 0x4 ]
cmp edx [ ebx + 0x8 ]
je r-xdata
add esp 0x10
add esp 0xfffffff8
push 0x2000
push [ ebp - 0x4010 ]
lea edx [ ebp - 0x2000 ]
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
push ecx
push edx
push 0x0
call AreFileApisANSI
test eax eax
sete al
movzx eax al
push eax
call MultiByteToWideChar
add esp 0x8
jmp r-xdata
add esp 0xfffffffc
push eax
push edx
push ebx
call sub_41b75c
test edx edx
je r-xdata
push [ ebp - 0x4014 ]
call wcscpy
add esp 0x10
lea eax [ ebp - 0x4014 ]
mov edx [ ebx + 0x4 ]
cmp edx [ ebx + 0x8 ]
je r-xdata
add esp 0xfffffff4
push 0x14
call sub_415f94
mov [ ebp - 0x4014 ] eax
add esp 0xfffffff4
push 0x6a
call sub_4019cc
add esp 0x20
test eax eax
je r-xdata
add [ ebx + 0x4 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x4014 ]
mov [ edx ] eax
lea esp [ ebp - 0x4038 ]
pop ebx
pop esi
pop edi
leave
retn
sub_40a554
push ebp
mov ebp esp
mov eax 0x401c
call sub_4161a4
push edi
push esi
push ebx
call sub_4034b8
mov [ ebp - 0x4004 ] eax
add esp 0xfffffffc
push 0x2000
lea esi [ ebp - 0x2000 ]
push esi
push eax
mov eax [ rw-data ]
call eax
add esp 0xfffffffc
push esi
lea ebx [ ebp - 0x4000 ]
push ebx
call strcpy
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
mov [ ebx + ecx - 0x5 ] al
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
add esp 0x20
add esp 0xfffffff8
push r-xdata
push ebx
call fopen
mov edi eax
add esp 0xfffffff4
push edi
push ebx
push esi
mov eax [ ebp - 0x4004 ]
push eax
push r-xdata
call sub_407210
add esp 0x30
test edi edi
jne r-xdata
mov eax edi
lea esp [ ebp - 0x4028 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff8
push r-xdata
push esi
call strcat
add esp 0xfffffff8
push r-xdata
push esi
call fopen
mov edi eax
add esp 0x20
add esp 0xfffffffc
push edi
push esi
push r-xdata
call sub_407210
sub_40a624
outsd
jne r-xdata
outsd
arpl [ eax ] ax
pop esp
push 0x72
pop esp
bound ebp [ ecx + 0x6e ]
pop esp
push 0x61
jbe r-xdata
and [ edi + 0x66 ] ch
and [ ebp + 0x65 ] ch
insd
outsd
jb r-xdata
inc [ ebx - 0x3f7aef3c ]
r-xdata
popad
add [ ecx - 0x1a76aa0a ] cl
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
add esp 0xfffffff4
push ebx
call sub_403304
add esp 0x10
test al al
jne r-xdata
add esp 0xfffffff8
push esi
lea ebx [ ebp - 0x2000 ]
push ebx
call strcpy
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
add [ esp + ebp * 2 + 0x69 ] bl
bound ebx [ esp + esi * 2 + 0x6f ]
outsd
insb
jae r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov al 0x1
add esp 0xfffffff8
push esi
push ebx
call strcpy
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
leave
retn
je r-xdata
push ebx
call strcpy
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
add esp 0x20
add esp 0xfffffff4
push 0x83
call sub_4019cc
add esp 0x10
test eax eax
push 0x61
jb r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop esp
bound ebp [ ecx + 0x6e ]
pop esp
push 0x61
jbe r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
add esp 0x20
add esp 0xfffffff4
push ebx
call sub_403304
jmp r-xdata
cmpsb [ esi ] [ edi ]
inc eax
add [ ebx - 0x18 ] dl
dec esi
cld
add [ eax ] al
r-xdata
add [ ebx - 0x3b7cdf3c ] al
hlt
add [ ebp - 0x76aaff8a ] cl
in eax 0xb8
adc [ eax ] ah
add [ eax ] al
call sub_4161a4
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
add esp 0xfffffff8
push esi
sub_40a634
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
sub_40a6d0
push ebp
mov ebp esp
mov eax 0x2010
call sub_4161a4
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
add esp 0xfffffff8
push esi
push ebx
call strcpy
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
add esp 0x20
add esp 0xfffffff4
push 0x83
call sub_4019cc
add esp 0x10
test eax eax
je r-xdata
add esp 0xfffffff4
push ebx
call sub_403304
add esp 0x10
test al al
jne r-xdata
add esp 0xfffffff8
push esi
lea ebx [ ebp - 0x2000 ]
push ebx
call strcpy
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
add esp 0x20
add esp 0xfffffff4
push ebx
call sub_403304
jmp r-xdata
mov al 0x1
add esp 0xfffffff8
push esi
push ebx
call strcpy
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
leave
retn
sub_40a774
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
add esp 0xfffffff8
push edi
push ebx
call strcpy
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea ebx [ ebx + ecx - 0x1 ]
mov edi esi
cld
mov ecx 0xffffffff
[ edi ]
not ecx
xor eax eax
cmp eax ecx
jge r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
mov esi esi
mov [ eax + ebx ] dl
mov [ eax + ebx ] 0x2f
jmp r-xdata
mov dl [ eax + esi ]
cmp dl 0x5c
jne r-xdata
inc eax
cmp eax ecx
jl r-xdata
sub_40a810
push ebp
mov ebp esp
mov eax 0x201c
call sub_4161a4
push edi
push esi
push ebx
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x2010 ] eax
mov [ ebp - 0x200c ] edx
mov esi [ ebp + 0x14 ]
add esp 0xfffffffc
push r-xdata
push ecx
lea ebx [ ebp - 0x2000 ]
push ebx
call sub_40a774
add esp 0xfffffff4
push 0x0
lea eax [ ebp - 0x2004 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push ebx
push 0x80000001
call RegCreateKeyExA
add esp 0x1c
test eax eax
jne r-xdata
lea esp [ ebp - 0x2028 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff8
push 0x8
lea eax [ ebp - 0x2010 ]
push eax
push 0x3
push 0x0
push r-xdata
push [ ebp - 0x2004 ]
call RegSetValueExA
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
push eax
push esi
push 0x1
push 0x0
push r-xdata
push [ ebp - 0x2004 ]
call RegSetValueExA
add esp 0xfffffffc
push [ ebp - 0x2004 ]
call RegCloseKey
sub_40a920
push ebp
mov ebp esp
mov eax 0x2020
call sub_4161a4
push esi
push ebx
add esp 0xfffffffc
push r-xdata
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x2000 ]
push ebx
call sub_40a774
add esp 0xfffffff4
push 0x0
lea esi [ ebp - 0x2004 ]
push esi
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push ebx
push 0x80000002
call RegCreateKeyExA
add esp 0x1c
test eax eax
jne r-xdata
add esp 0xfffffff4
push 0x0
push esi
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push ebx
push 0x80000001
call RegCreateKeyExA
add esp 0xc
test eax eax
jne r-xdata
add esp 0xfffffff4
push [ ebp - 0x2004 ]
call RegCloseKey
jmp r-xdata
lea esp [ ebp - 0x2028 ]
pop ebx
pop esi
leave
retn
add esp 0xfffffff4
push [ ebp - 0x2004 ]
call RegCloseKey
sub_40a9c4
push ebp
mov ebp esp
mov eax 0x802c
call sub_4161a4
push edi
push esi
push ebx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8019 ] 0x0
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
add esp 0xfffffff4
lea eax [ ebp - 0x8004 ]
push eax
push 0x20019
push 0x0
push r-xdata
push edx
call RegOpenKeyExA
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebp - 0x8019 ]
lea esp [ ebp - 0x8038 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax 0x2000
mov [ ebp - 0x8014 ] eax
mov [ ebp - 0x8018 ] eax
xor esi esi
jmp r-xdata
lea eax [ ebp - 0x8010 ]
push eax
lea eax [ ebp - 0x8014 ]
push eax
lea eax [ ebp - 0x2000 ]
push eax
push 0x0
lea eax [ ebp - 0x8018 ]
push eax
lea ebx [ ebp - 0x4000 ]
push ebx
push esi
push [ ebp - 0x8004 ]
call RegEnumKeyExA
cmp eax 0x103
jne r-xdata
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
xor eax eax
cmp eax ecx
jge r-xdata
add esp 0xfffffff4
push [ ebp - 0x8004 ]
call RegCloseKey
add esp 0xfffffff4
add esp 0xfffffffe
push 0x1
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
lea edi [ ebp - 0x8000 ]
push edi
lea ebx [ ebp - 0x6000 ]
push ebx
call sub_40b128
add esp 0x20
test al al
je r-xdata
mov dl [ eax + ebx ]
cmp dl 0x2f
jne r-xdata
inc esi
mov [ ebp - 0x8014 ] 0x2000
mov [ ebp - 0x8018 ] 0x2000
add esp 0xfffffff8
mov eax [ ebp + 0x10 ]
push eax
push edi
call strcmp
add esp 0x10
test eax eax
jle r-xdata
mov [ eax + ebp - 0x6000 ] dl
mov [ eax + ebp - 0x6000 ] 0x5c
jmp r-xdata
add esp 0xfffffff8
push edi
mov eax [ ebp + 0x10 ]
push eax
call strcpy
add esp 0xfffffff8
push ebx
mov eax [ ebp + 0xc ]
push eax
call strcpy
mov [ ebp - 0x8019 ] 0x1
add esp 0x20
inc eax
cmp eax ecx
jl r-xdata
sub_40ab2c
push ebp
mov ebp esp
mov eax 0x203c
call sub_4161a4
push edi
push esi
push ebx
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x2020 ] eax
mov [ ebp - 0x201c ] edx
add esp 0xfffffffc
push r-xdata
push ecx
lea ebx [ ebp - 0x2000 ]
push ebx
call sub_40a774
add esp 0xfffffff4
lea eax [ ebp - 0x2004 ]
push eax
push 0x20019
push 0x0
push ebx
push 0x80000001
call RegOpenKeyExA
add esp 0x1c
test eax eax
jne r-xdata
mov al 0x0
mov [ ebp - 0x2008 ] 0x8
add esp 0xfffffff8
lea eax [ ebp - 0x2008 ]
mov [ ebp - 0x2024 ] eax
push eax
lea esi [ ebp - 0x2010 ]
push esi
lea ebx [ ebp - 0x2014 ]
push ebx
push 0x0
push r-xdata
push [ ebp - 0x2004 ]
call RegQueryValueExA
add esp 0x8
test eax eax
jne r-xdata
add esp 0xfffffff4
push [ ebp - 0x2004 ]
call RegCloseKey
cmp [ ebp - 0x2008 ] 0x8
jne r-xdata
lea edi [ ebp - 0x2020 ]
mov ecx 0x8
cld
test al 0x0
[ esi ] [ edi ]
jne r-xdata
mov [ ebp - 0x2008 ] 0x2000
add esp 0xfffffff8
mov eax [ ebp - 0x2024 ]
push eax
push [ ebp + 0x14 ]
push ebx
push 0x0
push r-xdata
push [ ebp - 0x2004 ]
call RegQueryValueExA
test eax eax
sete al
jmp r-xdata
lea esp [ ebp - 0x2048 ]
pop ebx
pop esi
pop edi
leave
retn
sub_40ac38
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
add esp 0xfffffffc
push 0x0
push 0x80
push 0x2
push 0x0
push 0x3
push 0xc0000000
push eax
call CreateFileA
mov ebx eax
add esp 0x4
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x28 ]
leave
retn
add esp 0xfffffffc
push 0x2
push 0x1
push 0x0
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcess
push eax
push ebx
call GetCurrentProcess
push eax
call DuplicateHandle
add esp 0x4
test eax eax
jne r-xdata
add esp 0xfffffff4
push ebx
call CloseHandle
mov [ ebp - 0x4 ] 0x0
sub_40ad5c
push ebp
mov ebp esp
mov eax 0x40fc
call sub_4161a4
push edi
push esi
push ebx
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x40e8 ] eax
mov [ ebp - 0x40e4 ] edx
add esp 0xfffffffc
push 0x2000
lea edi [ ebp - 0x2000 ]
push edi
mov edx [ ebp + 0x8 ]
push edx
call GetShortPathNameA
add esp 0xfffffffc
push r-xdata
push edi
call strcat
add esp 0xfffffff4
lea eax [ ebp - 0x4000 ]
mov [ ebp - 0x40d8 ] eax
push eax
call sub_403c40
add esp 0x20
add esp 0xfffffff4
mov edx [ ebp - 0x40d8 ]
push edx
call sub_40ac38
mov [ ebp - 0x40dc ] eax
add esp 0xfffffffc
push 0x10
push 0x0
lea esi [ ebp - 0x4010 ]
push esi
call memset
add esp 0x20
add esp 0xfffffffc
push 0x44
push 0x0
lea ebx [ ebp - 0x4060 ]
push ebx
call memset
mov [ ebp - 0x4060 ] 0x44
mov [ ebp - 0x4034 ] 0x101
mov eax [ ebp - 0x40dc ]
mov [ ebp - 0x4020 ] eax
mov [ ebp - 0x4030 ] 0x0
add esp 0xfffffff8
push esi
push ebx
push 0x0
push 0x0
push 0x20
push 0x1
push 0x0
push 0x0
push edi
push 0x0
call CreateProcessA
add esp 0x18
test eax eax
jne r-xdata
add esp 0xfffffff8
push 0xea60
push [ ebp - 0x4010 ]
call WaitForSingleObject
lea eax [ ebp - 0x40d4 ]
push eax
push [ ebp - 0x4010 ]
call GetExitCodeProcess
push [ ebp - 0x40d4 ]
push r-xdata
call sub_407210
mov eax [ ebp - 0x40d4 ]
add esp 0x10
cmp eax 0x103
jne r-xdata
call GetLastError
push eax
mov edx [ ebp - 0x40d8 ]
push edx
push edi
push r-xdata
call sub_407210
add esp 0xfffffff4
mov eax [ ebp - 0x40dc ]
push eax
call CloseHandle
mov edx [ ebp - 0x40d8 ]
push edx
call remove
mov al 0x0
jmp r-xdata
test eax eax
je r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0xfffffff8
push 0x1
push [ ebp - 0x4010 ]
call TerminateProcess
add esp 0x18
jmp r-xdata
lea esp [ ebp - 0x4108 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push [ ebp - 0x4010 ]
call CloseHandle
push [ ebp - 0x400c ]
call CloseHandle
mov eax [ ebp - 0x40dc ]
push eax
call CloseHandle
mov [ ebp - 0x40e9 ] 0x0
add esp 0xc
cmp [ ebp - 0x40d4 ] 0x0
jne r-xdata
push r-xdata
mov eax [ ebp - 0x40e8 ]
mov edx [ ebp - 0x40e4 ]
push edx
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_40a810
add esp 0x10
add esp 0xfffffff4
lea eax [ ebp - 0x4000 ]
push eax
call remove
mov al [ ebp - 0x40e9 ]
add esp 0xfffffff8
push r-xdata
mov edx [ ebp - 0x40d8 ]
push edx
call fopen
mov esi eax
add esp 0xfffffffc
push esi
push 0x64
lea ebx [ ebp - 0x40d0 ]
push ebx
call fgets
add esp 0x20
test eax eax
je r-xdata
add esp 0xfffffff4
push esi
call fclose
add esp 0x10
add esp 0xfffffffc
push 0xe
push r-xdata
push ebx
call strncmp
add esp 0x10
test eax eax
jne r-xdata
add esp 0xfffffffc
push 0x11
push r-xdata
push ebx
call strncmp
add esp 0x10
test eax eax
jne r-xdata
lea edx [ ebp - 0x40c2 ]
jmp r-xdata
lea edx [ ebp - 0x40bf ]
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea ebx [ ecx - 0x3 ]
add esp 0xfffffffc
push ebx
push edx
mov edx [ ebp + 0x14 ]
push edx
call strncpy
mov eax [ ebp + 0x14 ]
mov [ ebx + eax ] 0x0
mov [ ebp - 0x40e9 ] 0x1
add esp 0xfffffff8
push eax
push r-xdata
call sub_407210
add esp 0x20
sub_40b020
push ebp
mov ebp esp
mov eax 0x2010
call sub_4161a4
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov dl [ ebp + 0x14 ]
mov al [ ebp + 0x18 ]
mov [ rw-data ] al
add esp 0xfffffff4
add esp 0xfffffffe
push dx
push ecx
push ebx
lea eax [ ebp - 0x2000 ]
push eax
push esi
call sub_40b128
mov [ rw-data ] 0x1
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
leave
retn
sub_40b128
push ebp
mov ebp esp
mov eax 0x201c
call sub_4161a4
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
add esp 0xfffffff4
movzx eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov edx [ ebp + 0x10 ]
push edx
push esi
push r-xdata
call sub_407210
add esp 0x20
add esp 0xfffffffc
add esp 0xfffffffe
push 0x0
push esi
lea ebx [ ebp - 0x2000 ]
push ebx
call sub_403860
add esp 0xfffffff8
push ebx
push esi
call strcpy
mov bl 0x0
add esp 0x20
add esp 0xfffffff8
lea eax [ ebp - 0x2008 ]
push eax
push esi
call sub_40337c
add esp 0x10
test al al
je r-xdata
add esp 0xfffffff4
push r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
mov [ edi ] 0x0
add esp 0x10
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff8
movzx eax bl
push eax
push r-xdata
call sub_407210
mov al bl
lea esp [ ebp - 0x2028 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push 0x6b
call sub_4019cc
add esp 0x10
cmp eax 0x1
jne r-xdata
push edi
mov eax [ ebp - 0x2008 ]
mov edx [ ebp - 0x2004 ]
push edx
push eax
push esi
call sub_40ad5c
add esp 0x10
test al al
je r-xdata
push edi
mov eax [ ebp - 0x2008 ]
mov edx [ ebp - 0x2004 ]
push edx
push eax
push esi
call sub_40ab2c
add esp 0x10
test al al
je r-xdata
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
mov edx [ r-xdata ]
mov [ eax + esi - 0x4 ] edx
movzx edx [ r-xdata ]
mov [ eax + esi ] dx
add esp 0xfffffff4
push esi
call sub_403304
mov bl al
add esp 0x10
add esp 0xfffffff4
push r-xdata
jmp r-xdata
add esp 0xfffffff8
push edi
push r-xdata
call sub_407210
push edi
mov eax [ ebp - 0x2008 ]
mov edx [ ebp - 0x2004 ]
push edx
push eax
push esi
call sub_40a810
add esp 0x20
add esp 0xfffffffe
mov dl [ ebp + 0x18 ]
push dx
mov eax [ ebp + 0x14 ]
push eax
mov edx [ ebp + 0x10 ]
push edx
push edi
call sub_40b3bc
mov bl al
jmp r-xdata
add esp 0xfffffff8
push edi
push r-xdata
call sub_407210
add esp 0xfffffffe
mov dl [ ebp + 0x18 ]
push dx
mov eax [ ebp + 0x14 ]
push eax
mov edx [ ebp + 0x10 ]
push edx
push edi
call sub_40b3bc
mov bl al
add esp 0x20
jmp r-xdata
call sub_407210
add esp 0x10
test bl bl
je r-xdata
sub_40b2e0
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
add esp 0xfffffffc
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea edx [ ecx - 0x1 ]
mov edi esi
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
cmp edx eax
jae r-xdata
mov edi esi
mov edi ebx
jmp r-xdata
mov al 0x0
jmp r-xdata
add esp 0xfffffffc
mov edi [ ebp + 0x10 ]
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea edx [ ecx - 0x1 ]
mov edi esi
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
cmp edx eax
jae r-xdata
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
push eax
push ebx
push esi
call strncmp
add esp 0x10
test eax eax
jl r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
mov edi esi
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov al 0x1
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
call strncmp
test eax eax
jle r-xdata
sub_40b3bc
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
add esp 0xfffffffc
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
push eax
push esi
push ebx
call strncmp
add esp 0x10
test eax eax
jl r-xdata
add esp 0xfffffff4
push 0x82
call sub_4019cc
add esp 0x10
test eax eax
jne r-xdata
mov al 0x0
jmp r-xdata
add esp 0xfffffffc
mov edi [ ebp + 0x10 ]
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ebx
call strncmp
test eax eax
jg r-xdata
add esp 0xfffffff8
push r-xdata
push ebx
call strstr
add esp 0x10
test eax eax
jne r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
mov al 0x1
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0xfffffff8
push r-xdata
push ebx
call strstr
add esp 0x10
test eax eax
jne r-xdata
add esp 0xfffffff8
push r-xdata
push ebx
call strstr
add esp 0x10
test eax eax
je r-xdata
sub_40b48c
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov bl 0x0
add esp 0xfffffff4
lea eax [ ebp - 0x4 ]
push eax
push 0x20019
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call RegOpenKeyExA
add esp 0xc
test eax eax
jne r-xdata
mov al bl
mov ebx [ ebp - 0x28 ]
leave
retn
add esp 0xfffffff8
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call RegQueryValueExA
add esp 0x8
test eax eax
sete bl
add esp 0xfffffff4
push [ ebp - 0x4 ]
call RegCloseKey
sub_40b4ec
push ebp
mov ebp esp
mov eax 0x801c
call sub_4161a4
push edi
push esi
push ebx
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x14 ]
add esp 0xfffffff4
push ebx
push esi
lea eax [ ebp - 0x2000 ]
mov [ ebp - 0x8008 ] eax
push eax
lea edi [ ebp - 0x4000 ]
push edi
push 0x80000001
call sub_40a9c4
mov [ ebp - 0x8001 ] al
add esp 0x20
add esp 0xfffffff4
push ebx
push esi
lea esi [ ebp - 0x8000 ]
push esi
lea ebx [ ebp - 0x6000 ]
push ebx
push 0x80000002
call sub_40a9c4
add esp 0x20
cmp [ ebp - 0x8001 ] 0x0
je r-xdata
test al al
je r-xdata
test al al
jne r-xdata
mov al 0x0
jmp r-xdata
add esp 0xfffffff8
push ebx
mov eax [ ebp + 0x8 ]
push eax
call strcpy
add esp 0xfffffff8
push esi
jmp r-xdata
add esp 0xfffffff8
push esi
mov eax [ ebp - 0x8008 ]
push eax
call strcmp
add esp 0x10
test eax eax
jle r-xdata
jmp r-xdata
lea esp [ ebp - 0x8028 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ ebp + 0xc ]
push eax
call strcpy
jmp r-xdata
add esp 0xfffffff8
push ebx
mov eax [ ebp + 0x8 ]
push eax
call strcpy
add esp 0xfffffff8
push esi
mov eax [ ebp + 0xc ]
push eax
call strcpy
add esp 0xfffffff8
push edi
mov eax [ ebp + 0x8 ]
push eax
call strcpy
add esp 0xfffffff8
mov eax [ ebp - 0x8008 ]
push eax
mov al 0x1
sub_40b648
push ebp
mov ebp esp
mov eax 0x601c
call sub_4161a4
push edi
push esi
push ebx
add esp 0xfffffffc
push 0x2000
lea esi [ ebp - 0x2000 ]
push esi
push 0xa0
call sub_401aa8
mov edi esi
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
add esp 0x10
cmp ecx 0xfffffffe
jne r-xdata
add esp 0xfffffff4
lea eax [ ebp - 0x6004 ]
push eax
push 0x20019
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RegOpenKeyExA
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov al 0x0
mov [ ebp - 0x6008 ] 0x2000
add esp 0xfffffff8
lea eax [ ebp - 0x6008 ]
push eax
lea ebx [ ebp - 0x4000 ]
push ebx
lea eax [ ebp - 0x600c ]
push eax
push 0x0
push esi
push [ ebp - 0x6004 ]
call RegQueryValueExA
add esp 0x8
test eax eax
jne r-xdata
lea esp [ ebp - 0x6028 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push [ ebp - 0x6004 ]
call RegCloseKey
cmp [ ebp - 0x6008 ] 0x0
je r-xdata
add esp 0xfffffff8
push ebx
push r-xdata
call sub_407210
add esp 0xfffffff8
push r-xdata
push ebx
call strtok
mov edx eax
add esp 0x20
jmp r-xdata
test edx edx
je r-xdata
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
jne r-xdata
add esp 0xfffffffc
push edx
push r-xdata
lea ebx [ ebp - 0x6000 ]
push ebx
call sprintf
add esp 0xfffffff8
push ebx
mov eax [ ebp + 0xc ]
push eax
call sub_40a6d0
add esp 0x20
test al al
je r-xdata
add esp 0xfffffff8
push r-xdata
push 0x0
call strtok
mov edx eax
add esp 0x10
add esp 0xfffffff4
add esp 0xfffffffe
push 0x1
add esp 0xfffffffe
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
call sub_40b020
add esp 0x20
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
sub_40b7e4
push ebp
mov ebp esp
mov eax 0x801c
call sub_4161a4
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov [ ebp - 0x2000 ] 0x0
mov [ ebp - 0x4000 ] 0x0
push ebx
push esi
lea eax [ ebp - 0x2000 ]
mov [ ebp - 0x8008 ] eax
push eax
lea eax [ ebp - 0x4000 ]
mov [ ebp - 0x800c ] eax
push eax
call sub_40b97c
mov [ ebp - 0x8001 ] al
mov [ ebp - 0x6000 ] 0x0
mov [ ebp - 0x8000 ] 0x0
push ebx
push esi
lea esi [ ebp - 0x8000 ]
push esi
lea edi [ ebp - 0x6000 ]
push edi
call sub_40b4ec
mov bl al
add esp 0x20
cmp [ ebp - 0x8001 ] 0x0
je r-xdata
test bl bl
je r-xdata
add esp 0xfffffffc
mov eax [ ebp - 0x8008 ]
push eax
mov eax [ ebp - 0x800c ]
push eax
push r-xdata
call sub_407210
add esp 0x10
cmp [ ebp - 0x8001 ] 0x0
je r-xdata
add esp 0xfffffffc
push esi
push edi
push r-xdata
call sub_407210
add esp 0x10
test bl bl
je r-xdata
test bl bl
jne r-xdata
mov al 0x0
jmp r-xdata
add esp 0xfffffff8
push edi
jmp r-xdata
add esp 0xfffffff8
push esi
mov eax [ ebp - 0x8008 ]
push eax
call strcmp
add esp 0x10
test eax eax
jle r-xdata
jmp r-xdata
lea esp [ ebp - 0x8028 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
push eax
call strcpy
jmp r-xdata
add esp 0xfffffff8
push edi
mov eax [ ebp + 0x8 ]
push eax
call strcpy
add esp 0xfffffff8
mov eax [ ebp - 0x800c ]
push eax
mov al 0x1
sub_40b97c
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x14 ]
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
push eax
call sub_40bf58
add esp 0x10
test al al
jne r-xdata
mov al 0x1
add esp 0xfffffff4
push 0x83
call sub_4019cc
add esp 0x10
test eax eax
jne r-xdata
add esp 0xfffffff4
push r-xdata
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
push eax
call sub_40ba00
test al al
jne r-xdata
add esp 0xfffffff4
push r-xdata
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
push eax
call sub_40ba00
add esp 0x20
test al al
jne r-xdata
mov al 0x0
jmp r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
sub_40ba00
push ebp
mov ebp esp
mov eax 0x607c
call sub_4161a4
push edi
push esi
push ebx
add esp 0xfffffff4
lea eax [ ebp - 0x6034 ]
push eax
push 0x20019
push 0x0
push [ ebp + 0x18 ]
push 0x80000002
call RegOpenKeyExA
add esp 0xc
test eax eax
jne r-xdata
mov al 0x0
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x8 ] 0x0
mov eax 0x2000
mov [ ebp - 0x6044 ] eax
mov [ ebp - 0x6048 ] eax
mov [ ebp - 0x6058 ] 0x0
jmp r-xdata
lea eax [ ebp - 0x6040 ]
push eax
lea eax [ ebp - 0x6044 ]
push eax
lea eax [ ebp - 0x2020 ]
push eax
push 0x0
lea eax [ ebp - 0x6048 ]
push eax
lea ebx [ ebp - 0x4020 ]
push ebx
mov eax [ ebp - 0x6058 ]
push eax
push [ ebp - 0x6034 ]
call RegEnumKeyExA
cmp eax 0x103
jne r-xdata
add esp 0xfffffffc
mov eax [ ebp + 0x14 ]
push eax
mov edx [ ebp + 0x10 ]
push edx
push ebx
call sub_40b2e0
add esp 0x10
test al al
je r-xdata
mov edi [ ebp - 0xc ]
mov ebx [ ebp - 0x10 ]
cmp ebx edi
je r-xdata
inc [ ebp - 0x6058 ]
mov [ ebp - 0x6044 ] 0x2000
mov [ ebp - 0x6048 ] 0x2000
lea esi [ ebp - 0x20 ]
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
sub edx eax
mov eax edx
sar eax 0x2
lea esi [ eax - 0x1 ]
test esi esi
jl r-xdata
mov eax edi
sub eax ebx
sar eax 0x2
xor edx edx
cmp eax 0x1
je r-xdata
inc [ rw-data ]
mov eax rw-data
add esp 0xfffffff4
push rw-data
call sub_41eca8
add esp 0x10
jmp r-xdata
add esp 0xfffffff4
push [ ebp - 0x6034 ]
call RegCloseKey
add esp 0xc
mov eax [ ebp - 0xc ]
mov [ ebp - 0x605c ] eax
mov esi [ ebp - 0x10 ]
cmp esi eax
je r-xdata
lea esi [ esi ]
add edx edx
push edx
push 0x0
push edi
push ebx
call sub_41d4dc
add esp 0xfffffff8
push edi
push ebx
call sub_41d1f8
add esp 0x20
inc edx
sar eax 0x1
cmp eax 0x1
jne r-xdata
add esp 0xfffffffc
push esi
push ebx
push eax
call sub_41bb24
add esp 0x10
test ebx ebx
je r-xdata
mov [ ebp - 0x20 ] eax
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
add esp 0xfffffff4
push eax
push ebx
push 0xffffffff
push 0x0
push esi
call sub_41fad8
add esp 0x20
lea eax [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp - 0x8 ]
je r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
sub eax edi
sar eax 0x2
je r-xdata
lea esi [ esi ]
mov [ eax + edx ] 0x0
mov eax [ ecx ]
mov eax r-xdata
jmp r-xdata
mov edx [ edi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
add [ ebp - 0xc ] 0x4
jmp r-xdata
mov eax [ ebp - 0x20 ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
shl eax 0x2
cmp eax 0x80
jbe r-xdata
add esi 0x4
cmp esi [ ebp - 0x605c ]
jne r-xdata
mov edx [ edi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
dec esi
jns r-xdata
mov [ ebp - 0x6050 ] 0x2000
add esp 0xfffffff8
lea eax [ ebp - 0x6050 ]
push eax
lea ebx [ ebp - 0x6030 ]
push ebx
lea eax [ ebp - 0x6054 ]
push eax
push 0x0
push r-xdata
push [ ebp - 0x604c ]
call RegQueryValueExA
add esp 0x8
test eax eax
jne r-xdata
push eax
push [ ebp - 0x6034 ]
call RegOpenKeyExA
add esp 0xc
test eax eax
jne r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ edi - 0x10 ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
push esi
call free
add esp 0x10
jmp r-xdata
mov edi [ ebp - 0x20 ]
lea esi [ edi - 0x10 ]
mov eax [ edi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ edi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ edi ] eax
mov [ ebx + rw-data ] edi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push edi
call free
jmp r-xdata
mov edi [ esi ]
lea edx [ edi - 0x10 ]
mov [ ebp - 0x6060 ] edx
mov eax [ edi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ edi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ edi - 0x10 ] eax
mov edx [ ebp - 0x6060 ]
mov [ ebx + rw-data ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
mov eax [ ebp - 0x6060 ]
push eax
call free
add esp 0x10
jmp r-xdata
add esp 0xfffffff4
lea eax [ ebp - 0x604c ]
push eax
push 0x20019
push 0x0
mov ecx esi
shl ecx 0x2
add ecx [ ebp - 0x10 ]
mov edx [ ecx ]
mov eax [ edx - 0x10 ]
test eax eax
jne r-xdata
add esp 0xfffffff4
push [ ebp - 0x604c ]
call RegCloseKey
add esp 0xc
add esp 0xfffffff8
push ebx
mov eax [ ebp + 0x8 ]
push eax
call sub_40a6d0
add esp 0x10
test al al
je r-xdata
mov [ ebx ] eax
add esp 0xfffffff4
add esp 0xfffffffe
push 0x0
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call sub_40b128
add esp 0x20
test al al
je r-xdata
mov edx [ ebp - 0xc ]
mov [ ebp - 0x6064 ] edx
mov esi [ ebp - 0x10 ]
cmp esi edx
je r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
sub eax edi
sar eax 0x2
je r-xdata
lea esi [ esi ]
mov al 0x1
jmp r-xdata
shl eax 0x2
cmp eax 0x80
jbe r-xdata
add esi 0x4
cmp esi [ ebp - 0x6064 ]
jne r-xdata
mov edx [ edi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
lea esp [ ebp - 0x6088 ]
pop ebx
pop esi
pop edi
leave
retn
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ edi ] eax
mov [ ebx + rw-data ] edi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push edi
call free
jmp r-xdata
mov edi [ esi ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x6068 ] eax
mov eax [ edi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ edi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ edi - 0x10 ] eax
mov edx [ ebp - 0x6068 ]
mov [ ebx + rw-data ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
mov eax [ ebp - 0x6068 ]
push eax
call free
add esp 0x10
jmp r-xdata
sub_40bf58
push ebp
mov ebp esp
mov eax 0x40fc
call sub_4161a4
push edi
push esi
push ebx
mov [ ebp - 0x40e4 ] 0x64
add esp 0xfffffff4
lea esi [ ebp - 0x40e4 ]
push esi
lea ebx [ ebp - 0x2070 ]
push ebx
push r-xdata
push r-xdata
push 0x80000002
call sub_40b48c
add esp 0x20
test al al
je r-xdata
mov [ ebp - 0x2070 ] 0x0
add esp 0xfffffffc
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
push ebx
call sub_40b2e0
add esp 0x10
test al al
jne r-xdata
mov [ ebp - 0x20e0 ] 0x0
add esp 0xfffffff4
push esi
lea eax [ ebp - 0x20e0 ]
push eax
push r-xdata
push r-xdata
push 0x80000002
call sub_40b48c
add esp 0x20
test al al
je r-xdata
mov [ ebp - 0x40e4 ] 0x64
add esp 0xfffffff4
push 0x83
call sub_4019cc
add esp 0x10
test eax eax
jne r-xdata
lea edi [ ebp - 0x40e0 ]
mov esi r-xdata
cld
mov ecx 0xa
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
add esp 0xfffffff8
push r-xdata
lea ebx [ ebp - 0x40e0 ]
push ebx
call strcat
add esp 0xfffffff8
mov eax [ ebp - 0x40e8 ]
lea edi [ ebp - 0x40e0 ]
mov esi r-xdata
cld
mov ecx 0x9
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
add esp 0xfffffff8
push r-xdata
lea ebx [ ebp - 0x40e0 ]
push ebx
call strcat
add esp 0xfffffff8
mov eax [ ebp - 0x40ec ]
jmp r-xdata
add esp 0xfffffffc
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
push ebx
call sub_40b2e0
add esp 0x10
test al al
jne r-xdata
mov [ ebp - 0x40ed ] 0x0
add esp 0xfffffff8
push ebx
mov ecx [ ebp + 0x8 ]
push ecx
call sub_40a6d0
add esp 0x10
test al al
je r-xdata
mov al 0x0
jmp r-xdata
push eax
push ebx
call strcat
add esp 0x20
mov [ ebp - 0x40e4 ] 0x2000
add esp 0xfffffff4
lea eax [ ebp - 0x40e4 ]
push eax
lea ebx [ ebp - 0x2000 ]
push ebx
push r-xdata
lea eax [ ebp - 0x40e0 ]
push eax
push 0x80000002
call sub_40b48c
add esp 0x20
test al al
jne r-xdata
add esp 0xfffffff8
lea eax [ ebp - 0x20e0 ]
mov [ ebp - 0x40e8 ] eax
push eax
lea ecx [ ebp - 0x2070 ]
mov [ ebp - 0x40ec ] ecx
push ecx
call strcmp
add esp 0x10
test eax eax
jle r-xdata
mov al [ ebp - 0x40ed ]
add esp 0xfffffff4
add esp 0xfffffffe
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
call sub_40b128
test al al
setne [ ebp - 0x40ed ]
lea esp [ ebp - 0x4108 ]
pop ebx
pop esi
pop edi
leave
retn
sub_40c150
push ebp
mov ebp esp
mov eax 0x200c
call sub_4161a4
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
add esp 0xfffffffc
push 0x2000
lea ebx [ ebp - 0x2000 ]
push ebx
push [ ebp + 0xc ]
call GetEnvironmentVariableA
add esp 0x4
test eax eax
je r-xdata
mov al 0x0
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
xor edx edx
cmp ecx 0xfffffffe
je r-xdata
mov bl 0x0
add esp 0xfffffff8
lea eax [ ebp - 0x2000 ]
push eax
push esi
call sub_40a6d0
add esp 0x10
test al al
je r-xdata
cmp [ edx + ebx ] 0x2f
jne r-xdata
mov al bl
jmp r-xdata
add esp 0xfffffff4
add esp 0xfffffffe
push 0x1
add esp 0xfffffffe
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_40b020
test al al
setne bl
inc edx
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea eax [ ecx - 0x1 ]
cmp edx eax
jb r-xdata
mov [ edx + ebx ] 0x5c
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
pop edi
leave
retn
sub_40c204
push ebp
mov ebp esp
mov eax 0x2010
call sub_4161a4
push esi
push ebx
mov esi [ ebp + 0x8 ]
add esp 0xfffffffc
add esp 0xfffffffe
push 0x0
push [ ebp + 0xc ]
lea ebx [ ebp - 0x2000 ]
push ebx
call sub_403860
add esp 0xfffffff4
push ebx
call sub_40cc20
add esp 0x20
add esp 0xfffffff8
push ebx
push esi
call sub_40a6d0
mov bl 0x0
add esp 0x10
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov bl 0x1
test al al
je r-xdata
mov al bl
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
leave
retn
add esp 0xfffffff4
add esp 0xfffffffe
push 0x1
add esp 0xfffffffe
push 0x1
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_40b020
test al al
je r-xdata
sub_40c28c
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff8
lea eax [ ebp - 0x4 ]
push eax
push ebx
push 0x2000
push 0x0
push r-xdata
push 0x0
call SearchPathA
add esp 0x8
test eax eax
jne r-xdata
add esp 0xfffffff4
add esp 0xfffffffe
push 0x1
add esp 0xfffffffe
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_40b020
mov al 0x0
jmp r-xdata
mov ebx [ ebp - 0x28 ]
leave
retn
sub_40c318
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
add esp 0xfffffff4
push 0x2000
call sub_415f94
mov edi eax
add esp 0xfffffff8
push ebx
push edi
call strcpy
add esp 0x20
add esp 0xfffffff8
push r-xdata
push edi
call strcat
add esp 0xfffffff8
push esi
push edi
call strcat
add esp 0x20
add esp 0xfffffff8
push r-xdata
push edi
call strcat
add esp 0xfffffff4
push edi
call sub_403304
mov bl al
add esp 0x20
add esp 0xfffffffc
movzx eax bl
push eax
push edi
push r-xdata
call sub_407210
add esp 0xfffffff4
push edi
call LoadLibraryA
mov esi eax
add esp 0x1c
test bl bl
je r-xdata
add esp 0xfffffff4
push edi
call sub_4160b0
mov eax esi
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
test esi esi
jne r-xdata
add esp 0xfffffff8
call GetLastError
push eax
push r-xdata
call sub_407210
add esp 0x10
sub_40c424
push ebp
mov ebp esp
sub esp 0xec
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
push 0x7d0
call sub_415f94
mov [ ebp - 0xd4 ] eax
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea esi [ ebx + ecx - 0xa ]
mov edi r-xdata
mov ecx 0xa
cld
xor eax eax
[ esi ] [ edi ]
je r-xdata
add esp 0x10
test eax eax
jne r-xdata
sbb eax eax
or al 0x1
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea edi [ ecx - 0xa ]
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea edi [ ecx - 0xb ]
jmp r-xdata
add esp 0xfffffffc
call GetLastError
push eax
push esi
push r-xdata
add esp 0xfffffff8
push esi
push r-xdata
jmp r-xdata
add esp 0xfffffffc
push edi
push ebx
mov eax [ ebp - 0xd4 ]
push eax
call strncpy
mov eax [ ebp - 0xd4 ]
mov [ edi + eax ] 0x0
add esp 0xfffffff4
push 0x4000
call sub_415f94
mov esi eax
add esp 0x20
add esp 0xfffffff4
push 0x4000
call sub_415f94
mov [ ebp - 0xd8 ] eax
add esp 0xfffffffc
push 0x4000
push eax
push r-xdata
call GetEnvironmentVariableA
add esp 0xfffffffc
mov eax [ ebp - 0xd8 ]
push eax
push esi
call strcpy
add esp 0x20
add esp 0xfffffff8
push r-xdata
push esi
call strcat
add esp 0xfffffff8
mov eax [ ebp - 0xd4 ]
push eax
push esi
call strcat
add esp 0x20
add esp 0xfffffff8
push esi
push r-xdata
call SetEnvironmentVariableA
add esp 0x8
test eax eax
je r-xdata
xor ebx ebx
cmp [ ebp - 0xe0 ] 0x0
jne r-xdata
add esp 0xfffffff8
push ebx
mov eax [ ebp - 0xd4 ]
push eax
call sub_40c318
mov [ ebp - 0xe0 ] eax
add esp 0x10
call sub_407210
add esp 0x10
add esp 0xfffffff4
push 0x4000
call sub_415f94
mov [ ebp - 0xdc ] eax
add esp 0xfffffffc
push esi
push r-xdata
push eax
call sprintf
add esp 0x20
add esp 0xfffffff4
mov eax [ ebp - 0xdc ]
push eax
call _putenv
mov [ ebp - 0xe0 ] 0x0
add esp 0xfffffffc
push 0xc8
lea ebx [ ebp - 0xd0 ]
push ebx
push 0x98
call sub_401aa8
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
add esp 0x20
cmp ecx 0xfffffffe
je r-xdata
add esp 0xfffffff4
push esi
call sub_4160b0
add esp 0xfffffff4
mov eax [ ebp - 0xd8 ]
push eax
call sub_4160b0
add esp 0x20
add esp 0xfffffff4
mov eax [ ebp - 0xdc ]
push eax
call sub_4160b0
add esp 0xfffffff4
mov eax [ ebp - 0xd4 ]
push eax
call sub_4160b0
mov eax [ ebp - 0xe0 ]
lea esp [ ebp - 0xf8 ]
pop ebx
pop esi
pop edi
leave
retn
mov esi esi
cmp [ ebp - 0xe0 ] 0x0
jne r-xdata
test eax eax
je r-xdata
add esp 0xfffffff8
mov eax [ ebp - 0xd8 ]
push eax
push r-xdata
call SetEnvironmentVariableA
add esp 0x8
test eax eax
je r-xdata
add esp 0xfffffff8
push [ ebx * 4 + r-xdata ]
mov eax [ ebp - 0xd4 ]
push eax
call sub_40c318
mov [ ebp - 0xe0 ] eax
add esp 0x10
inc ebx
cmp ebx 0x4
jg r-xdata
add esp 0xfffffffc
call GetLastError
push eax
mov eax [ ebp - 0xd8 ]
push eax
push r-xdata
add esp 0xfffffff8
mov eax [ ebp - 0xd8 ]
push eax
push r-xdata
jmp r-xdata
call sub_407210
add esp 0x10
add esp 0xfffffffc
mov eax [ ebp - 0xd8 ]
push eax
push r-xdata
mov eax [ ebp - 0xdc ]
push eax
call sprintf
add esp 0xfffffff4
mov eax [ ebp - 0xdc ]
push eax
call _putenv
add esp 0x20
sub_40c6f4
push ebp
mov ebp esp
mov eax 0x200c
call sub_4161a4
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
push ebx
call sub_40c424
add esp 0x10
test eax eax
jne r-xdata
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
pop edi
leave
retn
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea esi [ ebx + ecx - 0xa ]
mov edi r-xdata
mov ecx 0xa
cld
test al 0x0
[ esi ] [ edi ]
jne r-xdata
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea edi [ ecx - 0x9 ]
mov edi ebx
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea edi [ ecx - 0xa ]
jmp r-xdata
add esp 0xfffffffc
push edi
push ebx
lea ebx [ ebp - 0x2000 ]
push ebx
call strncpy
mov [ edi + ebx ] 0x0
add esp 0xfffffff8
push r-xdata
push ebx
call strcat
add esp 0x20
add esp 0xfffffff4
push ebx
call sub_40c424
sub_40c797
outsd
jne r-xdata
das
jae r-xdata
and [ edi + 0x66 ] ch
and [ ebp + 0x65 ] ch
insd
outsd
jb r-xdata
adc al 0x83
das
bound esp [ ecx + 0x73 ]
je r-xdata
arpl [ eax ] ax
add bl ch
or eax 0x90909090
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc ebx
cmp ch [ edi ]
jo r-xdata
add ah dh
inc edx
add al ch
insd
fld [ eax ]
and [ eax ] ebp
jo r-xdata
imul ebp [ esi + 0x67 ] 0x63632e
add dh al
add eax rw-data
add ecx ecx
jae r-xdata
add [ eax + 0x26b48d ] dl
add [ eax ] al
add [ ecx ] ah
sub [ ebp + 0x6e ] ch
outsd
jb r-xdata
jae r-xdata
and [ 0x20316e20 ] ch
and [ ds : ebp + 0x61 ] ch
js r-xdata
and [ ds : ebp + 0x6e ] ch
sub [ eax ] eax
nop
lea esi [ esi ]
and [ eax ] ebp
insb
outsb
arpl [ ecx + ebp * 2 + 0x65 ] bp
outsb
je r-xdata
add [ ecx ] ah
sub [ eax + 0x6f ] dh
insd
and [ esi + 0x69 ] ah
insb
jae r-xdata
jb r-xdata
jpe r-xdata
jae r-xdata
imul ebp [ esi + 0x67 ] 0x2f323377
sub [ eax + 0x38 ] bh
sub [ ss : edi ] ebp
insd
imul ebp [ esi + 0x67 ] 0x69622f77
outsb
das
das
insb
imul esp [ edx + 0x2f ] 0x2d636367
insb
imul esp [ edx + 0x2f ] 0x676e696d
ja r-xdata
arpl [ ecx + 0x73 ] bp
jae r-xdata
jbe r-xdata
and [ eax ] ch
sub [ eax ] esp
sub eax 0x29326e20
add [ ecx ] ah
sub [ eax + 0x6f ] dh
jae r-xdata
add [ eax ] al
call sub_4161a4
push esi
push ebx
jb r-xdata
xor ch [ esi ]
cmp [ 0x362d332e ] esi
das
das
das
das
das
imul ebp [ esi + 0x63 ] 0x6564756c
das
sub ebp [ bp + di ]
sub eax 0x74732f33
xor ch [ edi ]
push esi
push r-xdata
lea ebx [ ebp - 0x2000 ]
push ebx
call sprintf
arpl [ eax ] ax
push 0x72
outsd
arpl [ ebx + 0x69 ] bp
je r-xdata
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov ebx [ eax + 0x53560000 ]
or [ eax ] al
and [ ds : ebp + 0x6e ] ch
je r-xdata
add esp 0xfffffff8
push ebx
push esi
call sub_40ca00
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
leave
retn
inc eax
add [ ebp - 0x1fff63 ] cl
call [ ebx - 0x18 ]
test edx ebx
add [ eax ] al
jb r-xdata
mov esi esi
pushfd
enter 0x40 0xa4
retn
leave
cmp [ rw-data ] 0x0
jne r-xdata
enter 0x40 0xab
enter 0x40 0xb2
enter 0x40 0xba
enter 0x40 0x55
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x1
call sub_40c868
leave
retn
and [ eax ] ch
sub [ ecx ] ebp
add [ ecx - 0x1a76aa0a ] cl
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
je r-xdata
cmp [ ebp + 0x8 ] 0x0
sub_40c868
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
sub_40c90c
push ebp
mov ebp esp
mov eax 0x2010
call sub_4161a4
push esi
push ebx
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
push esi
push r-xdata
lea ebx [ ebp - 0x2000 ]
push ebx
call sprintf
add esp 0xfffffff8
push ebx
push esi
call sub_40ca00
lea esp [ ebp - 0x2018 ]
pop ebx
pop esi
leave
retn
sub_40ca00
push ebp
mov ebp esp
mov eax 0x607c
call sub_4161a4
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
add esp 0xfffffff8
push esi
lea ebx [ ebp - 0x2000 ]
push ebx
call strcpy
mov edi ebx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
mov [ ebx + ecx - 0x6 ] al
add esp 0xfffffff4
push esi
call sub_403304
add esp 0x20
test al al
jne r-xdata
add esp 0xfffffffc
push [ ebp + 0x8 ]
push r-xdata
lea eax [ ebp - 0x4000 ]
mov [ ebp - 0x6064 ] eax
push eax
call sprintf
push ebx
push esi
push r-xdata
lea esi [ ebp - 0x6000 ]
push esi
call sprintf
add esp 0x20
add esp 0xfffffff4
mov eax [ ebp - 0x6064 ]
push eax
call sub_407210
add esp 0xfffffff4
push esi
call sub_407210
add esp 0x20
add esp 0xfffffffc
push 0x10
push 0x0
lea edi [ ebp - 0x6010 ]
push edi
call memset
add esp 0xfffffffc
push 0x44
push 0x0
lea ebx [ ebp - 0x6060 ]
push ebx
call memset
mov [ ebp - 0x6060 ] 0x44
mov [ ebp - 0x6034 ] 0x1
mov [ ebp - 0x6030 ] 0x0
add esp 0x20
add esp 0xfffffff8
push edi
push ebx
push 0x0
push 0x0
push 0x20
push 0x1
push 0x0
push 0x0
push esi
mov eax [ ebp - 0x6064 ]
push eax
call CreateProcessA
add esp 0x8
test eax eax
jne r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
jmp r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0xfffffff8
push 0xffffffff
push [ ebp - 0x6010 ]
call WaitForSingleObject
add esp 0xfffffffc
push r-xdata
call sub_407210
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0xfffffff8
push r-xdata
push 0x3f1
call sub_4029e0
lea esp [ ebp - 0x6088 ]
pop ebx
pop esi
pop edi
leave
retn
sub_40cc20
push ebp
mov ebp esp
mov eax 0x400c
call sub_4161a4
push edi
push esi
push ebx
mov edi [ ebp + 0x8 ]
add esp 0xfffffffc
push edi
push r-xdata
lea ebx [ ebp - 0x2000 ]
push ebx
call sprintf
add esp 0xfffffffc
push edi
push r-xdata
lea esi [ ebp - 0x4000 ]
push esi
call sprintf
add esp 0x20
add esp 0xfffffff4
push ebx
call sub_403304
add esp 0x10
test al al
je r-xdata
lea esp [ ebp - 0x4018 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push esi
call sub_403304
add esp 0x10
test al al
jne r-xdata
add esp 0xfffffff4
push r-xdata
call sub_407210
add esp 0xfffffff4
push r-xdata
call printf
add esp 0x20
add esp 0xfffffff4
mov eax [ _iob@IAT ]
add eax 0x20
push eax
call fflush
add esp 0xfffffff8
push r-xdata
push edi
call sub_40c90c
add esp 0x20
add esp 0xfffffff8
push r-xdata
push edi
call sub_40c90c
add esp 0xfffffff8
push r-xdata
push edi
call sub_40c90c
add esp 0x20
add esp 0xfffffff8
push r-xdata
push edi
call sub_40c90c
add esp 0xfffffff8
push r-xdata
push edi
call sub_40c90c
add esp 0x20
add esp 0xfffffff8
push r-xdata
push edi
call sub_40c90c
add esp 0xfffffff4
push r-xdata
call sub_407210
sub_40cd2c
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InitializeCriticalSection
mov [ rw-data ] 0x1
sub_40cd9c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp edx [ rw-data ]
jne r-xdata
test edx edx
je r-xdata
mov eax edx
jmp r-xdata
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
jmp r-xdata
leave
retn
mov eax [ rw-data ]
mov [ rw-data ] edx
sub_40ce18
push ebp
mov ebp esp
sub esp 0x6c
push edi
push esi
push ebx
call sub_416270
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea ecx [ ebp - 0x20 ]
mov [ ebx + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] rw-data
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x8
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov [ eax + 0x1c ] rw-data
mov [ eax + 0x12 ] 0x4
mov [ eax + 0x13 ] 0x0
mov [ edx + 0x8 ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0x20
mov [ eax + 0xc ] 0x11
mov [ eax + 0x14 ] 0x6
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea edi [ ebp - 0x40 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ edx ]
lea edx [ ebp - 0x40 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
add eax 0xfffffff8
mov edx ecx
sub edx eax
movzx eax [ rw-data ]
add eax edx
mov [ ebp - 0x38 ] ax
mov [ edx + 0x12 ] 0x0
mov [ edx + 0x12 ] 0x4
jmp r-xdata
mov [ edx + 0x13 ] 0x0
mov eax [ ebp + 0x10 ]
mov [ edx ] eax
mov eax [ ebp + 0x14 ]
mov [ edx + 0x4 ] eax
mov [ edx + 0x8 ] 0x0
mov [ edx + 0x10 ] 0x20
mov [ edx + 0xc ] 0x11
mov [ edx + 0x14 ] 0x6
mov [ edx + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
mov eax edx
pop ebx
pop esi
pop edi
leave
retn
sub_40cf40
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov esi [ ebp + 0x8 ]
nop
mov eax ebx
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
mov eax [ __mb_cur_max@IAT ]
cmp [ eax ] 0x1
jne r-xdata
add esp 0xfffffff8
push 0x8
push ebx
call _isctype
add esp 0x10
mov eax [ _pctype@IAT ]
mov eax [ eax ]
movzx eax [ eax + ebx * 2 ]
and eax 0x8
and eax 0xffff
jmp r-xdata
add esp 0xfffffff4
push esi
call sub_410eb0
mov ebx eax
add esp 0x10
cmp ebx 0xffffffff
je r-xdata
test eax eax
jne r-xdata
sub_40cf9c
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
jmp r-xdata
mov eax [ ebx ]
add esp 0xfffffff4
push [ eax ]
call sub_410eb0
mov edx eax
cmp edx 0xffffffff
je r-xdata
mov edx [ eax ]
mov eax [ edx + 0x4 ]
cmp [ edx + 0x8 ] eax
jne r-xdata
mov [ ebx + 0x4 ] 0x0
mov eax [ ebx ]
or [ eax + 0x12 ] 0x3
mov eax [ ebp + 0xc ]
mov [ eax ] dl
mov [ ebx + 0x4 ] 0x1
jmp r-xdata
add esp 0xfffffff4
push ecx
call sub_40e378
add esp 0x10
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
sub_40d00c
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
cmp [ eax + 0x12 ] 0x0
je r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov eax 0xffffffff
jmp r-xdata
mov eax [ esi ]
mov ebx [ eax ]
mov eax [ ebx + 0x8 ]
cmp [ ebx + 0x4 ] eax
jb r-xdata
mov edx [ eax ]
mov eax [ edx + 0x4 ]
cmp [ edx + 0x8 ] eax
jne r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
mov eax [ ebx + 0x4 ]
movzx edx [ eax ]
jmp r-xdata
add esp 0xfffffff4
push ebx
call sub_4105ac
cmp eax 0xffffffff
je r-xdata
add esp 0xfffffff4
push ecx
call sub_40e378
add esp 0x10
cmp edx 0xffffffff
jne r-xdata
mov edx eax
mov eax edx
mov eax [ esi ]
or [ eax + 0x12 ] 0x1
sub_40d080
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov [ ebx + 0x4 ] 0x0
mov eax [ ebx ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
jmp r-xdata
mov eax [ ebx ]
mov edi [ eax ]
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
mov edx [ eax ]
mov eax [ edx + 0x4 ]
cmp [ edx + 0x8 ] eax
jne r-xdata
mov eax ebx
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
dec esi
js r-xdata
add esp 0xfffffff8
push esi
push edi
call sub_40ee50
mov [ ebx + 0x4 ] eax
jmp r-xdata
add esp 0xfffffff4
push ecx
call sub_40e378
add esp 0x10
add esp 0xfffffff4
push edi
call sub_410eb0
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx ]
or [ eax + 0x12 ] 0x3
jmp r-xdata
inc [ ebx + 0x4 ]
cmp eax [ ebp + 0x10 ]
jne r-xdata
sub_40d110
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov eax [ ebx ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
jmp r-xdata
mov eax [ ebx ]
add esp 0xfffffffc
push esi
push [ ebp + 0xc ]
push [ eax ]
call sub_41083c
mov [ ebx + 0x4 ] eax
cmp eax esi
je r-xdata
mov edx [ eax ]
mov eax [ edx + 0x4 ]
cmp [ edx + 0x8 ] eax
jne r-xdata
mov [ ebx + 0x4 ] 0x0
mov eax ebx
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
mov eax [ ebx ]
or [ eax + 0x12 ] 0x3
jmp r-xdata
add esp 0xfffffff4
push ecx
call sub_40e378
add esp 0x10
sub_40d17c
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax 0xffffffff
add esp 0xfffffff4
mov eax [ ecx + 0x48 ]
movsx edx [ eax + 0x58 ]
add edx ecx
push edx
mov eax [ eax + 0x5c ]
call eax
test eax eax
jne r-xdata
mov eax [ ebx ]
or [ eax + 0x12 ] 0x4
xor eax eax
jmp r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
sub_40d1b8
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
add esp 0xfffffffc
push 0x1
push [ ebp + 0xc ]
push [ eax ]
call sub_410fb8
cmp eax 0xffffffff
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax [ ebx ]
or [ eax + 0x12 ] 0x4
sub_40d1e8
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx ]
push [ eax ]
call sub_410fec
cmp eax 0xffffffff
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax [ ebx ]
or [ eax + 0x12 ] 0x4
sub_40d218
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push 0x1
push 0x1
push 0x0
mov eax [ ebx ]
push [ eax ]
call sub_410fec
mov edx eax
cmp edx 0xffffffff
jne r-xdata
mov eax edx
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax [ ebx ]
or [ eax + 0x12 ] 0x4
sub_40d248
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
jmp r-xdata
mov eax [ ebx ]
test [ eax + 0xc ] 0x1
je r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax 0x1
add esp 0xfffffff4
push ebx
call sub_40e430
add esp 0x10
jmp r-xdata
mov eax [ ebx ]
add esp 0xfffffff4
push [ eax ]
call sub_410eb0
mov edx eax
cmp edx 0xffffffff
jne r-xdata
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] dl
mov eax [ ebx ]
or [ eax + 0x12 ] 0x3
jmp r-xdata
sub_40d2c0
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov [ eax + 0x8 ] 0x0
mov [ ebp - 0x8 ] edx
mov eax [ edi ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
jmp r-xdata
mov eax [ edi ]
test [ eax + 0xc ] 0x1
je r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
mov [ esi ] 0x0
mov eax edi
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax 0x1
add esp 0xfffffff4
push edi
call sub_40e430
add esp 0x10
jmp r-xdata
mov eax [ edi ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
jmp r-xdata
test eax eax
je r-xdata
add esp 0xfffffff4
mov eax [ ebp - 0xc ]
push eax
call sub_410eb0
mov ebx eax
add esp 0x10
cmp ebx 0xffffffff
jne r-xdata
mov eax [ __mb_cur_max@IAT ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + 0x12 ] 0x1
add esp 0xfffffff8
push 0x8
push ebx
call _isctype
add esp 0x10
mov eax [ _pctype@IAT ]
mov eax [ eax ]
movzx eax [ eax + ebx * 2 ]
and eax 0x8
and eax 0xffff
jmp r-xdata
mov eax [ edi ]
or [ eax + 0x12 ] 0x2
add esp 0xfffffff8
movsx eax bl
push eax
mov eax [ ebp - 0xc ]
push eax
call sub_40f06c
jmp r-xdata
cmp [ ebp - 0x8 ] 0x1
jne r-xdata
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
mov [ esi ] bl
inc esi
dec [ ebp - 0x8 ]
sub_40d3c4
push ebp
mov ebp esp
sub esp 0x3c
push edi
push esi
push ebx
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test [ eax + 0xc ] 0x1
je r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
xor eax eax
jmp r-xdata
mov eax 0x1
add esp 0xfffffff4
push ecx
call sub_40e430
add esp 0x10
jmp r-xdata
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
pop edi
leave
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0xa
mov [ ebp - 0xc ] 0x0
add esp 0xfffffff4
push eax
call sub_40cf40
mov edx eax
add esp 0x10
cmp edx 0xffffffff
je r-xdata
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
or [ eax + 0x12 ] 0x3
xor eax eax
mov [ ebx ] 0x0
cmp edx 0x2b
jne r-xdata
cmp edx 0x2d
jne r-xdata
add esp 0xfffffff4
mov ecx [ ebp - 0x4 ]
push ecx
jmp r-xdata
cmp edx 0xffffffff
je r-xdata
mov [ ebx ] 0x1
add esp 0xfffffff4
mov eax [ ebp - 0x4 ]
push eax
call sub_40cf40
mov edx eax
add esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0xc ]
and eax 0x70
jne r-xdata
cmp eax 0x40
jne r-xdata
cmp edx 0x30
jne r-xdata
cmp eax 0x20
jne r-xdata
mov [ ebp - 0x8 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] 0x0
mov [ ecx + 0x4 ] 0x0
cmp edx 0xffffffff
je r-xdata
add esp 0xfffffff4
mov eax [ ebp - 0x4 ]
push eax
call sub_410eb0
mov edx eax
add esp 0x10
cmp edx 0xffffffff
jne r-xdata
mov [ ebp - 0x8 ] 0x8
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
sar eax 0x1f
mov [ ebp - 0x14 ] eax
lea esi [ esi ]
cmp edx 0x78
je r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ edx + 0x4 ] 0x0
jmp r-xdata
lea eax [ edx - 0x41 ]
cmp eax 0x5
ja r-xdata
mov edi eax
jmp r-xdata
mov [ ebp - 0x8 ] 0x10
add esp 0xfffffff4
mov ecx [ ebp - 0x4 ]
push ecx
call sub_410eb0
mov edx eax
add esp 0x10
cmp edx 0xffffffff
je r-xdata
cmp edx 0x58
jne r-xdata
lea eax [ edx - 0x61 ]
mov edi 0x3e7
cmp eax 0x5
ja r-xdata
lea edi [ edx - 0x37 ]
jmp r-xdata
cmp edi [ ebp - 0x8 ]
jl r-xdata
jmp r-xdata
add esp 0xfffffff8
movsx eax dl
push eax
mov eax [ ebp - 0x4 ]
push eax
call sub_40f06c
mov [ ebp - 0x8 ] 0x8
mov edx 0x30
add esp 0x10
jmp r-xdata
lea edi [ edx - 0x57 ]
inc [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] ecx
mov eax [ ebp - 0x18 ]
mul [ ebp - 0x28 ]
mov ebx eax
mov esi edx
mov ecx [ ebp - 0x18 ]
imul ecx [ ebp - 0x24 ]
add esi ecx
mov eax [ ebp - 0x28 ]
imul eax [ ebp - 0x14 ]
add esi eax
mov eax edi
cdq
add ebx eax
adc esi edx
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
mov [ ecx + 0x4 ] esi
add esp 0xfffffff4
mov eax [ ebp - 0x4 ]
push eax
call sub_410eb0
mov edx eax
add esp 0x10
cmp edx 0xffffffff
jne r-xdata
add esp 0xfffffff8
movsx eax dl
push eax
mov eax [ ebp - 0x4 ]
push eax
call sub_40f06c
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea eax [ edx - 0x30 ]
cmp eax 0x9
ja r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
or [ eax + 0x12 ] 0x2
jmp r-xdata
sub_40d638
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffffc
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_40d3c4
test eax eax
je r-xdata
mov eax ebx
mov ebx [ ebp - 0x28 ]
leave
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] dx
neg [ ebp - 0x10 ]
adc [ ebp - 0xc ] 0x0
neg [ ebp - 0xc ]
sub_40d678
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffffc
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_40d3c4
test eax eax
je r-xdata
mov eax ebx
mov ebx [ ebp - 0x28 ]
leave
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] dx
neg [ ebp - 0x10 ]
adc [ ebp - 0xc ] 0x0
neg [ ebp - 0xc ]
sub_40d6b8
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffffc
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_40d3c4
test eax eax
je r-xdata
mov eax ebx
mov ebx [ ebp - 0x28 ]
leave
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
neg [ ebp - 0x10 ]
adc [ ebp - 0xc ] 0x0
neg [ ebp - 0xc ]
sub_40d6f8
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffffc
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_40d3c4
test eax eax
je r-xdata
mov eax ebx
mov ebx [ ebp - 0x28 ]
leave
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
neg [ ebp - 0x10 ]
adc [ ebp - 0xc ] 0x0
neg [ ebp - 0xc ]
sub_40d738
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffffc
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_40d3c4
test eax eax
je r-xdata
mov eax ebx
mov ebx [ ebp - 0x28 ]
leave
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
neg [ ebp - 0x10 ]
adc [ ebp - 0xc ] 0x0
neg [ ebp - 0xc ]
sub_40d778
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffffc
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_40d3c4
test eax eax
je r-xdata
mov eax ebx
mov ebx [ ebp - 0x28 ]
leave
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
neg [ ebp - 0x10 ]
adc [ ebp - 0xc ] 0x0
neg [ ebp - 0xc ]
sub_40d7b8
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffffc
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_40d3c4
test eax eax
je r-xdata
mov eax ebx
mov ebx [ ebp - 0x28 ]
leave
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
neg [ ebp - 0x10 ]
adc [ ebp - 0xc ] 0x0
neg [ ebp - 0xc ]
sub_40d7fc
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffffc
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_40d3c4
test eax eax
je r-xdata
mov eax ebx
mov ebx [ ebp - 0x28 ]
leave
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
neg [ ebp - 0x10 ]
adc [ ebp - 0xc ] 0x0
neg [ ebp - 0xc ]
sub_40d840
push ebp
mov ebp esp
sub esp 0x20
push esi
push ebx
mov esi [ ebp + 0x8 ]
add esp 0xfffffffc
lea eax [ ebp - 0x4 ]
push eax
lea ebx [ ebp - 0x10 ]
push ebx
push esi
call sub_40d3c4
test eax eax
je r-xdata
mov eax esi
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
leave
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
or eax [ ebx + 0x4 ]
setne dl
mov eax [ ebp + 0xc ]
mov [ eax ] dl
neg [ ebp - 0x10 ]
adc [ ebp - 0xc ] 0x0
neg [ ebp - 0xc ]
sub_40d887
and eax 0x9000676c
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
jmp r-xdata
mov eax [ ebx ]
test [ eax + 0xc ] 0x1
je r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
mov eax ebx
mov ebx [ ebp - 0x48 ]
leave
retn
mov eax 0x1
add esp 0xfffffff4
push ebx
call sub_40e430
add esp 0x10
jmp r-xdata
add esp 0xfffffffc
lea eax [ ebp - 0x28 ]
push eax
push sub_40d887
push ebx
call sub_40fdc8
mov eax [ ebp + 0xc ]
fld [ ebp - 0x28 ]
fstp [ eax ]
test eax eax
je r-xdata
sub_40d900
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
jmp r-xdata
mov eax [ ebx ]
test [ eax + 0xc ] 0x1
je r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax 0x1
add esp 0xfffffff4
push ebx
call sub_40e430
add esp 0x10
jmp r-xdata
add esp 0xfffffffc
push [ ebp + 0xc ]
push sub_40d887
push ebx
call sub_40fdc8
test eax eax
je r-xdata
sub_40d969
and eax 0x89550067
in eax 0x83
in al dx
adc al 0x53
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
jmp r-xdata
mov eax [ ebx ]
test [ eax + 0xc ] 0x1
je r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax 0x1
add esp 0xfffffff4
push ebx
call sub_40e430
add esp 0x10
jmp r-xdata
add esp 0xfffffffc
push [ ebp + 0xc ]
push sub_40d969
push ebx
call sub_40fdc8
test eax eax
je r-xdata
sub_40d9d8
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov eax [ ebx ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
jmp r-xdata
mov eax [ ebx ]
test [ eax + 0xc ] 0x1
je r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
mov eax ebx
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax 0x1
add esp 0xfffffff4
push ebx
call sub_40e430
add esp 0x10
jmp r-xdata
mov eax [ ebx ]
mov esi [ eax ]
jmp r-xdata
test eax eax
je r-xdata
add esp 0xfffffff4
push esi
call sub_410eb0
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
add esp 0xfffffff8
push edi
push eax
call sub_410ed4
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx ]
or [ eax + 0x12 ] 0x1
mov eax [ ebx ]
or [ eax + 0x12 ] 0x2
jmp r-xdata
sub_40da70
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0x8 ]
mov al [ ebp + 0xc ]
mov [ ebp - 0x1 ] al
mov eax [ ebx ]
cmp [ eax + 0x12 ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x28 ]
leave
retn
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx ]
movsx edx [ ebp - 0x1 ]
add esp 0xfffffff8
push [ eax ]
push edx
call sub_410ed4
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
mov eax [ ebx ]
test [ eax + 0xd ] 0x60
je r-xdata
mov eax [ ebx ]
or [ eax + 0x12 ] 0x4
add esp 0xfffffff4
push ebx
call sub_40e54c
sub_40db00
push ebp
mov ebp esp
sub esp 0x5c
push edi
push esi
push ebx
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0xe ]
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x3c ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ eax + 0xc ]
mov eax edx
and eax 0x70
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4c ] ecx
cmp eax 0x20
jne r-xdata
cmp eax 0x40
jne r-xdata
nop
test esi esi
ja r-xdata
mov ecx r-xdata
test dh 0x2
je r-xdata
dec edi
mov al bl
and al 0x7
lea edx [ eax + 0x30 ]
mov [ edi ] dl
shrd ebx esi 0x3
shr esi 0x3
mov eax ebx
or eax esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x0
jge r-xdata
dec edi
push 0x0
push 0xa
push esi
push ebx
call sub_416e34
add esp 0x10
add al 0x30
mov [ edi ] al
push 0x0
push 0xa
push esi
push ebx
call sub_4170c0
add esp 0x10
mov ebx eax
mov esi edx
mov ecx ebx
mov ebx [ r-xdata ]
lea esi [ esi ]
dec edi
mov eax ebx
and eax 0xf
mov al [ eax + ecx ]
mov [ edi ] al
shrd ebx esi 0x4
shr esi 0x4
mov eax ebx
or eax esi
jne r-xdata
mov ecx r-xdata
lea eax [ edi - 0x22 ]
mov ecx [ ebp - 0x4c ]
sub ecx eax
mov [ ebp - 0x40 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ eax + 0x8 ]
mov [ eax + 0x8 ] 0x0
mov eax ecx
add eax [ ebp - 0x3c ]
cmp [ ebp + 0x14 ] 0x0
jge r-xdata
cmp dl 0x30
je r-xdata
dec edi
mov eax ecx
mul ebx
shr edx 0x3
lea eax [ edx + edx * 4 ]
add eax eax
sub ecx eax
add cl 0x30
mov [ edi ] cl
mov ecx edx
test ecx ecx
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0xc ] 0x0
jge r-xdata
add eax [ ebp - 0x38 ]
xor esi esi
cmp eax edx
jg r-xdata
inc eax
dec edi
mov [ edi ] 0x30
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
test [ eax + 0xd ] 0x4
je r-xdata
add ecx 0x10
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] 0x2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov ebx [ eax ]
mov edx [ eax + 0xc ]
and edx 0xe
mov [ ebp - 0x44 ] edx
mov al [ eax + 0x10 ]
mov [ ebp - 0x45 ] al
test esi esi
jle r-xdata
mov esi edx
sub esi eax
mov [ ebp - 0x3c ] 0x1
cmp [ ebp + 0x14 ] 0x0
jl r-xdata
cmp edx 0x2
je r-xdata
mov al 0x2b
cmp [ ebp + 0x14 ] 0x0
jge r-xdata
cmp [ ebp - 0x3c ] 0x0
je r-xdata
cmp edx 0x8
je r-xdata
movsx eax al
add esp 0xfffffff8
push ebx
push eax
call sub_410ed4
add esp 0x10
test eax eax
jl r-xdata
mov al 0x2d
cmp [ ebp - 0x38 ] 0x0
je r-xdata
add esp 0xfffffffc
push esi
movsx eax al
push eax
push ebx
call sub_410f2c
add esp 0x10
cmp eax esi
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
or [ eax + 0x12 ] 0x4
mov eax [ ecx ]
test [ eax + 0xd ] 0x60
je r-xdata
cmp [ ebp - 0x44 ] 0x8
jne r-xdata
add esp 0xfffffffc
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x38 ]
push ecx
mov edx [ ebp - 0x34 ]
push edx
push ebx
mov eax [ eax + 0x34 ]
call eax
add esp 0x10
test eax eax
je r-xdata
lea esp [ ebp - 0x68 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push ecx
call sub_40e54c
add esp 0xfffffffc
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x40 ]
push ecx
push edi
push ebx
mov eax [ eax + 0x34 ]
call eax
add esp 0x10
cmp eax [ ebp - 0x40 ]
jne r-xdata
test esi esi
jle r-xdata
cmp [ ebp - 0x44 ] 0x2
jne r-xdata
add esp 0xfffffffc
push esi
movsx eax [ ebp - 0x45 ]
push eax
push ebx
call sub_410f2c
add esp 0x10
cmp eax esi
jl r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
test [ eax + 0xd ] 0x60
je r-xdata
test esi esi
jle r-xdata
add esp 0xfffffff4
push edx
call sub_40e54c
jmp r-xdata
add esp 0xfffffffc
push esi
movsx eax [ ebp - 0x45 ]
push eax
push ebx
call sub_410f2c
add esp 0x10
cmp eax esi
jl r-xdata
sub_40dd78
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x12 ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx 0x1
mov edx [ ebp + 0xc ]
test edx edx
jge r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
push ecx
mov eax edx
xor edx edx
push edx
push eax
push ebx
call sub_40db00
mov eax [ ebx ]
test [ eax + 0xc ] 0x60
jne r-xdata
neg edx
mov ecx 0xffffffff
sub_40ddcc
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x12 ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push 0x0
mov eax [ ebp + 0xc ]
xor edx edx
push edx
push eax
push ebx
call sub_40db00
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
sub_40de08
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x12 ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx 0x1
mov edx [ ebp + 0xc ]
test edx edx
jge r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
push ecx
mov eax edx
xor edx edx
push edx
push eax
push ebx
call sub_40db00
mov eax [ ebx ]
test [ eax + 0xc ] 0x60
jne r-xdata
neg edx
mov ecx 0xffffffff
sub_40de5c
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x12 ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push 0x0
mov eax [ ebp + 0xc ]
xor edx edx
push edx
push eax
push ebx
call sub_40db00
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
sub_40de98
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov eax [ ebx ]
cmp [ eax + 0x12 ] 0x0
jne r-xdata
mov eax ebx
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov edx esi
mov ecx edi
test ecx ecx
jge r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
mov eax [ ebp - 0x4 ]
push eax
push ecx
push edx
push ebx
call sub_40db00
mov eax [ ebx ]
test [ eax + 0xc ] 0x60
jne r-xdata
neg edx
adc ecx 0x0
neg ecx
mov [ ebp - 0x4 ] 0xffffffff
sub_40df00
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov eax [ ebx ]
cmp [ eax + 0x12 ] 0x0
jne r-xdata
mov eax ebx
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push 0x0
push edi
push esi
push ebx
call sub_40db00
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
sub_40df44
push ebp
mov ebp esp
sub esp 0x20
push esi
push ebx
mov ebx [ ebp + 0x8 ]
fld [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x12 ] 0x0
jne r-xdata
mov eax ebx
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
leave
retn
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0xc ]
mov edx ecx
and edx 0x1800
cmp edx 0x1000
jne r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
cmp edx 0x800
jne r-xdata
mov esi 0x66
jmp r-xdata
mov esi 0x67
test ch 0x2
je r-xdata
mov esi 0x65
test ch 0x2
je r-xdata
mov ecx [ eax + 0x14 ]
test ecx ecx
jg r-xdata
mov esi 0x47
mov esi 0x45
jmp r-xdata
add esp 0xfffffff4
mov edx [ ebx ]
movsx eax [ edx + 0x10 ]
push eax
xor eax eax
test [ edx + 0xd ] 0x4
je r-xdata
test [ eax + 0xd ] 0x10
jne r-xdata
push eax
push [ edx + 0xc ]
push ecx
mov eax [ edx + 0x8 ]
mov [ edx + 0x8 ] 0x0
push eax
push esi
mov eax [ ebx ]
push [ eax ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_40f850
add esp 0x30
test eax eax
jge r-xdata
mov eax 0x2b
mov ecx 0x6
mov eax [ ebx ]
test [ eax + 0xd ] 0x60
je r-xdata
mov eax [ ebx ]
or [ eax + 0x12 ] 0x6
add esp 0xfffffff4
push ebx
call sub_40e54c
sub_40e034
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x12 ] 0x0
jne r-xdata
mov eax ebx
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
mov edi [ ebp + 0xc ]
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea edi [ ecx - 0x1 ]
mov eax [ ebx ]
mov edx [ eax + 0x8 ]
mov [ eax + 0x8 ] 0x0
mov eax [ ebx ]
mov cl [ eax + 0x10 ]
mov [ ebp - 0x1 ] cl
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
xor esi esi
cmp edx edi
jle r-xdata
mov [ ebp + 0xc ] r-xdata
test [ eax + 0xc ] 0x2
jne r-xdata
mov esi edx
sub esi edi
add esp 0xfffffffc
mov edx [ ebp - 0x8 ]
mov eax [ edx + 0x48 ]
push edi
mov ecx [ ebp + 0xc ]
push ecx
push edx
mov eax [ eax + 0x34 ]
call eax
add esp 0x10
cmp eax edi
jne r-xdata
test esi esi
jle r-xdata
mov eax [ ebx ]
or [ eax + 0x12 ] 0x4
mov eax [ ebx ]
test [ eax + 0xc ] 0x2
je r-xdata
add esp 0xfffffffc
push esi
movsx eax [ ebp - 0x1 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_410f2c
add esp 0x10
cmp eax esi
jne r-xdata
add esp 0xfffffff4
push ebx
call sub_40e54c
mov eax [ ebx ]
test [ eax + 0xd ] 0x60
je r-xdata
test esi esi
jle r-xdata
add esp 0xfffffffc
push esi
movsx eax [ ebp - 0x1 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_410f2c
add esp 0x10
cmp eax esi
je r-xdata
sub_40e128
push ebp
mov ebp esp
sub esp 0x20c
push edi
push esi
push ebx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x12 ] 0x0
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edi [ eax ]
lea esi [ ebp - 0x200 ]
jmp r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
mov eax [ ebp + 0x8 ]
lea esp [ ebp - 0x218 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffffc
push 0x200
push esi
mov eax [ ebp + 0xc ]
push eax
call sub_41083c
mov ebx eax
add esp 0x10
test ebx ebx
jne r-xdata
add esp 0xfffffffc
mov eax [ edi + 0x48 ]
push ebx
push esi
push edi
mov eax [ eax + 0x34 ]
call eax
add esp 0x10
cmp eax ebx
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
test [ eax + 0xd ] 0x60
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
or [ eax + 0x12 ] 0x4
jmp r-xdata
add esp 0xfffffff4
push edx
call sub_40e54c
sub_40e1c8
push ebp
mov ebp esp
sub esp 0x6c
push edi
push esi
push ebx
call sub_416270
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea ecx [ ebp - 0x20 ]
mov [ ebx + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] rw-data
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x4
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov [ eax + 0x1c ] rw-data
mov [ eax + 0x12 ] 0x4
mov [ eax + 0x13 ] 0x0
mov [ edx + 0x4 ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0x20
mov [ eax + 0xc ] 0x11
mov [ eax + 0x14 ] 0x6
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea edi [ ebp - 0x40 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ edx ]
lea edx [ ebp - 0x40 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
add eax 0xfffffffc
mov edx ecx
sub edx eax
movzx eax [ rw-data ]
add eax edx
mov [ ebp - 0x38 ] ax
mov [ edx + 0x12 ] 0x0
mov [ edx + 0x12 ] 0x4
jmp r-xdata
mov [ edx + 0x13 ] 0x0
mov eax [ ebp + 0x10 ]
mov [ edx ] eax
mov eax [ ebp + 0x14 ]
mov [ edx + 0x4 ] eax
mov [ edx + 0x8 ] 0x0
mov [ edx + 0x10 ] 0x20
mov [ edx + 0xc ] 0x11
mov [ edx + 0x14 ] 0x6
mov [ edx + 0x18 ] 0x0
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop ebx
pop esi
pop edi
leave
retn
sub_40e2e8
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
add esp 0xfffffffc
push 0x2
push [ ebp + 0xc ]
push [ eax ]
call sub_410fb8
cmp eax 0xffffffff
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax [ ebx ]
or [ eax + 0x12 ] 0x4
sub_40e318
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push 0x2
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx ]
push [ eax ]
call sub_410fec
cmp eax 0xffffffff
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax [ ebx ]
or [ eax + 0x12 ] 0x4
sub_40e348
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push 0x2
push 0x1
push 0x0
mov eax [ ebx ]
push [ eax ]
call sub_410fec
mov edx eax
cmp edx 0xffffffff
jne r-xdata
mov eax edx
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax [ ebx ]
or [ eax + 0x12 ] 0x4
sub_40e378
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
mov eax [ ebx ]
mov eax [ eax ]
mov ecx [ eax + 0x48 ]
movsx edx [ ecx + 0x58 ]
add eax edx
push eax
mov eax [ ecx + 0x5c ]
call eax
test eax eax
je r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax [ ebx ]
or [ eax + 0x12 ] 0x4
sub_40e3c0
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
jmp r-xdata
add esp 0xfffffff4
mov eax [ ebx ]
push [ eax ]
call sub_40cf40
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
mov edx [ eax ]
mov eax [ edx + 0x4 ]
cmp [ edx + 0x8 ] eax
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff8
movsx eax al
push eax
mov eax [ ebx ]
push [ eax ]
call sub_40f06c
mov eax [ ebx ]
or [ eax + 0x12 ] 0x1
jmp r-xdata
add esp 0xfffffff4
push ecx
call sub_40e378
add esp 0x10
sub_40e430
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
mov eax [ ebx ]
push [ eax ]
call sub_40cf40
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx ]
or [ eax + 0x12 ] 0x3
xor eax eax
add esp 0xfffffff8
movsx eax al
push eax
mov eax [ ebx ]
push [ eax ]
call sub_40f06c
mov eax 0x1
jmp r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
sub_40e478
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
add esp 0xfffffff8
push [ eax ]
push 0x0
call sub_410ed4
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
sub_40e498
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
mov eax [ ebx ]
add esp 0xfffffff8
push [ eax ]
push 0xa
call sub_410ed4
add esp 0x10
push ebx
call sub_40e3ac
mov ebx [ ebp - 0x18 ]
leave
retn
sub_40e4e4
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov eax [ ebx ]
cmp [ eax + 0x12 ] 0x0
jne r-xdata
mov eax ebx
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
add esp 0xfffffffc
mov edx [ ebx ]
mov eax [ edx ]
mov eax [ eax + 0x48 ]
push esi
push [ ebp + 0xc ]
push [ edx ]
mov eax [ eax + 0x34 ]
call eax
add esp 0x10
cmp eax esi
je r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
mov eax [ ebx ]
test [ eax + 0xd ] 0x60
je r-xdata
mov eax [ ebx ]
or [ eax + 0x12 ] 0x2
add esp 0xfffffff4
push ebx
call sub_40e54c
sub_40e54c
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
test [ eax + 0xd ] 0x20
je r-xdata
mov eax [ ebx ]
test [ eax + 0xd ] 0x40
je r-xdata
add esp 0xfffffff4
push ebx
call sub_40e378
add esp 0x10
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff4
mov eax [ _iob@IAT ]
add eax 0x20
push eax
call fflush
add esp 0xfffffff4
mov eax [ _iob@IAT ]
add eax 0x40
push eax
call fflush
sub_40e59c
push ebp
mov ebp esp
sub esp 0x1bc
push edi
push esi
push ebx
call sub_416270
mov ebx eax
mov [ ebp - 0x1a4 ] ebx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
mov edx ebx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea ecx [ ebp - 0x40 ]
mov [ ebx + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] rw-data
lea edi [ ebp - 0x60 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ edx ]
lea edx [ ebp - 0x60 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
add eax 0xfffffff8
mov edx ecx
sub edx eax
movzx eax [ rw-data ]
add eax edx
mov [ ebp - 0x58 ] ax
mov [ ecx + 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x9c ] 0x0
lea eax [ ebp - 0x98 ]
mov [ ebp - 0x98 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea ecx [ ebp - 0xa0 ]
mov [ ebx + 0x4 ] ecx
mov edx [ ebp - 0x1a4 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0xbc ] 0x0
mov [ ebp - 0xb8 ] ecx
mov [ ebp - 0xb4 ] r-xdata
mov [ ebp - 0xb0 ] esp
lea ecx [ ebp - 0xc0 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
mov [ eax + 0x1c ] rw-data
lea edi [ ebp - 0xe0 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
lea ecx [ ebp - 0xe0 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
sub eax [ eax + 0x8 ]
add eax 0xc
movzx ecx [ rw-data ]
add ecx eax
mov [ ebp - 0xd8 ] cx
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x120 ] eax
mov [ ebp - 0x11c ] 0x0
lea eax [ ebp - 0x118 ]
mov [ ebp - 0x118 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x120 ]
mov [ ebx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] rw-data
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xc
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
mov [ edx ] eax
mov [ eax + 0x1c ] rw-data
mov [ eax + 0x12 ] 0x4
mov [ eax + 0x13 ] 0x0
mov [ edx + 0xc ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0x20
mov [ eax + 0xc ] 0x11
mov [ eax + 0x14 ] 0x6
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea edi [ ebp - 0x140 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ edx ]
lea edx [ ebp - 0x140 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
add eax 0xfffffff4
mov edx ecx
sub edx eax
movzx eax [ rw-data ]
add eax edx
mov [ ebp - 0x138 ] ax
mov [ edx + 0x12 ] 0x0
mov [ edx + 0x12 ] 0x4
jmp r-xdata
mov [ edx + 0x13 ] 0x0
mov eax [ ebp + 0x10 ]
mov [ edx ] eax
mov eax [ ebp + 0x14 ]
mov [ edx + 0x4 ] eax
mov [ edx + 0x8 ] 0x0
mov [ edx + 0x10 ] 0x20
mov [ edx + 0xc ] 0x11
mov [ edx + 0x14 ] 0x6
mov [ edx + 0x18 ] 0x0
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop ebx
pop esi
pop edi
leave
retn
sub_40e830
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx ]
test [ ecx + 0x1 ] 0x20
je r-xdata
test ecx ecx
je r-xdata
add esp 0xfffffff4
push ecx
call sub_40f750
jmp r-xdata
mov [ ebx ] 0x0
mov [ ebx + 0x12 ] 0x4
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff4
mov eax [ ecx + 0x48 ]
movsx edx [ eax + 0x58 ]
add edx ecx
push edx
mov eax [ eax + 0x5c ]
call eax
sub_40e878
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ecx + 0xc ]
mov edx eax
and edx 0x1
cmp [ ebp + 0xc ] 0x0
je r-xdata
and al 0xfe
or al 0x1
jmp r-xdata
mov [ ecx + 0xc ] eax
mov eax edx
leave
retn
sub_40e930
push ebp
mov ebp esp
sub esp 0x5c
push edi
push esi
push ebx
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
pop ebx
pop esi
pop edi
leave
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
lea edi [ ebp - 0x50 ]
xor edx edx
mov eax edx
cld
mov ecx 0x14
[ edi ]
mov [ ebp - 0x50 ] 0xfbad208a
mov [ ebp - 0x1c ] rw-data
mov [ ebp - 0x8 ] rw-data
mov ebx [ _iob@IAT ]
mov [ ebp - 0x4 ] ebx
mov edi rw-data
lea esi [ ebp - 0x50 ]
cld
mov ecx 0x14
[ edi ] [ esi ]
lea edi [ ebp - 0x50 ]
cld
mov ecx 0x14
[ edi ]
mov [ ebp - 0x50 ] 0xfbad2086
mov [ ebp - 0x1c ] rw-data
mov [ ebp - 0x18 ] 0x1
mov [ ebp - 0x8 ] rw-data
lea eax [ ebx + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edi rw-data
lea esi [ ebp - 0x50 ]
cld
mov ecx 0x14
[ edi ] [ esi ]
lea edi [ ebp - 0x50 ]
mov eax edx
cld
mov ecx 0x14
[ edi ]
mov [ ebp - 0x50 ] 0xfbad2086
mov [ ebp - 0x1c ] rw-data
mov [ ebp - 0x18 ] 0x2
mov [ ebp - 0x8 ] rw-data
add ebx 0x40
mov [ ebp - 0x4 ] ebx
mov edi rw-data
lea esi [ ebp - 0x50 ]
cld
mov ecx 0x14
[ edi ] [ esi ]
sub_40ea28
push ebp
mov ebp esp
sub esp 0x5c
push edi
push esi
push ebx
call sub_416270
mov [ ebp - 0x44 ] eax
add esp 0xfffffff8
add esp 0xfffffff4
mov eax [ ebp + 0xc ]
push eax
call sub_41a2f8
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_40f388
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x48 ] rw-data
add esp 0x20
mov eax [ ebp + 0xc ]
mov [ edx + 0x4c ] eax
add esp 0xfffffffc
push 0x0
push 0x0
push edx
call sub_40f6c4
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea esp [ ebp - 0x68 ]
pop ebx
pop esi
pop edi
leave
retn
sub_40eb00
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov [ ebx + 0x48 ] rw-data
add esp 0xfffffffc
mov edx [ ebx + 0x10 ]
mov eax [ ebx + 0x14 ]
sub eax edx
push eax
push edx
push ebx
call sub_4112f8
add esp 0x10
add esp 0xfffffff8
push esi
push ebx
call sub_40f544
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
sub_40eb3c
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov edx [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
cmp eax 0x1
jne r-xdata
push [ edx + 0x4c ]
push eax
push 0x1
push ebx
call fread
add esp 0xfffffff4
push [ edx + 0x4c ]
call getc
cmp eax 0xffffffff
jne r-xdata
mov [ ebx ] al
mov eax 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
sub_40eb88
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
push [ ebx + 0x4c ]
push esi
push 0x1
push [ ebp + 0xc ]
call fwrite
mov edx [ ebx + 0x40 ]
test edx edx
jl r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
add edx esi
mov [ ebx + 0x40 ] edx
sub_40ebf8
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffffc
mov edx [ ebx + 0x10 ]
mov eax [ ebx + 0x14 ]
sub eax edx
push eax
push edx
push ebx
call sub_4112f8
add esp 0x10
test eax eax
jne r-xdata
mov eax 0xffffffff
jmp r-xdata
test [ ebx ] 0x8
jne r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
xor eax eax
add esp 0xfffffff4
push [ ebx + 0x4c ]
call fflush
test eax eax
je r-xdata
sub_40ec40
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
add esp 0xfffffff8
push ebx
push esi
call sub_40f6f4
add esp 0x10
cmp eax 0xffffffff
je r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
add esp 0xfffffff4
push [ esi + 0x4c ]
call fflush
jmp r-xdata
sub_40ec80
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov edx [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov eax [ edx ]
shr eax 0x1
xor al 0x1
test al 0x1
jne r-xdata
add esp 0xfffffffc
push ecx
push ebx
push edx
call sub_40ee18
push [ edx + 0x4c ]
push ecx
push 0x1
push ebx
call fwrite
jmp r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
sub_40ecb8
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
test [ ecx ] 0x2
jne r-xdata
mov eax [ ecx ]
test al 0x2
je r-xdata
leave
retn
add esp 0xfffffffc
mov eax [ ecx + 0x48 ]
push 0x0
push 0x0
movsx edx [ eax + 0x50 ]
add edx ecx
push edx
mov eax [ eax + 0x54 ]
call eax
and al 0xfd
mov [ ecx ] eax
jmp r-xdata
sub_40ed3e
inc edx
add [ eax ] al
add [ eax ] al
pushad
aaa
outsd
jae r-xdata
in al dx
or [ ebx + 0x75fff4c4 ] al
or al ch
sbb edx [ esi ]
add [ eax ] al
jb r-xdata
leave
retn
or al ch
rcl [ 0xffffffffc3c90000 ] cl
nop
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_4103e4
popad
insd
add [ edi ] dh
imul esi [ ebx + 0x74 ] 0x6d616572
add [ ecx ] dh
xor [ edi + 0x69 ] ebx
outsd
jae r-xdata
imul sp [ ebp + 0x6c ] 0x7364
add [ ecx ] bh
jae r-xdata
push [ ebp + 0xc ]
movsx eax [ ecx + 0x10 ]
add edx eax
push edx
mov eax [ ecx + 0x14 ]
call eax
leave
retn
jb r-xdata
in eax 0x83
in al dx
or [ ebx - 0x3b7cf7ab ] cl
clc
mov ecx [ edx + 0x48 ]
popad
insd
bound esi [ ebp + 0x66 ]
add [ eax ] bh
pop edi
dec ecx
dec edi
pop edi
inc esi
dec ecx
dec esp
inc ebp
add [ ebp - 0x76aaff8a ] cl
in eax 0x83
in al dx
or [ ebx + 0x75fff4c4 ] al
or al ch
pop ss
adc eax 0xc3c90000
nop
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_4102e8
leave
retn
sub_40edcc
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
add esp 0xfffffff8
mov ecx [ edx + 0x48 ]
push [ ebp + 0xc ]
movsx eax [ ecx + 0x10 ]
add edx eax
push edx
mov eax [ ecx + 0x14 ]
call eax
leave
retn
sub_40ee50
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx edi
lea esi [ esi ]
test ebx ebx
je r-xdata
cmp eax ebx
jle r-xdata
sub edi ebx
mov eax edi
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push esi
call sub_4105ac
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
add edx eax
mov [ esi + 0x4 ] edx
sub ebx eax
mov eax ebx
mov edx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
sub eax edx
test eax eax
jle r-xdata
sub_40eec0
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
add esp 0xfffffff4
mov eax [ ebx + 0x48 ]
movsx edx [ eax + 0x58 ]
add edx ebx
push edx
mov eax [ eax + 0x5c ]
call eax
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
or [ ebx ] 0x2
push 0x0
lea eax [ ebx + 0x48 ]
push eax
lea eax [ ebx + 0x47 ]
push eax
jmp r-xdata
test edi edi
jne r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
push ebx
call sub_40efa0
add esp 0x10
mov [ ebx + 0x14 ] 0x0
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] 0x0
test [ ebx + 0x1 ] 0x1
je r-xdata
and [ ebx ] 0xfd
push 0x0
lea eax [ edi + esi ]
push eax
push esi
mov [ ebx + 0xc ] 0x0
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov eax ebx
add esp 0xfffffff4
push ebx
call sub_4103e4
sub_40ef60
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x48 ]
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
movsx eax [ ecx + 0x40 ]
add edx eax
push edx
mov eax [ ecx + 0x44 ]
call eax
leave
retn
sub_40efe4
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] rw-data
add esp 0xfffffff8
push eax
push ebx
call sub_4109dc
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
sub_40f00c
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov [ esi + 0x48 ] rw-data
add esp 0xfffffff8
push 0x0
push esi
call sub_410a58
add esp 0x10
test bl 0x1
je r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
add esp 0xfffffff4
push esi
call sub_4160b0
sub_40f098
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x44 ] 0x0
jne r-xdata
add esp 0xfffffffc
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x14 ]
sub eax edx
push eax
push edx
movzx eax [ ecx + 0x44 ]
dec eax
push eax
call sub_410b50
mov eax 0xffffffff
jmp r-xdata
leave
retn
sub_40f13c
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff8
push [ ebp + 0xc ]
push ebx
call sub_410c4c
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
sub_40f15c
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
add esp 0xfffffff4
push esi
call sub_410c94
add esp 0x10
test bl 0x1
je r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
add esp 0xfffffff4
push esi
call sub_4160b0
sub_40f210
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov eax [ eax ]
test eax eax
je r-xdata
mov eax edx
leave
retn
mov eax [ eax ]
and eax 0xc
cmp eax 0xc
setne al
movzx edx al
sub_40f2c4
push ebp
mov ebp esp
sub esp 0x5c
push edi
push esi
push ebx
call sub_416270
mov [ ebp - 0x44 ] eax
add esp 0xfffffff8
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_40efe4
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] sub_40f330
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x48 ] rw-data
add esp 0x10
add esp 0xfffffff4
push edx
call sub_411040
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea esp [ ebp - 0x68 ]
pop ebx
pop esi
pop edi
leave
retn
sub_40f330
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x38 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
add esp 0xfffffff8
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_40f00c
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
add esp 0x10
call sub_416430
nop
call sub_4161e0
lea esi [ esi ]
lea esp [ ebp - 0x68 ]
pop ebx
pop esi
pop edi
leave
retn
sub_40f388
push ebp
mov ebp esp
sub esp 0x5c
push edi
push esi
push ebx
call sub_416270
mov [ ebp - 0x44 ] eax
add esp 0xfffffff8
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_40efe4
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x48 ] rw-data
add esp 0x10
add esp 0xfffffff4
push edx
call sub_411040
add esp 0xfffffff8
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
call sub_411264
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea esp [ ebp - 0x68 ]
pop ebx
pop esi
pop edi
leave
retn
sub_40f45c
push ebp
mov ebp esp
sub esp 0x5c
push edi
push esi
push ebx
call sub_416270
mov [ ebp - 0x44 ] eax
add esp 0xfffffff8
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_40efe4
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] sub_40f4ec
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov [ edx + 0x48 ] rw-data
add esp 0x10
add esp 0xfffffff4
push edx
call sub_411040
add esp 0xfffffff8
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
call sub_411264
add esp 0x20
add esp 0xfffffffc
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push edx
call sub_40f6c4
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea esp [ ebp - 0x68 ]
pop ebx
pop esi
pop edi
leave
retn
sub_40f4ec
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x38 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
add esp 0xfffffff8
push 0x0
mov edx [ ebp + 0x8 ]
push edx
call sub_40f00c
mov edx [ ebp - 0x44 ]
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
add esp 0x10
call sub_416430
nop
call sub_4161e0
lea esi [ esi ]
lea esp [ ebp - 0x68 ]
pop ebx
pop esi
pop edi
leave
retn
sub_40f544
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx + 0x48 ] rw-data
cmp [ ebx + 0x38 ] 0x0
jl r-xdata
add esp 0xfffffff8
push [ ebp + 0xc ]
push ebx
call sub_40f00c
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffffc
mov edx [ ebx + 0x10 ]
mov eax [ ebx + 0x14 ]
sub eax edx
push eax
push edx
push ebx
call sub_4112f8
add esp 0x10
test [ ebx ] 0x40
jne r-xdata
add esp 0xfffffff4
mov eax [ ebx + 0x48 ]
push ebx
mov eax [ eax + 0x84 ]
call eax
add esp 0x10
sub_40f59c
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
cmp [ edi + 0x38 ] 0x0
jge r-xdata
xor eax eax
jmp r-xdata
test bl 0x8
je r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax ebx
and eax 0x3
cmp eax 0x3
jne r-xdata
or ebx 0x2
test bl 0x2
je r-xdata
mov eax 0x2
xor esi esi
jmp r-xdata
test bl 0x1
je r-xdata
mov eax 0x1
mov esi 0x4
jmp r-xdata
test bl bl
jge r-xdata
xor eax eax
mov esi 0xc
xor eax eax
mov esi 0x8
jmp r-xdata
test bl 0x10
jne r-xdata
and bl 0x7f
or ah 0x80
or ah 0x2
cmp ebx 0x2
jne r-xdata
test bl 0x20
jne r-xdata
or al 0x8
or esi 0x1000
test bl 0x8
je r-xdata
test bl 0x40
je r-xdata
cmp ebx 0x1
je r-xdata
add esp 0xfffffffc
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
call _open
add esp 0x10
test eax eax
jl r-xdata
or ah 0x4
or ah 0x1
mov [ edi + 0x38 ] eax
mov eax [ edi ]
and eax 0xffffeff3
and esi 0x100c
or eax esi
mov [ edi ] eax
test bl 0x4
je r-xdata
add esp 0xfffffff4
push edi
call sub_4102e8
mov eax edi
push 0x3
push 0x2
push 0x0
push edi
call sub_410fec
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
sub_40f750
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
push ebx
call sub_41106c
xor edx edx
test eax eax
jne r-xdata
mov eax edx
mov ebx [ ebp - 0x18 ]
leave
retn
mov edx ebx
sub_40f82d
add [ eax ] eax
add [ edi ] dh
imul bp [ ebp + 0x62 ] 0x6675
add [ ecx ] bh
jae r-xdata
cmp ecx 0x40
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ecx + edi * 8 ] dh
jb r-xdata
cmp [ ebp - 0x2c ] 0x3
je r-xdata
inc ebx
jmp r-xdata
inc eax
add [ eax ] ch
stc
inc eax
add [ ecx + edi * 8 + 0x40 ] cl
add bh al
inc ebp
aam 0x3
add [ eax ] al
add bl ch
push edx
lea esi [ esi ]
add [ ecx + edi * 8 + 0x40 ] cl
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx - 0x7cffbf07 ] al
stc
inc eax
add [ ebx + 0x340040f9 ] al
stc
popad
insd
bound esi [ ebp + 0x66 ]
add [ eax ] bh
pop edi
dec ecx
dec edi
pop edi
inc esi
dec ecx
dec esp
inc ebp
add [ ecx - 0x1a76aa0a ] cl
sub esp 0x6c
push edi
push esi
push ebx
fld [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
mov edx [ ebp + 0x20 ]
xor edi edi
mov [ ebp - 0x20 ] edx
and [ ebp - 0x20 ] 0xe
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x28 ] edx
shr [ ebp - 0x28 ] 0x8
and [ ebp - 0x28 ] 0x1
mov [ ebp - 0x44 ] 0x0
mov eax [ ebp + 0x14 ]
add eax 0xffffffbb
cmp eax 0x22
ja r-xdata
add esp 0xfffffffc
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov edx [ ebp - 0x2c ]
push edx
sub esp 0x8
fstp [ esp ]
call sub_413a48
mov [ ebp - 0x3c ] eax
mov esi [ ebp - 0x14 ]
sub esi eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x40 ] eax
add esp 0x20
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov [ ebp - 0x2c ] 0x0
cmp ebx 0x3e7
jne r-xdata
jmp [ eax * 4 + jump_table_40f89c ]
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x4c ] edx
cmp [ ebp - 0x2c ] 0x3
je r-xdata
mov ebx esi
mov [ ebp - 0x2c ] 0x3
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x2c ] 0x2
cmp ebx 0x3e7
je r-xdata
mov [ ebp - 0x44 ] 0x45
cmp [ ebp + 0x14 ] 0x67
jne r-xdata
mov eax [ ebp - 0x40 ]
add eax 0xfffffff4
mov edx [ ebp - 0x4c ]
sub edx eax
mov [ ebp - 0x30 ] edx
cmp [ ebp - 0x2c ] 0x1
jne r-xdata
mov eax [ ebp - 0x1c ]
cmp eax 0x270f
je r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x44 ] 0x65
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ eax - 0x1 ]
cmp [ ebp + 0x14 ] 0x67
je r-xdata
test dh 0x1
jne r-xdata
mov ebx 0x1
cmp [ ebp - 0x1c ] 0x270f
jne r-xdata
mov [ ebp - 0x1c ] 0x1
cmp ecx 0xfffffffc
jl r-xdata
cmp [ ebp + 0x14 ] 0x46
jne r-xdata
mov [ ebp + 0x14 ] 0x67
mov [ ebp - 0x2c ] 0x2
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov [ ebp - 0x1c ] esi
xor ebx ebx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x45 ] 0x2b
test ecx ecx
jge r-xdata
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x14 ] 0x66
jne r-xdata
mov [ ebp - 0x34 ] 0x0
mov ecx [ ebp - 0x1c ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov esi esi
mov [ ebp - 0x45 ] 0x2d
neg ecx
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov [ ebp - 0x34 ] ebx
mov ecx [ ebp - 0x1c ]
cmp esi ecx
jle r-xdata
cmp esi ecx
jle r-xdata
dec [ ebp - 0x40 ]
mov eax 0x66666667
imul ecx
sar edx 0x2
mov eax ecx
sar eax 0x1f
sub edx eax
lea eax [ edx + edx * 4 ]
add eax eax
sub ecx eax
add cl 0x30
mov eax [ ebp - 0x40 ]
mov [ eax ] cl
mov ecx edx
cmp edx 0x9
jg r-xdata
dec eax
add dl 0x30
mov [ eax ] dl
dec eax
mov dl [ ebp - 0x45 ]
mov [ eax ] dl
dec eax
mov [ ebp - 0x40 ] eax
mov dl [ ebp - 0x44 ]
mov [ eax ] dl
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x34 ] ebx
sub [ ebp - 0x34 ] esi
cmp esi ecx
jg r-xdata
sub ebx esi
mov [ ebp - 0x34 ] ebx
mov ecx [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jge r-xdata
mov eax esi
sub eax ecx
sub [ ebp - 0x34 ] eax
jmp r-xdata
cmp [ ebp + 0x24 ] 0x0
jne r-xdata
mov [ ebp - 0x28 ] 0x1
sub ebx ecx
mov [ ebp - 0x34 ] ebx
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x34 ] 0x0
cmp [ ebp + 0x24 ] 0x2b
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x20
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx 0x2b
cmp [ ebp - 0x18 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov ebx 0x2d
mov ebx 0x2d
jmp r-xdata
mov eax [ ebp - 0x34 ]
add eax [ ebp - 0x30 ]
mov eax [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
lea eax [ edx + eax + 0x1 ]
mov [ ebp - 0x54 ] eax
jmp r-xdata
test ecx ecx
jg r-xdata
sub ecx esi
add eax ecx
jmp r-xdata
add eax [ ebp - 0x28 ]
add eax esi
cmp ecx esi
jle r-xdata
mov [ ebp - 0x38 ] 0x0
cmp [ ebp + 0x18 ] eax
jle r-xdata
inc eax
sub eax ecx
cmp [ ebp - 0x38 ] 0x0
jle r-xdata
mov edx [ ebp + 0x18 ]
sub edx eax
mov [ ebp - 0x38 ] edx
test ebx ebx
je r-xdata
cmp [ ebp - 0x20 ] 0x2
je r-xdata
cmp [ ebp - 0x20 ] 0x8
jne r-xdata
add esp 0xfffffff8
mov eax [ ebp + 0x10 ]
push eax
push ebx
call sub_410ed4
add esp 0x10
test eax eax
jl r-xdata
cmp [ ebp - 0x20 ] 0x8
je r-xdata
mov ebx [ ebp - 0x1c ]
test ebx ebx
jle r-xdata
cmp [ ebp - 0x38 ] 0x0
jle r-xdata
mov eax 0xffffffff
inc edi
lea esi [ esi ]
mov edi [ ebp - 0x38 ]
add esp 0xfffffffc
push edi
mov eax [ ebp + 0x28 ]
push eax
mov edx [ ebp + 0x10 ]
push edx
call sub_410f2c
add esp 0x10
cmp eax edi
jne r-xdata
add esp 0xfffffff8
mov edx [ ebp + 0x10 ]
push edx
push 0x30
call sub_410ed4
add esp 0x10
test eax eax
jl r-xdata
cmp esi ebx
jl r-xdata
add edi [ ebp - 0x38 ]
add esp 0xfffffffc
mov edx [ ebp - 0x38 ]
push edx
mov eax [ ebp + 0x28 ]
push eax
mov edx [ ebp + 0x10 ]
push edx
call sub_410f2c
add esp 0x10
cmp eax [ ebp - 0x38 ]
jne r-xdata
inc edi
cmp [ ebp - 0x28 ] 0x0
je r-xdata
add edi esi
add esp 0xfffffffc
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x48 ]
push esi
mov edx [ ebp - 0x3c ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ eax + 0x34 ]
call eax
add esp 0x10
cmp eax esi
jne r-xdata
add edi ebx
add esp 0xfffffffc
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x48 ]
push ebx
mov edx [ ebp - 0x3c ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ eax + 0x34 ]
call eax
jmp r-xdata
nop
add edi [ ebp - 0x34 ]
add esp 0xfffffffc
mov eax [ ebp - 0x34 ]
push eax
push 0x30
mov edx [ ebp + 0x10 ]
push edx
call sub_410f2c
add esp 0x10
cmp eax [ ebp - 0x34 ]
jne r-xdata
add esp 0xfffffff8
mov eax [ ebp + 0x10 ]
push eax
push 0x2e
call sub_410ed4
add esp 0x10
test eax eax
jl r-xdata
mov ebx [ ebp - 0x1c ]
sub ebx esi
add edi ebx
add esp 0xfffffffc
push ebx
push 0x30
mov eax [ ebp + 0x10 ]
push eax
call sub_410f2c
mov esi esi
add esp 0x10
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov ebx [ ebp - 0x1c ]
neg ebx
lea edi [ ebx + edi + 0x1 ]
add esp 0xfffffffc
push ebx
push 0x30
mov edx [ ebp + 0x10 ]
push edx
call sub_410f2c
add esp 0x10
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp - 0x20 ] 0x2
jne r-xdata
add edi [ ebp - 0x30 ]
add esp 0xfffffffc
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x48 ]
mov edx [ ebp - 0x30 ]
push edx
mov edx [ ebp - 0x40 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ eax + 0x34 ]
call eax
add esp 0x10
cmp eax [ ebp - 0x30 ]
jne r-xdata
add edi esi
add esp 0xfffffffc
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x48 ]
push esi
mov edx [ ebp - 0x3c ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ eax + 0x34 ]
call eax
add esp 0x10
cmp eax esi
jne r-xdata
add esp 0xfffffff8
mov edx [ ebp + 0x10 ]
push edx
push 0x2e
call sub_410ed4
add esp 0x10
test eax eax
jl r-xdata
mov eax edi
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
jle r-xdata
inc edi
mov ecx [ ebp - 0x1c ]
cmp esi ecx
jle r-xdata
lea esp [ ebp - 0x78 ]
pop ebx
pop esi
pop edi
leave
retn
add edi [ ebp - 0x38 ]
add esp 0xfffffffc
mov eax [ ebp - 0x38 ]
push eax
mov edx [ ebp + 0x28 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
call sub_410f2c
cmp eax [ ebp - 0x38 ]
jne r-xdata
mov ebx esi
sub ebx ecx
add edi ebx
add esp 0xfffffffc
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x48 ]
push ebx
mov eax [ ebp - 0x3c ]
add eax ecx
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ edx + 0x34 ]
call eax
add esp 0x10
cmp eax ebx
jne r-xdata
jmp r-xdata
sub_40f850
push ebp
mov ebp esp
sub esp 0x6c
push edi
push esi
push ebx
fld [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
mov edx [ ebp + 0x20 ]
xor edi edi
mov [ ebp - 0x20 ] edx
and [ ebp - 0x20 ] 0xe
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x28 ] edx
shr [ ebp - 0x28 ] 0x8
and [ ebp - 0x28 ] 0x1
mov [ ebp - 0x44 ] 0x0
mov eax [ ebp + 0x14 ]
add eax 0xffffffbb
cmp eax 0x22
ja r-xdata
cmp ebx 0x3e7
jne r-xdata
jmp [ eax * 4 + jump_table_40f89c ]
add esp 0xfffffffc
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov edx [ ebp - 0x2c ]
push edx
sub esp 0x8
fstp [ esp ]
call sub_413a48
mov [ ebp - 0x3c ] eax
mov esi [ ebp - 0x14 ]
sub esi eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x40 ] eax
add esp 0x20
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x3
je r-xdata
mov [ ebp - 0x2c ] 0x3
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x2c ] 0x2
cmp ebx 0x3e7
je r-xdata
mov [ ebp - 0x44 ] 0x45
cmp [ ebp + 0x14 ] 0x67
jne r-xdata
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x4c ] edx
cmp [ ebp - 0x2c ] 0x3
je r-xdata
mov ebx esi
mov [ ebp - 0x2c ] 0x0
inc ebx
jmp r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x44 ] 0x65
mov eax [ ebp - 0x40 ]
add eax 0xfffffff4
mov edx [ ebp - 0x4c ]
sub edx eax
mov [ ebp - 0x30 ] edx
cmp [ ebp - 0x2c ] 0x1
jne r-xdata
mov eax [ ebp - 0x1c ]
cmp eax 0x270f
je r-xdata
test dh 0x1
jne r-xdata
mov ebx 0x1
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ eax - 0x1 ]
cmp [ ebp + 0x14 ] 0x67
je r-xdata
mov [ ebp + 0x14 ] 0x67
mov [ ebp - 0x2c ] 0x2
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x1c ] 0x270f
jne r-xdata
mov [ ebp - 0x1c ] 0x1
cmp ecx 0xfffffffc
jl r-xdata
cmp [ ebp + 0x14 ] 0x46
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov [ ebp - 0x1c ] esi
xor ebx ebx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x45 ] 0x2b
test ecx ecx
jge r-xdata
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x14 ] 0x66
jne r-xdata
mov [ ebp - 0x34 ] 0x0
mov ecx [ ebp - 0x1c ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov esi esi
mov [ ebp - 0x45 ] 0x2d
neg ecx
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov [ ebp - 0x34 ] ebx
mov ecx [ ebp - 0x1c ]
cmp esi ecx
jle r-xdata
cmp esi ecx
jle r-xdata
dec [ ebp - 0x40 ]
mov eax 0x66666667
imul ecx
sar edx 0x2
mov eax ecx
sar eax 0x1f
sub edx eax
lea eax [ edx + edx * 4 ]
add eax eax
sub ecx eax
add cl 0x30
mov eax [ ebp - 0x40 ]
mov [ eax ] cl
mov ecx edx
cmp edx 0x9
jg r-xdata
dec eax
add dl 0x30
mov [ eax ] dl
dec eax
mov dl [ ebp - 0x45 ]
mov [ eax ] dl
dec eax
mov [ ebp - 0x40 ] eax
mov dl [ ebp - 0x44 ]
mov [ eax ] dl
mov ecx [ ebp - 0x1c ]
mov [ ebp - 0x34 ] ebx
sub [ ebp - 0x34 ] esi
cmp esi ecx
jg r-xdata
sub ebx esi
mov [ ebp - 0x34 ] ebx
mov ecx [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jge r-xdata
mov eax esi
sub eax ecx
sub [ ebp - 0x34 ] eax
jmp r-xdata
cmp [ ebp + 0x24 ] 0x0
jne r-xdata
mov [ ebp - 0x28 ] 0x1
sub ebx ecx
mov [ ebp - 0x34 ] ebx
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x34 ] 0x0
cmp [ ebp + 0x24 ] 0x2b
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x20
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx 0x2b
cmp [ ebp - 0x18 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov ebx 0x2d
mov ebx 0x2d
jmp r-xdata
mov eax [ ebp - 0x34 ]
add eax [ ebp - 0x30 ]
mov eax [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
lea eax [ edx + eax + 0x1 ]
mov [ ebp - 0x54 ] eax
jmp r-xdata
test ecx ecx
jg r-xdata
sub ecx esi
add eax ecx
jmp r-xdata
add eax [ ebp - 0x28 ]
add eax esi
cmp ecx esi
jle r-xdata
mov [ ebp - 0x38 ] 0x0
cmp [ ebp + 0x18 ] eax
jle r-xdata
inc eax
sub eax ecx
cmp [ ebp - 0x38 ] 0x0
jle r-xdata
mov edx [ ebp + 0x18 ]
sub edx eax
mov [ ebp - 0x38 ] edx
test ebx ebx
je r-xdata
cmp [ ebp - 0x20 ] 0x2
je r-xdata
cmp [ ebp - 0x20 ] 0x8
jne r-xdata
add esp 0xfffffff8
mov eax [ ebp + 0x10 ]
push eax
push ebx
call sub_410ed4
add esp 0x10
test eax eax
jl r-xdata
cmp [ ebp - 0x20 ] 0x8
je r-xdata
mov ebx [ ebp - 0x1c ]
test ebx ebx
jle r-xdata
cmp [ ebp - 0x38 ] 0x0
jle r-xdata
mov eax 0xffffffff
inc edi
lea esi [ esi ]
mov edi [ ebp - 0x38 ]
add esp 0xfffffffc
push edi
mov eax [ ebp + 0x28 ]
push eax
mov edx [ ebp + 0x10 ]
push edx
call sub_410f2c
add esp 0x10
cmp eax edi
jne r-xdata
add esp 0xfffffff8
mov edx [ ebp + 0x10 ]
push edx
push 0x30
call sub_410ed4
add esp 0x10
test eax eax
jl r-xdata
cmp esi ebx
jl r-xdata
add edi [ ebp - 0x38 ]
add esp 0xfffffffc
mov edx [ ebp - 0x38 ]
push edx
mov eax [ ebp + 0x28 ]
push eax
mov edx [ ebp + 0x10 ]
push edx
call sub_410f2c
add esp 0x10
cmp eax [ ebp - 0x38 ]
jne r-xdata
inc edi
cmp [ ebp - 0x28 ] 0x0
je r-xdata
add edi esi
add esp 0xfffffffc
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x48 ]
push esi
mov edx [ ebp - 0x3c ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ eax + 0x34 ]
call eax
add esp 0x10
cmp eax esi
jne r-xdata
add edi ebx
add esp 0xfffffffc
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x48 ]
push ebx
mov edx [ ebp - 0x3c ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ eax + 0x34 ]
call eax
jmp r-xdata
nop
add edi [ ebp - 0x34 ]
add esp 0xfffffffc
mov eax [ ebp - 0x34 ]
push eax
push 0x30
mov edx [ ebp + 0x10 ]
push edx
call sub_410f2c
add esp 0x10
cmp eax [ ebp - 0x34 ]
jne r-xdata
add esp 0xfffffff8
mov eax [ ebp + 0x10 ]
push eax
push 0x2e
call sub_410ed4
add esp 0x10
test eax eax
jl r-xdata
mov ebx [ ebp - 0x1c ]
sub ebx esi
add edi ebx
add esp 0xfffffffc
push ebx
push 0x30
mov eax [ ebp + 0x10 ]
push eax
call sub_410f2c
mov esi esi
add esp 0x10
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov ebx [ ebp - 0x1c ]
neg ebx
lea edi [ ebx + edi + 0x1 ]
add esp 0xfffffffc
push ebx
push 0x30
mov edx [ ebp + 0x10 ]
push edx
call sub_410f2c
add esp 0x10
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp - 0x20 ] 0x2
jne r-xdata
add edi [ ebp - 0x30 ]
add esp 0xfffffffc
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x48 ]
mov edx [ ebp - 0x30 ]
push edx
mov edx [ ebp - 0x40 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ eax + 0x34 ]
call eax
add esp 0x10
cmp eax [ ebp - 0x30 ]
jne r-xdata
add edi esi
add esp 0xfffffffc
mov edx [ ebp + 0x10 ]
mov eax [ edx + 0x48 ]
push esi
mov edx [ ebp - 0x3c ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov eax [ eax + 0x34 ]
call eax
add esp 0x10
cmp eax esi
jne r-xdata
add esp 0xfffffff8
mov edx [ ebp + 0x10 ]
push edx
push 0x2e
call sub_410ed4
add esp 0x10
test eax eax
jl r-xdata
mov eax edi
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
jle r-xdata
inc edi
mov ecx [ ebp - 0x1c ]
cmp esi ecx
jle r-xdata
lea esp [ ebp - 0x78 ]
pop ebx
pop esi
pop edi
leave
retn
add edi [ ebp - 0x38 ]
add esp 0xfffffffc
mov eax [ ebp - 0x38 ]
push eax
mov edx [ ebp + 0x28 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
call sub_410f2c
cmp eax [ ebp - 0x38 ]
jne r-xdata
mov ebx esi
sub ebx ecx
add edi ebx
add esp 0xfffffffc
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x48 ]
push ebx
mov eax [ ebp - 0x3c ]
add eax ecx
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ edx + 0x34 ]
call eax
add esp 0x10
cmp eax ebx
jne r-xdata
jmp r-xdata
sub_40fdc8
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
jmp r-xdata
mov eax [ ebx ]
test [ eax + 0xc ] 0x1
je r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax 0x1
add esp 0xfffffff4
push ebx
call sub_40e430
add esp 0x10
jmp r-xdata
lea edx [ ebp + 0x10 ]
mov eax [ ebx ]
push eax
push edx
push [ ebp + 0xc ]
push [ eax ]
call sub_414d58
test eax eax
je r-xdata
sub_40fe34
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
jmp r-xdata
mov eax [ ebx ]
test [ eax + 0xc ] 0x1
je r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax 0x1
add esp 0xfffffff4
push ebx
call sub_40e430
add esp 0x10
jmp r-xdata
mov eax [ ebx ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call sub_414d58
test eax eax
je r-xdata
sub_40fe9c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp eax ecx
je r-xdata
mov eax ecx
leave
retn
mov eax [ eax ]
mov eax [ eax ]
mov edx [ ecx ]
test eax eax
jne r-xdata
mov [ edx + 0x12 ] 0x0
mov [ edx + 0x12 ] 0x4
jmp r-xdata
mov [ edx + 0x13 ] 0x0
mov [ edx ] eax
mov [ edx + 0x4 ] 0x0
mov [ edx + 0x8 ] 0x0
mov [ edx + 0x10 ] 0x20
mov [ edx + 0xc ] 0x11
mov [ edx + 0x14 ] 0x6
mov [ edx + 0x18 ] 0x0
mov [ ecx + 0x4 ] 0x0
sub_40fefc
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp eax ecx
je r-xdata
mov eax ecx
leave
retn
mov eax [ eax ]
mov eax [ eax ]
mov edx [ ecx ]
test eax eax
jne r-xdata
mov [ edx + 0x12 ] 0x0
mov [ edx + 0x12 ] 0x4
jmp r-xdata
mov [ edx + 0x13 ] 0x0
mov [ edx ] eax
mov [ edx + 0x4 ] 0x0
mov [ edx + 0x8 ] 0x0
mov [ edx + 0x10 ] 0x20
mov [ edx + 0xc ] 0x11
mov [ edx + 0x14 ] 0x6
mov [ edx + 0x18 ] 0x0
sub_40ff54
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov bl [ ebp + 0x14 ]
mov [ esi + 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov eax [ esi ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov eax [ esi ]
or [ eax + 0x12 ] 0x2
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
jmp r-xdata
mov eax esi
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ esi ]
mov edi [ eax ]
add esp 0xfffffff8
lea eax [ ebp - 0x4 ]
push eax
push 0xffffffff
movsx eax bl
push eax
mov eax [ ebp + 0x10 ]
dec eax
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
call sub_414dd0
mov [ esi + 0x4 ] eax
add esp 0x20
cmp [ ebp - 0x4 ] 0xffffffff
je r-xdata
mov edx [ eax ]
mov eax [ edx + 0x4 ]
cmp [ edx + 0x8 ] eax
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x4 ]
cmp eax 0xffffffff
jne r-xdata
add esp 0xfffffff4
push edi
call sub_410eb0
add esp 0x10
mov [ ebp - 0x4 ] eax
add esp 0xfffffff4
push ecx
call sub_40e378
add esp 0x10
inc [ esi + 0x4 ]
movzx ebx bl
cmp eax ebx
je r-xdata
mov edx 0x1
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ ebp + 0xc ]
mov [ eax + edx ] 0x0
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov eax [ esi ]
or [ eax + 0x12 ] 0x2
add esp 0xfffffff4
push edi
call sub_40f084
jmp r-xdata
mov eax [ esi ]
or [ eax + 0x12 ] dl
jmp r-xdata
mov edx 0x3
movzx ebx bl
sub_410048
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov al [ ebp + 0x14 ]
mov [ ebp - 0x5 ] al
mov [ ebx + 0x4 ] 0x0
test esi esi
jg r-xdata
mov eax [ ebx ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov eax [ ebx ]
or [ eax + 0x12 ] 0x2
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
jmp r-xdata
mov eax ebx
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
mov edx [ ebx ]
add esp 0xfffffff8
lea eax [ ebp - 0x4 ]
push eax
push 0xffffffff
movsx eax [ ebp - 0x5 ]
push eax
lea eax [ esi - 0x1 ]
push eax
push edi
push [ edx ]
call sub_414dd0
mov [ ebx + 0x4 ] eax
test eax eax
jne r-xdata
mov edx [ eax ]
mov eax [ edx + 0x4 ]
cmp [ edx + 0x8 ] eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + edi ] 0x0
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
add esp 0xfffffff4
push ecx
call sub_40e378
add esp 0x10
mov eax [ ebx ]
or [ eax + 0x12 ] 0x3
sub_4100e8
push ebp
mov ebp esp
sub esp 0x21c
push edi
push esi
push ebx
add esp 0xfffffff8
lea eax [ ebp - 0x204 ]
push eax
push 0xffffffff
movsx edi [ ebp + 0x10 ]
push edi
push 0x200
lea ebx [ ebp - 0x200 ]
push ebx
mov eax [ ebp + 0x8 ]
push eax
call sub_414dd0
mov [ ebp - 0x208 ] eax
add esp 0x20
cmp [ ebp - 0x204 ] 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x20c ] eax
mov esi eax
add esi [ ebp - 0x208 ]
mov edx [ ebp + 0xc ]
mov [ edx ] esi
mov eax [ ebp - 0x204 ]
cmp eax 0xffffffff
je r-xdata
add esp 0xfffffff4
mov edx [ ebp + 0x8 ]
push edx
call sub_410eb0
add esp 0x10
mov [ ebp - 0x204 ] eax
add esp 0xfffffff4
mov edx [ ebp + 0xc ]
mov eax [ edx ]
inc eax
push eax
call sub_415f94
mov ebx eax
add esp 0x10
test ebx ebx
je r-xdata
cmp eax edi
je r-xdata
mov eax ebx
lea esp [ ebp - 0x228 ]
pop ebx
pop esi
pop edi
leave
retn
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov [ eax + ebx ] 0x0
mov eax ebx
add eax [ edx ]
sub eax [ ebp - 0x208 ]
add esp 0xfffffffc
mov edx [ ebp - 0x208 ]
push edx
lea edx [ ebp - 0x200 ]
push edx
push eax
call memcpy
lea eax [ esi + 0x1 ]
mov [ edx ] eax
add esp 0xfffffffc
push edi
push edx
mov edx [ ebp + 0x8 ]
push edx
call sub_4100e8
mov ebx eax
add esp 0x10
test ebx ebx
je r-xdata
mov edx [ ebp - 0x20c ]
lea eax [ edx + ebx ]
add esp 0xfffffffc
mov edx [ ebp - 0x208 ]
push edx
lea edx [ ebp - 0x200 ]
push edx
push eax
call memcpy
mov al [ ebp - 0x204 ]
mov [ esi + ebx ] al
jmp r-xdata
sub_410200
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov al [ ebp + 0x10 ]
mov [ ebp - 0x5 ] al
mov eax [ ebx ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebx ]
mov esi [ eax ]
add esp 0xfffffffc
movsx eax [ ebp - 0x5 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_4100e8
mov [ edi ] eax
xor edx edx
test eax eax
je r-xdata
mov edx [ eax ]
mov eax [ edx + 0x4 ]
cmp [ edx + 0x8 ] eax
jne r-xdata
mov [ ebx + 0x4 ] 0x0
mov [ edi ] 0x0
mov [ ebx + 0x4 ] edx
test [ esi ] 0x10
je r-xdata
mov edx [ ebp - 0x4 ]
add esp 0xfffffff4
push ecx
call sub_40e378
add esp 0x10
mov eax ebx
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ ebx ]
or [ eax + 0x12 ] 0x1
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx ]
or [ eax + 0x12 ] 0x2
jmp r-xdata
sub_4102a4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x0
jge r-xdata
pop ebx
leave
retn
mov ebx rw-data
mov eax [ rw-data ]
test eax eax
je r-xdata
and [ ecx ] 0x7f
cmp eax ecx
jne r-xdata
mov edx [ ebx ]
lea ebx [ edx + 0x34 ]
mov eax [ edx + 0x34 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x34 ]
mov [ rw-data ] eax
jmp r-xdata
cmp eax ecx
jne r-xdata
mov eax [ ecx + 0x34 ]
mov [ edx + 0x34 ] eax
sub_410308
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov ecx [ eax + 0x8 ]
sub ecx edx
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
mov eax ecx
leave
retn
lea esi [ esi ]
mov edx [ edx ]
test edx edx
jne r-xdata
mov ecx eax
mov eax [ edx + 0x8 ]
cmp eax ecx
jge r-xdata
sub_410334
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and [ eax + 0x1 ] 0xfe
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x2c ]
mov [ eax + 0x8 ] edx
mov [ eax + 0x2c ] ecx
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x24 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x4 ] edx
leave
retn
sub_41035c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
or [ eax + 0x1 ] 0x1
mov ebx [ eax + 0x8 ]
mov ecx [ eax + 0x2c ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0x2c ] ebx
mov ebx [ eax + 0xc ]
mov edx [ eax + 0x24 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x24 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn
sub_410388
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x10 ]
cmp [ ebx + 0x14 ] eax
jbe r-xdata
test [ ebx + 0x1 ] 0x1
je r-xdata
add esp 0xfffffff8
mov eax [ ebx + 0x48 ]
push 0xffffffff
push ebx
mov eax [ eax + 0x14 ]
call eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x1c ]
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x8 ]
jbe r-xdata
mov eax [ ebx + 0x28 ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax [ ebx + 0x14 ]
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x10 ] eax
and [ ebx + 0x1 ] 0xf7
xor eax eax
mov [ ebx + 0x8 ] eax
sub_4103e4
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
test [ ebx + 0x1 ] 0x1
je r-xdata
add esp 0xfffffff4
push [ ebx + 0x24 ]
call free
mov [ ebx + 0x24 ] 0x0
mov [ ebx + 0x2c ] 0x0
mov [ ebx + 0x28 ] 0x0
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff4
push ebx
call sub_410334
add esp 0x10
sub_410444
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call sub_410308
mov esi eax
mov edx [ ebp + 0x8 ]
mov ebx [ edx + 0xc ]
mov edi [ edx + 0x8 ]
sub edi ebx
sub edi esi
mov ecx [ edx + 0x2c ]
mov edx [ edx + 0x24 ]
mov eax ecx
sub eax edx
add esp 0x10
cmp edi eax
jle r-xdata
sub eax edi
mov [ ebp - 0x4 ] eax
test esi esi
jge r-xdata
mov [ ebp - 0x4 ] 0x64
add esp 0xfffffff4
lea eax [ edi + 0x64 ]
push eax
call malloc
mov [ ebp - 0x8 ] eax
add esp 0x10
test eax eax
jne r-xdata
test edi edi
jle r-xdata
add esp 0xfffffffc
mov eax esi
neg eax
push eax
lea eax [ esi + ecx ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ecx + edx ]
push eax
call memmove
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0x8 ]
add eax [ ebx + 0x24 ]
sub eax esi
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
sub edx ecx
add esp 0xfffffffc
push edx
push ecx
push eax
call memcpy
jmp r-xdata
test esi esi
jge r-xdata
mov eax 0xffffffff
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
add eax [ esi + 0x24 ]
mov [ esi + 0x28 ] eax
mov eax [ esi + 0xc ]
mov edx [ esi + 0x8 ]
sub edx eax
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
add edx [ ebp - 0x4 ]
lea eax [ esi + ebx ]
add esp 0xfffffffc
push edi
push eax
push edx
call memcpy
mov ebx [ ebp - 0x8 ]
add ebx 0x64
mov eax [ ebp + 0x8 ]
add esi [ eax + 0xc ]
add esp 0xfffffffc
push edi
push esi
push ebx
call memcpy
add esp 0x10
mov edx esi
neg edx
mov ebx [ ebp - 0x8 ]
add ebx 0x64
mov eax esi
mov ecx [ ebp + 0x8 ]
add eax [ ecx + 0x2c ]
add esp 0xfffffffc
push edx
push eax
push ebx
call memcpy
mov eax ebx
sub eax esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
sub edx ecx
add esp 0xfffffffc
push edx
push ecx
push eax
call memcpy
add esp 0x20
jmp r-xdata
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
xor eax eax
sub [ eax + 0x8 ] edx
mov eax [ eax ]
test eax eax
jne r-xdata
mov esi [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x24 ] esi
add ebx edi
mov [ ecx + 0x2c ] ebx
jmp r-xdata
add esp 0xfffffff4
push eax
call free
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x24 ]
test eax eax
je r-xdata
sub_4105ac
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
test [ ebx + 0x1 ] 0x8
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ ebx + 0x8 ]
jae r-xdata
add esp 0xfffffff4
push ebx
call sub_410388
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test [ ebx + 0x1 ] 0x1
je r-xdata
movzx eax [ eax ]
jmp r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
add esp 0xfffffff4
push ebx
call sub_410334
mov eax [ ebx + 0x4 ]
add esp 0x10
cmp eax [ ebx + 0x8 ]
jae r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
add esp 0xfffffff4
push ebx
call sub_410444
add esp 0x10
test eax eax
je r-xdata
movzx eax [ eax ]
jmp r-xdata
add esp 0xfffffff4
mov eax [ ebx + 0x48 ]
push ebx
mov eax [ eax + 0x1c ]
call eax
add esp 0xfffffff4
push ebx
call sub_4103e4
add esp 0x10
mov eax 0xffffffff
jmp r-xdata
sub_410640
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
test [ ebx + 0x1 ] 0x8
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ ebx + 0x8 ]
jae r-xdata
add esp 0xfffffff4
push ebx
call sub_410388
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test [ ebx + 0x1 ] 0x1
je r-xdata
movzx eax [ eax ]
inc [ ebx + 0x4 ]
jmp r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
add esp 0xfffffff4
push ebx
call sub_410334
mov eax [ ebx + 0x4 ]
add esp 0x10
cmp eax [ ebx + 0x8 ]
jae r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
add esp 0xfffffff4
push ebx
call sub_410444
add esp 0x10
test eax eax
je r-xdata
movzx eax [ eax ]
inc [ ebx + 0x4 ]
jmp r-xdata
add esp 0xfffffff4
mov eax [ ebx + 0x48 ]
push ebx
mov eax [ eax + 0x24 ]
call eax
add esp 0xfffffff4
push ebx
call sub_4103e4
add esp 0x10
mov eax 0xffffffff
jmp r-xdata
sub_4106dc
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x20 ] eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
test [ ebx ] 0x1
jne r-xdata
or [ ebx ] 0x1
and [ ebx ] 0xfe
jmp r-xdata
add esp 0xfffffff4
push eax
call free
mov ebx [ ebp - 0x18 ]
leave
retn
sub_41071c
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
test [ ebx ] 0x2
jne r-xdata
push 0x0
lea eax [ ebx + 0x48 ]
push eax
lea eax [ ebx + 0x47 ]
push eax
push ebx
call sub_4106dc
add esp 0xfffffff4
mov eax [ ebx + 0x48 ]
push ebx
mov eax [ eax + 0x64 ]
call eax
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
sub_410768
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
mov eax [ ebx + 0x48 ]
push ebx
mov eax [ eax + 0x1c ]
call eax
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax [ ebx + 0x4 ]
movzx eax [ eax ]
inc [ ebx + 0x4 ]
sub_410794
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov ebx [ edx + 0x18 ]
sub ebx eax
test ebx ebx
jle r-xdata
xor eax eax
jmp r-xdata
test edi edi
je r-xdata
cmp ebx edi
jbe r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
sub [ ebp + 0x10 ] edi
mov eax [ ebp + 0x10 ]
add esp 0xfffffff8
movzx eax [ esi ]
push eax
inc esi
mov edx [ ebp + 0x8 ]
push edx
call sub_410428
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp ebx 0x14
jle r-xdata
mov ebx edi
dec edi
jmp r-xdata
test ebx ebx
jg r-xdata
add esp 0xfffffffc
push ebx
push esi
push eax
call memcpy
add esi ebx
mov eax [ ebp + 0x8 ]
add [ eax + 0x14 ] ebx
add esp 0x10
jmp r-xdata
mov edx eax
lea ecx [ ebx - 0x1 ]
test ecx ecx
jl r-xdata
xor ebx ebx
jmp r-xdata
sub edi ebx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] edx
lea esi [ esi ]
mov al [ esi ]
mov [ edx ] al
inc esi
inc edx
dec ecx
jns r-xdata
sub_41083c
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
add esp 0xfffffffc
mov edx [ eax + 0x48 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
mov eax [ edx + 0x3c ]
call eax
leave
retn
sub_41085c
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
nop
test edi edi
je r-xdata
cmp ebx edi
jbe r-xdata
sub [ ebp + 0x10 ] edi
mov eax [ ebp + 0x10 ]
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
mov edx [ ebp + 0x8 ]
push edx
call sub_4105ac
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
cmp ebx 0x14
jle r-xdata
mov ebx edi
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ebx [ edx + 0x8 ]
sub ebx eax
test ebx ebx
jle r-xdata
test ebx ebx
jg r-xdata
add esp 0xfffffffc
push ebx
push eax
push esi
call memcpy
add esi ebx
mov eax [ ebp + 0x8 ]
add [ eax + 0x4 ] ebx
add esp 0x10
jmp r-xdata
mov edx eax
lea ecx [ ebx - 0x1 ]
test ecx ecx
jl r-xdata
xor ebx ebx
jmp r-xdata
sub edi ebx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
lea esi [ esi ]
mov al [ edx ]
mov [ esi ] al
inc edx
inc esi
dec ecx
jns r-xdata
sub_4108ec
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
add esp 0xfffffff4
mov eax [ ebx + 0x48 ]
push ebx
mov eax [ eax + 0x5c ]
call eax
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
or [ ebx ] 0x2
push 0x0
lea eax [ ebx + 0x48 ]
push eax
lea eax [ ebx + 0x47 ]
push eax
push ebx
call sub_4106dc
jmp r-xdata
test edi edi
jne r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
mov [ ebx + 0x18 ] 0x0
mov [ ebx + 0x14 ] 0x0
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0xc ] 0x0
mov eax ebx
and [ ebx ] 0xfd
push 0x0
lea eax [ edi + esi ]
push eax
push esi
push ebx
call sub_4106dc
sub_41097c
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x48 ]
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
mov eax [ edx + 0x44 ]
call eax
leave
retn
sub_410998
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
push 0x200
call malloc
mov edx eax
add esp 0x10
test edx edx
je r-xdata
mov eax 0xffffffff
push 0x1
lea eax [ edx + 0x200 ]
push eax
push edx
push ebx
call sub_4106dc
mov eax 0x1
jmp r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
sub_4109dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
or edx 0xfbad0000
mov [ eax ] edx
mov [ eax + 0x1c ] 0x0
mov [ eax + 0x20 ] 0x0
mov [ eax + 0xc ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0x0
mov [ eax + 0x14 ] 0x0
mov [ eax + 0x18 ] 0x0
mov [ eax + 0x34 ] 0x0
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x28 ] 0x0
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x30 ] 0x0
mov [ eax + 0x44 ] 0x0
leave
retn
sub_410a58
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
test [ ebx ] 0x1
jne r-xdata
mov eax [ ebx + 0x24 ]
test eax eax
je r-xdata
nop
add esp 0xfffffff4
push eax
call free
mov [ ebx + 0x20 ] 0x0
mov [ ebx + 0x1c ] 0x0
add esp 0x10
add esp 0xfffffff4
push ebx
call sub_4102a4
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff4
push eax
call free
mov [ ebx + 0x24 ] 0x0
add esp 0x10
mov [ eax + 0x4 ] 0x0
mov eax [ eax ]
test eax eax
jne r-xdata
sub_410ad4
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebx + 0x4 ]
cmp eax [ ebx + 0xc ]
jbe r-xdata
add esp 0xfffffff8
mov eax [ ebx + 0x48 ]
push edx
push ebx
mov eax [ eax + 0x2c ]
call eax
cmp [ eax - 0x1 ] dl
jne r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
and [ ebx ] 0xef
dec eax
mov [ ebx + 0x4 ] eax
movzx eax dl
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
sub_410b14
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
cmp eax [ ebx + 0xc ]
jbe r-xdata
add esp 0xfffffff8
mov eax [ ebx + 0x48 ]
push 0xffffffff
push ebx
mov eax [ eax + 0x2c ]
call eax
lea edx [ eax - 0x1 ]
mov [ ebx + 0x4 ] edx
movzx eax [ eax - 0x1 ]
jmp r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
and [ ebx ] 0xef
cmp eax 0xffffffff
je r-xdata
sub_410b50
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
lea edx [ ebx + ecx ]
cmp edx ecx
jbe r-xdata
mov eax [ ebp + 0x8 ]
add eax ebx
lea eax [ ecx + ebx - 0x1 ]
sub eax edx
nop
pop ebx
leave
retn
cmp edx ecx
ja r-xdata
inc eax
dec edx
cmp [ edx ] 0xa
je r-xdata
sub_410b7c
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
xor esi esi
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
mov eax esi
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
mov eax [ ebx + 0x10 ]
cmp [ ebx + 0x14 ] eax
jbe r-xdata
mov ebx [ ebx + 0x34 ]
test ebx ebx
jne r-xdata
add esp 0xfffffff8
mov eax [ ebx + 0x48 ]
push 0xffffffff
push ebx
mov eax [ eax + 0x14 ]
call eax
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
mov esi eax
sub_410bc0
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
lea esi [ esi ]
mov ebx [ ebx + 0x34 ]
test ebx ebx
jne r-xdata
add esp 0xfffffff8
mov eax [ ebx + 0x48 ]
push 0xffffffff
push ebx
mov eax [ eax + 0x14 ]
call eax
add esp 0x10
mov eax [ ebx ]
and eax 0x208
cmp eax 0x200
jne r-xdata
sub_410c00
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
lea esi [ esi ]
mov ebx [ ebx + 0x34 ]
test ebx ebx
jne r-xdata
add esp 0xfffffffc
mov eax [ ebx + 0x48 ]
push 0x0
push 0x0
push ebx
mov eax [ eax + 0x54 ]
call eax
add esp 0x10
test [ ebx ] 0x2
jne r-xdata
sub_410c4c
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov [ esi + 0x4 ] ebx
test [ ebx + 0x1 ] 0x8
je r-xdata
test [ ebx + 0x1 ] 0x1
je r-xdata
add esp 0xfffffff4
push ebx
call sub_410388
mov eax [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
jmp r-xdata
mov edx [ ebx + 0x4 ]
sub edx eax
mov [ esi + 0x8 ] edx
mov eax [ ebx + 0x30 ]
mov [ esi ] eax
mov [ ebx + 0x30 ] esi
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
sub_410c94
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
lea edx [ eax + 0x30 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
leave
retn
mov esi esi
mov edx eax
cmp [ edx ] 0x0
jne r-xdata
mov eax [ eax ]
mov [ edx ] eax
jmp r-xdata
mov eax [ edx ]
cmp eax ecx
jne r-xdata
sub_410cd4
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
test edx edx
jne r-xdata
test [ edx + 0x1 ] 0x1
je r-xdata
mov eax 0xffffffff
jmp r-xdata
mov eax [ edx + 0xc ]
mov eax [ edx + 0x8 ]
jmp r-xdata
leave
retn
mov edx [ edx + 0x4 ]
sub edx eax
mov eax edx
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax ecx
sub_410d08
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov esi [ ebp + 0xc ]
mov ebx [ esi + 0x4 ]
cmp ebx [ ebp + 0x8 ]
je r-xdata
cmp [ esi + 0x8 ] 0x0
jl r-xdata
mov eax 0xffffffff
jmp r-xdata
test [ ebx + 0x1 ] 0x1
jne r-xdata
test [ ebx + 0x1 ] 0x1
je r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
mov eax [ esi + 0x8 ]
add eax [ ebx + 0x8 ]
add esp 0xfffffff4
push ebx
call sub_41035c
mov eax [ esi + 0x8 ]
add eax [ ebx + 0xc ]
jmp r-xdata
add esp 0xfffffff4
push ebx
call sub_410334
mov [ ebx + 0x4 ] eax
xor eax eax
sub_410d68
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp [ eax + 0x24 ] 0x0
je r-xdata
mov [ eax + 0x30 ] 0x0
leave
retn
add esp 0xfffffff4
push eax
call sub_4103e4
sub_410d90
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
cmp [ esi + 0x4 ] eax
ja r-xdata
mov edx [ esi + 0x4 ]
lea eax [ edx - 0x1 ]
mov [ esi + 0x4 ] eax
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
movzx eax [ eax ]
movsx eax [ edx - 0x1 ]
cmp eax [ ebp + 0xc ]
je r-xdata
add esp 0xfffffff4
push 0x80
call malloc
add esp 0x10
test eax eax
je r-xdata
test [ esi + 0x1 ] 0x1
jne r-xdata
mov al [ ebp + 0xc ]
mov [ edx - 0x1 ] al
mov eax 0xffffffff
jmp r-xdata
mov [ esi + 0x24 ] eax
sub eax 0xffffff80
mov [ esi + 0x2c ] eax
mov [ esi + 0x28 ] eax
add esp 0xfffffff4
push esi
call sub_41035c
jmp r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
add esp 0xfffffff4
push esi
call sub_41035c
add esp 0x10
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ esi + 0xc ]
cmp [ esi + 0x4 ] eax
ja r-xdata
mov edi [ esi + 0x8 ]
sub edi eax
lea eax [ edi + edi ]
mov [ ebp - 0x4 ] eax
add esp 0xfffffff4
push eax
call malloc
mov [ ebp - 0x8 ] eax
add esp 0x10
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
sub ebx edi
add ebx [ ebp - 0x8 ]
add esp 0xfffffffc
push edi
push [ esi + 0xc ]
push ebx
call memcpy
add esp 0xfffffff4
push [ esi + 0xc ]
call free
mov eax [ ebp - 0x8 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
add eax [ ebp - 0x4 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0x28 ] ebx
sub_410eb0
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp eax [ edx + 0x8 ]
jb r-xdata
movzx eax [ eax ]
inc [ edx + 0x4 ]
add esp 0xfffffff4
push edx
call sub_410640
jmp r-xdata
leave
retn
sub_410ed4
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x14 ]
cmp edx [ ecx + 0x18 ]
jb r-xdata
mov al bl
mov [ edx ] bl
and eax 0xff
inc [ ecx + 0x14 ]
add esp 0xfffffff8
movzx eax bl
push eax
push ecx
call sub_410428
jmp r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
sub_410f2c
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov edx [ ebp + 0xc ]
xor esi esi
cmp edx 0x20
jne r-xdata
cmp edx 0x30
jne r-xdata
mov edi r-xdata
jmp r-xdata
mov ebx 0xf
lea eax [ ebp - 0x10 ]
mov ecx eax
mov esi esi
mov edi r-xdata
jmp r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx 0xf
jle r-xdata
mov [ ebx + ecx ] dl
dec ebx
jns r-xdata
mov edi eax
test ebx ebx
jle r-xdata
add esp 0xfffffffc
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x48 ]
push 0x10
push edi
push edx
mov eax [ eax + 0x34 ]
call eax
add esi eax
add esp 0x10
cmp eax 0x10
jne r-xdata
mov eax esi
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffffc
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x48 ]
push ebx
push edi
push edx
mov eax [ eax + 0x34 ]
call eax
add esi eax
add ebx 0xfffffff0
cmp ebx 0xf
jg r-xdata
sub_410fb8
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x24 ] 0x0
je r-xdata
add esp 0xfffffffc
mov eax [ ebx + 0x48 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
mov eax [ eax + 0x4c ]
call eax
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff4
push ebx
call sub_4103e4
add esp 0x10
sub_410fec
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
cmp [ ebx + 0x24 ] 0x0
je r-xdata
mov eax [ ebx + 0x48 ]
push [ ebp + 0x14 ]
push edi
push esi
push ebx
mov eax [ eax + 0x44 ]
call eax
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
cmp edi 0x1
jne r-xdata
add esp 0xfffffff4
push ebx
call sub_4103e4
add esp 0x10
test [ ebx + 0x1 ] 0x1
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ ebx + 0x8 ]
sub edx eax
mov eax edx
sub esi eax
sub_411040
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx + 0x40 ] 0xffffffff
or [ ebx ] 0x240c
add esp 0xfffffff4
push ebx
call sub_4102e8
mov [ ebx + 0x38 ] 0xffffffff
mov ebx [ ebp - 0x18 ]
leave
retn
sub_41106c
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x38 ] 0x0
jge r-xdata
add esp 0xfffffffc
mov edx [ ebx + 0x10 ]
mov eax [ ebx + 0x14 ]
sub eax edx
push eax
push edx
push ebx
call sub_4112f8
mov edi eax
add esp 0xfffffff4
push ebx
call sub_410d68
add esp 0x20
add esp 0xfffffff4
mov eax [ ebx + 0x48 ]
push ebx
mov eax [ eax + 0x84 ]
call eax
mov esi eax
push 0x0
push 0x0
push 0x0
push ebx
call sub_4106dc
mov [ ebx + 0xc ] 0x0
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x14 ] 0x0
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] 0x0
add esp 0x20
add esp 0xfffffff4
push ebx
call sub_4102a4
mov [ ebx ] 0xfbad240c
mov [ ebx + 0x38 ] 0xffffffff
mov [ ebx + 0x40 ] 0xffffffff
mov eax esi
test eax eax
jne r-xdata
mov eax 0xffffffff
jmp r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax edi
sub_411120
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x38 ] 0x0
jl r-xdata
add esp 0xfffffff8
push 0x0
push ebx
call sub_410a58
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffffc
mov edx [ ebx + 0x10 ]
mov eax [ ebx + 0x14 ]
sub eax edx
push eax
push edx
push ebx
call sub_4112f8
add esp 0x10
test [ ebx ] 0x40
jne r-xdata
add esp 0xfffffff4
mov eax [ ebx + 0x48 ]
push ebx
mov eax [ eax + 0x84 ]
call eax
add esp 0x10
sub_411170
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
xor edi edi
cmp [ ebx + 0x38 ] 0x0
jge r-xdata
xor eax eax
jmp r-xdata
mov al [ edx ]
inc edx
cmp al 0x72
je r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
xor ecx ecx
mov esi 0x8
jmp r-xdata
jg r-xdata
mov al [ edx ]
cmp al 0x2b
je r-xdata
cmp al 0x77
je r-xdata
cmp al 0x61
je r-xdata
mov ecx 0x2
and esi 0x1000
cmp al 0x62
jne r-xdata
mov ecx 0x1
mov edi 0x300
mov esi 0x4
jmp r-xdata
jmp r-xdata
mov ecx 0x1
mov edi 0x108
mov esi 0x1004
jmp r-xdata
jmp r-xdata
mov [ ebx + 0x38 ] eax
mov eax [ ebx ]
and eax 0xffffeff3
or eax esi
mov [ ebx ] eax
test esi 0x1000
je r-xdata
add esp 0xfffffffc
push 0x1b6
or ecx edi
push ecx
push [ ebp + 0xc ]
call _open
add esp 0x10
test eax eax
jl r-xdata
cmp [ edx + 0x1 ] 0x2b
jne r-xdata
call _errno
mov [ eax ] 0x16
add esp 0xfffffff4
push ebx
call sub_4102e8
mov eax ebx
mov eax [ ebx + 0x48 ]
push 0x3
push 0x2
push 0x0
push ebx
mov eax [ eax + 0x44 ]
call eax
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
call _errno
cmp [ eax ] 0x1d
jne r-xdata
sub_411264
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x38 ] 0x0
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx + 0x38 ] eax
mov eax [ ebx ]
and al 0xf3
or al 0x40
mov [ ebx ] eax
mov [ ebx + 0x40 ] 0xffffffff
mov eax [ ebx + 0x48 ]
push 0x3
push 0x1
push 0x0
push ebx
mov eax [ eax + 0x44 ]
call eax
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax ebx
call _errno
cmp [ eax ] 0x1d
je r-xdata
sub_4112b8
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_4108ec
test eax eax
je r-xdata
xor eax eax
mov eax [ ebx + 0x1c ]
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x10 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
mov eax ebx
jmp r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
sub_4112f8
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
test [ ebx + 0x1 ] 0x10
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebx + 0x8 ]
mov edx [ ebx + 0x10 ]
cmp ecx edx
je r-xdata
mov [ ebx + 0x40 ] 0xffffffff
jmp r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffffc
mov eax [ ebx + 0x48 ]
push esi
mov edx [ ebp + 0xc ]
push edx
push ebx
mov eax [ eax + 0x74 ]
call eax
mov edi eax
add esp 0x10
cmp [ ebx + 0x44 ] 0x0
je r-xdata
add esp 0xfffffffc
mov eax [ ebx + 0x48 ]
push 0x1
sub edx ecx
push edx
push ebx
mov eax [ eax + 0x7c ]
call eax
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x1c ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x10 ] eax
test [ ebx ] 0x202
jne r-xdata
add esp 0xfffffffc
push esi
mov eax [ ebp + 0xc ]
push eax
movzx eax [ ebx + 0x44 ]
dec eax
push eax
call sub_410b50
inc eax
mov [ ebx + 0x44 ] ax
mov [ ebx + 0x40 ] eax
mov [ ebx + 0x18 ] eax
xor eax eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x20 ]
mov eax 0xffffffff
sub_4113b4
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
test [ ebx ] 0x4
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ ebx + 0x8 ]
jb r-xdata
call _errno
mov [ eax ] 0x9
mov eax 0xffffffff
jmp r-xdata
movzx eax [ eax ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
test [ ebx ] 0x202
je r-xdata
add esp 0xfffffff4
push ebx
call sub_41071c
add esp 0x10
add esp 0xfffffff4
push ebx
call sub_410388
mov eax [ ebx + 0x1c ]
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x10 ] eax
add esp 0xfffffffc
mov ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x20 ]
sub edx eax
push edx
push eax
push ebx
mov eax [ ecx + 0x6c ]
call eax
test eax eax
jg r-xdata
call sub_410bc0
add [ ebx + 0x8 ] eax
test eax eax
jne r-xdata
jne r-xdata
mov edx [ ebx + 0x40 ]
cmp edx 0xffffffff
je r-xdata
mov eax 0xffffffff
jmp r-xdata
or [ ebx ] 0x20
xor eax eax
or [ ebx ] 0x10
jmp r-xdata
mov eax [ ebx + 0x4 ]
add edx eax
mov [ ebx + 0x40 ] edx
sub_41146c
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov eax [ ebx ]
test al 0x8
je r-xdata
test ah 0x8
jne r-xdata
or al 0x20
mov [ ebx ] eax
call _errno
mov [ eax ] 0x9
mov eax 0xffffffff
jmp r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
mov edx [ ebx + 0x14 ]
cmp edx [ ebx + 0x20 ]
jne r-xdata
add esp 0xfffffffc
mov edx [ ebx + 0x10 ]
mov eax [ ebx + 0x14 ]
sub eax edx
push eax
push edx
push ebx
call sub_4112f8
jmp r-xdata
mov eax [ ebx + 0x20 ]
cmp [ ebx + 0x4 ] eax
jne r-xdata
add esp 0xfffffff4
push ebx
call sub_41071c
mov eax [ ebx + 0x1c ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
add esp 0x10
mov eax [ ebx + 0x14 ]
mov edx esi
mov [ eax ] dl
inc [ ebx + 0x14 ]
mov eax [ ebx ]
test al 0x2
jne r-xdata
add esp 0xfffffffc
mov eax [ ebx + 0x10 ]
sub edx eax
push edx
push eax
push ebx
call sub_4112f8
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov edx [ ebx + 0x4 ]
mov [ ebx + 0x14 ] edx
mov [ ebx + 0x10 ] edx
mov eax [ ebx + 0x20 ]
mov [ ebx + 0x18 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] eax
test [ ebx ] 0x202
je r-xdata
mov eax [ ebx + 0x1c ]
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
add esp 0xfffffffc
mov edx [ ebx + 0x10 ]
mov eax [ ebx + 0x14 ]
sub eax edx
push eax
push edx
push ebx
call sub_4112f8
cmp eax 0xffffffff
je r-xdata
test ah 0x2
je r-xdata
or [ ebx + 0x1 ] 0x8
mov [ ebx + 0x18 ] edx
mov eax esi
and eax 0xff
cmp esi 0xa
jne r-xdata
sub_411574
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
xor edi edi
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0x10 ]
cmp eax edx
jbe r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebx + 0x4 ]
sub edx eax
je r-xdata
add esp 0xfffffffc
sub eax edx
push eax
push edx
push ebx
call sub_4112f8
add esp 0x10
test eax eax
je r-xdata
cmp edi 0xffffffff
je r-xdata
add esp 0xfffffffc
mov eax [ ebx + 0x48 ]
push 0x1
push edx
push ebx
mov eax [ eax + 0x7c ]
call eax
mov esi eax
add esp 0x10
cmp esi 0xffffffff
je r-xdata
mov eax 0xffffffff
jmp r-xdata
mov eax edi
mov [ ebx + 0x40 ] 0xffffffff
call _errno
cmp [ eax ] 0x1d
je r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x8 ] eax
jmp r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
mov edi esi
sub_4115f8
push ebp
mov ebp esp
sub esp 0x4c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x38 ] 0x0
mov eax [ ebx + 0x8 ]
cmp [ ebx + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ ebx + 0x10 ] eax
sete al
movzx edx al
mov [ ebp - 0x38 ] edx
mov eax [ ebx + 0x10 ]
cmp [ ebx + 0x14 ] eax
ja r-xdata
mov esi 0x1
xor edi edi
add esp 0xfffffff4
push ebx
call sub_410388
add esp 0x10
test eax eax
jne r-xdata
test [ ebx + 0x1 ] 0x8
je r-xdata
mov eax 0xffffffff
jmp r-xdata
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
lea esp [ ebp - 0x58 ]
pop ebx
pop esi
pop edi
leave
retn
cmp esi 0x1
je r-xdata
add esp 0xfffffff4
push ebx
call sub_41071c
mov eax [ ebx + 0x1c ]
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x18 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
add esp 0x10
mov eax [ ebx + 0x4 ]
mov ecx [ ebx + 0x8 ]
sub ecx eax
mov eax ecx
sub edi eax
mov eax [ ebx + 0x40 ]
cmp eax 0xffffffff
je r-xdata
jle r-xdata
add esp 0xfffffff4
push ebx
call sub_410d68
add esp 0xfffffffc
mov eax [ ebx + 0x48 ]
push esi
push edi
push ebx
mov eax [ eax + 0x7c ]
call eax
mov [ ebp - 0x34 ] eax
cmp eax 0xffffffff
je r-xdata
add edi eax
jmp r-xdata
mov ecx [ ebx + 0x40 ]
mov eax [ ebx ]
mov [ ebp - 0x3c ] eax
cmp ecx 0xffffffff
je r-xdata
cmp esi 0x2
je r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x18 ] eax
mov eax [ ebp - 0x34 ]
and [ ebx ] 0xef
xor esi esi
mov edx [ ebp - 0x3c ]
test dl 0x4
jne r-xdata
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
add esp 0xfffffff8
mov eax [ ebx + 0x48 ]
lea edx [ ebp - 0x30 ]
push edx
push ebx
mov eax [ eax + 0x8c ]
call eax
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x1c ]
mov ecx [ ebx + 0x20 ]
sub ecx eax
mov eax ecx
mov edx eax
neg edx
and edx edi
mov esi edi
sub esi edx
cmp esi eax
jle r-xdata
test ah 0x1
jne r-xdata
movzx eax [ ebp - 0x2a ]
and eax 0xfffff000
cmp ax 0x8000
jne r-xdata
add esp 0xfffffffc
mov eax [ ebx + 0x48 ]
push 0x0
push edx
push ebx
mov eax [ eax + 0x7c ]
call eax
mov [ ebp - 0x34 ] eax
add esp 0x10
test eax eax
jge r-xdata
mov edx edi
xor esi esi
mov eax edi
sub eax ecx
mov ecx [ ebx + 0x8 ]
sub ecx edx
lea edx [ ecx + eax ]
test edx edx
jl r-xdata
add edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp edx ecx
jg r-xdata
add esp 0xfffffffc
mov ecx [ ebx + 0x48 ]
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebx + 0x1c ]
mov [ ebx + 0xc ] eax
add edx eax
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x18 ] eax
mov eax edi
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x1c ]
mov eax [ ebx + 0x1c ]
mov edx [ ebx + 0x20 ]
sub edx eax
jmp r-xdata
mov eax [ ebx + 0x1c ]
mov [ ebx + 0xc ] eax
add esi eax
mov [ ebx + 0x4 ] esi
lea ecx [ edx + eax ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x18 ] eax
add edx [ ebp - 0x34 ]
mov [ ebx + 0x40 ] edx
and [ ebx ] 0xef
mov eax edi
jmp r-xdata
mov edi esi
cmp edx 0xffffffff
je r-xdata
push edx
push eax
push ebx
mov eax [ ecx + 0x6c ]
call eax
mov edx eax
add esp 0x10
cmp edx esi
jge r-xdata
mov esi 0x1
jmp r-xdata
sub edi edx
sub_411898
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
jmp r-xdata
test ebx ebx
jle r-xdata
sub [ ebp + 0x10 ] ebx
mov eax [ edi + 0x40 ]
test eax eax
jl r-xdata
add esp 0xfffffffc
push ebx
push esi
push [ edi + 0x38 ]
call _write
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp + 0x10 ]
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
add eax [ ebp + 0x10 ]
mov [ edi + 0x40 ] eax
sub ebx eax
add esi eax
or [ edi ] 0x20
sub_4118e8
push ebp
mov ebp esp
sub esp 0x2c
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] 0x0
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
mov ebx [ edx + 0x18 ]
sub ebx eax
mov ecx edx
mov edx [ ecx ]
and edx 0xa00
cmp edx 0xa00
jne r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
mov ebx [ ecx + 0x20 ]
sub ebx eax
cmp ebx edi
jb r-xdata
lea esp [ ebp - 0x38 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
je r-xdata
cmp ebx edi
jbe r-xdata
mov edx [ ebp - 0x4 ]
add edx edi
nop
sub edi [ ebp - 0x8 ]
mov eax edi
add esp 0xfffffff8
push 0xffffffff
mov ecx [ ebp + 0x8 ]
push ecx
call sub_410428
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp ebx 0x14
jbe r-xdata
mov ebx edi
dec edx
cmp [ edx ] 0xa
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
mov ebx [ edx + 0x20 ]
sub ebx eax
cmp ebx 0x7f
jbe r-xdata
mov edx eax
lea ecx [ ebx - 0x1 ]
mov esi edi
sub esi ebx
test ecx ecx
jl r-xdata
add esp 0xfffffffc
push ebx
push esi
mov eax [ ebp + 0x8 ]
push [ eax + 0x14 ]
call memcpy
add esi ebx
mov [ ebp - 0x4 ] esi
add esp 0x10
mov esi edi
sub esi ebx
jmp r-xdata
cmp edx esi
jbe r-xdata
sub edx esi
lea ebx [ edx + 0x1 ]
mov [ ebp - 0xc ] 0x1
xor esi esi
mov eax [ ebp - 0x8 ]
xor edx edx
div ebx
mov esi edx
jmp r-xdata
mov edx [ ebp + 0x8 ]
add [ edx + 0x14 ] ebx
mov [ ebp - 0x8 ] esi
lea esi [ esi ]
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
mov ebx [ ebp - 0x8 ]
sub ebx esi
add esp 0xfffffffc
push ebx
mov ecx [ ebp - 0x4 ]
push ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_4112f8
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ edx ] al
inc [ ebp - 0x4 ]
inc edx
dec ecx
jns r-xdata
add esp 0xfffffffc
push esi
mov eax [ ebp - 0x4 ]
add eax ebx
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_410794
sub [ ebp - 0x8 ] eax
sub_411a2c
push ebp
mov ebp esp
sub esp 0x40
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebx + 0x38 ] 0x0
jl r-xdata
call eax
xor esi esi
jmp r-xdata
add esp 0xfffffff8
mov eax [ ebx + 0x48 ]
lea edx [ ebp - 0x30 ]
push edx
push ebx
mov eax [ eax + 0x8c ]
call eax
add esp 0x10
test eax eax
jge r-xdata
add esp 0xfffffff4
push 0x200
call malloc
mov edx eax
add esp 0x10
test edx edx
jne r-xdata
movzx eax [ ebp - 0x2a ]
and eax 0xfffff000
cmp ax 0x2000
sete al
movzx esi al
push 0x1
lea eax [ edx + 0x200 ]
push eax
push edx
push ebx
call sub_4106dc
add esp 0x10
test esi esi
je r-xdata
mov eax 0xffffffff
jmp r-xdata
mov eax 0x1
add esp 0xfffffff4
push [ ebx + 0x38 ]
call _isatty
test eax eax
je r-xdata
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
leave
retn
or [ ebx + 0x1 ] 0x2
sub_411afc
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov esi [ ebp + 0x8 ]
cmp esi 0x2
jg r-xdata
mov ebx 0x1
mov ecx esi
shl ebx cl
add esp 0xfffffff4
lea eax [ ebx * 4 + 0x14 ]
push eax
call malloc
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ebx
mov [ eax + 0x10 ] 0x0
mov [ eax + 0xe ] 0x0
mov [ eax + 0xc ] 0x0
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
mov esi 0x3
sub_411b4c
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
leave
retn
cmp [ eax + 0xc ] 0x0
jne r-xdata
add esp 0xfffffff4
push eax
call free
sub_411b6c
push ebp
mov ebp esp
push esi
push ebx
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
movzx edx [ esi + 0xe ]
mov [ eax + 0xe ] dx
mov [ eax + 0x10 ] ecx
lea ebx [ eax + 0x14 ]
lea edx [ esi + 0x14 ]
dec ecx
js r-xdata
pop ebx
pop esi
leave
retn
mov esi esi
mov eax [ edx ]
mov [ ebx ] eax
add edx 0x4
add ebx 0x4
dec ecx
jns r-xdata
sub_411ba4
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] eax
jge r-xdata
add esp 0xfffffff4
push eax
call sub_411afc
jmp r-xdata
mov eax ebx
add esp 0xfffffff4
push eax
call sub_411afc
mov esi eax
add esp 0xfffffff8
push ebx
push esi
call sub_411b6c
add esp 0x20
add esp 0xfffffff4
push ebx
call sub_411b4c
mov eax esi
jmp r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
sub_411bfc
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov eax [ edi + 0x10 ]
mov [ ebp - 0x8 ] eax
lea ebx [ edi + 0x14 ]
mov [ ebp - 0x4 ] 0x0
nop
mov eax [ ebx ]
mov ecx eax
movzx ecx cx
imul ecx [ ebp + 0xc ]
add ecx esi
shr eax 0x10
imul eax [ ebp + 0xc ]
mov edx ecx
shr edx 0x10
add eax edx
mov esi eax
shr esi 0x10
shl eax 0x10
movzx ecx cx
or eax ecx
mov [ ebx ] eax
add ebx 0x4
inc [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp [ ebp - 0x4 ] edx
jl r-xdata
test esi esi
je r-xdata
mov eax edi
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
cmp edx [ edi + 0x8 ]
jl r-xdata
lea eax [ edi + 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax + edx * 4 ] esi
inc edx
mov [ edi + 0x10 ] edx
add esp 0xfffffff8
mov eax [ edi + 0x4 ]
inc eax
push eax
push edi
call sub_411ba4
mov edi eax
sub_411c84
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
add esi 0x8
mov edx 0x38e38e39
mov eax esi
imul edx
sar edx 0x1
mov eax esi
sar eax 0x1f
sub edx eax
xor esi esi
mov eax 0x1
cmp edx 0x1
jle r-xdata
add esp 0xfffffff8
push esi
push ecx
call sub_411ba4
mov ecx eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x10 ] 0x1
mov esi 0x9
add esp 0x10
cmp edi 0x9
jle r-xdata
mov esi esi
add ebx 0xa
add ebx 0x9
add eax eax
inc esi
cmp edx eax
jg r-xdata
mov eax ecx
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x14 ]
sub eax esi
mov esi eax
nop
add esp 0xfffffffc
movsx eax [ ebx ]
add eax 0xffffffd0
push eax
inc ebx
push 0xa
push ecx
call sub_411bfc
mov ecx eax
add esp 0x10
inc esi
cmp esi edi
jl r-xdata
inc ebx
jmp r-xdata
add esp 0xfffffffc
movsx eax [ ebx ]
add eax 0xffffffd0
push eax
inc ebx
push 0xa
push ecx
call sub_411bfc
mov ecx eax
add esp 0x10
dec esi
jne r-xdata
cmp esi [ ebp + 0x14 ]
jge r-xdata
sub_411d44
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor eax eax
test edx 0xffff0000
jne r-xdata
test edx 0xff000000
jne r-xdata
mov eax 0x10
shl edx 0x10
test edx 0xf0000000
jne r-xdata
add eax 0x8
shl edx 0x8
test edx 0xc0000000
jne r-xdata
add eax 0x4
shl edx 0x4
test edx edx
jl r-xdata
add eax 0x2
shl edx 0x2
leave
retn
inc eax
test edx 0x40000000
jne r-xdata
mov eax 0x20
sub_411d9c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
test dl 0x7
je r-xdata
xor eax eax
test dx dx
jne r-xdata
test dl 0x1
je r-xdata
test dl dl
jne r-xdata
mov eax 0x10
shr edx 0x10
test dl 0x2
je r-xdata
xor eax eax
jmp r-xdata
test dl 0xf
jne r-xdata
add eax 0x8
shr edx 0x8
shr edx 0x2
mov [ ecx ] edx
mov eax 0x2
jmp r-xdata
shr edx 0x1
mov [ ecx ] edx
mov eax 0x1
jmp r-xdata
leave
retn
test dl 0x3
jne r-xdata
add eax 0x4
shr edx 0x4
test dl 0x1
jne r-xdata
add eax 0x2
shr edx 0x2
mov [ ecx ] edx
inc eax
shr edx 0x1
jne r-xdata
mov eax 0x20
jmp r-xdata
sub_411e14
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0xc ]
add esp 0xfffffff8
push 0x1
push [ ebp + 0x8 ]
call sub_411ba4
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] 0x1
mov ebx [ ebp - 0x18 ]
leave
retn
sub_411e3c
push ebp
mov ebp esp
sub esp 0x4c
push edi
push esi
push ebx
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ esi + 0x10 ]
cmp [ ebx + 0x10 ] eax
jge r-xdata
mov eax [ ebx + 0x4 ]
mov edi [ ebx + 0x10 ]
mov edx [ esi + 0x10 ]
mov [ ebp - 0x4 ] edx
add edx edi
mov [ ebp - 0x8 ] edx
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov eax ebx
mov ebx esi
mov esi eax
add esp 0xfffffff8
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_411ba4
mov [ ebp + 0x8 ] eax
mov edx eax
add edx 0x14
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x8 ]
shl eax 0x2
add edx eax
mov [ ebp - 0x30 ] eax
add ebx 0x14
mov [ ebp - 0x38 ] ebx
lea ecx [ edi * 4 ]
lea eax [ esi + 0x14 ]
mov ebx [ ebp - 0x4 ]
shl ebx 0x2
cmp [ ebp - 0x14 ] edx
jae r-xdata
inc eax
add ecx [ ebp - 0x38 ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] eax
add ebx eax
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
add eax 0x14
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x1c ] ebx
jae r-xdata
mov esi esi
mov edi [ ebp - 0x2c ]
add edi [ ebp - 0x30 ]
jmp r-xdata
mov esi esi
mov esi [ ebp - 0x14 ]
mov [ esi ] 0x0
add esi 0x4
mov [ ebp - 0x14 ] esi
cmp esi edx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x1c ]
movzx edx [ eax + 0x2 ]
mov [ ebp - 0x10 ] edx
test edx edx
je r-xdata
mov edx [ ebp - 0x38 ]
mov [ ebp - 0x14 ] edx
mov edi [ ebp - 0x24 ]
mov [ ebp - 0xc ] 0x0
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x10 ] edx
mov eax [ ebp + 0x8 ]
lea esp [ ebp - 0x58 ]
pop ebx
pop esi
pop edi
leave
retn
add edi 0xfffffffc
cmp [ edi ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
mov edx [ ebp - 0x34 ]
mov [ ebp - 0x24 ] edx
mov esi [ ebp - 0x20 ]
cmp eax esi
jb r-xdata
mov esi [ ebp - 0x38 ]
mov [ ebp - 0x14 ] esi
mov edi [ ebp - 0x24 ]
mov [ ebp - 0xc ] 0x0
mov ecx [ edi ]
nop
mov esi [ ebp - 0x14 ]
mov ecx [ esi ]
mov edx ecx
movzx edx dx
imul edx [ ebp - 0x10 ]
mov ebx [ edi ]
mov eax ebx
and eax 0xffff
add edx eax
mov eax [ ebp - 0xc ]
lea esi [ eax + edx ]
mov [ ebp - 0xc ] esi
shr [ ebp - 0xc ] 0x10
shr ecx 0x10
imul ecx [ ebp - 0x10 ]
shr ebx 0x10
add ecx ebx
add ecx [ ebp - 0xc ]
add [ ebp - 0x14 ] 0x4
mov [ ebp - 0xc ] ecx
shr [ ebp - 0xc ] 0x10
mov [ edi + 0x2 ] cx
mov [ edi ] si
add edi 0x4
mov edx [ ebp - 0x18 ]
cmp [ ebp - 0x14 ] edx
jb r-xdata
mov esi [ ebp - 0xc ]
mov [ edi ] esi
dec [ ebp - 0x8 ]
mov edx [ ebp - 0x1c ]
movzx esi [ edx ]
mov [ ebp - 0x10 ] esi
add edx 0x4
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x4
mov [ ebp - 0x34 ] eax
test esi esi
je r-xdata
mov edx [ ebp - 0x14 ]
movzx eax [ edx ]
imul eax [ ebp - 0x10 ]
movzx edx [ edi + 0x2 ]
add eax edx
mov edx [ ebp - 0xc ]
lea esi [ edx + eax ]
mov [ edi + 0x2 ] si
mov [ edi ] cx
add edi 0x4
mov edx [ ebp - 0x14 ]
movzx eax [ edx + 0x2 ]
imul eax [ ebp - 0x10 ]
movzx edx [ edi ]
add eax edx
shr esi 0x10
lea ecx [ esi + eax ]
add [ ebp - 0x14 ] 0x4
mov [ ebp - 0xc ] ecx
shr [ ebp - 0xc ] 0x10
mov esi [ ebp - 0x18 ]
cmp [ ebp - 0x14 ] esi
jb r-xdata
mov [ edi ] ecx
sub_412020
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
cmp ebx 0x6
jle r-xdata
test ebx ebx
je r-xdata
mov esi esi
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffffc
push 0x0
push [ ebx * 4 + rw-data ]
push eax
call sub_411bfc
add esp 0xfffffffc
push 0x0
push 0x3d09
push eax
call sub_411bfc
add esp 0x10
add ebx 0xfffffffa
cmp ebx 0x6
jg r-xdata
sub_41206c
push ebp
mov ebp esp
sub esp 0x2c
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x18 ] eax
mov edx esi
sar edx 0x5
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0x4 ]
lea edi [ eax + edx + 0x1 ]
test esi esi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov ebx [ ebp - 0x18 ]
shl ebx 0x2
shl edx 0x2
mov [ ebp - 0x10 ] edx
and esi 0x1f
mov [ ebp - 0xc ] esi
cmp edi eax
jle r-xdata
mov eax ebx
jmp r-xdata
add esp 0xfffffff8
push ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_411ba4
mov [ ebp + 0x8 ] eax
mov edx eax
add edx 0x14
mov [ ebp - 0x4 ] edx
add ebx edx
mov [ ebp - 0x14 ] ebx
add ebx [ ebp - 0x10 ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc ecx
add eax eax
cmp edi eax
jg r-xdata
lea esp [ ebp - 0x38 ]
pop ebx
pop esi
pop edi
leave
retn
dec edi
lea esi [ esi ]
mov [ ebp - 0x8 ] 0x20
mov ecx [ ebp - 0xc ]
sub [ ebp - 0x8 ] ecx
add [ ebp - 0x14 ] 0xfffffffc
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
mov eax esi
mov ecx [ ebp - 0x8 ]
shr eax cl
mov [ ebx ] eax
test eax eax
je r-xdata
add ebx 0xfffffffc
add [ ebp - 0x14 ] 0xfffffffc
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
mov [ ebx ] eax
mov ecx [ ebp - 0x4 ]
cmp edx ecx
ja r-xdata
jmp r-xdata
dec edi
jmp r-xdata
inc edi
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x14 ] eax
ja r-xdata
add ebx 0xfffffffc
mov [ ebx ] 0x0
mov ebx [ ebp + 0x8 ]
mov [ ebx + 0x10 ] edi
mov eax [ ebp + 0x8 ]
add [ ebp - 0x14 ] 0xfffffffc
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
add ebx 0xfffffffc
mov ecx [ ebp - 0xc ]
shl esi cl
mov eax edx
mov ecx [ ebp - 0x8 ]
shr eax cl
or esi eax
mov [ ebx ] esi
mov esi edx
add ebx 0xfffffffc
mov ecx [ ebp - 0xc ]
shl esi cl
mov [ ebx ] esi
jmp r-xdata
sub_41217c
push ebp
mov ebp esp
push esi
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov eax [ ebx + 0x10 ]
mov edx [ ecx + 0x10 ]
sub edx eax
je r-xdata
lea esi [ ecx + 0x14 ]
shl eax 0x2
lea ecx [ eax + esi ]
lea ebx [ eax + ebx + 0x14 ]
lea esi [ esi ]
mov eax edx
jmp r-xdata
cmp ecx esi
ja r-xdata
mov ecx 0x1
cmp eax edx
jae r-xdata
pop ebx
pop esi
leave
retn
add ecx 0xfffffffc
add ebx 0xfffffffc
mov eax [ ecx ]
mov edx [ ebx ]
cmp eax edx
je r-xdata
xor eax eax
mov eax ecx
jmp r-xdata
mov ecx 0xffffffff
sub_4121d4
push ebp
mov ebp esp
sub esp 0x2c
push edi
push esi
push ebx
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
add esp 0xfffffff8
push edi
push ebx
call sub_41217c
mov esi eax
add esp 0x10
test esi esi
jne r-xdata
test esi esi
jge r-xdata
add esp 0xfffffff8
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_411ba4
mov [ ebp + 0x8 ] eax
mov [ eax + 0x10 ] 0x1
mov edx [ ebp + 0x8 ]
mov [ edx + 0x14 ] 0x0
jmp r-xdata
xor esi esi
mov eax ebx
mov ebx edi
mov edi eax
mov esi 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea esp [ ebp - 0x38 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov edx ebx
movzx edx dx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
mov eax ecx
and eax 0xffff
sub edx eax
lea eax [ esi + edx ]
mov esi eax
sar esi 0x10
shr ebx 0x10
shr ecx 0x10
sub ebx ecx
lea edx [ esi + ebx ]
add [ ebp - 0x10 ] 0x4
add [ ebp - 0x8 ] 0x4
mov esi edx
sar esi 0x10
mov [ edi + 0x2 ] dx
mov [ edi ] ax
add edi 0x4
mov edx [ ebp - 0x14 ]
cmp [ ebp - 0x10 ] edx
jb r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp - 0x8 ] eax
jae r-xdata
add esp 0xfffffff8
push [ ebx + 0x4 ]
mov eax [ ebp + 0x8 ]
push eax
call sub_411ba4
mov [ ebp + 0x8 ] eax
mov [ eax + 0xe ] si
mov edx [ ebx + 0x10 ]
mov [ ebp - 0x4 ] edx
add ebx 0x14
mov [ ebp - 0x8 ] ebx
lea eax [ ebx + edx * 4 ]
mov [ ebp - 0xc ] eax
lea edx [ edi + 0x14 ]
mov [ ebp - 0x10 ] edx
mov eax [ edi + 0x10 ]
shl eax 0x2
add eax edx
mov [ ebp - 0x14 ] eax
mov edi [ ebp + 0x8 ]
add edi 0x14
xor esi esi
nop
add edi 0xfffffffc
cmp [ edi ] 0x0
je r-xdata
mov esi esi
dec [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov eax edx
and eax 0xffff
add eax esi
mov esi eax
sar esi 0x10
shr edx 0x10
add edx esi
add [ ebp - 0x8 ] 0x4
mov esi edx
sar esi 0x10
mov [ edi + 0x2 ] dx
mov [ edi ] ax
add edi 0x4
mov edx [ ebp - 0xc ]
cmp [ ebp - 0x8 ] edx
jb r-xdata
jmp r-xdata
sub_412324
push ebp
mov ebp esp
sub esp 0x30
push esi
push ebx
mov eax [ ebp + 0xc ]
and eax 0x7ff00000
lea ecx [ eax - 0x3400000 ]
test ecx ecx
jle r-xdata
neg ecx
sar ecx 0x14
cmp ecx 0x13
jg r-xdata
mov esi ecx
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] esi
fld [ ebp - 0x18 ]
jmp r-xdata
add ecx 0xffffffec
mov [ ebp - 0xc ] 0x0
cmp ecx 0x1e
jg r-xdata
mov eax 0x80000
sar eax cl
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] 0x0
fld [ ebp - 0x8 ]
jmp r-xdata
pop ebx
pop esi
leave
retn
mov eax 0x1
mov edx 0x1f
sub edx ecx
mov eax 0x1
mov ecx edx
shl eax cl
jmp r-xdata
mov [ ebp - 0x10 ] eax
fld [ ebp - 0x10 ]
sub_4123a4
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
lea edx [ eax + 0x14 ]
mov [ ebp - 0x8 ] edx
mov eax [ eax + 0x10 ]
shl eax 0x2
lea eax [ eax + edx - 0x4 ]
mov [ ebp - 0x4 ] eax
mov edi [ eax ]
add esp 0xfffffff4
push edi
call sub_411d44
mov esi eax
mov eax 0x20
sub eax esi
mov [ ebx ] eax
cmp esi 0xa
jg r-xdata
mov edx [ ebp - 0x8 ]
cmp [ ebp - 0x4 ] edx
jbe r-xdata
mov ecx 0xb
sub ecx esi
mov ebx edi
shr ebx cl
or ebx 0x3ff00000
mov ecx [ ebp - 0x8 ]
cmp [ ebp - 0x4 ] ecx
jbe r-xdata
xor edx edx
add [ ebp - 0x4 ] 0xfffffffc
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
mov ebx edi
or ebx 0x3ff00000
mov eax edx
mov ebx edi
mov ecx esi
shl ebx cl
mov ecx 0x20
sub ecx esi
mov eax edx
shr eax cl
or eax 0x3ff00000
or ebx eax
mov eax [ ebp - 0x8 ]
cmp [ ebp - 0x4 ] eax
jbe r-xdata
add esi 0xfffffff5
je r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] eax
fld [ ebp - 0x10 ]
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
lea ecx [ esi + 0x15 ]
mov eax edi
shl eax cl
mov ecx 0xb
sub ecx esi
shr edx cl
or eax edx
jmp r-xdata
xor edi edi
mov ecx [ ebp - 0x4 ]
mov edi [ ecx - 0x4 ]
jmp r-xdata
mov eax edx
mov ecx esi
shl eax cl
mov ecx 0x20
sub ecx esi
shr edi cl
or eax edi
jmp r-xdata
sub_412494
push ebp
mov ebp esp
sub esp 0x3c
push edi
push esi
push ebx
fld [ ebp + 0xc ]
fld st0
fstp [ ebp - 0x28 ]
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
mov ebx edx
add esp 0xfffffff8
fstp [ ebp - 0x28 ]
mov esi [ ebp - 0x28 ]
mov edi [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x8 ]
call sub_411ba4
mov [ ebp - 0xc ] eax
add eax 0x14
mov [ ebp - 0x14 ] eax
mov eax ebx
and eax 0xfffff
mov [ ebp - 0x8 ] eax
and ebx 0x7fffffff
mov [ ebp - 0x10 ] ebx
shr [ ebp - 0x10 ] 0x14
add esp 0x10
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] esi
test esi esi
je r-xdata
or eax 0x100000
mov [ ebp - 0x8 ] eax
add esp 0xfffffff4
lea eax [ ebp - 0x8 ]
push eax
call sub_411d9c
mov edx eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x10 ] 0x1
mov ebx 0x1
add edx 0x20
add esp 0x10
add esp 0xfffffff4
lea eax [ ebp - 0x4 ]
push eax
call sub_411d9c
mov edx eax
add esp 0x10
test edx edx
je r-xdata
add edx 0xfffffbce
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
add esp 0xfffffff4
mov edx [ ebp - 0x14 ]
push [ edx + ebx * 4 - 0x4 ]
call sub_411d44
shl ebx 0x5
sub ebx eax
mov ecx [ ebp + 0x18 ]
mov [ ecx ] ebx
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + edx - 0x433 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov eax 0x35
sub eax edx
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x14 ] eax
mov ecx 0x20
sub ecx edx
mov eax [ ebp - 0x8 ]
shl eax cl
or eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ ecx + 0x14 ] eax
mov ecx edx
shr [ ebp - 0x8 ] cl
jmp r-xdata
mov eax [ ebp - 0xc ]
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x10 ] ecx
mov ebx ecx
jmp r-xdata
mov ecx 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] eax
mov ecx 0x1
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
sub_4125d4
push ebp
mov ebp esp
sub esp 0x40
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
add esp 0xfffffff8
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_4123a4
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
push ebx
fstp [ ebp - 0x20 ]
call sub_4123a4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
sub edx eax
mov eax [ ebx + 0x10 ]
mov esi [ esi + 0x10 ]
sub esi eax
mov eax esi
shl eax 0x5
lea ecx [ eax + edx ]
fld [ ebp - 0x20 ]
test ecx ecx
jle r-xdata
fxch st1
shl ecx 0x14
fstp [ ebp - 0x28 ]
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
sub edx ecx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
fld [ ebp - 0x28 ]
fxch st1
shl ecx 0x14
fstp [ ebp - 0x28 ]
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add edx ecx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
fld [ ebp - 0x28 ]
jmp r-xdata
fdivrp st1
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
leave
retn
sub_412702
mov ch 0x78
sbb eax 0x504415af
out dx eax
loop r-xdata
loopne r-xdata
in al 0x1a
dec ebx
inc esp
xchg edx eax
aad 0x4d
push es
iretd
aaa
jns r-xdata
jns r-xdata
and al 0x37
inc ecx
inc ebx
pop ss
outsb
add eax 0x93b8b5b5
inc esi
cmc
stc
aas
jmp 0x4d797633
add [ eax ] al
add [ ebp - 0x33 ] ah
int 0x41
add [ eax ] al
add [ eax ] ah
pop edi
mov al [ 0x4202 ]
add al ch
jbe r-xdata
inc ecx
inc ebx
add [ eax + 0x345785d8 ] ah
jbe r-xdata
adc eax 0xe2ef5044
salc
aaa
inc edx
stc
dec eax
ja r-xdata
add al cl
dec esi
insd
shr [ ebx - 0x6ec2ffbd ] 0x60
in al 0x58
add [ eax ] al
add [ edx + 0x426d1a94 ] ah
add [ eax ] al
inc eax
in eax 0x9c
xor [ edx - 0x6fffffbe ] ah
push ds
les edi [ esi + edx * 8 + 0x34000042 ]
cmc
imul ecx [ ebx + eax * 2 ] 0x0
add [ eax ] al
call 0x42786f36
pop edx
cmp al 0xbf
jae r-xdata
xchg edi eax
mov dl 0xd2
pushfd
cmp al 0x33
cmpsd [ esi ] [ edi ]
test al 0xd5
and esi esi
dec ecx
cmp [ 0xfffffffffd44f4a7 ] edi
shld [ edx ] esi cl
popfd
xchg edi eax
mov edi cs
or [ edx + 0x6f43255b ] bh
lodsb [ esi ]
sub [ fs : esi ] al
enter 0xa 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
mov edi 0x0
add [ eax ] al
loopne r-xdata
inc eax
inc eax
fisttp [ edi + 0x15 ]
jne r-xdata
push eax
call sub_411ad0
mov [ ebp - 0x1d0 ] eax
add esp 0x20
add esp 0xfffffff4
lea eax [ ebp - 0x100 ]
push eax
call sub_411ad0
mov [ ebp - 0x1d4 ] eax
add esp 0xfffffff4
lea eax [ ebp - 0x140 ]
push eax
call sub_411ad0
mov [ ebp - 0x1d8 ] eax
add esp 0x20
add esp 0xfffffff4
lea eax [ ebp - 0x80 ]
push eax
call sub_411ad0
mov [ ebp - 0x1dc ] eax
add esp 0xfffffff4
lea eax [ ebp - 0x180 ]
push eax
call sub_411ad0
mov [ ebp - 0x1e0 ] eax
xor edx edx
mov [ ebp - 0x1b8 ] 0x0
mov [ ebp - 0x1bc ] 0x0
fldz
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c0 ] eax
add esp 0x20
mov esi esi
xchg ebp eax
xor eax 0xffff94a0
fistp [ edi ]
xor eax 0x35afe5
add al ah
aas
xchg ebp eax
xor eax 0xffff94a0
iretd
loope r-xdata
pop eax
mov eax ebx
mov ecx [ ebp - 0x1c0 ]
cmp [ ecx ] 0x30
jne r-xdata
jmp [ eax * 4 + jump_table_412864 ]
mov eax [ ebp - 0x1c0 ]
mov [ ebp - 0x1c4 ] eax
xor esi esi
xor edi edi
mov [ ebp - 0x1b4 ] 0x0
xor ebx ebx
jmp r-xdata
mov [ ebp - 0x1b8 ] 0x1
lea esi [ esi ]
mov [ ebp - 0x1bc ] 0x1
inc [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c0 ]
cmp [ eax ] 0x0
jne r-xdata
mov [ ebp - 0x1bc ] 0x0
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x1c0 ] edx
jmp r-xdata
inc [ ebp - 0x1c0 ]
jmp r-xdata
movsx ecx [ eax ]
cmp ecx 0x2f
jle r-xdata
inc [ ebp - 0x1c0 ]
mov ecx [ ebp - 0x1c0 ]
mov al [ ecx ]
cmp al 0x30
je r-xdata
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x1c0 ]
movsx eax [ ecx ]
cmp eax 0x2d
ja r-xdata
mov [ ebp - 0x1b0 ] ebx
cmp ecx 0x2e
jne r-xdata
cmp ecx 0x39
jle r-xdata
cmp [ ebp - 0x1bc ] 0x0
je r-xdata
mov edx [ ebp - 0x1c0 ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
mov [ ebp - 0x1a8 ] 0x0
cmp ecx 0x65
je r-xdata
inc [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c0 ]
movsx ecx [ eax ]
test ebx ebx
jne r-xdata
cmp ebx 0x8
jg r-xdata
lea esp [ ebp - 0x278 ]
pop ebx
pop esi
pop edi
leave
retn
fchs
test ebx ebx
jne r-xdata
cmp ecx 0x45
jne r-xdata
lea eax [ ecx - 0x30 ]
cmp eax 0x9
jbe r-xdata
cmp ecx 0x30
jne r-xdata
cmp ebx 0xf
jg r-xdata
lea eax [ edi + edi * 4 ]
lea edi [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
mov ecx [ ebp - 0x1c0 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x1ac ] 0x0
inc [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c0 ]
movsx ecx [ eax ]
cmp ecx 0x2b
je r-xdata
test edx edx
jne r-xdata
test ebx ebx
jne r-xdata
inc edx
add ecx 0xffffffd0
mov eax [ ebp - 0x1c0 ]
inc eax
mov [ ebp - 0x20c ] eax
test ecx ecx
je r-xdata
lea eax [ ecx - 0x31 ]
cmp eax 0x8
ja r-xdata
lea esi [ esi ]
inc ebx
inc [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c0 ]
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 - 0x30 ]
inc [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c0 ]
movsx ecx [ eax ]
cmp ecx 0x2d
jne r-xdata
cmp [ ebp - 0x1b8 ] 0x0
je r-xdata
fstp st0
mov edx [ ebp - 0x1b4 ]
sub [ ebp - 0x1a8 ] edx
cmp [ ebp - 0x1b0 ] 0x0
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x1c0 ] ecx
movsx ecx [ ecx ]
add [ ebp - 0x1b4 ] edx
cmp edx 0x1
jle r-xdata
mov eax [ ebp - 0x1c0 ]
mov [ ebp - 0x1c4 ] eax
mov [ ebp - 0x1b4 ] edx
xor edx edx
lea esi [ esi ]
inc edx
inc [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c0 ]
movsx ecx [ eax ]
cmp ecx 0x30
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1c0 ] ecx
cmp ecx 0x30
jne r-xdata
lea eax [ ecx - 0x30 ]
cmp eax 0x9
ja r-xdata
inc [ ebp - 0x1ac ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c0 ] eax
jmp r-xdata
mov ecx ebx
cmp ebx 0x10
jle r-xdata
mov [ ebp - 0x1b0 ] ebx
cmp [ ebp - 0x1b8 ] 0x0
jne r-xdata
mov eax ebx
inc ebx
cmp eax 0x8
jg r-xdata
dec edx
lea esi [ esi ]
lea eax [ ecx - 0x31 ]
cmp eax 0x8
ja r-xdata
nop
mov eax edi
xor edx edx
mov [ ebp - 0x188 ] eax
mov [ ebp - 0x184 ] edx
fild [ ebp - 0x188 ]
cmp ecx 0x9
jle r-xdata
mov ecx 0x10
cmp ebx 0x10
jg r-xdata
lea eax [ edi + edi * 4 ]
lea edi [ ecx + eax * 2 ]
jmp r-xdata
cmp ebx 0x10
jg r-xdata
lea eax [ edi + edi * 4 ]
lea edi [ eax + eax ]
jmp r-xdata
mov [ ebp - 0x1a8 ] 0x0
jmp r-xdata
add ecx 0xffffffd0
mov [ ebp - 0x1a8 ] ecx
mov ecx [ ebp - 0x1c0 ]
mov [ ebp - 0x1c8 ] ecx
jmp r-xdata
inc [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c0 ]
movsx ecx [ eax ]
cmp ecx 0x30
je r-xdata
cmp ebx 0xf
jg r-xdata
mov eax esi
mov [ ebp - 0x188 ] eax
mov [ ebp - 0x184 ] edx
fild [ ebp - 0x188 ]
fxch st1
fmul [ ecx * 8 + r-xdata ]
faddp st1
xor edx edx
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 ]
dec edx
jne r-xdata
lea eax [ esi + esi * 4 ]
lea esi [ eax + eax ]
inc [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c0 ]
movsx ecx [ eax ]
cmp ecx 0x2f
jle r-xdata
mov eax ebx
sub eax ecx
add eax [ ebp - 0x1a8 ]
test eax eax
jle r-xdata
cmp [ ebp - 0x1a8 ] 0x0
je r-xdata
mov eax ebx
inc ebx
cmp eax 0x8
jg r-xdata
mov eax [ ebp - 0x1c0 ]
sub eax [ ebp - 0x1c8 ]
cmp eax 0x8
jle r-xdata
cmp ecx 0x39
jle r-xdata
test eax eax
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
jle r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
mov [ ebp - 0x1a8 ] 0x98967f
mov eax [ ebp - 0x1a8 ]
lea eax [ eax + eax * 4 ]
lea ecx [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x1a8 ] ecx
add esp 0xfffffff4
push edi
push ebx
mov edx [ ebp - 0x1b0 ]
push edx
mov ecx [ ebp - 0x1c4 ]
push ecx
mov eax [ ebp - 0x1d4 ]
push eax
fstp [ ebp - 0x240 ]
call sub_411c84
mov [ ebp - 0x1d4 ] eax
add esp 0x20
add esp 0xfffffff8
push [ eax + 0x4 ]
mov edx [ ebp - 0x1d0 ]
push edx
call sub_411ba4
mov [ ebp - 0x1d0 ] eax
add esp 0x10
lea ecx [ ebp - 0x194 ]
mov [ ebp - 0x208 ] ecx
lea eax [ ebp - 0x198 ]
mov [ ebp - 0x204 ] eax
fld [ ebp - 0x240 ]
jmp r-xdata
neg eax
mov edx eax
and edx 0xf
je r-xdata
and al 0xf0
test eax eax
je r-xdata
fmul [ edx * 8 + r-xdata ]
cmp [ ebp - 0x1a8 ] 0xffffffea
jl r-xdata
cmp [ ebp - 0x1a8 ] 0x16
jg r-xdata
neg [ ebp - 0x1a8 ]
jmp r-xdata
add esp 0xfffffff8
mov edx [ ebp - 0x1d4 ]
push edx
mov ecx [ ebp - 0x1d0 ]
push ecx
fstp [ ebp - 0x240 ]
call sub_411b6c
add esp 0xfffffff4
mov eax [ ebp - 0x208 ]
push eax
mov edx [ ebp - 0x204 ]
push edx
fld [ ebp - 0x240 ]
sub esp 0x8
fstp [ esp ]
mov ecx [ ebp - 0x1cc ]
push ecx
call sub_412494
mov [ ebp - 0x1cc ] eax
add esp 0x30
add esp 0xfffffff8
push 0x1
mov eax [ ebp - 0x1d8 ]
push eax
call sub_411e14
mov [ ebp - 0x1d8 ] eax
add esp 0x10
fld [ ebp - 0x240 ]
cmp [ ebp - 0x1a8 ] 0x0
jl r-xdata
and al 0xf0
test eax eax
je r-xdata
fdiv [ edx * 8 + r-xdata ]
cmp eax 0x134
jle r-xdata
neg [ ebp - 0x1a8 ]
mov ecx [ ebp - 0x1a8 ]
fdiv [ ecx * 8 + r-xdata ]
jmp r-xdata
mov edx 0xf
sub edx ebx
lea eax [ edx + 0x16 ]
cmp [ ebp - 0x1a8 ] eax
jg r-xdata
mov ecx [ ebp - 0x1a8 ]
fmul [ ecx * 8 + r-xdata ]
jmp r-xdata
mov ebx [ ebp - 0x1a8 ]
neg ebx
mov [ ebp - 0x19c ] ebx
mov [ ebp - 0x1a0 ] 0x0
xor edi edi
mov [ ebp - 0x19c ] 0x0
xor ebx ebx
mov edi [ ebp - 0x1a8 ]
mov [ ebp - 0x1a0 ] edi
jmp r-xdata
sar eax 0x4
xor esi esi
mov ecx r-xdata
cmp eax 0x1
jle r-xdata
sar eax 0x4
je r-xdata
fstp st0
sub [ ebp - 0x1a8 ] edx
mov eax r-xdata
fmul [ eax + edx * 8 ]
mov edx [ ebp - 0x1a8 ]
fmul [ eax + edx * 8 ]
jmp r-xdata
sub edi eax
add ebx eax
jmp r-xdata
mov eax [ ebp - 0x198 ]
test eax eax
jl r-xdata
fld st0
fld [ ecx + esi * 8 ]
fmul st2
fldz
fucom st3
fnstsw ax
and ah 0x44
xor ah 0x40
jne r-xdata
mov edx ecx
nop
xor esi esi
mov ecx r-xdata
cmp eax 0x1
jle r-xdata
mov esi 0x36
sub esi ecx
lea esi [ eax + 0x433 ]
jmp r-xdata
mov [ ebp - 0x1a4 ] ebx
mov ecx [ ebp - 0x194 ]
lea edx [ ecx + eax - 0x1 ]
cmp edx 0xfffffc02
jge r-xdata
fstp st0
fstp st0
fstp st0
fstp st3
fld st1
faddp st2
fmulp st1
fucompp
fnstsw ax
and ah 0x44
xor ah 0x40
jne r-xdata
inc esi
sar eax 0x1
cmp eax 0x1
jg r-xdata
fmul [ edx + esi * 8 ]
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
add edx 0xfcb00000
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x254 ] edx
fld [ ebp - 0x258 ]
fmul [ ecx + esi * 8 ]
fld st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
mov esi edx
and esi 0x7ff00000
cmp esi 0x7ca00000
ja r-xdata
mov edx ecx
nop
cmp edx [ ebp - 0x1a4 ]
jle r-xdata
mov edx ebx
add ebx esi
lea edx [ esi + edi ]
mov edi edx
cmp edx ebx
jle r-xdata
mov [ ebp - 0x1ec ] 0x0
mov [ ebp - 0x1f0 ] 0x1
fld [ ebp - 0x1f0 ]
jmp r-xdata
jmp r-xdata
test al 0x1
je r-xdata
cmp esi 0x7c900000
jbe r-xdata
inc esi
sar eax 0x1
cmp eax 0x1
jg r-xdata
fmul [ edx + esi * 8 ]
test edx edx
jle r-xdata
mov edx [ ebp - 0x1a4 ]
fldz
fstp [ ebp - 0x240 ]
call _errno
mov [ eax ] 0x22
jmp r-xdata
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
add edx 0x3500000
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x254 ] edx
fld [ ebp - 0x258 ]
jmp r-xdata
fstp st0
mov [ ebp - 0x1e4 ] 0x7fefffff
mov [ ebp - 0x1e8 ] 0xffffffff
fld [ ebp - 0x1e8 ]
jmp r-xdata
test al 0x1
je r-xdata
cmp [ ebp - 0x19c ] 0x0
jle r-xdata
sub ebx edx
sub edi edx
sub [ ebp - 0x1a4 ] edx
fld [ ebp - 0x240 ]
test ebx ebx
jle r-xdata
add esp 0xfffffff8
mov edx [ ebp - 0x19c ]
push edx
mov ecx [ ebp - 0x1d8 ]
push ecx
fstp [ ebp - 0x240 ]
call sub_412020
mov [ ebp - 0x1d8 ] eax
add esp 0xfffffffc
mov eax [ ebp - 0x1cc ]
push eax
mov edx [ ebp - 0x1d8 ]
push edx
mov ecx [ ebp - 0x1dc ]
push ecx
call sub_411e3c
mov edx [ ebp - 0x1cc ]
mov [ ebp - 0x1dc ] edx
mov [ ebp - 0x1cc ] eax
add esp 0x20
fld [ ebp - 0x240 ]
cmp [ ebp - 0x1a0 ] 0x0
jle r-xdata
add esp 0xfffffff8
push ebx
mov ecx [ ebp - 0x1cc ]
push ecx
fstp [ ebp - 0x240 ]
call sub_41206c
mov [ ebp - 0x1cc ] eax
add esp 0x10
fld [ ebp - 0x240 ]
test edi edi
jle r-xdata
add esp 0xfffffff8
mov eax [ ebp - 0x1a0 ]
push eax
mov edx [ ebp - 0x1d0 ]
push edx
fstp [ ebp - 0x240 ]
call sub_412020
mov [ ebp - 0x1d0 ] eax
add esp 0x10
fld [ ebp - 0x240 ]
cmp [ ebp - 0x1a4 ] 0x0
jle r-xdata
add esp 0xfffffff8
push edi
mov ecx [ ebp - 0x1d0 ]
push ecx
fstp [ ebp - 0x240 ]
call sub_41206c
mov [ ebp - 0x1d0 ] eax
add esp 0x10
fld [ ebp - 0x240 ]
add esp 0xfffffffc
mov ecx [ ebp - 0x1d0 ]
push ecx
mov eax [ ebp - 0x1cc ]
push eax
mov edx [ ebp - 0x1e0 ]
push edx
fstp [ ebp - 0x240 ]
call sub_4121d4
mov [ ebp - 0x1e0 ] eax
movsx ebx [ eax + 0xe ]
mov [ eax + 0xe ] 0x0
add esp 0xfffffff8
mov ecx [ ebp - 0x1d8 ]
push ecx
mov eax [ ebp - 0x1e0 ]
push eax
call sub_41217c
mov edx eax
add esp 0x20
fld [ ebp - 0x240 ]
test edx edx
jge r-xdata
add esp 0xfffffff8
mov eax [ ebp - 0x1a4 ]
push eax
mov edx [ ebp - 0x1d8 ]
push edx
fstp [ ebp - 0x240 ]
call sub_41206c
mov [ ebp - 0x1d8 ] eax
add esp 0x10
fld [ ebp - 0x240 ]
test edx edx
jne r-xdata
test ebx ebx
jne r-xdata
add esp 0xfffffff8
mov edx [ ebp - 0x1d8 ]
push edx
mov ecx [ ebp - 0x1e0 ]
push ecx
fstp [ ebp - 0x240 ]
call sub_4125d4
add esp 0x10
fld [ ebp - 0x240 ]
fxch st1
fcom [ r-xdata ]
fnstsw ax
and ah 0x45
dec ah
cmp ah 0x40
jae r-xdata
test ebx ebx
je r-xdata
add esp 0xfffffff4
mov eax [ ebp - 0x1cc ]
push eax
fstp [ ebp - 0x240 ]
call sub_411b4c
add esp 0xfffffff4
mov edx [ ebp - 0x1d0 ]
push edx
call sub_411b4c
add esp 0x20
add esp 0xfffffff4
mov ecx [ ebp - 0x1d8 ]
push ecx
call sub_411b4c
add esp 0xfffffff4
mov eax [ ebp - 0x1d4 ]
push eax
call sub_411b4c
add esp 0x20
add esp 0xfffffff4
mov edx [ ebp - 0x1e0 ]
push edx
call sub_411b4c
add esp 0xfffffff4
mov ecx [ ebp - 0x1dc ]
push ecx
call sub_411b4c
fld st0
fst [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test eax eax
jne r-xdata
fmul [ r-xdata ]
fld st0
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
fld st0
fst [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test edx 0xfffff
jne r-xdata
fld st0
fst [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
mov eax edx
and eax 0xfffff
cmp eax 0xfffff
jne r-xdata
fstp st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test edx 0xfffff
je r-xdata
fld st2
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
mov edi edx
and edi 0x7ff00000
fld st2
cmp edi 0x7fe00000
jne r-xdata
fchs
fld st1
fst [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test eax eax
jne r-xdata
fstp st0
fld1
fld st0
jmp r-xdata
fstp st0
mov esi esi
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test eax eax
jne r-xdata
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
cmp eax 0xffffffff
jne r-xdata
add esp 0xfffffff8
push 0x1
mov edx [ ebp - 0x1e0 ]
push edx
fstp [ ebp - 0x240 ]
call sub_41206c
mov [ ebp - 0x1e0 ] eax
add esp 0xfffffff8
mov ecx [ ebp - 0x1d8 ]
push ecx
push eax
call sub_41217c
add esp 0x20
fld [ ebp - 0x240 ]
test eax eax
jg r-xdata
jmp r-xdata
fstp st0
cmp edi 0x3400000
ja r-xdata
fxch st3
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
add edx 0xfcb00000
add esp 0xfffffff8
sub esp 0x8
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x254 ] edx
fld [ ebp - 0x258 ]
fst [ esp ]
fxch st1
fstp [ ebp - 0x220 ]
fxch st1
fstp [ ebp - 0x230 ]
fstp [ ebp - 0x240 ]
fstp [ ebp - 0x250 ]
call sub_412324
fld [ ebp - 0x220 ]
fmulp st1
fld [ ebp - 0x240 ]
faddp st1
add esp 0x10
fld [ ebp - 0x230 ]
fld [ ebp - 0x250 ]
fld st2
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
mov eax edx
and eax 0x7ff00000
cmp eax 0x7c9fffff
jbe r-xdata
fstp st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test edx 0xfffff
je r-xdata
test ebx ebx
jne r-xdata
fld st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test al 0x1
je r-xdata
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
mov eax edx
and eax 0x7ff00000
add eax 0xfff00000
or eax 0xfffff
mov [ ebp - 0x1f4 ] eax
mov [ ebp - 0x1f8 ] 0xffffffff
fld [ ebp - 0x1f8 ]
jmp r-xdata
fstp [ ebp - 0x258 ]
mov ecx [ ebp - 0x258 ]
mov ebx [ ebp - 0x254 ]
mov ecx ebx
and ecx 0x7ff00000
lea edx [ ecx + 0x100000 ]
xor eax eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x254 ] edx
fld [ ebp - 0x258 ]
jmp r-xdata
jmp r-xdata
fxch st2
add esp 0xfffffff8
sub esp 0x8
fst [ esp ]
fxch st2
fstp [ ebp - 0x220 ]
fstp [ ebp - 0x230 ]
fstp [ ebp - 0x240 ]
call sub_412324
fld [ ebp - 0x220 ]
fmulp st1
fld [ ebp - 0x240 ]
add esp 0x10
fld [ ebp - 0x230 ]
fxch st1
faddp st2
fxch st1
fld1
fcomp st2
fnstsw ax
and ah 0x45
dec ah
cmp ah 0x40
jae r-xdata
fstp st0
fxch st1
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
add edx 0x3500000
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x254 ] edx
fld [ ebp - 0x258 ]
jmp r-xdata
fstp st1
fstp st1
fld st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
cmp edx 0x7fefffff
jne r-xdata
fstp st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test edx edx
je r-xdata
fld1
fcomp st1
fnstsw ax
and ah 0x45
jne r-xdata
jmp r-xdata
add esp 0xfffffff8
sub esp 0x8
fst [ esp ]
fstp [ ebp - 0x240 ]
call sub_412324
fld [ ebp - 0x240 ]
add esp 0x10
faddp st1
jmp r-xdata
add esp 0xfffffff8
sub esp 0x8
fst [ esp ]
fstp [ ebp - 0x240 ]
call sub_412324
fld [ ebp - 0x240 ]
fsubrp st1
add esp 0x10
fldz
fucomp st1
fnstsw ax
and ah 0x45
cmp ah 0x40
je r-xdata
fstp st1
fxch st1
fnstcw [ ebp - 0x18a ]
mov dx [ ebp - 0x18a ]
or dx 0xc00
mov [ ebp - 0x18c ] dx
fldcw [ ebp - 0x18c ]
fist [ ebp - 0x190 ]
mov eax [ ebp - 0x190 ]
fldcw [ ebp - 0x18a ]
mov [ ebp - 0x190 ] eax
fild [ ebp - 0x190 ]
fsubp st1
test ebx ebx
jne r-xdata
fstp st0
fld st0
fadd [ r-xdata ]
fnstcw [ ebp - 0x18a ]
mov dx [ ebp - 0x18a ]
or dx 0xc00
mov [ ebp - 0x18c ] dx
fldcw [ ebp - 0x18c ]
fistp [ ebp - 0x190 ]
mov eax [ ebp - 0x190 ]
fldcw [ ebp - 0x18a ]
mov [ ebp - 0x190 ] eax
fild [ ebp - 0x190 ]
test ebx ebx
jne r-xdata
fld st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
mov esi edx
and esi 0x7ff00000
cmp edi esi
jne r-xdata
fstp st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
cmp eax 0xffffffff
je r-xdata
fstp st0
jmp r-xdata
fmul [ r-xdata ]
fstp st0
fld [ r-xdata ]
jmp r-xdata
fstp st0
fld st0
fst [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
cmp eax 0x1
jne r-xdata
jmp r-xdata
fcom [ r-xdata ]
fnstsw ax
and ah 0x45
cmp ah 0x1
je r-xdata
fld st1
fst [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test eax eax
jne r-xdata
fchs
call _errno
mov [ eax ] 0x22
mov eax [ _HUGE@IAT ]
fld [ eax ]
jmp r-xdata
jmp r-xdata
fld1
fld [ r-xdata ]
jmp r-xdata
fld st0
jmp r-xdata
fcomp [ r-xdata ]
fnstsw ax
and ah 0x45
je r-xdata
fstp st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test edx 0xfffff
je r-xdata
mov [ ebp - 0x1fc ] 0x7fefffff
mov [ ebp - 0x200 ] 0xffffffff
fld [ ebp - 0x200 ]
jmp r-xdata
jmp r-xdata
fcomp [ r-xdata ]
fnstsw ax
and ah 0x45
cmp ah 0x1
je r-xdata
jmp r-xdata
jmp r-xdata
sub_412798
push ebp
mov ebp esp
sub esp 0x26c
push edi
push esi
push ebx
add esp 0xfffffff4
lea eax [ ebp - 0x40 ]
push eax
call sub_411ad0
mov [ ebp - 0x1cc ] eax
add esp 0xfffffff4
lea eax [ ebp - 0xc0 ]
push eax
call sub_411ad0
mov [ ebp - 0x1d0 ] eax
add esp 0x20
add esp 0xfffffff4
lea eax [ ebp - 0x100 ]
push eax
call sub_411ad0
mov [ ebp - 0x1d4 ] eax
add esp 0xfffffff4
lea eax [ ebp - 0x140 ]
push eax
call sub_411ad0
mov [ ebp - 0x1d8 ] eax
add esp 0x20
add esp 0xfffffff4
lea eax [ ebp - 0x80 ]
push eax
call sub_411ad0
mov [ ebp - 0x1dc ] eax
add esp 0xfffffff4
lea eax [ ebp - 0x180 ]
push eax
call sub_411ad0
mov [ ebp - 0x1e0 ] eax
xor edx edx
mov [ ebp - 0x1b8 ] 0x0
mov [ ebp - 0x1bc ] 0x0
fldz
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c0 ] eax
add esp 0x20
mov esi esi
mov ecx [ ebp - 0x1c0 ]
cmp [ ecx ] 0x30
jne r-xdata
jmp [ eax * 4 + jump_table_412864 ]
mov eax [ ebp - 0x1c0 ]
mov [ ebp - 0x1c4 ] eax
xor esi esi
xor edi edi
mov [ ebp - 0x1b4 ] 0x0
xor ebx ebx
jmp r-xdata
mov [ ebp - 0x1b8 ] 0x1
lea esi [ esi ]
mov [ ebp - 0x1bc ] 0x1
inc [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c0 ]
cmp [ eax ] 0x0
jne r-xdata
mov [ ebp - 0x1bc ] 0x0
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x1c0 ] edx
jmp r-xdata
inc [ ebp - 0x1c0 ]
jmp r-xdata
movsx ecx [ eax ]
cmp ecx 0x2f
jle r-xdata
inc [ ebp - 0x1c0 ]
mov ecx [ ebp - 0x1c0 ]
mov al [ ecx ]
cmp al 0x30
je r-xdata
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x1c0 ]
movsx eax [ ecx ]
cmp eax 0x2d
ja r-xdata
mov [ ebp - 0x1b0 ] ebx
cmp ecx 0x2e
jne r-xdata
cmp ecx 0x39
jle r-xdata
cmp [ ebp - 0x1bc ] 0x0
je r-xdata
mov edx [ ebp - 0x1c0 ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
mov [ ebp - 0x1a8 ] 0x0
cmp ecx 0x65
je r-xdata
inc [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c0 ]
movsx ecx [ eax ]
test ebx ebx
jne r-xdata
cmp ebx 0x8
jg r-xdata
lea esp [ ebp - 0x278 ]
pop ebx
pop esi
pop edi
leave
retn
fchs
test ebx ebx
jne r-xdata
cmp ecx 0x45
jne r-xdata
lea eax [ ecx - 0x30 ]
cmp eax 0x9
jbe r-xdata
cmp ecx 0x30
jne r-xdata
cmp ebx 0xf
jg r-xdata
lea eax [ edi + edi * 4 ]
lea edi [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
mov ecx [ ebp - 0x1c0 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x1ac ] 0x0
inc [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c0 ]
movsx ecx [ eax ]
cmp ecx 0x2b
je r-xdata
test edx edx
jne r-xdata
test ebx ebx
jne r-xdata
inc edx
add ecx 0xffffffd0
mov eax [ ebp - 0x1c0 ]
inc eax
mov [ ebp - 0x20c ] eax
test ecx ecx
je r-xdata
lea eax [ ecx - 0x31 ]
cmp eax 0x8
ja r-xdata
lea esi [ esi ]
inc ebx
inc [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c0 ]
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 - 0x30 ]
inc [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c0 ]
movsx ecx [ eax ]
cmp ecx 0x2d
jne r-xdata
cmp [ ebp - 0x1b8 ] 0x0
je r-xdata
fstp st0
mov edx [ ebp - 0x1b4 ]
sub [ ebp - 0x1a8 ] edx
cmp [ ebp - 0x1b0 ] 0x0
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ ebp - 0x20c ]
mov [ ebp - 0x1c0 ] ecx
movsx ecx [ ecx ]
add [ ebp - 0x1b4 ] edx
cmp edx 0x1
jle r-xdata
mov eax [ ebp - 0x1c0 ]
mov [ ebp - 0x1c4 ] eax
mov [ ebp - 0x1b4 ] edx
xor edx edx
lea esi [ esi ]
inc edx
inc [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c0 ]
movsx ecx [ eax ]
cmp ecx 0x30
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1c0 ] ecx
cmp ecx 0x30
jne r-xdata
lea eax [ ecx - 0x30 ]
cmp eax 0x9
ja r-xdata
inc [ ebp - 0x1ac ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c0 ] eax
jmp r-xdata
mov ecx ebx
cmp ebx 0x10
jle r-xdata
mov [ ebp - 0x1b0 ] ebx
cmp [ ebp - 0x1b8 ] 0x0
jne r-xdata
mov eax ebx
inc ebx
cmp eax 0x8
jg r-xdata
dec edx
lea esi [ esi ]
lea eax [ ecx - 0x31 ]
cmp eax 0x8
ja r-xdata
nop
mov eax edi
xor edx edx
mov [ ebp - 0x188 ] eax
mov [ ebp - 0x184 ] edx
fild [ ebp - 0x188 ]
cmp ecx 0x9
jle r-xdata
mov ecx 0x10
cmp ebx 0x10
jg r-xdata
lea eax [ edi + edi * 4 ]
lea edi [ ecx + eax * 2 ]
jmp r-xdata
cmp ebx 0x10
jg r-xdata
lea eax [ edi + edi * 4 ]
lea edi [ eax + eax ]
jmp r-xdata
mov [ ebp - 0x1a8 ] 0x0
jmp r-xdata
add ecx 0xffffffd0
mov [ ebp - 0x1a8 ] ecx
mov ecx [ ebp - 0x1c0 ]
mov [ ebp - 0x1c8 ] ecx
jmp r-xdata
inc [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c0 ]
movsx ecx [ eax ]
cmp ecx 0x30
je r-xdata
cmp ebx 0xf
jg r-xdata
mov eax esi
mov [ ebp - 0x188 ] eax
mov [ ebp - 0x184 ] edx
fild [ ebp - 0x188 ]
fxch st1
fmul [ ecx * 8 + r-xdata ]
faddp st1
xor edx edx
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 ]
dec edx
jne r-xdata
lea eax [ esi + esi * 4 ]
lea esi [ eax + eax ]
inc [ ebp - 0x1c0 ]
mov eax [ ebp - 0x1c0 ]
movsx ecx [ eax ]
cmp ecx 0x2f
jle r-xdata
mov eax ebx
sub eax ecx
add eax [ ebp - 0x1a8 ]
test eax eax
jle r-xdata
cmp [ ebp - 0x1a8 ] 0x0
je r-xdata
mov eax ebx
inc ebx
cmp eax 0x8
jg r-xdata
mov eax [ ebp - 0x1c0 ]
sub eax [ ebp - 0x1c8 ]
cmp eax 0x8
jle r-xdata
cmp ecx 0x39
jle r-xdata
test eax eax
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
jle r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
mov [ ebp - 0x1a8 ] 0x98967f
mov eax [ ebp - 0x1a8 ]
lea eax [ eax + eax * 4 ]
lea ecx [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x1a8 ] ecx
add esp 0xfffffff4
push edi
push ebx
mov edx [ ebp - 0x1b0 ]
push edx
mov ecx [ ebp - 0x1c4 ]
push ecx
mov eax [ ebp - 0x1d4 ]
push eax
fstp [ ebp - 0x240 ]
call sub_411c84
mov [ ebp - 0x1d4 ] eax
add esp 0x20
add esp 0xfffffff8
push [ eax + 0x4 ]
mov edx [ ebp - 0x1d0 ]
push edx
call sub_411ba4
mov [ ebp - 0x1d0 ] eax
add esp 0x10
lea ecx [ ebp - 0x194 ]
mov [ ebp - 0x208 ] ecx
lea eax [ ebp - 0x198 ]
mov [ ebp - 0x204 ] eax
fld [ ebp - 0x240 ]
jmp r-xdata
neg eax
mov edx eax
and edx 0xf
je r-xdata
and al 0xf0
test eax eax
je r-xdata
fmul [ edx * 8 + r-xdata ]
cmp [ ebp - 0x1a8 ] 0xffffffea
jl r-xdata
cmp [ ebp - 0x1a8 ] 0x16
jg r-xdata
neg [ ebp - 0x1a8 ]
jmp r-xdata
add esp 0xfffffff8
mov edx [ ebp - 0x1d4 ]
push edx
mov ecx [ ebp - 0x1d0 ]
push ecx
fstp [ ebp - 0x240 ]
call sub_411b6c
add esp 0xfffffff4
mov eax [ ebp - 0x208 ]
push eax
mov edx [ ebp - 0x204 ]
push edx
fld [ ebp - 0x240 ]
sub esp 0x8
fstp [ esp ]
mov ecx [ ebp - 0x1cc ]
push ecx
call sub_412494
mov [ ebp - 0x1cc ] eax
add esp 0x30
add esp 0xfffffff8
push 0x1
mov eax [ ebp - 0x1d8 ]
push eax
call sub_411e14
mov [ ebp - 0x1d8 ] eax
add esp 0x10
fld [ ebp - 0x240 ]
cmp [ ebp - 0x1a8 ] 0x0
jl r-xdata
and al 0xf0
test eax eax
je r-xdata
fdiv [ edx * 8 + r-xdata ]
cmp eax 0x134
jle r-xdata
neg [ ebp - 0x1a8 ]
mov ecx [ ebp - 0x1a8 ]
fdiv [ ecx * 8 + r-xdata ]
jmp r-xdata
mov edx 0xf
sub edx ebx
lea eax [ edx + 0x16 ]
cmp [ ebp - 0x1a8 ] eax
jg r-xdata
mov ecx [ ebp - 0x1a8 ]
fmul [ ecx * 8 + r-xdata ]
jmp r-xdata
mov ebx [ ebp - 0x1a8 ]
neg ebx
mov [ ebp - 0x19c ] ebx
mov [ ebp - 0x1a0 ] 0x0
xor edi edi
mov [ ebp - 0x19c ] 0x0
xor ebx ebx
mov edi [ ebp - 0x1a8 ]
mov [ ebp - 0x1a0 ] edi
jmp r-xdata
sar eax 0x4
xor esi esi
mov ecx r-xdata
cmp eax 0x1
jle r-xdata
sar eax 0x4
je r-xdata
fstp st0
sub [ ebp - 0x1a8 ] edx
mov eax r-xdata
fmul [ eax + edx * 8 ]
mov edx [ ebp - 0x1a8 ]
fmul [ eax + edx * 8 ]
jmp r-xdata
sub edi eax
add ebx eax
jmp r-xdata
mov eax [ ebp - 0x198 ]
test eax eax
jl r-xdata
fld st0
fld [ ecx + esi * 8 ]
fmul st2
fldz
fucom st3
fnstsw ax
and ah 0x44
xor ah 0x40
jne r-xdata
mov edx ecx
nop
xor esi esi
mov ecx r-xdata
cmp eax 0x1
jle r-xdata
mov esi 0x36
sub esi ecx
lea esi [ eax + 0x433 ]
jmp r-xdata
mov [ ebp - 0x1a4 ] ebx
mov ecx [ ebp - 0x194 ]
lea edx [ ecx + eax - 0x1 ]
cmp edx 0xfffffc02
jge r-xdata
fstp st0
fstp st0
fstp st0
fstp st3
fld st1
faddp st2
fmulp st1
fucompp
fnstsw ax
and ah 0x44
xor ah 0x40
jne r-xdata
inc esi
sar eax 0x1
cmp eax 0x1
jg r-xdata
fmul [ edx + esi * 8 ]
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
add edx 0xfcb00000
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x254 ] edx
fld [ ebp - 0x258 ]
fmul [ ecx + esi * 8 ]
fld st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
mov esi edx
and esi 0x7ff00000
cmp esi 0x7ca00000
ja r-xdata
mov edx ecx
nop
cmp edx [ ebp - 0x1a4 ]
jle r-xdata
mov edx ebx
add ebx esi
lea edx [ esi + edi ]
mov edi edx
cmp edx ebx
jle r-xdata
mov [ ebp - 0x1ec ] 0x0
mov [ ebp - 0x1f0 ] 0x1
fld [ ebp - 0x1f0 ]
jmp r-xdata
jmp r-xdata
test al 0x1
je r-xdata
cmp esi 0x7c900000
jbe r-xdata
inc esi
sar eax 0x1
cmp eax 0x1
jg r-xdata
fmul [ edx + esi * 8 ]
test edx edx
jle r-xdata
mov edx [ ebp - 0x1a4 ]
fldz
fstp [ ebp - 0x240 ]
call _errno
mov [ eax ] 0x22
jmp r-xdata
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
add edx 0x3500000
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x254 ] edx
fld [ ebp - 0x258 ]
jmp r-xdata
fstp st0
mov [ ebp - 0x1e4 ] 0x7fefffff
mov [ ebp - 0x1e8 ] 0xffffffff
fld [ ebp - 0x1e8 ]
jmp r-xdata
test al 0x1
je r-xdata
cmp [ ebp - 0x19c ] 0x0
jle r-xdata
sub ebx edx
sub edi edx
sub [ ebp - 0x1a4 ] edx
fld [ ebp - 0x240 ]
test ebx ebx
jle r-xdata
add esp 0xfffffff8
mov edx [ ebp - 0x19c ]
push edx
mov ecx [ ebp - 0x1d8 ]
push ecx
fstp [ ebp - 0x240 ]
call sub_412020
mov [ ebp - 0x1d8 ] eax
add esp 0xfffffffc
mov eax [ ebp - 0x1cc ]
push eax
mov edx [ ebp - 0x1d8 ]
push edx
mov ecx [ ebp - 0x1dc ]
push ecx
call sub_411e3c
mov edx [ ebp - 0x1cc ]
mov [ ebp - 0x1dc ] edx
mov [ ebp - 0x1cc ] eax
add esp 0x20
fld [ ebp - 0x240 ]
cmp [ ebp - 0x1a0 ] 0x0
jle r-xdata
add esp 0xfffffff8
push ebx
mov ecx [ ebp - 0x1cc ]
push ecx
fstp [ ebp - 0x240 ]
call sub_41206c
mov [ ebp - 0x1cc ] eax
add esp 0x10
fld [ ebp - 0x240 ]
test edi edi
jle r-xdata
add esp 0xfffffff8
mov eax [ ebp - 0x1a0 ]
push eax
mov edx [ ebp - 0x1d0 ]
push edx
fstp [ ebp - 0x240 ]
call sub_412020
mov [ ebp - 0x1d0 ] eax
add esp 0x10
fld [ ebp - 0x240 ]
cmp [ ebp - 0x1a4 ] 0x0
jle r-xdata
add esp 0xfffffff8
push edi
mov ecx [ ebp - 0x1d0 ]
push ecx
fstp [ ebp - 0x240 ]
call sub_41206c
mov [ ebp - 0x1d0 ] eax
add esp 0x10
fld [ ebp - 0x240 ]
add esp 0xfffffffc
mov ecx [ ebp - 0x1d0 ]
push ecx
mov eax [ ebp - 0x1cc ]
push eax
mov edx [ ebp - 0x1e0 ]
push edx
fstp [ ebp - 0x240 ]
call sub_4121d4
mov [ ebp - 0x1e0 ] eax
movsx ebx [ eax + 0xe ]
mov [ eax + 0xe ] 0x0
add esp 0xfffffff8
mov ecx [ ebp - 0x1d8 ]
push ecx
mov eax [ ebp - 0x1e0 ]
push eax
call sub_41217c
mov edx eax
add esp 0x20
fld [ ebp - 0x240 ]
test edx edx
jge r-xdata
add esp 0xfffffff8
mov eax [ ebp - 0x1a4 ]
push eax
mov edx [ ebp - 0x1d8 ]
push edx
fstp [ ebp - 0x240 ]
call sub_41206c
mov [ ebp - 0x1d8 ] eax
add esp 0x10
fld [ ebp - 0x240 ]
test edx edx
jne r-xdata
test ebx ebx
jne r-xdata
add esp 0xfffffff8
mov edx [ ebp - 0x1d8 ]
push edx
mov ecx [ ebp - 0x1e0 ]
push ecx
fstp [ ebp - 0x240 ]
call sub_4125d4
add esp 0x10
fld [ ebp - 0x240 ]
fxch st1
fcom [ r-xdata ]
fnstsw ax
and ah 0x45
dec ah
cmp ah 0x40
jae r-xdata
test ebx ebx
je r-xdata
add esp 0xfffffff4
mov eax [ ebp - 0x1cc ]
push eax
fstp [ ebp - 0x240 ]
call sub_411b4c
add esp 0xfffffff4
mov edx [ ebp - 0x1d0 ]
push edx
call sub_411b4c
add esp 0x20
add esp 0xfffffff4
mov ecx [ ebp - 0x1d8 ]
push ecx
call sub_411b4c
add esp 0xfffffff4
mov eax [ ebp - 0x1d4 ]
push eax
call sub_411b4c
add esp 0x20
add esp 0xfffffff4
mov edx [ ebp - 0x1e0 ]
push edx
call sub_411b4c
add esp 0xfffffff4
mov ecx [ ebp - 0x1dc ]
push ecx
call sub_411b4c
fld st0
fst [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test eax eax
jne r-xdata
fmul [ r-xdata ]
fld st0
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
fld st0
fst [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test edx 0xfffff
jne r-xdata
fld st0
fst [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
mov eax edx
and eax 0xfffff
cmp eax 0xfffff
jne r-xdata
fstp st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test edx 0xfffff
je r-xdata
fld st2
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
mov edi edx
and edi 0x7ff00000
fld st2
cmp edi 0x7fe00000
jne r-xdata
fchs
fld st1
fst [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test eax eax
jne r-xdata
fstp st0
fld1
fld st0
jmp r-xdata
fstp st0
mov esi esi
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test eax eax
jne r-xdata
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
cmp eax 0xffffffff
jne r-xdata
add esp 0xfffffff8
push 0x1
mov edx [ ebp - 0x1e0 ]
push edx
fstp [ ebp - 0x240 ]
call sub_41206c
mov [ ebp - 0x1e0 ] eax
add esp 0xfffffff8
mov ecx [ ebp - 0x1d8 ]
push ecx
push eax
call sub_41217c
add esp 0x20
fld [ ebp - 0x240 ]
test eax eax
jg r-xdata
jmp r-xdata
fstp st0
cmp edi 0x3400000
ja r-xdata
fxch st3
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
add edx 0xfcb00000
add esp 0xfffffff8
sub esp 0x8
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x254 ] edx
fld [ ebp - 0x258 ]
fst [ esp ]
fxch st1
fstp [ ebp - 0x220 ]
fxch st1
fstp [ ebp - 0x230 ]
fstp [ ebp - 0x240 ]
fstp [ ebp - 0x250 ]
call sub_412324
fld [ ebp - 0x220 ]
fmulp st1
fld [ ebp - 0x240 ]
faddp st1
add esp 0x10
fld [ ebp - 0x230 ]
fld [ ebp - 0x250 ]
fld st2
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
mov eax edx
and eax 0x7ff00000
cmp eax 0x7c9fffff
jbe r-xdata
fstp st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test edx 0xfffff
je r-xdata
test ebx ebx
jne r-xdata
fld st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test al 0x1
je r-xdata
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
mov eax edx
and eax 0x7ff00000
add eax 0xfff00000
or eax 0xfffff
mov [ ebp - 0x1f4 ] eax
mov [ ebp - 0x1f8 ] 0xffffffff
fld [ ebp - 0x1f8 ]
jmp r-xdata
fstp [ ebp - 0x258 ]
mov ecx [ ebp - 0x258 ]
mov ebx [ ebp - 0x254 ]
mov ecx ebx
and ecx 0x7ff00000
lea edx [ ecx + 0x100000 ]
xor eax eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x254 ] edx
fld [ ebp - 0x258 ]
jmp r-xdata
jmp r-xdata
fxch st2
add esp 0xfffffff8
sub esp 0x8
fst [ esp ]
fxch st2
fstp [ ebp - 0x220 ]
fstp [ ebp - 0x230 ]
fstp [ ebp - 0x240 ]
call sub_412324
fld [ ebp - 0x220 ]
fmulp st1
fld [ ebp - 0x240 ]
add esp 0x10
fld [ ebp - 0x230 ]
fxch st1
faddp st2
fxch st1
fld1
fcomp st2
fnstsw ax
and ah 0x45
dec ah
cmp ah 0x40
jae r-xdata
fstp st0
fxch st1
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
add edx 0x3500000
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x254 ] edx
fld [ ebp - 0x258 ]
jmp r-xdata
fstp st1
fstp st1
fld st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
cmp edx 0x7fefffff
jne r-xdata
fstp st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test edx edx
je r-xdata
fld1
fcomp st1
fnstsw ax
and ah 0x45
jne r-xdata
jmp r-xdata
add esp 0xfffffff8
sub esp 0x8
fst [ esp ]
fstp [ ebp - 0x240 ]
call sub_412324
fld [ ebp - 0x240 ]
add esp 0x10
faddp st1
jmp r-xdata
add esp 0xfffffff8
sub esp 0x8
fst [ esp ]
fstp [ ebp - 0x240 ]
call sub_412324
fld [ ebp - 0x240 ]
fsubrp st1
add esp 0x10
fldz
fucomp st1
fnstsw ax
and ah 0x45
cmp ah 0x40
je r-xdata
fstp st1
fxch st1
fnstcw [ ebp - 0x18a ]
mov dx [ ebp - 0x18a ]
or dx 0xc00
mov [ ebp - 0x18c ] dx
fldcw [ ebp - 0x18c ]
fist [ ebp - 0x190 ]
mov eax [ ebp - 0x190 ]
fldcw [ ebp - 0x18a ]
mov [ ebp - 0x190 ] eax
fild [ ebp - 0x190 ]
fsubp st1
test ebx ebx
jne r-xdata
fstp st0
fld st0
fadd [ r-xdata ]
fnstcw [ ebp - 0x18a ]
mov dx [ ebp - 0x18a ]
or dx 0xc00
mov [ ebp - 0x18c ] dx
fldcw [ ebp - 0x18c ]
fistp [ ebp - 0x190 ]
mov eax [ ebp - 0x190 ]
fldcw [ ebp - 0x18a ]
mov [ ebp - 0x190 ] eax
fild [ ebp - 0x190 ]
test ebx ebx
jne r-xdata
fld st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
mov esi edx
and esi 0x7ff00000
cmp edi esi
jne r-xdata
fstp st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
cmp eax 0xffffffff
je r-xdata
fstp st0
jmp r-xdata
fmul [ r-xdata ]
fstp st0
fld [ r-xdata ]
jmp r-xdata
fstp st0
fld st0
fst [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
cmp eax 0x1
jne r-xdata
jmp r-xdata
fcom [ r-xdata ]
fnstsw ax
and ah 0x45
cmp ah 0x1
je r-xdata
fld st1
fst [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test eax eax
jne r-xdata
fchs
call _errno
mov [ eax ] 0x22
mov eax [ _HUGE@IAT ]
fld [ eax ]
jmp r-xdata
jmp r-xdata
fld1
fld [ r-xdata ]
jmp r-xdata
fld st0
jmp r-xdata
fcomp [ r-xdata ]
fnstsw ax
and ah 0x45
je r-xdata
fstp st0
fstp [ ebp - 0x258 ]
mov eax [ ebp - 0x258 ]
mov edx [ ebp - 0x254 ]
test edx 0xfffff
je r-xdata
mov [ ebp - 0x1fc ] 0x7fefffff
mov [ ebp - 0x200 ] 0xffffffff
fld [ ebp - 0x200 ]
jmp r-xdata
jmp r-xdata
fcomp [ r-xdata ]
fnstsw ax
and ah 0x45
cmp ah 0x1
je r-xdata
jmp r-xdata
jmp r-xdata
sub_413820
push ebp
mov ebp esp
sub esp 0x3c
push edi
push esi
push ebx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
cmp [ edx + 0x10 ] eax
jge r-xdata
mov ebx [ ebp + 0xc ]
add ebx 0x14
mov [ ebp - 0x14 ] ebx
dec [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
shl eax 0x2
add ebx eax
mov [ ebp - 0x18 ] ebx
mov edi [ ebp + 0x8 ]
add edi 0x14
lea esi [ eax + edi ]
mov ecx [ ebx ]
inc ecx
mov edx [ esi ]
mov eax edx
xor edx edx
div ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x20 ] edi
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add esp 0xfffffff8
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_41217c
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0x1c ]
inc ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0xc ] 0x0
mov edi [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x4 ]
shl esi 0x2
lea esi [ esi ]
mov ebx [ ebp - 0x14 ]
mov edx [ ebx ]
add ebx 0x4
mov [ ebp - 0x14 ] ebx
mov eax edx
and eax 0xffff
imul eax [ ebp - 0x1c ]
mov ebx [ ebp - 0xc ]
lea ecx [ ebx + eax ]
shr edx 0x10
imul edx [ ebp - 0x1c ]
mov eax ecx
shr eax 0x10
lea ebx [ eax + edx ]
mov [ ebp - 0xc ] ebx
shr [ ebp - 0xc ] 0x10
mov edx [ edi ]
mov eax edx
and eax 0xffff
movzx ecx cx
sub eax ecx
add eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
sar [ ebp - 0x8 ] 0x10
shr edx 0x10
movzx ebx bx
sub edx ebx
add edx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edx
sar [ ebp - 0x8 ] 0x10
mov [ edi + 0x2 ] dx
mov [ edi ] ax
add edi 0x4
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0x14 ] eax
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ebx [ ebp - 0x14 ]
mov edx [ ebx ]
add ebx 0x4
mov [ ebp - 0x14 ] ebx
mov eax edx
and eax 0xffff
mov ebx [ ebp - 0xc ]
lea ecx [ ebx + eax ]
shr edx 0x10
mov eax ecx
shr eax 0x10
lea ebx [ eax + edx ]
mov [ ebp - 0xc ] ebx
shr [ ebp - 0xc ] 0x10
mov edx [ edi ]
mov eax edx
and eax 0xffff
movzx ecx cx
sub eax ecx
add eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
sar [ ebp - 0x8 ] 0x10
shr edx 0x10
movzx ebx bx
sub edx ebx
add edx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edx
sar [ ebp - 0x8 ] 0x10
mov [ edi + 0x2 ] dx
mov [ edi ] ax
add edi 0x4
mov eax [ ebp - 0x18 ]
cmp [ ebp - 0x14 ] eax
jbe r-xdata
add esi [ ebp - 0x20 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
add esi 0xfffffffc
cmp esi [ ebp - 0x20 ]
jbe r-xdata
add esi 0xfffffffc
cmp esi [ ebp - 0x20 ]
jbe r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x10 ] ebx
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x10 ] ebx
cmp [ esi ] 0x0
je r-xdata
dec [ ebp - 0x4 ]
dec [ ebp - 0x4 ]
sub_413a48
push ebp
mov ebp esp
sub esp 0x1dc
push edi
push esi
push ebx
mov ebx [ ebp + 0x1c ]
add esp 0xfffffff4
lea eax [ ebp - 0x40 ]
fld [ ebp + 0x8 ]
fstp [ ebp - 0x160 ]
push eax
call sub_411ad0
mov [ ebp - 0x198 ] eax
add esp 0xfffffff4
lea eax [ ebp - 0x80 ]
push eax
call sub_411ad0
mov [ ebp - 0x19c ] eax
add esp 0x20
add esp 0xfffffff4
lea eax [ ebp - 0x140 ]
push eax
call sub_411ad0
mov [ ebp - 0x1a0 ] eax
mov [ ebp - 0x1a4 ] 0x0
mov [ ebp - 0x1a8 ] 0x0
add esp 0x10
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ ebp - 0x160 ]
mov edx [ ebp - 0x15c ]
test edx edx
jge r-xdata
mov ecx [ rw-data ]
mov [ edx + 0x4 ] ecx
mov eax 0x1
shl eax cl
mov [ edx + 0x8 ] eax
mov [ edx + 0xc ] 0x0
mov [ ebx ] 0x0
mov [ ebx ] 0x1
mov eax [ ebp - 0x160 ]
mov edx [ ebp - 0x15c ]
mov ecx edx
fld [ ebp - 0x160 ]
fstp [ ebp - 0x1b8 ]
and ecx 0x7fffffff
mov [ ebp - 0x1b4 ] ecx
fld [ ebp - 0x1b8 ]
fstp [ ebp - 0x160 ]
jmp r-xdata
fldz
fld [ ebp - 0x160 ]
fucompp
fnstsw ax
and ah 0x44
xor ah 0x40
jne r-xdata
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x270f
mov eax [ ebp - 0x160 ]
mov edx [ ebp - 0x15c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x160 ]
mov edx [ ebp - 0x15c ]
mov eax edx
and eax 0x7ff00000
cmp eax 0x7ff00000
jne r-xdata
add esp 0xfffffff4
lea eax [ ebp - 0x154 ]
push eax
lea eax [ ebp - 0x158 ]
push eax
push [ ebp - 0x15c ]
push [ ebp - 0x160 ]
mov ecx [ ebp - 0x19c ]
push ecx
call sub_412494
mov [ ebp - 0x19c ] eax
add esp 0x20
mov eax [ ebp - 0x160 ]
mov edx [ ebp - 0x15c ]
mov esi edx
shr esi 0x14
and esi 0x7ff
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x1
mov [ ebp - 0x1ac ] r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x1ac ] r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
test edx 0xfffff
jne r-xdata
mov ebx [ ebp - 0x158 ]
add ebx [ ebp - 0x154 ]
lea esi [ ebx + 0x432 ]
cmp esi 0x20
jle r-xdata
mov eax edx
and eax 0xfffff
fld [ ebp - 0x160 ]
fstp [ ebp - 0x1c0 ]
or eax 0x3ff00000
mov [ ebp - 0x1bc ] eax
add esi 0xfffffc01
mov [ ebp - 0x194 ] 0x0
fld [ ebp - 0x1c0 ]
jmp r-xdata
mov eax [ ebp - 0x1ac ]
jmp r-xdata
mov edx [ ebp + 0x20 ]
mov [ edx ] r-xdata
mov ecx [ ebp + 0x20 ]
mov [ ecx ] r-xdata
jmp r-xdata
mov [ ebp - 0x1ac ] r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x160 ]
mov edx [ ebp - 0x15c ]
mov ecx 0x20
sub ecx esi
shl eax cl
mov [ ebp - 0x1cc ] eax
mov eax [ ebp - 0x160 ]
mov edx [ ebp - 0x15c ]
mov ecx 0x40
sub ecx esi
mov edi edx
shl edi cl
add ebx 0x412
mov ecx ebx
shr eax cl
or edi eax
mov [ ebp - 0x1cc ] edi
jmp r-xdata
fsub [ r-xdata ]
mov [ ebp - 0x14c ] esi
fild [ ebp - 0x14c ]
fxch st1
fmul [ r-xdata ]
fadd [ r-xdata ]
fxch st1
fmul [ r-xdata ]
faddp st1
fnstcw [ ebp - 0x14e ]
mov ax [ ebp - 0x14e ]
or ax 0xc00
mov [ ebp - 0x150 ] ax
fldcw [ ebp - 0x150 ]
fist [ ebp - 0x174 ]
fldcw [ ebp - 0x14e ]
fldz
fcomp st1
fnstsw ax
and ah 0x45
jne r-xdata
lea esp [ ebp - 0x1e8 ]
pop ebx
pop esi
pop edi
leave
retn
mov edx [ ebp + 0x20 ]
mov [ edx ] r-xdata
jmp r-xdata
fstp st0
fild [ ebp - 0x174 ]
fucompp
fnstsw ax
and ah 0x45
cmp ah 0x40
je r-xdata
mov eax [ ebp - 0x1cc ]
xor edx edx
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] edx
fild [ ebp - 0x148 ]
add esi 0xfffffbcd
mov [ ebp - 0x194 ] 0x1
fstp [ ebp - 0x1c8 ]
mov eax [ ebp - 0x1c8 ]
mov edx [ ebp - 0x1c4 ]
add edx 0xfe100000
mov [ ebp - 0x1c8 ] eax
mov [ ebp - 0x1c4 ] edx
fld [ ebp - 0x1c8 ]
mov eax [ ebp - 0x154 ]
sub eax esi
lea ebx [ eax - 0x1 ]
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x174 ]
fld [ ebp - 0x160 ]
fcomp [ eax * 8 + r-xdata ]
fnstsw ax
and ah 0x45
cmp ah 0x1
jne r-xdata
mov [ ebp - 0x17c ] 0x1
cmp [ ebp - 0x174 ] 0x16
ja r-xdata
dec [ ebp - 0x174 ]
jmp r-xdata
neg ebx
mov [ ebp - 0x164 ] ebx
mov [ ebp - 0x188 ] 0x0
mov [ ebp - 0x164 ] 0x0
mov [ ebp - 0x188 ] ebx
jmp r-xdata
mov [ ebp - 0x17c ] 0x0
dec [ ebp - 0x174 ]
mov edx [ ebp - 0x174 ]
sub [ ebp - 0x164 ] edx
mov [ ebp - 0x168 ] edx
neg [ ebp - 0x168 ]
mov [ ebp - 0x18c ] 0x0
mov [ ebp - 0x168 ] 0x0
mov eax [ ebp - 0x174 ]
mov [ ebp - 0x18c ] eax
add [ ebp - 0x188 ] eax
jmp r-xdata
cmp [ ebp - 0x174 ] 0x0
jl r-xdata
mov edi 0x1
cmp [ ebp + 0x10 ] 0x5
jle r-xdata
mov [ ebp + 0x10 ] 0x0
cmp [ ebp + 0x10 ] 0x9
jbe r-xdata
mov [ ebp - 0x180 ] 0x1
cmp [ ebp + 0x10 ] 0x5
ja r-xdata
add [ ebp + 0x10 ] 0xfffffffc
xor edi edi
mov ebx 0x20
mov [ rw-data ] 0x3
cmp esi 0x33
jbe r-xdata
mov ecx [ ebp + 0x10 ]
jmp [ ecx * 4 + jump_table_413e8c ]
mov edx [ rw-data ]
test edx edx
je r-xdata
mov edx 0x3
mov [ ebp - 0x16c ] 0xffffffff
mov eax [ ebp - 0x16c ]
mov [ ebp - 0x170 ] eax
mov esi 0x12
mov [ ebp + 0x14 ] 0x0
jmp r-xdata
mov [ ebp - 0x180 ] 0x0
cmp [ ebp + 0x14 ] 0x0
jg r-xdata
mov [ ebp - 0x180 ] 0x0
mov eax [ ebp + 0x14 ]
add eax [ ebp - 0x174 ]
lea esi [ eax + 0x1 ]
mov [ ebp - 0x16c ] esi
mov [ ebp - 0x170 ] eax
test esi esi
jg r-xdata
add esp 0xfffffff4
push edx
call sub_411b4c
add esp 0xfffffff4
push [ rw-data ]
call sub_411afc
mov [ rw-data ] eax
add esp 0x20
mov eax [ edx + 0x4 ]
cmp [ rw-data ] eax
jle r-xdata
inc edx
add ebx ebx
lea eax [ ebx + 0x14 ]
cmp eax esi
jbe r-xdata
mov [ rw-data ] edx
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x170 ] esi
mov [ ebp - 0x16c ] esi
jmp r-xdata
mov [ ebp + 0x14 ] 0x1
mov esi 0x1
mov eax [ ebp - 0x158 ]
test eax eax
jl r-xdata
test edi edi
je r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x1b0 ] edx
mov [ ebp - 0x1ac ] edx
cmp [ ebp - 0x16c ] 0xe
ja r-xdata
mov edx [ ebp - 0x164 ]
mov [ ebp - 0x184 ] edx
mov edi [ ebp - 0x168 ]
cmp [ ebp - 0x180 ] 0x0
je r-xdata
cmp [ ebp - 0x174 ] 0xe
jg r-xdata
xor esi esi
fld [ ebp - 0x160 ]
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x178 ] ecx
mov edi [ ebp - 0x16c ]
mov edx 0x2
test ecx ecx
jle r-xdata
cmp [ ebp - 0x184 ] 0x0
jle r-xdata
cmp [ ebp + 0x10 ] 0x1
jg r-xdata
mov ecx [ ebp - 0x174 ]
fld [ ecx * 8 + r-xdata ]
cmp [ ebp + 0x14 ] 0x0
jge r-xdata
mov ecx [ ebp - 0x174 ]
neg ecx
je r-xdata
mov eax ecx
and eax 0xf
fld [ eax * 8 + r-xdata ]
mov ebx ecx
sar ebx 0x4
test bl 0x10
je r-xdata
cmp [ ebp - 0x168 ] 0x0
jle r-xdata
cmp [ ebp - 0x188 ] 0x0
jle r-xdata
mov ebx [ ebp - 0x16c ]
dec ebx
cmp [ ebp - 0x168 ] ebx
jl r-xdata
cmp [ ebp - 0x194 ] 0x0
je r-xdata
mov esi 0x1
lea esi [ esi ]
cmp [ ebp - 0x16c ] 0x0
jg r-xdata
cmp [ ebp - 0x17c ] 0x0
je r-xdata
mov eax ecx
and eax 0xf
fld [ ebp - 0x160 ]
fmul [ eax * 8 + r-xdata ]
mov ebx ecx
sar ebx 0x4
fstp [ ebp - 0x160 ]
je r-xdata
test ebx ebx
je r-xdata
fld st1
fdiv [ r-xdata ]
and ebx 0xf
mov edx 0x3
fstp [ ebp - 0x160 ]
add esp 0xfffffff8
push 0x1
mov edx [ ebp - 0x1a0 ]
push edx
call sub_411e14
mov [ ebp - 0x1a0 ] eax
add esp 0x10
cmp [ ebp - 0x18c ] 0x0
jle r-xdata
cmp [ ebp - 0x180 ] 0x0
je r-xdata
mov esi [ ebp - 0x188 ]
cmp esi [ ebp - 0x184 ]
jle r-xdata
sub ebx [ ebp - 0x168 ]
add [ ebp - 0x18c ] ebx
add [ ebp - 0x168 ] ebx
xor edi edi
mov edi [ ebp - 0x168 ]
sub edi ebx
jmp r-xdata
mov esi 0x36
sub esi [ ebp - 0x154 ]
jmp r-xdata
lea esi [ eax + 0x433 ]
jmp r-xdata
fstp st0
fld [ ebp - 0x160 ]
fmul [ r-xdata ]
fstp [ ebp - 0x160 ]
fldz
fld [ ebp - 0x160 ]
fucompp
fnstsw ax
and ah 0x45
cmp ah 0x40
je r-xdata
fadd st0
fst [ ebp - 0x160 ]
fcom st1
fnstsw ax
and ah 0x45
je r-xdata
jl r-xdata
mov [ ebp - 0x14c ] edx
fild [ ebp - 0x14c ]
fmul [ ebp - 0x160 ]
fadd [ r-xdata ]
fstp [ ebp - 0x1c8 ]
mov eax [ ebp - 0x1c8 ]
mov edx [ ebp - 0x1c4 ]
add edx 0xfcc00000
mov [ ebp - 0x1c8 ] eax
mov [ ebp - 0x1c4 ] edx
fld [ ebp - 0x1c8 ]
cmp [ ebp - 0x16c ] 0x0
jne r-xdata
fld1
fcomp [ ebp - 0x160 ]
fnstsw ax
and ah 0x45
jne r-xdata
mov eax r-xdata
mov esi esi
fdivr [ ebp - 0x160 ]
fstp [ ebp - 0x160 ]
jmp r-xdata
mov eax r-xdata
nop
cmp [ ebp + 0x10 ] 0x1
jg r-xdata
add esp 0xfffffff8
mov ecx [ ebp - 0x18c ]
push ecx
mov edi eax
push edi
call sub_412020
mov [ ebp - 0x1a0 ] eax
add esp 0x10
add esp 0xfffffff8
mov edi [ ebp - 0x168 ]
push edi
mov eax [ ebp - 0x19c ]
push eax
test edi edi
jle r-xdata
sub [ ebp - 0x164 ] esi
sub [ ebp - 0x184 ] esi
sub [ ebp - 0x188 ] esi
mov esi [ ebp - 0x184 ]
add [ ebp - 0x164 ] esi
add [ ebp - 0x188 ] esi
add esp 0xfffffff8
push 0x1
add esp 0xfffffff4
lea eax [ ebp - 0xc0 ]
push eax
call sub_411ad0
add esp 0x10
push eax
call sub_411e14
mov [ ebp - 0x1a4 ] eax
add esp 0x10
mov ecx [ ebp - 0x164 ]
mov [ ebp - 0x184 ] ecx
sub [ ebp - 0x184 ] esi
xor esi esi
mov esi [ ebp - 0x16c ]
test esi esi
jge r-xdata
fstp st0
inc esi
jmp r-xdata
fstp st0
fstp st0
nop
fucompp
fnstsw ax
and ah 0x44
xor ah 0x40
jne r-xdata
fstp st0
fmul [ r-xdata ]
fcomp [ ebp - 0x160 ]
fnstsw ax
and ah 0x5
je r-xdata
cmp [ ebp - 0x180 ] 0x0
je r-xdata
fld [ ebp - 0x160 ]
fsub [ r-xdata ]
fst [ ebp - 0x160 ]
fcom st1
fnstsw ax
and ah 0x45
je r-xdata
cmp [ ebp - 0x16c ] 0x0
jle r-xdata
sar ebx 0x1
inc esi
test ebx ebx
jne r-xdata
inc edx
fld [ ebp - 0x160 ]
fmul [ eax + esi * 8 ]
fstp [ ebp - 0x160 ]
sar ebx 0x1
inc esi
test ebx ebx
jne r-xdata
inc edx
fmul [ eax + esi * 8 ]
cmp [ ebp - 0x18c ] 0x0
je r-xdata
mov eax [ ebp - 0x160 ]
mov edx [ ebp - 0x15c ]
test eax eax
jne r-xdata
mov ebx [ ebp - 0x168 ]
sub ebx edi
je r-xdata
add esp 0xfffffff8
push edi
mov eax [ ebp - 0x1a4 ]
push eax
call sub_412020
mov [ ebp - 0x1a4 ] eax
add esp 0xfffffffc
mov edx [ ebp - 0x19c ]
push edx
mov ecx eax
push ecx
mov eax [ ebp - 0x198 ]
push eax
call sub_411e3c
mov edx [ ebp - 0x19c ]
mov [ ebp - 0x198 ] edx
mov [ ebp - 0x19c ] eax
add esp 0x20
mov eax [ ebp - 0x1b0 ]
mov eax [ ebp + 0x20 ]
mov [ eax ] edx
fld [ ebp - 0x160 ]
fdiv st1
fnstcw [ ebp - 0x14e ]
mov dx [ ebp - 0x14e ]
or dx 0xc00
mov [ ebp - 0x150 ] dx
fldcw [ ebp - 0x150 ]
fistp [ ebp - 0x14c ]
mov ebx [ ebp - 0x14c ]
fldcw [ ebp - 0x14e ]
mov [ ebp - 0x14c ] ebx
fild [ ebp - 0x14c ]
fmul st1
fsubr [ ebp - 0x160 ]
mov edi [ ebp - 0x1ac ]
mov cl bl
add cl 0x30
fst [ ebp - 0x160 ]
mov [ edi ] cl
inc edi
mov [ ebp - 0x1ac ] edi
cmp esi [ ebp - 0x16c ]
jne r-xdata
mov edi [ ebp - 0x1ac ]
inc [ edi ]
inc edi
mov [ ebp - 0x1ac ] edi
jmp r-xdata
mov ecx [ ebp - 0x1b0 ]
cmp edx ecx
jne r-xdata
add esp 0xfffffff4
mov eax [ ebp - 0x19c ]
push eax
call sub_411b4c
mov edx [ ebp - 0x1ac ]
mov [ edx ] 0x0
mov edi [ ebp - 0x174 ]
inc edi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] edi
cmp [ ebp + 0x20 ] 0x0
je r-xdata
test bl 0x1
je r-xdata
add esp 0xfffffff4
mov edi [ ebp - 0x198 ]
push edi
call sub_411b4c
add esp 0xfffffff4
mov eax [ ebp - 0x1a0 ]
push eax
call sub_411b4c
add esp 0x20
cmp [ ebp - 0x1a4 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
not eax
mov [ ebp - 0x174 ] eax
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x16c ]
fmul [ edx * 8 + r-xdata ]
mov esi 0x1
fld [ r-xdata ]
mov edx [ ebp - 0x16c ]
fld [ r-xdata ]
fdiv [ edx * 8 + r-xdata ]
fsubrp st1
fld [ ebp - 0x160 ]
fnstcw [ ebp - 0x14e ]
mov cx [ ebp - 0x14e ]
or cx 0xc00
mov [ ebp - 0x150 ] cx
fldcw [ ebp - 0x150 ]
fistp [ ebp - 0x14c ]
mov ebx [ ebp - 0x14c ]
fldcw [ ebp - 0x14e ]
mov [ ebp - 0x14c ] ebx
fild [ ebp - 0x14c ]
fsubr [ ebp - 0x160 ]
mov eax [ ebp - 0x1b0 ]
add bl 0x30
fst [ ebp - 0x160 ]
mov [ eax ] bl
inc eax
mov [ ebp - 0x1ac ] eax
fcomp st1
fnstsw ax
and ah 0x45
cmp ah 0x1
je r-xdata
fstp st0
fstp st0
fstp st0
lea esi [ esi ]
fxch st1
fchs
fcompp
fnstsw ax
and ah 0x45
je r-xdata
cmp [ ebp - 0x170 ] 0x0
jle r-xdata
test bl 0x1
je r-xdata
test bl 0x1
je r-xdata
mov esi [ ebp - 0x188 ]
inc esi
add esp 0xfffffff4
mov eax [ ebp - 0x1a0 ]
mov edx [ eax + 0x10 ]
dec edx
add eax 0x14
push [ eax + edx * 4 ]
call sub_411d44
add esp 0x10
mov esi [ ebp - 0x188 ]
add esi 0x20
sub esi eax
jmp r-xdata
mov [ ebp - 0x190 ] 0x0
test edx 0xfffff
jne r-xdata
add esp 0xfffffff8
push ebx
mov ecx [ ebp - 0x19c ]
push ecx
jmp r-xdata
dec [ ebp - 0x1ac ]
mov edx [ ebp - 0x1ac ]
cmp [ edx ] 0x39
jne r-xdata
inc [ ebp - 0x174 ]
mov [ ecx ] 0x30
jmp r-xdata
cmp [ ebp - 0x1a8 ] 0x0
je r-xdata
mov edx [ ebp - 0x1b0 ]
mov [ edx ] 0x31
inc edx
mov [ ebp - 0x1ac ] edx
inc [ ebp - 0x174 ]
jmp r-xdata
inc esi
fld [ ebp - 0x160 ]
fmul st1
fstp [ ebp - 0x160 ]
jmp r-xdata
fstp st0
fld [ r-xdata ]
fld st1
fadd st1
fcomp [ ebp - 0x160 ]
fnstsw ax
and ah 0x45
cmp ah 0x1
je r-xdata
fstp st0
fld1
fld st0
fsub [ ebp - 0x160 ]
fcomp st2
fnstsw ax
and ah 0x45
cmp ah 0x1
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x1b0 ]
mov [ ebp - 0x1ac ] eax
fstp [ ebp - 0x160 ]
mov edx [ ebp - 0x178 ]
mov [ ebp - 0x174 ] edx
mov [ ebp - 0x16c ] edi
mov ecx [ ebp - 0x170 ]
mov [ ebp - 0x16c ] ecx
dec [ ebp - 0x174 ]
fld [ ebp - 0x160 ]
fmul [ r-xdata ]
inc edx
fstp [ ebp - 0x160 ]
cmp esi 0x4
jle r-xdata
mov eax 0x20
sub eax esi
mov esi eax
and esi 0x1f
je r-xdata
test edx 0x7ff00000
je r-xdata
call sub_412020
mov [ ebp - 0x19c ] eax
add esp 0x10
add esp 0xfffffff4
mov edi [ ebp - 0x1a4 ]
push edi
call sub_411b4c
add esp 0x10
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
cmp [ ebp - 0x1a8 ] edx
je r-xdata
fld [ ebp - 0x160 ]
fnstcw [ ebp - 0x14e ]
mov cx [ ebp - 0x14e ]
or cx 0xc00
mov [ ebp - 0x150 ] cx
fldcw [ ebp - 0x150 ]
fistp [ ebp - 0x14c ]
mov ebx [ ebp - 0x14c ]
fldcw [ ebp - 0x14e ]
mov [ ebp - 0x14c ] ebx
fild [ ebp - 0x14c ]
fsubr [ ebp - 0x160 ]
add bl 0x30
mov eax [ ebp - 0x1ac ]
fstp [ ebp - 0x160 ]
mov [ eax ] bl
inc eax
mov [ ebp - 0x1ac ] eax
cmp esi [ ebp - 0x16c ]
jne r-xdata
fstp st0
fsubrp st1
fcomp [ ebp - 0x160 ]
fnstsw ax
and ah 0x45
jne r-xdata
mov esi 0x1
cmp esi edx
jge r-xdata
cmp esi 0x3
jg r-xdata
add esi 0xfffffffc
jmp r-xdata
inc [ ebp - 0x164 ]
inc [ ebp - 0x188 ]
mov [ ebp - 0x190 ] 0x1
jmp r-xdata
add esp 0xfffffff4
mov ecx [ ebp - 0x1a8 ]
push ecx
call sub_411b4c
add esp 0x10
fstp st0
mov esi esi
fstp st0
fstp st0
fld [ r-xdata ]
cmp [ ebp - 0x164 ] 0x0
jle r-xdata
add esi 0x1c
add [ ebp - 0x164 ] esi
add [ ebp - 0x184 ] esi
add [ ebp - 0x188 ] esi
dec [ ebp - 0x1ac ]
mov edx [ ebp - 0x1ac ]
cmp [ edx ] 0x30
je r-xdata
inc edx
mov [ ebp - 0x1ac ] edx
jmp r-xdata
fstp st0
fstp st0
fld st1
fsub [ ebp - 0x160 ]
fcomp st3
fnstsw ax
and ah 0x45
cmp ah 0x1
je r-xdata
cmp [ ebp - 0x188 ] 0x0
jle r-xdata
add esp 0xfffffff8
mov edx [ ebp - 0x164 ]
push edx
mov ecx [ ebp - 0x19c ]
push ecx
call sub_41206c
mov [ ebp - 0x19c ] eax
add esp 0x10
fstp st0
inc esi
cmp esi [ ebp - 0x16c ]
jl r-xdata
cmp [ ebp - 0x17c ] 0x0
je r-xdata
add esp 0xfffffff8
mov edi [ ebp - 0x188 ]
push edi
mov eax [ ebp - 0x1a0 ]
push eax
call sub_41206c
mov [ ebp - 0x1a0 ] eax
add esp 0x10
fld [ ebp - 0x160 ]
fmul st1
fnstcw [ ebp - 0x14e ]
mov ax [ ebp - 0x14e ]
or ax 0xc00
mov [ ebp - 0x150 ] ax
fldcw [ ebp - 0x150 ]
fist [ ebp - 0x14c ]
mov ebx [ ebp - 0x14c ]
fldcw [ ebp - 0x14e ]
mov [ ebp - 0x14c ] ebx
fstp [ ebp - 0x160 ]
fild [ ebp - 0x14c ]
fsubr [ ebp - 0x160 ]
fxch st3
fmul st1
fxch st3
add bl 0x30
mov edx [ ebp - 0x1ac ]
fst [ ebp - 0x160 ]
mov [ edx ] bl
inc edx
mov [ ebp - 0x1ac ] edx
fcomp st3
fnstsw ax
and ah 0x45
cmp ah 0x1
je r-xdata
fstp st0
jmp r-xdata
cmp [ ebp - 0x16c ] 0x0
jg r-xdata
add esp 0xfffffff8
mov edx [ ebp - 0x1a0 ]
push edx
mov ecx [ ebp - 0x19c ]
push ecx
call sub_41217c
add esp 0x10
test eax eax
jge r-xdata
cmp [ ebp - 0x180 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x2
jle r-xdata
dec [ ebp - 0x174 ]
add esp 0xfffffffc
push 0x0
push 0xa
mov edi [ ebp - 0x19c ]
push edi
call sub_411bfc
mov [ ebp - 0x19c ] eax
add esp 0x10
cmp [ ebp - 0x180 ] 0x0
je r-xdata
mov esi 0x1
jmp r-xdata
cmp [ ebp - 0x184 ] 0x0
jle r-xdata
cmp [ ebp - 0x16c ] 0x0
jl r-xdata
mov edx [ ebp - 0x170 ]
mov [ ebp - 0x16c ] edx
add esp 0xfffffffc
push 0x0
push 0xa
mov eax [ ebp - 0x1a4 ]
push eax
call sub_411bfc
mov [ ebp - 0x1a4 ] eax
add esp 0x10
add esp 0xfffffff8
mov eax [ ebp - 0x1a0 ]
push eax
mov edx [ ebp - 0x19c ]
push edx
call sub_413820
lea edi [ eax + 0x30 ]
mov ecx edi
mov eax [ ebp - 0x1ac ]
mov [ eax ] cl
inc eax
mov [ ebp - 0x1ac ] eax
add esp 0x10
cmp esi [ ebp - 0x16c ]
jl r-xdata
cmp [ ebp - 0x190 ] 0x0
je r-xdata
add esp 0xfffffff8
mov ecx [ ebp - 0x184 ]
push ecx
mov edi [ ebp - 0x1a4 ]
push edi
call sub_41206c
mov [ ebp - 0x1a4 ] eax
add esp 0x10
add esp 0xfffffff8
add esp 0xfffffffc
push 0x0
push 0x5
mov ecx [ ebp - 0x1a0 ]
push ecx
call sub_411bfc
mov [ ebp - 0x1a0 ] eax
push eax
mov edi [ ebp - 0x19c ]
push edi
call sub_41217c
add esp 0x20
test eax eax
jg r-xdata
add esp 0xfffffffc
push 0x0
push 0xa
mov edi [ ebp - 0x19c ]
push edi
call sub_411bfc
mov [ ebp - 0x19c ] eax
add esp 0x10
inc esi
add esp 0xfffffff8
push 0x1
mov edx [ ebp - 0x19c ]
push edx
call sub_41206c
mov [ ebp - 0x19c ] eax
add esp 0xfffffff8
mov ecx [ ebp - 0x1a0 ]
push ecx
push eax
call sub_41217c
mov ebx eax
add esp 0x20
test ebx ebx
jg r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ ebp - 0x1a8 ] eax
add esp 0xfffffff8
mov eax [ ebp - 0x1a4 ]
push [ eax + 0x4 ]
add esp 0xfffffff4
lea eax [ ebp - 0x100 ]
push eax
call sub_411ad0
add esp 0x10
push eax
call sub_411ba4
mov [ ebp - 0x1a8 ] eax
add esp 0xfffffff8
mov edx [ ebp - 0x1a4 ]
push edx
mov ecx eax
push ecx
call sub_411b6c
add esp 0x20
add esp 0xfffffff8
push 0x1
mov edi [ ebp - 0x1a4 ]
push edi
call sub_41206c
mov [ ebp - 0x1a4 ] eax
add esp 0x10
jmp r-xdata
jmp r-xdata
dec [ ebp - 0x1ac ]
mov edx [ ebp - 0x1ac ]
cmp [ edx ] 0x39
jne r-xdata
jne r-xdata
add esp 0xfffffff8
mov edx [ ebp - 0x1a0 ]
push edx
mov ecx [ ebp - 0x19c ]
push ecx
call sub_413820
lea edi [ eax + 0x30 ]
add esp 0xfffffff8
mov eax [ ebp - 0x1a8 ]
push eax
mov edx [ ebp - 0x19c ]
push edx
call sub_41217c
mov ebx eax
add esp 0x20
add esp 0xfffffffc
mov ecx [ ebp - 0x1a4 ]
push ecx
mov eax [ ebp - 0x1a0 ]
push eax
mov edx [ ebp - 0x198 ]
push edx
call sub_4121d4
mov [ ebp - 0x198 ] eax
add esp 0x10
cmp [ eax + 0xe ] 0x0
jne r-xdata
mov esi 0x1
jmp r-xdata
mov eax [ ebp - 0x1ac ]
inc [ eax ]
lea esi [ esi ]
dec [ ebp - 0x1ac ]
mov ecx [ ebp - 0x1ac ]
cmp [ ecx ] 0x30
je r-xdata
test edi 0x1
je r-xdata
mov ecx 0x1
add esp 0xfffffff8
push eax
mov ecx [ ebp - 0x19c ]
push ecx
call sub_41217c
add esp 0x10
mov ecx eax
jmp r-xdata
inc [ ebp - 0x174 ]
mov edx [ ebp - 0x1b0 ]
mov [ edx ] 0x31
dec [ ebp - 0x1ac ]
mov edi [ ebp - 0x1ac ]
cmp [ edi ] 0x39
je r-xdata
inc ecx
mov [ ebp - 0x1ac ] ecx
test ebx ebx
jl r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0x1b0 ]
cmp [ ebp - 0x1ac ] ecx
je r-xdata
test ecx ecx
jle r-xdata
jne r-xdata
mov eax [ ebp - 0x160 ]
mov edx [ ebp - 0x15c ]
test al 0x1
jne r-xdata
mov ecx edi
jmp r-xdata
add esp 0xfffffff8
push 0x1
mov ecx [ ebp - 0x19c ]
push ecx
call sub_41206c
mov [ ebp - 0x19c ] eax
add esp 0xfffffff8
mov eax [ ebp - 0x1a0 ]
push eax
mov edx [ ebp - 0x19c ]
push edx
call sub_41217c
mov ecx eax
add esp 0x20
test ecx ecx
jg r-xdata
test ecx ecx
jle r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp edi 0x39
je r-xdata
mov eax [ ebp - 0x1ac ]
mov [ eax ] cl
jmp r-xdata
mov eax edi
inc edi
cmp eax 0x39
je r-xdata
jne r-xdata
mov edx edi
mov ecx [ ebp - 0x1ac ]
mov [ ecx ] dl
inc ecx
mov [ ebp - 0x1ac ] ecx
cmp esi [ ebp - 0x16c ]
jne r-xdata
cmp edi 0x39
jne r-xdata
mov eax [ ebp - 0x160 ]
mov edx [ ebp - 0x15c ]
test al 0x1
jne r-xdata
mov edx [ ebp - 0x1ac ]
mov [ edx ] 0x39
inc edx
mov [ ebp - 0x1ac ] edx
jmp r-xdata
test ebx ebx
jle r-xdata
inc eax
mov [ ebp - 0x1ac ] eax
jmp r-xdata
test edi 0x1
je r-xdata
add esp 0xfffffffc
push 0x0
push 0xa
mov edx [ ebp - 0x19c ]
push edx
call sub_411bfc
mov [ ebp - 0x19c ] eax
add esp 0x10
mov ecx [ ebp - 0x1a4 ]
cmp [ ebp - 0x1a8 ] ecx
jne r-xdata
jmp r-xdata
mov ecx edi
inc cl
mov eax edi
mov edx [ ebp - 0x1ac ]
mov [ edx ] al
jmp r-xdata
inc edi
add esp 0xfffffffc
push 0x0
push 0xa
mov edi [ ebp - 0x1a8 ]
push edi
call sub_411bfc
mov [ ebp - 0x1a8 ] eax
add esp 0xfffffffc
push 0x0
push 0xa
mov eax [ ebp - 0x1a4 ]
push eax
call sub_411bfc
mov [ ebp - 0x1a4 ] eax
add esp 0x20
add esp 0xfffffffc
push 0x0
push 0xa
push ecx
call sub_411bfc
mov [ ebp - 0x1a4 ] eax
mov [ ebp - 0x1a8 ] eax
add esp 0x10
jmp r-xdata
inc edx
mov [ ebp - 0x1ac ] edx
jmp r-xdata
inc esi
sub_414d58
push ebp
mov ebp esp
sub esp 0x20
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push edx
push ecx
push ebx
call sub_414f08
test esi esi
je r-xdata
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
leave
retn
mov dl [ ebp - 0x4 ]
or [ esi + 0x12 ] dl
sub_414dac
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_414dd0
leave
retn
sub_414dd0
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x0
jmp r-xdata
sub esi [ ebp + 0xc ]
mov eax esi
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ebx [ edx + 0x8 ]
sub ebx eax
test ebx ebx
jg r-xdata
cmp ebx [ ebp + 0x10 ]
jb r-xdata
add esp 0xfffffff4
push edx
call sub_410640
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
add esp 0xfffffffc
push ebx
mov edx [ ebp + 0x14 ]
push edx
push eax
call memchr
mov edi eax
add esp 0x10
test edi edi
je r-xdata
mov ebx [ ebp + 0x10 ]
cmp eax [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
add esp 0xfffffffc
push ebx
mov edx [ ebp + 0x8 ]
push [ edx + 0x4 ]
push esi
call memcpy
mov eax [ ebp + 0x8 ]
add [ eax + 0x4 ] ebx
add esi ebx
sub [ ebp + 0x10 ] ebx
add esp 0x10
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
sub [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ebx edi
sub ebx eax
cmp [ ebp + 0x18 ] 0x0
jl r-xdata
mov [ esi ] al
inc esi
dec [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
jle r-xdata
mov edx [ ebp + 0x1c ]
mov [ edx ] eax
add esp 0xfffffffc
push ebx
push eax
push esi
call memcpy
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0x4 ]
add eax ebx
jmp r-xdata
inc edi
cmp [ ebp + 0x18 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
jge r-xdata
mov [ esi ] al
inc esi
jmp r-xdata
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
inc ebx
add esp 0xfffffff8
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_410ad4
jmp r-xdata
sub_414f08
push ebp
mov ebp esp
sub esp 0x29c
push edi
push esi
push ebx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x268 ] eax
mov [ ebp - 0x27c ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x284 ] 0x0
mov [ ebp - 0x274 ] 0x0
mov [ ebp - 0x278 ] 0x0
nop
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ _pctype@IAT ]
mov edx [ eax ]
mov ecx eax
test [ edx + edi * 2 ] 0x8
je r-xdata
mov eax [ ebp - 0x274 ]
lea esp [ ebp - 0x2a8 ]
pop ebx
pop esi
pop edi
leave
retn
cmp [ ebp - 0x284 ] 0x0
je r-xdata
cmp edi 0x25
jne r-xdata
jmp r-xdata
mov edx [ ebp + 0x14 ]
or [ edx ] 0x1
add esp 0xfffffff4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_410eb0
mov ebx eax
add esp 0x10
cmp ebx 0xffffffff
je r-xdata
mov [ ebp - 0x26c ] 0x0
mov [ ebp - 0x270 ] 0x0
add esp 0xfffffff4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_410eb0
mov edi eax
add esp 0x10
cmp edi 0xffffffff
je r-xdata
inc [ ebp - 0x284 ]
cmp [ ebp - 0x274 ] 0x0
jne r-xdata
cmp ebx edi
je r-xdata
mov eax [ ecx ]
test [ eax + edi * 2 ] 0x1
je r-xdata
jmp [ edi * 4 + jump_table_415000 ]
inc [ ebp - 0x284 ]
jmp r-xdata
mov eax [ _pctype@IAT ]
mov eax [ eax ]
test [ eax + edi * 2 ] 0x8
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x274 ] 0xffffffff
inc [ ebp - 0x278 ]
jmp r-xdata
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
push eax
push ebx
call sub_415f64
jmp r-xdata
mov edi 0x3
mov [ ebp - 0x280 ] strtol
or [ ebp - 0x270 ] 0x1
cmp [ ebp - 0x270 ] 0x0
jne r-xdata
test [ ebp - 0x270 ] 0xffffffb7
jne r-xdata
test [ ebp - 0x270 ] 0xffffffb7
jne r-xdata
test [ ebp - 0x270 ] 0xffffffb7
jne r-xdata
test [ ebp - 0x270 ] 0xffffffb7
jne r-xdata
mov edi 0x3
mov [ ebp - 0x280 ] strtol
mov [ ebp - 0x27c ] 0x0
jmp r-xdata
or [ ebp - 0x270 ] 0x1
mov edi 0x3
mov [ ebp - 0x280 ] strtoul
mov [ ebp - 0x27c ] 0x8
jmp r-xdata
mov edi 0x3
mov [ ebp - 0x280 ] strtoul
jmp r-xdata
or [ ebp - 0x26f ] 0x1
jmp r-xdata
mov edi 0x4
jmp r-xdata
mov edi 0x2
jmp r-xdata
add esp 0xfffffff8
mov ecx [ ebp - 0x268 ]
push ecx
lea eax [ ebp - 0x100 ]
push eax
call sub_415ea8
mov [ ebp - 0x268 ] eax
or [ ebp - 0x270 ] 0x20
mov edi 0x1
add esp 0x10
jmp r-xdata
or [ ebp - 0x270 ] 0x20
xor edi edi
jmp r-xdata
or [ ebp - 0x270 ] 0x110
mov eax [ ebp - 0x270 ]
test al 0x8
jne r-xdata
mov [ ebp - 0x274 ] 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x268 ]
movzx edi [ edx ]
inc edx
mov [ ebp - 0x268 ] edx
test edi edi
je r-xdata
inc [ ebp - 0x278 ]
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
push eax
push edi
call sub_415f64
add esp 0x10
jmp r-xdata
mov eax [ ebp + 0x14 ]
or [ eax ] 0x2
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
movzx edx [ eax ]
cmp edx 0xffffffff
je r-xdata
add esp 0xfffffff4
push edx
call sub_4105ac
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x270 ] 0x8
jmp r-xdata
or [ ebp - 0x270 ] 0x1
jmp r-xdata
or [ ebp - 0x270 ] 0x2
jmp r-xdata
or [ ebp - 0x270 ] 0x4
jmp r-xdata
or [ ebp - 0x270 ] 0x40
mov edx [ ebp - 0x26c ]
lea eax [ edx + edx * 4 ]
lea edi [ edi + eax * 2 - 0x30 ]
mov [ ebp - 0x26c ] edi
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
cmp [ edx + 0x4 ] eax
jb r-xdata
mov [ ebp - 0x27c ] 0xa
mov edi 0x3
mov [ ebp - 0x280 ] strtoul
mov [ ebp - 0x27c ] 0x10
jmp r-xdata
test al 0x4
je r-xdata
mov eax [ ebp - 0x270 ]
test al 0x20
jne r-xdata
mov edx [ ebp - 0x268 ]
movzx edi [ edx ]
inc edx
mov [ ebp - 0x268 ] edx
cmp edi 0x78
ja r-xdata
mov eax [ ebp - 0x270 ]
add [ ebp + 0x10 ] 0x4
mov edx [ ebp + 0x10 ]
mov eax [ edx - 0x4 ]
mov ecx [ ebp - 0x278 ]
mov [ eax ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x4
mov edx [ ebp + 0x10 ]
mov eax [ edx - 0x4 ]
mov ecx [ ebp - 0x278 ]
mov [ eax ] cx
jmp r-xdata
cmp edi 0x4
ja r-xdata
mov eax [ _pctype@IAT ]
mov eax [ eax ]
test [ eax + edx * 2 ] 0x8
je r-xdata
jmp [ edi * 4 + jump_table_4154d8 ]
lea esi [ esi ]
cmp [ ebp - 0x26c ] 0x0
jne r-xdata
cmp [ ebp - 0x26c ] 0x0
jne r-xdata
cmp [ ebp - 0x26c ] 0x0
jne r-xdata
mov eax [ ebp - 0x26c ]
dec eax
cmp eax 0x15c
jbe r-xdata
mov eax [ ebp - 0x26c ]
dec eax
cmp eax 0x15c
jbe r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
movzx ebx [ eax ]
jmp r-xdata
add esp 0xfffffff4
push edx
call sub_4105ac
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x270 ]
test cl 0x8
je r-xdata
mov [ ebp - 0x26c ] 0x1
mov edx [ ebp - 0x270 ]
test dl 0x8
je r-xdata
mov [ ebp - 0x26c ] 0xffffffff
mov eax [ ebp - 0x270 ]
test al 0x8
je r-xdata
mov [ ebp - 0x26c ] 0xffffffff
or [ ebp - 0x270 ] 0x2c0
lea esi [ ebp - 0x260 ]
mov ebx esi
cmp [ ebp - 0x26c ] 0x0
je r-xdata
mov [ ebp - 0x26c ] 0x15d
or [ ebp - 0x270 ] 0x3c0
lea esi [ ebp - 0x260 ]
mov ebx esi
cmp [ ebp - 0x26c ] 0x0
je r-xdata
mov [ ebp - 0x26c ] 0x15d
cmp ebx 0xffffffff
je r-xdata
mov ebx eax
add esp 0xfffffffc
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x48 ]
mov ecx [ ebp - 0x26c ]
push ecx
add [ ebp + 0x10 ] 0x4
mov edx [ ebp + 0x10 ]
push [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
push ecx
mov eax [ eax + 0x3c ]
call eax
add esp 0x10
cmp eax [ ebp - 0x26c ]
jne r-xdata
xor esi esi
add [ ebp + 0x10 ] 0x4
mov edx [ ebp + 0x10 ]
mov esi [ edx - 0x4 ]
mov edi esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
movzx edx [ ecx ]
cmp [ edx + ebp - 0x100 ] 0x0
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
movzx edx [ ecx ]
cmp [ edx + ebp - 0x100 ] 0x0
je r-xdata
add [ ebp + 0x10 ] 0x4
mov ecx [ ebp + 0x10 ]
mov esi [ ecx - 0x4 ]
mov edi esi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
movzx eax [ ecx ]
mov edx [ _pctype@IAT ]
mov edx [ edx ]
mov ebx [ ebp - 0x274 ]
inc ebx
test [ edx + eax * 2 ] 0x8
jne r-xdata
xor ebx ebx
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
movzx eax [ ecx ]
mov edx [ _pctype@IAT ]
mov edx [ edx ]
test [ edx + eax * 2 ] 0x8
jne r-xdata
cmp [ ebp - 0x270 ] 0x0
jge r-xdata
nop
cmp [ ebp - 0x270 ] 0x0
jge r-xdata
nop
mov eax [ _pctype@IAT ]
mov eax [ eax ]
test [ eax + ebx * 2 ] 0x8
jne r-xdata
mov eax [ ebp - 0x26c ]
add [ ebp - 0x278 ] eax
inc [ ebp - 0x274 ]
jmp r-xdata
add esi [ ebp - 0x26c ]
add eax [ ebp - 0x26c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
add esi ebx
sub [ ebp - 0x26c ] ebx
add eax ebx
mov [ edx + 0x4 ] eax
add esp 0xfffffff4
push edx
call sub_4105ac
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
mov ebx esi
sub ebx edi
je r-xdata
mov al [ ecx ]
mov [ esi ] al
mov edx [ ebp + 0x8 ]
inc [ edx + 0x4 ]
inc esi
dec [ ebp - 0x26c ]
je r-xdata
test ebx ebx
je r-xdata
inc ebx
inc ecx
mov [ eax + 0x4 ] ecx
dec [ ebp - 0x26c ]
je r-xdata
mov [ esi ] 0x0
sub esi edi
add [ ebp - 0x278 ] esi
mov [ ebp - 0x274 ] ebx
jmp r-xdata
mov al [ ecx ]
mov [ esi ] al
mov edx [ ebp + 0x8 ]
inc [ edx + 0x4 ]
inc esi
dec [ ebp - 0x26c ]
je r-xdata
add [ ebp - 0x278 ] ebx
jmp r-xdata
mov ebx 0x1
inc ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
dec [ ebp - 0x26c ]
je r-xdata
movzx edi [ esi - 0x1 ]
cmp edi 0x78
je r-xdata
cmp esi ebx
jbe r-xdata
jmp [ eax * 4 + jump_table_4158b0 ]
mov edx [ ebp - 0x270 ]
test dl 0x8
jne r-xdata
mov eax [ ebp - 0x270 ]
test ah 0x2
je r-xdata
jmp [ eax * 4 + jump_table_415c00 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
lea ecx [ eax + 0x1 ]
mov [ edx + 0x4 ] ecx
inc [ ebp - 0x278 ]
mov eax ecx
cmp eax [ edx + 0x8 ]
jb r-xdata
add [ ebp - 0x278 ] esi
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ebx [ edx + 0x8 ]
sub ebx eax
cmp ebx [ ebp - 0x26c ]
jge r-xdata
test esi esi
je r-xdata
mov [ esi ] 0x0
inc [ ebp - 0x274 ]
jmp r-xdata
mov esi esi
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
cmp [ edx + 0x4 ] eax
jb r-xdata
lea esi [ esi ]
mov esi esi
dec esi
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
push eax
push edi
call sub_415f64
add esp 0x10
cmp edi 0x58
jne r-xdata
add esp 0xfffffff8
mov ecx [ ebp + 0x8 ]
push ecx
movzx eax [ esi - 0x1 ]
push eax
call sub_415f64
jmp r-xdata
cmp [ ebp - 0x27c ] 0x0
jne r-xdata
mov edx [ ebp - 0x27c ]
movsx edx [ edx * 2 + rw-data ]
mov [ ebp - 0x27c ] edx
mov ecx [ ebp - 0x27c ]
movsx ecx [ ecx * 2 + rw-data ]
mov [ ebp - 0x27c ] ecx
cmp ecx 0x8
jle r-xdata
cmp [ ebp - 0x27c ] 0xa
jle r-xdata
mov eax [ ebp - 0x270 ]
test al 0x40
je r-xdata
mov edx [ ebp - 0x270 ]
test dh 0x1
je r-xdata
sub esi ebx
mov [ esi ] 0x0
add esp 0xfffffff8
push 0x0
push ebx
call sub_412798
add esp 0x10
mov ecx [ ebp - 0x270 ]
test cl 0x1
je r-xdata
dec esi
movzx edi [ esi ]
cmp edi 0x65
je r-xdata
cmp esi ebx
jbe r-xdata
and [ ebp - 0x270 ] 0x3f
jmp r-xdata
mov ecx [ ebp - 0x270 ]
test cl 0x40
je r-xdata
mov eax [ ebp - 0x270 ]
test ah 0x1
je r-xdata
mov eax [ ebp - 0x270 ]
and eax 0x280
cmp eax 0x200
jne r-xdata
inc [ ebp - 0x284 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
movzx edx [ eax ]
cmp edx 0xffffffff
jne r-xdata
add esp 0xfffffff4
push ecx
call sub_4105ac
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
movzx eax [ edx ]
cmp eax 0xffffffff
jne r-xdata
add esp 0xfffffff4
push edx
call sub_4105ac
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
movzx edx [ ecx ]
cmp edx 0xffffffff
jne r-xdata
add esp 0xfffffff4
push ecx
call sub_4105ac
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
movzx edx [ ecx ]
cmp edx 0xffffffff
jne r-xdata
add esp 0xfffffff4
push edx
call sub_4105ac
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ esi ] 0x0
add esp 0xfffffffc
mov ecx [ ebp - 0x27c ]
push ecx
push 0x0
push ebx
mov edx [ ebp - 0x280 ]
call edx
mov edx eax
add esp 0x10
mov ecx [ ebp - 0x270 ]
test cl 0x10
jne r-xdata
mov edx [ ebp - 0x270 ]
test dl 0x8
jne r-xdata
mov eax [ ebp - 0x270 ]
test ah 0x2
je r-xdata
mov [ ebp - 0x27c ] 0x8
or [ ebp - 0x26f ] 0x1
mov ecx edi
mov [ esi ] cl
inc esi
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
lea ecx [ eax + 0x1 ]
mov [ edx + 0x4 ] ecx
mov eax ecx
cmp eax [ edx + 0x8 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
and al 0xbf
mov [ ebp - 0x270 ] eax
jmp r-xdata
lea eax [ ebp - 0x25f ]
cmp esi eax
jne r-xdata
add [ ebp + 0x10 ] 0x4
mov ecx [ ebp + 0x10 ]
mov eax [ ecx - 0x4 ]
fstp [ eax ]
add [ ebp + 0x10 ] 0x4
mov edx [ ebp + 0x10 ]
mov eax [ edx - 0x4 ]
fstp [ eax ]
jmp r-xdata
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
push eax
push edi
call sub_415f64
add esp 0x10
cmp edi 0x45
je r-xdata
add esp 0xfffffff8
mov edx [ ebp + 0x8 ]
push edx
dec esi
movzx eax [ esi ]
push eax
call sub_415f64
add esp 0x10
cmp esi ebx
ja r-xdata
mov edx edi
mov [ esi ] dl
inc esi
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
lea edx [ eax + 0x1 ]
mov [ ecx + 0x4 ] edx
mov eax edx
cmp eax [ ecx + 0x8 ]
jb r-xdata
and ecx 0xffffffbf
mov [ ebp - 0x270 ] ecx
jmp r-xdata
and eax 0xfffffebf
mov [ ebp - 0x270 ] eax
jmp r-xdata
and [ ebp - 0x26f ] 0xfc
or [ ebp - 0x270 ] 0xc0
cmp [ edx + ebp - 0x100 ] 0x0
je r-xdata
cmp esi edi
je r-xdata
cmp [ eax + ebp - 0x100 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov eax [ _pctype@IAT ]
mov eax [ eax ]
test [ eax + edx * 2 ] 0x8
jne r-xdata
inc [ ebp - 0x284 ]
jmp r-xdata
mov eax [ _pctype@IAT ]
mov eax [ eax ]
test [ eax + edx * 2 ] 0x8
jne r-xdata
inc [ ebp - 0x284 ]
jmp r-xdata
add [ ebp + 0x10 ] 0x4
mov ecx [ ebp + 0x10 ]
mov eax [ ecx - 0x4 ]
mov [ eax ] edx
jmp r-xdata
mov eax [ ebp - 0x270 ]
test al 0x4
je r-xdata
and [ ebp - 0x270 ] 0xfffffe3f
jmp r-xdata
and eax 0xfffffd3f
mov [ ebp - 0x270 ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
movzx eax [ eax ]
cmp eax 0xffffffff
jne r-xdata
add esp 0xfffffff4
push edx
call sub_4105ac
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x27c ] 0x10
and dh 0xfe
mov [ ebp - 0x270 ] edx
inc [ ebp - 0x274 ]
add esp 0xfffffff8
mov ecx [ ebp + 0x8 ]
push ecx
push edi
call sub_415f64
dec esi
movzx edi [ esi ]
add esp 0x10
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
movzx eax [ eax ]
cmp eax 0xffffffff
jne r-xdata
add esp 0xfffffff4
push ecx
call sub_4105ac
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov al [ eax ]
mov [ esi ] al
mov ecx [ ebp + 0x8 ]
inc [ ecx + 0x4 ]
inc esi
dec [ ebp - 0x26c ]
jne r-xdata
inc [ ebp - 0x284 ]
jmp r-xdata
inc ebx
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
dec [ ebp - 0x26c ]
jne r-xdata
inc [ ebp - 0x284 ]
jmp r-xdata
mov al [ ecx ]
mov [ esi ] al
mov edx [ ebp + 0x8 ]
inc [ edx + 0x4 ]
inc esi
dec [ ebp - 0x26c ]
jne r-xdata
inc ebx
inc ecx
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] ecx
dec [ ebp - 0x26c ]
jne r-xdata
mov eax [ ebp - 0x270 ]
add [ ebp + 0x10 ] 0x4
mov ecx [ ebp + 0x10 ]
mov eax [ ecx - 0x4 ]
mov [ eax ] dx
jmp r-xdata
dec [ ebp - 0x26c ]
jne r-xdata
inc [ ebp - 0x284 ]
jmp r-xdata
dec [ ebp - 0x26c ]
jne r-xdata
inc [ ebp - 0x284 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
cmp [ ecx + 0x4 ] eax
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
cmp [ ecx + 0x4 ] eax
jb r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
cmp [ edx + 0x4 ] eax
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
movzx edi [ eax ]
lea eax [ edi - 0x2b ]
cmp eax 0x4d
ja r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
movzx edi [ eax ]
lea eax [ edi - 0x2b ]
cmp eax 0x3a
ja r-xdata
sub_415ea8
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov ebx [ ebp + 0xc ]
movzx ecx [ ebx ]
inc ebx
cmp ecx 0x5e
jne r-xdata
xor esi esi
mov esi 0x1
movzx ecx [ ebx ]
inc ebx
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x4 ]
mov [ edi ] al
dec edi
mov [ ebp - 0x4 ] edi
dec edx
jns r-xdata
test ecx ecx
jne r-xdata
mov edx 0xff
mov eax [ ebp + 0x8 ]
add eax 0xff
mov [ ebp - 0x4 ] eax
mov esi esi
mov eax 0x1
sub eax esi
mov esi eax
lea esi [ esi ]
lea eax [ ebx - 0x1 ]
jmp r-xdata
movzx edx [ ebx ]
cmp edx 0x5d
je r-xdata
jg r-xdata
pop ebx
pop esi
pop edi
leave
retn
mov ecx 0x2d
jmp r-xdata
cmp edx ecx
jge r-xdata
cmp edx 0x5d
je r-xdata
test edx edx
je r-xdata
mov eax esi
mov edx [ ebp + 0x8 ]
mov [ ecx + edx ] al
inc ebx
lea esi [ esi ]
mov eax ebx
jmp r-xdata
jmp r-xdata
lea eax [ ebx - 0x1 ]
jmp r-xdata
jmp r-xdata
inc ecx
mov eax esi
mov edi [ ebp + 0x8 ]
mov [ ecx + edi ] al
cmp ecx edx
jl r-xdata
jmp r-xdata
mov ecx edx
jmp r-xdata
movzx edx [ ebx ]
inc ebx
cmp edx 0x2d
je r-xdata
sub_415f64
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
je r-xdata
leave
retn
add esp 0xfffffff8
and eax 0xff
push eax
push [ ebp + 0xc ]
call sub_410ad4
sub_415f94
push ebp
mov ebp esp
sub esp 0x7c
push edi
push esi
push ebx
call sub_416270
mov [ ebp - 0x68 ] eax
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x68 ]
mov [ eax + 0x4 ] edx
add esp 0xfffffff4
mov ecx [ ebp + 0x8 ]
push ecx
call sub_41774c
mov edx eax
mov ecx [ ebp - 0x68 ]
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov eax edx
jmp r-xdata
lea esp [ ebp - 0x88 ]
pop ebx
pop esi
pop edi
leave
retn
sub_4160b0
push ebp
mov ebp esp
sub esp 0x7c
push edi
push esi
push ebx
call sub_416270
mov [ ebp - 0x64 ] eax
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x64 ]
mov [ eax + 0x4 ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
jmp r-xdata
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call free
lea esp [ ebp - 0x88 ]
pop ebx
pop esi
pop edi
leave
retn
sub_4161a4
push ecx
mov ecx esp
add ecx 0x8
sub ecx eax
or [ ecx ] 0x0
mov eax esp
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
jmp eax
sub ecx 0x1000
or [ ecx ] 0x0
sub eax 0x1000
jmp r-xdata
cmp eax 0x1000
jb r-xdata
sub_4161f0
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call strcmp
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
xor eax eax
jmp r-xdata
leave
retn
sub_41621c
push ebp
mov ebp esp
sub esp 0x10
push edi
push ebx
add esp 0xfffffff4
push 0x18
call malloc
mov ebx eax
add esp 0x10
test ebx ebx
jne r-xdata
mov edi ebx
xor eax eax
cld
mov ecx 0x6
[ edi ]
lea eax [ ebx + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
lea esp [ ebp - 0x18 ]
pop ebx
pop edi
leave
retn
call sub_4161e0
sub_416294
push ebp
mov ebp esp
sub esp 0x8
call TlsAlloc
cmp eax 0xffffffff
je r-xdata
call GetLastError
mov [ rw-data ] eax
add esp 0xfffffff8
push sub_416258
push eax
call sub_41a86c
jmp r-xdata
mov [ rw-data ] sub_416368
mov [ rw-data ] sub_4163b4
jmp r-xdata
test eax eax
jne r-xdata
leave
retn
sub_4162e0
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] sub_416368
mov eax rw-data
test eax eax
je r-xdata
mov eax sub_416294
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] sub_4162e0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InterlockedIncrement
add esp 0xc
test eax eax
jne r-xdata
mov eax [ rw-data ]
call eax
leave
retn
cmp [ rw-data ] 0x0
je r-xdata
call sub_416294
mov [ rw-data ] 0x1
jmp r-xdata
add esp 0xfffffff4
push 0x0
call Sleep
add esp 0xc
sub_416368
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
mov [ rw-data ] 0x1
mov eax rw-data
mov [ rw-data ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0xc ] 0x0
mov [ rw-data ] rw-data
sub_4163b4
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov ebx [ rw-data ]
call GetLastError
mov esi eax
add esp 0xfffffff4
push ebx
call TlsGetValue
mov ebx eax
push esi
call SetLastError
add esp 0xc
test ebx ebx
jne r-xdata
mov eax ebx
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
call sub_41621c
mov ebx eax
add esp 0xfffffff8
push ebx
push [ rw-data ]
call TlsSetValue
add esp 0x8
test eax eax
jne r-xdata
xor eax eax
call GetLastError
jmp r-xdata
call sub_4161e0
test eax eax
je r-xdata
sub_416430
push ebp
mov ebp esp
sub esp 0x65c
push edi
push esi
push ebx
mov eax [ rw-data ]
call eax
mov [ ebp - 0x644 ] eax
add eax 0x4
mov [ ebp - 0x648 ] eax
mov edx [ ebp - 0x644 ]
mov eax [ edx + 0x4 ]
lea ebx [ eax + 0x4 ]
mov [ ebp - 0x64c ] ebx
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x644 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x640 ]
mov [ ebp - 0x650 ] eax
mov [ eax + 0x4 ] 0x0
mov eax [ edx + 0x4 ]
mov [ ebp - 0x640 ] eax
lea eax [ ebp - 0x638 ]
mov [ ebp - 0x638 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
jmp r-xdata
call sub_4161e0
mov edx [ ebp - 0x648 ]
mov eax [ edx ]
cmp [ eax ] 0x0
jne r-xdata
mov ebx [ ebp - 0x650 ]
mov edx [ ebp - 0x648 ]
mov [ edx ] ebx
mov eax [ ebp - 0x64c ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ ebp - 0x648 ]
mov eax [ ebx ]
lea ecx [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebx ] edx
mov ebp [ eax + 0x8 ]
mov esp [ ecx + 0x8 ]
jmp [ ecx + 0x4 ]
mov edx [ ebp - 0x650 ]
mov eax [ edx ]
mov ebx [ ebp - 0x648 ]
mov [ ebx ] eax
jmp r-xdata
lea esi [ esi ]
mov edx [ ebp - 0x64c ]
mov eax [ edx ]
mov ecx [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ eax ]
mov ebx [ ebp - 0x64c ]
mov [ ebx ] eax
add esp 0xfffffff8
push 0x2
push edx
call ecx
add esp 0x10
cmp [ ebx ] 0x0
jne r-xdata
sub_41653c
push ebp
mov ebp esp
sub esp 0x65c
push edi
push esi
push ebx
mov eax [ rw-data ]
call eax
mov edx eax
lea eax [ edx + 0x4 ]
mov [ ebp - 0x644 ] eax
mov eax [ edx + 0x4 ]
lea ecx [ eax + 0x4 ]
mov [ ebp - 0x648 ] ecx
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ebx [ ebp - 0x644 ]
mov eax [ ebx ]
mov eax [ eax ]
mov [ ebx ] eax
call sub_416430
lea esi [ esi ]
dec ecx
outsb
je r-xdata
lea ebx [ ebp - 0x640 ]
mov [ ebp - 0x64c ] ebx
mov [ ebx + 0x4 ] 0x0
mov eax [ edx + 0x4 ]
mov [ ebp - 0x640 ] eax
lea eax [ ebp - 0x638 ]
mov [ ebp - 0x638 ] ebp
mov [ eax + 0x4 ] sub_4165a4
mov [ eax + 0x8 ] esp
jmp sub_4165a8
add [ edx + 0x2 ] ch
jb r-xdata
retn
popad
insb
and [ ebx + 0x6f ] al
insd
jo r-xdata
add [ ebp - 0x77 ] dl
in eax 0x8b
insb
jb r-xdata
jbe r-xdata
inc edx
jne r-xdata
push ebp
mov ebp esp
sub esp 0x8
call sub_416280
mov eax [ eax ]
mov edx [ eax ]
test edx edx
je r-xdata
inc ebp
or [ edi ] cl
mov edi 0xc3c90640
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movsx eax [ eax + 0x4 ]
cmp ah [ eax ]
dec esi
outsd
and [ edx + 0x75 ] dh
outsb
je r-xdata
call _write
xor eax eax
add esp 0xfffffffc
push 0x30
push r-xdata
push 0x2
add esp 0xfffffffc
push 0x0
inc ebp
or [ edi ] cl
mov edi 0xc3c90440
insd
and [ gs : ecx + edi * 2 + 0x70 ] dh
and [ gs : ebp + 0x61 ] ch
je r-xdata
leave
leave
retn
push [ ebp + 0x8 ]
push eax
call edx
test eax eax
setne al
and eax 0xff
jmp r-xdata
push 0xa2e7265
add [ ebp - 0x76aaff8a ] cl
in eax 0x83
in al dx
or al ch
sub eax 0x8bfffffc
add [ ebx + 0x74d28510 ] cl
sbb [ ebx + 0x6afcc4 ] eax
sub_4165a4
jmp r-xdata
call sub_4161e0
mov ebx [ ebp - 0x644 ]
mov eax [ ebx ]
mov eax [ eax ]
mov [ ebx ] eax
call sub_416430
lea esi [ esi ]
dec ecx
outsb
je r-xdata
add [ edx + 0x2 ] ch
jb r-xdata
retn
popad
insb
and [ ebx + 0x6f ] al
insd
jo r-xdata
add [ ebp - 0x77 ] dl
in eax 0x8b
insb
jb r-xdata
jbe r-xdata
inc edx
jne r-xdata
push ebp
mov ebp esp
sub esp 0x8
call sub_416280
mov eax [ eax ]
mov edx [ eax ]
test edx edx
je r-xdata
inc ebp
or [ edi ] cl
mov edi 0xc3c90640
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movsx eax [ eax + 0x4 ]
cmp ah [ eax ]
dec esi
outsd
and [ edx + 0x75 ] dh
outsb
je r-xdata
call _write
xor eax eax
add esp 0xfffffffc
push 0x30
push r-xdata
push 0x2
add esp 0xfffffffc
push 0x0
inc ebp
or [ edi ] cl
mov edi 0xc3c90440
insd
and [ gs : ecx + edi * 2 + 0x70 ] dh
and [ gs : ebp + 0x61 ] ch
je r-xdata
leave
leave
retn
push [ ebp + 0x8 ]
push eax
call edx
test eax eax
setne al
and eax 0xff
jmp r-xdata
push 0xa2e7265
add [ ebp - 0x76aaff8a ] cl
in eax 0x83
in al dx
or al ch
sub eax 0x8bfffffc
add [ ebx + 0x74d28510 ] cl
sbb [ ebx + 0x6afcc4 ] eax
sub_4165a8
mov edx [ ebp - 0x64c ]
mov eax [ ebp - 0x644 ]
mov [ eax ] edx
mov ecx [ ebp - 0x648 ]
cmp [ ecx ] 0x0
je r-xdata
mov edx [ ebp - 0x64c ]
mov eax [ edx ]
mov ecx [ ebp - 0x644 ]
mov [ ecx ] eax
jmp r-xdata
lea esi [ esi ]
mov ebx [ ebp - 0x644 ]
mov eax [ ebx ]
mov eax [ eax ]
mov [ ebx ] eax
call sub_416430
lea esi [ esi ]
dec ecx
outsb
je r-xdata
mov ebx [ ebp - 0x648 ]
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebx ] eax
add esp 0xfffffff8
push 0x2
push edx
call ecx
add esp 0x10
cmp [ ebx ] 0x0
jne r-xdata
add [ edx + 0x2 ] ch
jb r-xdata
retn
popad
insb
and [ ebx + 0x6f ] al
insd
jo r-xdata
add [ ebp - 0x77 ] dl
in eax 0x8b
insb
jb r-xdata
jbe r-xdata
inc edx
jne r-xdata
push ebp
mov ebp esp
sub esp 0x8
call sub_416280
mov eax [ eax ]
mov edx [ eax ]
test edx edx
je r-xdata
inc ebp
or [ edi ] cl
mov edi 0xc3c90640
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movsx eax [ eax + 0x4 ]
cmp ah [ eax ]
dec esi
outsd
and [ edx + 0x75 ] dh
outsb
je r-xdata
call _write
xor eax eax
add esp 0xfffffffc
push 0x30
push r-xdata
push 0x2
add esp 0xfffffffc
push 0x0
inc ebp
or [ edi ] cl
mov edi 0xc3c90440
insd
and [ gs : ecx + edi * 2 + 0x70 ] dh
and [ gs : ebp + 0x61 ] ch
je r-xdata
leave
leave
retn
push [ ebp + 0x8 ]
push eax
call edx
test eax eax
setne al
and eax 0xff
jmp r-xdata
push 0xa2e7265
add [ ebp - 0x76aaff8a ] cl
in eax 0x83
in al dx
or al ch
sub eax 0x8bfffffc
add [ ebx + 0x74d28510 ] cl
sbb [ ebx + 0x6afcc4 ] eax
sub_4166a4
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
xor eax eax
mov edi 0xffffffff
mov [ ebp - 0x4 ] 0x0
cmp [ ebx ] 0xffffffff
je r-xdata
cmp edi 0xffffffff
je r-xdata
xor esi esi
nop
lea eax [ edi + edi * 2 ]
mov eax [ ebx + eax * 4 + 0x8 ]
jmp r-xdata
test edi edi
jl r-xdata
mov edx [ ebx + esi + 0x4 ]
cmp edx [ ebp + 0x8 ]
jbe r-xdata
pop ebx
pop esi
pop edi
leave
retn
add esi 0xc
inc [ ebp - 0x4 ]
cmp [ ebx + esi ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ ebx + esi ] eax
ja r-xdata
cmp edi 0xffffffff
je r-xdata
mov ecx [ ebx + esi ]
cmp ecx [ ebp + 0x8 ]
ja r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
lea eax [ edi + edi * 2 ]
shl eax 0x2
cmp edx [ ebx + eax + 0x4 ]
ja r-xdata
cmp ecx [ ebx + eax ]
jb r-xdata
sub_416724
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x18 ]
mov [ eax ] 0x1
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
xor edx edx
mov ebx [ ebp + 0xc ]
add ebx 0x8
cmp [ ebp + 0x14 ] 0x0
je r-xdata
dec [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
sub edx ebx
sar edx 0x4
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
dec eax
mov [ ebp + 0x8 ] eax
mov eax edx
shl eax 0x4
cmp [ ebx + eax ] 0xffffffff
je r-xdata
mov edi esi
inc edx
jmp r-xdata
add edi 0x10
mov esi edi
cmp [ ebx + edi ] 0xffffffff
jne r-xdata
cmp [ ebx + esi + 0x4 ] edx
jbe r-xdata
mov esi edx
shl esi 0x4
cmp [ ebx + esi ] 0xffffffff
je r-xdata
mov edx [ ebp + 0x8 ]
cmp [ ebx + edi ] edx
ja r-xdata
mov edx [ ebx + esi + 0xc ]
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx ]
test eax eax
je r-xdata
mov esi [ ebx + esi + 0x8 ]
mov [ ebp - 0x4 ] esi
add esp 0xfffffffc
mov ecx [ ebp + 0xc ]
push ecx
push edx
mov edx [ ebp + 0x10 ]
push edx
call eax
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ecx ] 0x0
jmp r-xdata
mov esi [ ebx + esi + 0x8 ]
mov [ ebp - 0x4 ] esi
sub_4167f8
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov edx [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
lea eax [ ebx + 0x5c ]
cmp [ edx + eax ] 0x2
jne r-xdata
cmp [ edx + ebx + 0x5c ] 0x1
jne r-xdata
lea ecx [ ebx + 0x10 ]
lea esi [ esi ]
call abort
lea eax [ ebx + 0x10 ]
mov eax [ eax + edx * 4 ]
add eax [ ebx ]
jmp r-xdata
mov edx [ ecx + edx * 4 ]
cmp [ edx + eax ] 0x2
je r-xdata
pop ebx
leave
retn
sub_41683c
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
add esp 0xfffffffc
push 0x0
push [ ebp + 0xc ]
push ebx
call sub_4167f8
mov edi eax
add esp 0xfffffffc
push 0x0
push esi
push ebx
call sub_4167f8
add esp 0x20
add ebx 0xfffffff4
mov edx 0x4
cmp ebx 0x7
ja r-xdata
add esp 0xfffffffc
push edx
push edi
push eax
call memcpy
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
mov edx 0xc
sub_416890
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov esi [ ebp + 0xc ]
add esp 0xfffffff8
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_418eac
mov ebx eax
add esp 0x10
test ebx ebx
jne r-xdata
movzx eax [ ebx + 0x58 ]
cmp [ eax + esi + 0x5c ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
add esp 0xfffffffc
push 0x0
push esi
push eax
call sub_4167f8
mov eax [ eax ]
jmp r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
mov [ ebx ] eax
mov eax [ ebx + 0x8 ]
add [ ebx ] eax
mov eax ebx
sub_4168f0
push ebp
mov ebp esp
sub esp 0x19c
push edi
push esi
push ebx
lea ebx [ ebp - 0x70 ]
lea eax [ ebp - 0xe0 ]
mov [ ebp - 0x158 ] eax
mov edx [ ebp + 0xc ]
mov [ ebp - 0x15c ] edx
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x16c ] 0x0
mov [ ebp - 0x174 ] 0x0
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov [ ebp - 0x17c ] ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
setne al
movzx edx al
mov [ ebp - 0x170 ] edx
mov edi ebx
mov esi [ ebp + 0x10 ]
cld
mov ecx 0x1c
[ edi ] [ esi ]
mov [ ebp - 0x160 ] 0x0
jmp r-xdata
mov [ ebp - 0x180 ] ebx
add esp 0xfffffffc
mov eax [ ebp - 0x158 ]
push eax
mov edx ebx
push edx
mov ecx [ ebp + 0xc ]
push ecx
call sub_416890
mov ebx eax
mov eax [ ebp - 0x180 ]
mov [ ebp - 0x158 ] eax
add esp 0x10
test ebx ebx
jne r-xdata
mov edx [ ebx + 0x4 ]
test edx edx
jne r-xdata
cmp [ ebp - 0x174 ] 0x0
je r-xdata
cmp [ edx ] 0xfffffffe
sete al
and eax 0xff
xor eax eax
jmp r-xdata
cmp [ ebp - 0x160 ] 0x0
jne r-xdata
lea ebx [ ebp - 0x150 ]
mov edx [ ebp - 0x164 ]
mov [ ebp - 0x160 ] edx
mov ecx [ ebp - 0x168 ]
mov [ ebp + 0xc ] ecx
cmp [ ebp - 0x16c ] 0x0
je r-xdata
test eax eax
je r-xdata
mov [ ebp - 0x170 ] 0x0
add esp 0xfffffff4
lea eax [ ebp - 0x154 ]
push eax
push 0x1
mov eax [ ebp - 0x17c ]
push eax
push edx
mov edx [ ebp + 0x8 ]
push [ edx + 0xc ]
call sub_416724
mov [ ebp - 0x160 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0xc ] 0x0
add esp 0x20
jmp r-xdata
cmp [ ebp - 0x170 ] 0x0
je r-xdata
mov edx [ ebp - 0x160 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ebx + 0xc ]
mov [ ebp - 0x178 ] ecx
mov eax [ ebp - 0x15c ]
cmp [ ebp + 0xc ] eax
jne r-xdata
call sub_4161e0
call sub_4168e8
add esp 0xfffffff8
push edx
mov ecx [ ebp + 0xc ]
push ecx
call sub_4166a4
mov [ ebp - 0x160 ] eax
add esp 0x10
add esp 0xfffffff4
lea eax [ ebp - 0x154 ]
push eax
push 0x0
mov eax [ ebp - 0x17c ]
push eax
push edx
mov edx [ ebp + 0xc ]
push edx
call sub_416724
mov [ ebp - 0x160 ] eax
add esp 0x20
jmp r-xdata
cmp [ ebp - 0x160 ] 0x0
je r-xdata
mov edx [ ebp + 0xc ]
mov [ ebp - 0x184 ] edx
mov ecx [ ebp - 0x15c ]
mov [ ebp + 0xc ] ecx
mov edi ebx
mov esi [ ebp + 0x10 ]
cld
mov ecx 0x1c
[ edi ] [ esi ]
mov eax [ ebp - 0x184 ]
cmp [ ebp + 0xc ] eax
je r-xdata
mov ebx [ ebp + 0x10 ]
jmp r-xdata
movzx eax [ ebx + 0x5a ]
add esp 0xfffffffc
mov ecx [ ebp - 0x180 ]
push ecx
push ebx
push eax
call sub_4167f8
add esp 0x10
mov eax [ eax ]
dec eax
mov [ ebp + 0xc ] eax
cmp [ ebp - 0x154 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx ]
mov edx [ ebx ]
sub edx eax
mov eax [ ebp + 0x14 ]
add edx [ ebp - 0x178 ]
mov [ eax ] edx
mov eax [ ebp - 0x160 ]
lea esp [ ebp - 0x1a8 ]
pop ebx
pop esi
pop edi
leave
retn
mov esi esi
mov [ ebp - 0x16c ] 0x0
jmp r-xdata
cmp [ ebp - 0x174 ] 0x0
jne r-xdata
inc esi
cmp esi 0x10
jle r-xdata
mov edx [ ebp - 0x188 ]
cmp [ esi + edx ] 0x0
je r-xdata
lea edi [ ebp - 0x150 ]
mov esi ebx
cld
mov ecx 0x1c
[ edi ] [ esi ]
mov eax [ ebp - 0x160 ]
mov [ ebp - 0x164 ] eax
mov edx [ ebp + 0xc ]
mov [ ebp - 0x168 ] edx
mov [ ebp - 0x174 ] 0x1
mov [ ebp - 0x16c ] 0x1
movzx eax [ ebx + 0x5a ]
cmp esi eax
je r-xdata
movzx eax [ ebx + 0x5a ]
add esp 0xfffffffc
push edi
push ebx
push eax
call sub_4167f8
add esp 0x10
mov eax [ eax ]
dec eax
mov [ ebp + 0xc ] eax
mov edx [ ebp - 0x184 ]
cmp eax edx
jne r-xdata
add esp 0xfffffffc
mov ecx [ ebp + 0x10 ]
push ecx
push ebx
push esi
call sub_41683c
add esp 0x10
mov edi ebx
add esp 0xfffffffc
mov edx [ ebp - 0x158 ]
push edx
push edi
mov ecx [ ebp + 0xc ]
push ecx
call sub_416890
mov ebx eax
mov [ ebp - 0x158 ] edi
xor esi esi
add esp 0x10
lea eax [ ebx + 0x5c ]
mov [ ebp - 0x188 ] eax
sub_416bfc
push ebp
mov ebp esp
sub esp 0x8c
push edi
push esi
push ebx
mov eax [ rw-data ]
call eax
mov [ ebp - 0x78 ] eax
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x7c ] eax
lea edx [ ebp - 0x74 ]
mov [ ebp - 0x80 ] edx
mov eax [ ebp - 0x78 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
add esp 0xfffffff8
mov edx [ ebp - 0x7c ]
push edx
push r-xdata
call sub_418eac
mov [ ebp - 0x7c ] eax
add esp 0x10
test eax eax
jne r-xdata
call sub_4161e0
lea edx [ ebp + 0x8 ]
mov eax [ ebp - 0x7c ]
mov [ eax ] edx
mov eax [ ebp + 0x4 ]
dec eax
mov edx [ ebp - 0x80 ]
push edx
mov edx [ ebp - 0x7c ]
push edx
push eax
mov eax [ ebp - 0x78 ]
push eax
call sub_4168f0
mov edx eax
mov ecx [ ebp - 0x74 ]
mov eax [ ebp - 0x78 ]
mov [ ebp + 0x4 ] sub_416c7c
jmp r-xdata
call sub_4161e0
lea esp [ ebp - 0x98 ]
pop ebx
pop esi
pop edi
leave
retn
sub_416c8c
push ebp
mov ebp esp
sub esp 0x8c
push edi
push esi
push ebx
mov eax [ rw-data ]
call eax
mov [ ebp - 0x78 ] eax
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x7c ] eax
mov edx [ ebp - 0x78 ]
cmp [ edx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x78 ]
mov [ edx + 0xc ] eax
lea eax [ ebp - 0x74 ]
mov [ ebp - 0x80 ] eax
add esp 0xfffffff8
mov edx [ ebp - 0x7c ]
push edx
push r-xdata
call sub_418eac
mov [ ebp - 0x7c ] eax
add esp 0x10
test eax eax
jne r-xdata
call sub_4161e0
lea edx [ ebp + 0x8 ]
mov eax [ ebp - 0x7c ]
mov [ eax ] edx
mov eax [ ebp + 0x4 ]
dec eax
mov edx [ ebp - 0x80 ]
push edx
mov edx [ ebp - 0x7c ]
push edx
push eax
mov eax [ ebp - 0x78 ]
push eax
call sub_4168f0
mov edx eax
mov ecx [ ebp - 0x74 ]
mov eax [ ebp - 0x78 ]
mov [ ebp + 0x4 ] sub_416d14
jmp r-xdata
call sub_4161e0
lea esp [ ebp - 0x98 ]
pop ebx
pop esi
pop edi
leave
retn
sub_416e34
push ebp
mov ebp esp
sub esp 0x4c
push edi
push esi
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x14 ] ecx
mov edi [ ebp - 0x38 ]
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x1c ] edx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x3c ] ecx
test eax eax
jne r-xdata
mov eax [ ebp - 0x3c ]
cmp [ ebp - 0x18 ] eax
jbe r-xdata
cmp edi ecx
jbe r-xdata
bsr edx [ ebp - 0x18 ]
xor edx 0x1f
mov [ ebp - 0x20 ] edx
jne r-xdata
mov ebx [ ebp - 0x10 ]
mov esi eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] esi
jmp r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov eax edx
mov edx ecx
div edi
jmp r-xdata
mov [ ebp - 0x24 ] 0x20
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x24 ] eax
mov ecx eax
shl [ ebp - 0x18 ] cl
mov eax edi
mov ecx [ ebp - 0x24 ]
shr eax cl
or [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x20 ]
shl edi cl
mov edx [ ebp - 0x3c ]
mov ecx [ ebp - 0x24 ]
shr edx cl
mov ecx [ ebp - 0x20 ]
shl [ ebp - 0x3c ] cl
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
shr eax cl
or [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x20 ]
shl [ ebp - 0x1c ] cl
mov eax [ ebp - 0x3c ]
div [ ebp - 0x18 ]
mov [ ebp - 0x3c ] edx
mul edi
mov [ ebp - 0x38 ] eax
cmp edx [ ebp - 0x3c ]
ja r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ebp - 0x3c ] ecx
ja r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x18 ]
div edi
mov [ ebp - 0x3c ] edx
mov eax [ ebp - 0x1c ]
div edi
mov eax 0x1
xor edx edx
div edi
mov edi eax
mov [ ebp - 0x1c ] edx
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx [ ebp - 0x38 ]
sub ecx edi
sbb edx [ ebp - 0x18 ]
mov [ ebp - 0x38 ] ecx
jne r-xdata
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x1c ]
sub eax edi
sbb edx [ ebp - 0x18 ]
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] edi
jb r-xdata
mov ebx [ ebp - 0x1c ]
xor esi esi
jmp r-xdata
mov ecx [ ebp - 0x3c ]
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x38 ]
sbb ecx edx
mov [ ebp - 0x3c ] ecx
mov edx ecx
mov ecx [ ebp - 0x24 ]
shl edx cl
mov ecx [ ebp - 0x20 ]
shr eax cl
mov ebx eax
or ebx edx
mov esi [ ebp - 0x3c ]
shr esi cl
mov eax [ ebp - 0x14 ]
mov [ eax ] ebx
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x38 ] eax
jbe r-xdata
mov ebx [ ebp - 0x1c ]
mov esi [ ebp - 0x3c ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea esi [ esi ]
mov ecx [ ebp - 0x14 ]
mov [ ecx ] ebx
mov [ ecx + 0x4 ] esi
jmp r-xdata
sub_4170c0
push ebp
mov ebp esp
sub esp 0x2c
push edi
push esi
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ ebp + 0x14 ]
mov esi ecx
mov edi ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] edx
test edi edi
jne r-xdata
cmp edi [ ebp - 0x14 ]
jbe r-xdata
cmp esi edx
jbe r-xdata
bsr ebx edi
xor ebx 0x1f
jne r-xdata
xor edi edi
jmp r-xdata
test ecx ecx
jne r-xdata
div esi
mov edi eax
jmp r-xdata
mov [ ebp - 0x8 ] 0x20
sub [ ebp - 0x8 ] ebx
mov ecx ebx
shl edi cl
mov [ ebp - 0x18 ] edi
mov edi esi
mov ecx [ ebp - 0x8 ]
shr edi cl
or [ ebp - 0x18 ] edi
mov ecx ebx
shl esi cl
mov edi [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
shr edi cl
mov eax [ ebp - 0x14 ]
mov ecx ebx
shl eax cl
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
shr edx cl
or eax edx
mov [ ebp - 0x1c ] eax
mov ecx ebx
shl [ ebp - 0x4 ] cl
mov edx edi
div [ ebp - 0x18 ]
mov edi eax
mov ecx edx
mul esi
mov ebx eax
cmp edx ecx
ja r-xdata
cmp [ ebp - 0x14 ] edi
ja r-xdata
xor ecx ecx
mov eax [ ebp - 0x14 ]
mov edx edi
div esi
mov ecx eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x4 ]
div esi
mov edi eax
jmp r-xdata
mov ecx 0x1
mov eax ecx
xor edx edx
div esi
mov esi eax
dec edi
jne r-xdata
mov edi 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop ebx
pop esi
pop edi
leave
retn
cmp ebx [ ebp - 0x4 ]
jbe r-xdata
mov esi esi
sub_4171bc
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] rw-data
test al 0x1
je r-xdata
leave
retn
add esp 0xfffffff4
push edx
call sub_4160b0
sub_4171e0
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov bl 0x0
cmp eax edx
je r-xdata
mov bl 0x1
add esp 0xfffffff8
push [ eax ]
push [ edx ]
call strcmp
test eax eax
jne r-xdata
mov al bl
mov ebx [ ebp - 0x18 ]
leave
retn
sub_41720c
push ebp
mov ebp esp
sub esp 0xf4
push ebx
mov ebx [ ebp + 0x8 ]
call sub_416270
mov edx eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ebx ebx
je r-xdata
pop ebx
leave
retn
mov eax edx
mov [ ebx + 0x4 ] rw-data
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] 0x0
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x74 ] r-xdata
mov [ ebp - 0x70 ] esp
lea eax [ ebp - 0x80 ]
mov [ edx + 0x4 ] eax
mov [ ebx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0xbc ] 0x0
lea eax [ ebp - 0x60 ]
mov [ ebp - 0xb8 ] eax
mov [ ebp - 0xb4 ] r-xdata
mov [ ebp - 0xb0 ] esp
lea eax [ ebp - 0xc0 ]
mov [ edx + 0x4 ] eax
mov [ ebx + 0x4 ] rw-data
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0xc ] eax
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_4172e4
push ebp
mov ebp esp
sub esp 0xf4
push ebx
mov ebx [ ebp + 0x8 ]
call sub_416270
mov edx eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ebx ebx
je r-xdata
pop ebx
leave
retn
mov eax edx
mov [ ebx + 0x4 ] rw-data
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] 0x0
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x74 ] r-xdata
mov [ ebp - 0x70 ] esp
lea eax [ ebp - 0x80 ]
mov [ edx + 0x4 ] eax
mov [ ebx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0xbc ] 0x0
lea eax [ ebp - 0x60 ]
mov [ ebp - 0xb8 ] eax
mov [ ebp - 0xb4 ] r-xdata
mov [ ebp - 0xb0 ] esp
lea eax [ ebp - 0xc0 ]
mov [ edx + 0x4 ] eax
mov [ ebx + 0x4 ] rw-data
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_4173b4
push ebp
mov ebp esp
sub esp 0x74
push ebx
mov ebx [ ebp + 0x8 ]
call sub_416270
mov edx eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ebx ebx
je r-xdata
pop ebx
leave
retn
mov [ ebx + 0x4 ] rw-data
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ebx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_417430
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4171e0
xor edx edx
test al al
je r-xdata
mov eax edx
leave
retn
mov edx [ ebp + 0x14 ]
sub_417454
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
add esp 0xfffffff8
push edi
push esi
call sub_4171e0
add esp 0x10
test al al
jne r-xdata
mov eax ebx
add esp 0xfffffff8
mov edx [ esi + 0x8 ]
mov ecx [ edx + 0x4 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x10 ]
push edi
movsx eax [ ecx + 0x10 ]
add edx eax
push edx
mov eax [ ecx + 0x14 ]
call eax
jmp r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
sub_4174a8
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
add esp 0xfffffff8
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_4171e0
add esp 0x10
test al al
je r-xdata
mov [ ebp - 0x4 ] 0x0
xor edi edi
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0xc ]
jae r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ ebp + 0x10 ] 0x0
je r-xdata
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ ecx + edi * 8 + 0x4 ]
and eax 0x1fffffff
mov ebx [ ebp + 0x14 ]
add ebx eax
test [ ecx + edi * 8 + 0x7 ] 0x20
je r-xdata
mov al [ ecx + edi * 8 + 0x7 ]
shr al 0x6
cmp al 0x1
jne r-xdata
add esp 0xfffffff8
mov eax [ ecx + edi * 8 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
movsx eax [ edx + 0x10 ]
add eax [ ecx + edi * 8 ]
push eax
mov eax [ edx + 0x14 ]
call eax
mov ebx eax
add esp 0x20
test ebx ebx
je r-xdata
mov ebx [ ebx ]
inc edi
mov edx [ ebp + 0x8 ]
cmp edi [ edx + 0xc ]
jb r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
add esp 0xfffffff8
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
push 0x1
mov eax [ ebp + 0x18 ]
push eax
movsx eax [ edx + 0x10 ]
add eax [ ebp + 0xc ]
push eax
mov eax [ edx + 0x14 ]
call eax
mov esi eax
add esp 0x20
add esp 0xfffffff8
mov eax [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
push 0x0
push 0x0
push ebx
push 0x1
mov eax [ ebp + 0x18 ]
push eax
movsx eax [ edx + 0x10 ]
add eax [ ebp + 0xc ]
push eax
mov eax [ edx + 0x14 ]
call eax
add esp 0x20
cmp esi eax
je r-xdata
cmp esi [ ebp + 0x1c ]
je r-xdata
cmp eax [ ebp + 0x1c ]
jne r-xdata
sub_41764c
push ebp
mov ebp esp
sub esp 0x7c
push edi
push esi
push ebx
call sub_416270
mov [ ebp - 0x64 ] eax
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x64 ]
mov [ eax + 0x4 ] edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x64 ]
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
jmp r-xdata
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call free
lea esp [ ebp - 0x88 ]
pop ebx
pop esi
pop edi
leave
retn
sub_41774c
push ebp
mov ebp esp
sub esp 0x10c
push edi
push esi
push ebx
call sub_416270
mov [ ebp - 0xe8 ] eax
mov [ ebp - 0xf4 ] eax
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0xe8 ]
mov [ eax + 0x4 ] edx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
add esp 0xfffffff4
mov ecx [ ebp + 0x8 ]
push ecx
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
call malloc
mov edx eax
add esp 0x10
test edx edx
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xe8 ]
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov eax edx
jmp r-xdata
call eax
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xe8 ]
mov edx [ eax + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] sub_41af9c
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x38 ] ecx
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0xf4 ]
mov [ ebp - 0x30 ] rw-data
mov edx eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] 0x0
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x54 ] r-xdata
mov [ ebp - 0x50 ] esp
lea eax [ ebp - 0x60 ]
mov [ edx + 0x4 ] eax
mov [ ebp - 0x30 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
add esp 0xfffffff4
push 0x4
call sub_417ab0
mov [ ebp - 0xec ] eax
mov edx [ ebp - 0xe8 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x9c ] 0x0
lea eax [ ebp - 0x98 ]
mov [ ebp - 0x98 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea ecx [ ebp - 0xa0 ]
mov [ edx + 0x4 ] ecx
add esp 0x10
mov edx [ ebp - 0xf4 ]
mov eax [ ebp - 0xec ]
mov [ eax ] rw-data
mov eax [ edx + 0x4 ]
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] 0x0
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x54 ] r-xdata
mov [ ebp - 0x50 ] esp
lea eax [ ebp - 0x60 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0xec ]
mov [ ecx ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov edx [ ebp - 0xe8 ]
mov eax [ edx + 0x4 ]
mov edx [ eax ]
mov ecx [ ebp - 0xe8 ]
mov [ ecx + 0x4 ] edx
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov [ ebp - 0x30 ] rw-data
add esp 0xfffffffc
push sub_41af9c
mov edx [ ebp - 0xec ]
mov eax [ edx ]
mov eax [ eax + 0x4 ]
call eax
push eax
mov ecx [ ebp - 0xec ]
push ecx
call sub_417b34
call sub_416430
mov esi esi
lea esp [ ebp - 0x118 ]
pop ebx
pop esi
pop edi
leave
retn
sub_417a18
push ebp
mov ebp esp
sub esp 0x8
mov eax [ rw-data ]
call eax
lea esi [ esi ]
push ebp
mov ebp esp
sub esp 0x8
call sub_417a18
nop
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ rw-data ] eax
mov eax edx
leave
retn
sub_417a64
push ebp
mov ebp esp
sub esp 0x8
mov eax [ rw-data ]
call eax
lea esi [ esi ]
push ebp
mov ebp esp
sub esp 0x8
call sub_416280
mov eax [ eax ]
add eax 0x8
leave
retn
sub_417ab0
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call malloc
add esp 0x10
test eax eax
jne r-xdata
leave
retn
call sub_417a18
lea esi [ esi ]
sub_417ae8
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp edx 0xffffffff
jne r-xdata
cmp [ eax + 0x4 ] 0x4
je r-xdata
call edx
add esp 0xfffffffc
push [ ebx + 0x20 ]
push [ ebx + 0xc ]
push eax
call sub_419158
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
mov [ ebx + 0x8 ] eax
sub_417b34
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
add esp 0xfffffff4
push 0x24
call sub_417ab0
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] esi
mov [ edi + 0x1c ] 0x0
mov [ edi + 0x14 ] 0x0
mov [ edi + 0x20 ] eax
mov [ edi ] sub_417ae8
mov [ edi + 0x4 ] 0x4
mov [ edi + 0x6 ] 0x1
call sub_416280
mov edx eax
mov eax [ edx ]
mov [ edi + 0x18 ] eax
mov [ edx ] edi
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
sub_417b94
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
call sub_416280
mov edx eax
mov eax [ ebx + 0x1c ]
lea ecx [ eax - 0x1 ]
mov [ ebx + 0x1c ] ecx
cmp eax 0x1
jne r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax [ edx ]
cmp ebx eax
jne r-xdata
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
je r-xdata
call sub_417a18
lea esi [ esi ]
mov ecx [ ebx + 0x18 ]
cmp eax ebx
je r-xdata
add esp 0xfffffff4
push [ ebx + 0xc ]
call sub_419574
add esp 0x10
test al al
jne r-xdata
add esp 0xfffffff8
push 0x2
push [ ebx + 0x20 ]
call eax
add esp 0x10
test eax eax
jne r-xdata
mov esi esi
add esp 0xfffffff4
push ebx
call sub_417ad4
add esp 0xfffffff4
push [ ebx + 0x20 ]
call sub_417ad4
add esp 0x10
mov [ edx ] ecx
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp eax ebx
jne r-xdata
mov eax [ edx ]
lea edx [ eax + 0x18 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
sub_417c4c
push ebp
mov ebp esp
sub esp 0x11c
push edi
push esi
push ebx
call sub_416270
mov [ ebp - 0xec ] eax
mov [ ebp - 0x104 ] eax
call sub_416280
mov eax [ eax ]
mov [ ebp - 0xe4 ] eax
mov [ ebp - 0xe8 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ ebp - 0xe8 ] eax
jl r-xdata
add esp 0xfffffffc
mov edx [ ebp - 0xe4 ]
push [ edx + 0x8 ]
push [ edx + 0xc ]
mov eax [ ebp - 0xe8 ]
mov edx [ ebp + 0xc ]
push [ edx + eax * 4 ]
call sub_419158
add esp 0x10
test eax eax
je r-xdata
mov edx [ ebp - 0xec ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
call sub_417a64
nop
call sub_417a98
mov [ ebp - 0xf0 ] eax
mov edx [ ebp - 0xec ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x38 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov edx [ ebp - 0xf0 ]
cmp [ ebp - 0xe4 ] edx
je r-xdata
inc [ ebp - 0xe8 ]
call sub_417c2c
call sub_416430
lea esi [ esi ]
call sub_41ddfc
mov [ ebp - 0xf8 ] eax
mov [ ebp - 0xfc ] 0x0
jmp r-xdata
mov [ ebp - 0xe4 ] edx
mov [ ebp - 0xf4 ] 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
cmp [ ebp - 0xfc ] edx
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ ebp - 0xf4 ] eax
jl r-xdata
add esp 0xfffffffc
mov eax [ ebp - 0xe4 ]
push [ eax + 0x8 ]
mov edx [ ebp - 0xf8 ]
push edx
mov eax [ ebp - 0xfc ]
mov edx [ ebp + 0xc ]
push [ edx + eax * 4 ]
call sub_419158
add esp 0x10
test eax eax
je r-xdata
call sub_417a18
mov esi esi
mov edx [ ebp - 0xec ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0xdc ] 0x0
lea eax [ ebp - 0xd8 ]
mov [ ebp - 0xd8 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0xe0 ]
mov [ edx + 0x4 ] eax
add esp 0xfffffff4
mov edx [ ebp - 0xf0 ]
push edx
call sub_417b94
mov edx [ ebp - 0xec ]
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
add esp 0x10
call sub_416430
lea esi [ esi ]
call sub_4161e0
lea esi [ esi ]
push ebp
mov ebp esp
sub esp 0x9c
push edi
push esi
push ebx
call sub_416270
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x8c ] eax
mov edx [ eax + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] sub_41ae8c
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x10 ] rw-data
mov edx eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ebp - 0x10 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
add esp 0xfffffff4
push 0x4
call sub_417ab0
mov [ ebp - 0x88 ] eax
mov edx [ ebp - 0x84 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] 0x0
lea eax [ ebp - 0x78 ]
mov [ ebp - 0x78 ] ebp
mov [ eax + 0x4 ] sub_4180e4
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x80 ]
mov [ edx + 0x4 ] eax
add esp 0x10
mov edx [ ebp - 0x8c ]
mov eax [ ebp - 0x88 ]
mov [ eax ] rw-data
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x88 ]
mov [ eax ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov edx [ ebp - 0x84 ]
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov edx [ eax + 0x4 ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ ebp - 0x10 ] rw-data
add esp 0xfffffffc
push sub_41ae8c
mov edx [ ebp - 0x88 ]
mov eax [ edx ]
mov eax [ eax + 0x4 ]
call eax
push eax
mov eax [ ebp - 0x88 ]
push eax
call sub_417b34
call sub_416430
nop
add esp 0xfffffffc
mov edx [ ebp - 0xe4 ]
push [ edx + 0x8 ]
push [ edx + 0xc ]
mov eax [ ebp - 0xf4 ]
mov edx [ ebp + 0xc ]
push [ edx + eax * 4 ]
call sub_419158
add esp 0x10
test eax eax
je r-xdata
inc [ ebp - 0xfc ]
mov eax [ ebp - 0xec ]
mov edx [ eax + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] sub_41aad0
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x60 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x104 ]
mov [ ebp - 0x50 ] rw-data
mov edx eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] 0x0
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x74 ] r-xdata
mov [ ebp - 0x70 ] esp
lea eax [ ebp - 0x80 ]
mov [ edx + 0x4 ] eax
mov [ ebp - 0x50 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
add esp 0xfffffff4
push 0x4
call sub_417ab0
mov [ ebp - 0x100 ] eax
mov edx [ ebp - 0xec ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0xbc ] 0x0
lea eax [ ebp - 0xb8 ]
mov [ ebp - 0xb8 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0xc0 ]
mov [ edx + 0x4 ] eax
add esp 0x10
mov edx [ ebp - 0x104 ]
mov eax [ ebp - 0x100 ]
mov [ eax ] rw-data
mov eax [ edx + 0x4 ]
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] 0x0
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x74 ] r-xdata
mov [ ebp - 0x70 ] esp
lea eax [ ebp - 0x80 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x100 ]
mov [ eax ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov edx [ ebp - 0xec ]
mov eax [ edx + 0x4 ]
mov edx [ eax ]
mov eax [ ebp - 0xec ]
mov [ eax + 0x4 ] edx
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov [ ebp - 0x50 ] rw-data
add esp 0xfffffffc
push sub_41aad0
mov edx [ ebp - 0x100 ]
mov eax [ edx ]
mov eax [ eax + 0x4 ]
call eax
push eax
mov eax [ ebp - 0x100 ]
push eax
call sub_417b34
call sub_416430
inc [ ebp - 0xf4 ]
call sub_417c2c
call sub_416430
lea esi [ esi ]
sub_4180e4
push ebp
mov ebp esp
sub esp 0x9c
push edi
push esi
push ebx
call sub_416270
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x8c ] eax
mov edx [ eax + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] sub_41a91c
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x10 ] rw-data
mov edx eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ebp - 0x10 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
add esp 0xfffffff4
push 0x4
call sub_417ab0
mov [ ebp - 0x88 ] eax
mov edx [ ebp - 0x84 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x7c ] 0x0
lea eax [ ebp - 0x78 ]
mov [ ebp - 0x78 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x80 ]
mov [ edx + 0x4 ] eax
add esp 0x10
mov edx [ ebp - 0x8c ]
mov eax [ ebp - 0x88 ]
mov [ eax ] rw-data
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x88 ]
mov [ eax ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov edx [ ebp - 0x84 ]
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov edx [ eax + 0x4 ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ ebp - 0x10 ] rw-data
add esp 0xfffffffc
push sub_41a91c
mov edx [ ebp - 0x88 ]
mov eax [ edx ]
mov eax [ eax + 0x4 ]
call eax
push eax
mov eax [ ebp - 0x88 ]
push eax
call sub_417b34
call sub_416430
nop
push ebp
mov ebp esp
sub esp 0x8
call sub_416280
mov eax [ eax ]
mov dl 0x0
test eax eax
je r-xdata
mov al dl
leave
retn
cmp [ eax + 0x14 ] 0x0
sete dl
sub_418248
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_4180e4
xor eax eax
mov eax [ eax ]
mov eax [ eax + 0x4 ]
call eax
jmp r-xdata
mov eax [ eax ]
leave
retn
sub_4182f4
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
je r-xdata
leave
retn
mov eax rw-data
test eax eax
je r-xdata
mov eax sub_4182d8
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff4
push rw-data
call InterlockedIncrement
add esp 0xc
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4182d8
mov [ rw-data ] 0x1
jmp r-xdata
add esp 0xfffffff4
push 0x0
call Sleep
add esp 0xc
sub_41835c
push ebp
mov ebp esp
push edi
push esi
push ebx
mov edi [ ebp + 0x8 ]
xor esi esi
movzx eax [ edi ]
inc edi
mov ebx eax
and ebx 0x7f
test al al
jge r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
mov eax edi
pop ebx
pop esi
pop edi
leave
retn
add esi 0x7
movzx edx [ edi ]
inc edi
mov eax edx
and eax 0x7f
mov ecx esi
shl eax cl
or ebx eax
test dl dl
jl r-xdata
sub_418398
push ebp
mov ebp esp
push edi
push esi
push ebx
mov edi [ ebp + 0x8 ]
xor ebx ebx
xor esi esi
lea esi [ esi ]
movzx edx [ edi ]
inc edi
mov eax edx
and eax 0x7f
mov ecx ebx
shl eax cl
or esi eax
add ebx 0x7
test dl dl
jl r-xdata
cmp ebx 0x1f
ja r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
mov eax edi
pop ebx
pop esi
pop edi
leave
retn
test dl 0x40
je r-xdata
mov eax 0xffffffff
mov ecx ebx
shl eax cl
or esi eax
sub_4183e0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov eax [ ebp + 0xc ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop ebx
pop esi
pop edi
leave
retn
mov edx [ ebp + 0x8 ]
mov ebx [ edx + 0x4 ]
mov esi esi
lea edx [ esi + ebx ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov [ eax + edx * 4 ] edi
test esi esi
jne r-xdata
jmp r-xdata
dec esi
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
mov edi [ eax + esi * 4 ]
test ebx ebx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
add [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ eax + ebx * 4 - 0x4 ]
mov eax [ edi + 0x8 ]
mov edx [ edx + 0x8 ]
sub edx eax
mov eax edx
test eax eax
jg r-xdata
lea eax [ esi + ebx ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov ecx [ edx + ebx * 4 - 0x4 ]
mov [ edx + eax * 4 ] ecx
dec ebx
je r-xdata
sub_418450
push ebp
mov ebp esp
sub esp 0x3c
push edi
push esi
push ebx
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x4 ]
cmp esi [ ebp + 0xc ]
je r-xdata
add esp 0xfffffff8
mov ebx [ ebp + 0x8 ]
add ebx 0x8
push ebx
mov edx [ ebp + 0x8 ]
push edx
call sub_419010
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0xc ]
add eax [ ecx + 0x4 ]
add esp 0x10
mov [ ebp - 0x14 ] ebx
cmp eax esi
je r-xdata
call abort
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x8 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
call abort
cmp [ ebp - 0x4 ] 0x1
ja r-xdata
mov esi esi
dec [ ebp - 0x4 ]
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax [ esi + ecx * 4 ]
mov [ esi ] eax
mov [ esi + ecx * 4 ] edx
xor edx edx
cmp ecx 0x1
jbe r-xdata
add esp 0xfffffff8
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_4183e0
add esp 0xfffffff4
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x8 ]
call free
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
pop edi
leave
retn
lea ecx [ edx + edx ]
lea eax [ ecx + 0x1 ]
cmp eax [ ebp - 0x4 ]
jb r-xdata
nop
lea eax [ ecx + 0x2 ]
mov ecx [ esi + edx * 8 + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov ebx [ esi + edx * 4 ]
cmp eax [ ebp - 0x4 ]
jae r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov edi [ ecx + 0x8 ]
sub edi eax
mov eax edi
test eax eax
jle r-xdata
mov edi [ esi + edx * 8 + 0x8 ]
mov [ ebp - 0x24 ] edi
mov ecx [ edi + 0x8 ]
mov eax ecx
mov edi [ ebp - 0x10 ]
sub eax [ edi + 0x8 ]
test eax eax
jle r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov edi [ ecx + 0x8 ]
sub edi eax
mov eax edi
test eax eax
jle r-xdata
mov edi [ esi + edx * 8 + 0x8 ]
mov [ ebp - 0x24 ] edi
mov ecx [ edi + 0x8 ]
mov eax ecx
mov edi [ ebp - 0x10 ]
sub eax [ edi + 0x8 ]
test eax eax
jle r-xdata
mov edx [ ebp - 0x8 ]
dec edx
mov [ ebp - 0x8 ] edx
jmp r-xdata
jmp r-xdata
mov [ esi + edx * 4 ] ecx
mov [ esi + edx * 8 + 0x4 ] ebx
lea eax [ edx + edx ]
lea edx [ eax + 0x1 ]
mov esi esi
sub ecx [ ebx + 0x8 ]
test ecx ecx
jle r-xdata
mov [ esi + edx * 4 ] ecx
mov [ esi + edx * 8 + 0x4 ] ebx
lea eax [ edx + edx ]
lea edx [ eax + 0x1 ]
mov esi esi
sub ecx [ ebx + 0x8 ]
test ecx ecx
jle r-xdata
lea edi [ edx * 2 + 0x2 ]
mov [ ebp - 0xc ] edi
mov eax [ esi + edx * 8 + 0x4 ]
mov [ ebp - 0x10 ] eax
mov ebx [ esi + edx * 4 ]
mov ecx [ ebp - 0x4 ]
cmp edi ecx
jae r-xdata
mov eax [ ebp - 0x24 ]
mov [ esi + edx * 4 ] eax
mov [ esi + edx * 8 + 0x8 ] ebx
mov edx [ ebp - 0xc ]
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ esi + edx * 4 ] eax
mov [ esi + edx * 8 + 0x8 ] ebx
lea edx [ edx * 2 + 0x2 ]
jmp r-xdata
lea eax [ edx + edx ]
inc eax
cmp eax [ ebp - 0x4 ]
jb r-xdata
sub_418600
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
cmp [ edx ] 0x0
je r-xdata
mov eax ecx
leave
retn
lea esi [ esi ]
mov eax edx
add eax [ edx ]
lea edx [ eax + 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ edx + 0x8 ] 0x0
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
inc ecx
sub_418630
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov esi [ eax ]
mov eax [ ebp + 0x14 ]
mov edi [ eax ]
cmp [ ecx ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
mov eax [ ebp + 0x14 ]
mov [ eax ] edi
pop ebx
pop esi
pop edi
leave
retn
nop
mov eax ecx
add eax [ ecx ]
lea ecx [ eax + 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
mov [ eax + edx * 4 ] ecx
inc [ ebx + 0x4 ]
mov eax [ ecx + 0x8 ]
cmp eax esi
jae r-xdata
add eax [ ecx + 0xc ]
cmp eax edi
jbe r-xdata
mov esi eax
mov edi eax
sub_418694
push ebp
mov ebp esp
sub esp 0x2c
push edi
push esi
push ebx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
test eax eax
je r-xdata
add esp 0xfffffff4
mov edx [ ebp + 0x8 ]
push [ edx + 0x8 ]
call sub_418600
mov [ ebp - 0x1c ] eax
add esp 0x10
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x20 ] eax
mov ebx eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x20 ] eax
cmp [ ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x20 ]
push edx
mov eax [ ebp + 0x8 ]
push [ eax + 0x8 ]
call sub_418630
add esp 0x10
mov ebx eax
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x10 ] eax
add esp 0xfffffff4
mov ebx eax
shl ebx 0x2
push ebx
call malloc
mov [ ebp - 0x10 ] eax
add esp 0xfffffff4
push ebx
call malloc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x0
add esp 0x20
mov [ ebp - 0x18 ] 0xffffffff
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
test eax eax
je r-xdata
nop
add esp 0xfffffff8
mov edx [ ebp - 0x1c ]
push edx
mov eax [ ebp - 0x20 ]
push eax
call sub_418450
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x18 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov [ edx + 0x4 ] eax
lea esp [ ebp - 0x38 ]
pop ebx
pop esi
pop edi
leave
retn
lea edi [ ebp - 0x14 ]
lea esi [ ebp - 0x18 ]
mov esi esi
add esp 0xfffffff4
push [ ebx ]
call sub_418600
add [ ebp - 0x1c ] eax
add esp 0x10
add ebx 0x4
cmp [ ebx ] 0x0
jne r-xdata
jmp r-xdata
push edi
push esi
mov eax [ ebp - 0x20 ]
push eax
push [ ebx ]
call sub_418630
add esp 0x10
add ebx 0x4
cmp [ ebx ] 0x0
jne r-xdata
jmp r-xdata
sub_4187b0
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
call sub_4182f4
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
add esp 0xfffffff8
push 0xffffffff
push [ rw-data ]
call WaitForSingleObject
add esp 0x8
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
test ebx ebx
jne r-xdata
add esp 0xfffffff4
push [ rw-data ]
call ReleaseMutex
mov eax [ ebp + 0x8 ]
cmp eax [ ebx ]
jb r-xdata
add esp 0xfffffff4
push ebx
call sub_418694
add esp 0x10
xor edi edi
mov esi [ ebx + 0x10 ]
cmp edi esi
jae r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebx + 0x14 ]
cmp eax [ ebx + 0x4 ]
jae r-xdata
xor eax eax
mov ebx [ ebx + 0xc ]
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
add edx [ eax + 0xc ]
cmp [ ebp + 0x8 ] edx
jb r-xdata
mov esi ecx
jmp r-xdata
lea edi [ ecx + 0x1 ]
cmp edi esi
jb r-xdata
lea ecx [ esi + edi ]
shr ecx 0x1
mov eax [ ebx + ecx * 4 ]
mov edx [ eax + 0x8 ]
cmp [ ebp + 0x8 ] edx
jae r-xdata
sub_418868
push ebp
mov ebp esp
sub esp 0x2c
push edi
push esi
push ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov edx [ eax + 0x4 ]
add edx 0xfffffffc
sub eax edx
mov [ ebp - 0x8 ] eax
add eax 0x9
mov [ ebp - 0x14 ] eax
mov [ ebx ] eax
mov edx [ ebp - 0x14 ]
mov edi r-xdata
mov ecx 0x1
mov esi edx
cld
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov [ ebp - 0xc ] r-xdata
test eax eax
je r-xdata
sbb eax eax
or al 0x1
mov esi [ ebx ]
mov edx esi
mov edi edx
mov al 0x0
cld
mov ecx 0xffffffff
[ edi ]
not ecx
lea ecx [ esi + ecx - 0x1 ]
mov [ ebp - 0x18 ] ecx
mov edx ecx
inc edx
mov edi [ ebp - 0xc ]
mov eax 0x3
mov ecx eax
cld
test al 0x0
[ esi ] [ edi ]
jne r-xdata
mov esi edx
mov edi [ ebp - 0xc ]
mov ecx 0x3
cld
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov [ ebx + 0x4 ] 0x0
mov esi [ ebp - 0x18 ]
mov eax [ esi + 0x1 ]
mov [ ebx + 0x4 ] eax
mov edx esi
add edx 0x5
jmp r-xdata
test eax eax
je r-xdata
sbb eax eax
or al 0x1
mov eax edx
add esp 0xfffffff8
lea eax [ ebp - 0x4 ]
push eax
push edx
call sub_41835c
mov edx eax
add edx [ ebp - 0x4 ]
add esp 0xfffffff8
lea eax [ ebx + 0x8 ]
push eax
push edx
call sub_41835c
mov edx eax
add esp 0xfffffff8
lea eax [ ebx + 0xc ]
push eax
push edx
call sub_418398
mov edx eax
movzx eax [ edx ]
mov [ ebx + 0x10 ] eax
inc edx
mov eax [ ebx ]
add esp 0x20
cmp [ eax ] 0x7a
jne r-xdata
mov edi [ ebp - 0x8 ]
cmp [ edi + 0x9 ] 0x7a
je r-xdata
xor eax eax
jmp r-xdata
lea esp [ ebp - 0x38 ]
pop ebx
pop esi
pop edi
leave
retn
sub_41896c
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
movzx eax [ ebx ]
inc ebx
test al 0x40
je r-xdata
test al al
jge r-xdata
and eax 0x3f
imul eax [ esi + 0x8 ]
add [ edx ] eax
jmp r-xdata
test al 0xc0
je r-xdata
and eax 0x3f
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax ebx
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
cmp eax 0x2f
ja r-xdata
and eax 0x3f
mov [ ebp - 0x8 ] eax
jmp r-xdata
add esp 0xfffffff8
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_41835c
mov ebx eax
mov ecx [ ebp - 0x4 ]
imul ecx [ esi + 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + eax + 0x5c ] 0x1
mov eax [ ebp + 0xc ]
add eax 0x10
mov [ eax + edx * 4 ] ecx
jmp r-xdata
call abort
jmp [ eax * 4 + jump_table_4189c4 ]
mov edx [ ebp + 0xc ]
mov [ eax + edx + 0x5c ] 0x0
jmp r-xdata
mov eax [ ebx ]
jmp r-xdata
movzx eax [ ebx ]
add [ edx ] eax
inc ebx
jmp r-xdata
movzx eax [ ebx ]
add [ edx ] eax
add ebx 0x2
jmp r-xdata
mov eax [ edx ]
add eax [ ebx ]
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
push ebx
call sub_41835c
mov ebx eax
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
push ebx
call sub_41835c
mov ebx eax
mov eax [ ebp - 0x8 ]
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
push ebx
call sub_41835c
mov ebx eax
add esp 0xfffffff8
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_41835c
mov ebx eax
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ecx + eax + 0x5c ] 0x2
mov edx eax
add edx 0x10
mov eax [ ebp - 0xc ]
mov [ edx + ecx * 4 ] eax
jmp r-xdata
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
push ebx
call sub_41835c
mov ebx eax
add esp 0xfffffff8
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_41835c
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x58 ] ax
mov eax [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
push ebx
call sub_41835c
mov ebx eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x58 ] ax
jmp r-xdata
add esp 0xfffffff8
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_41835c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
jmp r-xdata
add esp 0xfffffff4
push 0x74
call malloc
mov edi eax
mov esi [ ebp + 0xc ]
cld
mov ecx 0x1d
[ edi ] [ esi ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x70 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x70 ]
mov edi ecx
mov esi eax
cld
mov ecx 0x1d
[ edi ] [ esi ]
add esp 0xfffffff4
push eax
call free
jmp r-xdata
mov [ ebp - 0x8 ] 0x10
mov eax 0x10
mov esi [ ebp + 0xc ]
add esi 0x5c
mov ecx [ ebp + 0xc ]
add ecx 0x10
add esp 0xfffffff8
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_41835c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0xc ] eax
jmp r-xdata
add esp 0xfffffff8
lea eax [ ebp - 0x8 ]
push eax
push ebx
call sub_41835c
mov ebx eax
add esp 0xfffffff8
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_41835c
mov ebx eax
mov ecx [ ebp - 0x4 ]
imul ecx [ esi + 0xc ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + eax + 0x5c ] 0x1
mov eax [ ebp + 0xc ]
add eax 0x10
neg ecx
mov [ eax + edx * 4 ] ecx
jmp r-xdata
mov [ edx ] eax
add ebx 0x4
jmp r-xdata
mov [ eax + esi ] 0x1
mov edx [ ebp - 0x8 ]
lea eax [ edx * 4 - 0x40 ]
mov [ ecx + edx * 4 ] eax
lea eax [ edx + 0x1 ]
mov [ ebp - 0x8 ] eax
cmp eax 0x1f
jbe r-xdata
jmp r-xdata
sub_418cb4
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0x4 ] 0x0
mov [ ebx ] 0x0
mov [ ebx + 0xc ] 0x0
mov [ ebx + 0x10 ] 0x0
call sub_4182f4
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ ebx + 0x14 ] eax
mov [ rw-data ] ebx
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff8
push 0xffffffff
push [ rw-data ]
call WaitForSingleObject
add esp 0x8
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff4
push [ rw-data ]
call ReleaseMutex
sub_418d2c
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
push 0x18
call malloc
add esp 0xfffffff8
push eax
push ebx
call sub_418cb4
mov ebx [ ebp - 0x18 ]
leave
retn
sub_418d50
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x4 ] 0x0
mov [ ebx ] 0x0
mov [ ebx + 0x10 ] 0x0
call sub_4182f4
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ ebx + 0x14 ] eax
mov [ rw-data ] ebx
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff8
push 0xffffffff
push [ rw-data ]
call WaitForSingleObject
add esp 0x8
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff4
push [ rw-data ]
call ReleaseMutex
sub_418dc4
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
push 0x18
call malloc
add esp 0xfffffff8
push eax
push ebx
call sub_418d50
mov ebx [ ebp - 0x18 ]
leave
retn
sub_418de8
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov esi [ ebp + 0x8 ]
call sub_4182f4
cmp [ rw-data ] 0x0
je r-xdata
mov edx rw-data
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff8
push 0xffffffff
push [ rw-data ]
call WaitForSingleObject
add esp 0x8
cmp [ rw-data ] 0x0
je r-xdata
mov esi esi
call abort
add esp 0xfffffff4
push [ rw-data ]
call ReleaseMutex
add esp 0xc
lea edx [ ebx + 0x14 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov ebx [ edx ]
cmp [ ebx + 0x8 ] esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff4
push [ ebx + 0xc ]
call free
add esp 0x10
mov eax ebx
jmp r-xdata
add esp 0xfffffff4
push [ rw-data ]
call ReleaseMutex
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
sub_418eac
push ebp
mov ebp esp
sub esp 0xcc
push edi
push esi
push ebx
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call sub_4187b0
mov [ ebp - 0xac ] eax
add esp 0x10
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add esp 0xfffffff8
lea ebx [ ebp - 0x20 ]
push ebx
mov edx [ ebp - 0xac ]
push edx
call sub_418868
mov [ ebp - 0xb4 ] eax
add esp 0x10
test eax eax
jne r-xdata
lea esp [ ebp - 0xd8 ]
pop ebx
pop esi
pop edi
leave
retn
lea edi [ ebp - 0xa0 ]
xor eax eax
cld
mov ecx 0x1d
[ edi ]
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x46 ] ax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x9c ] eax
mov edx [ ebp - 0xac ]
mov eax [ edx + 0x4 ]
add eax 0xfffffffc
sub edx eax
add edx [ edx ]
lea esi [ edx + 0x4 ]
lea ebx [ ebp - 0xa0 ]
mov edi [ ebp - 0xac ]
add edi 0x10
cmp [ ebp - 0xb4 ] esi
jae r-xdata
mov [ ebp - 0xb4 ] edi
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0x7a
jne r-xdata
mov esi esi
mov eax [ ebp - 0xac ]
add eax [ eax ]
lea esi [ eax + 0x4 ]
mov edx [ ebp - 0xac ]
mov eax [ edx + 0x8 ]
mov [ ebp - 0xa8 ] eax
cmp [ ebp - 0xb4 ] esi
jae r-xdata
add esp 0xfffffff8
lea eax [ ebp - 0xa4 ]
push eax
mov edx edi
push edx
call sub_41835c
mov [ ebp - 0xb4 ] eax
mov ecx [ ebp - 0xa4 ]
add [ ebp - 0xb4 ] ecx
add esp 0x10
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
push ebx
mov eax [ ebp - 0xb4 ]
push eax
call sub_41896c
mov [ ebp - 0xb4 ] eax
add esp 0x10
cmp eax esi
jb r-xdata
mov edi [ ebp + 0xc ]
mov esi ebx
cld
mov ecx 0x1c
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x8 ]
ja r-xdata
lea edi [ ebp - 0xa8 ]
mov esi esi
mov edx [ ebp + 0x8 ]
cmp [ ebp - 0xa8 ] edx
jbe r-xdata
push edi
lea ecx [ ebp - 0x20 ]
push ecx
push ebx
mov eax [ ebp - 0xb4 ]
push eax
call sub_41896c
mov [ ebp - 0xb4 ] eax
add esp 0x10
cmp eax esi
jae r-xdata
sub_419010
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
mov edx 0xffffffff
shl eax 0x5
shr eax 0x3
add eax 0xf
and eax 0x3ffffff0
call sub_4161a4
mov [ ebp - 0x8 ] esp
xor edi edi
cmp edi [ ebp - 0x4 ]
jae r-xdata
xor edi edi
xor ebx ebx
cmp ebx [ ebp - 0x4 ]
jae r-xdata
mov ebx edx
lea edx [ edi * 4 ]
mov [ ebp - 0x10 ] edx
lea eax [ edi + 0x1 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] ebx
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
mov esi esi
cmp ebx 0xffffffff
je r-xdata
inc edi
cmp edi [ ebp - 0x4 ]
jb r-xdata
mov [ edx + ebx * 4 ] eax
inc ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
mov [ eax + edx ] ebx
mov edx edi
mov edi [ ebp - 0xc ]
cmp edi [ ebp - 0x4 ]
jb r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ edx + edi * 4 ]
mov eax [ edx + ebx * 4 ]
mov eax [ eax + 0x8 ]
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax ecx
mov esi edx
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov eax [ edx + edi * 4 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ edx + 0x4 ]
mov edx [ edx ]
mov eax [ esi + ebx * 4 ]
mov [ edx + ecx * 4 ] eax
mov eax [ ebp + 0xc ]
inc [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + ebx * 4 ] 0x0
mov eax [ ebp - 0x8 ]
mov ebx [ eax + ebx * 4 ]
sub_4190ec
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
add esp 0xfffffff8
call eax
mov edi eax
mov esi [ edi + 0x4 ]
lea eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
push ebx
mov edx [ ebp + 0x18 ]
call edx
push eax
mov eax [ ebp + 0x14 ]
push eax
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
call edx
push eax
movsx eax [ esi + 0x10 ]
add eax edi
push eax
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x4 ]
call eax
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
sub_419158
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
add esp 0xfffffff8
push ebx
push esi
call sub_4171e0
add esp 0x10
test al al
je r-xdata
mov [ ebp - 0x4 ] 0x0
test ebx ebx
je r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
test ebx ebx
je r-xdata
add esp 0xfffffff8
push ebx
push sub_41e574
mov edx [ ebx + 0x4 ]
movsx eax [ edx ]
add eax ebx
push eax
push 0x1
push sub_41dfe8
push [ edx + 0x4 ]
call sub_4190ec
add esp 0x20
mov ecx eax
test ecx ecx
je r-xdata
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ ebp - 0x4 ]
add esp 0xfffffff8
push ebx
push sub_41e574
mov edx [ ebx + 0x4 ]
movsx eax [ edx ]
add eax ebx
push eax
push 0x1
push sub_41e13c
push [ edx + 0x4 ]
call sub_4190ec
add esp 0x20
mov ebx eax
test ebx ebx
je r-xdata
add esp 0xfffffff8
mov eax [ ecx + 0x4 ]
push 0x0
push 0x0
mov edx [ ebp + 0x10 ]
push edx
push 0x1
push esi
movsx edx [ eax + 0x10 ]
add edx ecx
push edx
mov eax [ eax + 0x14 ]
call eax
jmp r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x4 ] eax
add esp 0xfffffff8
push esi
push sub_41e574
mov edx [ esi + 0x4 ]
movsx eax [ edx ]
add eax esi
push eax
push 0x1
push sub_41e13c
push [ edx + 0x4 ]
call sub_4190ec
add esp 0x20
test eax eax
je r-xdata
mov esi [ ebx + 0x8 ]
mov edi [ eax + 0x8 ]
test esi esi
je r-xdata
xor ebx ebx
add esp 0xfffffff8
push esi
push sub_41e574
mov eax [ esi + 0x4 ]
movsx eax [ eax ]
add eax esi
push eax
push 0x1
push sub_41deb8
mov eax [ esi + 0x4 ]
push [ eax + 0x4 ]
call sub_4190ec
add esp 0x20
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x0
add esp 0xfffffff8
push edi
push sub_41e574
mov eax [ edi + 0x4 ]
movsx eax [ eax ]
add eax edi
push eax
push 0x1
push sub_41deb8
mov eax [ edi + 0x4 ]
push [ eax + 0x4 ]
call sub_4190ec
add esp 0x20
test eax eax
je r-xdata
mov ebx [ eax + 0xc ]
mov esi [ eax + 0x8 ]
jmp r-xdata
and ebx 0x2
mov eax [ ebp - 0x8 ]
and eax 0x2
cmp ebx eax
jg r-xdata
mov edx [ eax + 0xc ]
mov [ ebp - 0x8 ] edx
mov edi [ eax + 0x8 ]
jmp r-xdata
test edi edi
je r-xdata
add esp 0xfffffff8
push esi
push edi
call sub_4171e0
add esp 0x10
test al al
jne r-xdata
mov edx ebx
and edx 0x1
mov eax [ ebp - 0x8 ]
and eax 0x1
cmp edx eax
jg r-xdata
mov eax [ ebp + 0x10 ]
add esp 0xfffffff8
call sub_4198b0
push eax
push edi
call sub_4171e0
add esp 0x10
test al al
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
add esp 0xfffffff8
push esi
push sub_41e574
mov eax [ esi + 0x4 ]
movsx eax [ eax ]
add eax esi
push eax
push 0x1
push sub_41dfe8
mov eax [ esi + 0x4 ]
push [ eax + 0x4 ]
call sub_4190ec
add esp 0x20
mov ecx eax
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] edx
jmp r-xdata
add esp 0xfffffff8
push esi
push sub_41e574
mov eax [ esi + 0x4 ]
movsx eax [ eax ]
add eax esi
push eax
push 0x1
push sub_41df04
mov eax [ esi + 0x4 ]
push [ eax + 0x4 ]
call sub_4190ec
add esp 0x20
test eax eax
jne r-xdata
add esp 0xfffffff8
push esi
push sub_41e574
mov eax [ esi + 0x4 ]
movsx eax [ eax ]
add eax esi
push eax
push 0x1
push sub_41e13c
mov eax [ esi + 0x4 ]
push [ eax + 0x4 ]
call sub_4190ec
add esp 0x20
mov esi eax
test esi esi
je r-xdata
add esp 0xfffffff8
mov eax [ ecx + 0x4 ]
push 0x0
push 0x0
mov edx [ ebp + 0x10 ]
push edx
push 0x1
push edi
movsx edx [ eax + 0x10 ]
add edx ecx
push edx
mov eax [ eax + 0x14 ]
call eax
jmp r-xdata
test edi edi
je r-xdata
add esp 0xfffffff8
push edi
push sub_41e574
mov eax [ edi + 0x4 ]
movsx eax [ eax ]
add eax edi
push eax
push 0x1
push sub_41e13c
mov eax [ edi + 0x4 ]
push [ eax + 0x4 ]
call sub_4190ec
add esp 0x20
mov ebx eax
test ebx ebx
je r-xdata
mov al [ ebp - 0x8 ]
and al 0x1
mov [ ebp - 0x9 ] al
jmp r-xdata
mov edi [ ebx + 0x8 ]
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
xor ebx ebx
add esp 0xfffffff8
push esi
push sub_41e574
mov eax [ esi + 0x4 ]
movsx eax [ eax ]
add eax esi
push eax
push 0x1
push sub_41deb8
mov eax [ esi + 0x4 ]
push [ eax + 0x4 ]
call sub_4190ec
add esp 0x20
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0x0
add esp 0xfffffff8
push edi
push sub_41e574
mov eax [ edi + 0x4 ]
movsx eax [ eax ]
add eax edi
push eax
push 0x1
push sub_41deb8
mov eax [ edi + 0x4 ]
push [ eax + 0x4 ]
call sub_4190ec
add esp 0x20
test eax eax
je r-xdata
mov ebx [ eax + 0xc ]
mov esi [ eax + 0x8 ]
jmp r-xdata
and ebx 0x2
mov eax [ ebp - 0x8 ]
and eax 0x2
cmp ebx eax
jg r-xdata
mov edx [ eax + 0xc ]
mov [ ebp - 0x8 ] edx
mov edi [ eax + 0x8 ]
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx ebx
and edx 0x1
mov ecx [ ebp - 0x8 ]
and ecx 0x1
cmp edx ecx
jg r-xdata
add esp 0xfffffff8
push esi
push edi
call sub_4171e0
add esp 0x10
test al al
je r-xdata
cmp edx ecx
jl r-xdata
test edi edi
jne r-xdata
cmp ebx eax
jl r-xdata
add esp 0xfffffff8
push edi
push sub_41e574
mov eax [ edi + 0x4 ]
movsx eax [ eax ]
add eax edi
push eax
push 0x1
push sub_41e13c
mov eax [ edi + 0x4 ]
push [ eax + 0x4 ]
call sub_4190ec
add esp 0x20
mov ebx eax
xor ebx ebx
jmp r-xdata
add esp 0xfffffff8
push esi
push sub_41e574
mov eax [ esi + 0x4 ]
movsx eax [ eax ]
add eax esi
push eax
push 0x1
push sub_41e13c
mov eax [ esi + 0x4 ]
push [ eax + 0x4 ]
call sub_4190ec
add esp 0x20
mov esi eax
xor esi esi
jmp r-xdata
test esi esi
jne r-xdata
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov al [ ebp - 0x8 ]
xor al 0x1
test al 0x1
je r-xdata
mov [ ebp - 0x9 ] 0x0
sub_419574
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
add esp 0xfffffff8
push ecx
push sub_41e574
mov edx [ ecx + 0x4 ]
movsx eax [ edx ]
add eax ecx
push eax
push 0x1
push sub_41e13c
push [ edx + 0x4 ]
call sub_4190ec
xor eax eax
jmp r-xdata
test eax eax
setne al
leave
retn
sub_4195b0
push ebp
mov ebp esp
sub esp 0x74
push ebx
mov ebx [ ebp + 0x8 ]
call sub_416270
mov edx eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ebx ebx
je r-xdata
pop ebx
leave
retn
mov [ ebx + 0x4 ] rw-data
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ebx + 0x4 ] rw-data
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_419634
push ebp
mov ebp esp
sub esp 0x74
push ebx
mov ebx [ ebp + 0x8 ]
call sub_416270
mov edx eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ebx ebx
je r-xdata
pop ebx
leave
retn
mov [ ebx + 0x4 ] rw-data
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ebx + 0x4 ] rw-data
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0xc ] eax
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_4196bc
push ebp
mov ebp esp
sub esp 0x74
push ebx
mov ebx [ ebp + 0x8 ]
call sub_416270
mov edx eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ebx ebx
je r-xdata
pop ebx
leave
retn
mov [ ebx + 0x4 ] rw-data
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ebx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_419738
push ebp
mov ebp esp
sub esp 0x74
push ebx
mov ebx [ ebp + 0x8 ]
call sub_416270
mov edx eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ebx ebx
je r-xdata
pop ebx
leave
retn
mov [ ebx + 0x4 ] rw-data
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ebx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_4197b4
push ebp
mov ebp esp
sub esp 0x74
push ebx
mov ebx [ ebp + 0x8 ]
call sub_416270
mov edx eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ebx ebx
je r-xdata
pop ebx
leave
retn
mov [ ebx + 0x4 ] rw-data
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ebx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_419830
push ebp
mov ebp esp
sub esp 0x74
push ebx
mov ebx [ ebp + 0x8 ]
call sub_416270
mov edx eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ebx ebx
je r-xdata
pop ebx
leave
retn
mov [ ebx + 0x4 ] rw-data
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ebx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_4198b0
push ebp
mov ebp esp
sub esp 0x68
call sub_416270
mov edx eax
mov ecx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov [ ecx + 0x4 ] rw-data
mov [ ecx ] r-xdata
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ecx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_4199cb
insb
add [ ebp - 0x76aaff8a ] cl
in eax 0x83
in al dx
push 0xffc895e8
dec [ ecx - 0xc77463e ]
inc edx
add [ ebx + 0x42f3883d ] al
add [ eax ] al
jne r-xdata
mov eax rw-data
leave
retn
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov [ ecx + 0x4 ] rw-data
mov [ ecx ] sub_4199cb
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ecx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_419a5b
imul eax [ eax ] 0x5500768d
mov ebp esp
sub esp 0x68
call sub_416270
mov edx eax
mov ecx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov [ ecx + 0x4 ] rw-data
mov [ ecx ] sub_419a5b
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ecx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_419b7b
bound eax [ eax ]
lea esi [ esi ]
push ebp
mov ebp esp
sub esp 0x68
call sub_416270
mov edx eax
mov ecx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov [ ecx + 0x4 ] rw-data
mov [ ecx ] sub_419b7b
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ecx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_419c0b
arpl [ eax ] ax
lea esi [ esi ]
push ebp
mov ebp esp
sub esp 0x68
call sub_416270
mov edx eax
mov ecx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov [ ecx + 0x4 ] rw-data
mov [ ecx ] sub_419c0b
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ecx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_419dbb
add [ fs : ebp - 0x76aaff8a ] cl
in eax 0x83
in al dx
push 0xffc4a5e8
dec [ ecx - 0xc3f463e ]
inc edx
add [ ebx + 0x42f3c03d ] al
add [ eax ] al
jne r-xdata
mov eax rw-data
leave
retn
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov [ ecx + 0x4 ] rw-data
mov [ ecx ] sub_419dbb
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ecx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_419e4b
add [ ebp - 0x76aaff8a ] cl
in eax 0x83
in al dx
push 0xffc415e8
dec [ ecx - 0xc37463e ]
inc edx
add [ ebx + 0x42f3c83d ] al
add [ eax ] al
jne r-xdata
mov eax rw-data
leave
retn
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov [ ecx + 0x4 ] rw-data
mov [ ecx ] sub_419e4b
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ecx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_419edb
push ebp
imul eax [ eax ] 0x8955f689
in eax 0x83
in al dx
push 0xffc385e8
dec [ ecx - 0xc2f463e ]
inc edx
add [ ebx + 0x42f3d03d ] al
add [ eax ] al
jne r-xdata
mov eax rw-data
leave
retn
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov [ ecx + 0x4 ] rw-data
mov [ ecx ] sub_419edb
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ecx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_419f6b
push ebp
insb
add [ ecx - 0x1a76aa0a ] cl
sub esp 0x68
call sub_416270
mov edx eax
mov ecx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov [ ecx + 0x4 ] rw-data
mov [ ecx ] sub_419f6b
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ecx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_41a11b
push ebp
arpl [ eax ] ax
mov esi esi
push ebp
mov ebp esp
sub esp 0x68
call sub_416270
mov edx eax
mov ecx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov [ ecx + 0x4 ] rw-data
mov [ ecx ] sub_41a11b
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ecx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_41a1ab
push ebx
arpl [ eax ] ax
mov esi esi
push ebp
mov ebp esp
sub esp 0x68
call sub_416270
mov edx eax
mov ecx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
test ecx ecx
je r-xdata
mov [ ecx + 0x4 ] rw-data
mov [ ecx ] sub_41a1ab
mov eax [ edx + 0x4 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ edx + 0x4 ] eax
mov [ ecx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
sub_41a23b
cmp [ ecx + edi * 2 + 0x70 ] esi
pop edi
imul ebp [ esi + 0x66 ] 0x3631006f
pop edi
pop edi
jne r-xdata
pop edi
jb r-xdata
insd
pop edi
je r-xdata
pop edi
jo r-xdata
je r-xdata
inc esp
jo _isatty
add [ eax + 0x1425ff90 ] dl
add eax 0x90900043
jmp [ _isatty@IAT ]
insd
pop di
je r-xdata
pop edi
jo r-xdata
imul ebp [ esi + 0x66 ] 0x3731006f
pop edi
nop
jo r-xdata
cmp [ 0xffffffff90900043 ] al
popad
pop edi
jo __set_app_type
pop edi
imul ebp [ esi + 0x66 ] 0x3631006f
pop edi
pop edi
imul ebp [ esi + 0x66 ] 0x3931006f
pop edi
pop edi
jo r-xdata
add [ eax + 0xc25ff90 ] dl
add eax 0x90900043
jmp [ _read@IAT ]
add eax 0x90900043
cmp al 0x5
inc ebx
add [ eax + 0x4425ff90 ] dl
je r-xdata
pop edi
pop edi
popad
jb r-xdata
outsw
add [ ecx ] dh
aaa
imul ebp [ esi + 0x74 ] 0x745f7265
jns r-xdata
nop
nop
jo r-xdata
pop edi
imul ebp [ esi + 0x66 ] 0x3631006f
pop edi
pop edi
popad
je r-xdata
inc ebx
add [ eax + 0x3825ff90 ] dl
add eax 0x90900043
jmp [ _fpreset@IAT ]
pop edi
imul ebp [ esi + 0x66 ] 0x768d006f
add bh bh
and eax _stricmp@IAT
nop
nop
jmp [ _wcslwr@IAT ]
sbb [ 0xffffffff90900043 ] al
jb r-xdata
jb r-xdata
je r-xdata
jns r-xdata
add eax 0x90900043
jo r-xdata
outsb
outsw
add [ ebp + 0x25ff0076 ] cl
pop edi
imul ebp [ esi + 0x66 ] 0x3931006f
pop edi
pop edi
bound esi [ ebp + 0x69 ]
insb
je r-xdata
add [ eax + 0x25ff90 ] dl
add eax 0x90900043
jmp [ _open@IAT ]
outsb
pop edi
je r-xdata
and eax _write@IAT
nop
nop
jo r-xdata
nop
pop edi
imul ebp [ esi + 0x66 ] 0x3631006f
pop edi
pop edi
jne r-xdata
add [ eax - 0x3da0070 ] dl
add al 0x43
arpl [ edi + 0x74 ] bx
jns r-xdata
add [ eax + 0x425ff90 ] dl
add eax 0x90900043
jmp [ _lseek@IAT ]
inc ebx
pop edi
imul ebp [ esi + 0x66 ] 0x3631006f
pop edi
sub_41a86c
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push 0x21
push r-xdata
push r-xdata
call _assert
mov esi esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax + 0x1 ] 0x1
je r-xdata
mov eax [ eax + 0x24 ]
mov eax [ eax + 0xc ]
jmp r-xdata
leave
retn
sub_41a8b0
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
lea eax [ ebp + 0x14 ]
mov ecx [ edx ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
mov eax [ ecx + 0x1d8 ]
call eax
movzx eax al
leave
retn
sub_41a8d4
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
lea eax [ ebp + 0x14 ]
mov ecx [ edx ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
mov eax [ ecx + 0x238 ]
call eax
leave
retn
sub_41a91c
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] rw-data
test al 0x1
je r-xdata
leave
retn
add esp 0xfffffff4
push edx
call sub_4160b0
sub_41a940
push ebp
mov ebp esp
sub esp 0x4c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov [ eax + 0x1c ] rw-data
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0xfffffff8
push 0x2
lea eax [ ebx + 0x8 ]
push eax
call sub_40eb00
add esp 0x10
mov eax [ ebx ]
mov [ eax + 0x1c ] rw-data
lea edi [ ebp - 0x20 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ ebx ]
lea edx [ ebp - 0x20 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebx ]
lea edx [ ecx - 0x8 ]
mov eax ebx
sub eax edx
movzx edx [ rw-data ]
add edx eax
mov [ ebp - 0x18 ] dx
mov eax [ ebp + 0xc ]
test al 0x2
je r-xdata
lea edi [ ebp - 0x40 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ ebx ]
lea edx [ ebp - 0x40 ]
mov [ eax + 0x1c ] edx
mov edx [ ebx ]
add edx 0xffffffa8
mov eax ebx
sub eax edx
movzx ecx [ rw-data ]
add ecx eax
mov [ ebp - 0x38 ] cx
mov edx [ ebp + 0xc ]
test dl 0x1
je r-xdata
mov [ ecx + 0x1c ] rw-data
add esp 0xfffffff4
push [ ecx + 0x18 ]
call sub_41764c
add esp 0x10
lea esp [ ebp - 0x58 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push ebx
call sub_4160b0
sub_41aa08
push ebp
mov ebp esp
sub esp 0x4c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov [ eax + 0x1c ] rw-data
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0xfffffff8
push 0x2
lea eax [ ebx + 0x4 ]
push eax
call sub_40eb00
add esp 0x10
mov eax [ ebx ]
mov [ eax + 0x1c ] rw-data
lea edi [ ebp - 0x20 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ ebx ]
lea edx [ ebp - 0x20 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebx ]
lea edx [ ecx - 0x4 ]
mov eax ebx
sub eax edx
movzx edx [ rw-data ]
add edx eax
mov [ ebp - 0x18 ] dx
mov eax [ ebp + 0xc ]
test al 0x2
je r-xdata
lea edi [ ebp - 0x40 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ ebx ]
lea edx [ ebp - 0x40 ]
mov [ eax + 0x1c ] edx
mov edx [ ebx ]
add edx 0xffffffac
mov eax ebx
sub eax edx
movzx ecx [ rw-data ]
add ecx eax
mov [ ebp - 0x38 ] cx
mov edx [ ebp + 0xc ]
test dl 0x1
je r-xdata
mov [ ecx + 0x1c ] rw-data
add esp 0xfffffff4
push [ ecx + 0x18 ]
call sub_41764c
add esp 0x10
lea esp [ ebp - 0x58 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push ebx
call sub_4160b0
sub_41aad0
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] rw-data
test al 0x1
je r-xdata
leave
retn
add esp 0xfffffff4
push edx
call sub_4160b0
sub_41abe4
push ebp
mov ebp esp
sub esp 0x4c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov [ eax + 0x1c ] rw-data
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x1c ] rw-data
lea edi [ ebp - 0x20 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ ebx ]
lea edx [ ebp - 0x20 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebx ]
lea edx [ ecx - 0x8 ]
mov eax ebx
sub eax edx
movzx edx [ rw-data ]
add edx eax
mov [ ebp - 0x18 ] dx
mov eax [ ebp + 0xc ]
test al 0x2
je r-xdata
lea edi [ ebp - 0x40 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ ebx ]
lea edx [ ebp - 0x40 ]
mov [ eax + 0x1c ] edx
mov edx [ ebx ]
add edx 0xfffffff8
mov eax ebx
sub eax edx
movzx ecx [ rw-data ]
add ecx eax
mov [ ebp - 0x38 ] cx
mov edx [ ebp + 0xc ]
test dl 0x1
je r-xdata
mov [ ecx + 0x1c ] rw-data
add esp 0xfffffff4
push [ ecx + 0x18 ]
call sub_41764c
add esp 0x10
lea esp [ ebp - 0x58 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push ebx
call sub_4160b0
sub_41ac9c
push ebp
mov ebp esp
sub esp 0x4c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov [ eax + 0x1c ] rw-data
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x1c ] rw-data
lea edi [ ebp - 0x20 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ ebx ]
lea edx [ ebp - 0x20 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebx ]
lea edx [ ecx - 0x4 ]
mov eax ebx
sub eax edx
movzx edx [ rw-data ]
add edx eax
mov [ ebp - 0x18 ] dx
mov eax [ ebp + 0xc ]
test al 0x2
je r-xdata
lea edi [ ebp - 0x40 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ ebx ]
lea edx [ ebp - 0x40 ]
mov [ eax + 0x1c ] edx
mov edx [ ebx ]
add edx 0xfffffffc
mov eax ebx
sub eax edx
movzx ecx [ rw-data ]
add ecx eax
mov [ ebp - 0x38 ] cx
mov edx [ ebp + 0xc ]
test dl 0x1
je r-xdata
mov [ ecx + 0x1c ] rw-data
add esp 0xfffffff4
push [ ecx + 0x18 ]
call sub_41764c
add esp 0x10
lea esp [ ebp - 0x58 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push ebx
call sub_4160b0
sub_41ad54
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov [ esi + 0x1c ] rw-data
add esp 0xfffffff4
push [ esi + 0x18 ]
call sub_41764c
add esp 0x10
test bl 0x1
je r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
add esp 0xfffffff4
push esi
call sub_4160b0
sub_41ad8c
push ebp
mov ebp esp
sub esp 0x2c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov [ eax + 0x1c ] rw-data
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
test al 0x2
je r-xdata
lea edi [ ebp - 0x20 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ ebx ]
lea edx [ ebp - 0x20 ]
mov [ eax + 0x1c ] edx
mov edx [ ebx ]
add edx 0xfffffff8
mov eax ebx
sub eax edx
movzx ecx [ rw-data ]
add ecx eax
mov [ ebp - 0x18 ] cx
mov edx [ ebp + 0xc ]
test dl 0x1
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x1c ] rw-data
add esp 0xfffffff4
push [ eax + 0x18 ]
call sub_41764c
add esp 0x10
lea esp [ ebp - 0x38 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push ebx
call sub_4160b0
sub_41ae0c
push ebp
mov ebp esp
sub esp 0x2c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov [ eax + 0x1c ] rw-data
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
test al 0x2
je r-xdata
lea edi [ ebp - 0x20 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ ebx ]
lea edx [ ebp - 0x20 ]
mov [ eax + 0x1c ] edx
mov edx [ ebx ]
add edx 0xfffffffc
mov eax ebx
sub eax edx
movzx ecx [ rw-data ]
add ecx eax
mov [ ebp - 0x18 ] cx
mov edx [ ebp + 0xc ]
test dl 0x1
je r-xdata
mov eax [ ebx ]
mov [ eax + 0x1c ] rw-data
add esp 0xfffffff4
push [ eax + 0x18 ]
call sub_41764c
add esp 0x10
lea esp [ ebp - 0x38 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push ebx
call sub_4160b0
sub_41ae8c
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] rw-data
test al 0x1
je r-xdata
leave
retn
add esp 0xfffffff4
push edx
call sub_4160b0
sub_41aeb0
push ebp
mov ebp esp
sub esp 0x4c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov [ eax + 0x1c ] rw-data
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ eax + 0x1c ] rw-data
lea edi [ ebp - 0x20 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ ebx + 0x8 ]
lea edx [ ebp - 0x20 ]
mov [ eax + 0x1c ] edx
mov eax ebx
sub eax [ eax + 0x8 ]
add eax 0xc
movzx ecx [ rw-data ]
add ecx eax
mov [ ebp - 0x18 ] cx
mov eax [ ebx ]
mov [ eax + 0x1c ] rw-data
mov edi edx
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ ebx ]
mov [ eax + 0x1c ] edx
mov ecx [ ebx ]
lea edx [ ecx - 0x8 ]
mov eax ebx
sub eax edx
movzx edx [ rw-data ]
add edx eax
mov [ ebp - 0x18 ] dx
mov eax [ ebp + 0xc ]
test al 0x2
je r-xdata
lea edi [ ebp - 0x40 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ ebx ]
lea edx [ ebp - 0x40 ]
mov [ eax + 0x1c ] edx
mov edx [ ebx ]
add edx 0xfffffff4
mov eax ebx
sub eax edx
movzx ecx [ rw-data ]
add ecx eax
mov [ ebp - 0x38 ] cx
mov edx [ ebp + 0xc ]
test dl 0x1
je r-xdata
mov [ ecx + 0x1c ] rw-data
add esp 0xfffffff4
push [ ecx + 0x18 ]
call sub_41764c
add esp 0x10
lea esp [ ebp - 0x58 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push ebx
call sub_4160b0
sub_41af9c
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] rw-data
test al 0x1
je r-xdata
leave
retn
add esp 0xfffffff4
push edx
call sub_4160b0
sub_41afc0
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] rw-data
test al 0x1
je r-xdata
leave
retn
add esp 0xfffffff4
push edx
call sub_4160b0
sub_41afe4
push ebp
mov ebp esp
sub esp 0x20
push esi
push ebx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov ebx [ esi ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ rw-data ]
mov [ ebx ] eax
mov [ rw-data ] ebx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov eax [ ebp + 0xc ]
test al 0x1
je r-xdata
add esp 0xfffffff8
mov eax [ esi ]
push [ eax + 0x4 ]
push esi
call sub_41b0ec
add esp 0x10
mov eax [ esi ]
mov [ eax + 0x8 ] eax
mov eax [ esi ]
mov [ eax + 0x4 ] 0x0
mov eax [ esi ]
mov [ eax + 0xc ] eax
mov [ esi + 0x4 ] 0x0
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
leave
retn
add esp 0xfffffff4
push esi
call sub_4160b0
sub_41b068
push ebp
mov ebp esp
sub esp 0x20
push esi
push ebx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov ebx [ esi ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ rw-data ]
mov [ ebx ] eax
mov [ rw-data ] ebx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov eax [ ebp + 0xc ]
test al 0x1
je r-xdata
add esp 0xfffffff8
mov eax [ esi ]
push [ eax + 0x4 ]
push esi
call sub_41b150
add esp 0x10
mov eax [ esi ]
mov [ eax + 0x8 ] eax
mov eax [ esi ]
mov [ eax + 0x4 ] 0x0
mov eax [ esi ]
mov [ eax + 0xc ] eax
mov [ esi + 0x4 ] 0x0
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
leave
retn
add esp 0xfffffff4
push esi
call sub_4160b0
sub_41b0ec
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
nop
add esp 0xfffffff8
push [ esi + 0xc ]
push edi
call sub_41b0ec
add esp 0x10
mov ebx [ esi + 0x8 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ rw-data ]
mov [ esi ] eax
mov [ rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov esi ebx
test esi esi
jne r-xdata
sub_41b150
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
nop
add esp 0xfffffff8
push [ esi + 0xc ]
push edi
call sub_41b150
add esp 0x10
mov ebx [ esi + 0x8 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ rw-data ]
mov [ esi ] eax
mov [ rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov esi ebx
test esi esi
jne r-xdata
sub_41b1b4
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov esi [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
cmp edx [ eax ]
je r-xdata
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov ebx [ rw-data ]
test ebx ebx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ rw-data ] eax
add esp 0xfffffff4
push 0x18
call sub_41c140
mov ebx eax
jmp r-xdata
mov eax [ edx + 0x10 ]
cmp [ esi ] eax
jge r-xdata
mov esi ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0x8 ] esi
mov edx [ ebp + 0xc ]
mov eax [ edx ]
cmp [ ebp + 0x14 ] eax
jne r-xdata
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
mov ecx ebx
cmp ecx 0xfffffff0
je r-xdata
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov ebx [ rw-data ]
test ebx ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
cmp edx [ eax + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax + 0x4 ] esi
mov eax [ edx ]
jmp r-xdata
mov eax [ ebx ]
mov [ rw-data ] eax
add esp 0xfffffff4
push 0x18
call sub_41c140
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov ebx esi
mov edx [ ebp + 0xc ]
mov eax [ edx ]
lea edi [ eax + 0x4 ]
mov [ esi ] 0x0
cmp esi [ eax + 0x4 ]
je r-xdata
mov [ eax + 0x8 ] esi
jmp r-xdata
mov [ eax + 0xc ] esi
mov esi ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0xc ] esi
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov edx [ ebp + 0x14 ]
cmp edx [ eax + 0xc ]
jne r-xdata
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
mov ecx ebx
cmp ecx 0xfffffff0
je r-xdata
mov eax [ edi ]
mov [ eax ] 0x1
mov edx [ ebp + 0xc ]
inc [ edx + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn 0x4
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x8 ]
cmp ecx eax
jne r-xdata
test eax eax
je r-xdata
mov eax [ edx + 0xc ]
test eax eax
je r-xdata
mov edx [ ecx + 0x8 ]
cmp ebx edx
jne r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ecx + 0xc ]
cmp ebx edx
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax ] 0x1
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax ] 0x0
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0xc ]
mov eax [ ecx + 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov ebx ecx
mov eax [ edx + 0xc ]
mov [ ebx + 0x8 ] eax
mov eax [ edx + 0xc ]
test eax eax
je r-xdata
mov [ ecx ] 0x1
mov [ eax ] 0x1
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax ] 0x0
mov eax [ ebx + 0x4 ]
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax ] 0x1
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax ] 0x0
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
mov eax [ ecx + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
mov ebx ecx
mov eax [ edx + 0x8 ]
mov [ ebx + 0xc ] eax
mov eax [ edx + 0x8 ]
test eax eax
je r-xdata
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
cmp edx [ edi ]
jne r-xdata
mov [ eax + 0x4 ] edx
mov eax [ ebx + 0x4 ]
mov [ edx + 0x4 ] eax
cmp ebx [ edi ]
jne r-xdata
mov [ eax + 0x4 ] ebx
cmp ebx [ edi ]
je r-xdata
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
cmp edx [ edi ]
jne r-xdata
mov [ eax + 0x4 ] edx
mov eax [ ebx + 0x4 ]
mov [ edx + 0x4 ] eax
cmp ebx [ edi ]
jne r-xdata
mov [ eax + 0x4 ] ebx
mov eax [ edx + 0x4 ]
cmp edx [ eax + 0x8 ]
jne r-xdata
mov [ edi ] ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp ebx [ eax + 0xc ]
jne r-xdata
mov [ edi ] edx
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edx + 0x4 ]
cmp edx [ eax + 0xc ]
jne r-xdata
mov [ edi ] ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ edi ] edx
jmp r-xdata
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov [ ecx + 0x8 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov [ edx + 0xc ] ecx
mov [ ecx + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ ecx + 0xc ] edx
jmp r-xdata
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edx + 0x4 ] ecx
sub_41b488
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov esi [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
cmp edx [ eax ]
je r-xdata
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov ebx [ rw-data ]
test ebx ebx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ rw-data ] eax
add esp 0xfffffff4
push 0x18
call sub_41c140
mov ebx eax
jmp r-xdata
mov eax [ edx + 0x10 ]
cmp [ esi ] eax
jge r-xdata
mov esi ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0x8 ] esi
mov edx [ ebp + 0xc ]
mov eax [ edx ]
cmp [ ebp + 0x14 ] eax
jne r-xdata
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
mov ecx ebx
cmp ecx 0xfffffff0
je r-xdata
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov ebx [ rw-data ]
test ebx ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
cmp edx [ eax + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax + 0x4 ] esi
mov eax [ edx ]
jmp r-xdata
mov eax [ ebx ]
mov [ rw-data ] eax
add esp 0xfffffff4
push 0x18
call sub_41c140
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov ebx esi
mov edx [ ebp + 0xc ]
mov eax [ edx ]
lea edi [ eax + 0x4 ]
mov [ esi ] 0x0
cmp esi [ eax + 0x4 ]
je r-xdata
mov [ eax + 0x8 ] esi
jmp r-xdata
mov [ eax + 0xc ] esi
mov esi ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0xc ] esi
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov edx [ ebp + 0x14 ]
cmp edx [ eax + 0xc ]
jne r-xdata
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
mov ecx ebx
cmp ecx 0xfffffff0
je r-xdata
mov eax [ edi ]
mov [ eax ] 0x1
mov edx [ ebp + 0xc ]
inc [ edx + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn 0x4
mov eax [ ebp + 0x14 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x8 ]
cmp ecx eax
jne r-xdata
test eax eax
je r-xdata
mov eax [ edx + 0xc ]
test eax eax
je r-xdata
mov edx [ ecx + 0x8 ]
cmp ebx edx
jne r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov edx [ ecx + 0xc ]
cmp ebx edx
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax ] 0x1
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax ] 0x0
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0xc ]
mov eax [ ecx + 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov ebx ecx
mov eax [ edx + 0xc ]
mov [ ebx + 0x8 ] eax
mov eax [ edx + 0xc ]
test eax eax
je r-xdata
mov [ ecx ] 0x1
mov [ eax ] 0x1
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax ] 0x0
mov eax [ ebx + 0x4 ]
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax ] 0x1
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax ] 0x0
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
mov eax [ ecx + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
mov ebx ecx
mov eax [ edx + 0x8 ]
mov [ ebx + 0xc ] eax
mov eax [ edx + 0x8 ]
test eax eax
je r-xdata
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
cmp edx [ edi ]
jne r-xdata
mov [ eax + 0x4 ] edx
mov eax [ ebx + 0x4 ]
mov [ edx + 0x4 ] eax
cmp ebx [ edi ]
jne r-xdata
mov [ eax + 0x4 ] ebx
cmp ebx [ edi ]
je r-xdata
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
cmp edx [ edi ]
jne r-xdata
mov [ eax + 0x4 ] edx
mov eax [ ebx + 0x4 ]
mov [ edx + 0x4 ] eax
cmp ebx [ edi ]
jne r-xdata
mov [ eax + 0x4 ] ebx
mov eax [ edx + 0x4 ]
cmp edx [ eax + 0x8 ]
jne r-xdata
mov [ edi ] ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp ebx [ eax + 0xc ]
jne r-xdata
mov [ edi ] edx
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ edx + 0x4 ]
cmp edx [ eax + 0xc ]
jne r-xdata
mov [ edi ] ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ edi ] edx
jmp r-xdata
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov [ ecx + 0x8 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov [ edx + 0xc ] ecx
mov [ ecx + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ ecx + 0xc ] edx
jmp r-xdata
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edx + 0x4 ] ecx
sub_41b75c
push ebp
mov ebp esp
sub esp 0x2c
push edi
push esi
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
cmp edx [ eax + 0x8 ]
je r-xdata
mov eax edx
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
sar eax 0x2
mov [ ebp - 0x14 ] 0x1
test eax eax
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] eax
shl [ ebp - 0x14 ] 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
lea ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp + 0x10 ]
mov ebx [ edx ]
lea edx [ eax - 0x4 ]
sub edx [ ebp + 0xc ]
add esp 0xfffffffc
and edx 0xfffffffc
push edx
mov ecx [ ebp + 0xc ]
push ecx
sub eax edx
push eax
call memmove
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
jmp r-xdata
mov eax [ edx - 0x4 ]
mov [ edx ] eax
xor edi edi
mov ebx [ ebp - 0x14 ]
shl ebx 0x2
cmp ebx 0x80
jbe r-xdata
lea esp [ ebp - 0x38 ]
pop ebx
pop esi
pop edi
leave
retn
lea esi [ edx + 0x4 ]
add esp 0xfffffffc
mov eax [ ebp + 0x8 ]
mov ebx [ eax + 0x4 ]
sub ebx [ ebp + 0xc ]
mov eax ebx
and al 0xfc
push eax
mov edx [ ebp + 0xc ]
push edx
push esi
call memmove
add esi ebx
mov [ ebp - 0x18 ] esi
add esp 0x10
mov ecx [ ebp + 0x8 ]
mov esi [ ecx ]
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x2
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx ]
mov [ esi ] eax
lea esi [ ebx + 0x7 ]
mov eax esi
shr eax 0x3
lea edi [ eax * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov ebx [ edi + rw-data ]
test ebx ebx
jne r-xdata
add esp 0xfffffff4
push ebx
call malloc
add esp 0x10
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x14 ]
lea eax [ edi + ecx * 4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
shl eax 0x2
cmp eax 0x80
jbe r-xdata
mov eax [ ebx ]
mov [ edi + rw-data ] eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov edi ebx
jmp r-xdata
add esp 0xfffffff4
and esi 0xfffffff8
push esi
call sub_41c140
mov ebx eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov edi ebx
add esp 0x10
jmp r-xdata
mov edi eax
jmp r-xdata
add esp 0xfffffff4
push ebx
call sub_41c0e8
add esp 0x10
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push esi
call free
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
add esp 0xfffffffc
mov ebx [ ebp + 0xc ]
sub ebx edx
mov eax ebx
and al 0xfc
push eax
push edx
push edi
call memmove
lea edx [ ebx + edi ]
add esp 0x10
mov esi edx
test esi esi
je r-xdata
sub_41b940
push ebp
mov ebp esp
sub esp 0x2c
push edi
push esi
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
cmp edx [ eax + 0x8 ]
je r-xdata
mov eax edx
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
sar eax 0x2
mov [ ebp - 0x14 ] 0x1
test eax eax
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] eax
shl [ ebp - 0x14 ] 0x1
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
lea ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp + 0x10 ]
mov ebx [ edx ]
lea edx [ eax - 0x4 ]
sub edx [ ebp + 0xc ]
add esp 0xfffffffc
and edx 0xfffffffc
push edx
mov ecx [ ebp + 0xc ]
push ecx
sub eax edx
push eax
call memmove
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
jmp r-xdata
mov eax [ edx - 0x4 ]
mov [ edx ] eax
xor edi edi
mov ebx [ ebp - 0x14 ]
shl ebx 0x2
cmp ebx 0x80
jbe r-xdata
lea esp [ ebp - 0x38 ]
pop ebx
pop esi
pop edi
leave
retn
lea esi [ edx + 0x4 ]
add esp 0xfffffffc
mov eax [ ebp + 0x8 ]
mov ebx [ eax + 0x4 ]
sub ebx [ ebp + 0xc ]
mov eax ebx
and al 0xfc
push eax
mov edx [ ebp + 0xc ]
push edx
push esi
call memmove
add esi ebx
mov [ ebp - 0x18 ] esi
add esp 0x10
mov ecx [ ebp + 0x8 ]
mov esi [ ecx ]
mov eax [ ecx + 0x8 ]
sub eax esi
sar eax 0x2
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx ]
mov [ esi ] eax
lea esi [ ebx + 0x7 ]
mov eax esi
shr eax 0x3
lea edi [ eax * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov ebx [ edi + rw-data ]
test ebx ebx
jne r-xdata
add esp 0xfffffff4
push ebx
call malloc
add esp 0x10
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4 ] edx
mov ecx [ ebp - 0x14 ]
lea eax [ edi + ecx * 4 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
shl eax 0x2
cmp eax 0x80
jbe r-xdata
mov eax [ ebx ]
mov [ edi + rw-data ] eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov edi ebx
jmp r-xdata
add esp 0xfffffff4
and esi 0xfffffff8
push esi
call sub_41c140
mov ebx eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov edi ebx
add esp 0x10
jmp r-xdata
mov edi eax
jmp r-xdata
add esp 0xfffffff4
push ebx
call sub_41c0e8
add esp 0x10
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push esi
call free
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
add esp 0xfffffffc
mov ebx [ ebp + 0xc ]
sub ebx edx
mov eax ebx
and al 0xfc
push eax
push edx
push edi
call memmove
lea edx [ ebx + edi ]
add esp 0x10
mov esi edx
test esi esi
je r-xdata
sub_41bb24
push ebp
mov ebp esp
sub esp 0x4c
push edi
push esi
push ebx
mov eax [ ebp + 0x8 ]
mov ebx [ eax + 0x4 ]
cmp ebx [ eax + 0x8 ]
je r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
sub eax [ edx ]
sar eax 0x2
mov [ ebp - 0x30 ] 0x1
test eax eax
je r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov [ ebp - 0x30 ] eax
shl [ ebp - 0x30 ] 0x1
mov edx [ ebp + 0x8 ]
add [ edx + 0x4 ] 0x4
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx - 0x4 ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x34 ] 0x0
mov ebx [ ebp - 0x30 ]
shl ebx 0x2
cmp ebx 0x80
jbe r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea eax [ ebx + 0x4 ]
add esp 0xfffffffe
push 0x0
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
mov edx [ ebp + 0xc ]
push edx
call sub_41ea94
mov [ ebp - 0x38 ] eax
add esp 0x10
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x3c ] eax
mov edx [ ebp + 0x8 ]
mov edi [ edx ]
cmp edi eax
je r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
lea esi [ ebx + 0x7 ]
mov eax esi
shr eax 0x3
lea edi [ eax * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov ebx [ edi + rw-data ]
test ebx ebx
jne r-xdata
add esp 0xfffffff4
push ebx
call malloc
add esp 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
add [ ebp - 0x28 ] 0xfffffffc
add [ ebp - 0x24 ] 0xfffffffc
mov eax [ ebp - 0x28 ]
cmp [ ebp - 0x24 ] eax
je r-xdata
mov [ ebp - 0x10 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
lea edx [ eax - 0x8 ]
mov [ ebp - 0x24 ] edx
add eax 0xfffffffc
mov [ ebp - 0x28 ] eax
mov edi edx
sub edi [ ebp + 0xc ]
sar edi 0x2
test edi edi
jle r-xdata
mov [ ebx ] eax
mov eax [ ebp + 0x8 ]
mov esi [ eax ]
mov edx eax
mov eax [ edx + 0x8 ]
sub eax esi
sar eax 0x2
je r-xdata
mov esi esi
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
mov eax [ ebx ]
mov [ edi + rw-data ] eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov [ ebp - 0x34 ] ebx
jmp r-xdata
add esp 0xfffffff4
and esi 0xfffffff8
push esi
call sub_41c140
mov ebx eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov [ ebp - 0x34 ] ebx
add esp 0x10
jmp r-xdata
mov [ ebp - 0x34 ] eax
jmp r-xdata
add esp 0xfffffff4
push ebx
call sub_41c0e8
add esp 0x10
mov esi [ ebp - 0x10 ]
lea edi [ esi - 0x10 ]
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0xc ]
mov esi [ eax ]
lea edi [ esi - 0x10 ]
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
dec edi
test edi edi
jg r-xdata
mov esi [ eax ]
lea edx [ esi - 0x10 ]
mov [ ebp - 0x2c ] edx
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x38 ]
mov [ eax + 0x4 ] edx
shl [ ebp - 0x30 ] 0x2
mov edx [ ebp - 0x34 ]
add edx [ ebp - 0x30 ]
mov [ eax + 0x8 ] edx
shl eax 0x2
cmp eax 0x80
jbe r-xdata
add edi 0x4
cmp edi [ ebp - 0x3c ]
jne r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
mov [ ebx ] eax
add esp 0xfffffffe
push 0x0
mov eax [ ebp - 0x34 ]
push eax
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_41ea94
mov ebx eax
add esp 0x10
test ebx ebx
je r-xdata
lea esp [ ebp - 0x58 ]
pop ebx
pop esi
pop edi
leave
retn
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
mov eax [ ebp - 0x10 ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
lea ebx [ eax + 0x7 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi ] eax
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push esi
call free
jmp r-xdata
mov esi [ edi ]
lea eax [ esi - 0x10 ]
mov [ ebp - 0x40 ] eax
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov edx [ ebp - 0x40 ]
mov [ ebx + rw-data ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
mov eax [ ebp - 0x40 ]
push eax
call free
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov [ ebx + rw-data ] edi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
jmp r-xdata
add esp 0xfffffff4
push edi
call free
jmp r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov [ ebx + rw-data ] edi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
push edi
call free
add esp 0x10
jmp r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov edx [ ebp - 0x2c ]
mov [ ebx + rw-data ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
mov eax [ ebp - 0x2c ]
push eax
call free
add esp 0x10
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov edx [ ebp - 0x28 ]
mov [ edx ] eax
sub_41bfb4
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
cmp edx esi
jb r-xdata
add ecx ebx
mov [ rw-data ] ecx
mov eax ebx
jmp r-xdata
mov eax [ rw-data ]
shr eax 0x4
add eax 0x7
and al 0xf8
lea edi [ eax + ecx * 2 ]
test edx edx
je r-xdata
mov eax edx
xor edx edx
div esi
mov edx [ ebp + 0xc ]
mov [ edx ] eax
imul esi eax
mov eax [ rw-data ]
add esi eax
mov [ rw-data ] esi
jmp r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
add esp 0xfffffff4
push edi
call malloc
mov [ rw-data ] eax
add esp 0x10
test eax eax
jne r-xdata
lea eax [ edx + 0x7 ]
shr eax 0x3
lea eax [ eax * 4 - 0x4 ]
mov edx [ eax + rw-data ]
mov [ ebx ] edx
mov [ eax + rw-data ] ebx
add [ rw-data ] edi
add edi [ rw-data ]
mov [ rw-data ] edi
jmp r-xdata
mov ecx esi
cmp ecx 0x80
ja r-xdata
mov ecx esi
mov eax [ ebp + 0xc ]
imul ecx [ eax ]
mov ebx [ rw-data ]
mov edx [ rw-data ]
sub edx ebx
cmp edx ecx
jb r-xdata
mov [ rw-data ] 0x0
add esp 0xfffffff4
push edi
call malloc
add esp 0x10
test eax eax
jne r-xdata
mov esi esi
mov [ rw-data ] eax
add esp 0xfffffff4
push edi
call sub_41c0e8
add esp 0x10
mov eax [ edx ]
mov [ ebx + rw-data ] eax
mov [ rw-data ] edx
add edx ecx
mov [ rw-data ] edx
jmp r-xdata
add ecx 0x8
cmp ecx 0x80
jbe r-xdata
lea eax [ ecx + 0x7 ]
shr eax 0x3
lea ebx [ eax * 4 - 0x4 ]
mov edx [ ebx + rw-data ]
test edx edx
jne r-xdata
sub_41c0e8
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov esi esi
call eax
add esp 0xfffffff4
push ebx
call malloc
add esp 0x10
test eax eax
je r-xdata
add esp 0xfffffff8
push r-xdata
push rw-data
call sub_40e034
add esp 0x10
add esp 0xfffffff4
push eax
call sub_40e498
add esp 0x10
add esp 0xfffffff4
push 0x1
call exit
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
sub_41c140
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov [ ebp - 0x4 ] 0x14
add esp 0xfffffff8
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_41bfb4
mov ebx eax
mov edi [ ebp - 0x4 ]
cmp edi 0x1
je r-xdata
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
add eax 0x7
shr eax 0x3
lea eax [ eax * 4 - 0x4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ edx + ebx ]
mov [ eax + rw-data ] ecx
mov esi 0x1
mov edx ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx ]
cmp edi 0x2
je r-xdata
mov [ edx ] 0x0
mov eax ebx
mov [ edx ] ecx
inc esi
mov edx ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + edx ]
mov eax [ ebp - 0x4 ]
dec eax
cmp eax esi
jne r-xdata
sub_41c1bc
push ebp
mov ebp esp
sub esp 0x4c
push edi
push esi
push ebx
call sub_416270
mov edx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] rw-data
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop ebx
pop esi
pop edi
leave
retn
sub_41c214
push ebp
mov ebp esp
sub esp 0x15c
push edi
push esi
push ebx
call sub_416270
mov [ ebp - 0x144 ] eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x144 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x20 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x144 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] rw-data
lea edi [ ebp - 0x60 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ edx ]
lea edx [ ebp - 0x60 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
add eax 0xfffffff8
mov edx ecx
sub edx eax
movzx eax [ rw-data ]
add eax edx
mov [ ebp - 0x58 ] ax
mov [ ecx + 0x4 ] 0x0
mov edx [ ebp - 0x144 ]
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x144 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x9c ] 0x0
lea eax [ ebp - 0x98 ]
mov [ ebp - 0x98 ] ebp
mov [ eax + 0x4 ] sub_41c458
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0xa0 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] rw-data
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x58
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov [ eax + 0x1c ] rw-data
mov [ eax + 0x12 ] 0x4
mov [ eax + 0x13 ] 0x0
mov [ edx + 0x58 ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0x20
mov [ eax + 0xc ] 0x11
mov [ eax + 0x14 ] 0x6
mov [ eax + 0x18 ] 0x0
add esp 0xfffffff8
push [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
add edx 0x8
mov [ ebp - 0x148 ] edx
push edx
call sub_40ea28
mov ecx [ ebp - 0x144 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0xdc ] 0x0
lea eax [ ebp - 0xd8 ]
mov [ ebp - 0xd8 ] ebp
mov [ eax + 0x4 ] sub_41c458
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0xe0 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ ebp - 0x148 ]
test edx edx
jne r-xdata
lea edi [ ebp - 0xc0 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ edx ]
lea edx [ ebp - 0xc0 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
add eax 0xffffffa8
mov edx ecx
sub edx eax
movzx eax [ rw-data ]
add eax edx
mov [ ebp - 0xb8 ] ax
mov [ eax + 0x12 ] 0x0
mov [ eax + 0x12 ] 0x4
jmp r-xdata
lea esp [ ebp - 0x168 ]
pop ebx
pop esi
pop edi
leave
retn
mov [ eax + 0x13 ] 0x0
mov [ eax ] edx
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0x20
mov [ eax + 0xc ] 0x11
mov [ eax + 0x14 ] 0x6
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp - 0x144 ]
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_41c458
mov edx [ ebp - 0x144 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x120 ] eax
mov [ ebp - 0x11c ] 0x0
lea eax [ ebp - 0x118 ]
mov [ ebp - 0x118 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea ecx [ ebp - 0x120 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] rw-data
lea edi [ ebp - 0x80 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ edx ]
lea edx [ ebp - 0x80 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
add eax 0xfffffff8
sub ecx eax
mov eax ecx
movzx edx [ rw-data ]
add edx eax
mov [ ebp - 0x78 ] dx
mov ecx [ ebp - 0x144 ]
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
call sub_416430
mov edx [ ebp - 0x144 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0x0
lea eax [ ebp - 0x138 ]
mov [ ebp - 0x138 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea ecx [ ebp - 0x140 ]
mov [ edx + 0x4 ] ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x144 ]
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
call sub_416430
nop
call sub_4161e0
lea esi [ esi ]
lea esp [ ebp - 0x168 ]
pop ebx
pop esi
pop edi
leave
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] rw-data
add esp 0xfffffff4
push [ eax + 0x18 ]
call sub_41764c
add esp 0x10
sub_41c560
push ebp
mov ebp esp
sub esp 0x15c
push edi
push esi
push ebx
call sub_416270
mov [ ebp - 0x144 ] eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x144 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x20 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp - 0x144 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea eax [ ebp - 0x40 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] rw-data
lea edi [ ebp - 0x60 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ edx ]
lea edx [ ebp - 0x60 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
add eax 0xfffffffc
mov edx ecx
sub edx eax
movzx eax [ rw-data ]
add eax edx
mov [ ebp - 0x58 ] ax
mov edx [ ebp - 0x144 ]
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp - 0x144 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x9c ] 0x0
lea eax [ ebp - 0x98 ]
mov [ ebp - 0x98 ] ebp
mov [ eax + 0x4 ] sub_41c79c
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0xa0 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] rw-data
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x54
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov [ eax + 0x1c ] rw-data
mov [ eax + 0x12 ] 0x4
mov [ eax + 0x13 ] 0x0
mov [ edx + 0x54 ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0x20
mov [ eax + 0xc ] 0x11
mov [ eax + 0x14 ] 0x6
mov [ eax + 0x18 ] 0x0
add esp 0xfffffff8
push [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
add edx 0x4
mov [ ebp - 0x148 ] edx
push edx
call sub_40ea28
mov ecx [ ebp - 0x144 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0xdc ] 0x0
lea eax [ ebp - 0xd8 ]
mov [ ebp - 0xd8 ] ebp
mov [ eax + 0x4 ] sub_41c79c
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0xe0 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov edx [ ebp - 0x148 ]
test edx edx
jne r-xdata
lea edi [ ebp - 0xc0 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ edx ]
lea edx [ ebp - 0xc0 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
add eax 0xffffffac
mov edx ecx
sub edx eax
movzx eax [ rw-data ]
add eax edx
mov [ ebp - 0xb8 ] ax
mov [ eax + 0x12 ] 0x0
mov [ eax + 0x12 ] 0x4
jmp r-xdata
lea esp [ ebp - 0x168 ]
pop ebx
pop esi
pop edi
leave
retn
mov [ eax + 0x13 ] 0x0
mov [ eax ] edx
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0x20
mov [ eax + 0xc ] 0x11
mov [ eax + 0x14 ] 0x6
mov [ eax + 0x18 ] 0x0
mov ecx [ ebp - 0x144 ]
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_41c79c
mov edx [ ebp - 0x144 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x120 ] eax
mov [ ebp - 0x11c ] 0x0
lea eax [ ebp - 0x118 ]
mov [ ebp - 0x118 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea ecx [ ebp - 0x120 ]
mov [ edx + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] rw-data
lea edi [ ebp - 0x80 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ edx ]
lea edx [ ebp - 0x80 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
add eax 0xfffffffc
sub ecx eax
mov eax ecx
movzx edx [ rw-data ]
add edx eax
mov [ ebp - 0x78 ] dx
mov ecx [ ebp - 0x144 ]
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
call sub_416430
mov edx [ ebp - 0x144 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0x0
lea eax [ ebp - 0x138 ]
mov [ ebp - 0x138 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea ecx [ ebp - 0x140 ]
mov [ edx + 0x4 ] ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x144 ]
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
mov [ ecx + 0x4 ] eax
call sub_416430
nop
call sub_4161e0
lea esi [ esi ]
lea esp [ ebp - 0x168 ]
pop ebx
pop esi
pop edi
leave
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] rw-data
add esp 0xfffffff4
push [ eax + 0x18 ]
call sub_41764c
add esp 0x10
sub_41c8a4
push ebp
mov ebp esp
sub esp 0x4c
push edi
push esi
push ebx
call sub_416270
mov edx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] rw-data
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop ebx
pop esi
pop edi
leave
retn
sub_41c8fc
push ebp
mov ebp esp
sub esp 0x8c
push edi
push esi
push ebx
call sub_416270
mov edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] rw-data
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] 0x0
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x60 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] rw-data
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
sub_41c994
push ebp
mov ebp esp
sub esp 0x4c
push edi
push esi
push ebx
call sub_416270
mov edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] rw-data
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
sub_41c9f0
push ebp
mov ebp esp
sub esp 0x8c
push edi
push esi
push ebx
call sub_416270
mov edx eax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] rw-data
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebp
mov [ ebp - 0x14 ] r-xdata
mov [ ebp - 0x10 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] 0x0
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x60 ]
mov [ edx + 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x4 ] rw-data
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0xc ] eax
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
sub_41ca8c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x1c ] rw-data
test eax eax
jne r-xdata
mov [ edx + 0x12 ] 0x0
mov [ edx + 0x12 ] 0x4
jmp r-xdata
mov [ edx + 0x13 ] 0x0
mov [ edx ] eax
mov eax [ ebp + 0x10 ]
mov [ edx + 0x4 ] eax
mov [ edx + 0x8 ] 0x0
mov [ edx + 0x10 ] 0x20
mov [ edx + 0xc ] 0x11
mov [ edx + 0x14 ] 0x6
mov [ edx + 0x18 ] 0x0
mov eax edx
leave
retn
sub_41cae0
push ebp
mov ebp esp
sub esp 0x6c
push edi
push esi
push ebx
call sub_416270
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea ecx [ ebp - 0x20 ]
mov [ ebx + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] rw-data
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x8
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov [ eax + 0x1c ] rw-data
mov [ eax + 0x12 ] 0x4
mov [ eax + 0x13 ] 0x0
mov [ edx + 0x8 ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0x20
mov [ eax + 0xc ] 0x11
mov [ eax + 0x14 ] 0x6
mov [ eax + 0x18 ] 0x0
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
mov eax edx
pop ebx
pop esi
pop edi
leave
retn
lea edi [ ebp - 0x40 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ edx ]
lea edx [ ebp - 0x40 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
add eax 0xfffffff8
mov edx ecx
sub edx eax
movzx eax [ rw-data ]
add eax edx
mov [ ebp - 0x38 ] ax
sub_41cbc0
push ebp
mov ebp esp
sub esp 0x6c
push edi
push esi
push ebx
call sub_416270
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea ecx [ ebp - 0x20 ]
mov [ ebx + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] rw-data
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x4
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov [ eax + 0x1c ] rw-data
mov [ eax + 0x12 ] 0x4
mov [ eax + 0x13 ] 0x0
mov [ edx + 0x4 ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0x20
mov [ eax + 0xc ] 0x11
mov [ eax + 0x14 ] 0x6
mov [ eax + 0x18 ] 0x0
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop ebx
pop esi
pop edi
leave
retn
lea edi [ ebp - 0x40 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ edx ]
lea edx [ ebp - 0x40 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
add eax 0xfffffffc
mov edx ecx
sub edx eax
movzx eax [ rw-data ]
add eax edx
mov [ ebp - 0x38 ] ax
sub_41cc98
push ebp
mov ebp esp
sub esp 0x4c
push edi
push esi
push ebx
call sub_416270
mov edx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] rw-data
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] rw-data
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop ebx
pop esi
pop edi
leave
retn
sub_41ccf0
push ebp
mov ebp esp
sub esp 0x1bc
push edi
push esi
push ebx
call sub_416270
mov ebx eax
mov [ ebp - 0x1a4 ] ebx
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
mov edx ebx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] r-xdata
mov [ ebp - 0x30 ] esp
lea ecx [ ebp - 0x40 ]
mov [ ebx + 0x4 ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] rw-data
lea edi [ ebp - 0x60 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ edx ]
lea edx [ ebp - 0x60 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
add eax 0xfffffff8
mov edx ecx
sub edx eax
movzx eax [ rw-data ]
add eax edx
mov [ ebp - 0x58 ] ax
mov [ ecx + 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0xa0 ] eax
mov [ ebp - 0x9c ] 0x0
lea eax [ ebp - 0x98 ]
mov [ ebp - 0x98 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea ecx [ ebp - 0xa0 ]
mov [ ebx + 0x4 ] ecx
mov edx [ ebp - 0x1a4 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0xbc ] 0x0
mov [ ebp - 0xb8 ] ecx
mov [ ebp - 0xb4 ] r-xdata
mov [ ebp - 0xb0 ] esp
lea ecx [ ebp - 0xc0 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
mov [ eax + 0x1c ] rw-data
lea edi [ ebp - 0xe0 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
lea ecx [ ebp - 0xe0 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
sub eax [ eax + 0x8 ]
add eax 0xc
movzx ecx [ rw-data ]
add ecx eax
mov [ ebp - 0xd8 ] cx
mov eax [ edx + 0x4 ]
mov eax [ eax ]
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x120 ] eax
mov [ ebp - 0x11c ] 0x0
lea eax [ ebp - 0x118 ]
mov [ ebp - 0x118 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x120 ]
mov [ ebx + 0x4 ] eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ eax + 0x1c ] rw-data
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xc
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
mov [ edx ] eax
mov [ eax + 0x1c ] rw-data
mov [ eax + 0x12 ] 0x4
mov [ eax + 0x13 ] 0x0
mov [ edx + 0xc ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] 0x0
mov [ eax + 0x10 ] 0x20
mov [ eax + 0xc ] 0x11
mov [ eax + 0x14 ] 0x6
mov [ eax + 0x18 ] 0x0
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
mov eax [ eax ]
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop ebx
pop esi
pop edi
leave
retn
lea edi [ ebp - 0x140 ]
mov esi rw-data
cld
mov ecx 0x6
[ edi ] [ esi ]
mov eax [ edx ]
lea edx [ ebp - 0x140 ]
mov [ eax + 0x1c ] edx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
add eax 0xfffffff4
mov edx ecx
sub edx eax
movzx eax [ rw-data ]
add eax edx
mov [ ebp - 0x138 ] ax
sub_41cf6c
push ebp
mov ebp esp
sub esp 0x3c
push edi
push esi
push ebx
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ebx
jmp r-xdata
lea edi [ ebx * 2 + 0x2 ]
cmp edi [ ebp + 0x10 ]
jl r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax + edi * 4 ]
lea eax [ eax + edi * 4 - 0x4 ]
push 0xffffffff
push 0x0
push eax
push edx
call sub_41eda4
shr eax 0x1f
add esp 0x10
test al al
je r-xdata
jne r-xdata
mov edx [ ebp + 0x8 ]
lea ebx [ edx + ebx * 4 ]
mov [ ebp - 0x18 ] ebx
lea ecx [ edx + edi * 4 ]
mov [ ebp - 0x1c ] ecx
cmp ecx ebx
je r-xdata
dec edi
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea ebx [ eax + ebx * 4 ]
mov [ ebp - 0x24 ] ebx
lea edx [ eax + edi * 4 - 0x4 ]
mov [ ebp - 0x28 ] edx
cmp edx ebx
je r-xdata
mov ebx edi
mov esi [ ebx ]
lea eax [ esi - 0x10 ]
mov [ ebp - 0x20 ] eax
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ edi - 0x1 ]
mov esi [ ebx ]
lea ecx [ esi - 0x10 ]
mov [ ebp - 0x2c ] ecx
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x1c ]
mov eax [ edx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
pop edi
leave
retn
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
push ebx
mov eax [ ebp + 0x8 ]
push eax
call sub_41da5c
add esp 0x10
mov edx [ ebp + 0x14 ]
mov esi [ edx ]
lea edi [ esi - 0x10 ]
mov eax [ esi - 0x8 ]
lea ecx [ eax - 0x1 ]
mov [ esi - 0x8 ] ecx
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x28 ]
mov eax [ edx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebx + rw-data ] eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
mov ecx [ ebp - 0x20 ]
push ecx
call free
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov [ ebx + rw-data ] edi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push edi
call free
jmp r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov ecx [ ebp - 0x2c ]
mov [ ebx + rw-data ] ecx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
push ecx
call free
add esp 0x10
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ecx ] eax
mov ecx [ ebp - 0x24 ]
mov [ ecx ] eax
sub_41d1f8
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov eax esi
sub eax edx
sar eax 0x2
cmp eax 0x10
jle r-xdata
add esp 0xfffffff8
push esi
push edx
call sub_41d244
add esp 0xfffffff8
lea ebx [ edx + 0x40 ]
push ebx
push edx
call sub_41d244
add esp 0x10
add esp 0xfffffffc
push 0x0
push esi
push ebx
call sub_41e5a0
jmp r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
sub_41d244
push ebp
mov ebp esp
sub esp 0x4c
push edi
push esi
push ebx
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x8 ] eax
je r-xdata
lea esp [ ebp - 0x58 ]
pop ebx
pop esi
pop edi
leave
retn
mov edx [ ebp + 0x8 ]
add edx 0x4
mov [ ebp - 0x24 ] edx
cmp edx eax
je r-xdata
mov esi esi
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x10 ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
mov edx eax
add edx 0x4
mov [ ebp - 0x30 ] edx
mov edi eax
sub edi [ ebp + 0x8 ]
sar edi 0x2
test edi edi
jle r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
push 0xffffffff
push 0x0
mov edx [ ebp + 0x8 ]
push edx
push eax
call sub_41eda4
shr eax 0x1f
add esp 0x10
test al al
je r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ ebp - 0x28 ] eax
je r-xdata
mov esi esi
add [ ebp - 0x24 ] 0x4
mov eax [ ebp + 0xc ]
cmp [ ebp - 0x24 ] eax
jne r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
mov [ ebp - 0x20 ] eax
add esp 0xfffffff8
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
call sub_41e5f4
add esp 0x10
mov esi [ ebp - 0x10 ]
lea edi [ esi - 0x10 ]
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov esi [ eax ]
lea edi [ esi - 0x10 ]
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
dec edi
test edi edi
jg r-xdata
mov esi [ eax ]
lea edx [ esi - 0x10 ]
mov [ ebp - 0x34 ] edx
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov [ ebx + rw-data ] edi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
push edi
call free
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x10 ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
add [ ebp - 0x30 ] 0xfffffffc
add [ ebp - 0x2c ] 0xfffffffc
mov eax [ ebp - 0x30 ]
cmp [ ebp - 0x2c ] eax
je r-xdata
mov edx [ ebp - 0x2c ]
mov eax [ edx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov [ ebx + rw-data ] edi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
push edi
call free
add esp 0x10
jmp r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov edx [ ebp - 0x34 ]
mov [ ebx + rw-data ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
mov eax [ ebp - 0x34 ]
push eax
call free
add esp 0x10
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
mov edx [ ebp - 0x30 ]
mov [ edx ] eax
sub_41d4dc
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
jmp r-xdata
mov eax esi
sub eax [ ebp + 0x8 ]
sar eax 0x2
cmp eax 0x10
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
dec [ ebp + 0x14 ]
mov eax esi
sub eax [ ebp + 0x8 ]
mov edx eax
shr edx 0x1f
sar eax 0x2
add eax edx
sar eax 0x1
mov edx [ ebp + 0x8 ]
lea ebx [ edx + eax * 4 ]
lea edi [ esi - 0x4 ]
push 0xffffffff
push 0x0
push ebx
push edx
call sub_41eda4
shr eax 0x1f
add esp 0x10
test al al
je r-xdata
push 0x0
push esi
push esi
mov eax [ ebp + 0x8 ]
push eax
call sub_41d87c
jmp r-xdata
push 0xffffffff
push 0x0
push edi
mov edx [ ebp + 0x8 ]
push edx
call sub_41eda4
shr eax 0x1f
add esp 0x10
test al al
je r-xdata
push 0xffffffff
push 0x0
push edi
push ebx
call sub_41eda4
shr eax 0x1f
add esp 0x10
test al al
je r-xdata
push 0xffffffff
push 0x0
push edi
push ebx
call sub_41eda4
shr eax 0x1f
add esp 0x10
mov edx ebx
mov edx [ ebp + 0x8 ]
jmp r-xdata
push 0xffffffff
push 0x0
push edi
mov eax [ ebp + 0x8 ]
push eax
call sub_41eda4
shr eax 0x1f
add esp 0x10
mov edx [ ebp + 0x8 ]
jmp r-xdata
mov edx ebx
jmp r-xdata
mov eax [ edx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov edx edi
test al al
je r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
mov [ ebp - 0x10 ] eax
add esp 0xfffffffc
lea eax [ ebp - 0x10 ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call sub_41e7e4
mov ebx eax
mov edx [ ebp + 0x14 ]
push edx
push 0x0
push esi
push ebx
call sub_41d4dc
mov esi ebx
add esp 0x20
sub_41d608
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
cmp ebx edi
je r-xdata
cmp edx esi
je r-xdata
cmp edx esi
je r-xdata
cmp ebx edi
setne al
movzx eax al
mov eax 0xffffffff
jmp r-xdata
mov esi esi
pop ebx
pop esi
pop edi
leave
retn
cmp al cl
jl r-xdata
mov eax 0x1
jmp r-xdata
inc ebx
inc edx
cmp ebx edi
je r-xdata
cmp edx esi
jne r-xdata
mov cl [ ebx ]
mov al [ edx ]
cmp cl al
jl r-xdata
sub_41d690
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0xfffffff4
push [ ebx ]
call eax
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
sub_41d740
push ebp
mov ebp esp
sub esp 0x18
fld [ ebp + 0xc ]
fstp [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
add esp 0xfffffffc
sub esp 0x8
fld [ ebp - 0x8 ]
fstp [ esp ]
push eax
call sub_40df44
leave
retn
sub_41d77c
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
sar esi 0x2
cmp esi 0x1
jle r-xdata
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
lea edx [ esi - 0x2 ]
mov eax edx
shr eax 0x1f
lea ebx [ eax + edx ]
sar ebx 0x1
mov eax [ ebp + 0x8 ]
lea edi [ eax + ebx * 4 ]
mov esi esi
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
add edi 0xfffffffc
dec ebx
jmp r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
call sub_41cf6c
add esp 0x10
test ebx ebx
je r-xdata
mov eax [ edi ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
sub_41d81c
push ebp
mov ebp esp
sub esp 0x6c
push edi
push esi
push ebx
call sub_416270
mov edx eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
pop ebx
pop esi
pop edi
leave
retn
sub_41d87c
push ebp
mov ebp esp
sub esp 0x3c
push edi
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_41d77c
add esp 0x10
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
cmp edi eax
jae r-xdata
add esp 0xfffffff8
mov eax [ ebp + 0xc ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_41ff0c
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
pop edi
leave
retn
nop
add edi 0x4
cmp edi [ ebp + 0x10 ]
jb r-xdata
mov eax [ edi ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov edx [ ebp + 0x8 ]
push edx
push edi
call sub_41eda4
shr eax 0x1f
add esp 0x10
test al al
je r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x10 ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov esi [ edi ]
lea eax [ esi - 0x10 ]
mov [ ebp - 0x24 ] eax
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0x8 ] edi
je r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
sar eax 0x2
push eax
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_41cf6c
add esp 0x10
mov esi [ ebp - 0x10 ]
lea edx [ esi - 0x10 ]
mov [ ebp - 0x28 ] edx
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov edx [ ebp - 0x24 ]
mov [ ebx + rw-data ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
mov eax [ ebp - 0x24 ]
push eax
call free
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov edx [ ebp - 0x28 ]
mov [ ebx + rw-data ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
mov eax [ ebp - 0x28 ]
push eax
call free
add esp 0x10
jmp r-xdata
mov [ edi ] eax
sub_41da5c
push ebp
mov ebp esp
sub esp 0x2c
push edi
push esi
push ebx
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea edx [ ebx - 0x1 ]
mov eax edx
shr eax 0x1f
lea edi [ eax + edx ]
sar edi 0x1
cmp ebx [ ebp + 0x10 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
lea edi [ eax + ebx * 4 ]
cmp [ ebp + 0x14 ] edi
je r-xdata
mov eax edi
shl eax 0x2
mov esi eax
add eax [ ebp + 0x8 ]
push 0xffffffff
push 0x0
mov edx [ ebp + 0x14 ]
push edx
push eax
call sub_41eda4
shr eax 0x1f
add esp 0x10
test al al
jne r-xdata
mov eax [ ebp + 0x14 ]
mov esi [ eax ]
lea edi [ esi - 0x10 ]
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov esi [ edi ]
lea edx [ esi - 0x10 ]
mov [ ebp - 0x20 ] edx
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea ebx [ eax + ebx * 4 ]
mov [ ebp - 0x14 ] ebx
add esi eax
mov [ ebp - 0x18 ] esi
cmp esi ebx
je r-xdata
lea esp [ ebp - 0x38 ]
pop ebx
pop esi
pop edi
leave
retn
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
mov edx [ ebp + 0x14 ]
mov eax [ edx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
mov ebx edi
mov esi [ ebx ]
lea edx [ esi - 0x10 ]
mov [ ebp - 0x1c ] edx
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov [ ebx + rw-data ] edi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push edi
call free
jmp r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov edx [ ebp - 0x20 ]
mov [ ebx + rw-data ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
mov eax [ ebp - 0x20 ]
push eax
call free
add esp 0x10
jmp r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ edx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
mov [ edi ] eax
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov edx [ ebp - 0x1c ]
mov [ ebx + rw-data ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
mov eax [ ebp - 0x1c ]
push eax
call free
add esp 0x10
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov [ edx ] eax
sub_41dc74
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0xfffffff4
push [ ebx ]
call eax
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
sub_41dd34
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
call sub_41e514
add esp 0xfffffffc
push rw-data
push r-xdata
push ebx
call sub_4172e4
sub_41dd68
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff8
push r-xdata
push ebx
call sub_4173b4
sub_41dd94
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
call sub_41e2e0
push 0x1
push sub_40ecfc
push r-xdata
push ebx
call sub_41720c
sub_41ddc8
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
call sub_41e334
push 0x1
push r-xdata
push r-xdata
push ebx
call sub_41720c
sub_41ddfc
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0xfffffff8
push r-xdata
push rw-data
call sub_4173b4
add esp 0x10
sub_41de48
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0x10
add esp 0xfffffff8
push r-xdata
push rw-data
call sub_4173b4
add esp 0x10
sub_41deb8
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0xfffffff8
push sub_41a23b
push rw-data
call sub_4173b4
add esp 0x10
sub_41df04
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0xfffffff8
push sub_41a23b
push rw-data
call sub_4173b4
add esp 0x10
sub_41df50
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0xfffffff8
push sub_41a23b
push rw-data
call sub_4173b4
add esp 0x10
sub_41df9c
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0xfffffff8
push sub_41a23b
push rw-data
call sub_4173b4
add esp 0x10
sub_41dfe8
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0xfffffff8
push r-xdata
push rw-data
call sub_4173b4
add esp 0x10
sub_41e034
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0xfffffff8
push sub_41a23b
push rw-data
call sub_4173b4
add esp 0x10
sub_41e080
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0x10
add esp 0xfffffff8
push r-xdata
push rw-data
call sub_4173b4
add esp 0x10
sub_41e0f0
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0xfffffff8
push sub_41a23b
push rw-data
call sub_4173b4
add esp 0x10
sub_41e13c
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0xfffffff8
push sub_41a23b
push rw-data
call sub_4173b4
add esp 0x10
sub_41e188
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
push 0x1
push sub_40e8dc
push r-xdata
push rw-data
call sub_41720c
cmp [ rw-data ] 0x0
jne r-xdata
push 0x1
push r-xdata
push r-xdata
push rw-data
call sub_41720c
add esp 0x10
call sub_41dd68
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0x10
sub_41e200
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
push 0x1
push r-xdata
push r-xdata
push rw-data
call sub_41720c
cmp [ rw-data ] 0x0
jne r-xdata
push 0x1
push r-xdata
push r-xdata
push rw-data
call sub_41720c
add esp 0x10
call sub_41dd68
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0x10
sub_41e278
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
call sub_41dd68
add esp 0xfffffffc
push rw-data
push r-xdata
push ebx
call sub_4172e4
sub_41e2ac
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
call sub_41e540
add esp 0xfffffffc
push rw-data
push r-xdata
push ebx
call sub_4172e4
sub_41e2e0
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
push 0x1
push r-xdata
push r-xdata
push rw-data
call sub_41720c
call sub_41dd68
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0x10
sub_41e334
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
push 0x1
push r-xdata
push r-xdata
push rw-data
call sub_41720c
call sub_41dd68
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0x10
sub_41e388
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff8
push r-xdata
push ebx
call sub_4173b4
sub_41e3b4
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
call sub_41e514
add esp 0xfffffffc
push rw-data
push r-xdata
push ebx
call sub_4172e4
sub_41e3e8
push ebp
mov ebp esp
sub esp 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax rw-data
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x2
push sub_40e8c0
push r-xdata
push rw-data
call sub_41720c
cmp [ rw-data ] 0x0
jne r-xdata
push 0x1
push r-xdata
push r-xdata
push rw-data
call sub_41720c
add esp 0x10
call sub_41dd68
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0x10
push 0x1
push r-xdata
push r-xdata
push rw-data
call sub_41720c
add esp 0x10
call sub_41dd68
add esp 0xfffffffc
push rw-data
push r-xdata
push rw-data
call sub_4172e4
add esp 0x10
sub_41e4ac
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
call sub_41e2ac
add esp 0xfffffffc
push rw-data
push r-xdata
push ebx
call sub_4172e4
sub_41e4e0
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
call sub_41e514
add esp 0xfffffffc
push rw-data
push r-xdata
push ebx
call sub_4172e4
sub_41e514
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff8
push r-xdata
push ebx
call sub_4173b4
sub_41e540
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
call sub_41e388
add esp 0xfffffffc
push rw-data
push r-xdata
push ebx
call sub_4172e4
sub_41e574
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx rw-data
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff8
push r-xdata
push ebx
call sub_4173b4
sub_41e5a0
push ebp
mov ebp esp
sub esp 0x20
push esi
push ebx
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp ebx esi
je r-xdata
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
leave
retn
mov esi esi
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
mov eax [ ebx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] eax
add esp 0xfffffff8
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_41e5f4
add esp 0x10
add ebx 0x4
cmp ebx esi
jne r-xdata
sub_41e5f4
push ebp
mov ebp esp
sub esp 0x2c
push edi
push esi
push ebx
mov edi [ ebp + 0x8 ]
jmp r-xdata
lea eax [ edi - 0x4 ]
mov [ ebp - 0x14 ] eax
push 0xffffffff
push 0x0
mov edx [ ebp - 0x14 ]
push edx
mov eax [ ebp + 0xc ]
push eax
call sub_41eda4
shr eax 0x1f
add esp 0x10
test al al
jne r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
mov edi [ ebp - 0x14 ]
mov esi [ edi ]
lea edx [ esi - 0x10 ]
mov [ ebp - 0x18 ] edx
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0xc ]
mov esi [ eax ]
lea edi [ esi - 0x10 ]
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov esi [ edi ]
lea edx [ esi - 0x10 ]
mov [ ebp - 0x1c ] edx
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ edx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
lea esp [ ebp - 0x38 ]
pop ebx
pop esi
pop edi
leave
retn
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov edx [ ebp - 0x18 ]
mov [ ebx + rw-data ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
mov eax [ ebp - 0x18 ]
push eax
call free
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov [ ebx + rw-data ] edi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push edi
call free
jmp r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov edx [ ebp - 0x1c ]
mov [ ebx + rw-data ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
mov eax [ ebp - 0x1c ]
push eax
call free
add esp 0x10
jmp r-xdata
mov [ edi ] eax
mov [ edi ] eax
sub_41e7e4
push ebp
mov ebp esp
sub esp 0x3c
push edi
push esi
push ebx
mov edi [ ebp + 0xc ]
jmp r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov edx [ ebp + 0x8 ]
push edx
call sub_41eda4
shr eax 0x1f
add esp 0x10
test al al
jne r-xdata
add [ ebp + 0x8 ] 0x4
nop
add edi 0xfffffffc
push 0xffffffff
push 0x0
push edi
mov eax [ ebp + 0x10 ]
push eax
call sub_41eda4
shr eax 0x1f
add esp 0x10
test al al
jne r-xdata
cmp [ ebp + 0x8 ] edi
jae r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ eax ]
lea edi [ esi - 0x10 ]
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
pop edi
leave
retn
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov [ ebx + rw-data ] edi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
push edi
call free
jmp r-xdata
lea eax [ ebp - 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax ]
lea edx [ esi - 0x10 ]
mov [ ebp - 0x24 ] edx
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x10 ] eax
cmp edi [ ebp + 0x8 ]
je r-xdata
mov esi [ ebp - 0x10 ]
lea eax [ esi - 0x10 ]
mov [ ebp - 0x2c ] eax
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov esi [ edi ]
lea eax [ esi - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov eax [ edi ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
mov eax [ ebp - 0x10 ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov edx [ ebp - 0x24 ]
mov [ ebx + rw-data ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
mov eax [ ebp - 0x24 ]
push eax
call free
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov edx [ ebp - 0x2c ]
mov [ ebx + rw-data ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
jmp r-xdata
add esp 0xfffffff4
mov eax [ ebp - 0x2c ]
push eax
call free
add esp 0x10
jmp r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov edx [ ebp - 0x28 ]
mov [ ebx + rw-data ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
mov eax [ ebp - 0x28 ]
push eax
call free
add esp 0x10
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov [ edi ] eax
sub_41ea94
push ebp
mov ebp esp
sub esp 0xc
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cmp esi edi
je r-xdata
mov eax ebx
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
pop edi
leave
retn
mov esi esi
add esi 0x4
add ebx 0x4
cmp esi edi
jne r-xdata
mov eax [ esi ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
mov [ ebx ] eax
sub_41eae8
push ebp
mov ebp esp
sub esp 0x6c
push edi
push esi
push ebx
call sub_416270
mov edx eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
pop ebx
pop esi
pop edi
leave
retn
sub_41eb44
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x1c ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
test [ ecx ] 0x2
je r-xdata
leave
retn
add esp 0xfffffff4
mov eax [ ecx + 0x48 ]
movsx edx [ eax + 0x60 ]
add edx ecx
push edx
mov eax [ eax + 0x64 ]
call eax
sub_41ec4c
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov esi [ eax ]
cmp esi eax
je r-xdata
mov eax [ edi ]
mov [ eax ] eax
mov eax [ edi ]
mov [ eax + 0x4 ] eax
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
mov ebx esi
mov esi [ esi ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ rw-data ]
mov [ ebx ] eax
mov [ rw-data ] ebx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
cmp esi [ edi ]
jne r-xdata
sub_41eca8
push ebp
mov ebp esp
sub esp 0x2c
push edi
push esi
push ebx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
inc eax
mov [ ebp - 0x14 ] 0x10
cmp [ ebp - 0x14 ] eax
jae r-xdata
mov ebx [ ebp - 0x14 ]
add ebx 0x10
cmp ebx 0x80
jbe r-xdata
nop
mov esi [ ebp - 0x14 ]
add esi 0x17
mov eax esi
shr eax 0x3
lea edi [ eax * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov ebx [ edi + rw-data ]
test ebx ebx
jne r-xdata
add esp 0xfffffff4
push ebx
call malloc
add esp 0x10
test eax eax
jne r-xdata
shl [ ebp - 0x14 ] 0x1
cmp [ ebp - 0x14 ] eax
jb r-xdata
mov eax [ ebx ]
mov [ edi + rw-data ] eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
and esi 0xfffffff8
push esi
call sub_41c140
mov ebx eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0x10
jmp r-xdata
mov ebx eax
jmp r-xdata
add esp 0xfffffff4
push ebx
call sub_41c0e8
add esp 0x10
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov [ ebx ] eax
lea eax [ ebx + 0x10 ]
lea esp [ ebp - 0x38 ]
pop ebx
pop esi
pop edi
leave
retn
lea eax [ ebx + 0x10 ]
add esp 0xfffffffc
push edx
push ecx
push eax
call memcpy
mov eax [ ebp - 0x14 ]
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] 0x1
mov [ ebx + 0xc ] 0x0
mov ecx [ ebp + 0x8 ]
add ecx 0x10
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
test edx edx
je r-xdata
sub_41eda4
push ebp
mov ebp esp
sub esp 0x1c
push edi
push esi
push ebx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov esi [ eax ]
mov eax [ esi - 0x10 ]
cmp ecx eax
jbe r-xdata
sub eax ecx
mov [ ebp - 0x4 ] eax
mov edx eax
mov eax [ ebp + 0x14 ]
cmp edx eax
jbe r-xdata
add esp 0xfffffffc
push 0x18f
push r-xdata
push r-xdata
call _assert
nop
mov eax [ ebp + 0xc ]
mov edi [ eax ]
mov ebx [ edi - 0x10 ]
cmp edx ebx
jbe r-xdata
mov edx eax
add esi ecx
mov ecx edx
cld
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov edx ebx
test eax eax
jne r-xdata
sbb eax eax
or al 0x1
lea esp [ ebp - 0x28 ]
pop ebx
pop esi
pop edi
leave
retn
cmp edx [ ebp + 0x14 ]
je r-xdata
xor eax eax
sub [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x4 ]
jmp r-xdata
sub_41ee20
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x1 ] 0x1
je r-xdata
mov ebx [ ecx + 0xc ]
mov ebx [ ecx + 0x24 ]
jmp r-xdata
mov edx [ ecx + 0x8 ]
mov edx [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ecx ]
test ah 0x1
je r-xdata
mov eax [ ecx + 0x14 ]
test ah 0x1
je r-xdata
cmp ebx edx
je r-xdata
mov eax [ ecx + 0x4 ]
jmp r-xdata
mov eax [ ecx + 0x24 ]
jmp r-xdata
pop ebx
leave
retn
sub_41eff4
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
mov eax 0xffffffff
jmp r-xdata
mov eax [ ebx ]
add esp 0xfffffff4
push [ eax ]
call sub_410eb0
mov edx eax
cmp edx 0xffffffff
jne r-xdata
mov edx [ eax ]
mov eax [ edx + 0x4 ]
cmp [ edx + 0x8 ] eax
jne r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax edx
mov eax [ ebx ]
or [ eax + 0x12 ] 0x1
add esp 0xfffffff4
push ecx
call sub_40e378
add esp 0x10
sub_41f184
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov [ edx + 0x12 ] 0x0
mov [ edx + 0x12 ] 0x4
jmp r-xdata
mov [ edx + 0x13 ] 0x0
mov [ edx ] eax
mov eax [ ebp + 0x10 ]
mov [ edx + 0x4 ] eax
mov [ edx + 0x8 ] 0x0
mov [ edx + 0x10 ] 0x20
mov [ edx + 0xc ] 0x11
mov [ edx + 0x14 ] 0x6
mov [ edx + 0x18 ] 0x0
leave
retn
sub_41f1cc
push ebp
mov ebp esp
sub esp 0x3c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x14 ]
mov eax [ edi ]
mov edx [ ebp + 0x10 ]
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
cmp ecx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ecx + 0xc ]
mov eax [ esi ]
cmp [ edx + 0x10 ] eax
jge r-xdata
lea eax [ ebp - 0x10 ]
add esp 0xfffffffc
push esi
push edi
push eax
call sub_41f304
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ esi ] eax
jge r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax ecx
jne r-xdata
lea eax [ ebp - 0x10 ]
add esp 0xfffffffc
push esi
push edi
push eax
call sub_41f304
mov eax [ ebp - 0x10 ]
jmp r-xdata
add esp 0xfffffff4
push esi
push [ ecx + 0xc ]
push 0x0
jmp r-xdata
mov [ ebx ] eax
add esp 0xfffffff4
push esi
push ecx
push ecx
jmp r-xdata
mov edx [ eax + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov eax edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0xc ]
push edi
push ebx
call sub_41b1b4
jmp r-xdata
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x10 ] edx
mov edx [ edx + 0x4 ]
mov eax [ edx + 0x8 ]
cmp [ ebp - 0x10 ] eax
je r-xdata
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov esi esi
mov al 0x0
mov edx [ ebp - 0x10 ]
mov ecx [ esi ]
cmp [ edx + 0x10 ] ecx
jge r-xdata
mov eax ebx
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
pop edi
leave
retn 0x4
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
cmp ecx [ eax + 0x10 ]
setl al
mov eax [ eax + 0xc ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x20 ]
add esp 0xfffffffc
push esi
push edi
push eax
call sub_41f304
mov eax [ ebp - 0x20 ]
cmp [ edx + 0xc ] 0x0
jne r-xdata
add esp 0xfffffff4
push esi
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
push eax
push eax
add esp 0xfffffff4
push esi
push edx
push 0x0
jmp r-xdata
sub_41f304
push ebp
mov ebp esp
sub esp 0x3c
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov ebx [ ecx + 0x4 ]
mov al 0x1
mov [ ebp - 0x10 ] ecx
test al al
je r-xdata
mov ecx ebx
mov eax [ ebx + 0x10 ]
cmp [ edi ] eax
setl al
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edi ]
cmp [ edx + 0x10 ] eax
jge r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x20 ] eax
cmp ecx eax
jne r-xdata
mov ebx [ ebx + 0xc ]
jmp r-xdata
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov [ esi ] edx
mov [ esi + 0x4 ] 0x0
lea eax [ ebp - 0x30 ]
add esp 0xfffffff4
push edi
push ecx
push ebx
mov edx [ ebp + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x30 ]
add esp 0xfffffff4
push edi
push ecx
push ebx
jmp r-xdata
test ebx ebx
je r-xdata
mov eax esi
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
pop edi
leave
retn 0x4
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ecx
jne r-xdata
push edx
push eax
call sub_41b1b4
mov eax [ ebp - 0x30 ]
mov [ esi ] eax
mov [ esi + 0x4 ] 0x1
jmp r-xdata
mov edx [ eax + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov eax edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ecx + 0xc ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x10 ] edx
mov edx [ edx + 0x4 ]
mov eax [ edx + 0x8 ]
cmp [ ebp - 0x10 ] eax
je r-xdata
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov esi esi
mov eax [ eax + 0xc ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
jmp r-xdata
sub_41f3f0
push ebp
mov ebp esp
sub esp 0x3c
push edi
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x14 ]
mov eax [ edi ]
mov edx [ ebp + 0x10 ]
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
cmp ecx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ecx + 0xc ]
mov eax [ esi ]
cmp [ edx + 0x10 ] eax
jge r-xdata
lea eax [ ebp - 0x10 ]
add esp 0xfffffffc
push esi
push edi
push eax
call sub_41f528
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ esi ] eax
jge r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax ecx
jne r-xdata
lea eax [ ebp - 0x10 ]
add esp 0xfffffffc
push esi
push edi
push eax
call sub_41f528
mov eax [ ebp - 0x10 ]
jmp r-xdata
add esp 0xfffffff4
push esi
push [ ecx + 0xc ]
push 0x0
jmp r-xdata
mov [ ebx ] eax
add esp 0xfffffff4
push esi
push ecx
push ecx
jmp r-xdata
mov edx [ eax + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov eax edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0xc ]
push edi
push ebx
call sub_41b488
jmp r-xdata
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x10 ] edx
mov edx [ edx + 0x4 ]
mov eax [ edx + 0x8 ]
cmp [ ebp - 0x10 ] eax
je r-xdata
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov esi esi
mov al 0x0
mov edx [ ebp - 0x10 ]
mov ecx [ esi ]
cmp [ edx + 0x10 ] ecx
jge r-xdata
mov eax ebx
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
pop edi
leave
retn 0x4
test al al
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
cmp ecx [ eax + 0x10 ]
setl al
mov eax [ eax + 0xc ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x20 ]
add esp 0xfffffffc
push esi
push edi
push eax
call sub_41f528
mov eax [ ebp - 0x20 ]
cmp [ edx + 0xc ] 0x0
jne r-xdata
add esp 0xfffffff4
push esi
mov edx [ ebp + 0x10 ]
mov eax [ edx ]
push eax
push eax
add esp 0xfffffff4
push esi
push edx
push 0x0
jmp r-xdata
sub_41f528
push ebp
mov ebp esp
sub esp 0x3c
push edi
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov ebx [ ecx + 0x4 ]
mov al 0x1
mov [ ebp - 0x10 ] ecx
test al al
je r-xdata
mov ecx ebx
mov eax [ ebx + 0x10 ]
cmp [ edi ] eax
setl al
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
mov eax [ edi ]
cmp [ edx + 0x10 ] eax
jge r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x20 ] eax
cmp ecx eax
jne r-xdata
mov ebx [ ebx + 0xc ]
jmp r-xdata
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov [ esi ] edx
mov [ esi + 0x4 ] 0x0
lea eax [ ebp - 0x30 ]
add esp 0xfffffff4
push edi
push ecx
push ebx
mov edx [ ebp + 0xc ]
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x30 ]
add esp 0xfffffff4
push edi
push ecx
push ebx
jmp r-xdata
test ebx ebx
je r-xdata
mov eax esi
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
pop edi
leave
retn 0x4
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ecx
jne r-xdata
push edx
push eax
call sub_41b488
mov eax [ ebp - 0x30 ]
mov [ esi ] eax
mov [ esi + 0x4 ] 0x1
jmp r-xdata
mov edx [ eax + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov eax edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ecx + 0xc ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x10 ] edx
mov edx [ edx + 0x4 ]
mov eax [ edx + 0x8 ]
cmp [ ebp - 0x10 ] eax
je r-xdata
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov esi esi
mov eax [ eax + 0xc ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
jmp r-xdata
sub_41f614
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
xor eax eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + 0xc ] 0x1
je r-xdata
add esp 0xfffffff4
push eax
call sub_40e378
add esp 0x10
mov ebx [ ebp - 0x18 ]
leave
retn
mov eax 0x1
add esp 0xfffffff4
push ebx
call sub_40e430
jmp r-xdata
sub_41f668
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
xor eax eax
jmp r-xdata
mov eax 0x1
mov edx [ eax ]
mov eax [ edx + 0x4 ]
cmp [ edx + 0x8 ] eax
jne r-xdata
leave
retn
add esp 0xfffffff4
push ecx
call sub_40e378
sub_41f6a8
push ebp
mov ebp esp
sub esp 0x10
push esi
push ebx
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov eax [ esi ]
mov dl [ eax + 0x12 ]
test dl dl
je r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or dl 0x2
mov [ eax + 0x12 ] dl
xor eax eax
jmp r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
lea esp [ ebp - 0x18 ]
pop ebx
pop esi
leave
retn
mov eax 0x1
mov eax [ esi ]
test [ eax + 0xc ] 0x1
je r-xdata
add esp 0xfffffff4
push ecx
call sub_40e378
add esp 0x10
mov eax [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
sub eax edx
cmp eax ebx
jge r-xdata
add esp 0xfffffff4
push esi
call sub_40e430
jmp r-xdata
sub_41f724
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax + 0x1 ] 0x1
je r-xdata
mov edx [ eax + 0xc ]
mov edx [ eax + 0x24 ]
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x2c ]
jmp r-xdata
test [ eax + 0x1 ] 0x1
je r-xdata
cmp edx eax
setne al
and eax 0xff
leave
retn
sub_41f76c
push ebp
mov ebp esp
push edi
push esi
push ebx
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
jmp r-xdata
cmp edx esi
je r-xdata
mov al 0x0
cmp edx esi
jne r-xdata
cmp ecx edi
jne r-xdata
pop ebx
pop esi
pop edi
leave
retn
cmp ecx edi
setne al
mov bl [ edx ]
mov al [ ecx ]
cmp bl al
jge r-xdata
cmp al bl
jge r-xdata
mov al 0x1
jmp r-xdata
inc edx
inc ecx
mov al 0x0
jmp r-xdata
sub_41f7dc
push ebp
mov ebp esp
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov [ ebx ] ecx
mov eax ebx
pop ebx
pop esi
leave
retn 0x4
mov eax [ esi ]
cmp [ edx + 0x10 ] eax
jl r-xdata
mov edx [ edx + 0xc ]
jmp r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
sub_41f818
push ebp
mov ebp esp
push esi
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov [ ebx ] ecx
mov eax ebx
pop ebx
pop esi
leave
retn 0x4
mov eax [ esi ]
cmp [ edx + 0x10 ] eax
jl r-xdata
mov edx [ edx + 0xc ]
jmp r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
sub_41f874
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax + 0x12 ] 0x0
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
add esp 0xfffffff4
push eax
call sub_40e378
leave
retn
sub_41f984
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
movsx edx [ ebp + 0xc ]
add esp 0xfffffff8
push [ eax ]
push edx
call sub_410ed4
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
sub_41f9a8
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
movsx edx [ ebp + 0xc ]
add esp 0xfffffff8
push [ eax ]
push edx
call sub_410ed4
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
sub_41f9cc
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
movsx edx [ ebp + 0xc ]
add esp 0xfffffff8
push [ eax ]
push edx
call sub_410ed4
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
sub_41fa00
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov al [ ebp + 0xc ]
mov edx [ ebx ]
cmp [ edx + 0x12 ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff8
movsx eax al
push eax
push [ edx ]
call sub_40f06c
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x12 ] 0x4
sub_41fa50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
mov [ eax ] edx
test edx edx
sete dl
shl dl 0x2
mov [ eax + 0x12 ] dl
mov eax ecx
leave
retn
sub_41fad8
push ebp
mov ebp esp
sub esp 0x3c
push edi
push esi
push ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx - 0x10 ]
mov [ ebp - 0x14 ] edx
cmp [ ebp + 0xc ] edx
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] eax
jbe r-xdata
add esp 0xfffffffc
push 0x9c
push r-xdata
push r-xdata
call _assert
mov edx [ ebp - 0x14 ]
sub edx [ ebp + 0x10 ]
mov eax 0xfffffffe
sub eax [ ebp + 0x18 ]
cmp edx eax
jbe r-xdata
mov [ ebp + 0x10 ] eax
add edx [ ebp + 0x18 ]
mov [ ebp - 0x18 ] edx
inc edx
mov esi edx
mov [ ecx - 0x4 ] 0x0
mov [ ebp - 0x19 ] 0x0
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx ]
cmp [ ecx - 0x8 ] 0x1
ja r-xdata
add esp 0xfffffffc
push 0x9f
push r-xdata
push r-xdata
call _assert
nop
mov [ ebp - 0x19 ] 0x1
mov ebx [ ecx - 0xc ]
cmp edx ebx
ja r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp + 0x10 ]
mov ebx [ ebp - 0x14 ]
sub ebx eax
mov eax [ ebp + 0xc ]
add eax [ ebp + 0x18 ]
mov esi [ ebp + 0xc ]
lea edx [ esi + ecx ]
add edx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x20 ] 0x10
cmp [ ebp - 0x20 ] esi
jae r-xdata
mov eax edx
cmp edx 0x10
jae r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ ebp + 0x18 ] 0x0
je r-xdata
add eax ecx
add esp 0xfffffffc
push ebx
push edx
push eax
call memmove
add esp 0x10
mov ebx [ ebp - 0x20 ]
add ebx 0x10
cmp ebx 0x80
jbe r-xdata
nop
add eax eax
cmp eax ebx
jae r-xdata
mov eax 0x10
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov edx [ ebp - 0x18 ]
mov [ eax - 0x10 ] edx
mov eax esi
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
pop edi
leave
retn
add eax [ ebp + 0xc ]
add esp 0xfffffffc
mov ecx [ ebp + 0x18 ]
push ecx
mov ebx [ ebp + 0x14 ]
push ebx
push eax
call memcpy
mov esi [ ebp - 0x20 ]
add esi 0x17
mov eax esi
shr eax 0x3
lea edi [ eax * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov ebx [ edi + rw-data ]
test ebx ebx
jne r-xdata
add esp 0xfffffff4
push ebx
call malloc
add esp 0x10
test eax eax
jne r-xdata
shl [ ebp - 0x20 ] 0x1
cmp [ ebp - 0x20 ] edx
jb r-xdata
cmp [ ebp - 0x19 ] 0x0
je r-xdata
mov eax [ ebx ]
mov [ edi + rw-data ] eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov edi ebx
add esp 0xfffffff4
and esi 0xfffffff8
push esi
call sub_41c140
mov ebx eax
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
mov edi ebx
add esp 0x10
jmp r-xdata
mov edi eax
jmp r-xdata
add esp 0xfffffff4
push ebx
call sub_41c0e8
add esp 0x10
mov eax [ ebp + 0xc ]
add eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x14 ]
sub ecx eax
mov eax [ ebp + 0xc ]
add eax [ ebp + 0x18 ]
mov edx [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
add edx [ ebx ]
add edx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
lea eax [ edi + 0x10 ]
add esp 0xfffffffc
mov ecx [ ebp + 0xc ]
push ecx
push edx
push eax
call memcpy
add esp 0x10
mov esi [ ebp - 0x20 ]
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] 0x1
mov [ edi + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
lea eax [ eax + edi + 0x10 ]
add esp 0xfffffffc
push ecx
push edx
push eax
call memcpy
add esp 0x10
mov ebx [ ebp + 0x8 ]
mov esi [ ebx ]
lea eax [ esi - 0x10 ]
mov [ ebp - 0x24 ] eax
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov esi [ ebp + 0xc ]
lea eax [ esi + edi + 0x10 ]
add esp 0xfffffffc
mov edx [ ebp + 0x18 ]
push edx
mov ecx [ ebp + 0x14 ]
push ecx
push eax
call memcpy
add esp 0x10
add edi 0x10
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
jmp r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov esi [ ebp - 0x24 ]
mov [ ebx + rw-data ] esi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xfffffff4
mov ecx [ ebp - 0x24 ]
push ecx
call free
jmp r-xdata
sub_41fdf4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov ebx [ ecx + 0xc ]
mov eax edx
not eax
and eax ebx
and edx [ ebp + 0xc ]
or eax edx
mov [ ecx + 0xc ] eax
mov eax ebx
pop ebx
leave
retn
sub_41fe14
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
test [ ebx + 0x1 ] 0x1
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x8 ] eax
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff4
push ebx
call sub_4103e4
sub_41fe6c
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp [ ebx + 0x4 ] eax
jb r-xdata
mov eax [ ebx + 0x4 ]
movzx eax [ eax ]
add esp 0xfffffff4
push ebx
call sub_4105ac
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
sub_41fec0
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp [ ebx + 0x4 ] eax
jb r-xdata
mov eax [ ebx + 0x4 ]
lea edx [ eax + 0x1 ]
mov [ ebx + 0x4 ] edx
mov eax edx
cmp eax [ ebx + 0x8 ]
jb r-xdata
add esp 0xfffffff4
push ebx
call sub_4105ac
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x4 ]
movzx eax [ eax ]
add esp 0xfffffff4
push ebx
call sub_4105ac
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebp - 0x18 ]
leave
retn
sub_41ff0c
push ebp
mov ebp esp
sub esp 0x3c
push edi
push esi
push ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
sar eax 0x2
cmp eax 0x1
jg r-xdata
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
add [ ebp + 0xc ] 0xfffffffc
mov [ ebp - 0x24 ] esi
mov eax [ ebx - 0x4 ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
lea esp [ ebp - 0x48 ]
pop ebx
pop esi
pop edi
leave
retn
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x10 ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov esi [ ebx - 0x4 ]
lea eax [ esi - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
mov [ ebp - 0x10 ] eax
lea edi [ ebx - 0x4 ]
cmp esi edi
je r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
mov edx [ ebp - 0x24 ]
mov eax [ edx ]
lea edx [ eax - 0x10 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
mov edx [ esi - 0xc ]
lea eax [ edx + 0x10 ]
cmp eax 0x80
jbe r-xdata
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
sub edi [ ebp - 0x24 ]
sar edi 0x2
push edi
push 0x0
mov eax [ ebp - 0x24 ]
push eax
call sub_41cf6c
add esp 0x10
mov esi [ ebp - 0x10 ]
lea edi [ esi - 0x10 ]
mov eax [ esi - 0x8 ]
lea edx [ eax - 0x1 ]
mov [ esi - 0x8 ] edx
cmp eax 0x1
jne r-xdata
inc [ eax - 0x8 ]
add esp 0xfffffff4
push edx
call sub_41eca8
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov edx [ ebp - 0x28 ]
mov [ ebx + rw-data ] edx
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
mov eax [ ebp - 0x28 ]
push eax
call free
add esp 0x10
jmp r-xdata
lea ebx [ edx + 0x17 ]
shr ebx 0x3
lea ebx [ ebx * 4 - 0x4 ]
add esp 0xfffffff4
push rw-data
call EnterCriticalSection
add esp 0xc
mov eax [ ebx + rw-data ]
mov [ esi - 0x10 ] eax
mov [ ebx + rw-data ] edi
add esp 0xfffffff4
push rw-data
call LeaveCriticalSection
add esp 0xc
add esp 0xfffffff4
push edi
call free
add esp 0x10
jmp r-xdata
mov [ edi ] eax
sub_4200c8
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
add esp 0xfffffffc
mov ecx [ edx + 0x48 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
movsx eax [ ecx + 0x30 ]
add edx eax
push edx
mov eax [ ecx + 0x34 ]
call eax
leave
retn
sub_42016c
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x12 ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff4
push [ eax ]
call sub_40f084
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x12 ] 0x4
sub_42019c
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov al [ ebp + 0xc ]
mov edx [ ebx ]
cmp [ edx + 0x12 ] 0x0
jne r-xdata
mov eax ebx
mov ebx [ ebp - 0x18 ]
leave
retn
add esp 0xfffffff8
movsx eax al
push eax
push [ edx ]
call sub_40f06c
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebx ]
mov [ eax + 0x12 ] 0x4
sub_4201fc
push ebp
mov ebp esp
sub esp 0x6c
push edi
push esi
push ebx
call sub_416270
mov edx eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] ebp
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] esp
lea eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax r-xdata
pop ebx
pop esi
pop edi
leave
retn
sub_4010fb
add esp 0xfffffff4
push ebx
call ExitProcess
_start
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push 0x1
mov eax [ __set_app_type@IAT ]
call eax
call sub_401000
sub_4011ef
mov esp ebp
xor eax eax
pop ebp
retn
sub_4011f8
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push 0x2
mov eax [ __set_app_type@IAT ]
call eax
call sub_401000
sub_40120f
mov esp ebp
pop ebp
retn
sub_4018fc
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x1
call sub_4018c8
leave
retn
sub_401924
push ebp
mov ebp esp
mov eax [ rw-data ]
leave
retn
sub_402670
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x1
call sub_4024e0
leave
retn
sub_402688
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x0
call sub_4024e0
leave
retn
sub_4026d4
push ebp
mov ebp esp
mov [ rw-data ] 0x0
leave
retn
sub_40298c
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_4026f0
add esp 0xfffffff4
push 0x1
call ExitProcess
sub_402a00
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call ExitProcess
sub_402a48
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x1
call sub_402a14
leave
retn
sub_4040c4
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x1
call sub_404090
leave
retn
sub_4040ec
push ebp
mov ebp esp
mov eax rw-data
leave
retn
sub_404154
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
leave
retn
sub_40663c
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x1
call sub_406608
leave
retn
sub_406e6c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xffffffff
leave
retn
sub_406e7c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
not eax
mov [ edx ] eax
leave
retn
sub_406f54
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x1
call sub_406f20
leave
retn
sub_40729c
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x1
call sub_407268
leave
retn
sub_407c04
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x1
call sub_407bd0
leave
retn
sub_407ff8
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x1
call sub_407fc4
leave
retn
sub_409020
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x1
call sub_408fec
leave
retn
sub_409114
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
movzx eax [ ebp + 0xc ]
mov [ rw-data ] edx
add esp 0xfffffff8
push eax
push r-xdata
call EnumWindows
leave
retn
sub_409138
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
add esp 0xfffffff8
push 0x0
push r-xdata
call EnumWindows
leave
retn
sub_4093bc
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x1
call sub_409388
leave
retn
sub_409fb0
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x1
call sub_409f7c
leave
retn
sub_40a668
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x1
call sub_40a634
leave
retn
sub_40cd60
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x1
call sub_40cd2c
leave
retn
InitCommonControls
jmp [ InitCommonControls@IAT ]
sub_40e3ac
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_40e378
leave
retn
sub_40e4c4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
leave
retn
sub_40e4cc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
leave
retn
sub_40e4d4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
leave
retn
sub_40e4dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
leave
retn
sub_40e8c0
pushad
hlt
sub_40e8dc
pushad
hlt
sub_40ea10
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x1
call sub_40e930
leave
retn
sub_40ebb8
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x4c ]
call fseek
leave
retn
sub_40ebd4
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
add esp 0xfffffff4
push [ ebx + 0x4c ]
call fclose
mov [ ebx + 0x4c ] 0x0
mov ebx [ ebp - 0x18 ]
leave
retn
sub_40ecfc
pushad
hlt
sub_40eda4
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_410388
leave
retn
sub_40edec
push ebp
mov ebp esp
mov eax 0xffffffff
leave
retn
sub_40edf8
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_410768
leave
retn
sub_40ee0c
push ebp
mov ebp esp
mov eax 0xffffffff
leave
retn
sub_40ee18
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410794
leave
retn
sub_40ee34
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41085c
leave
retn
sub_40eea0
push ebp
mov ebp esp
xor eax eax
leave
retn
sub_40eea8
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410d90
leave
retn
sub_40ef84
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410fb8
leave
retn
sub_40efa0
push ebp
mov ebp esp
sub esp 0x8
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4106dc
leave
retn
sub_40efbc
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_410998
leave
retn
sub_40efd0
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_41071c
leave
retn
sub_40f044
push ebp
mov ebp esp
mov eax 0xffffffff
leave
retn
sub_40f050
push ebp
mov ebp esp
sub esp 0x8
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410fec
leave
retn
sub_40f06c
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
movsx eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_410ad4
leave
retn
sub_40f084
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_410b14
leave
retn
sub_40f0cc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
inc edx
mov [ eax + 0x44 ] dx
xor eax eax
leave
retn
sub_40f0e0
push ebp
mov ebp esp
sub esp 0x8
call sub_410b7c
leave
retn
sub_40f0f0
push ebp
mov ebp esp
sub esp 0x8
call sub_410bc0
leave
retn
sub_40f100
push ebp
mov ebp esp
sub esp 0x8
call _errno
mov [ eax ] 0x5
mov eax 0xffffffff
leave
retn
sub_40f118
push ebp
mov ebp esp
xor eax eax
leave
retn
sub_40f120
push ebp
mov ebp esp
xor eax eax
leave
retn
sub_40f128
push ebp
mov ebp esp
mov eax 0xffffffff
leave
retn
sub_40f134
push ebp
mov ebp esp
xor eax eax
leave
retn
sub_40f18c
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410cc0
leave
retn
sub_40f1a4
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_410cd4
leave
retn
sub_40f1b8
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410d08
leave
retn
sub_40f1d4
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_410d68
leave
retn
sub_40f1e8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
shr eax 0x2
xor al 0x1
and eax 0x1
leave
retn
sub_40f1fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
shr eax 0x3
xor al 0x1
and eax 0x1
leave
retn
sub_40f230
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
leave
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
call sub_410c38
sub_40f298
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push 0xffff
push 0x0
call sub_40f230
leave
retn
sub_40f2b0
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_411040
leave
retn
sub_40f690
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411170
leave
retn
sub_40f6ac
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411264
leave
retn
sub_40f6c4
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4112b8
leave
retn
sub_40f6e0
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_411a2c
leave
retn
sub_40f6f4
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41146c
leave
retn
sub_40f70c
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_4113b4
leave
retn
sub_40f720
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_411574
leave
retn
sub_40f734
push ebp
mov ebp esp
sub esp 0x8
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4115f8
leave
retn
sub_40f774
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41182c
leave
retn
sub_40f790
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411848
leave
retn
sub_40f7ac
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411898
leave
retn
sub_40f7c8
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411864
leave
retn
sub_40f7e0
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_411880
leave
retn
sub_40f7f4
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4118e8
leave
retn
sub_40f810
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ee34
leave
retn
sub_4102e8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
cmp [ edx ] 0x0
jl r-xdata
leave
retn
or [ edx ] 0x80
mov eax [ rw-data ]
mov [ edx + 0x34 ] eax
mov [ rw-data ] edx
sub_410428
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
add esp 0xfffffff8
mov edx [ eax + 0x48 ]
push [ ebp + 0xc ]
push eax
mov eax [ edx + 0x14 ]
call eax
leave
retn
sub_41075c
push ebp
mov ebp esp
mov eax 0xffffffff
leave
retn
sub_410a50
push ebp
mov ebp esp
xor eax eax
leave
retn
sub_410ac8
push ebp
mov ebp esp
mov eax 0xffffffff
leave
retn
sub_410c38
push ebp
mov ebp esp
sub esp 0x8
call sub_410b7c
call sub_410c00
leave
retn
sub_410cc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x8 ]
sub eax edx
leave
retn
sub_410e84
push ebp
mov ebp esp
mov eax 0xffffffff
leave
retn
sub_410e90
push ebp
mov ebp esp
mov eax 0xffffffff
leave
retn
sub_410e9c
push ebp
mov ebp esp
mov eax 0xffffffff
leave
retn
sub_410ea8
push ebp
mov ebp esp
xor eax eax
leave
retn
sub_41182c
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x38 ]
call _read
leave
retn
sub_411848
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x38 ]
call _lseek
leave
retn
sub_411864
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ eax + 0x38 ]
call _fstat
leave
retn
sub_411880
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
add esp 0xfffffff4
push [ eax + 0x38 ]
call _close
leave
retn
sub_414d90
push ebp
mov ebp esp
sub esp 0x8
lea eax [ ebp + 0x10 ]
push 0x0
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_414f08
leave
retn
sub_414ee8
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push sub_410c38
call atexit
mov [ rw-data ] 0x0
leave
retn
sub_4161d4
push ebp
mov ebp esp
sub esp 0x8
call abort
sub_416214
push ebp
mov ebp esp
leave
retn
sub_416258
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
leave
retn
add esp 0xfffffff4
push eax
call free
sub_416280
push ebp
mov ebp esp
sub esp 0x8
mov eax [ rw-data ]
call eax
add eax 0x8
leave
retn
sub_41641c
push ebp
mov ebp esp
sub esp 0x8
mov eax [ rw-data ]
call eax
add eax 0x4
leave
retn
sub_4168e8
push ebp
mov ebp esp
leave
retn
sub_416c7c
add esp ecx
jmp edx
sub_416d14
add esp ecx
jmp edx
sub_417a4c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ rw-data ]
mov [ rw-data ] eax
mov eax edx
leave
retn
sub_417a88
push ebp
mov ebp esp
sub esp 0x8
call sub_416280
mov eax [ eax ]
leave
retn
sub_417a98
push ebp
mov ebp esp
sub esp 0x8
call sub_416280
mov eax [ eax ]
mov [ eax + 0x14 ] 0x1
inc [ eax + 0x1c ]
leave
retn
sub_418e90
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_418de8
push eax
call free
leave
retn
sub_419138
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
add esp 0xfffffff8
push [ eax ]
push [ edx ]
call strcmp
shr eax 0x1f
leave
retn
_stricmp
jmp [ _stricmp@IAT ]
_wcslwr
jmp [ _wcslwr@IAT ]
sub_41a2f8
jmp [ rw-data ]
_open
jmp [ _open@IAT ]
_write
jmp [ _write@IAT ]
_close
jmp [ _close@IAT ]
_fstat
jmp [ _fstat@IAT ]
_lseek
jmp [ _lseek@IAT ]
_read
jmp [ _read@IAT ]
_isatty
jmp [ _isatty@IAT ]
__set_app_type
jmp [ __set_app_type@IAT ]
_cexit
jmp [ _cexit@IAT ]
__p__environ
jmp [ __p__environ@IAT ]
_fpreset
jmp [ _fpreset@IAT ]
signal
jmp [ signal@IAT ]
_fileno
jmp [ _fileno@IAT ]
_setmode
jmp [ _setmode@IAT ]
__getmainargs
jmp [ __getmainargs@IAT ]
atexit
jmp [ atexit@IAT ]
strcat
jmp [ strcat@IAT ]
exit
jmp [ exit@IAT ]
wcscmp
jmp [ wcscmp@IAT ]
strncmp
jmp [ strncmp@IAT ]
strchr
jmp [ strchr@IAT ]
sprintf
jmp [ sprintf@IAT ]
strcpy
jmp [ strcpy@IAT ]
wcscpy
jmp [ wcscpy@IAT ]
atoi
jmp [ atoi@IAT ]
strtok
jmp [ strtok@IAT ]
strstr
jmp [ strstr@IAT ]
fwprintf
jmp [ fwprintf@IAT ]
swprintf
jmp [ swprintf@IAT ]
fflush
jmp [ fflush@IAT ]
fprintf
jmp [ fprintf@IAT ]
rand
jmp [ rand@IAT ]
srand
jmp [ srand@IAT ]
time
jmp [ time@IAT ]
_mkdir
jmp [ _mkdir@IAT ]
_rmdir
jmp [ _rmdir@IAT ]
wcslen
jmp [ wcslen@IAT ]
_strupr
jmp [ _strupr@IAT ]
wcsncmp
jmp [ wcsncmp@IAT ]
getenv
jmp [ getenv@IAT ]
fopen
jmp [ fopen@IAT ]
fclose
jmp [ fclose@IAT ]
fgets
jmp [ fgets@IAT ]
strncpy
jmp [ strncpy@IAT ]
memset
jmp [ memset@IAT ]
mktime
jmp [ mktime@IAT ]
strrchr
jmp [ strrchr@IAT ]
difftime
jmp [ difftime@IAT ]
vfprintf
jmp [ vfprintf@IAT ]
ctime
jmp [ ctime@IAT ]
_tempnam
jmp [ _tempnam@IAT ]
wcschr
jmp [ wcschr@IAT ]
wcsncpy
jmp [ wcsncpy@IAT ]
_putenv
jmp [ _putenv@IAT ]
remove
jmp [ remove@IAT ]
strcmp
jmp [ strcmp@IAT ]
printf
jmp [ printf@IAT ]
_isctype
jmp [ _isctype@IAT ]
fseek
jmp [ fseek@IAT ]
fwrite
jmp [ fwrite@IAT ]
fread
jmp [ fread@IAT ]
getc
jmp [ getc@IAT ]
_errno
jmp [ _errno@IAT ]
memchr
jmp [ memchr@IAT ]
strtoul
jmp [ strtoul@IAT ]
strtol
jmp [ strtol@IAT ]
abort
jmp [ abort@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
GetMessageA
jmp [ GetMessageA@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
MessageBoxW
jmp [ MessageBoxW@IAT ]
FindWindowA
jmp [ FindWindowA@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
IsWindowVisible
jmp [ IsWindowVisible@IAT ]
IsIconic
jmp [ IsIconic@IAT ]
ShowWindow
jmp [ ShowWindow@IAT ]
SetForegroundWindow
jmp [ SetForegroundWindow@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
ExitWindowsEx
jmp [ ExitWindowsEx@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetCommandLineW
jmp [ GetCommandLineW@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
InitializeCriticalSection
jmp [ InitializeCriticalSection@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
RemoveDirectoryA
jmp [ RemoveDirectoryA@IAT ]
CreateDirectoryA
jmp [ CreateDirectoryA@IAT ]
GetFileAttributesA
jmp [ GetFileAttributesA@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
AreFileApisANSI
jmp [ AreFileApisANSI@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
lstrlenA
jmp [ lstrlenA@IAT ]
lstrcpynA
jmp [ lstrcpynA@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
FindNextFileA
jmp [ FindNextFileA@IAT ]
FindClose
jmp [ FindClose@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
GetShortPathNameW
jmp [ GetShortPathNameW@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
GetShortPathNameA
jmp [ GetShortPathNameA@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetEnvironmentVariableA
jmp [ GetEnvironmentVariableA@IAT ]
GetWindowsDirectoryA
jmp [ GetWindowsDirectoryA@IAT ]
GetTempFileNameA
jmp [ GetTempFileNameA@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetConsoleOutputCP
jmp [ GetConsoleOutputCP@IAT ]
GetEnvironmentStrings
jmp [ GetEnvironmentStrings@IAT ]
FreeEnvironmentStringsA
jmp [ FreeEnvironmentStringsA@IAT ]
CreateSemaphoreA
jmp [ CreateSemaphoreA@IAT ]
ReleaseSemaphore
jmp [ ReleaseSemaphore@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
Sleep
jmp [ Sleep@IAT ]
FindResourceA
jmp [ FindResourceA@IAT ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ LockResource@IAT ]
SizeofResource
jmp [ SizeofResource@IAT ]
GetConsoleTitleA
jmp [ GetConsoleTitleA@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
SetConsoleTitleA
jmp [ SetConsoleTitleA@IAT ]
AllocConsole
jmp [ AllocConsole@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
SetEnvironmentVariableA
jmp [ SetEnvironmentVariableA@IAT ]
SetCurrentDirectoryA
jmp [ SetCurrentDirectoryA@IAT ]
CreateProcessA
jmp [ CreateProcessA@IAT ]
DuplicateHandle
jmp [ DuplicateHandle@IAT ]
GetExitCodeProcess
jmp [ GetExitCodeProcess@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
SearchPathA
jmp [ SearchPathA@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
CreateMutexA
jmp [ CreateMutexA@IAT ]
ReleaseMutex
jmp [ ReleaseMutex@IAT ]
RegCreateKeyExA
jmp [ RegCreateKeyExA@IAT ]
RegSetValueExA
jmp [ RegSetValueExA@IAT ]
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
OpenProcessToken
jmp [ OpenProcessToken@IAT ]
LookupPrivilegeValueA
jmp [ LookupPrivilegeValueA@IAT ]
AdjustTokenPrivileges
jmp [ AdjustTokenPrivileges@IAT ]
RegEnumKeyExA
jmp [ RegEnumKeyExA@IAT ]
SHGetDesktopFolder
jmp [ SHGetDesktopFolder@IAT ]
SHGetPathFromIDListA
jmp [ SHGetPathFromIDListA@IAT ]
SHGetMalloc
jmp [ SHGetMalloc@IAT ]
sub_41a8a4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
leave
retn
sub_41a8f4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax + 0x1 ] 0x1
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax + 0x24 ]
jmp r-xdata
leave
retn
sub_41a910
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x24 ]
leave
retn
sub_41aaf4
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4171bc
leave
retn
sub_41ab0c
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4171bc
leave
retn
sub_41ab24
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4171bc
leave
retn
sub_41ab3c
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4171bc
leave
retn
sub_41ab54
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4171bc
leave
retn
sub_41ab6c
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4171bc
leave
retn
sub_41ab84
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4171bc
leave
retn
sub_41ab9c
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4171bc
leave
retn
sub_41abb4
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4171bc
leave
retn
sub_41abcc
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4171bc
leave
retn
sub_41cf3c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] rw-data
leave
retn
sub_41cf4c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] rw-data
mov [ edx ] eax
mov eax edx
leave
retn
sub_41cf64
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
leave
retn
sub_41d1c8
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40fe9c
leave
retn
sub_41d1e0
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40fefc
leave
retn
sub_41d660
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e034
leave
retn
sub_41d678
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e034
leave
retn
sub_41d6ac
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
add esp 0xfffffff4
push [ ebp + 0x8 ]
call eax
leave
retn
sub_41d6c0
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
movsx eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40da70
leave
retn
sub_41d6d8
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
movsx eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40da70
leave
retn
sub_41d6f0
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
movzx eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40ddcc
leave
retn
sub_41d708
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
movzx eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40dd78
leave
retn
sub_41d720
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
add esp 0xfffffffc
sub esp 0x8
fld [ ebp + 0xc ]
fstp [ esp ]
push eax
call sub_40df44
leave
retn
sub_41d764
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
movsx eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40dd78
leave
retn
sub_41d7f0
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4171e0
xor al 0x1
leave
retn
sub_41d808
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov al [ eax + 0x12 ]
and al 0x6
and eax 0xff
leave
retn
sub_41d860
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov al [ eax + 0x12 ]
and al 0x6
xor edx edx
test al 0x6
jne r-xdata
mov eax edx
leave
retn
mov edx 0xffffffff
sub_41dc90
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
add esp 0xfffffff4
push [ ebp + 0x8 ]
call eax
leave
retn
sub_41dca4
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d2c0
leave
retn
sub_41dcbc
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d2c0
leave
retn
sub_41dcd4
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d248
leave
retn
sub_41dcec
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d248
leave
retn
sub_41dd04
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov [ ecx ] edx
mov al [ eax + 0x4 ]
mov [ ecx + 0x4 ] al
mov eax ecx
leave
retn
sub_41dd1c
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov [ ecx ] edx
mov al [ eax + 0x4 ]
mov [ ecx + 0x4 ] al
mov eax ecx
leave
retn
sub_41eb2f
call [ ebp - 0x77 ]
in eax 0xc9
retn
sub_41eb38
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x48
leave
retn
sub_41eb70
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
leave
retn
add esp 0xfffffff4
push eax
call sub_40efd0
sub_41eb8c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov al [ eax + 0x12 ]
and al 0x4
and eax 0xff
leave
retn
sub_41eba0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
leave
retn
sub_41ebac
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x1c ]
mov edx [ edx + 0x20 ]
sub edx eax
mov eax edx
leave
retn
sub_41ebc0
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_40ecb8
leave
retn
sub_41ebdc
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_40ecb8
leave
retn
sub_41ebf8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
shr eax 0x1
xor al 0x1
and eax 0x1
leave
retn
sub_41ec0c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
shr eax 0x1
xor al 0x1
and eax 0x1
leave
retn
sub_41ec20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
shr eax 0x1
xor al 0x1
and eax 0x1
leave
retn
sub_41ec34
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov al dl
cmp [ ecx ] 0x0
jne r-xdata
mov [ ecx + 0x12 ] al
leave
retn
or al 0x4
sub_41ee68
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
and al 0x8f
or al 0x10
mov [ edx + 0xc ] eax
mov eax edx
leave
retn
sub_41ee7c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax + 0x1 ] 0x1
je r-xdata
mov eax [ eax + 0x2c ]
mov eax [ eax + 0x8 ]
jmp r-xdata
leave
retn
sub_41ee98
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax + 0x1 ] 0x1
je r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x2c ]
jmp r-xdata
leave
retn
sub_41eeb4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x2c ]
leave
retn
sub_41eec0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax + 0x1 ] 0x1
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax + 0x24 ]
jmp r-xdata
leave
retn
sub_41eedc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x20 ]
leave
retn
sub_41eee8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax + 0x1 ] 0x1
je r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x2c ]
jmp r-xdata
leave
retn
sub_41ef04
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov al [ eax + 0x12 ]
and al 0x1
and eax 0xff
leave
retn
sub_41ef18
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
leave
retn
sub_41ef24
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x13 ] al
leave
retn
sub_41ef34
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx eax [ eax + 0x13 ]
leave
retn
sub_41ef40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov al [ eax + 0x12 ]
and al 0x6
and eax 0xff
leave
retn
sub_41ef54
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x38 ]
mov edx 0xffffffff
test eax eax
jl r-xdata
mov eax edx
leave
retn
mov edx eax
sub_41ef6c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax + 0x1 ] 0x1
je r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax + 0x2c ]
jmp r-xdata
leave
retn
sub_41ef88
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
movsx ecx [ eax + 0x10 ]
mov [ eax + 0x10 ] dx
mov eax ecx
leave
retn
sub_41efa0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movsx eax [ eax + 0x10 ]
leave
retn
sub_41efac
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0xc ]
mov [ eax + 0xc ] edx
mov eax ecx
leave
retn
sub_41efc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
leave
retn
sub_41efcc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
test [ eax + 0x1 ] 0x1
je r-xdata
add [ eax + 0x4 ] edx
add [ eax + 0x24 ] edx
jmp r-xdata
leave
retn
sub_41efe8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
leave
retn
sub_41f054
push ebp
mov ebp esp
sub esp 0x8
movsx eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410048
leave
retn
sub_41f070
push ebp
mov ebp esp
sub esp 0x8
movsx eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410048
leave
retn
sub_41f08c
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40cf9c
leave
retn
sub_41f0a4
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40cf9c
leave
retn
sub_41f0bc
push ebp
mov ebp esp
sub esp 0x8
movsx eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ff54
leave
retn
sub_41f0d8
push ebp
mov ebp esp
sub esp 0x8
movsx eax [ ebp + 0x14 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ff54
leave
retn
sub_41f0f4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x12 ] 0x0
sete al
and eax 0xff
leave
retn
sub_41f108
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax + 0x1 ] 0x1
je r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x24 ]
jmp r-xdata
leave
retn
sub_41f124
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24 ] 0x0
setne al
and eax 0xff
leave
retn
sub_41f138
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x30 ] 0x0
setne al
and eax 0xff
leave
retn
sub_41f14c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
and al 0x8f
or al 0x40
mov [ edx + 0xc ] eax
mov eax edx
leave
retn
sub_41f160
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
sub edx eax
mov eax edx
leave
retn
sub_41f174
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
and eax 0x100
leave
retn
sub_41f714
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x38 ]
not eax
shr eax 0x1f
leave
retn
sub_41f758
push ebp
mov ebp esp
leave
retn
sub_41f760
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
leave
retn
sub_41f7b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
shr eax 0x9
and eax 0x1
leave
retn
sub_41f7c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ eax + 0x1 ] 0xfd
or [ eax + 0x1 ] 0x2
jmp r-xdata
leave
retn
sub_41f854
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
leave
retn
sub_41f860
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
and al 0x8f
or al 0x20
mov [ edx + 0xc ] eax
mov eax edx
leave
retn
sub_41f8a4
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
test [ eax + 0xd ] 0x60
je r-xdata
leave
retn
add esp 0xfffffff4
push edx
call sub_40e54c
sub_41f8c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
leave
retn
sub_41f8cc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
mov edx [ edx + 0x14 ]
sub edx eax
mov eax edx
leave
retn
sub_41f8e0
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
movsx eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_410f2c
leave
retn
sub_41f8fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
leave
retn
sub_41f908
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x14 ]
add eax [ ebp + 0xc ]
mov [ edx + 0x14 ] eax
leave
retn
sub_41f91c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
leave
retn
sub_41f928
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
movzx ecx [ edx + 0x14 ]
movzx eax [ ebp + 0xc ]
mov [ edx + 0x14 ] eax
mov eax ecx
leave
retn
sub_41f940
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
leave
retn
sub_41f94c
push ebp
mov ebp esp
sub esp 0x8
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410fec
leave
retn
sub_41f968
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410fb8
leave
retn
sub_41f9f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
and eax 0x800
leave
retn
sub_41fa38
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x8
leave
retn
sub_41fa44
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
leave
retn
sub_41fa6c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
leave
retn
sub_41fa78
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx eax [ eax + 0x12 ]
leave
retn
sub_41fa84
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d110
leave
retn
sub_41faa0
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d110
leave
retn
sub_41fabc
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d110
leave
retn
sub_41fd9c
push ebp
mov ebp esp
mov eax 0x1
leave
retn
sub_41fda8
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push [ ebp + 0x8 ]
call sub_410eb0
leave
retn
sub_41fdbc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dl [ ebp + 0xc ]
or [ eax + 0x12 ] dl
leave
retn
sub_41fdcc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
leave
retn
sub_41fddc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov ecx [ ebp + 0xc ]
or ecx edx
mov [ eax + 0xc ] ecx
mov eax edx
leave
retn
sub_41fe44
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x14 ] edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x18 ] ecx
leave
retn
sub_41fe5c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dl [ ebp + 0xc ]
or [ eax + 0x12 ] dl
leave
retn
sub_41fe98
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41083c
leave
retn
sub_41feb4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x47
leave
retn
sub_4200b0
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff8
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_410ed4
leave
retn
sub_4200ec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4c ]
leave
retn
sub_4200f8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
cmp edx [ eax + 0x8 ]
jae r-xdata
leave
retn
inc edx
mov [ eax + 0x4 ] edx
sub_42010c
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffff4
push 0x1
call sub_40cd9c
leave
retn
sub_420120
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ eax + 0x4 ] edx
mov eax ecx
leave
retn
sub_420134
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
leave
retn
sub_420140
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
shr eax 0x1
and eax 0x1
leave
retn
sub_420150
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ eax ] 0xfd
or [ eax ] 0x2
jmp r-xdata
leave
retn
sub_4201d4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov al [ ebp + 0xc ]
not al
and [ edx + 0x12 ] al
leave
retn
sub_4201e4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
mov eax [ ebp + 0xc ]
not eax
and eax ecx
mov [ edx + 0xc ] eax
mov eax ecx
leave
retn
sub_420240
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
mov [ eax + 0x8 ] edx
mov eax ecx
leave
retn
sub_420254
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
leave
retn
sub_420260
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e4e4
leave
retn
sub_42027c
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e4e4
leave
retn
sub_420298
push ebp
mov ebp esp
sub esp 0x8
add esp 0xfffffffc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e4e4
leave
retn
sub_4202b4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x34
leave
retn
sub_4202c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
leave
retn
sub_4202cc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
mov [ eax ] edx
mov eax ecx
leave
retn
sub_4202e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ eax + 0x14 ]
mov [ edx ] cl
inc [ eax + 0x14 ]
leave
retn
sub_4202f4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
or [ eax ] edx
leave
retn
sub_420304
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
mov eax edx
not eax
and eax [ ecx ]
and edx [ ebp + 0xc ]
or eax edx
mov [ ecx ] eax
leave
retn
